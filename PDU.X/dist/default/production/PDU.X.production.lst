

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Oct 08 01:50:04 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89  0000                     
    90 ;; Function _Receive_peek is unused but had its address taken
    91  0000                     
    92                           	psect	idataCOMRAM
    93  0029BE                     __pidataCOMRAM:
    94                           	opt stack 0
    95                           
    96                           ;initializer for _readwhat
    97  0029BE  0001               	dw	1
    98                           
    99                           ;initializer for _Transmit_stall
   100  0029C0  01                 	db	1
   101  0000                     _ANSELA	set	3896
   102  0000                     _ANSELB	set	3897
   103  0000                     _ANSELC	set	3898
   104  0000                     _ANSELCbits	set	3898
   105  0000                     _ANSELD	set	3899
   106  0000                     _ANSELE	set	3900
   107  0000                     _CCPTMRS1bits	set	3912
   108  0000                     _ANSB3	set	31179
   109  0000                     _ANSB4	set	31180
   110  0000                     _ANSD7	set	31199
   111  0000                     _ADCON0	set	4034
   112  0000                     _ADCON0bits	set	4034
   113  0000                     _ADCON1	set	4033
   114  0000                     _ADCON2	set	4032
   115  0000                     _ADCON2bits	set	4032
   116  0000                     _ADRESH	set	4036
   117  0000                     _ADRESL	set	4035
   118  0000                     _BAUD1CON	set	4024
   119  0000                     _CCP2CON	set	3942
   120  0000                     _CCPR2H	set	3944
   121  0000                     _CCPR2L	set	3943
   122  0000                     _EEADR	set	4009
   123  0000                     _EECON1bits	set	4006
   124  0000                     _EECON2	set	4007
   125  0000                     _EEDATA	set	4008
   126  0000                     _INTCON2bits	set	4081
   127  0000                     _INTCONbits	set	4082
   128  0000                     _IPR1bits	set	3999
   129  0000                     _LATA	set	3977
   130  0000                     _LATB	set	3978
   131  0000                     _LATC	set	3979
   132  0000                     _LATCbits	set	3979
   133  0000                     _LATD	set	3980
   134  0000                     _LATE	set	3981
   135  0000                     _OSCCON	set	4051
   136  0000                     _OSCCON2	set	4050
   137  0000                     _OSCTUNE	set	3995
   138  0000                     _PIE1bits	set	3997
   139  0000                     _PIR1bits	set	3998
   140  0000                     _PR2	set	4027
   141  0000                     _RC1STA	set	4011
   142  0000                     _RC1STAbits	set	4011
   143  0000                     _RCONbits	set	4048
   144  0000                     _RCREG1	set	4014
   145  0000                     _SPBRG1	set	4015
   146  0000                     _SPBRGH1	set	4016
   147  0000                     _T1CON	set	4045
   148  0000                     _T1CONbits	set	4045
   149  0000                     _T1GCON	set	4044
   150  0000                     _T1GCONbits	set	4044
   151  0000                     _T2CON	set	4026
   152  0000                     _T2CONbits	set	4026
   153  0000                     _TABLAT	set	4085
   154  0000                     _TBLPTRH	set	4087
   155  0000                     _TBLPTRL	set	4086
   156  0000                     _TBLPTRU	set	4088
   157  0000                     _TMR1H	set	4047
   158  0000                     _TMR1L	set	4046
   159  0000                     _TMR2	set	4028
   160  0000                     _TRISA	set	3986
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISC	set	3988
   163  0000                     _TRISCbits	set	3988
   164  0000                     _TRISD	set	3989
   165  0000                     _TRISDbits	set	3989
   166  0000                     _TRISE	set	3990
   167  0000                     _TX1STA	set	4012
   168  0000                     _TXREG1	set	4013
   169  0000                     _WPUB	set	3937
   170  0000                     _LATA3	set	31819
   171  0000                     _LATB0	set	31824
   172  0000                     _LATB3	set	31827
   173  0000                     _LATB4	set	31828
   174  0000                     _LATB5	set	31829
   175  0000                     _LATD4	set	31844
   176  0000                     _LATD5	set	31845
   177  0000                     _LATD6	set	31846
   178  0000                     _LATD7	set	31847
   179  0000                     _TRISB3	set	31899
   180  0000                     _TRISB4	set	31900
   181  0000                     _TRISB5	set	31901
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  0020DA                     __pcinit:
   187                           	opt stack 0
   188  0020DA                     start_initialization:
   189                           	opt stack 0
   190  0020DA                     __initialization:
   191                           	opt stack 0
   192                           
   193                           ; Clear objects allocated to BANK4 (206 bytes)
   194  0020DA  EE04  F000         	lfsr	0,__pbssBANK4
   195  0020DE  0ECE               	movlw	206
   196  0020E0                     clear_0:
   197  0020E0  6AEE               	clrf	postinc0,c
   198  0020E2  06E8               	decf	wreg,f,c
   199  0020E4  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK3 (206 bytes)
   202  0020E6  EE03  F000         	lfsr	0,__pbssBANK3
   203  0020EA  0ECE               	movlw	206
   204  0020EC                     clear_1:
   205  0020EC  6AEE               	clrf	postinc0,c
   206  0020EE  06E8               	decf	wreg,f,c
   207  0020F0  E1FD               	bnz	clear_1
   208                           
   209                           ; Clear objects allocated to BANK2 (200 bytes)
   210  0020F2  EE02  F000         	lfsr	0,__pbssBANK2
   211  0020F6  0EC8               	movlw	200
   212  0020F8                     clear_2:
   213  0020F8  6AEE               	clrf	postinc0,c
   214  0020FA  06E8               	decf	wreg,f,c
   215  0020FC  E1FD               	bnz	clear_2
   216                           
   217                           ; Clear objects allocated to BANK1 (254 bytes)
   218  0020FE  EE01  F000         	lfsr	0,__pbssBANK1
   219  002102  0EFE               	movlw	254
   220  002104                     clear_3:
   221  002104  6AEE               	clrf	postinc0,c
   222  002106  06E8               	decf	wreg,f,c
   223  002108  E1FD               	bnz	clear_3
   224                           
   225                           ; Clear objects allocated to BANK0 (114 bytes)
   226  00210A  EE00  F060         	lfsr	0,__pbssBANK0
   227  00210E  0E72               	movlw	114
   228  002110                     clear_4:
   229  002110  6AEE               	clrf	postinc0,c
   230  002112  06E8               	decf	wreg,f,c
   231  002114  E1FD               	bnz	clear_4
   232                           
   233                           ; Clear objects allocated to COMRAM (28 bytes)
   234  002116  EE00  F024         	lfsr	0,__pbssCOMRAM
   235  00211A  0E1C               	movlw	28
   236  00211C                     clear_5:
   237  00211C  6AEE               	clrf	postinc0,c
   238  00211E  06E8               	decf	wreg,f,c
   239  002120  E1FD               	bnz	clear_5
   240                           
   241                           ; Initialize objects allocated to COMRAM (3 bytes)
   242                           ; load TBLPTR registers with __pidataCOMRAM
   243  002122  0EBE               	movlw	low __pidataCOMRAM
   244  002124  6EF6               	movwf	tblptrl,c
   245  002126  0E29               	movlw	high __pidataCOMRAM
   246  002128  6EF7               	movwf	tblptrh,c
   247  00212A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   248  00212C  6EF8               	movwf	tblptru,c
   249  00212E  0009               	tblrd		*+	;fetch initializer
   250  002130  CFF5 F040          	movff	tablat,__pdataCOMRAM
   251  002134  0009               	tblrd		*+	;fetch initializer
   252  002136  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
   253  00213A  0009               	tblrd		*+	;fetch initializer
   254  00213C  CFF5 F042          	movff	tablat,__pdataCOMRAM+2
   255  002140                     end_of_initialization:
   256                           	opt stack 0
   257  002140                     __end_of__initialization:
   258                           	opt stack 0
   259  002140  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  002142  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  002144  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  002146  6EF8               	movwf	tblptru,c
   263  002148  0100               	movlb	0
   264  00214A  EFD9  F009         	goto	_main	;jump to C main() function
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           
   272                           	psect	bssCOMRAM
   273  000024                     __pbssCOMRAM:
   274                           	opt stack 0
   275  000024                     _data:
   276                           	opt stack 0
   277  000024                     	ds	12
   278  000030                     _alignErrorCounter:
   279                           	opt stack 0
   280  000030                     	ds	2
   281  000032                     _prev_pos:
   282                           	opt stack 0
   283  000032                     	ds	2
   284  000034                     _sendStructAddress:
   285                           	opt stack 0
   286  000034                     	ds	2
   287  000036                     _serial_peek:
   288                           	opt stack 0
   289  000036                     	ds	2
   290  000038                     _serial_write:
   291                           	opt stack 0
   292  000038                     	ds	2
   293  00003A                     _timer1ReloadVal:
   294                           	opt stack 0
   295  00003A                     	ds	2
   296  00003C                     updateComms@previousPowerState:
   297                           	opt stack 0
   298  00003C                     	ds	2
   299  00003E                     _MCSOn:
   300                           	opt stack 0
   301  00003E                     	ds	1
   302  00003F                     _moduleAddress:
   303                           	opt stack 0
   304  00003F                     	ds	1
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	dataCOMRAM
   313  000040                     __pdataCOMRAM:
   314                           	opt stack 0
   315  000040                     _readwhat:
   316                           	opt stack 0
   317  000040                     	ds	2
   318  000042                     _Transmit_stall:
   319                           	opt stack 0
   320  000042                     	ds	1
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           
   328                           	psect	bssBANK0
   329  000060                     __pbssBANK0:
   330                           	opt stack 0
   331  000060                     _Current:
   332                           	opt stack 0
   333  000060                     	ds	12
   334  00006C                     _CurrentADC:
   335                           	opt stack 0
   336  00006C                     	ds	12
   337  000078                     _Currentcomp:
   338                           	opt stack 0
   339  000078                     	ds	12
   340  000084                     _addressErrorCounter:
   341                           	opt stack 0
   342  000084                     	ds	2
   343  000086                     _crcErrorCounter:
   344                           	opt stack 0
   345  000086                     	ds	2
   346  000088                     _dataAdressErrorCounter:
   347                           	opt stack 0
   348  000088                     	ds	2
   349  00008A                     _group:
   350                           	opt stack 0
   351  00008A                     	ds	2
   352  00008C                     _receiveArrayAddress:
   353                           	opt stack 0
   354  00008C                     	ds	2
   355  00008E                     _serial_available:
   356                           	opt stack 0
   357  00008E                     	ds	2
   358  000090                     _serial_read:
   359                           	opt stack 0
   360  000090                     	ds	2
   361  000092                     _AKNAKsend:
   362                           	opt stack 0
   363  000092                     	ds	1
   364  000093                     _calc_CS:
   365                           	opt stack 0
   366  000093                     	ds	1
   367  000094                     _maxDataAddress:
   368                           	opt stack 0
   369  000094                     	ds	1
   370  000095                     _returnAddress:
   371                           	opt stack 0
   372  000095                     	ds	1
   373  000096                     _rx_address:
   374                           	opt stack 0
   375  000096                     	ds	1
   376  000097                     _rx_array_inx:
   377                           	opt stack 0
   378  000097                     	ds	1
   379  000098                     _rx_len:
   380                           	opt stack 0
   381  000098                     	ds	1
   382  000099                     _receiveArray:
   383                           	opt stack 0
   384  000099                     	ds	40
   385  0000C1                     _crc_buffer:
   386                           	opt stack 0
   387  0000C1                     	ds	17
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           
   395                           	psect	bssBANK1
   396  000100                     __pbssBANK1:
   397                           	opt stack 0
   398  000100                     _registers:
   399                           	opt stack 0
   400  000100                     	ds	48
   401  000130                     _ring_buffer:
   402                           	opt stack 0
   403  000130                     	ds	206
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           
   411                           	psect	bssBANK2
   412  000200                     __pbssBANK2:
   413                           	opt stack 0
   414  000200                     _rx_buffer:
   415                           	opt stack 0
   416  000200                     	ds	200
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           
   424                           	psect	bssBANK3
   425  000300                     __pbssBANK3:
   426                           	opt stack 0
   427  000300                     _input_buffer:
   428                           	opt stack 0
   429  000300                     	ds	206
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           
   437                           	psect	bssBANK4
   438  000400                     __pbssBANK4:
   439                           	opt stack 0
   440  000400                     _output_buffer:
   441                           	opt stack 0
   442  000400                     	ds	206
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           
   450                           	psect	cstackBANK0
   451  0000D2                     __pcstackBANK0:
   452                           	opt stack 0
   453  0000D2                     ?_FastTransfer_buffer_modulo_inc:
   454                           	opt stack 0
   455  0000D2                     ?_UART_buff_modulo_inc:
   456                           	opt stack 0
   457  0000D2                     ?_UART_buff_size:
   458                           	opt stack 0
   459  0000D2                     ?___awdiv:
   460                           	opt stack 0
   461  0000D2                     DATAEE_WriteByte@bData:
   462                           	opt stack 0
   463  0000D2                     DATAEE_ReadByte@bAdd:
   464                           	opt stack 0
   465  0000D2                     PWM4_LoadDutyValue@dutyValue:
   466                           	opt stack 0
   467  0000D2                     CRC8@data:
   468                           	opt stack 0
   469  0000D2                     FastTransfer_buffer_modulo_inc@value:
   470                           	opt stack 0
   471  0000D2                     crcBufS_put@_this:
   472                           	opt stack 0
   473  0000D2                     SetPin595@Reg:
   474                           	opt stack 0
   475  0000D2                     UART_buff_size@_this:
   476                           	opt stack 0
   477  0000D2                     UART_buff_modulo_inc@value:
   478                           	opt stack 0
   479  0000D2                     ___awdiv@dividend:
   480                           	opt stack 0
   481  0000D2                     memset@p1:
   482                           	opt stack 0
   483  0000D2                     Delay@wait:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x0
   487  0000D2                     	ds	1
   488  0000D3                     ??_ComputeStorageData:
   489  0000D3                     DATAEE_WriteByte@bAdd:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x1
   493  0000D3                     	ds	1
   494  0000D4                     ??_PWM4_LoadDutyValue:
   495  0000D4                     ?_Receive_available:
   496                           	opt stack 0
   497  0000D4                     DATAEE_WriteByte@GIEBitValue:
   498                           	opt stack 0
   499  0000D4                     CRC8@len:
   500                           	opt stack 0
   501  0000D4                     crcBufS_put@address:
   502                           	opt stack 0
   503  0000D4                     FastTransfer_buffer_modulo_inc@modulus:
   504                           	opt stack 0
   505  0000D4                     SetPin595@pin:
   506                           	opt stack 0
   507  0000D4                     UART_buff_modulo_inc@modulus:
   508                           	opt stack 0
   509  0000D4                     ___awdiv@divisor:
   510                           	opt stack 0
   511  0000D4                     memset@c:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x2
   515  0000D4                     	ds	1
   516  0000D5                     CRC8@sum:
   517                           	opt stack 0
   518  0000D5                     crcBufS_put@oldCRC:
   519                           	opt stack 0
   520  0000D5                     ComputeStorageData@i:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x3
   524  0000D5                     	ds	1
   525  0000D6                     ??_Delay:
   526  0000D6                     CRC8@extract:
   527                           	opt stack 0
   528  0000D6                     crcBufS_put@status:
   529                           	opt stack 0
   530  0000D6                     ___awdiv@counter:
   531                           	opt stack 0
   532  0000D6                     FastTransfer_buffer_modulo_inc@my_value:
   533                           	opt stack 0
   534  0000D6                     SetPin595@value:
   535                           	opt stack 0
   536  0000D6                     UART_buff_modulo_inc@my_value:
   537                           	opt stack 0
   538  0000D6                     memset@n:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x4
   542  0000D6                     	ds	1
   543  0000D7                     ??_crcBufS_put:
   544  0000D7                     CRC8@tempI:
   545                           	opt stack 0
   546  0000D7                     ___awdiv@sign:
   547                           	opt stack 0
   548  0000D7                     Delay@i:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x5
   552  0000D7                     	ds	1
   553  0000D8                     ??_SetPin595:
   554  0000D8                     CRC8@crc:
   555                           	opt stack 0
   556  0000D8                     FastTransfer_buffer_put@_this:
   557                           	opt stack 0
   558  0000D8                     UART_buff_put@_this:
   559                           	opt stack 0
   560  0000D8                     UART_buff_get@_this:
   561                           	opt stack 0
   562  0000D8                     ___awdiv@quotient:
   563                           	opt stack 0
   564  0000D8                     memset@p:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x6
   568  0000D8                     	ds	2
   569  0000DA                     ??_UART_buff_get:
   570  0000DA                     FastTransfer_buffer_put@towhere:
   571                           	opt stack 0
   572  0000DA                     UART_buff_put@c:
   573                           	opt stack 0
   574  0000DA                     begin@ptr:
   575                           	opt stack 0
   576  0000DA                     FastTransfer_buffer_flush@_this:
   577                           	opt stack 0
   578  0000DA                     UART_buff_init@_this:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x8
   582  0000DA                     	ds	1
   583  0000DB                     ??_UART_buff_put:
   584  0000DB                     FastTransfer_buffer_put@towhat:
   585                           	opt stack 0
   586  0000DB                     writeRegisters@val:
   587                           	opt stack 0
   588  0000DB                     PotSetpoint@new_point:
   589                           	opt stack 0
   590  0000DB                     PotClear@x:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x9
   594  0000DB                     	ds	1
   595  0000DC                     begin@maxSize:
   596                           	opt stack 0
   597  0000DC                     UART_buff_get@c:
   598                           	opt stack 0
   599  0000DC                     FastTransfer_buffer_flush@clearBuffer:
   600                           	opt stack 0
   601  0000DC                     EnableSlavePower@onof:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0xA
   605  0000DC                     	ds	1
   606  0000DD                     ??_FastTransfer_buffer_put:
   607  0000DD                     ??_PotSetpoint:
   608  0000DD                     begin@givenAddress:
   609                           	opt stack 0
   610  0000DD                     Send_put@_data:
   611                           	opt stack 0
   612  0000DD                     writeRegisters@i:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0xB
   616  0000DD                     	ds	1
   617  0000DE                     ??_receiveData:
   618  0000DE                     ??_sendData:
   619  0000DE                     begin@error:
   620                           	opt stack 0
   621  0000DE                     EnableSlavePower@slave:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0xC
   625  0000DE                     	ds	1
   626  0000DF                     sendData@whereToSend:
   627                           	opt stack 0
   628  0000DF                     processPowerRequest@powerSet:
   629                           	opt stack 0
   630  0000DF                     begin@stufftosend:
   631                           	opt stack 0
   632  0000DF                     ToSend@what:
   633                           	opt stack 0
   634  0000DF                     Clear595@i:
   635                           	opt stack 0
   636  0000DF                     PotSetpoint@set_point:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0xD
   640  0000DF                     	ds	1
   641  0000E0                     sendData@CS:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0xE
   645  0000E0                     	ds	1
   646  0000E1                     ToSend@where:
   647                           	opt stack 0
   648  0000E1                     begin@stufftoreceive:
   649                           	opt stack 0
   650  0000E1                     sendData@i:
   651                           	opt stack 0
   652  0000E1                     PotSetpoint@x:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xF
   656  0000E1                     	ds	2
   657  0000E3                     begin@stuffavailable:
   658                           	opt stack 0
   659  0000E3                     PotSetpoint@new_pos:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x11
   663  0000E3                     	ds	1
   664  0000E4                     receiveData@holder:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x12
   668  0000E4                     	ds	1
   669  0000E5                     begin@stuffpeek:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x13
   673  0000E5                     	ds	2
   674  0000E7                     receiveData@holder_1388:
   675                           	opt stack 0
   676                           
   677                           ; 3 bytes @ 0x15
   678  0000E7                     	ds	3
   679  0000EA                     receiveData@crcHolder:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x18
   683  0000EA                     	ds	1
   684  0000EB                     receiveData@crcHolder_1389:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x19
   688  0000EB                     	ds	1
   689  0000EC                     receiveData@u:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x1A
   693  0000EC                     	ds	2
   694  0000EE                     receiveData@r:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x1C
   698  0000EE                     	ds	2
   699  0000F0                     main@j:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x1E
   703  0000F0                     	ds	2
   704  0000F2                     main@i:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x20
   708  0000F2                     	ds	2
   709  0000F4                     main@UP:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x22
   713  0000F4                     	ds	1
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           
   721                           	psect	cstackCOMRAM
   722  000001                     __pcstackCOMRAM:
   723                           	opt stack 0
   724  000001                     ?_ADC_GetConversion:
   725                           	opt stack 0
   726  000001                     ?___wmul:
   727                           	opt stack 0
   728  000001                     ?i2_UART_buff_size:
   729                           	opt stack 0
   730  000001                     ?i2_UART_buff_modulo_inc:
   731                           	opt stack 0
   732  000001                     ___wmul@multiplier:
   733                           	opt stack 0
   734  000001                     i2SetPin595@Reg:
   735                           	opt stack 0
   736  000001                     i2UART_buff_size@_this:
   737                           	opt stack 0
   738  000001                     i2UART_buff_modulo_inc@value:
   739                           	opt stack 0
   740  000001                     i2Delay@wait:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x0
   744  000001                     	ds	2
   745  000003                     ??_ADC_GetConversion:
   746  000003                     ___wmul@multiplicand:
   747                           	opt stack 0
   748  000003                     i2SetPin595@pin:
   749                           	opt stack 0
   750  000003                     i2UART_buff_modulo_inc@modulus:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x2
   754  000003                     	ds	2
   755  000005                     ??i2_Delay:
   756  000005                     ADC_GetConversion@channel:
   757                           	opt stack 0
   758  000005                     ___wmul@product:
   759                           	opt stack 0
   760  000005                     i2SetPin595@value:
   761                           	opt stack 0
   762  000005                     i2UART_buff_modulo_inc@my_value:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x4
   766  000005                     	ds	1
   767  000006                     i2Delay@i:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x5
   771  000006                     	ds	1
   772  000007                     ??i2_SetPin595:
   773  000007                     i2UART_buff_put@_this:
   774                           	opt stack 0
   775  000007                     i2UART_buff_get@_this:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x6
   779  000007                     	ds	2
   780  000009                     ??i2_UART_buff_get:
   781  000009                     i2UART_buff_put@c:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x8
   785  000009                     	ds	1
   786  00000A                     ??i2_UART_buff_put:
   787  00000A                     i2writeRegisters@val:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x9
   791  00000A                     	ds	1
   792  00000B                     i2UART_buff_get@c:
   793                           	opt stack 0
   794  00000B                     i2EnableSlavePower@onof:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0xA
   798  00000B                     	ds	1
   799  00000C                     EUSART1_Receive_ISR@data:
   800                           	opt stack 0
   801  00000C                     i2writeRegisters@i:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0xB
   805  00000C                     	ds	1
   806  00000D                     i2EnableSlavePower@slave:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0xC
   810  00000D                     	ds	1
   811  00000E                     ??_FuseSystem:
   812  00000E                     ReadCurrent@gather:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0xD
   816  00000E                     	ds	4
   817  000012                     FuseSystem@i:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x11
   821  000012                     	ds	2
   822  000014                     FuseSystem@i_1528:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x13
   826  000014                     	ds	2
   827  000016                     ??_INTERRUPT_InterruptManager:
   828                           
   829                           ; 1 bytes @ 0x15
   830  000016                     	ds	14
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           
   838 ;;
   839 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   840 ;;
   841 ;; *************** function _main *****************
   842 ;; Defined at:
   843 ;;		line 11 in file "main.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  i               2   32[BANK0 ] int 
   848 ;;  j               2   30[BANK0 ] int 
   849 ;;  UP              1   34[BANK0 ] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   859 ;;      Params:         0       0       0       0       0       0       0
   860 ;;      Locals:         0       5       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0
   862 ;;      Totals:         0       5       0       0       0       0       0
   863 ;;Total ram usage:        5 bytes
   864 ;; Hardware stack levels required when called:   12
   865 ;; This function calls:
   866 ;;		_ComputeStorageData
   867 ;;		_CoolingCheck
   868 ;;		_CoolingStart
   869 ;;		_CoolingStop
   870 ;;		_DATAEE_WriteByte
   871 ;;		_PDUStartup
   872 ;;		_PWM4_LoadDutyValue
   873 ;;		_PotSetpoint
   874 ;;		_SYSTEM_Initialize
   875 ;;		_updateComms
   876 ;; This function is called by:
   877 ;;		Startup code after reset
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text0
   882  0013B2                     __ptext0:
   883                           	opt stack 0
   884  0013B2                     _main:
   885                           	opt stack 19
   886                           
   887                           ;main.c: 13: SYSTEM_Initialize();
   888                           
   889                           ;incstack = 0
   890  0013B2  EC32  F010         	call	_SYSTEM_Initialize	;wreg free
   891                           
   892                           ;main.c: 14: PDUStartup();
   893  0013B6  EC16  F011         	call	_PDUStartup	;wreg free
   894                           
   895                           ;main.c: 33: (INTCONbits.GIE = 1);
   896  0013BA  8EF2               	bsf	intcon,7,c	;volatile
   897                           
   898                           ;main.c: 36: (INTCONbits.PEIE = 1);
   899  0013BC  8CF2               	bsf	intcon,6,c	;volatile
   900                           
   901                           ;main.c: 43: DATAEE_WriteByte(0, 0x03);
   902  0013BE  0E03               	movlw	3
   903  0013C0  0100               	movlb	0	; () banked
   904  0013C2  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   905  0013C4  0E00               	movlw	0
   906  0013C6  EC10  F013         	call	_DATAEE_WriteByte
   907                           
   908                           ;main.c: 44: DATAEE_WriteByte(1, 0xE8);
   909  0013CA  0EE8               	movlw	232
   910  0013CC  0100               	movlb	0	; () banked
   911  0013CE  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   912  0013D0  0E01               	movlw	1
   913  0013D2  EC10  F013         	call	_DATAEE_WriteByte
   914                           
   915                           ;main.c: 45: DATAEE_WriteByte(2, 0x03);
   916  0013D6  0E03               	movlw	3
   917  0013D8  0100               	movlb	0	; () banked
   918  0013DA  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   919  0013DC  0E02               	movlw	2
   920  0013DE  EC10  F013         	call	_DATAEE_WriteByte
   921                           
   922                           ;main.c: 46: DATAEE_WriteByte(3, 0xE8);
   923  0013E2  0EE8               	movlw	232
   924  0013E4  0100               	movlb	0	; () banked
   925  0013E6  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   926  0013E8  0E03               	movlw	3
   927  0013EA  EC10  F013         	call	_DATAEE_WriteByte
   928                           
   929                           ;main.c: 47: DATAEE_WriteByte(4, 0x03);
   930  0013EE  0E03               	movlw	3
   931  0013F0  0100               	movlb	0	; () banked
   932  0013F2  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   933  0013F4  0E04               	movlw	4
   934  0013F6  EC10  F013         	call	_DATAEE_WriteByte
   935                           
   936                           ;main.c: 48: DATAEE_WriteByte(5, 0xE8);
   937  0013FA  0EE8               	movlw	232
   938  0013FC  0100               	movlb	0	; () banked
   939  0013FE  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   940  001400  0E05               	movlw	5
   941  001402  EC10  F013         	call	_DATAEE_WriteByte
   942                           
   943                           ;main.c: 49: DATAEE_WriteByte(6, 0x03);
   944  001406  0E03               	movlw	3
   945  001408  0100               	movlb	0	; () banked
   946  00140A  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   947  00140C  0E06               	movlw	6
   948  00140E  EC10  F013         	call	_DATAEE_WriteByte
   949                           
   950                           ;main.c: 50: DATAEE_WriteByte(7, 0xE8);
   951  001412  0EE8               	movlw	232
   952  001414  0100               	movlb	0	; () banked
   953  001416  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   954  001418  0E07               	movlw	7
   955  00141A  EC10  F013         	call	_DATAEE_WriteByte
   956                           
   957                           ;main.c: 51: DATAEE_WriteByte(8, 0x03);
   958  00141E  0E03               	movlw	3
   959  001420  0100               	movlb	0	; () banked
   960  001422  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   961  001424  0E08               	movlw	8
   962  001426  EC10  F013         	call	_DATAEE_WriteByte
   963                           
   964                           ;main.c: 52: DATAEE_WriteByte(9, 0xE8);
   965  00142A  0EE8               	movlw	232
   966  00142C  0100               	movlb	0	; () banked
   967  00142E  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   968  001430  0E09               	movlw	9
   969  001432  EC10  F013         	call	_DATAEE_WriteByte
   970                           
   971                           ;main.c: 53: DATAEE_WriteByte(10, 0x03);
   972  001436  0E03               	movlw	3
   973  001438  0100               	movlb	0	; () banked
   974  00143A  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   975  00143C  0E0A               	movlw	10
   976  00143E  EC10  F013         	call	_DATAEE_WriteByte
   977                           
   978                           ;main.c: 54: DATAEE_WriteByte(11, 0xE8);
   979  001442  0EE8               	movlw	232
   980  001444  0100               	movlb	0	; () banked
   981  001446  6FD2               	movwf	DATAEE_WriteByte@bData& (0+255),b
   982  001448  0E0B               	movlw	11
   983  00144A  EC10  F013         	call	_DATAEE_WriteByte
   984                           
   985                           ;main.c: 56: PotSetpoint(0);
   986  00144E  0E00               	movlw	0
   987  001450  0100               	movlb	0	; () banked
   988  001452  6FDC               	movwf	(PotSetpoint@new_point+1)& (0+255),b
   989  001454  0E00               	movlw	0
   990  001456  6FDB               	movwf	PotSetpoint@new_point& (0+255),b
   991  001458  EC7E  F00A         	call	_PotSetpoint	;wreg free
   992                           
   993                           ;main.c: 57: PWM4_LoadDutyValue(0);
   994  00145C  0E00               	movlw	0
   995  00145E  0100               	movlb	0	; () banked
   996  001460  6FD3               	movwf	(PWM4_LoadDutyValue@dutyValue+1)& (0+255),b
   997  001462  0E00               	movlw	0
   998  001464  6FD2               	movwf	PWM4_LoadDutyValue@dutyValue& (0+255),b
   999  001466  EC2E  F013         	call	_PWM4_LoadDutyValue	;wreg free
  1000                           
  1001                           ;main.c: 58: LATCbits.LATC5 = 0;
  1002  00146A  9A8B               	bcf	3979,5,c	;volatile
  1003                           
  1004                           ;main.c: 59: int i = 0;
  1005  00146C  0E00               	movlw	0
  1006  00146E  0100               	movlb	0	; () banked
  1007  001470  6FF3               	movwf	(main@i+1)& (0+255),b
  1008  001472  0E00               	movlw	0
  1009  001474  6FF2               	movwf	main@i& (0+255),b
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;main.c: 60: bool UP = 0;
  1013  001476  0E00               	movlw	0
  1014  001478  0100               	movlb	0	; () banked
  1015  00147A  6FF4               	movwf	main@UP& (0+255),b
  1016                           
  1017                           ;main.c: 61: ComputeStorageData();
  1018  00147C  EC98  F00B         	call	_ComputeStorageData	;wreg free
  1019                           
  1020                           ;main.c: 63: int j = 1;
  1021  001480  0E00               	movlw	0
  1022  001482  0100               	movlb	0	; () banked
  1023  001484  6FF1               	movwf	(main@j+1)& (0+255),b
  1024  001486  0E01               	movlw	1
  1025  001488  6FF0               	movwf	main@j& (0+255),b
  1026  00148A                     l4790:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;main.c: 65: updateComms();
  1030  00148A  EC68  F013         	call	_updateComms	;wreg free
  1031                           
  1032                           ;main.c: 66: if(CoolingCheck() && UP == 0){
  1033  00148E  ECDB  F014         	call	_CoolingCheck	;wreg free
  1034  001492  0900               	iorlw	0
  1035  001494  B4D8               	btfsc	status,2,c
  1036  001496  D00A               	goto	l4800
  1037  001498  0100               	movlb	0	; () banked
  1038  00149A  51F4               	movf	main@UP& (0+255),w,b
  1039  00149C  0100               	movlb	0	; () banked
  1040  00149E  A4D8               	btfss	status,2,c
  1041  0014A0  D005               	goto	l4800
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 67: UP = 1;
  1045  0014A2  0E01               	movlw	1
  1046  0014A4  0100               	movlb	0	; () banked
  1047  0014A6  6FF4               	movwf	main@UP& (0+255),b
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main.c: 68: CoolingStart();
  1051  0014A8  EC42  F014         	call	_CoolingStart	;wreg free
  1052  0014AC                     l4800:
  1053                           
  1054                           ;main.c: 69: }
  1055                           ;main.c: 70: if(!CoolingCheck() && UP == 1){
  1056  0014AC  ECDB  F014         	call	_CoolingCheck	;wreg free
  1057  0014B0  0900               	iorlw	0
  1058  0014B2  A4D8               	btfss	status,2,c
  1059  0014B4  D009               	goto	l4808
  1060  0014B6  0100               	movlb	0	; () banked
  1061  0014B8  05F4               	decf	main@UP& (0+255),w,b
  1062  0014BA  A4D8               	btfss	status,2,c
  1063  0014BC  D005               	goto	l4808
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;main.c: 71: UP = 0;
  1067  0014BE  0E00               	movlw	0
  1068  0014C0  0100               	movlb	0	; () banked
  1069  0014C2  6FF4               	movwf	main@UP& (0+255),b
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;main.c: 72: CoolingStop();
  1073  0014C4  ECB2  F014         	call	_CoolingStop	;wreg free
  1074  0014C8                     l4808:
  1075                           
  1076                           ;main.c: 73: }
  1077                           ;main.c: 74: i++;
  1078  0014C8  0100               	movlb	0	; () banked
  1079  0014CA  4BF2               	infsnz	main@i& (0+255),f,b
  1080  0014CC  2BF3               	incf	(main@i+1)& (0+255),f,b
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;main.c: 75: PWM4_LoadDutyValue(i);
  1084  0014CE  C0F2  F0D2         	movff	main@i,PWM4_LoadDutyValue@dutyValue
  1085  0014D2  C0F3  F0D3         	movff	main@i+1,PWM4_LoadDutyValue@dutyValue+1
  1086  0014D6  EC2E  F013         	call	_PWM4_LoadDutyValue	;wreg free
  1087                           
  1088                           ;main.c: 76: if(i>500){
  1089  0014DA  0100               	movlb	0	; () banked
  1090  0014DC  BFF3               	btfsc	(main@i+1)& (0+255),7,b
  1091  0014DE  D7D5               	goto	l4790
  1092  0014E0  0EF5               	movlw	245
  1093  0014E2  0100               	movlb	0	; () banked
  1094  0014E4  5DF2               	subwf	main@i& (0+255),w,b
  1095  0014E6  0E01               	movlw	1
  1096  0014E8  0100               	movlb	0	; () banked
  1097  0014EA  59F3               	subwfb	(main@i+1)& (0+255),w,b
  1098  0014EC  A0D8               	btfss	status,0,c
  1099  0014EE  D7CD               	goto	l4790
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;main.c: 77: i = 0;
  1103  0014F0  0E00               	movlw	0
  1104  0014F2  0100               	movlb	0	; () banked
  1105  0014F4  6FF3               	movwf	(main@i+1)& (0+255),b
  1106  0014F6  0E00               	movlw	0
  1107  0014F8  6FF2               	movwf	main@i& (0+255),b
  1108                           
  1109                           ; BSR set to: 0
  1110                           
  1111                           ; BSR set to: 0
  1112  0014FA  D7C7               	goto	l4790
  1113  0014FC                     __end_of_main:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           intcon	equ	0xFF2
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           status	equ	0xFD8
  1123                           
  1124 ;; *************** function _updateComms *****************
  1125 ;; Defined at:
  1126 ;;		line 21 in file "Communications.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         0       0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:   11
  1147 ;; This function calls:
  1148 ;;		_processPowerRequest
  1149 ;;		_receiveData
  1150 ;;		_respondECU
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text1
  1157  0026D0                     __ptext1:
  1158                           	opt stack 0
  1159  0026D0                     _updateComms:
  1160                           	opt stack 19
  1161                           
  1162                           ;Communications.c: 22: if (receiveData()) {
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;incstack = 0
  1166  0026D0  EC58  F000         	call	_receiveData	;wreg free
  1167  0026D4  0900               	iorlw	0
  1168  0026D6  B4D8               	btfsc	status,2,c
  1169  0026D8  0012               	return	
  1170                           
  1171                           ;Communications.c: 23: static int previousPowerState;
  1172                           ;Communications.c: 24: if (previousPowerState != receiveArray[1]) {
  1173  0026DA  503C               	movf	updateComms@previousPowerState,w,c
  1174  0026DC  0100               	movlb	0	; () banked
  1175  0026DE  199B               	xorwf	(_receiveArray+2)& (0+255),w,b	;volatile
  1176  0026E0  E105               	bnz	u4070
  1177  0026E2  503D               	movf	updateComms@previousPowerState+1,w,c
  1178  0026E4  0100               	movlb	0	; () banked
  1179  0026E6  199C               	xorwf	(_receiveArray+3)& (0+255),w,b	;volatile
  1180  0026E8  B4D8               	btfsc	status,2,c
  1181  0026EA  D00A               	goto	l4680
  1182  0026EC                     u4070:
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;Communications.c: 25: previousPowerState = receiveArray[1];
  1186  0026EC  C09B  F03C         	movff	_receiveArray+2,updateComms@previousPowerState	;volatile
  1187  0026F0  C09C  F03D         	movff	_receiveArray+3,updateComms@previousPowerState+1	;volatile
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;Communications.c: 26: processPowerRequest(previousPowerState);
  1191  0026F4  C03C  F0DF         	movff	updateComms@previousPowerState,processPowerRequest@powerSet
  1192  0026F8  C03D  F0E0         	movff	updateComms@previousPowerState+1,processPowerRequest@powerSet+1
  1193  0026FC  EC04  F00E         	call	_processPowerRequest	;wreg free
  1194  002700                     l4680:
  1195                           
  1196                           ;Communications.c: 27: }
  1197                           ;Communications.c: 28: respondECU();
  1198  002700  EC1B  F012         	call	_respondECU	;wreg free
  1199  002704  0012               	return	
  1200  002706                     __end_of_updateComms:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           intcon	equ	0xFF2
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function _respondECU *****************
  1212 ;; Defined at:
  1213 ;;		line 48 in file "Communications.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1227 ;;      Params:         0       0       0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0
  1230 ;;      Totals:         0       0       0       0       0       0       0
  1231 ;;Total ram usage:        0 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:   10
  1234 ;; This function calls:
  1235 ;;		_Delay
  1236 ;;		_ToSend
  1237 ;;		_sendData
  1238 ;; This function is called by:
  1239 ;;		_updateComms
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text2
  1244  002436                     __ptext2:
  1245                           	opt stack 0
  1246  002436                     _respondECU:
  1247                           	opt stack 19
  1248                           
  1249                           ;Communications.c: 49: LATCbits.LATC5 = 1;
  1250                           
  1251                           ;incstack = 0
  1252  002436  8A8B               	bsf	3979,5,c	;volatile
  1253                           
  1254                           ;Communications.c: 50: ToSend(0, 5);
  1255  002438  0E00               	movlw	0
  1256  00243A  0100               	movlb	0	; () banked
  1257  00243C  6FE0               	movwf	(ToSend@what+1)& (0+255),b
  1258  00243E  0E05               	movlw	5
  1259  002440  6FDF               	movwf	ToSend@what& (0+255),b
  1260  002442  0E00               	movlw	0
  1261  002444  EC0F  F014         	call	_ToSend
  1262                           
  1263                           ;Communications.c: 51: ToSend(1,0);
  1264  002448  0E00               	movlw	0
  1265  00244A  0100               	movlb	0	; () banked
  1266  00244C  6FE0               	movwf	(ToSend@what+1)& (0+255),b
  1267  00244E  0E00               	movlw	0
  1268  002450  6FDF               	movwf	ToSend@what& (0+255),b
  1269  002452  0E01               	movlw	1
  1270  002454  EC0F  F014         	call	_ToSend
  1271                           
  1272                           ;Communications.c: 52: Delay(5);
  1273  002458  0E05               	movlw	5
  1274  00245A  0100               	movlb	0	; () banked
  1275  00245C  6FD2               	movwf	Delay@wait& (0+255),b
  1276  00245E  0E00               	movlw	0
  1277  002460  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  1278  002462  0E00               	movlw	0
  1279  002464  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  1280  002466  0E00               	movlw	0
  1281  002468  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  1282  00246A  ECB9  F011         	call	_Delay	;wreg free
  1283                           
  1284                           ;Communications.c: 53: sendData(1);
  1285  00246E  0E01               	movlw	1
  1286  002470  EC89  F008         	call	_sendData
  1287                           
  1288                           ;Communications.c: 54: Delay(3);
  1289  002474  0E03               	movlw	3
  1290  002476  0100               	movlb	0	; () banked
  1291  002478  6FD2               	movwf	Delay@wait& (0+255),b
  1292  00247A  0E00               	movlw	0
  1293  00247C  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  1294  00247E  0E00               	movlw	0
  1295  002480  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  1296  002482  0E00               	movlw	0
  1297  002484  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  1298  002486  ECB9  F011         	call	_Delay	;wreg free
  1299                           
  1300                           ;Communications.c: 55: LATCbits.LATC5 = 0;
  1301  00248A  9A8B               	bcf	3979,5,c	;volatile
  1302  00248C  0012               	return		;funcret
  1303  00248E                     __end_of_respondECU:
  1304                           	opt stack 0
  1305                           tblptru	equ	0xFF8
  1306                           tblptrh	equ	0xFF7
  1307                           tblptrl	equ	0xFF6
  1308                           tablat	equ	0xFF5
  1309                           intcon	equ	0xFF2
  1310                           postinc0	equ	0xFEE
  1311                           wreg	equ	0xFE8
  1312                           status	equ	0xFD8
  1313                           
  1314 ;; *************** function _sendData *****************
  1315 ;; Defined at:
  1316 ;;		line 53 in file "FastTransfer.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  whereToSend     1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  whereToSend     1   13[BANK0 ] unsigned char 
  1321 ;;  i               2   15[BANK0 ] int 
  1322 ;;  CS              1   14[BANK0 ] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1332 ;;      Params:         0       0       0       0       0       0       0
  1333 ;;      Locals:         0       4       0       0       0       0       0
  1334 ;;      Temps:          0       1       0       0       0       0       0
  1335 ;;      Totals:         0       5       0       0       0       0       0
  1336 ;;Total ram usage:        5 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    9
  1339 ;; This function calls:
  1340 ;;		Absolute function
  1341 ;;		_CRC8
  1342 ;;		_FastTransfer_buffer_flush
  1343 ;;		_Send_put
  1344 ;;		_crcBufS_put
  1345 ;; This function is called by:
  1346 ;;		_respondECU
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text3
  1351  001112                     __ptext3:
  1352                           	opt stack 0
  1353  001112                     _sendData:
  1354                           	opt stack 19
  1355                           
  1356                           ;incstack = 0
  1357                           ;sendData@whereToSend stored from wreg
  1358  001112  0100               	movlb	0	; () banked
  1359  001114  6FDF               	movwf	sendData@whereToSend& (0+255),b
  1360                           
  1361                           ;FastTransfer.c: 56: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  1362  001116  C034  F0D2         	movff	_sendStructAddress,CRC8@data
  1363  00111A  C035  F0D3         	movff	_sendStructAddress+1,CRC8@data+1
  1364  00111E  C1FC  F0D4         	movff	_ring_buffer+204,CRC8@len
  1365  001122  ECDF  F010         	call	_CRC8	;wreg free
  1366  001126  0100               	movlb	0	; () banked
  1367  001128  6FE0               	movwf	sendData@CS& (0+255),b
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;FastTransfer.c: 58: serial_write(0x06);
  1371  00112A  D801               	call	u3328
  1372  00112C  D00B               	goto	l4190
  1373  00112E                     u3328:
  1374  00112E  0005               	push	
  1375  001130  6EFA               	movwf	pclath,c
  1376  001132  5038               	movf	_serial_write,w,c
  1377  001134  6EFD               	movwf	tosl,c
  1378  001136  5039               	movf	_serial_write+1,w,c
  1379  001138  6EFE               	movwf	tosh,c
  1380  00113A  50F8               	movf	tblptru,w,c
  1381  00113C  6EFF               	movwf	tosu,c
  1382  00113E  50FA               	movf	pclath,w,c
  1383  001140  0E06               	movlw	6
  1384  001142  0012               	return		;indir
  1385  001144                     l4190:
  1386                           
  1387                           ;FastTransfer.c: 59: serial_write(0x85);
  1388  001144  D801               	call	u3338
  1389  001146  D00B               	goto	l4192
  1390  001148                     u3338:
  1391  001148  0005               	push	
  1392  00114A  6EFA               	movwf	pclath,c
  1393  00114C  5038               	movf	_serial_write,w,c
  1394  00114E  6EFD               	movwf	tosl,c
  1395  001150  5039               	movf	_serial_write+1,w,c
  1396  001152  6EFE               	movwf	tosh,c
  1397  001154  50F8               	movf	tblptru,w,c
  1398  001156  6EFF               	movwf	tosu,c
  1399  001158  50FA               	movf	pclath,w,c
  1400  00115A  0E85               	movlw	133
  1401  00115C  0012               	return		;indir
  1402  00115E                     l4192:
  1403                           
  1404                           ;FastTransfer.c: 60: serial_write(whereToSend);
  1405  00115E  D801               	call	u3348
  1406  001160  D00C               	goto	l4194
  1407  001162                     u3348:
  1408  001162  0005               	push	
  1409  001164  6EFA               	movwf	pclath,c
  1410  001166  5038               	movf	_serial_write,w,c
  1411  001168  6EFD               	movwf	tosl,c
  1412  00116A  5039               	movf	_serial_write+1,w,c
  1413  00116C  6EFE               	movwf	tosh,c
  1414  00116E  50F8               	movf	tblptru,w,c
  1415  001170  6EFF               	movwf	tosu,c
  1416  001172  50FA               	movf	pclath,w,c
  1417  001174  0100               	movlb	0	; () banked
  1418  001176  51DF               	movf	sendData@whereToSend& (0+255),w,b
  1419  001178  0012               	return		;indir
  1420  00117A                     l4194:
  1421                           
  1422                           ;FastTransfer.c: 61: serial_write(moduleAddress);
  1423  00117A  D801               	call	u3358
  1424  00117C  D00B               	goto	l4196
  1425  00117E                     u3358:
  1426  00117E  0005               	push	
  1427  001180  6EFA               	movwf	pclath,c
  1428  001182  5038               	movf	_serial_write,w,c
  1429  001184  6EFD               	movwf	tosl,c
  1430  001186  5039               	movf	_serial_write+1,w,c
  1431  001188  6EFE               	movwf	tosh,c
  1432  00118A  50F8               	movf	tblptru,w,c
  1433  00118C  6EFF               	movwf	tosu,c
  1434  00118E  50FA               	movf	pclath,w,c
  1435  001190  503F               	movf	_moduleAddress,w,c
  1436  001192  0012               	return		;indir
  1437  001194                     l4196:
  1438                           
  1439                           ;FastTransfer.c: 62: serial_write(ring_buffer.count);
  1440  001194  D801               	call	u3368
  1441  001196  D00C               	goto	l4198
  1442  001198                     u3368:
  1443  001198  0005               	push	
  1444  00119A  6EFA               	movwf	pclath,c
  1445  00119C  5038               	movf	_serial_write,w,c
  1446  00119E  6EFD               	movwf	tosl,c
  1447  0011A0  5039               	movf	_serial_write+1,w,c
  1448  0011A2  6EFE               	movwf	tosh,c
  1449  0011A4  50F8               	movf	tblptru,w,c
  1450  0011A6  6EFF               	movwf	tosu,c
  1451  0011A8  50FA               	movf	pclath,w,c
  1452  0011AA  0101               	movlb	1	; () banked
  1453  0011AC  51FC               	movf	(_ring_buffer+204)& (0+255),w,b
  1454  0011AE  0012               	return		;indir
  1455  0011B0                     l4198:
  1456                           
  1457                           ;FastTransfer.c: 66: int i;
  1458                           ;FastTransfer.c: 67: for (i = 0; i < ring_buffer.count; i++) {
  1459  0011B0  0E00               	movlw	0
  1460  0011B2  0100               	movlb	0	; () banked
  1461  0011B4  6FE2               	movwf	(sendData@i+1)& (0+255),b
  1462  0011B6  0E00               	movlw	0
  1463  0011B8  6FE1               	movwf	sendData@i& (0+255),b
  1464  0011BA  D018               	goto	l4204
  1465  0011BC                     l4200:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;FastTransfer.c: 68: serial_write(*(sendStructAddress + i));
  1469  0011BC  D801               	call	u3378
  1470  0011BE  D013               	goto	l4202
  1471  0011C0                     u3378:
  1472  0011C0  0005               	push	
  1473  0011C2  6EFA               	movwf	pclath,c
  1474  0011C4  5038               	movf	_serial_write,w,c
  1475  0011C6  6EFD               	movwf	tosl,c
  1476  0011C8  5039               	movf	_serial_write+1,w,c
  1477  0011CA  6EFE               	movwf	tosh,c
  1478  0011CC  50F8               	movf	tblptru,w,c
  1479  0011CE  6EFF               	movwf	tosu,c
  1480  0011D0  50FA               	movf	pclath,w,c
  1481  0011D2  0100               	movlb	0	; () banked
  1482  0011D4  51E1               	movf	sendData@i& (0+255),w,b
  1483  0011D6  2434               	addwf	_sendStructAddress,w,c
  1484  0011D8  6ED9               	movwf	fsr2l,c
  1485  0011DA  0100               	movlb	0	; () banked
  1486  0011DC  51E2               	movf	(sendData@i+1)& (0+255),w,b
  1487  0011DE  2035               	addwfc	_sendStructAddress+1,w,c
  1488  0011E0  6EDA               	movwf	fsr2h,c
  1489  0011E2  50DF               	movf	indf2,w,c
  1490  0011E4  0012               	return		;indir
  1491  0011E6                     l4202:
  1492  0011E6  0100               	movlb	0	; () banked
  1493  0011E8  4BE1               	infsnz	sendData@i& (0+255),f,b
  1494  0011EA  2BE2               	incf	(sendData@i+1)& (0+255),f,b
  1495  0011EC                     l4204:
  1496                           
  1497                           ; BSR set to: 0
  1498  0011EC  0101               	movlb	1	; () banked
  1499  0011EE  51FC               	movf	(_ring_buffer+204)& (0+255),w,b
  1500  0011F0  0100               	movlb	0	; () banked
  1501  0011F2  5DE1               	subwf	sendData@i& (0+255),w,b
  1502  0011F4  0100               	movlb	0	; () banked
  1503  0011F6  51E2               	movf	(sendData@i+1)& (0+255),w,b
  1504  0011F8  0A80               	xorlw	128
  1505  0011FA  0100               	movlb	0	; () banked
  1506  0011FC  6FDE               	movwf	??_sendData& (0+255),b
  1507  0011FE  0101               	movlb	1	; () banked
  1508  001200  51FD               	movf	(_ring_buffer+205)& (0+255),w,b
  1509  001202  0A80               	xorlw	128
  1510  001204  0100               	movlb	0	; () banked
  1511  001206  59DE               	subwfb	??_sendData& (0+255),w,b
  1512  001208  A0D8               	btfss	status,0,c
  1513  00120A  D7D8               	goto	l4200
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;FastTransfer.c: 69: }
  1517                           ;FastTransfer.c: 72: serial_write(CS);
  1518                           
  1519                           ; BSR set to: 0
  1520  00120C  D801               	call	u3398
  1521  00120E  D00C               	goto	l4208
  1522  001210                     u3398:
  1523  001210  0005               	push	
  1524  001212  6EFA               	movwf	pclath,c
  1525  001214  5038               	movf	_serial_write,w,c
  1526  001216  6EFD               	movwf	tosl,c
  1527  001218  5039               	movf	_serial_write+1,w,c
  1528  00121A  6EFE               	movwf	tosh,c
  1529  00121C  50F8               	movf	tblptru,w,c
  1530  00121E  6EFF               	movwf	tosu,c
  1531  001220  50FA               	movf	pclath,w,c
  1532  001222  0100               	movlb	0	; () banked
  1533  001224  51E0               	movf	sendData@CS& (0+255),w,b
  1534  001226  0012               	return		;indir
  1535  001228                     l4208:
  1536                           
  1537                           ;FastTransfer.c: 75: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  1538  001228  0EC1               	movlw	low _crc_buffer
  1539  00122A  0100               	movlb	0	; () banked
  1540  00122C  6FD2               	movwf	crcBufS_put@_this& (0+255),b
  1541  00122E  0E00               	movlw	high _crc_buffer
  1542  001230  0100               	movlb	0	; () banked
  1543  001232  6FD3               	movwf	(crcBufS_put@_this+1)& (0+255),b
  1544  001234  C0DF  F0D4         	movff	sendData@whereToSend,crcBufS_put@address
  1545  001238  C0E0  F0D5         	movff	sendData@CS,crcBufS_put@oldCRC
  1546  00123C  0E00               	movlw	0
  1547  00123E  0100               	movlb	0	; () banked
  1548  001240  6FD6               	movwf	crcBufS_put@status& (0+255),b
  1549  001242  EC20  F00C         	call	_crcBufS_put
  1550                           
  1551                           ;FastTransfer.c: 78: FastTransfer_buffer_flush(&ring_buffer, 1);
  1552  001246  0E30               	movlw	low _ring_buffer
  1553  001248  0100               	movlb	0	; () banked
  1554  00124A  6FDA               	movwf	FastTransfer_buffer_flush@_this& (0+255),b
  1555  00124C  0E01               	movlw	high _ring_buffer
  1556  00124E  0100               	movlb	0	; () banked
  1557  001250  6FDB               	movwf	(FastTransfer_buffer_flush@_this+1)& (0+255),b
  1558  001252  0E00               	movlw	0
  1559  001254  0100               	movlb	0	; () banked
  1560  001256  6FDD               	movwf	(FastTransfer_buffer_flush@clearBuffer+1)& (0+255),b
  1561  001258  0E01               	movlw	1
  1562  00125A  6FDC               	movwf	FastTransfer_buffer_flush@clearBuffer& (0+255),b
  1563  00125C  ECA7  F010         	call	_FastTransfer_buffer_flush	;wreg free
  1564  001260  0012               	return		;funcret
  1565  001262                     __end_of_sendData:
  1566                           	opt stack 0
  1567                           tosu	equ	0xFFF
  1568                           tosh	equ	0xFFE
  1569                           tosl	equ	0xFFD
  1570                           pclath	equ	0xFFA
  1571                           tblptru	equ	0xFF8
  1572                           tblptrh	equ	0xFF7
  1573                           tblptrl	equ	0xFF6
  1574                           tablat	equ	0xFF5
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           indf2	equ	0xFDF
  1579                           fsr2h	equ	0xFDA
  1580                           fsr2l	equ	0xFD9
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function _crcBufS_put *****************
  1584 ;; Defined at:
  1585 ;;		line 322 in file "FastTransfer.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  _this           2    0[BANK0 ] PTR struct crcBufS
  1588 ;;		 -> crc_buffer(17), 
  1589 ;;  address         1    2[BANK0 ] unsigned char 
  1590 ;;  oldCRC          1    3[BANK0 ] unsigned char 
  1591 ;;  status          1    4[BANK0 ] unsigned char 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1603 ;;      Params:         0       5       0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0
  1605 ;;      Temps:          0       2       0       0       0       0       0
  1606 ;;      Totals:         0       7       0       0       0       0       0
  1607 ;;Total ram usage:        7 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    6
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_sendData
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text4
  1618  001840                     __ptext4:
  1619                           	opt stack 0
  1620  001840                     _crcBufS_put:
  1621                           	opt stack 21
  1622                           
  1623                           ;FastTransfer.c: 323: _this->buf[_this->head] = address;
  1624                           
  1625                           ;incstack = 0
  1626  001840  0100               	movlb	0	; () banked
  1627  001842  EE20 F00F          	lfsr	2,15
  1628  001846  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1629  001848  26D9               	addwf	fsr2l,f,c
  1630  00184A  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1631  00184C  22DA               	addwfc	fsr2h,f,c
  1632  00184E  CFDE F0D7          	movff	postinc2,??_crcBufS_put
  1633  001852  CFDD F0D8          	movff	postdec2,??_crcBufS_put+1
  1634  001856  0100               	movlb	0	; () banked
  1635  001858  51D7               	movf	??_crcBufS_put& (0+255),w,b
  1636  00185A  0100               	movlb	0	; () banked
  1637  00185C  25D2               	addwf	crcBufS_put@_this& (0+255),w,b
  1638  00185E  6ED9               	movwf	fsr2l,c
  1639  001860  0100               	movlb	0	; () banked
  1640  001862  51D8               	movf	(??_crcBufS_put+1)& (0+255),w,b
  1641  001864  0100               	movlb	0	; () banked
  1642  001866  21D3               	addwfc	(crcBufS_put@_this+1)& (0+255),w,b
  1643  001868  6EDA               	movwf	fsr2h,c
  1644  00186A  C0D4  FFDF         	movff	crcBufS_put@address,indf2
  1645                           
  1646                           ;FastTransfer.c: 324: _this->head++;
  1647  00186E  0100               	movlb	0	; () banked
  1648  001870  EE20 F00F          	lfsr	2,15
  1649  001874  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1650  001876  26D9               	addwf	fsr2l,f,c
  1651  001878  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1652  00187A  22DA               	addwfc	fsr2h,f,c
  1653  00187C  2ADE               	incf	postinc2,f,c
  1654  00187E  0E00               	movlw	0
  1655  001880  22DD               	addwfc	postdec2,f,c
  1656                           
  1657                           ;FastTransfer.c: 325: _this->buf[_this->head] = oldCRC;
  1658  001882  0100               	movlb	0	; () banked
  1659  001884  EE20 F00F          	lfsr	2,15
  1660  001888  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1661  00188A  26D9               	addwf	fsr2l,f,c
  1662  00188C  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1663  00188E  22DA               	addwfc	fsr2h,f,c
  1664  001890  CFDE F0D7          	movff	postinc2,??_crcBufS_put
  1665  001894  CFDD F0D8          	movff	postdec2,??_crcBufS_put+1
  1666  001898  0100               	movlb	0	; () banked
  1667  00189A  51D7               	movf	??_crcBufS_put& (0+255),w,b
  1668  00189C  0100               	movlb	0	; () banked
  1669  00189E  25D2               	addwf	crcBufS_put@_this& (0+255),w,b
  1670  0018A0  6ED9               	movwf	fsr2l,c
  1671  0018A2  0100               	movlb	0	; () banked
  1672  0018A4  51D8               	movf	(??_crcBufS_put+1)& (0+255),w,b
  1673  0018A6  0100               	movlb	0	; () banked
  1674  0018A8  21D3               	addwfc	(crcBufS_put@_this+1)& (0+255),w,b
  1675  0018AA  6EDA               	movwf	fsr2h,c
  1676  0018AC  C0D5  FFDF         	movff	crcBufS_put@oldCRC,indf2
  1677                           
  1678                           ;FastTransfer.c: 326: _this->head++;
  1679  0018B0  0100               	movlb	0	; () banked
  1680  0018B2  EE20 F00F          	lfsr	2,15
  1681  0018B6  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1682  0018B8  26D9               	addwf	fsr2l,f,c
  1683  0018BA  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1684  0018BC  22DA               	addwfc	fsr2h,f,c
  1685  0018BE  2ADE               	incf	postinc2,f,c
  1686  0018C0  0E00               	movlw	0
  1687  0018C2  22DD               	addwfc	postdec2,f,c
  1688                           
  1689                           ;FastTransfer.c: 327: _this->buf[_this->head] = status;
  1690  0018C4  0100               	movlb	0	; () banked
  1691  0018C6  EE20 F00F          	lfsr	2,15
  1692  0018CA  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1693  0018CC  26D9               	addwf	fsr2l,f,c
  1694  0018CE  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1695  0018D0  22DA               	addwfc	fsr2h,f,c
  1696  0018D2  CFDE F0D7          	movff	postinc2,??_crcBufS_put
  1697  0018D6  CFDD F0D8          	movff	postdec2,??_crcBufS_put+1
  1698  0018DA  0100               	movlb	0	; () banked
  1699  0018DC  51D7               	movf	??_crcBufS_put& (0+255),w,b
  1700  0018DE  0100               	movlb	0	; () banked
  1701  0018E0  25D2               	addwf	crcBufS_put@_this& (0+255),w,b
  1702  0018E2  6ED9               	movwf	fsr2l,c
  1703  0018E4  0100               	movlb	0	; () banked
  1704  0018E6  51D8               	movf	(??_crcBufS_put+1)& (0+255),w,b
  1705  0018E8  0100               	movlb	0	; () banked
  1706  0018EA  21D3               	addwfc	(crcBufS_put@_this+1)& (0+255),w,b
  1707  0018EC  6EDA               	movwf	fsr2h,c
  1708  0018EE  C0D6  FFDF         	movff	crcBufS_put@status,indf2
  1709                           
  1710                           ;FastTransfer.c: 328: _this->head++;
  1711  0018F2  0100               	movlb	0	; () banked
  1712  0018F4  EE20 F00F          	lfsr	2,15
  1713  0018F8  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1714  0018FA  26D9               	addwf	fsr2l,f,c
  1715  0018FC  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1716  0018FE  22DA               	addwfc	fsr2h,f,c
  1717  001900  2ADE               	incf	postinc2,f,c
  1718  001902  0E00               	movlw	0
  1719  001904  22DD               	addwfc	postdec2,f,c
  1720                           
  1721                           ;FastTransfer.c: 329: if (_this->head >= (5 * 3)) {
  1722  001906  0100               	movlb	0	; () banked
  1723  001908  EE20 F00F          	lfsr	2,15
  1724  00190C  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1725  00190E  26D9               	addwf	fsr2l,f,c
  1726  001910  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1727  001912  22DA               	addwfc	fsr2h,f,c
  1728  001914  0E01               	movlw	1
  1729  001916  BEDB               	btfsc	plusw2,7,c
  1730  001918  0012               	return	
  1731  00191A  0E01               	movlw	1
  1732  00191C  50DB               	movf	plusw2,w,c
  1733  00191E  E104               	bnz	u3240
  1734  001920  0E0F               	movlw	15
  1735  001922  5CDE               	subwf	postinc2,w,c
  1736  001924  A0D8               	btfss	status,0,c
  1737  001926  0012               	return	
  1738  001928                     u3240:
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;FastTransfer.c: 330: _this->head = 0;
  1742  001928  0100               	movlb	0	; () banked
  1743  00192A  EE20 F00F          	lfsr	2,15
  1744  00192E  51D2               	movf	crcBufS_put@_this& (0+255),w,b
  1745  001930  26D9               	addwf	fsr2l,f,c
  1746  001932  51D3               	movf	(crcBufS_put@_this+1)& (0+255),w,b
  1747  001934  22DA               	addwfc	fsr2h,f,c
  1748  001936  0E00               	movlw	0
  1749  001938  6EDE               	movwf	postinc2,c
  1750  00193A  0E00               	movlw	0
  1751  00193C  6EDD               	movwf	postdec2,c
  1752  00193E  0012               	return	
  1753  001940                     __end_of_crcBufS_put:
  1754                           	opt stack 0
  1755                           tosu	equ	0xFFF
  1756                           tosh	equ	0xFFE
  1757                           tosl	equ	0xFFD
  1758                           pclath	equ	0xFFA
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           intcon	equ	0xFF2
  1764                           postinc0	equ	0xFEE
  1765                           wreg	equ	0xFE8
  1766                           indf2	equ	0xFDF
  1767                           postinc2	equ	0xFDE
  1768                           postdec2	equ	0xFDD
  1769                           plusw2	equ	0xFDB
  1770                           fsr2h	equ	0xFDA
  1771                           fsr2l	equ	0xFD9
  1772                           status	equ	0xFD8
  1773                           
  1774 ;; *************** function _FastTransfer_buffer_flush *****************
  1775 ;; Defined at:
  1776 ;;		line 262 in file "FastTransfer.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  _this           2    8[BANK0 ] PTR struct ringBufS
  1779 ;;		 -> ring_buffer(206), 
  1780 ;;  clearBuffer     2   10[BANK0 ] const int 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1792 ;;      Params:         0       4       0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0
  1795 ;;      Totals:         0       4       0       0       0       0       0
  1796 ;;Total ram usage:        4 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    7
  1799 ;; This function calls:
  1800 ;;		_memset
  1801 ;; This function is called by:
  1802 ;;		_sendData
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text5
  1807  00214E                     __ptext5:
  1808                           	opt stack 0
  1809  00214E                     _FastTransfer_buffer_flush:
  1810                           	opt stack 20
  1811                           
  1812                           ;FastTransfer.c: 263: _this->count = 0;
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;incstack = 0
  1816  00214E  0100               	movlb	0	; () banked
  1817  002150  EE20 F0CC          	lfsr	2,204
  1818  002154  51DA               	movf	FastTransfer_buffer_flush@_this& (0+255),w,b
  1819  002156  26D9               	addwf	fsr2l,f,c
  1820  002158  51DB               	movf	(FastTransfer_buffer_flush@_this+1)& (0+255),w,b
  1821  00215A  22DA               	addwfc	fsr2h,f,c
  1822  00215C  0E00               	movlw	0
  1823  00215E  6EDE               	movwf	postinc2,c
  1824  002160  0E00               	movlw	0
  1825  002162  6EDD               	movwf	postdec2,c
  1826                           
  1827                           ;FastTransfer.c: 264: _this->head = 0;
  1828  002164  0100               	movlb	0	; () banked
  1829  002166  EE20 F0C8          	lfsr	2,200
  1830  00216A  51DA               	movf	FastTransfer_buffer_flush@_this& (0+255),w,b
  1831  00216C  26D9               	addwf	fsr2l,f,c
  1832  00216E  51DB               	movf	(FastTransfer_buffer_flush@_this+1)& (0+255),w,b
  1833  002170  22DA               	addwfc	fsr2h,f,c
  1834  002172  0E00               	movlw	0
  1835  002174  6EDE               	movwf	postinc2,c
  1836  002176  0E00               	movlw	0
  1837  002178  6EDD               	movwf	postdec2,c
  1838                           
  1839                           ;FastTransfer.c: 265: _this->tail = 0;
  1840  00217A  0100               	movlb	0	; () banked
  1841  00217C  EE20 F0CA          	lfsr	2,202
  1842  002180  51DA               	movf	FastTransfer_buffer_flush@_this& (0+255),w,b
  1843  002182  26D9               	addwf	fsr2l,f,c
  1844  002184  51DB               	movf	(FastTransfer_buffer_flush@_this+1)& (0+255),w,b
  1845  002186  22DA               	addwfc	fsr2h,f,c
  1846  002188  0E00               	movlw	0
  1847  00218A  6EDE               	movwf	postinc2,c
  1848  00218C  0E00               	movlw	0
  1849  00218E  6EDD               	movwf	postdec2,c
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;FastTransfer.c: 266: if (clearBuffer) {
  1853  002190  0100               	movlb	0	; () banked
  1854  002192  51DC               	movf	FastTransfer_buffer_flush@clearBuffer& (0+255),w,b
  1855  002194  0100               	movlb	0	; () banked
  1856  002196  11DD               	iorwf	(FastTransfer_buffer_flush@clearBuffer+1)& (0+255),w,b
  1857  002198  B4D8               	btfsc	status,2,c
  1858  00219A  0012               	return	
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;FastTransfer.c: 267: memset(_this->buf, 0, sizeof (_this->buf));
  1862  00219C  C0DA  F0D2         	movff	FastTransfer_buffer_flush@_this,memset@p1
  1863  0021A0  C0DB  F0D3         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  1864  0021A4  0E00               	movlw	0
  1865  0021A6  0100               	movlb	0	; () banked
  1866  0021A8  6FD5               	movwf	(memset@c+1)& (0+255),b
  1867  0021AA  0E00               	movlw	0
  1868  0021AC  6FD4               	movwf	memset@c& (0+255),b
  1869  0021AE  0E00               	movlw	0
  1870  0021B0  0100               	movlb	0	; () banked
  1871  0021B2  6FD7               	movwf	(memset@n+1)& (0+255),b
  1872  0021B4  0EC8               	movlw	200
  1873  0021B6  6FD6               	movwf	memset@n& (0+255),b
  1874  0021B8  EC83  F013         	call	_memset	;wreg free
  1875  0021BC  0012               	return	
  1876  0021BE                     __end_of_FastTransfer_buffer_flush:
  1877                           	opt stack 0
  1878                           tosu	equ	0xFFF
  1879                           tosh	equ	0xFFE
  1880                           tosl	equ	0xFFD
  1881                           pclath	equ	0xFFA
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           intcon	equ	0xFF2
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           indf2	equ	0xFDF
  1890                           postinc2	equ	0xFDE
  1891                           postdec2	equ	0xFDD
  1892                           plusw2	equ	0xFDB
  1893                           fsr2h	equ	0xFDA
  1894                           fsr2l	equ	0xFD9
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _ToSend *****************
  1898 ;; Defined at:
  1899 ;;		line 217 in file "FastTransfer.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  where           1    wreg     unsigned char 
  1902 ;;  what            2   13[BANK0 ] unsigned int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  where           1   15[BANK0 ] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         0       2       0       0       0       0       0
  1915 ;;      Locals:         0       1       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0
  1917 ;;      Totals:         0       3       0       0       0       0       0
  1918 ;;Total ram usage:        3 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    8
  1921 ;; This function calls:
  1922 ;;		_FastTransfer_buffer_put
  1923 ;; This function is called by:
  1924 ;;		_respondECU
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text6
  1929  00281E                     __ptext6:
  1930                           	opt stack 0
  1931  00281E                     _ToSend:
  1932                           	opt stack 20
  1933                           
  1934                           ;incstack = 0
  1935                           ;ToSend@where stored from wreg
  1936  00281E  0100               	movlb	0	; () banked
  1937  002820  6FE1               	movwf	ToSend@where& (0+255),b
  1938                           
  1939                           ;FastTransfer.c: 218: FastTransfer_buffer_put(&ring_buffer, where, what);
  1940  002822  0E30               	movlw	low _ring_buffer
  1941  002824  0100               	movlb	0	; () banked
  1942  002826  6FD8               	movwf	FastTransfer_buffer_put@_this& (0+255),b
  1943  002828  0E01               	movlw	high _ring_buffer
  1944  00282A  0100               	movlb	0	; () banked
  1945  00282C  6FD9               	movwf	(FastTransfer_buffer_put@_this+1)& (0+255),b
  1946  00282E  C0E1  F0DA         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  1947  002832  C0DF  F0DB         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  1948  002836  C0E0  F0DC         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  1949  00283A  EC09  F007         	call	_FastTransfer_buffer_put	;wreg free
  1950  00283E  0012               	return		;funcret
  1951  002840                     __end_of_ToSend:
  1952                           	opt stack 0
  1953                           tosu	equ	0xFFF
  1954                           tosh	equ	0xFFE
  1955                           tosl	equ	0xFFD
  1956                           pclath	equ	0xFFA
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           intcon	equ	0xFF2
  1962                           postinc0	equ	0xFEE
  1963                           wreg	equ	0xFE8
  1964                           indf2	equ	0xFDF
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           plusw2	equ	0xFDB
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _FastTransfer_buffer_put *****************
  1973 ;; Defined at:
  1974 ;;		line 224 in file "FastTransfer.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  _this           2    6[BANK0 ] PTR struct ringBufS
  1977 ;;		 -> ring_buffer(206), 
  1978 ;;  towhere         1    8[BANK0 ] unsigned char 
  1979 ;;  towhat          2    9[BANK0 ] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1991 ;;      Params:         0       5       0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0
  1993 ;;      Temps:          0       2       0       0       0       0       0
  1994 ;;      Totals:         0       7       0       0       0       0       0
  1995 ;;Total ram usage:        7 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    7
  1998 ;; This function calls:
  1999 ;;		_FastTransfer_buffer_modulo_inc
  2000 ;; This function is called by:
  2001 ;;		_ToSend
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text7
  2006  000E12                     __ptext7:
  2007                           	opt stack 0
  2008  000E12                     _FastTransfer_buffer_put:
  2009                           	opt stack 20
  2010                           
  2011                           ;FastTransfer.c: 226: group.integer = towhat;
  2012                           
  2013                           ;incstack = 0
  2014  000E12  C0DB  F08A         	movff	FastTransfer_buffer_put@towhat,_group
  2015  000E16  C0DC  F08B         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  2016                           
  2017                           ;FastTransfer.c: 228: if (_this->count < (200 - 3)) {
  2018  000E1A  0100               	movlb	0	; () banked
  2019  000E1C  EE20 F0CC          	lfsr	2,204
  2020  000E20  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2021  000E22  26D9               	addwf	fsr2l,f,c
  2022  000E24  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2023  000E26  22DA               	addwfc	fsr2h,f,c
  2024  000E28  0E01               	movlw	1
  2025  000E2A  BEDB               	btfsc	plusw2,7,c
  2026  000E2C  D007               	goto	l4090
  2027  000E2E  0E01               	movlw	1
  2028  000E30  50DB               	movf	plusw2,w,c
  2029  000E32  E103               	bnz	u3261
  2030  000E34  0EC5               	movlw	197
  2031  000E36  5CDE               	subwf	postinc2,w,c
  2032  000E38  B0D8               	btfsc	status,0,c
  2033  000E3A                     u3261:
  2034  000E3A  0012               	return	
  2035  000E3C                     l4090:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;FastTransfer.c: 229: _this->buf[_this->head] = towhere;
  2039  000E3C  0100               	movlb	0	; () banked
  2040  000E3E  EE20 F0C8          	lfsr	2,200
  2041  000E42  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2042  000E44  26D9               	addwf	fsr2l,f,c
  2043  000E46  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2044  000E48  22DA               	addwfc	fsr2h,f,c
  2045  000E4A  CFDE F0DD          	movff	postinc2,??_FastTransfer_buffer_put
  2046  000E4E  CFDD F0DE          	movff	postdec2,??_FastTransfer_buffer_put+1
  2047  000E52  0100               	movlb	0	; () banked
  2048  000E54  51DD               	movf	??_FastTransfer_buffer_put& (0+255),w,b
  2049  000E56  0100               	movlb	0	; () banked
  2050  000E58  25D8               	addwf	FastTransfer_buffer_put@_this& (0+255),w,b
  2051  000E5A  6ED9               	movwf	fsr2l,c
  2052  000E5C  0100               	movlb	0	; () banked
  2053  000E5E  51DE               	movf	(??_FastTransfer_buffer_put+1)& (0+255),w,b
  2054  000E60  0100               	movlb	0	; () banked
  2055  000E62  21D9               	addwfc	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2056  000E64  6EDA               	movwf	fsr2h,c
  2057  000E66  C0DA  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;FastTransfer.c: 230: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2061  000E6A  0100               	movlb	0	; () banked
  2062  000E6C  EE20 F0C8          	lfsr	2,200
  2063  000E70  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2064  000E72  26D9               	addwf	fsr2l,f,c
  2065  000E74  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2066  000E76  22DA               	addwfc	fsr2h,f,c
  2067  000E78  CFDE F0D2          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2068  000E7C  CFDD F0D3          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2069  000E80  0E00               	movlw	0
  2070  000E82  0100               	movlb	0	; () banked
  2071  000E84  6FD5               	movwf	(FastTransfer_buffer_modulo_inc@modulus+1)& (0+255),b
  2072  000E86  0EC8               	movlw	200
  2073  000E88  6FD4               	movwf	FastTransfer_buffer_modulo_inc@modulus& (0+255),b
  2074  000E8A  ECD4  F012         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2075  000E8E  0100               	movlb	0	; () banked
  2076  000E90  EE20 F0C8          	lfsr	2,200
  2077  000E94  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2078  000E96  26D9               	addwf	fsr2l,f,c
  2079  000E98  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2080  000E9A  22DA               	addwfc	fsr2h,f,c
  2081  000E9C  0100               	movlb	0	; () banked
  2082  000E9E  C0D2  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2083  000EA2  0100               	movlb	0	; () banked
  2084  000EA4  C0D3  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;FastTransfer.c: 231: ++_this->count;
  2088  000EA8  0100               	movlb	0	; () banked
  2089  000EAA  EE20 F0CC          	lfsr	2,204
  2090  000EAE  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2091  000EB0  26D9               	addwf	fsr2l,f,c
  2092  000EB2  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2093  000EB4  22DA               	addwfc	fsr2h,f,c
  2094  000EB6  2ADE               	incf	postinc2,f,c
  2095  000EB8  0E00               	movlw	0
  2096  000EBA  22DD               	addwfc	postdec2,f,c
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;FastTransfer.c: 232: _this->buf[_this->head] = group.parts[0];
  2100  000EBC  0100               	movlb	0	; () banked
  2101  000EBE  EE20 F0C8          	lfsr	2,200
  2102  000EC2  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2103  000EC4  26D9               	addwf	fsr2l,f,c
  2104  000EC6  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2105  000EC8  22DA               	addwfc	fsr2h,f,c
  2106  000ECA  CFDE F0DD          	movff	postinc2,??_FastTransfer_buffer_put
  2107  000ECE  CFDD F0DE          	movff	postdec2,??_FastTransfer_buffer_put+1
  2108  000ED2  0100               	movlb	0	; () banked
  2109  000ED4  51DD               	movf	??_FastTransfer_buffer_put& (0+255),w,b
  2110  000ED6  0100               	movlb	0	; () banked
  2111  000ED8  25D8               	addwf	FastTransfer_buffer_put@_this& (0+255),w,b
  2112  000EDA  6ED9               	movwf	fsr2l,c
  2113  000EDC  0100               	movlb	0	; () banked
  2114  000EDE  51DE               	movf	(??_FastTransfer_buffer_put+1)& (0+255),w,b
  2115  000EE0  0100               	movlb	0	; () banked
  2116  000EE2  21D9               	addwfc	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2117  000EE4  6EDA               	movwf	fsr2h,c
  2118  000EE6  C08A  FFDF         	movff	_group,indf2
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;FastTransfer.c: 233: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2122  000EEA  0100               	movlb	0	; () banked
  2123  000EEC  EE20 F0C8          	lfsr	2,200
  2124  000EF0  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2125  000EF2  26D9               	addwf	fsr2l,f,c
  2126  000EF4  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2127  000EF6  22DA               	addwfc	fsr2h,f,c
  2128  000EF8  CFDE F0D2          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2129  000EFC  CFDD F0D3          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2130  000F00  0E00               	movlw	0
  2131  000F02  0100               	movlb	0	; () banked
  2132  000F04  6FD5               	movwf	(FastTransfer_buffer_modulo_inc@modulus+1)& (0+255),b
  2133  000F06  0EC8               	movlw	200
  2134  000F08  6FD4               	movwf	FastTransfer_buffer_modulo_inc@modulus& (0+255),b
  2135  000F0A  ECD4  F012         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2136  000F0E  0100               	movlb	0	; () banked
  2137  000F10  EE20 F0C8          	lfsr	2,200
  2138  000F14  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2139  000F16  26D9               	addwf	fsr2l,f,c
  2140  000F18  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2141  000F1A  22DA               	addwfc	fsr2h,f,c
  2142  000F1C  0100               	movlb	0	; () banked
  2143  000F1E  C0D2  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2144  000F22  0100               	movlb	0	; () banked
  2145  000F24  C0D3  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2146                           
  2147                           ;FastTransfer.c: 234: ++_this->count;
  2148  000F28  0100               	movlb	0	; () banked
  2149  000F2A  EE20 F0CC          	lfsr	2,204
  2150  000F2E  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2151  000F30  26D9               	addwf	fsr2l,f,c
  2152  000F32  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2153  000F34  22DA               	addwfc	fsr2h,f,c
  2154  000F36  2ADE               	incf	postinc2,f,c
  2155  000F38  0E00               	movlw	0
  2156  000F3A  22DD               	addwfc	postdec2,f,c
  2157                           
  2158                           ;FastTransfer.c: 235: _this->buf[_this->head] = group.parts[1];
  2159  000F3C  0100               	movlb	0	; () banked
  2160  000F3E  EE20 F0C8          	lfsr	2,200
  2161  000F42  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2162  000F44  26D9               	addwf	fsr2l,f,c
  2163  000F46  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2164  000F48  22DA               	addwfc	fsr2h,f,c
  2165  000F4A  CFDE F0DD          	movff	postinc2,??_FastTransfer_buffer_put
  2166  000F4E  CFDD F0DE          	movff	postdec2,??_FastTransfer_buffer_put+1
  2167  000F52  0100               	movlb	0	; () banked
  2168  000F54  51DD               	movf	??_FastTransfer_buffer_put& (0+255),w,b
  2169  000F56  0100               	movlb	0	; () banked
  2170  000F58  25D8               	addwf	FastTransfer_buffer_put@_this& (0+255),w,b
  2171  000F5A  6ED9               	movwf	fsr2l,c
  2172  000F5C  0100               	movlb	0	; () banked
  2173  000F5E  51DE               	movf	(??_FastTransfer_buffer_put+1)& (0+255),w,b
  2174  000F60  0100               	movlb	0	; () banked
  2175  000F62  21D9               	addwfc	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2176  000F64  6EDA               	movwf	fsr2h,c
  2177  000F66  C08B  FFDF         	movff	_group+1,indf2
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;FastTransfer.c: 236: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  2181  000F6A  0100               	movlb	0	; () banked
  2182  000F6C  EE20 F0C8          	lfsr	2,200
  2183  000F70  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2184  000F72  26D9               	addwf	fsr2l,f,c
  2185  000F74  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2186  000F76  22DA               	addwfc	fsr2h,f,c
  2187  000F78  CFDE F0D2          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  2188  000F7C  CFDD F0D3          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  2189  000F80  0E00               	movlw	0
  2190  000F82  0100               	movlb	0	; () banked
  2191  000F84  6FD5               	movwf	(FastTransfer_buffer_modulo_inc@modulus+1)& (0+255),b
  2192  000F86  0EC8               	movlw	200
  2193  000F88  6FD4               	movwf	FastTransfer_buffer_modulo_inc@modulus& (0+255),b
  2194  000F8A  ECD4  F012         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  2195  000F8E  0100               	movlb	0	; () banked
  2196  000F90  EE20 F0C8          	lfsr	2,200
  2197  000F94  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2198  000F96  26D9               	addwf	fsr2l,f,c
  2199  000F98  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2200  000F9A  22DA               	addwfc	fsr2h,f,c
  2201  000F9C  0100               	movlb	0	; () banked
  2202  000F9E  C0D2  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  2203  000FA2  0100               	movlb	0	; () banked
  2204  000FA4  C0D3  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;FastTransfer.c: 237: ++_this->count;
  2208  000FA8  0100               	movlb	0	; () banked
  2209  000FAA  EE20 F0CC          	lfsr	2,204
  2210  000FAE  51D8               	movf	FastTransfer_buffer_put@_this& (0+255),w,b
  2211  000FB0  26D9               	addwf	fsr2l,f,c
  2212  000FB2  51D9               	movf	(FastTransfer_buffer_put@_this+1)& (0+255),w,b
  2213  000FB4  22DA               	addwfc	fsr2h,f,c
  2214  000FB6  2ADE               	incf	postinc2,f,c
  2215  000FB8  0E00               	movlw	0
  2216  000FBA  22DD               	addwfc	postdec2,f,c
  2217  000FBC  0012               	return	
  2218  000FBE                     __end_of_FastTransfer_buffer_put:
  2219                           	opt stack 0
  2220                           tosu	equ	0xFFF
  2221                           tosh	equ	0xFFE
  2222                           tosl	equ	0xFFD
  2223                           pclath	equ	0xFFA
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           intcon	equ	0xFF2
  2229                           postinc0	equ	0xFEE
  2230                           wreg	equ	0xFE8
  2231                           indf2	equ	0xFDF
  2232                           postinc2	equ	0xFDE
  2233                           postdec2	equ	0xFDD
  2234                           plusw2	equ	0xFDB
  2235                           fsr2h	equ	0xFDA
  2236                           fsr2l	equ	0xFD9
  2237                           status	equ	0xFD8
  2238                           
  2239 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  2240 ;; Defined at:
  2241 ;;		line 274 in file "FastTransfer.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  value           2    0[BANK0 ] const unsigned int 
  2244 ;;  modulus         2    2[BANK0 ] const unsigned int 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  my_value        2    4[BANK0 ] unsigned int 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2    0[BANK0 ] unsigned int 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2256 ;;      Params:         0       4       0       0       0       0       0
  2257 ;;      Locals:         0       2       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0
  2259 ;;      Totals:         0       6       0       0       0       0       0
  2260 ;;Total ram usage:        6 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    6
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_FastTransfer_buffer_put
  2267 ;;		_FastTransfer_buffer_get
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text8
  2272  0025A8                     __ptext8:
  2273                           	opt stack 0
  2274  0025A8                     _FastTransfer_buffer_modulo_inc:
  2275                           	opt stack 20
  2276                           
  2277                           ;FastTransfer.c: 275: unsigned int my_value = value + 1;
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;incstack = 0
  2281  0025A8  0E01               	movlw	1
  2282  0025AA  0100               	movlb	0	; () banked
  2283  0025AC  25D2               	addwf	FastTransfer_buffer_modulo_inc@value& (0+255),w,b
  2284  0025AE  0100               	movlb	0	; () banked
  2285  0025B0  6FD6               	movwf	FastTransfer_buffer_modulo_inc@my_value& (0+255),b
  2286  0025B2  0E00               	movlw	0
  2287  0025B4  0100               	movlb	0	; () banked
  2288  0025B6  21D3               	addwfc	(FastTransfer_buffer_modulo_inc@value+1)& (0+255),w,b
  2289  0025B8  0100               	movlb	0	; () banked
  2290  0025BA  6FD7               	movwf	(FastTransfer_buffer_modulo_inc@my_value+1)& (0+255),b
  2291                           
  2292                           ;FastTransfer.c: 276: if (my_value >= modulus) {
  2293  0025BC  0100               	movlb	0	; () banked
  2294  0025BE  51D4               	movf	FastTransfer_buffer_modulo_inc@modulus& (0+255),w,b
  2295  0025C0  0100               	movlb	0	; () banked
  2296  0025C2  5DD6               	subwf	FastTransfer_buffer_modulo_inc@my_value& (0+255),w,b
  2297  0025C4  0100               	movlb	0	; () banked
  2298  0025C6  51D5               	movf	(FastTransfer_buffer_modulo_inc@modulus+1)& (0+255),w,b
  2299  0025C8  0100               	movlb	0	; () banked
  2300  0025CA  59D7               	subwfb	(FastTransfer_buffer_modulo_inc@my_value+1)& (0+255),w,b
  2301  0025CC  A0D8               	btfss	status,0,c
  2302  0025CE  D005               	goto	l4014
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;FastTransfer.c: 277: my_value = 0;
  2306  0025D0  0E00               	movlw	0
  2307  0025D2  0100               	movlb	0	; () banked
  2308  0025D4  6FD7               	movwf	(FastTransfer_buffer_modulo_inc@my_value+1)& (0+255),b
  2309  0025D6  0E00               	movlw	0
  2310  0025D8  6FD6               	movwf	FastTransfer_buffer_modulo_inc@my_value& (0+255),b
  2311  0025DA                     l4014:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;FastTransfer.c: 278: }
  2315                           ;FastTransfer.c: 279: return (my_value);
  2316  0025DA  C0D6  F0D2         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  2317  0025DE  C0D7  F0D3         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  2318  0025E2  0012               	return	
  2319  0025E4                     __end_of_FastTransfer_buffer_modulo_inc:
  2320                           	opt stack 0
  2321                           tosu	equ	0xFFF
  2322                           tosh	equ	0xFFE
  2323                           tosl	equ	0xFFD
  2324                           pclath	equ	0xFFA
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           intcon	equ	0xFF2
  2330                           postinc0	equ	0xFEE
  2331                           wreg	equ	0xFE8
  2332                           indf2	equ	0xFDF
  2333                           postinc2	equ	0xFDE
  2334                           postdec2	equ	0xFDD
  2335                           plusw2	equ	0xFDB
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function _receiveData *****************
  2341 ;; Defined at:
  2342 ;;		line 82 in file "FastTransfer.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  holder          3   21[BANK0 ] unsigned char [3]
  2347 ;;  crcHolder       1   25[BANK0 ] unsigned char 
  2348 ;;  holder          3   18[BANK0 ] unsigned char [3]
  2349 ;;  crcHolder       1   24[BANK0 ] unsigned char 
  2350 ;;  u               2   26[BANK0 ] int 
  2351 ;;  r               2   28[BANK0 ] int 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      unsigned char 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2361 ;;      Params:         0       0       0       0       0       0       0
  2362 ;;      Locals:         0      12       0       0       0       0       0
  2363 ;;      Temps:          0       6       0       0       0       0       0
  2364 ;;      Totals:         0      18       0       0       0       0       0
  2365 ;;Total ram usage:       18 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    9
  2368 ;; This function calls:
  2369 ;;		Absolute function
  2370 ;;		_CRC8
  2371 ;;		_Receive_available
  2372 ;;		_Receive_get
  2373 ;;		_Send_put
  2374 ;; This function is called by:
  2375 ;;		_updateComms
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text9
  2380  0000B0                     __ptext9:
  2381                           	opt stack 0
  2382  0000B0                     _receiveData:
  2383                           	opt stack 20
  2384                           
  2385                           ;FastTransfer.c: 85: if (rx_len == 0) {
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;incstack = 0
  2389  0000B0  0100               	movlb	0	; () banked
  2390  0000B2  5198               	movf	_rx_len& (0+255),w,b
  2391  0000B4  0100               	movlb	0	; () banked
  2392  0000B6  A4D8               	btfss	status,2,c
  2393  0000B8  D0BF               	goto	l4402
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;FastTransfer.c: 87: if (serial_available() > 4) {
  2397  0000BA  D801               	call	u3498
  2398  0000BC  D00B               	goto	u3499
  2399  0000BE                     u3498:
  2400  0000BE  0005               	push	
  2401  0000C0  0100               	movlb	0	; () banked
  2402  0000C2  6EFA               	movwf	pclath,c
  2403  0000C4  518E               	movf	_serial_available& (0+255),w,b
  2404  0000C6  6EFD               	movwf	tosl,c
  2405  0000C8  518F               	movf	(_serial_available+1)& (0+255),w,b
  2406  0000CA  6EFE               	movwf	tosh,c
  2407  0000CC  50F8               	movf	tblptru,w,c
  2408  0000CE  6EFF               	movwf	tosu,c
  2409  0000D0  50FA               	movf	pclath,w,c
  2410  0000D2  0012               	return		;indir
  2411  0000D4                     u3499:
  2412  0000D4  0100               	movlb	0	; () banked
  2413  0000D6  BFD5               	btfsc	(?_Receive_available+1)& (0+255),7,b
  2414  0000D8  D0AF               	goto	l4402
  2415  0000DA  0100               	movlb	0	; () banked
  2416  0000DC  51D5               	movf	(?_Receive_available+1)& (0+255),w,b
  2417  0000DE  E122               	bnz	l4378
  2418  0000E0  0E05               	movlw	5
  2419  0000E2  0100               	movlb	0	; () banked
  2420  0000E4  5DD4               	subwf	?_Receive_available& (0+255),w,b
  2421  0000E6  B0D8               	btfsc	status,0,c
  2422  0000E8  D01D               	goto	l4378
  2423  0000EA  D0A6               	goto	l4402
  2424  0000EC                     l4370:
  2425                           
  2426                           ;FastTransfer.c: 93: alignErrorCounter++;
  2427  0000EC  4A30               	infsnz	_alignErrorCounter,f,c
  2428  0000EE  2A31               	incf	_alignErrorCounter+1,f,c
  2429                           
  2430                           ;FastTransfer.c: 94: if (serial_available() < 5)
  2431  0000F0  D801               	call	u3518
  2432  0000F2  D00B               	goto	u3519
  2433  0000F4                     u3518:
  2434  0000F4  0005               	push	
  2435  0000F6  0100               	movlb	0	; () banked
  2436  0000F8  6EFA               	movwf	pclath,c
  2437  0000FA  518E               	movf	_serial_available& (0+255),w,b
  2438  0000FC  6EFD               	movwf	tosl,c
  2439  0000FE  518F               	movf	(_serial_available+1)& (0+255),w,b
  2440  000100  6EFE               	movwf	tosh,c
  2441  000102  50F8               	movf	tblptru,w,c
  2442  000104  6EFF               	movwf	tosu,c
  2443  000106  50FA               	movf	pclath,w,c
  2444  000108  0012               	return		;indir
  2445  00010A                     u3519:
  2446  00010A  0100               	movlb	0	; () banked
  2447  00010C  BFD5               	btfsc	(?_Receive_available+1)& (0+255),7,b
  2448  00010E  D008               	goto	l4374
  2449  000110  0100               	movlb	0	; () banked
  2450  000112  51D5               	movf	(?_Receive_available+1)& (0+255),w,b
  2451  000114  E107               	bnz	l4378
  2452  000116  0E05               	movlw	5
  2453  000118  0100               	movlb	0	; () banked
  2454  00011A  5DD4               	subwf	?_Receive_available& (0+255),w,b
  2455  00011C  B0D8               	btfsc	status,0,c
  2456  00011E  D002               	goto	l4378
  2457  000120                     l4374:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;FastTransfer.c: 95: return 0;
  2461  000120  0E00               	movlw	0
  2462                           
  2463                           ; BSR set to: 0
  2464  000122  0012               	return	
  2465  000124                     l4378:
  2466                           
  2467                           ; BSR set to: 0
  2468  000124  D801               	call	u3538
  2469  000126  D00B               	goto	u3539
  2470  000128                     u3538:
  2471  000128  0005               	push	
  2472  00012A  0100               	movlb	0	; () banked
  2473  00012C  6EFA               	movwf	pclath,c
  2474  00012E  5190               	movf	_serial_read& (0+255),w,b
  2475  000130  6EFD               	movwf	tosl,c
  2476  000132  5191               	movf	(_serial_read+1)& (0+255),w,b
  2477  000134  6EFE               	movwf	tosh,c
  2478  000136  50F8               	movf	tblptru,w,c
  2479  000138  6EFF               	movwf	tosu,c
  2480  00013A  50FA               	movf	pclath,w,c
  2481  00013C  0012               	return		;indir
  2482  00013E                     u3539:
  2483  00013E  0A06               	xorlw	6
  2484  000140  A4D8               	btfss	status,2,c
  2485  000142  D7D4               	goto	l4370
  2486                           
  2487                           ;FastTransfer.c: 96: }
  2488                           ;FastTransfer.c: 97: if (serial_read() == 0x85) {
  2489  000144  D801               	call	u3558
  2490  000146  D00B               	goto	u3559
  2491  000148                     u3558:
  2492  000148  0005               	push	
  2493  00014A  0100               	movlb	0	; () banked
  2494  00014C  6EFA               	movwf	pclath,c
  2495  00014E  5190               	movf	_serial_read& (0+255),w,b
  2496  000150  6EFD               	movwf	tosl,c
  2497  000152  5191               	movf	(_serial_read+1)& (0+255),w,b
  2498  000154  6EFE               	movwf	tosh,c
  2499  000156  50F8               	movf	tblptru,w,c
  2500  000158  6EFF               	movwf	tosu,c
  2501  00015A  50FA               	movf	pclath,w,c
  2502  00015C  0012               	return		;indir
  2503  00015E                     u3559:
  2504  00015E  0A85               	xorlw	133
  2505  000160  A4D8               	btfss	status,2,c
  2506  000162  D06A               	goto	l4402
  2507                           
  2508                           ;FastTransfer.c: 98: rx_address = serial_read();
  2509  000164  D801               	call	u3578
  2510  000166  D00B               	goto	u3579
  2511  000168                     u3578:
  2512  000168  0005               	push	
  2513  00016A  0100               	movlb	0	; () banked
  2514  00016C  6EFA               	movwf	pclath,c
  2515  00016E  5190               	movf	_serial_read& (0+255),w,b
  2516  000170  6EFD               	movwf	tosl,c
  2517  000172  5191               	movf	(_serial_read+1)& (0+255),w,b
  2518  000174  6EFE               	movwf	tosh,c
  2519  000176  50F8               	movf	tblptru,w,c
  2520  000178  6EFF               	movwf	tosu,c
  2521  00017A  50FA               	movf	pclath,w,c
  2522  00017C  0012               	return		;indir
  2523  00017E                     u3579:
  2524  00017E  0100               	movlb	0	; () banked
  2525  000180  6F96               	movwf	_rx_address& (0+255),b
  2526                           
  2527                           ;FastTransfer.c: 99: returnAddress = serial_read();
  2528  000182  D801               	call	u3588
  2529  000184  D00B               	goto	u3589
  2530  000186                     u3588:
  2531  000186  0005               	push	
  2532  000188  0100               	movlb	0	; () banked
  2533  00018A  6EFA               	movwf	pclath,c
  2534  00018C  5190               	movf	_serial_read& (0+255),w,b
  2535  00018E  6EFD               	movwf	tosl,c
  2536  000190  5191               	movf	(_serial_read+1)& (0+255),w,b
  2537  000192  6EFE               	movwf	tosh,c
  2538  000194  50F8               	movf	tblptru,w,c
  2539  000196  6EFF               	movwf	tosu,c
  2540  000198  50FA               	movf	pclath,w,c
  2541  00019A  0012               	return		;indir
  2542  00019C                     u3589:
  2543  00019C  0100               	movlb	0	; () banked
  2544  00019E  6F95               	movwf	_returnAddress& (0+255),b
  2545                           
  2546                           ;FastTransfer.c: 100: rx_len = serial_read();
  2547  0001A0  D801               	call	u3598
  2548  0001A2  D00B               	goto	u3599
  2549  0001A4                     u3598:
  2550  0001A4  0005               	push	
  2551  0001A6  0100               	movlb	0	; () banked
  2552  0001A8  6EFA               	movwf	pclath,c
  2553  0001AA  5190               	movf	_serial_read& (0+255),w,b
  2554  0001AC  6EFD               	movwf	tosl,c
  2555  0001AE  5191               	movf	(_serial_read+1)& (0+255),w,b
  2556  0001B0  6EFE               	movwf	tosh,c
  2557  0001B2  50F8               	movf	tblptru,w,c
  2558  0001B4  6EFF               	movwf	tosu,c
  2559  0001B6  50FA               	movf	pclath,w,c
  2560  0001B8  0012               	return		;indir
  2561  0001BA                     u3599:
  2562  0001BA  0100               	movlb	0	; () banked
  2563  0001BC  6F98               	movwf	_rx_len& (0+255),b
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;FastTransfer.c: 102: if (rx_address != moduleAddress) {
  2567  0001BE  503F               	movf	_moduleAddress,w,c
  2568  0001C0  0100               	movlb	0	; () banked
  2569  0001C2  1996               	xorwf	_rx_address& (0+255),w,b
  2570  0001C4  B4D8               	btfsc	status,2,c
  2571  0001C6  D038               	goto	l4402
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;FastTransfer.c: 103: addressErrorCounter++;
  2575  0001C8  0100               	movlb	0	; () banked
  2576  0001CA  4B84               	infsnz	_addressErrorCounter& (0+255),f,b
  2577  0001CC  2B85               	incf	(_addressErrorCounter+1)& (0+255),f,b
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;FastTransfer.c: 106: int u;
  2581                           ;FastTransfer.c: 107: for (u = 0; u <= (rx_len + 1); u++) {
  2582  0001CE  0E00               	movlw	0
  2583  0001D0  0100               	movlb	0	; () banked
  2584  0001D2  6FED               	movwf	(receiveData@u+1)& (0+255),b
  2585  0001D4  0E00               	movlw	0
  2586  0001D6  6FEC               	movwf	receiveData@u& (0+255),b
  2587  0001D8  D010               	goto	l4394
  2588  0001DA                     l4390:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;FastTransfer.c: 108: serial_read();
  2592  0001DA  D801               	call	u3618
  2593  0001DC  D00B               	goto	l4392
  2594  0001DE                     u3618:
  2595  0001DE  0005               	push	
  2596  0001E0  0100               	movlb	0	; () banked
  2597  0001E2  6EFA               	movwf	pclath,c
  2598  0001E4  5190               	movf	_serial_read& (0+255),w,b
  2599  0001E6  6EFD               	movwf	tosl,c
  2600  0001E8  5191               	movf	(_serial_read+1)& (0+255),w,b
  2601  0001EA  6EFE               	movwf	tosh,c
  2602  0001EC  50F8               	movf	tblptru,w,c
  2603  0001EE  6EFF               	movwf	tosu,c
  2604  0001F0  50FA               	movf	pclath,w,c
  2605  0001F2  0012               	return		;indir
  2606  0001F4                     l4392:
  2607  0001F4  0100               	movlb	0	; () banked
  2608  0001F6  4BEC               	infsnz	receiveData@u& (0+255),f,b
  2609  0001F8  2BED               	incf	(receiveData@u+1)& (0+255),f,b
  2610  0001FA                     l4394:
  2611                           
  2612                           ; BSR set to: 0
  2613  0001FA  0100               	movlb	0	; () banked
  2614  0001FC  5198               	movf	_rx_len& (0+255),w,b
  2615  0001FE  0100               	movlb	0	; () banked
  2616  000200  6FDE               	movwf	??_receiveData& (0+255),b
  2617  000202  6BDF               	clrf	(??_receiveData+1)& (0+255),b
  2618  000204  0E01               	movlw	1
  2619  000206  0100               	movlb	0	; () banked
  2620  000208  27DE               	addwf	??_receiveData& (0+255),f,b
  2621  00020A  0E00               	movlw	0
  2622  00020C  23DF               	addwfc	(??_receiveData+1)& (0+255),f,b
  2623  00020E  0100               	movlb	0	; () banked
  2624  000210  51EC               	movf	receiveData@u& (0+255),w,b
  2625  000212  0100               	movlb	0	; () banked
  2626  000214  5DDE               	subwf	??_receiveData& (0+255),w,b
  2627  000216  0100               	movlb	0	; () banked
  2628  000218  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  2629  00021A  0A80               	xorlw	128
  2630  00021C  0100               	movlb	0	; () banked
  2631  00021E  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  2632  000220  0100               	movlb	0	; () banked
  2633  000222  51ED               	movf	(receiveData@u+1)& (0+255),w,b
  2634  000224  0A80               	xorlw	128
  2635  000226  0100               	movlb	0	; () banked
  2636  000228  59E0               	subwfb	(??_receiveData+2)& (0+255),w,b
  2637  00022A  B0D8               	btfsc	status,0,c
  2638  00022C  D7D6               	goto	l4390
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;FastTransfer.c: 109: }
  2642                           ;FastTransfer.c: 110: rx_len = 0;
  2643                           
  2644                           ; BSR set to: 0
  2645  00022E  0E00               	movlw	0
  2646  000230  0100               	movlb	0	; () banked
  2647  000232  6F98               	movwf	_rx_len& (0+255),b
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;FastTransfer.c: 111: return 0;
  2651  000234  0E00               	movlw	0
  2652                           
  2653                           ; BSR set to: 0
  2654  000236  0012               	return	
  2655  000238                     l4402:
  2656                           
  2657                           ;FastTransfer.c: 112: }
  2658                           ;FastTransfer.c: 114: }
  2659                           ;FastTransfer.c: 115: }
  2660                           ;FastTransfer.c: 116: }
  2661                           ;FastTransfer.c: 119: if (rx_len != 0) {
  2662  000238  0100               	movlb	0	; () banked
  2663  00023A  5198               	movf	_rx_len& (0+255),w,b
  2664  00023C  0100               	movlb	0	; () banked
  2665  00023E  A4D8               	btfss	status,2,c
  2666  000240  D01D               	goto	l4410
  2667  000242  D29D               	goto	l4510
  2668  000244                     l4406:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;FastTransfer.c: 135: rx_buffer[rx_array_inx++] = serial_read();
  2672  000244  D801               	call	u3648
  2673  000246  D00B               	goto	u3649
  2674  000248                     u3648:
  2675  000248  0005               	push	
  2676  00024A  0100               	movlb	0	; () banked
  2677  00024C  6EFA               	movwf	pclath,c
  2678  00024E  5190               	movf	_serial_read& (0+255),w,b
  2679  000250  6EFD               	movwf	tosl,c
  2680  000252  5191               	movf	(_serial_read+1)& (0+255),w,b
  2681  000254  6EFE               	movwf	tosh,c
  2682  000256  50F8               	movf	tblptru,w,c
  2683  000258  6EFF               	movwf	tosu,c
  2684  00025A  50FA               	movf	pclath,w,c
  2685  00025C  0012               	return		;indir
  2686  00025E                     u3649:
  2687  00025E  0100               	movlb	0	; () banked
  2688  000260  6FDE               	movwf	??_receiveData& (0+255),b
  2689  000262  0100               	movlb	0	; () banked
  2690  000264  5197               	movf	_rx_array_inx& (0+255),w,b
  2691  000266  0D01               	mullw	1
  2692  000268  0E00               	movlw	low _rx_buffer
  2693  00026A  24F3               	addwf	prodl,w,c
  2694  00026C  6ED9               	movwf	fsr2l,c
  2695  00026E  0E02               	movlw	high _rx_buffer
  2696  000270  20F4               	addwfc	prodh,w,c
  2697  000272  6EDA               	movwf	fsr2h,c
  2698  000274  C0DE  FFDF         	movff	??_receiveData,indf2
  2699                           
  2700                           ; BSR set to: 0
  2701  000278  0100               	movlb	0	; () banked
  2702  00027A  2B97               	incf	_rx_array_inx& (0+255),f,b
  2703  00027C                     l4410:
  2704                           
  2705                           ; BSR set to: 0
  2706  00027C  D801               	call	u3658
  2707  00027E  D00B               	goto	u3659
  2708  000280                     u3658:
  2709  000280  0005               	push	
  2710  000282  0100               	movlb	0	; () banked
  2711  000284  6EFA               	movwf	pclath,c
  2712  000286  518E               	movf	_serial_available& (0+255),w,b
  2713  000288  6EFD               	movwf	tosl,c
  2714  00028A  518F               	movf	(_serial_available+1)& (0+255),w,b
  2715  00028C  6EFE               	movwf	tosh,c
  2716  00028E  50F8               	movf	tblptru,w,c
  2717  000290  6EFF               	movwf	tosu,c
  2718  000292  50FA               	movf	pclath,w,c
  2719  000294  0012               	return		;indir
  2720  000296                     u3659:
  2721  000296  0100               	movlb	0	; () banked
  2722  000298  51D4               	movf	?_Receive_available& (0+255),w,b
  2723  00029A  0100               	movlb	0	; () banked
  2724  00029C  11D5               	iorwf	(?_Receive_available+1)& (0+255),w,b
  2725  00029E  B4D8               	btfsc	status,2,c
  2726  0002A0  D006               	goto	l4414
  2727                           
  2728                           ; BSR set to: 0
  2729  0002A2  0100               	movlb	0	; () banked
  2730  0002A4  5197               	movf	_rx_array_inx& (0+255),w,b
  2731  0002A6  0100               	movlb	0	; () banked
  2732  0002A8  5D98               	subwf	_rx_len& (0+255),w,b
  2733  0002AA  B0D8               	btfsc	status,0,c
  2734  0002AC  D7CB               	goto	l4406
  2735  0002AE                     l4414:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;FastTransfer.c: 136: }
  2739                           ;FastTransfer.c: 138: if (rx_len == (rx_array_inx - 1)) {
  2740  0002AE  0100               	movlb	0	; () banked
  2741  0002B0  5198               	movf	_rx_len& (0+255),w,b
  2742  0002B2  0100               	movlb	0	; () banked
  2743  0002B4  6FDE               	movwf	??_receiveData& (0+255),b
  2744  0002B6  6BDF               	clrf	(??_receiveData+1)& (0+255),b
  2745  0002B8  0EFF               	movlw	255
  2746  0002BA  0100               	movlb	0	; () banked
  2747  0002BC  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  2748  0002BE  0EFF               	movlw	255
  2749  0002C0  0100               	movlb	0	; () banked
  2750  0002C2  6FE1               	movwf	(??_receiveData+3)& (0+255),b
  2751  0002C4  0100               	movlb	0	; () banked
  2752  0002C6  5197               	movf	_rx_array_inx& (0+255),w,b
  2753  0002C8  0100               	movlb	0	; () banked
  2754  0002CA  6FE2               	movwf	(??_receiveData+4)& (0+255),b
  2755  0002CC  6BE3               	clrf	(??_receiveData+5)& (0+255),b
  2756  0002CE  0100               	movlb	0	; () banked
  2757  0002D0  51E0               	movf	(??_receiveData+2)& (0+255),w,b
  2758  0002D2  0100               	movlb	0	; () banked
  2759  0002D4  27E2               	addwf	(??_receiveData+4)& (0+255),f,b
  2760  0002D6  0100               	movlb	0	; () banked
  2761  0002D8  51E1               	movf	(??_receiveData+3)& (0+255),w,b
  2762  0002DA  0100               	movlb	0	; () banked
  2763  0002DC  23E3               	addwfc	(??_receiveData+5)& (0+255),f,b
  2764  0002DE  0100               	movlb	0	; () banked
  2765  0002E0  51DE               	movf	??_receiveData& (0+255),w,b
  2766  0002E2  0100               	movlb	0	; () banked
  2767  0002E4  19E2               	xorwf	(??_receiveData+4)& (0+255),w,b
  2768  0002E6  E105               	bnz	u3681
  2769  0002E8  0100               	movlb	0	; () banked
  2770  0002EA  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  2771  0002EC  0100               	movlb	0	; () banked
  2772  0002EE  19E3               	xorwf	(??_receiveData+5)& (0+255),w,b
  2773  0002F0  A4D8               	btfss	status,2,c
  2774  0002F2                     u3681:
  2775  0002F2  D245               	goto	l4510
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;FastTransfer.c: 141: calc_CS = CRC8(rx_buffer, rx_len);
  2779  0002F4  0E00               	movlw	low _rx_buffer
  2780  0002F6  0100               	movlb	0	; () banked
  2781  0002F8  6FD2               	movwf	CRC8@data& (0+255),b
  2782  0002FA  0E02               	movlw	high _rx_buffer
  2783  0002FC  0100               	movlb	0	; () banked
  2784  0002FE  6FD3               	movwf	(CRC8@data+1)& (0+255),b
  2785  000300  C098  F0D4         	movff	_rx_len,CRC8@len
  2786  000304  ECDF  F010         	call	_CRC8	;wreg free
  2787  000308  0100               	movlb	0	; () banked
  2788  00030A  6F93               	movwf	_calc_CS& (0+255),b
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;FastTransfer.c: 145: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  2792  00030C  0EFF               	movlw	255
  2793  00030E  0100               	movlb	0	; () banked
  2794  000310  6FDE               	movwf	??_receiveData& (0+255),b
  2795  000312  0EFF               	movlw	255
  2796  000314  0100               	movlb	0	; () banked
  2797  000316  6FDF               	movwf	(??_receiveData+1)& (0+255),b
  2798  000318  0100               	movlb	0	; () banked
  2799  00031A  5197               	movf	_rx_array_inx& (0+255),w,b
  2800  00031C  0100               	movlb	0	; () banked
  2801  00031E  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  2802  000320  6BE1               	clrf	(??_receiveData+3)& (0+255),b
  2803  000322  0100               	movlb	0	; () banked
  2804  000324  51DE               	movf	??_receiveData& (0+255),w,b
  2805  000326  0100               	movlb	0	; () banked
  2806  000328  27E0               	addwf	(??_receiveData+2)& (0+255),f,b
  2807  00032A  0100               	movlb	0	; () banked
  2808  00032C  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  2809  00032E  0100               	movlb	0	; () banked
  2810  000330  23E1               	addwfc	(??_receiveData+3)& (0+255),f,b
  2811  000332  0E00               	movlw	low _rx_buffer
  2812  000334  0100               	movlb	0	; () banked
  2813  000336  25E0               	addwf	(??_receiveData+2)& (0+255),w,b
  2814  000338  6ED9               	movwf	fsr2l,c
  2815  00033A  0E02               	movlw	high _rx_buffer
  2816  00033C  0100               	movlb	0	; () banked
  2817  00033E  21E1               	addwfc	(??_receiveData+3)& (0+255),w,b
  2818  000340  6EDA               	movwf	fsr2h,c
  2819  000342  0100               	movlb	0	; () banked
  2820  000344  5193               	movf	_calc_CS& (0+255),w,b
  2821  000346  18DE               	xorwf	postinc2,w,c
  2822  000348  A4D8               	btfss	status,2,c
  2823  00034A  D148               	goto	l4472
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;FastTransfer.c: 148: int r;
  2827                           ;FastTransfer.c: 149: for (r = 0; r < rx_len; r = r + 3) {
  2828  00034C  0E00               	movlw	0
  2829  00034E  0100               	movlb	0	; () banked
  2830  000350  6FEF               	movwf	(receiveData@r+1)& (0+255),b
  2831  000352  0E00               	movlw	0
  2832  000354  6FEE               	movwf	receiveData@r& (0+255),b
  2833  000356  D05F               	goto	l4432
  2834  000358                     l4422:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;FastTransfer.c: 150: if (rx_buffer[r] < maxDataAddress) {
  2838  000358  0E00               	movlw	low _rx_buffer
  2839  00035A  0100               	movlb	0	; () banked
  2840  00035C  25EE               	addwf	receiveData@r& (0+255),w,b
  2841  00035E  6ED9               	movwf	fsr2l,c
  2842  000360  0E02               	movlw	high _rx_buffer
  2843  000362  0100               	movlb	0	; () banked
  2844  000364  21EF               	addwfc	(receiveData@r+1)& (0+255),w,b
  2845  000366  6EDA               	movwf	fsr2h,c
  2846  000368  0100               	movlb	0	; () banked
  2847  00036A  5194               	movf	_maxDataAddress& (0+255),w,b
  2848  00036C  5CDE               	subwf	postinc2,w,c
  2849  00036E  B0D8               	btfsc	status,0,c
  2850  000370  D045               	goto	l4428
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;FastTransfer.c: 151: group.parts[0] = rx_buffer[r + 1];
  2854  000372  0E01               	movlw	1
  2855  000374  0100               	movlb	0	; () banked
  2856  000376  25EE               	addwf	receiveData@r& (0+255),w,b
  2857  000378  0100               	movlb	0	; () banked
  2858  00037A  6FDE               	movwf	??_receiveData& (0+255),b
  2859  00037C  0E00               	movlw	0
  2860  00037E  0100               	movlb	0	; () banked
  2861  000380  21EF               	addwfc	(receiveData@r+1)& (0+255),w,b
  2862  000382  0100               	movlb	0	; () banked
  2863  000384  6FDF               	movwf	(??_receiveData+1)& (0+255),b
  2864  000386  0E00               	movlw	low _rx_buffer
  2865  000388  0100               	movlb	0	; () banked
  2866  00038A  25DE               	addwf	??_receiveData& (0+255),w,b
  2867  00038C  6ED9               	movwf	fsr2l,c
  2868  00038E  0E02               	movlw	high _rx_buffer
  2869  000390  0100               	movlb	0	; () banked
  2870  000392  21DF               	addwfc	(??_receiveData+1)& (0+255),w,b
  2871  000394  6EDA               	movwf	fsr2h,c
  2872  000396  50DF               	movf	indf2,w,c
  2873  000398  0100               	movlb	0	; () banked
  2874  00039A  6F8A               	movwf	_group& (0+255),b
  2875                           
  2876                           ;FastTransfer.c: 152: group.parts[1] = rx_buffer[r + 2];
  2877  00039C  0E02               	movlw	2
  2878  00039E  0100               	movlb	0	; () banked
  2879  0003A0  25EE               	addwf	receiveData@r& (0+255),w,b
  2880  0003A2  0100               	movlb	0	; () banked
  2881  0003A4  6FDE               	movwf	??_receiveData& (0+255),b
  2882  0003A6  0E00               	movlw	0
  2883  0003A8  0100               	movlb	0	; () banked
  2884  0003AA  21EF               	addwfc	(receiveData@r+1)& (0+255),w,b
  2885  0003AC  0100               	movlb	0	; () banked
  2886  0003AE  6FDF               	movwf	(??_receiveData+1)& (0+255),b
  2887  0003B0  0E00               	movlw	low _rx_buffer
  2888  0003B2  0100               	movlb	0	; () banked
  2889  0003B4  25DE               	addwf	??_receiveData& (0+255),w,b
  2890  0003B6  6ED9               	movwf	fsr2l,c
  2891  0003B8  0E02               	movlw	high _rx_buffer
  2892  0003BA  0100               	movlb	0	; () banked
  2893  0003BC  21DF               	addwfc	(??_receiveData+1)& (0+255),w,b
  2894  0003BE  6EDA               	movwf	fsr2h,c
  2895  0003C0  50DF               	movf	indf2,w,c
  2896  0003C2  0100               	movlb	0	; () banked
  2897  0003C4  6F8B               	movwf	(_group+1)& (0+255),b
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;FastTransfer.c: 153: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  2901  0003C6  0E00               	movlw	low _rx_buffer
  2902  0003C8  0100               	movlb	0	; () banked
  2903  0003CA  25EE               	addwf	receiveData@r& (0+255),w,b
  2904  0003CC  6ED9               	movwf	fsr2l,c
  2905  0003CE  0E02               	movlw	high _rx_buffer
  2906  0003D0  0100               	movlb	0	; () banked
  2907  0003D2  21EF               	addwfc	(receiveData@r+1)& (0+255),w,b
  2908  0003D4  6EDA               	movwf	fsr2h,c
  2909  0003D6  50DF               	movf	indf2,w,c
  2910  0003D8  0100               	movlb	0	; () banked
  2911  0003DA  6FDE               	movwf	??_receiveData& (0+255),b
  2912  0003DC  0100               	movlb	0	; () banked
  2913  0003DE  51DE               	movf	??_receiveData& (0+255),w,b
  2914  0003E0  0D02               	mullw	2
  2915  0003E2  50F3               	movf	prodl,w,c
  2916  0003E4  0100               	movlb	0	; () banked
  2917  0003E6  258C               	addwf	_receiveArrayAddress& (0+255),w,b
  2918  0003E8  6ED9               	movwf	fsr2l,c
  2919  0003EA  50F4               	movf	prodh,w,c
  2920  0003EC  0100               	movlb	0	; () banked
  2921  0003EE  218D               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  2922  0003F0  6EDA               	movwf	fsr2h,c
  2923  0003F2  C08A  FFDE         	movff	_group,postinc2
  2924  0003F6  C08B  FFDD         	movff	_group+1,postdec2
  2925                           
  2926                           ;FastTransfer.c: 154: } else {
  2927  0003FA  D003               	goto	l4430
  2928  0003FC                     l4428:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;FastTransfer.c: 155: dataAdressErrorCounter++;
  2932  0003FC  0100               	movlb	0	; () banked
  2933  0003FE  4B88               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  2934  000400  2B89               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  2935  000402                     l4430:
  2936                           
  2937                           ; BSR set to: 0
  2938  000402  0E03               	movlw	3
  2939  000404  0100               	movlb	0	; () banked
  2940  000406  25EE               	addwf	receiveData@r& (0+255),w,b
  2941  000408  0100               	movlb	0	; () banked
  2942  00040A  6FEE               	movwf	receiveData@r& (0+255),b
  2943  00040C  0E00               	movlw	0
  2944  00040E  0100               	movlb	0	; () banked
  2945  000410  21EF               	addwfc	(receiveData@r+1)& (0+255),w,b
  2946  000412  0100               	movlb	0	; () banked
  2947  000414  6FEF               	movwf	(receiveData@r+1)& (0+255),b
  2948  000416                     l4432:
  2949                           
  2950                           ; BSR set to: 0
  2951  000416  0100               	movlb	0	; () banked
  2952  000418  5198               	movf	_rx_len& (0+255),w,b
  2953  00041A  0100               	movlb	0	; () banked
  2954  00041C  6FDE               	movwf	??_receiveData& (0+255),b
  2955  00041E  6BDF               	clrf	(??_receiveData+1)& (0+255),b
  2956  000420  0100               	movlb	0	; () banked
  2957  000422  51DE               	movf	??_receiveData& (0+255),w,b
  2958  000424  0100               	movlb	0	; () banked
  2959  000426  5DEE               	subwf	receiveData@r& (0+255),w,b
  2960  000428  0100               	movlb	0	; () banked
  2961  00042A  51EF               	movf	(receiveData@r+1)& (0+255),w,b
  2962  00042C  0A80               	xorlw	128
  2963  00042E  0100               	movlb	0	; () banked
  2964  000430  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  2965  000432  0100               	movlb	0	; () banked
  2966  000434  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  2967  000436  0A80               	xorlw	128
  2968  000438  0100               	movlb	0	; () banked
  2969  00043A  59E0               	subwfb	(??_receiveData+2)& (0+255),w,b
  2970  00043C  A0D8               	btfss	status,0,c
  2971  00043E  D78C               	goto	l4422
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;FastTransfer.c: 156: }
  2975                           ;FastTransfer.c: 157: }
  2976                           ;FastTransfer.c: 160: if (AKNAKsend) {
  2977                           
  2978                           ; BSR set to: 0
  2979  000440  0100               	movlb	0	; () banked
  2980  000442  5192               	movf	_AKNAKsend& (0+255),w,b
  2981  000444  B4D8               	btfsc	status,2,c
  2982  000446  D0C2               	goto	l4462
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;FastTransfer.c: 161: unsigned char holder[3];
  2986                           ;FastTransfer.c: 162: holder[0] = 255;
  2987  000448  0100               	movlb	0	; () banked
  2988  00044A  69E4               	setf	receiveData@holder& (0+255),b
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;FastTransfer.c: 163: holder[1] = 1;
  2992  00044C  0E01               	movlw	1
  2993  00044E  0100               	movlb	0	; () banked
  2994  000450  6FE5               	movwf	(receiveData@holder+1)& (0+255),b
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;FastTransfer.c: 164: holder[2] = rx_buffer[rx_array_inx - 1];
  2998  000452  0EFF               	movlw	255
  2999  000454  0100               	movlb	0	; () banked
  3000  000456  6FDE               	movwf	??_receiveData& (0+255),b
  3001  000458  0EFF               	movlw	255
  3002  00045A  0100               	movlb	0	; () banked
  3003  00045C  6FDF               	movwf	(??_receiveData+1)& (0+255),b
  3004  00045E  0100               	movlb	0	; () banked
  3005  000460  5197               	movf	_rx_array_inx& (0+255),w,b
  3006  000462  0100               	movlb	0	; () banked
  3007  000464  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  3008  000466  6BE1               	clrf	(??_receiveData+3)& (0+255),b
  3009  000468  0100               	movlb	0	; () banked
  3010  00046A  51DE               	movf	??_receiveData& (0+255),w,b
  3011  00046C  0100               	movlb	0	; () banked
  3012  00046E  27E0               	addwf	(??_receiveData+2)& (0+255),f,b
  3013  000470  0100               	movlb	0	; () banked
  3014  000472  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  3015  000474  0100               	movlb	0	; () banked
  3016  000476  23E1               	addwfc	(??_receiveData+3)& (0+255),f,b
  3017  000478  0E00               	movlw	low _rx_buffer
  3018  00047A  0100               	movlb	0	; () banked
  3019  00047C  25E0               	addwf	(??_receiveData+2)& (0+255),w,b
  3020  00047E  6ED9               	movwf	fsr2l,c
  3021  000480  0E02               	movlw	high _rx_buffer
  3022  000482  0100               	movlb	0	; () banked
  3023  000484  21E1               	addwfc	(??_receiveData+3)& (0+255),w,b
  3024  000486  6EDA               	movwf	fsr2h,c
  3025  000488  50DF               	movf	indf2,w,c
  3026  00048A  0100               	movlb	0	; () banked
  3027  00048C  6FE6               	movwf	(receiveData@holder+2)& (0+255),b
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;FastTransfer.c: 165: unsigned char crcHolder = CRC8(holder, 3);
  3031  00048E  0EE4               	movlw	low receiveData@holder
  3032  000490  0100               	movlb	0	; () banked
  3033  000492  6FD2               	movwf	CRC8@data& (0+255),b
  3034  000494  0E00               	movlw	high receiveData@holder
  3035  000496  0100               	movlb	0	; () banked
  3036  000498  6FD3               	movwf	(CRC8@data+1)& (0+255),b
  3037  00049A  0E03               	movlw	3
  3038  00049C  0100               	movlb	0	; () banked
  3039  00049E  6FD4               	movwf	CRC8@len& (0+255),b
  3040  0004A0  ECDF  F010         	call	_CRC8	;wreg free
  3041  0004A4  0100               	movlb	0	; () banked
  3042  0004A6  6FEA               	movwf	receiveData@crcHolder& (0+255),b
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;FastTransfer.c: 166: serial_write(0x06);
  3046  0004A8  D801               	call	u3738
  3047  0004AA  D00B               	goto	l4446
  3048  0004AC                     u3738:
  3049  0004AC  0005               	push	
  3050  0004AE  6EFA               	movwf	pclath,c
  3051  0004B0  5038               	movf	_serial_write,w,c
  3052  0004B2  6EFD               	movwf	tosl,c
  3053  0004B4  5039               	movf	_serial_write+1,w,c
  3054  0004B6  6EFE               	movwf	tosh,c
  3055  0004B8  50F8               	movf	tblptru,w,c
  3056  0004BA  6EFF               	movwf	tosu,c
  3057  0004BC  50FA               	movf	pclath,w,c
  3058  0004BE  0E06               	movlw	6
  3059  0004C0  0012               	return		;indir
  3060  0004C2                     l4446:
  3061                           
  3062                           ;FastTransfer.c: 167: serial_write(0x85);
  3063  0004C2  D801               	call	u3748
  3064  0004C4  D00B               	goto	l4448
  3065  0004C6                     u3748:
  3066  0004C6  0005               	push	
  3067  0004C8  6EFA               	movwf	pclath,c
  3068  0004CA  5038               	movf	_serial_write,w,c
  3069  0004CC  6EFD               	movwf	tosl,c
  3070  0004CE  5039               	movf	_serial_write+1,w,c
  3071  0004D0  6EFE               	movwf	tosh,c
  3072  0004D2  50F8               	movf	tblptru,w,c
  3073  0004D4  6EFF               	movwf	tosu,c
  3074  0004D6  50FA               	movf	pclath,w,c
  3075  0004D8  0E85               	movlw	133
  3076  0004DA  0012               	return		;indir
  3077  0004DC                     l4448:
  3078                           
  3079                           ;FastTransfer.c: 168: serial_write(returnAddress);
  3080  0004DC  D801               	call	u3758
  3081  0004DE  D00C               	goto	l4450
  3082  0004E0                     u3758:
  3083  0004E0  0005               	push	
  3084  0004E2  6EFA               	movwf	pclath,c
  3085  0004E4  5038               	movf	_serial_write,w,c
  3086  0004E6  6EFD               	movwf	tosl,c
  3087  0004E8  5039               	movf	_serial_write+1,w,c
  3088  0004EA  6EFE               	movwf	tosh,c
  3089  0004EC  50F8               	movf	tblptru,w,c
  3090  0004EE  6EFF               	movwf	tosu,c
  3091  0004F0  50FA               	movf	pclath,w,c
  3092  0004F2  0100               	movlb	0	; () banked
  3093  0004F4  5195               	movf	_returnAddress& (0+255),w,b
  3094  0004F6  0012               	return		;indir
  3095  0004F8                     l4450:
  3096                           
  3097                           ;FastTransfer.c: 169: serial_write(moduleAddress);
  3098  0004F8  D801               	call	u3768
  3099  0004FA  D00B               	goto	l4452
  3100  0004FC                     u3768:
  3101  0004FC  0005               	push	
  3102  0004FE  6EFA               	movwf	pclath,c
  3103  000500  5038               	movf	_serial_write,w,c
  3104  000502  6EFD               	movwf	tosl,c
  3105  000504  5039               	movf	_serial_write+1,w,c
  3106  000506  6EFE               	movwf	tosh,c
  3107  000508  50F8               	movf	tblptru,w,c
  3108  00050A  6EFF               	movwf	tosu,c
  3109  00050C  50FA               	movf	pclath,w,c
  3110  00050E  503F               	movf	_moduleAddress,w,c
  3111  000510  0012               	return		;indir
  3112  000512                     l4452:
  3113                           
  3114                           ;FastTransfer.c: 170: serial_write(3);
  3115  000512  D801               	call	u3778
  3116  000514  D00B               	goto	l4454
  3117  000516                     u3778:
  3118  000516  0005               	push	
  3119  000518  6EFA               	movwf	pclath,c
  3120  00051A  5038               	movf	_serial_write,w,c
  3121  00051C  6EFD               	movwf	tosl,c
  3122  00051E  5039               	movf	_serial_write+1,w,c
  3123  000520  6EFE               	movwf	tosh,c
  3124  000522  50F8               	movf	tblptru,w,c
  3125  000524  6EFF               	movwf	tosu,c
  3126  000526  50FA               	movf	pclath,w,c
  3127  000528  0E03               	movlw	3
  3128  00052A  0012               	return		;indir
  3129  00052C                     l4454:
  3130                           
  3131                           ;FastTransfer.c: 171: serial_write(255);
  3132  00052C  D801               	call	u3788
  3133  00052E  D00B               	goto	l4456
  3134  000530                     u3788:
  3135  000530  0005               	push	
  3136  000532  6EFA               	movwf	pclath,c
  3137  000534  5038               	movf	_serial_write,w,c
  3138  000536  6EFD               	movwf	tosl,c
  3139  000538  5039               	movf	_serial_write+1,w,c
  3140  00053A  6EFE               	movwf	tosh,c
  3141  00053C  50F8               	movf	tblptru,w,c
  3142  00053E  6EFF               	movwf	tosu,c
  3143  000540  50FA               	movf	pclath,w,c
  3144  000542  0EFF               	movlw	255
  3145  000544  0012               	return		;indir
  3146  000546                     l4456:
  3147                           
  3148                           ;FastTransfer.c: 172: serial_write(1);
  3149  000546  D801               	call	u3798
  3150  000548  D00B               	goto	l4458
  3151  00054A                     u3798:
  3152  00054A  0005               	push	
  3153  00054C  6EFA               	movwf	pclath,c
  3154  00054E  5038               	movf	_serial_write,w,c
  3155  000550  6EFD               	movwf	tosl,c
  3156  000552  5039               	movf	_serial_write+1,w,c
  3157  000554  6EFE               	movwf	tosh,c
  3158  000556  50F8               	movf	tblptru,w,c
  3159  000558  6EFF               	movwf	tosu,c
  3160  00055A  50FA               	movf	pclath,w,c
  3161  00055C  0E01               	movlw	1
  3162  00055E  0012               	return		;indir
  3163  000560                     l4458:
  3164                           
  3165                           ;FastTransfer.c: 173: serial_write(rx_buffer[rx_array_inx - 1]);
  3166  000560  D801               	call	u3808
  3167  000562  D026               	goto	l4460
  3168  000564                     u3808:
  3169  000564  0005               	push	
  3170  000566  6EFA               	movwf	pclath,c
  3171  000568  5038               	movf	_serial_write,w,c
  3172  00056A  6EFD               	movwf	tosl,c
  3173  00056C  5039               	movf	_serial_write+1,w,c
  3174  00056E  6EFE               	movwf	tosh,c
  3175  000570  50F8               	movf	tblptru,w,c
  3176  000572  6EFF               	movwf	tosu,c
  3177  000574  50FA               	movf	pclath,w,c
  3178  000576  0EFF               	movlw	255
  3179  000578  0100               	movlb	0	; () banked
  3180  00057A  6FDE               	movwf	??_receiveData& (0+255),b
  3181  00057C  0EFF               	movlw	255
  3182  00057E  0100               	movlb	0	; () banked
  3183  000580  6FDF               	movwf	(??_receiveData+1)& (0+255),b
  3184  000582  0100               	movlb	0	; () banked
  3185  000584  5197               	movf	_rx_array_inx& (0+255),w,b
  3186  000586  0100               	movlb	0	; () banked
  3187  000588  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  3188  00058A  6BE1               	clrf	(??_receiveData+3)& (0+255),b
  3189  00058C  0100               	movlb	0	; () banked
  3190  00058E  51DE               	movf	??_receiveData& (0+255),w,b
  3191  000590  0100               	movlb	0	; () banked
  3192  000592  27E0               	addwf	(??_receiveData+2)& (0+255),f,b
  3193  000594  0100               	movlb	0	; () banked
  3194  000596  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  3195  000598  0100               	movlb	0	; () banked
  3196  00059A  23E1               	addwfc	(??_receiveData+3)& (0+255),f,b
  3197  00059C  0E00               	movlw	low _rx_buffer
  3198  00059E  0100               	movlb	0	; () banked
  3199  0005A0  25E0               	addwf	(??_receiveData+2)& (0+255),w,b
  3200  0005A2  6ED9               	movwf	fsr2l,c
  3201  0005A4  0E02               	movlw	high _rx_buffer
  3202  0005A6  0100               	movlb	0	; () banked
  3203  0005A8  21E1               	addwfc	(??_receiveData+3)& (0+255),w,b
  3204  0005AA  6EDA               	movwf	fsr2h,c
  3205  0005AC  50DF               	movf	indf2,w,c
  3206  0005AE  0012               	return		;indir
  3207  0005B0                     l4460:
  3208                           
  3209                           ;FastTransfer.c: 174: serial_write(crcHolder);
  3210  0005B0  D801               	call	u3818
  3211  0005B2  D00C               	goto	l4462
  3212  0005B4                     u3818:
  3213  0005B4  0005               	push	
  3214  0005B6  6EFA               	movwf	pclath,c
  3215  0005B8  5038               	movf	_serial_write,w,c
  3216  0005BA  6EFD               	movwf	tosl,c
  3217  0005BC  5039               	movf	_serial_write+1,w,c
  3218  0005BE  6EFE               	movwf	tosh,c
  3219  0005C0  50F8               	movf	tblptru,w,c
  3220  0005C2  6EFF               	movwf	tosu,c
  3221  0005C4  50FA               	movf	pclath,w,c
  3222  0005C6  0100               	movlb	0	; () banked
  3223  0005C8  51EA               	movf	receiveData@crcHolder& (0+255),w,b
  3224  0005CA  0012               	return		;indir
  3225  0005CC                     l4462:
  3226                           
  3227                           ;FastTransfer.c: 175: }
  3228                           ;FastTransfer.c: 179: rx_len = 0;
  3229  0005CC  0E00               	movlw	0
  3230  0005CE  0100               	movlb	0	; () banked
  3231  0005D0  6F98               	movwf	_rx_len& (0+255),b
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;FastTransfer.c: 180: rx_array_inx = 0;
  3235  0005D2  0E00               	movlw	0
  3236  0005D4  0100               	movlb	0	; () banked
  3237  0005D6  6F97               	movwf	_rx_array_inx& (0+255),b
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;FastTransfer.c: 181: return 1;
  3241  0005D8  0E01               	movlw	1
  3242                           
  3243                           ; BSR set to: 0
  3244  0005DA  0012               	return	
  3245  0005DC                     l4472:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;FastTransfer.c: 183: crcErrorCounter++;
  3249  0005DC  0100               	movlb	0	; () banked
  3250  0005DE  4B86               	infsnz	_crcErrorCounter& (0+255),f,b
  3251  0005E0  2B87               	incf	(_crcErrorCounter+1)& (0+255),f,b
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;FastTransfer.c: 185: if (AKNAKsend) {
  3255  0005E2  0100               	movlb	0	; () banked
  3256  0005E4  5192               	movf	_AKNAKsend& (0+255),w,b
  3257  0005E6  B4D8               	btfsc	status,2,c
  3258  0005E8  D0C2               	goto	l4502
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;FastTransfer.c: 186: unsigned char holder[3];
  3262                           ;FastTransfer.c: 187: holder[0] = 255;
  3263  0005EA  0100               	movlb	0	; () banked
  3264  0005EC  69E7               	setf	receiveData@holder_1388& (0+255),b
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;FastTransfer.c: 188: holder[1] = 2;
  3268  0005EE  0E02               	movlw	2
  3269  0005F0  0100               	movlb	0	; () banked
  3270  0005F2  6FE8               	movwf	(receiveData@holder_1388+1)& (0+255),b
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;FastTransfer.c: 189: holder[2] = rx_buffer[rx_array_inx - 1];
  3274  0005F4  0EFF               	movlw	255
  3275  0005F6  0100               	movlb	0	; () banked
  3276  0005F8  6FDE               	movwf	??_receiveData& (0+255),b
  3277  0005FA  0EFF               	movlw	255
  3278  0005FC  0100               	movlb	0	; () banked
  3279  0005FE  6FDF               	movwf	(??_receiveData+1)& (0+255),b
  3280  000600  0100               	movlb	0	; () banked
  3281  000602  5197               	movf	_rx_array_inx& (0+255),w,b
  3282  000604  0100               	movlb	0	; () banked
  3283  000606  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  3284  000608  6BE1               	clrf	(??_receiveData+3)& (0+255),b
  3285  00060A  0100               	movlb	0	; () banked
  3286  00060C  51DE               	movf	??_receiveData& (0+255),w,b
  3287  00060E  0100               	movlb	0	; () banked
  3288  000610  27E0               	addwf	(??_receiveData+2)& (0+255),f,b
  3289  000612  0100               	movlb	0	; () banked
  3290  000614  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  3291  000616  0100               	movlb	0	; () banked
  3292  000618  23E1               	addwfc	(??_receiveData+3)& (0+255),f,b
  3293  00061A  0E00               	movlw	low _rx_buffer
  3294  00061C  0100               	movlb	0	; () banked
  3295  00061E  25E0               	addwf	(??_receiveData+2)& (0+255),w,b
  3296  000620  6ED9               	movwf	fsr2l,c
  3297  000622  0E02               	movlw	high _rx_buffer
  3298  000624  0100               	movlb	0	; () banked
  3299  000626  21E1               	addwfc	(??_receiveData+3)& (0+255),w,b
  3300  000628  6EDA               	movwf	fsr2h,c
  3301  00062A  50DF               	movf	indf2,w,c
  3302  00062C  0100               	movlb	0	; () banked
  3303  00062E  6FE9               	movwf	(receiveData@holder_1388+2)& (0+255),b
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;FastTransfer.c: 190: unsigned char crcHolder = CRC8(holder, 3);
  3307  000630  0EE7               	movlw	low receiveData@holder_1388
  3308  000632  0100               	movlb	0	; () banked
  3309  000634  6FD2               	movwf	CRC8@data& (0+255),b
  3310  000636  0E00               	movlw	high receiveData@holder_1388
  3311  000638  0100               	movlb	0	; () banked
  3312  00063A  6FD3               	movwf	(CRC8@data+1)& (0+255),b
  3313  00063C  0E03               	movlw	3
  3314  00063E  0100               	movlb	0	; () banked
  3315  000640  6FD4               	movwf	CRC8@len& (0+255),b
  3316  000642  ECDF  F010         	call	_CRC8
  3317  000646  0100               	movlb	0	; () banked
  3318  000648  6FEB               	movwf	receiveData@crcHolder_1389& (0+255),b
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;FastTransfer.c: 191: serial_write(0x06);
  3322  00064A  D801               	call	u3838
  3323  00064C  D00B               	goto	l4486
  3324  00064E                     u3838:
  3325  00064E  0005               	push	
  3326  000650  6EFA               	movwf	pclath,c
  3327  000652  5038               	movf	_serial_write,w,c
  3328  000654  6EFD               	movwf	tosl,c
  3329  000656  5039               	movf	_serial_write+1,w,c
  3330  000658  6EFE               	movwf	tosh,c
  3331  00065A  50F8               	movf	tblptru,w,c
  3332  00065C  6EFF               	movwf	tosu,c
  3333  00065E  50FA               	movf	pclath,w,c
  3334  000660  0E06               	movlw	6
  3335  000662  0012               	return		;indir
  3336  000664                     l4486:
  3337                           
  3338                           ;FastTransfer.c: 192: serial_write(0x85);
  3339  000664  D801               	call	u3848
  3340  000666  D00B               	goto	l4488
  3341  000668                     u3848:
  3342  000668  0005               	push	
  3343  00066A  6EFA               	movwf	pclath,c
  3344  00066C  5038               	movf	_serial_write,w,c
  3345  00066E  6EFD               	movwf	tosl,c
  3346  000670  5039               	movf	_serial_write+1,w,c
  3347  000672  6EFE               	movwf	tosh,c
  3348  000674  50F8               	movf	tblptru,w,c
  3349  000676  6EFF               	movwf	tosu,c
  3350  000678  50FA               	movf	pclath,w,c
  3351  00067A  0E85               	movlw	133
  3352  00067C  0012               	return		;indir
  3353  00067E                     l4488:
  3354                           
  3355                           ;FastTransfer.c: 193: serial_write(returnAddress);
  3356  00067E  D801               	call	u3858
  3357  000680  D00C               	goto	l4490
  3358  000682                     u3858:
  3359  000682  0005               	push	
  3360  000684  6EFA               	movwf	pclath,c
  3361  000686  5038               	movf	_serial_write,w,c
  3362  000688  6EFD               	movwf	tosl,c
  3363  00068A  5039               	movf	_serial_write+1,w,c
  3364  00068C  6EFE               	movwf	tosh,c
  3365  00068E  50F8               	movf	tblptru,w,c
  3366  000690  6EFF               	movwf	tosu,c
  3367  000692  50FA               	movf	pclath,w,c
  3368  000694  0100               	movlb	0	; () banked
  3369  000696  5195               	movf	_returnAddress& (0+255),w,b
  3370  000698  0012               	return		;indir
  3371  00069A                     l4490:
  3372                           
  3373                           ;FastTransfer.c: 194: serial_write(moduleAddress);
  3374  00069A  D801               	call	u3868
  3375  00069C  D00B               	goto	l4492
  3376  00069E                     u3868:
  3377  00069E  0005               	push	
  3378  0006A0  6EFA               	movwf	pclath,c
  3379  0006A2  5038               	movf	_serial_write,w,c
  3380  0006A4  6EFD               	movwf	tosl,c
  3381  0006A6  5039               	movf	_serial_write+1,w,c
  3382  0006A8  6EFE               	movwf	tosh,c
  3383  0006AA  50F8               	movf	tblptru,w,c
  3384  0006AC  6EFF               	movwf	tosu,c
  3385  0006AE  50FA               	movf	pclath,w,c
  3386  0006B0  503F               	movf	_moduleAddress,w,c
  3387  0006B2  0012               	return		;indir
  3388  0006B4                     l4492:
  3389                           
  3390                           ;FastTransfer.c: 195: serial_write(3);
  3391  0006B4  D801               	call	u3878
  3392  0006B6  D00B               	goto	l4494
  3393  0006B8                     u3878:
  3394  0006B8  0005               	push	
  3395  0006BA  6EFA               	movwf	pclath,c
  3396  0006BC  5038               	movf	_serial_write,w,c
  3397  0006BE  6EFD               	movwf	tosl,c
  3398  0006C0  5039               	movf	_serial_write+1,w,c
  3399  0006C2  6EFE               	movwf	tosh,c
  3400  0006C4  50F8               	movf	tblptru,w,c
  3401  0006C6  6EFF               	movwf	tosu,c
  3402  0006C8  50FA               	movf	pclath,w,c
  3403  0006CA  0E03               	movlw	3
  3404  0006CC  0012               	return		;indir
  3405  0006CE                     l4494:
  3406                           
  3407                           ;FastTransfer.c: 196: serial_write(255);
  3408  0006CE  D801               	call	u3888
  3409  0006D0  D00B               	goto	l4496
  3410  0006D2                     u3888:
  3411  0006D2  0005               	push	
  3412  0006D4  6EFA               	movwf	pclath,c
  3413  0006D6  5038               	movf	_serial_write,w,c
  3414  0006D8  6EFD               	movwf	tosl,c
  3415  0006DA  5039               	movf	_serial_write+1,w,c
  3416  0006DC  6EFE               	movwf	tosh,c
  3417  0006DE  50F8               	movf	tblptru,w,c
  3418  0006E0  6EFF               	movwf	tosu,c
  3419  0006E2  50FA               	movf	pclath,w,c
  3420  0006E4  0EFF               	movlw	255
  3421  0006E6  0012               	return		;indir
  3422  0006E8                     l4496:
  3423                           
  3424                           ;FastTransfer.c: 197: serial_write(2);
  3425  0006E8  D801               	call	u3898
  3426  0006EA  D00B               	goto	l4498
  3427  0006EC                     u3898:
  3428  0006EC  0005               	push	
  3429  0006EE  6EFA               	movwf	pclath,c
  3430  0006F0  5038               	movf	_serial_write,w,c
  3431  0006F2  6EFD               	movwf	tosl,c
  3432  0006F4  5039               	movf	_serial_write+1,w,c
  3433  0006F6  6EFE               	movwf	tosh,c
  3434  0006F8  50F8               	movf	tblptru,w,c
  3435  0006FA  6EFF               	movwf	tosu,c
  3436  0006FC  50FA               	movf	pclath,w,c
  3437  0006FE  0E02               	movlw	2
  3438  000700  0012               	return		;indir
  3439  000702                     l4498:
  3440                           
  3441                           ;FastTransfer.c: 198: serial_write(rx_buffer[rx_array_inx - 1]);
  3442  000702  D801               	call	u3908
  3443  000704  D026               	goto	l4500
  3444  000706                     u3908:
  3445  000706  0005               	push	
  3446  000708  6EFA               	movwf	pclath,c
  3447  00070A  5038               	movf	_serial_write,w,c
  3448  00070C  6EFD               	movwf	tosl,c
  3449  00070E  5039               	movf	_serial_write+1,w,c
  3450  000710  6EFE               	movwf	tosh,c
  3451  000712  50F8               	movf	tblptru,w,c
  3452  000714  6EFF               	movwf	tosu,c
  3453  000716  50FA               	movf	pclath,w,c
  3454  000718  0EFF               	movlw	255
  3455  00071A  0100               	movlb	0	; () banked
  3456  00071C  6FDE               	movwf	??_receiveData& (0+255),b
  3457  00071E  0EFF               	movlw	255
  3458  000720  0100               	movlb	0	; () banked
  3459  000722  6FDF               	movwf	(??_receiveData+1)& (0+255),b
  3460  000724  0100               	movlb	0	; () banked
  3461  000726  5197               	movf	_rx_array_inx& (0+255),w,b
  3462  000728  0100               	movlb	0	; () banked
  3463  00072A  6FE0               	movwf	(??_receiveData+2)& (0+255),b
  3464  00072C  6BE1               	clrf	(??_receiveData+3)& (0+255),b
  3465  00072E  0100               	movlb	0	; () banked
  3466  000730  51DE               	movf	??_receiveData& (0+255),w,b
  3467  000732  0100               	movlb	0	; () banked
  3468  000734  27E0               	addwf	(??_receiveData+2)& (0+255),f,b
  3469  000736  0100               	movlb	0	; () banked
  3470  000738  51DF               	movf	(??_receiveData+1)& (0+255),w,b
  3471  00073A  0100               	movlb	0	; () banked
  3472  00073C  23E1               	addwfc	(??_receiveData+3)& (0+255),f,b
  3473  00073E  0E00               	movlw	low _rx_buffer
  3474  000740  0100               	movlb	0	; () banked
  3475  000742  25E0               	addwf	(??_receiveData+2)& (0+255),w,b
  3476  000744  6ED9               	movwf	fsr2l,c
  3477  000746  0E02               	movlw	high _rx_buffer
  3478  000748  0100               	movlb	0	; () banked
  3479  00074A  21E1               	addwfc	(??_receiveData+3)& (0+255),w,b
  3480  00074C  6EDA               	movwf	fsr2h,c
  3481  00074E  50DF               	movf	indf2,w,c
  3482  000750  0012               	return		;indir
  3483  000752                     l4500:
  3484                           
  3485                           ;FastTransfer.c: 199: serial_write(crcHolder);
  3486  000752  D801               	call	u3918
  3487  000754  D00C               	goto	l4502
  3488  000756                     u3918:
  3489  000756  0005               	push	
  3490  000758  6EFA               	movwf	pclath,c
  3491  00075A  5038               	movf	_serial_write,w,c
  3492  00075C  6EFD               	movwf	tosl,c
  3493  00075E  5039               	movf	_serial_write+1,w,c
  3494  000760  6EFE               	movwf	tosh,c
  3495  000762  50F8               	movf	tblptru,w,c
  3496  000764  6EFF               	movwf	tosu,c
  3497  000766  50FA               	movf	pclath,w,c
  3498  000768  0100               	movlb	0	; () banked
  3499  00076A  51EB               	movf	receiveData@crcHolder_1389& (0+255),w,b
  3500  00076C  0012               	return		;indir
  3501  00076E                     l4502:
  3502                           
  3503                           ;FastTransfer.c: 200: }
  3504                           ;FastTransfer.c: 203: rx_len = 0;
  3505  00076E  0E00               	movlw	0
  3506  000770  0100               	movlb	0	; () banked
  3507  000772  6F98               	movwf	_rx_len& (0+255),b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;FastTransfer.c: 204: rx_array_inx = 0;
  3511  000774  0E00               	movlw	0
  3512  000776  0100               	movlb	0	; () banked
  3513  000778  6F97               	movwf	_rx_array_inx& (0+255),b
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;FastTransfer.c: 205: return 0;
  3517  00077A  0E00               	movlw	0
  3518                           
  3519                           ; BSR set to: 0
  3520  00077C  0012               	return	
  3521  00077E                     l4510:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;FastTransfer.c: 206: }
  3525                           ;FastTransfer.c: 207: }
  3526                           ;FastTransfer.c: 208: }
  3527                           ;FastTransfer.c: 211: return 0;
  3528  00077E  0E00               	movlw	0
  3529  000780  0012               	return	
  3530  000782                     __end_of_receiveData:
  3531                           	opt stack 0
  3532                           tosu	equ	0xFFF
  3533                           tosh	equ	0xFFE
  3534                           tosl	equ	0xFFD
  3535                           pclath	equ	0xFFA
  3536                           tblptru	equ	0xFF8
  3537                           tblptrh	equ	0xFF7
  3538                           tblptrl	equ	0xFF6
  3539                           tablat	equ	0xFF5
  3540                           prodh	equ	0xFF4
  3541                           prodl	equ	0xFF3
  3542                           intcon	equ	0xFF2
  3543                           postinc0	equ	0xFEE
  3544                           wreg	equ	0xFE8
  3545                           indf2	equ	0xFDF
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           plusw2	equ	0xFDB
  3549                           fsr2h	equ	0xFDA
  3550                           fsr2l	equ	0xFD9
  3551                           status	equ	0xFD8
  3552                           
  3553 ;; *************** function _Send_put *****************
  3554 ;; Defined at:
  3555 ;;		line 132 in file "UART.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  _data           1    wreg     unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  _data           1   11[BANK0 ] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3569 ;;      Params:         0       0       0       0       0       0       0
  3570 ;;      Locals:         0       1       0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0
  3572 ;;      Totals:         0       1       0       0       0       0       0
  3573 ;;Total ram usage:        1 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    8
  3576 ;; This function calls:
  3577 ;;		_UART_buff_get
  3578 ;;		_UART_buff_put
  3579 ;; This function is called by:
  3580 ;;		_SYSTEM_Initialize
  3581 ;;		_putch
  3582 ;;		_sendData
  3583 ;;		_receiveData
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text10
  3588  002698                     __ptext10:
  3589                           	opt stack 0
  3590  002698                     _Send_put:
  3591                           	opt stack 19
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;incstack = 0
  3595                           ;Send_put@_data stored from wreg
  3596  002698  0100               	movlb	0	; () banked
  3597  00269A  6FDD               	movwf	Send_put@_data& (0+255),b
  3598                           
  3599                           ;UART.c: 133: UART_buff_put(&output_buffer, _data);
  3600  00269C  0E00               	movlw	low _output_buffer
  3601  00269E  0100               	movlb	0	; () banked
  3602  0026A0  6FD8               	movwf	UART_buff_put@_this& (0+255),b
  3603  0026A2  0E04               	movlw	high _output_buffer
  3604  0026A4  0100               	movlb	0	; () banked
  3605  0026A6  6FD9               	movwf	(UART_buff_put@_this+1)& (0+255),b
  3606  0026A8  C0DD  F0DA         	movff	Send_put@_data,UART_buff_put@c
  3607  0026AC  EC31  F009         	call	_UART_buff_put
  3608                           
  3609                           ;UART.c: 134: if (Transmit_stall == 1) {
  3610  0026B0  0442               	decf	_Transmit_stall,w,c
  3611  0026B2  A4D8               	btfss	status,2,c
  3612  0026B4  0012               	return	
  3613                           
  3614                           ;UART.c: 135: Transmit_stall = 0;
  3615  0026B6  0E00               	movlw	0
  3616  0026B8  6E42               	movwf	_Transmit_stall,c
  3617                           
  3618                           ;UART.c: 136: TXREG1 = UART_buff_get(&output_buffer);
  3619  0026BA  0E00               	movlw	low _output_buffer
  3620  0026BC  0100               	movlb	0	; () banked
  3621  0026BE  6FD8               	movwf	UART_buff_get@_this& (0+255),b
  3622  0026C0  0E04               	movlw	high _output_buffer
  3623  0026C2  0100               	movlb	0	; () banked
  3624  0026C4  6FD9               	movwf	(UART_buff_get@_this+1)& (0+255),b
  3625  0026C6  ECCA  F00E         	call	_UART_buff_get	;wreg free
  3626  0026CA  6EAD               	movwf	4013,c	;volatile
  3627                           
  3628                           ;UART.c: 137: PIE1bits.TX1IE = 1;
  3629  0026CC  889D               	bsf	3997,4,c	;volatile
  3630  0026CE  0012               	return	
  3631  0026D0                     __end_of_Send_put:
  3632                           	opt stack 0
  3633                           tosu	equ	0xFFF
  3634                           tosh	equ	0xFFE
  3635                           tosl	equ	0xFFD
  3636                           pclath	equ	0xFFA
  3637                           tblptru	equ	0xFF8
  3638                           tblptrh	equ	0xFF7
  3639                           tblptrl	equ	0xFF6
  3640                           tablat	equ	0xFF5
  3641                           prodh	equ	0xFF4
  3642                           prodl	equ	0xFF3
  3643                           intcon	equ	0xFF2
  3644                           postinc0	equ	0xFEE
  3645                           wreg	equ	0xFE8
  3646                           indf2	equ	0xFDF
  3647                           postinc2	equ	0xFDE
  3648                           postdec2	equ	0xFDD
  3649                           plusw2	equ	0xFDB
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function _UART_buff_put *****************
  3655 ;; Defined at:
  3656 ;;		line 70 in file "UART.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  _this           2    6[BANK0 ] PTR struct UART_ring_buf
  3659 ;;		 -> output_buffer(206), input_buffer(206), 
  3660 ;;  c               1    8[BANK0 ] const unsigned char 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3672 ;;      Params:         0       3       0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0
  3674 ;;      Temps:          0       2       0       0       0       0       0
  3675 ;;      Totals:         0       5       0       0       0       0       0
  3676 ;;Total ram usage:        5 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    7
  3679 ;; This function calls:
  3680 ;;		_UART_buff_modulo_inc
  3681 ;; This function is called by:
  3682 ;;		_Send_put
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text11
  3687  001262                     __ptext11:
  3688                           	opt stack 0
  3689  001262                     _UART_buff_put:
  3690                           	opt stack 19
  3691                           
  3692                           ;UART.c: 71: if (_this->count < 200) {
  3693                           
  3694                           ;incstack = 0
  3695  001262  0100               	movlb	0	; () banked
  3696  001264  EE20 F0CC          	lfsr	2,204
  3697  001268  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3698  00126A  26D9               	addwf	fsr2l,f,c
  3699  00126C  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3700  00126E  22DA               	addwfc	fsr2h,f,c
  3701  001270  0E01               	movlw	1
  3702  001272  BEDB               	btfsc	plusw2,7,c
  3703  001274  D007               	goto	l4028
  3704  001276  0E01               	movlw	1
  3705  001278  50DB               	movf	plusw2,w,c
  3706  00127A  E145               	bnz	l4034
  3707  00127C  0EC8               	movlw	200
  3708  00127E  5CDE               	subwf	postinc2,w,c
  3709  001280  B0D8               	btfsc	status,0,c
  3710  001282  D041               	goto	l4034
  3711  001284                     l4028:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;UART.c: 72: _this->buf[_this->head] = c;
  3715  001284  0100               	movlb	0	; () banked
  3716  001286  EE20 F0C8          	lfsr	2,200
  3717  00128A  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3718  00128C  26D9               	addwf	fsr2l,f,c
  3719  00128E  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3720  001290  22DA               	addwfc	fsr2h,f,c
  3721  001292  CFDE F0DB          	movff	postinc2,??_UART_buff_put
  3722  001296  CFDD F0DC          	movff	postdec2,??_UART_buff_put+1
  3723  00129A  0100               	movlb	0	; () banked
  3724  00129C  51DB               	movf	??_UART_buff_put& (0+255),w,b
  3725  00129E  0100               	movlb	0	; () banked
  3726  0012A0  25D8               	addwf	UART_buff_put@_this& (0+255),w,b
  3727  0012A2  6ED9               	movwf	fsr2l,c
  3728  0012A4  0100               	movlb	0	; () banked
  3729  0012A6  51DC               	movf	(??_UART_buff_put+1)& (0+255),w,b
  3730  0012A8  0100               	movlb	0	; () banked
  3731  0012AA  21D9               	addwfc	(UART_buff_put@_this+1)& (0+255),w,b
  3732  0012AC  6EDA               	movwf	fsr2h,c
  3733  0012AE  C0DA  FFDF         	movff	UART_buff_put@c,indf2
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;UART.c: 73: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3737  0012B2  0100               	movlb	0	; () banked
  3738  0012B4  EE20 F0C8          	lfsr	2,200
  3739  0012B8  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3740  0012BA  26D9               	addwf	fsr2l,f,c
  3741  0012BC  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3742  0012BE  22DA               	addwfc	fsr2h,f,c
  3743  0012C0  CFDE F0D2          	movff	postinc2,UART_buff_modulo_inc@value
  3744  0012C4  CFDD F0D3          	movff	postdec2,UART_buff_modulo_inc@value+1
  3745  0012C8  0E00               	movlw	0
  3746  0012CA  0100               	movlb	0	; () banked
  3747  0012CC  6FD5               	movwf	(UART_buff_modulo_inc@modulus+1)& (0+255),b
  3748  0012CE  0EC8               	movlw	200
  3749  0012D0  6FD4               	movwf	UART_buff_modulo_inc@modulus& (0+255),b
  3750  0012D2  ECF2  F012         	call	_UART_buff_modulo_inc	;wreg free
  3751  0012D6  0100               	movlb	0	; () banked
  3752  0012D8  EE20 F0C8          	lfsr	2,200
  3753  0012DC  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3754  0012DE  26D9               	addwf	fsr2l,f,c
  3755  0012E0  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3756  0012E2  22DA               	addwfc	fsr2h,f,c
  3757  0012E4  0100               	movlb	0	; () banked
  3758  0012E6  C0D2  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3759  0012EA  0100               	movlb	0	; () banked
  3760  0012EC  C0D3  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;UART.c: 74: ++_this->count;
  3764  0012F0  0100               	movlb	0	; () banked
  3765  0012F2  EE20 F0CC          	lfsr	2,204
  3766  0012F6  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3767  0012F8  26D9               	addwf	fsr2l,f,c
  3768  0012FA  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3769  0012FC  22DA               	addwfc	fsr2h,f,c
  3770  0012FE  2ADE               	incf	postinc2,f,c
  3771  001300  0E00               	movlw	0
  3772  001302  22DD               	addwfc	postdec2,f,c
  3773                           
  3774                           ;UART.c: 75: } else {
  3775  001304  0012               	return	
  3776  001306                     l4034:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;UART.c: 76: _this->buf[_this->head] = c;
  3780  001306  0100               	movlb	0	; () banked
  3781  001308  EE20 F0C8          	lfsr	2,200
  3782  00130C  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3783  00130E  26D9               	addwf	fsr2l,f,c
  3784  001310  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3785  001312  22DA               	addwfc	fsr2h,f,c
  3786  001314  CFDE F0DB          	movff	postinc2,??_UART_buff_put
  3787  001318  CFDD F0DC          	movff	postdec2,??_UART_buff_put+1
  3788  00131C  0100               	movlb	0	; () banked
  3789  00131E  51DB               	movf	??_UART_buff_put& (0+255),w,b
  3790  001320  0100               	movlb	0	; () banked
  3791  001322  25D8               	addwf	UART_buff_put@_this& (0+255),w,b
  3792  001324  6ED9               	movwf	fsr2l,c
  3793  001326  0100               	movlb	0	; () banked
  3794  001328  51DC               	movf	(??_UART_buff_put+1)& (0+255),w,b
  3795  00132A  0100               	movlb	0	; () banked
  3796  00132C  21D9               	addwfc	(UART_buff_put@_this+1)& (0+255),w,b
  3797  00132E  6EDA               	movwf	fsr2h,c
  3798  001330  C0DA  FFDF         	movff	UART_buff_put@c,indf2
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;UART.c: 77: _this->head = UART_buff_modulo_inc(_this->head, 200);
  3802  001334  0100               	movlb	0	; () banked
  3803  001336  EE20 F0C8          	lfsr	2,200
  3804  00133A  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3805  00133C  26D9               	addwf	fsr2l,f,c
  3806  00133E  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3807  001340  22DA               	addwfc	fsr2h,f,c
  3808  001342  CFDE F0D2          	movff	postinc2,UART_buff_modulo_inc@value
  3809  001346  CFDD F0D3          	movff	postdec2,UART_buff_modulo_inc@value+1
  3810  00134A  0E00               	movlw	0
  3811  00134C  0100               	movlb	0	; () banked
  3812  00134E  6FD5               	movwf	(UART_buff_modulo_inc@modulus+1)& (0+255),b
  3813  001350  0EC8               	movlw	200
  3814  001352  6FD4               	movwf	UART_buff_modulo_inc@modulus& (0+255),b
  3815  001354  ECF2  F012         	call	_UART_buff_modulo_inc	;wreg free
  3816  001358  0100               	movlb	0	; () banked
  3817  00135A  EE20 F0C8          	lfsr	2,200
  3818  00135E  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3819  001360  26D9               	addwf	fsr2l,f,c
  3820  001362  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3821  001364  22DA               	addwfc	fsr2h,f,c
  3822  001366  0100               	movlb	0	; () banked
  3823  001368  C0D2  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3824  00136C  0100               	movlb	0	; () banked
  3825  00136E  C0D3  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;UART.c: 78: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  3829  001372  0100               	movlb	0	; () banked
  3830  001374  EE20 F0CA          	lfsr	2,202
  3831  001378  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3832  00137A  26D9               	addwf	fsr2l,f,c
  3833  00137C  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3834  00137E  22DA               	addwfc	fsr2h,f,c
  3835  001380  CFDE F0D2          	movff	postinc2,UART_buff_modulo_inc@value
  3836  001384  CFDD F0D3          	movff	postdec2,UART_buff_modulo_inc@value+1
  3837  001388  0E00               	movlw	0
  3838  00138A  0100               	movlb	0	; () banked
  3839  00138C  6FD5               	movwf	(UART_buff_modulo_inc@modulus+1)& (0+255),b
  3840  00138E  0EC8               	movlw	200
  3841  001390  6FD4               	movwf	UART_buff_modulo_inc@modulus& (0+255),b
  3842  001392  ECF2  F012         	call	_UART_buff_modulo_inc	;wreg free
  3843  001396  0100               	movlb	0	; () banked
  3844  001398  EE20 F0CA          	lfsr	2,202
  3845  00139C  51D8               	movf	UART_buff_put@_this& (0+255),w,b
  3846  00139E  26D9               	addwf	fsr2l,f,c
  3847  0013A0  51D9               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  3848  0013A2  22DA               	addwfc	fsr2h,f,c
  3849  0013A4  0100               	movlb	0	; () banked
  3850  0013A6  C0D2  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  3851  0013AA  0100               	movlb	0	; () banked
  3852  0013AC  C0D3  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  3853  0013B0  0012               	return	
  3854  0013B2                     __end_of_UART_buff_put:
  3855                           	opt stack 0
  3856                           tosu	equ	0xFFF
  3857                           tosh	equ	0xFFE
  3858                           tosl	equ	0xFFD
  3859                           pclath	equ	0xFFA
  3860                           tblptru	equ	0xFF8
  3861                           tblptrh	equ	0xFF7
  3862                           tblptrl	equ	0xFF6
  3863                           tablat	equ	0xFF5
  3864                           prodh	equ	0xFF4
  3865                           prodl	equ	0xFF3
  3866                           intcon	equ	0xFF2
  3867                           postinc0	equ	0xFEE
  3868                           wreg	equ	0xFE8
  3869                           indf2	equ	0xFDF
  3870                           postinc2	equ	0xFDE
  3871                           postdec2	equ	0xFDD
  3872                           plusw2	equ	0xFDB
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function _Receive_get *****************
  3878 ;; Defined at:
  3879 ;;		line 128 in file "UART.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      unsigned char 
  3886 ;; Registers used:
  3887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3893 ;;      Params:         0       0       0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0
  3896 ;;      Totals:         0       0       0       0       0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    8
  3900 ;; This function calls:
  3901 ;;		_UART_buff_get
  3902 ;; This function is called by:
  3903 ;;		_SYSTEM_Initialize
  3904 ;;		_getch
  3905 ;;		_receiveData
  3906 ;;		_CRCcheck
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text12
  3911  002978                     __ptext12:
  3912                           	opt stack 0
  3913  002978                     _Receive_get:
  3914                           	opt stack 20
  3915                           
  3916                           ;UART.c: 129: return UART_buff_get(&input_buffer);
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;incstack = 0
  3920  002978  0E00               	movlw	low _input_buffer
  3921  00297A  0100               	movlb	0	; () banked
  3922  00297C  6FD8               	movwf	UART_buff_get@_this& (0+255),b
  3923  00297E  0E03               	movlw	high _input_buffer
  3924  002980  0100               	movlb	0	; () banked
  3925  002982  6FD9               	movwf	(UART_buff_get@_this+1)& (0+255),b
  3926  002984  ECCA  F00E         	call	_UART_buff_get	;wreg free
  3927  002988  0012               	return	
  3928  00298A                     __end_of_Receive_get:
  3929                           	opt stack 0
  3930                           tosu	equ	0xFFF
  3931                           tosh	equ	0xFFE
  3932                           tosl	equ	0xFFD
  3933                           pclath	equ	0xFFA
  3934                           tblptru	equ	0xFF8
  3935                           tblptrh	equ	0xFF7
  3936                           tblptrl	equ	0xFF6
  3937                           tablat	equ	0xFF5
  3938                           prodh	equ	0xFF4
  3939                           prodl	equ	0xFF3
  3940                           intcon	equ	0xFF2
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           postdec2	equ	0xFDD
  3946                           plusw2	equ	0xFDB
  3947                           fsr2h	equ	0xFDA
  3948                           fsr2l	equ	0xFD9
  3949                           status	equ	0xFD8
  3950                           
  3951 ;; *************** function _UART_buff_get *****************
  3952 ;; Defined at:
  3953 ;;		line 83 in file "UART.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  _this           2    6[BANK0 ] PTR struct UART_ring_buf
  3956 ;;		 -> output_buffer(206), input_buffer(206), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  c               1   10[BANK0 ] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      unsigned char 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3968 ;;      Params:         0       2       0       0       0       0       0
  3969 ;;      Locals:         0       1       0       0       0       0       0
  3970 ;;      Temps:          0       2       0       0       0       0       0
  3971 ;;      Totals:         0       5       0       0       0       0       0
  3972 ;;Total ram usage:        5 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    7
  3975 ;; This function calls:
  3976 ;;		_UART_buff_modulo_inc
  3977 ;; This function is called by:
  3978 ;;		_Receive_get
  3979 ;;		_Send_put
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text13
  3984  001D94                     __ptext13:
  3985                           	opt stack 0
  3986  001D94                     _UART_buff_get:
  3987                           	opt stack 19
  3988                           
  3989                           ;UART.c: 84: unsigned char c;
  3990                           ;UART.c: 85: if (_this->count > 0) {
  3991                           
  3992                           ;incstack = 0
  3993  001D94  0100               	movlb	0	; () banked
  3994  001D96  EE20 F0CC          	lfsr	2,204
  3995  001D9A  51D8               	movf	UART_buff_get@_this& (0+255),w,b
  3996  001D9C  26D9               	addwf	fsr2l,f,c
  3997  001D9E  51D9               	movf	(UART_buff_get@_this+1)& (0+255),w,b
  3998  001DA0  22DA               	addwfc	fsr2h,f,c
  3999  001DA2  0E01               	movlw	1
  4000  001DA4  BEDB               	btfsc	plusw2,7,c
  4001  001DA6  D048               	goto	l4048
  4002  001DA8  0E01               	movlw	1
  4003  001DAA  50DB               	movf	plusw2,w,c
  4004  001DAC  E103               	bnz	u3200
  4005  001DAE  04DE               	decf	postinc2,w,c
  4006  001DB0  A0D8               	btfss	status,0,c
  4007  001DB2  D042               	goto	l4048
  4008  001DB4                     u3200:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;UART.c: 86: c = _this->buf[_this->tail];
  4012  001DB4  0100               	movlb	0	; () banked
  4013  001DB6  EE20 F0CA          	lfsr	2,202
  4014  001DBA  51D8               	movf	UART_buff_get@_this& (0+255),w,b
  4015  001DBC  26D9               	addwf	fsr2l,f,c
  4016  001DBE  51D9               	movf	(UART_buff_get@_this+1)& (0+255),w,b
  4017  001DC0  22DA               	addwfc	fsr2h,f,c
  4018  001DC2  CFDE F0DA          	movff	postinc2,??_UART_buff_get
  4019  001DC6  CFDD F0DB          	movff	postdec2,??_UART_buff_get+1
  4020  001DCA  0100               	movlb	0	; () banked
  4021  001DCC  51DA               	movf	??_UART_buff_get& (0+255),w,b
  4022  001DCE  0100               	movlb	0	; () banked
  4023  001DD0  25D8               	addwf	UART_buff_get@_this& (0+255),w,b
  4024  001DD2  6ED9               	movwf	fsr2l,c
  4025  001DD4  0100               	movlb	0	; () banked
  4026  001DD6  51DB               	movf	(??_UART_buff_get+1)& (0+255),w,b
  4027  001DD8  0100               	movlb	0	; () banked
  4028  001DDA  21D9               	addwfc	(UART_buff_get@_this+1)& (0+255),w,b
  4029  001DDC  6EDA               	movwf	fsr2h,c
  4030  001DDE  50DF               	movf	indf2,w,c
  4031  001DE0  0100               	movlb	0	; () banked
  4032  001DE2  6FDC               	movwf	UART_buff_get@c& (0+255),b
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;UART.c: 87: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4036  001DE4  0100               	movlb	0	; () banked
  4037  001DE6  EE20 F0CA          	lfsr	2,202
  4038  001DEA  51D8               	movf	UART_buff_get@_this& (0+255),w,b
  4039  001DEC  26D9               	addwf	fsr2l,f,c
  4040  001DEE  51D9               	movf	(UART_buff_get@_this+1)& (0+255),w,b
  4041  001DF0  22DA               	addwfc	fsr2h,f,c
  4042  001DF2  CFDE F0D2          	movff	postinc2,UART_buff_modulo_inc@value
  4043  001DF6  CFDD F0D3          	movff	postdec2,UART_buff_modulo_inc@value+1
  4044  001DFA  0E00               	movlw	0
  4045  001DFC  0100               	movlb	0	; () banked
  4046  001DFE  6FD5               	movwf	(UART_buff_modulo_inc@modulus+1)& (0+255),b
  4047  001E00  0EC8               	movlw	200
  4048  001E02  6FD4               	movwf	UART_buff_modulo_inc@modulus& (0+255),b
  4049  001E04  ECF2  F012         	call	_UART_buff_modulo_inc	;wreg free
  4050  001E08  0100               	movlb	0	; () banked
  4051  001E0A  EE20 F0CA          	lfsr	2,202
  4052  001E0E  51D8               	movf	UART_buff_get@_this& (0+255),w,b
  4053  001E10  26D9               	addwf	fsr2l,f,c
  4054  001E12  51D9               	movf	(UART_buff_get@_this+1)& (0+255),w,b
  4055  001E14  22DA               	addwfc	fsr2h,f,c
  4056  001E16  0100               	movlb	0	; () banked
  4057  001E18  C0D2  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4058  001E1C  0100               	movlb	0	; () banked
  4059  001E1E  C0D3  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;UART.c: 88: --_this->count;
  4063  001E22  0100               	movlb	0	; () banked
  4064  001E24  EE20 F0CC          	lfsr	2,204
  4065  001E28  51D8               	movf	UART_buff_get@_this& (0+255),w,b
  4066  001E2A  26D9               	addwf	fsr2l,f,c
  4067  001E2C  51D9               	movf	(UART_buff_get@_this+1)& (0+255),w,b
  4068  001E2E  22DA               	addwfc	fsr2h,f,c
  4069  001E30  06DE               	decf	postinc2,f,c
  4070  001E32  0E00               	movlw	0
  4071  001E34  5ADD               	subwfb	postdec2,f,c
  4072                           
  4073                           ;UART.c: 89: } else {
  4074  001E36  D003               	goto	l794
  4075  001E38                     l4048:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;UART.c: 90: c = 0;
  4079  001E38  0E00               	movlw	0
  4080  001E3A  0100               	movlb	0	; () banked
  4081  001E3C  6FDC               	movwf	UART_buff_get@c& (0+255),b
  4082  001E3E                     l794:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;UART.c: 91: }
  4086                           ;UART.c: 92: return (c);
  4087  001E3E  0100               	movlb	0	; () banked
  4088  001E40  51DC               	movf	UART_buff_get@c& (0+255),w,b
  4089  001E42  0012               	return	
  4090  001E44                     __end_of_UART_buff_get:
  4091                           	opt stack 0
  4092                           tosu	equ	0xFFF
  4093                           tosh	equ	0xFFE
  4094                           tosl	equ	0xFFD
  4095                           pclath	equ	0xFFA
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           postinc0	equ	0xFEE
  4104                           wreg	equ	0xFE8
  4105                           indf2	equ	0xFDF
  4106                           postinc2	equ	0xFDE
  4107                           postdec2	equ	0xFDD
  4108                           plusw2	equ	0xFDB
  4109                           fsr2h	equ	0xFDA
  4110                           fsr2l	equ	0xFD9
  4111                           status	equ	0xFD8
  4112                           
  4113 ;; *************** function _UART_buff_modulo_inc *****************
  4114 ;; Defined at:
  4115 ;;		line 108 in file "UART.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  value           2    0[BANK0 ] const unsigned int 
  4118 ;;  modulus         2    2[BANK0 ] const unsigned int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  my_value        2    4[BANK0 ] unsigned int 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  2    0[BANK0 ] unsigned int 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4130 ;;      Params:         0       4       0       0       0       0       0
  4131 ;;      Locals:         0       2       0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0
  4133 ;;      Totals:         0       6       0       0       0       0       0
  4134 ;;Total ram usage:        6 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    6
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_UART_buff_put
  4141 ;;		_UART_buff_get
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text14
  4146  0025E4                     __ptext14:
  4147                           	opt stack 0
  4148  0025E4                     _UART_buff_modulo_inc:
  4149                           	opt stack 19
  4150                           
  4151                           ;UART.c: 109: unsigned int my_value = value + 1;
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;incstack = 0
  4155  0025E4  0E01               	movlw	1
  4156  0025E6  0100               	movlb	0	; () banked
  4157  0025E8  25D2               	addwf	UART_buff_modulo_inc@value& (0+255),w,b
  4158  0025EA  0100               	movlb	0	; () banked
  4159  0025EC  6FD6               	movwf	UART_buff_modulo_inc@my_value& (0+255),b
  4160  0025EE  0E00               	movlw	0
  4161  0025F0  0100               	movlb	0	; () banked
  4162  0025F2  21D3               	addwfc	(UART_buff_modulo_inc@value+1)& (0+255),w,b
  4163  0025F4  0100               	movlb	0	; () banked
  4164  0025F6  6FD7               	movwf	(UART_buff_modulo_inc@my_value+1)& (0+255),b
  4165                           
  4166                           ;UART.c: 110: if (my_value >= modulus) {
  4167  0025F8  0100               	movlb	0	; () banked
  4168  0025FA  51D4               	movf	UART_buff_modulo_inc@modulus& (0+255),w,b
  4169  0025FC  0100               	movlb	0	; () banked
  4170  0025FE  5DD6               	subwf	UART_buff_modulo_inc@my_value& (0+255),w,b
  4171  002600  0100               	movlb	0	; () banked
  4172  002602  51D5               	movf	(UART_buff_modulo_inc@modulus+1)& (0+255),w,b
  4173  002604  0100               	movlb	0	; () banked
  4174  002606  59D7               	subwfb	(UART_buff_modulo_inc@my_value+1)& (0+255),w,b
  4175  002608  A0D8               	btfss	status,0,c
  4176  00260A  D005               	goto	l3998
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;UART.c: 111: my_value = 0;
  4180  00260C  0E00               	movlw	0
  4181  00260E  0100               	movlb	0	; () banked
  4182  002610  6FD7               	movwf	(UART_buff_modulo_inc@my_value+1)& (0+255),b
  4183  002612  0E00               	movlw	0
  4184  002614  6FD6               	movwf	UART_buff_modulo_inc@my_value& (0+255),b
  4185  002616                     l3998:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;UART.c: 112: }
  4189                           ;UART.c: 113: return (my_value);
  4190  002616  C0D6  F0D2         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  4191  00261A  C0D7  F0D3         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  4192  00261E  0012               	return	
  4193  002620                     __end_of_UART_buff_modulo_inc:
  4194                           	opt stack 0
  4195                           tosu	equ	0xFFF
  4196                           tosh	equ	0xFFE
  4197                           tosl	equ	0xFFD
  4198                           pclath	equ	0xFFA
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           prodh	equ	0xFF4
  4204                           prodl	equ	0xFF3
  4205                           intcon	equ	0xFF2
  4206                           postinc0	equ	0xFEE
  4207                           wreg	equ	0xFE8
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           plusw2	equ	0xFDB
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function _Receive_available *****************
  4217 ;; Defined at:
  4218 ;;		line 124 in file "UART.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  2    2[BANK0 ] int 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4232 ;;      Params:         0       2       0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0
  4235 ;;      Totals:         0       2       0       0       0       0       0
  4236 ;;Total ram usage:        2 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    7
  4239 ;; This function calls:
  4240 ;;		_UART_buff_size
  4241 ;; This function is called by:
  4242 ;;		_SYSTEM_Initialize
  4243 ;;		_receiveData
  4244 ;;		_CRCcheck
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text15
  4249  0028C6                     __ptext15:
  4250                           	opt stack 0
  4251  0028C6                     _Receive_available:
  4252                           	opt stack 21
  4253                           
  4254                           ;UART.c: 125: return UART_buff_size(&input_buffer);
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;incstack = 0
  4258  0028C6  0E00               	movlw	low _input_buffer
  4259  0028C8  0100               	movlb	0	; () banked
  4260  0028CA  6FD2               	movwf	UART_buff_size@_this& (0+255),b
  4261  0028CC  0E03               	movlw	high _input_buffer
  4262  0028CE  0100               	movlb	0	; () banked
  4263  0028D0  6FD3               	movwf	(UART_buff_size@_this+1)& (0+255),b
  4264  0028D2  EC70  F014         	call	_UART_buff_size	;wreg free
  4265  0028D6  C0D2  F0D4         	movff	?_UART_buff_size,?_Receive_available
  4266  0028DA  C0D3  F0D5         	movff	?_UART_buff_size+1,?_Receive_available+1
  4267  0028DE  0012               	return	
  4268  0028E0                     __end_of_Receive_available:
  4269                           	opt stack 0
  4270                           tosu	equ	0xFFF
  4271                           tosh	equ	0xFFE
  4272                           tosl	equ	0xFFD
  4273                           pclath	equ	0xFFA
  4274                           tblptru	equ	0xFF8
  4275                           tblptrh	equ	0xFF7
  4276                           tblptrl	equ	0xFF6
  4277                           tablat	equ	0xFF5
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           intcon	equ	0xFF2
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           indf2	equ	0xFDF
  4284                           postinc2	equ	0xFDE
  4285                           postdec2	equ	0xFDD
  4286                           plusw2	equ	0xFDB
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function _UART_buff_size *****************
  4292 ;; Defined at:
  4293 ;;		line 104 in file "UART.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  _this           2    0[BANK0 ] PTR struct UART_ring_buf
  4296 ;;		 -> output_buffer(206), input_buffer(206), 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  2    0[BANK0 ] int 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4308 ;;      Params:         0       2       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0
  4311 ;;      Totals:         0       2       0       0       0       0       0
  4312 ;;Total ram usage:        2 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    6
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_Receive_available
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text16
  4323  0028E0                     __ptext16:
  4324                           	opt stack 0
  4325  0028E0                     _UART_buff_size:
  4326                           	opt stack 21
  4327                           
  4328                           ;UART.c: 105: return (_this->count);
  4329                           
  4330                           ;incstack = 0
  4331  0028E0  0100               	movlb	0	; () banked
  4332  0028E2  EE20 F0CC          	lfsr	2,204
  4333  0028E6  51D2               	movf	UART_buff_size@_this& (0+255),w,b
  4334  0028E8  26D9               	addwf	fsr2l,f,c
  4335  0028EA  51D3               	movf	(UART_buff_size@_this+1)& (0+255),w,b
  4336  0028EC  22DA               	addwfc	fsr2h,f,c
  4337  0028EE  CFDE F0D2          	movff	postinc2,?_UART_buff_size
  4338  0028F2  CFDD F0D3          	movff	postdec2,?_UART_buff_size+1
  4339  0028F6  0012               	return	
  4340  0028F8                     __end_of_UART_buff_size:
  4341                           	opt stack 0
  4342                           tosu	equ	0xFFF
  4343                           tosh	equ	0xFFE
  4344                           tosl	equ	0xFFD
  4345                           pclath	equ	0xFFA
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           postinc0	equ	0xFEE
  4354                           wreg	equ	0xFE8
  4355                           indf2	equ	0xFDF
  4356                           postinc2	equ	0xFDE
  4357                           postdec2	equ	0xFDD
  4358                           plusw2	equ	0xFDB
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8
  4362                           
  4363 ;; *************** function _CRC8 *****************
  4364 ;; Defined at:
  4365 ;;		line 34 in file "FastTransfer.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  data            2    0[BANK0 ] PTR const unsigned char 
  4368 ;;		 -> NULL(0), CRCcheck@arrayHolder(3), receiveData@holder_1388(3), receiveData@holder(3), 
  4369 ;;		 -> rx_buffer(200), ring_buffer(206), 
  4370 ;;  len             1    2[BANK0 ] unsigned char 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  sum             1    3[BANK0 ] unsigned char 
  4373 ;;  tempI           1    5[BANK0 ] unsigned char 
  4374 ;;  extract         1    4[BANK0 ] unsigned char 
  4375 ;;  crc             1    6[BANK0 ] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      unsigned char 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4385 ;;      Params:         0       3       0       0       0       0       0
  4386 ;;      Locals:         0       4       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0
  4388 ;;      Totals:         0       7       0       0       0       0       0
  4389 ;;Total ram usage:        7 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    6
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_sendData
  4396 ;;		_receiveData
  4397 ;;		_CRCcheck
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text17
  4402  0021BE                     __ptext17:
  4403                           	opt stack 0
  4404  0021BE                     _CRC8:
  4405                           	opt stack 21
  4406                           
  4407                           ;FastTransfer.c: 35: unsigned char crc = 0x00;
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;incstack = 0
  4411  0021BE  0E00               	movlw	0
  4412  0021C0  0100               	movlb	0	; () banked
  4413  0021C2  6FD8               	movwf	CRC8@crc& (0+255),b
  4414                           
  4415                           ;FastTransfer.c: 36: while (len--) {
  4416  0021C4  D02A               	goto	l4070
  4417  0021C6                     l4054:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;FastTransfer.c: 37: unsigned char extract = *data++;
  4421  0021C6  C0D2  FFD9         	movff	CRC8@data,fsr2l
  4422  0021CA  C0D3  FFDA         	movff	CRC8@data+1,fsr2h
  4423  0021CE  50DF               	movf	indf2,w,c
  4424  0021D0  0100               	movlb	0	; () banked
  4425  0021D2  6FD6               	movwf	CRC8@extract& (0+255),b
  4426                           
  4427                           ; BSR set to: 0
  4428  0021D4  0100               	movlb	0	; () banked
  4429  0021D6  4BD2               	infsnz	CRC8@data& (0+255),f,b
  4430  0021D8  2BD3               	incf	(CRC8@data+1)& (0+255),f,b
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;FastTransfer.c: 38: unsigned char tempI;
  4434                           ;FastTransfer.c: 39: for (tempI = 8; tempI; tempI--) {
  4435  0021DA  0E08               	movlw	8
  4436  0021DC  0100               	movlb	0	; () banked
  4437  0021DE  6FD7               	movwf	CRC8@tempI& (0+255),b
  4438  0021E0  D017               	goto	l4068
  4439  0021E2                     l4060:
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;FastTransfer.c: 40: unsigned char sum = (crc ^ extract) & 0x01;
  4443  0021E2  0100               	movlb	0	; () banked
  4444  0021E4  51D8               	movf	CRC8@crc& (0+255),w,b
  4445  0021E6  0100               	movlb	0	; () banked
  4446  0021E8  19D6               	xorwf	CRC8@extract& (0+255),w,b
  4447  0021EA  0B01               	andlw	1
  4448  0021EC  0100               	movlb	0	; () banked
  4449  0021EE  6FD5               	movwf	CRC8@sum& (0+255),b
  4450                           
  4451                           ;FastTransfer.c: 41: crc >>= 1;
  4452  0021F0  0100               	movlb	0	; () banked
  4453  0021F2  90D8               	bcf	status,0,c
  4454  0021F4  33D8               	rrcf	CRC8@crc& (0+255),f,b
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;FastTransfer.c: 42: if (sum) {
  4458  0021F6  0100               	movlb	0	; () banked
  4459  0021F8  51D5               	movf	CRC8@sum& (0+255),w,b
  4460  0021FA  0100               	movlb	0	; () banked
  4461  0021FC  B4D8               	btfsc	status,2,c
  4462  0021FE  D003               	goto	l476
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;FastTransfer.c: 43: crc ^= 0x8C;
  4466  002200  0E8C               	movlw	140
  4467  002202  0100               	movlb	0	; () banked
  4468  002204  1BD8               	xorwf	CRC8@crc& (0+255),f,b
  4469  002206                     l476:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;FastTransfer.c: 44: }
  4473                           ;FastTransfer.c: 45: extract >>= 1;
  4474  002206  0100               	movlb	0	; () banked
  4475  002208  90D8               	bcf	status,0,c
  4476  00220A  33D6               	rrcf	CRC8@extract& (0+255),f,b
  4477                           
  4478                           ; BSR set to: 0
  4479  00220C  0100               	movlb	0	; () banked
  4480  00220E  07D7               	decf	CRC8@tempI& (0+255),f,b
  4481  002210                     l4068:
  4482                           
  4483                           ; BSR set to: 0
  4484  002210  0100               	movlb	0	; () banked
  4485  002212  51D7               	movf	CRC8@tempI& (0+255),w,b
  4486  002214  0100               	movlb	0	; () banked
  4487  002216  A4D8               	btfss	status,2,c
  4488  002218  D7E4               	goto	l4060
  4489  00221A                     l4070:
  4490                           
  4491                           ; BSR set to: 0
  4492  00221A  0100               	movlb	0	; () banked
  4493  00221C  07D4               	decf	CRC8@len& (0+255),f,b
  4494  00221E  0100               	movlb	0	; () banked
  4495  002220  29D4               	incf	CRC8@len& (0+255),w,b
  4496  002222  A4D8               	btfss	status,2,c
  4497  002224  D7D0               	goto	l4054
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;FastTransfer.c: 46: }
  4501                           ;FastTransfer.c: 47: }
  4502                           ;FastTransfer.c: 48: return crc;
  4503                           
  4504                           ; BSR set to: 0
  4505  002226  0100               	movlb	0	; () banked
  4506  002228  51D8               	movf	CRC8@crc& (0+255),w,b
  4507  00222A  0012               	return	
  4508  00222C                     __end_of_CRC8:
  4509                           	opt stack 0
  4510                           tosu	equ	0xFFF
  4511                           tosh	equ	0xFFE
  4512                           tosl	equ	0xFFD
  4513                           pclath	equ	0xFFA
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           intcon	equ	0xFF2
  4521                           postinc0	equ	0xFEE
  4522                           wreg	equ	0xFE8
  4523                           indf2	equ	0xFDF
  4524                           postinc2	equ	0xFDE
  4525                           postdec2	equ	0xFDD
  4526                           plusw2	equ	0xFDB
  4527                           fsr2h	equ	0xFDA
  4528                           fsr2l	equ	0xFD9
  4529                           status	equ	0xFD8
  4530                           
  4531 ;; *************** function _processPowerRequest *****************
  4532 ;; Defined at:
  4533 ;;		line 33 in file "Communications.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  powerSet        2   13[BANK0 ] int 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4547 ;;      Params:         0       2       0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0
  4550 ;;      Totals:         0       2       0       0       0       0       0
  4551 ;;Total ram usage:        2 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    9
  4554 ;; This function calls:
  4555 ;;		_EnableSlavePower
  4556 ;;		_Update
  4557 ;; This function is called by:
  4558 ;;		_updateComms
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text18
  4563  001C08                     __ptext18:
  4564                           	opt stack 0
  4565  001C08                     _processPowerRequest:
  4566                           	opt stack 20
  4567                           
  4568                           ;Communications.c: 35: if (powerSet & 0x01) EnableSlavePower(BMM, ON);
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;incstack = 0
  4572  001C08  0100               	movlb	0	; () banked
  4573  001C0A  A1DF               	btfss	processPowerRequest@powerSet& (0+255),0,b
  4574  001C0C  D009               	goto	l4518
  4575                           
  4576                           ; BSR set to: 0
  4577  001C0E  0E00               	movlw	0
  4578  001C10  0100               	movlb	0	; () banked
  4579  001C12  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4580  001C14  0E01               	movlw	1
  4581  001C16  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4582  001C18  0E04               	movlw	4
  4583  001C1A  ECA0  F00C         	call	_EnableSlavePower
  4584  001C1E  D008               	goto	l4520
  4585  001C20                     l4518:
  4586                           
  4587                           ;Communications.c: 36: else EnableSlavePower(BMM, OFF);
  4588  001C20  0E00               	movlw	0
  4589  001C22  0100               	movlb	0	; () banked
  4590  001C24  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4591  001C26  0E00               	movlw	0
  4592  001C28  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4593  001C2A  0E04               	movlw	4
  4594  001C2C  ECA0  F00C         	call	_EnableSlavePower
  4595  001C30                     l4520:
  4596                           
  4597                           ;Communications.c: 37: if (powerSet & 0x02) EnableSlavePower(MCS, ON);
  4598  001C30  0100               	movlb	0	; () banked
  4599  001C32  A3DF               	btfss	processPowerRequest@powerSet& (0+255),1,b
  4600  001C34  D009               	goto	l4524
  4601                           
  4602                           ; BSR set to: 0
  4603  001C36  0E00               	movlw	0
  4604  001C38  0100               	movlb	0	; () banked
  4605  001C3A  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4606  001C3C  0E01               	movlw	1
  4607  001C3E  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4608  001C40  0E02               	movlw	2
  4609  001C42  ECA0  F00C         	call	_EnableSlavePower
  4610  001C46  D008               	goto	l4526
  4611  001C48                     l4524:
  4612                           
  4613                           ;Communications.c: 38: else EnableSlavePower(MCS,OFF);
  4614  001C48  0E00               	movlw	0
  4615  001C4A  0100               	movlb	0	; () banked
  4616  001C4C  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4617  001C4E  0E00               	movlw	0
  4618  001C50  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4619  001C52  0E02               	movlw	2
  4620  001C54  ECA0  F00C         	call	_EnableSlavePower
  4621  001C58                     l4526:
  4622                           
  4623                           ;Communications.c: 39: if (powerSet & 0x04) EnableSlavePower(DDS,ON);
  4624  001C58  0100               	movlb	0	; () banked
  4625  001C5A  A5DF               	btfss	processPowerRequest@powerSet& (0+255),2,b
  4626  001C5C  D009               	goto	l4530
  4627                           
  4628                           ; BSR set to: 0
  4629  001C5E  0E00               	movlw	0
  4630  001C60  0100               	movlb	0	; () banked
  4631  001C62  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4632  001C64  0E01               	movlw	1
  4633  001C66  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4634  001C68  0E01               	movlw	1
  4635  001C6A  ECA0  F00C         	call	_EnableSlavePower
  4636  001C6E  D008               	goto	l4532
  4637  001C70                     l4530:
  4638                           
  4639                           ;Communications.c: 40: else EnableSlavePower(DDS,OFF);
  4640  001C70  0E00               	movlw	0
  4641  001C72  0100               	movlb	0	; () banked
  4642  001C74  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4643  001C76  0E00               	movlw	0
  4644  001C78  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4645  001C7A  0E01               	movlw	1
  4646  001C7C  ECA0  F00C         	call	_EnableSlavePower
  4647  001C80                     l4532:
  4648                           
  4649                           ;Communications.c: 41: if(powerSet & 0x08) EnableSlavePower(SAS,ON);
  4650  001C80  0100               	movlb	0	; () banked
  4651  001C82  A7DF               	btfss	processPowerRequest@powerSet& (0+255),3,b
  4652  001C84  D009               	goto	l4536
  4653                           
  4654                           ; BSR set to: 0
  4655  001C86  0E00               	movlw	0
  4656  001C88  0100               	movlb	0	; () banked
  4657  001C8A  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4658  001C8C  0E01               	movlw	1
  4659  001C8E  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4660  001C90  0E03               	movlw	3
  4661  001C92  ECA0  F00C         	call	_EnableSlavePower
  4662  001C96  D008               	goto	l4538
  4663  001C98                     l4536:
  4664                           
  4665                           ;Communications.c: 42: else EnableSlavePower(SAS,OFF);
  4666  001C98  0E00               	movlw	0
  4667  001C9A  0100               	movlb	0	; () banked
  4668  001C9C  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4669  001C9E  0E00               	movlw	0
  4670  001CA0  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4671  001CA2  0E03               	movlw	3
  4672  001CA4  ECA0  F00C         	call	_EnableSlavePower
  4673  001CA8                     l4538:
  4674                           
  4675                           ;Communications.c: 43: if(powerSet & 0x10) EnableSlavePower(TSS, ON);
  4676  001CA8  0100               	movlb	0	; () banked
  4677  001CAA  A9DF               	btfss	processPowerRequest@powerSet& (0+255),4,b
  4678  001CAC  D009               	goto	l4542
  4679                           
  4680                           ; BSR set to: 0
  4681  001CAE  0E00               	movlw	0
  4682  001CB0  0100               	movlb	0	; () banked
  4683  001CB2  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4684  001CB4  0E01               	movlw	1
  4685  001CB6  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4686  001CB8  0E05               	movlw	5
  4687  001CBA  ECA0  F00C         	call	_EnableSlavePower
  4688  001CBE  D008               	goto	l404
  4689  001CC0                     l4542:
  4690                           
  4691                           ;Communications.c: 44: else EnableSlavePower(TSS,OFF);
  4692  001CC0  0E00               	movlw	0
  4693  001CC2  0100               	movlb	0	; () banked
  4694  001CC4  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  4695  001CC6  0E00               	movlw	0
  4696  001CC8  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  4697  001CCA  0E05               	movlw	5
  4698  001CCC  ECA0  F00C         	call	_EnableSlavePower
  4699  001CD0                     l404:
  4700                           
  4701                           ;Communications.c: 45: Update();
  4702  001CD0  ECD1  F014         	call	_Update	;wreg free
  4703  001CD4  0012               	return		;funcret
  4704  001CD6                     __end_of_processPowerRequest:
  4705                           	opt stack 0
  4706                           tosu	equ	0xFFF
  4707                           tosh	equ	0xFFE
  4708                           tosl	equ	0xFFD
  4709                           pclath	equ	0xFFA
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           prodh	equ	0xFF4
  4715                           prodl	equ	0xFF3
  4716                           intcon	equ	0xFF2
  4717                           postinc0	equ	0xFEE
  4718                           wreg	equ	0xFE8
  4719                           indf2	equ	0xFDF
  4720                           postinc2	equ	0xFDE
  4721                           postdec2	equ	0xFDD
  4722                           plusw2	equ	0xFDB
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _SYSTEM_Initialize *****************
  4728 ;; Defined at:
  4729 ;;		line 113 in file "mcc_generated_files/mcc.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4743 ;;      Params:         0       0       0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0
  4746 ;;      Totals:         0       0       0       0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    9
  4750 ;; This function calls:
  4751 ;;		_ADC_Initialize
  4752 ;;		_EUSART1_Initialize
  4753 ;;		_INTERRUPT_Initialize
  4754 ;;		_OSCILLATOR_Initialize
  4755 ;;		_PIN_MANAGER_Initialize
  4756 ;;		_PWM4_Initialize
  4757 ;;		_TMR1_Initialize
  4758 ;;		_TMR2_Initialize
  4759 ;;		_begin
  4760 ;; This function is called by:
  4761 ;;		_main
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text19
  4766  002064                     __ptext19:
  4767                           	opt stack 0
  4768  002064                     _SYSTEM_Initialize:
  4769                           	opt stack 21
  4770                           
  4771                           ;mcc.c: 114: OSCILLATOR_Initialize();
  4772                           
  4773                           ;incstack = 0
  4774  002064  ECC5  F014         	call	_OSCILLATOR_Initialize	;wreg free
  4775                           
  4776                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  4777  002068  ECF5  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
  4778                           
  4779                           ;mcc.c: 116: INTERRUPT_Initialize();
  4780  00206C  ECCC  F014         	call	_INTERRUPT_Initialize	;wreg free
  4781                           
  4782                           ;mcc.c: 117: EUSART1_Initialize();
  4783  002070  EC93  F012         	call	_EUSART1_Initialize	;wreg free
  4784                           
  4785                           ;mcc.c: 118: begin(receiveArray, sizeof (receiveArray), 5, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  4786  002074  0E99               	movlw	low _receiveArray
  4787  002076  0100               	movlb	0	; () banked
  4788  002078  6FDA               	movwf	begin@ptr& (0+255),b
  4789  00207A  0E00               	movlw	high _receiveArray
  4790  00207C  0100               	movlb	0	; () banked
  4791  00207E  6FDB               	movwf	(begin@ptr+1)& (0+255),b
  4792  002080  0E28               	movlw	40
  4793  002082  0100               	movlb	0	; () banked
  4794  002084  6FDC               	movwf	begin@maxSize& (0+255),b
  4795  002086  0E05               	movlw	5
  4796  002088  0100               	movlb	0	; () banked
  4797  00208A  6FDD               	movwf	begin@givenAddress& (0+255),b
  4798  00208C  0E00               	movlw	0
  4799  00208E  0100               	movlb	0	; () banked
  4800  002090  6FDE               	movwf	begin@error& (0+255),b
  4801  002092  0E98               	movlw	low _Send_put
  4802  002094  0100               	movlb	0	; () banked
  4803  002096  6FDF               	movwf	begin@stufftosend& (0+255),b
  4804  002098  0E26               	movlw	high _Send_put
  4805  00209A  0100               	movlb	0	; () banked
  4806  00209C  6FE0               	movwf	(begin@stufftosend+1)& (0+255),b
  4807  00209E  0E78               	movlw	low _Receive_get
  4808  0020A0  0100               	movlb	0	; () banked
  4809  0020A2  6FE1               	movwf	begin@stufftoreceive& (0+255),b
  4810  0020A4  0E29               	movlw	high _Receive_get
  4811  0020A6  0100               	movlb	0	; () banked
  4812  0020A8  6FE2               	movwf	(begin@stufftoreceive+1)& (0+255),b
  4813  0020AA  0EC6               	movlw	low _Receive_available
  4814  0020AC  0100               	movlb	0	; () banked
  4815  0020AE  6FE3               	movwf	begin@stuffavailable& (0+255),b
  4816  0020B0  0E28               	movlw	high _Receive_available
  4817  0020B2  0100               	movlb	0	; () banked
  4818  0020B4  6FE4               	movwf	(begin@stuffavailable+1)& (0+255),b
  4819  0020B6  0E00               	movlw	0
  4820  0020B8  0100               	movlb	0	; () banked
  4821  0020BA  6FE5               	movwf	begin@stuffpeek& (0+255),b
  4822  0020BC  0E00               	movlw	0
  4823  0020BE  0100               	movlb	0	; () banked
  4824  0020C0  6FE6               	movwf	(begin@stuffpeek+1)& (0+255),b
  4825  0020C2  ECEB  F011         	call	_begin	;wreg free
  4826                           
  4827                           ;mcc.c: 119: PWM4_Initialize();
  4828  0020C6  ECA8  F014         	call	_PWM4_Initialize	;wreg free
  4829                           
  4830                           ;mcc.c: 120: TMR1_Initialize();
  4831  0020CA  EC20  F014         	call	_TMR1_Initialize	;wreg free
  4832                           
  4833                           ;mcc.c: 121: TMR2_Initialize();
  4834  0020CE  EC9E  F014         	call	_TMR2_Initialize	;wreg free
  4835                           
  4836                           ;mcc.c: 122: LATB4 = 1;
  4837  0020D2  888A               	bsf	3978,4,c	;volatile
  4838                           
  4839                           ;mcc.c: 123: ADC_Initialize();
  4840  0020D4  EC7C  F014         	call	_ADC_Initialize	;wreg free
  4841  0020D8  0012               	return		;funcret
  4842  0020DA                     __end_of_SYSTEM_Initialize:
  4843                           	opt stack 0
  4844                           tosu	equ	0xFFF
  4845                           tosh	equ	0xFFE
  4846                           tosl	equ	0xFFD
  4847                           pclath	equ	0xFFA
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           postinc0	equ	0xFEE
  4856                           wreg	equ	0xFE8
  4857                           indf2	equ	0xFDF
  4858                           postinc2	equ	0xFDE
  4859                           postdec2	equ	0xFDD
  4860                           plusw2	equ	0xFDB
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _begin *****************
  4866 ;; Defined at:
  4867 ;;		line 18 in file "FastTransfer.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  ptr             2    8[BANK0 ] PTR volatile int 
  4870 ;;		 -> receiveArray(40), 
  4871 ;;  maxSize         1   10[BANK0 ] unsigned char 
  4872 ;;  givenAddress    1   11[BANK0 ] unsigned char 
  4873 ;;  error           1   12[BANK0 ] unsigned char 
  4874 ;;  stufftosend     2   13[BANK0 ] PTR FTN(unsigned char ,)
  4875 ;;		 -> Send_put(1), 
  4876 ;;  stufftorecei    2   15[BANK0 ] PTR FTN()unsigned char 
  4877 ;;		 -> Receive_get(1), 
  4878 ;;  stuffavailab    2   17[BANK0 ] PTR FTN()int 
  4879 ;;		 -> Receive_available(2), 
  4880 ;;  stuffpeek       2   19[BANK0 ] PTR FTN()unsigned char 
  4881 ;;		 -> Receive_peek(1), 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4893 ;;      Params:         0      13       0       0       0       0       0
  4894 ;;      Locals:         0       0       0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0
  4896 ;;      Totals:         0      13       0       0       0       0       0
  4897 ;;Total ram usage:       13 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    7
  4900 ;; This function calls:
  4901 ;;		___awdiv
  4902 ;; This function is called by:
  4903 ;;		_SYSTEM_Initialize
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text20
  4908  0023D6                     __ptext20:
  4909                           	opt stack 0
  4910  0023D6                     _begin:
  4911                           	opt stack 22
  4912                           
  4913                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  4914                           
  4915                           ;incstack = 0
  4916  0023D6  C0DA  F08C         	movff	begin@ptr,_receiveArrayAddress
  4917  0023DA  C0DB  F08D         	movff	begin@ptr+1,_receiveArrayAddress+1
  4918                           
  4919                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  4920  0023DE  C0DD  F03F         	movff	begin@givenAddress,_moduleAddress
  4921                           
  4922                           ;FastTransfer.c: 21: serial_write = stufftosend;
  4923  0023E2  C0DF  F038         	movff	begin@stufftosend,_serial_write
  4924  0023E6  C0E0  F039         	movff	begin@stufftosend+1,_serial_write+1
  4925                           
  4926                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  4927  0023EA  C0E3  F08E         	movff	begin@stuffavailable,_serial_available
  4928  0023EE  C0E4  F08F         	movff	begin@stuffavailable+1,_serial_available+1
  4929                           
  4930                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  4931  0023F2  C0E5  F036         	movff	begin@stuffpeek,_serial_peek
  4932  0023F6  C0E6  F037         	movff	begin@stuffpeek+1,_serial_peek+1
  4933                           
  4934                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  4935  0023FA  C0E1  F090         	movff	begin@stufftoreceive,_serial_read
  4936  0023FE  C0E2  F091         	movff	begin@stufftoreceive+1,_serial_read+1
  4937                           
  4938                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  4939  002402  C0DC  F0D2         	movff	begin@maxSize,___awdiv@dividend
  4940  002406  0100               	movlb	0	; () banked
  4941  002408  6BD3               	clrf	(___awdiv@dividend+1)& (0+255),b
  4942  00240A  0E00               	movlw	0
  4943  00240C  0100               	movlb	0	; () banked
  4944  00240E  6FD5               	movwf	(___awdiv@divisor+1)& (0+255),b
  4945  002410  0E02               	movlw	2
  4946  002412  6FD4               	movwf	___awdiv@divisor& (0+255),b
  4947  002414  EC6B  F00E         	call	___awdiv	;wreg free
  4948  002418  0100               	movlb	0	; () banked
  4949  00241A  51D2               	movf	?___awdiv& (0+255),w,b
  4950  00241C  0100               	movlb	0	; () banked
  4951  00241E  6F94               	movwf	_maxDataAddress& (0+255),b
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  4955  002420  0E30               	movlw	low _ring_buffer
  4956  002422  6E34               	movwf	_sendStructAddress,c
  4957  002424  0E01               	movlw	high _ring_buffer
  4958  002426  6E35               	movwf	_sendStructAddress+1,c
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;FastTransfer.c: 27: AKNAKsend = error;
  4962  002428  C0DE  F092         	movff	begin@error,_AKNAKsend
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  4966  00242C  0E00               	movlw	0
  4967  00242E  6E31               	movwf	_alignErrorCounter+1,c
  4968  002430  0E00               	movlw	0
  4969  002432  6E30               	movwf	_alignErrorCounter,c
  4970                           
  4971                           ; BSR set to: 0
  4972  002434  0012               	return		;funcret
  4973  002436                     __end_of_begin:
  4974                           	opt stack 0
  4975                           tosu	equ	0xFFF
  4976                           tosh	equ	0xFFE
  4977                           tosl	equ	0xFFD
  4978                           pclath	equ	0xFFA
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           prodh	equ	0xFF4
  4984                           prodl	equ	0xFF3
  4985                           intcon	equ	0xFF2
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           indf2	equ	0xFDF
  4989                           postinc2	equ	0xFDE
  4990                           postdec2	equ	0xFDD
  4991                           plusw2	equ	0xFDB
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           status	equ	0xFD8
  4995                           
  4996 ;; *************** function ___awdiv *****************
  4997 ;; Defined at:
  4998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  dividend        2    0[BANK0 ] int 
  5001 ;;  divisor         2    2[BANK0 ] int 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  quotient        2    6[BANK0 ] int 
  5004 ;;  sign            1    5[BANK0 ] unsigned char 
  5005 ;;  counter         1    4[BANK0 ] unsigned char 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  2    0[BANK0 ] int 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5015 ;;      Params:         0       4       0       0       0       0       0
  5016 ;;      Locals:         0       4       0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0
  5018 ;;      Totals:         0       8       0       0       0       0       0
  5019 ;;Total ram usage:        8 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    6
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_begin
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text21
  5030  001CD6                     __ptext21:
  5031                           	opt stack 0
  5032  001CD6                     ___awdiv:
  5033                           	opt stack 22
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;incstack = 0
  5037  001CD6  0E00               	movlw	0
  5038  001CD8  0100               	movlb	0	; () banked
  5039  001CDA  6FD7               	movwf	___awdiv@sign& (0+255),b
  5040                           
  5041                           ; BSR set to: 0
  5042  001CDC  0100               	movlb	0	; () banked
  5043  001CDE  AFD5               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5044  001CE0  D008               	goto	l4244
  5045                           
  5046                           ; BSR set to: 0
  5047  001CE2  0100               	movlb	0	; () banked
  5048  001CE4  6DD4               	negf	___awdiv@divisor& (0+255),b
  5049  001CE6  1FD5               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5050  001CE8  B0D8               	btfsc	status,0,c
  5051  001CEA  2BD5               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5052                           
  5053                           ; BSR set to: 0
  5054  001CEC  0E01               	movlw	1
  5055  001CEE  0100               	movlb	0	; () banked
  5056  001CF0  6FD7               	movwf	___awdiv@sign& (0+255),b
  5057  001CF2                     l4244:
  5058                           
  5059                           ; BSR set to: 0
  5060  001CF2  0100               	movlb	0	; () banked
  5061  001CF4  AFD3               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5062  001CF6  D008               	goto	l4250
  5063                           
  5064                           ; BSR set to: 0
  5065  001CF8  0100               	movlb	0	; () banked
  5066  001CFA  6DD2               	negf	___awdiv@dividend& (0+255),b
  5067  001CFC  1FD3               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5068  001CFE  B0D8               	btfsc	status,0,c
  5069  001D00  2BD3               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5070                           
  5071                           ; BSR set to: 0
  5072  001D02  0E01               	movlw	1
  5073  001D04  0100               	movlb	0	; () banked
  5074  001D06  1BD7               	xorwf	___awdiv@sign& (0+255),f,b
  5075  001D08                     l4250:
  5076                           
  5077                           ; BSR set to: 0
  5078  001D08  0E00               	movlw	0
  5079  001D0A  0100               	movlb	0	; () banked
  5080  001D0C  6FD9               	movwf	(___awdiv@quotient+1)& (0+255),b
  5081  001D0E  0E00               	movlw	0
  5082  001D10  6FD8               	movwf	___awdiv@quotient& (0+255),b
  5083                           
  5084                           ; BSR set to: 0
  5085  001D12  0100               	movlb	0	; () banked
  5086  001D14  51D4               	movf	___awdiv@divisor& (0+255),w,b
  5087  001D16  0100               	movlb	0	; () banked
  5088  001D18  11D5               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5089  001D1A  B4D8               	btfsc	status,2,c
  5090  001D1C  D02C               	goto	l4272
  5091                           
  5092                           ; BSR set to: 0
  5093  001D1E  0E01               	movlw	1
  5094  001D20  0100               	movlb	0	; () banked
  5095  001D22  6FD6               	movwf	___awdiv@counter& (0+255),b
  5096  001D24  D006               	goto	l4258
  5097  001D26                     l4256:
  5098                           
  5099                           ; BSR set to: 0
  5100  001D26  0100               	movlb	0	; () banked
  5101  001D28  90D8               	bcf	status,0,c
  5102  001D2A  37D4               	rlcf	___awdiv@divisor& (0+255),f,b
  5103  001D2C  37D5               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5104  001D2E  0100               	movlb	0	; () banked
  5105  001D30  2BD6               	incf	___awdiv@counter& (0+255),f,b
  5106  001D32                     l4258:
  5107                           
  5108                           ; BSR set to: 0
  5109  001D32  0100               	movlb	0	; () banked
  5110  001D34  AFD5               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5111  001D36  D7F7               	goto	l4256
  5112  001D38                     l4260:
  5113                           
  5114                           ; BSR set to: 0
  5115  001D38  0100               	movlb	0	; () banked
  5116  001D3A  90D8               	bcf	status,0,c
  5117  001D3C  37D8               	rlcf	___awdiv@quotient& (0+255),f,b
  5118  001D3E  37D9               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5119                           
  5120                           ; BSR set to: 0
  5121  001D40  0100               	movlb	0	; () banked
  5122  001D42  51D4               	movf	___awdiv@divisor& (0+255),w,b
  5123  001D44  0100               	movlb	0	; () banked
  5124  001D46  5DD2               	subwf	___awdiv@dividend& (0+255),w,b
  5125  001D48  0100               	movlb	0	; () banked
  5126  001D4A  51D5               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5127  001D4C  0100               	movlb	0	; () banked
  5128  001D4E  59D3               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5129  001D50  A0D8               	btfss	status,0,c
  5130  001D52  D00A               	goto	l4268
  5131                           
  5132                           ; BSR set to: 0
  5133  001D54  0100               	movlb	0	; () banked
  5134  001D56  51D4               	movf	___awdiv@divisor& (0+255),w,b
  5135  001D58  0100               	movlb	0	; () banked
  5136  001D5A  5FD2               	subwf	___awdiv@dividend& (0+255),f,b
  5137  001D5C  0100               	movlb	0	; () banked
  5138  001D5E  51D5               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5139  001D60  0100               	movlb	0	; () banked
  5140  001D62  5BD3               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5141                           
  5142                           ; BSR set to: 0
  5143  001D64  0100               	movlb	0	; () banked
  5144  001D66  81D8               	bsf	___awdiv@quotient& (0+255),0,b
  5145  001D68                     l4268:
  5146                           
  5147                           ; BSR set to: 0
  5148  001D68  0100               	movlb	0	; () banked
  5149  001D6A  90D8               	bcf	status,0,c
  5150  001D6C  33D5               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5151  001D6E  33D4               	rrcf	___awdiv@divisor& (0+255),f,b
  5152                           
  5153                           ; BSR set to: 0
  5154  001D70  0100               	movlb	0	; () banked
  5155  001D72  2FD6               	decfsz	___awdiv@counter& (0+255),f,b
  5156  001D74  D7E1               	goto	l4260
  5157  001D76                     l4272:
  5158                           
  5159                           ; BSR set to: 0
  5160  001D76  0100               	movlb	0	; () banked
  5161  001D78  51D7               	movf	___awdiv@sign& (0+255),w,b
  5162  001D7A  0100               	movlb	0	; () banked
  5163  001D7C  B4D8               	btfsc	status,2,c
  5164  001D7E  D005               	goto	l4276
  5165                           
  5166                           ; BSR set to: 0
  5167  001D80  0100               	movlb	0	; () banked
  5168  001D82  6DD8               	negf	___awdiv@quotient& (0+255),b
  5169  001D84  1FD9               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5170  001D86  B0D8               	btfsc	status,0,c
  5171  001D88  2BD9               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5172  001D8A                     l4276:
  5173                           
  5174                           ; BSR set to: 0
  5175  001D8A  C0D8  F0D2         	movff	___awdiv@quotient,?___awdiv
  5176  001D8E  C0D9  F0D3         	movff	___awdiv@quotient+1,?___awdiv+1
  5177  001D92  0012               	return	
  5178  001D94                     __end_of___awdiv:
  5179                           	opt stack 0
  5180                           tosu	equ	0xFFF
  5181                           tosh	equ	0xFFE
  5182                           tosl	equ	0xFFD
  5183                           pclath	equ	0xFFA
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           prodh	equ	0xFF4
  5189                           prodl	equ	0xFF3
  5190                           intcon	equ	0xFF2
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           indf2	equ	0xFDF
  5194                           postinc2	equ	0xFDE
  5195                           postdec2	equ	0xFDD
  5196                           plusw2	equ	0xFDB
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _TMR2_Initialize *****************
  5202 ;; Defined at:
  5203 ;;		line 9 in file "mcc_generated_files/tmr2.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5217 ;;      Params:         0       0       0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0
  5220 ;;      Totals:         0       0       0       0       0       0       0
  5221 ;;Total ram usage:        0 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    7
  5224 ;; This function calls:
  5225 ;;		_TMR2_StartTimer
  5226 ;; This function is called by:
  5227 ;;		_SYSTEM_Initialize
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text22
  5232  00293C                     __ptext22:
  5233                           	opt stack 0
  5234  00293C                     _TMR2_Initialize:
  5235                           	opt stack 22
  5236                           
  5237                           ;tmr2.c: 14: T2CON = 0x1A;
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;incstack = 0
  5241  00293C  0E1A               	movlw	26
  5242  00293E  6EBA               	movwf	4026,c	;volatile
  5243                           
  5244                           ;tmr2.c: 17: PR2 = 0x7C;
  5245  002940  0E7C               	movlw	124
  5246  002942  6EBB               	movwf	4027,c	;volatile
  5247                           
  5248                           ;tmr2.c: 20: TMR2 = 0x00;
  5249  002944  0E00               	movlw	0
  5250  002946  6EBC               	movwf	4028,c	;volatile
  5251                           
  5252                           ;tmr2.c: 23: PIR1bits.TMR2IF = 0;
  5253  002948  929E               	bcf	3998,1,c	;volatile
  5254                           
  5255                           ;tmr2.c: 26: TMR2_StartTimer();
  5256  00294A  ECD7  F014         	call	_TMR2_StartTimer	;wreg free
  5257  00294E  0012               	return		;funcret
  5258  002950                     __end_of_TMR2_Initialize:
  5259                           	opt stack 0
  5260                           tosu	equ	0xFFF
  5261                           tosh	equ	0xFFE
  5262                           tosl	equ	0xFFD
  5263                           pclath	equ	0xFFA
  5264                           tblptru	equ	0xFF8
  5265                           tblptrh	equ	0xFF7
  5266                           tblptrl	equ	0xFF6
  5267                           tablat	equ	0xFF5
  5268                           prodh	equ	0xFF4
  5269                           prodl	equ	0xFF3
  5270                           intcon	equ	0xFF2
  5271                           postinc0	equ	0xFEE
  5272                           wreg	equ	0xFE8
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           plusw2	equ	0xFDB
  5277                           fsr2h	equ	0xFDA
  5278                           fsr2l	equ	0xFD9
  5279                           status	equ	0xFD8
  5280                           
  5281 ;; *************** function _TMR2_StartTimer *****************
  5282 ;; Defined at:
  5283 ;;		line 29 in file "mcc_generated_files/tmr2.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		None
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5297 ;;      Params:         0       0       0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0
  5300 ;;      Totals:         0       0       0       0       0       0       0
  5301 ;;Total ram usage:        0 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    6
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_TMR2_Initialize
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text23
  5312  0029AE                     __ptext23:
  5313                           	opt stack 0
  5314  0029AE                     _TMR2_StartTimer:
  5315                           	opt stack 22
  5316                           
  5317                           ;tmr2.c: 32: T2CONbits.TMR2ON = 1;
  5318                           
  5319                           ;incstack = 0
  5320  0029AE  84BA               	bsf	4026,2,c	;volatile
  5321  0029B0  0012               	return		;funcret
  5322  0029B2                     __end_of_TMR2_StartTimer:
  5323                           	opt stack 0
  5324                           tosu	equ	0xFFF
  5325                           tosh	equ	0xFFE
  5326                           tosl	equ	0xFFD
  5327                           pclath	equ	0xFFA
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           intcon	equ	0xFF2
  5335                           postinc0	equ	0xFEE
  5336                           wreg	equ	0xFE8
  5337                           indf2	equ	0xFDF
  5338                           postinc2	equ	0xFDE
  5339                           postdec2	equ	0xFDD
  5340                           plusw2	equ	0xFDB
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function _TMR1_Initialize *****************
  5346 ;; Defined at:
  5347 ;;		line 66 in file "mcc_generated_files/tmr1.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  2   97[None  ] int 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5361 ;;      Params:         0       0       0       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0
  5364 ;;      Totals:         0       0       0       0       0       0       0
  5365 ;;Total ram usage:        0 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    7
  5368 ;; This function calls:
  5369 ;;		_TMR1_StartTimer
  5370 ;; This function is called by:
  5371 ;;		_SYSTEM_Initialize
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text24
  5376  002840                     __ptext24:
  5377                           	opt stack 0
  5378  002840                     _TMR1_Initialize:
  5379                           	opt stack 22
  5380                           
  5381                           ;tmr1.c: 71: T1CON = 0x00;
  5382                           
  5383                           ;incstack = 0
  5384  002840  0E00               	movlw	0
  5385  002842  6ECD               	movwf	4045,c	;volatile
  5386                           
  5387                           ;tmr1.c: 75: T1GCON = 0x00;
  5388  002844  0E00               	movlw	0
  5389  002846  6ECC               	movwf	4044,c	;volatile
  5390                           
  5391                           ;tmr1.c: 78: TMR1H = 0x00;
  5392  002848  0E00               	movlw	0
  5393  00284A  6ECF               	movwf	4047,c	;volatile
  5394                           
  5395                           ;tmr1.c: 81: TMR1L = 0x00;
  5396  00284C  0E00               	movlw	0
  5397  00284E  6ECE               	movwf	4046,c	;volatile
  5398                           
  5399                           ;tmr1.c: 84: timer1ReloadVal=0;
  5400  002850  0E00               	movlw	0
  5401  002852  6E3B               	movwf	_timer1ReloadVal+1,c	;volatile
  5402  002854  0E00               	movlw	0
  5403  002856  6E3A               	movwf	_timer1ReloadVal,c	;volatile
  5404                           
  5405                           ;tmr1.c: 87: PIR1bits.TMR1IF = 0;
  5406  002858  909E               	bcf	3998,0,c	;volatile
  5407                           
  5408                           ;tmr1.c: 90: PIE1bits.TMR1IE = 1;
  5409  00285A  809D               	bsf	3997,0,c	;volatile
  5410                           
  5411                           ;tmr1.c: 93: TMR1_StartTimer();
  5412  00285C  ECD9  F014         	call	_TMR1_StartTimer	;wreg free
  5413  002860  0012               	return		;funcret
  5414  002862                     __end_of_TMR1_Initialize:
  5415                           	opt stack 0
  5416                           tosu	equ	0xFFF
  5417                           tosh	equ	0xFFE
  5418                           tosl	equ	0xFFD
  5419                           pclath	equ	0xFFA
  5420                           tblptru	equ	0xFF8
  5421                           tblptrh	equ	0xFF7
  5422                           tblptrl	equ	0xFF6
  5423                           tablat	equ	0xFF5
  5424                           prodh	equ	0xFF4
  5425                           prodl	equ	0xFF3
  5426                           intcon	equ	0xFF2
  5427                           postinc0	equ	0xFEE
  5428                           wreg	equ	0xFE8
  5429                           indf2	equ	0xFDF
  5430                           postinc2	equ	0xFDE
  5431                           postdec2	equ	0xFDD
  5432                           plusw2	equ	0xFDB
  5433                           fsr2h	equ	0xFDA
  5434                           fsr2l	equ	0xFD9
  5435                           status	equ	0xFD8
  5436                           
  5437 ;; *************** function _TMR1_StartTimer *****************
  5438 ;; Defined at:
  5439 ;;		line 96 in file "mcc_generated_files/tmr1.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		None
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5453 ;;      Params:         0       0       0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    6
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_TMR1_Initialize
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text25
  5468  0029B2                     __ptext25:
  5469                           	opt stack 0
  5470  0029B2                     _TMR1_StartTimer:
  5471                           	opt stack 22
  5472                           
  5473                           ;tmr1.c: 99: T1CONbits.TMR1ON = 1;
  5474                           
  5475                           ;incstack = 0
  5476  0029B2  80CD               	bsf	4045,0,c	;volatile
  5477  0029B4  0012               	return		;funcret
  5478  0029B6                     __end_of_TMR1_StartTimer:
  5479                           	opt stack 0
  5480                           tosu	equ	0xFFF
  5481                           tosh	equ	0xFFE
  5482                           tosl	equ	0xFFD
  5483                           pclath	equ	0xFFA
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           intcon	equ	0xFF2
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           indf2	equ	0xFDF
  5494                           postinc2	equ	0xFDE
  5495                           postdec2	equ	0xFDD
  5496                           plusw2	equ	0xFDB
  5497                           fsr2h	equ	0xFDA
  5498                           fsr2l	equ	0xFD9
  5499                           status	equ	0xFD8
  5500                           
  5501 ;; *************** function _PWM4_Initialize *****************
  5502 ;; Defined at:
  5503 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5517 ;;      Params:         0       0       0       0       0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0
  5520 ;;      Totals:         0       0       0       0       0       0       0
  5521 ;;Total ram usage:        0 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    6
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_SYSTEM_Initialize
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text26
  5532  002950                     __ptext26:
  5533                           	opt stack 0
  5534  002950                     _PWM4_Initialize:
  5535                           	opt stack 23
  5536                           
  5537                           ;pwm4.c: 69: CCP2CON = 0x1C;
  5538                           
  5539                           ;incstack = 0
  5540  002950  0E1C               	movlw	28
  5541  002952  6E66               	movwf	3942,c	;volatile
  5542                           
  5543                           ;pwm4.c: 72: CCPR2L = 0x3E;
  5544  002954  0E3E               	movlw	62
  5545  002956  6E67               	movwf	3943,c	;volatile
  5546                           
  5547                           ;pwm4.c: 75: CCPR2H = 0x00;
  5548  002958  0E00               	movlw	0
  5549  00295A  6E68               	movwf	3944,c	;volatile
  5550                           
  5551                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
  5552  00295C  0EFC               	movlw	-4
  5553  00295E  010F               	movlb	15	; () banked
  5554  002960  1748               	andwf	72,f,b	;volatile
  5555                           
  5556                           ; BSR set to: 15
  5557  002962  0012               	return		;funcret
  5558  002964                     __end_of_PWM4_Initialize:
  5559                           	opt stack 0
  5560                           tosu	equ	0xFFF
  5561                           tosh	equ	0xFFE
  5562                           tosl	equ	0xFFD
  5563                           pclath	equ	0xFFA
  5564                           tblptru	equ	0xFF8
  5565                           tblptrh	equ	0xFF7
  5566                           tblptrl	equ	0xFF6
  5567                           tablat	equ	0xFF5
  5568                           prodh	equ	0xFF4
  5569                           prodl	equ	0xFF3
  5570                           intcon	equ	0xFF2
  5571                           postinc0	equ	0xFEE
  5572                           wreg	equ	0xFE8
  5573                           indf2	equ	0xFDF
  5574                           postinc2	equ	0xFDE
  5575                           postdec2	equ	0xFDD
  5576                           plusw2	equ	0xFDB
  5577                           fsr2h	equ	0xFDA
  5578                           fsr2l	equ	0xFD9
  5579                           status	equ	0xFD8
  5580                           
  5581 ;; *************** function _PIN_MANAGER_Initialize *****************
  5582 ;; Defined at:
  5583 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      void 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5597 ;;      Params:         0       0       0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0
  5600 ;;      Totals:         0       0       0       0       0       0       0
  5601 ;;Total ram usage:        0 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    6
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_SYSTEM_Initialize
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text27
  5612  001FEA                     __ptext27:
  5613                           	opt stack 0
  5614  001FEA                     _PIN_MANAGER_Initialize:
  5615                           	opt stack 23
  5616                           
  5617                           ;pin_manager.c: 52: LATA = 0x00;
  5618                           
  5619                           ; BSR set to: 15
  5620                           ;incstack = 0
  5621  001FEA  0E00               	movlw	0
  5622  001FEC  6E89               	movwf	3977,c	;volatile
  5623                           
  5624                           ;pin_manager.c: 53: TRISA = 0xF7;
  5625  001FEE  0EF7               	movlw	247
  5626  001FF0  6E92               	movwf	3986,c	;volatile
  5627                           
  5628                           ;pin_manager.c: 54: ANSELA = 0x27;
  5629  001FF2  0E27               	movlw	39
  5630  001FF4  010F               	movlb	15	; () banked
  5631  001FF6  6F38               	movwf	56,b	;volatile
  5632                           
  5633                           ;pin_manager.c: 56: LATB = 0x01;
  5634  001FF8  0E01               	movlw	1
  5635  001FFA  6E8A               	movwf	3978,c	;volatile
  5636                           
  5637                           ;pin_manager.c: 57: TRISB = 0xFE;
  5638  001FFC  0EFE               	movlw	254
  5639  001FFE  6E93               	movwf	3987,c	;volatile
  5640                           
  5641                           ;pin_manager.c: 58: ANSELB = 0x3E;
  5642  002000  0E3E               	movlw	62
  5643  002002  010F               	movlb	15	; () banked
  5644  002004  6F39               	movwf	57,b	;volatile
  5645                           
  5646                           ;pin_manager.c: 59: WPUB = 0x00;
  5647  002006  0E00               	movlw	0
  5648  002008  6E61               	movwf	3937,c	;volatile
  5649                           
  5650                           ;pin_manager.c: 61: LATC = 0x00;
  5651  00200A  0E00               	movlw	0
  5652  00200C  6E8B               	movwf	3979,c	;volatile
  5653                           
  5654                           ;pin_manager.c: 62: TRISC = 0xDF;
  5655  00200E  0EDF               	movlw	223
  5656  002010  6E94               	movwf	3988,c	;volatile
  5657                           
  5658                           ;pin_manager.c: 63: ANSELC = 0x1C;
  5659  002012  0E1C               	movlw	28
  5660  002014  010F               	movlb	15	; () banked
  5661  002016  6F3A               	movwf	58,b	;volatile
  5662                           
  5663                           ;pin_manager.c: 65: LATD = 0x00;
  5664  002018  0E00               	movlw	0
  5665  00201A  6E8C               	movwf	3980,c	;volatile
  5666                           
  5667                           ;pin_manager.c: 66: TRISD = 0x0F;
  5668  00201C  0E0F               	movlw	15
  5669  00201E  6E95               	movwf	3989,c	;volatile
  5670                           
  5671                           ;pin_manager.c: 67: ANSELD = 0x0F;
  5672  002020  0E0F               	movlw	15
  5673  002022  010F               	movlb	15	; () banked
  5674  002024  6F3B               	movwf	59,b	;volatile
  5675                           
  5676                           ;pin_manager.c: 69: LATE = 0x00;
  5677  002026  0E00               	movlw	0
  5678  002028  6E8D               	movwf	3981,c	;volatile
  5679                           
  5680                           ;pin_manager.c: 70: TRISE = 0x07;
  5681  00202A  0E07               	movlw	7
  5682  00202C  6E96               	movwf	3990,c	;volatile
  5683                           
  5684                           ;pin_manager.c: 71: ANSELE = 0x07;
  5685  00202E  0E07               	movlw	7
  5686  002030  010F               	movlb	15	; () banked
  5687  002032  6F3C               	movwf	60,b	;volatile
  5688                           
  5689                           ; BSR set to: 15
  5690                           ;pin_manager.c: 72: TRISCbits.RC6 = 1;
  5691  002034  8C94               	bsf	3988,6,c	;volatile
  5692                           
  5693                           ; BSR set to: 15
  5694                           ;pin_manager.c: 73: TRISCbits.RC7 = 1;
  5695  002036  8E94               	bsf	3988,7,c	;volatile
  5696                           
  5697                           ; BSR set to: 15
  5698                           ;pin_manager.c: 74: TRISCbits.RC5 = 0;
  5699  002038  9A94               	bcf	3988,5,c	;volatile
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;pin_manager.c: 75: LATCbits.LATC5 = 1;
  5703  00203A  8A8B               	bsf	3979,5,c	;volatile
  5704                           
  5705                           ; BSR set to: 15
  5706                           ;pin_manager.c: 76: LATCbits.LATC6 = 1;
  5707  00203C  8C8B               	bsf	3979,6,c	;volatile
  5708                           
  5709                           ; BSR set to: 15
  5710                           ;pin_manager.c: 77: LATCbits.LATC7 = 1;
  5711  00203E  8E8B               	bsf	3979,7,c	;volatile
  5712                           
  5713                           ; BSR set to: 15
  5714                           ;pin_manager.c: 78: ANSELCbits.ANSC5 =0;
  5715  002040  010F               	movlb	15	; () banked
  5716  002042  9B3A               	bcf	58,5,b	;volatile
  5717                           
  5718                           ; BSR set to: 15
  5719                           ;pin_manager.c: 79: ANSELCbits.ANSC6 =0;
  5720  002044  010F               	movlb	15	; () banked
  5721  002046  9D3A               	bcf	58,6,b	;volatile
  5722                           
  5723                           ; BSR set to: 15
  5724                           ;pin_manager.c: 80: ANSELCbits.ANSC7 =0;
  5725  002048  010F               	movlb	15	; () banked
  5726  00204A  9F3A               	bcf	58,7,b	;volatile
  5727                           
  5728                           ; BSR set to: 15
  5729                           ;pin_manager.c: 82: INTCON2bits.nRBPU = 0x01;
  5730  00204C  8EF1               	bsf	intcon2,7,c	;volatile
  5731                           
  5732                           ; BSR set to: 15
  5733                           
  5734                           ; BSR set to: 15
  5735                           
  5736                           ;pin_manager.c: 84: do { TRISB4 = 0; } while(0);
  5737  00204E  9893               	bcf	3987,4,c	;volatile
  5738                           
  5739                           ; BSR set to: 15
  5740                           
  5741                           ; BSR set to: 15
  5742                           
  5743                           ;pin_manager.c: 85: do { TRISB3 = 0; } while(0);
  5744                           
  5745                           ; BSR set to: 15
  5746  002050  9693               	bcf	3987,3,c	;volatile
  5747                           
  5748                           ; BSR set to: 15
  5749                           
  5750                           ; BSR set to: 15
  5751                           
  5752                           ;pin_manager.c: 86: do { TRISB5 = 0; } while(0);
  5753                           
  5754                           ; BSR set to: 15
  5755  002052  9A93               	bcf	3987,5,c	;volatile
  5756                           
  5757                           ; BSR set to: 15
  5758                           ;pin_manager.c: 88: TRISDbits.RD1 = 0;
  5759                           
  5760                           ; BSR set to: 15
  5761  002054  9295               	bcf	3989,1,c	;volatile
  5762                           
  5763                           ; BSR set to: 15
  5764                           
  5765                           ; BSR set to: 15
  5766                           
  5767                           ;pin_manager.c: 90: do { ANSB3 = 0; } while(0);
  5768  002056  010F               	movlb	15	; () banked
  5769  002058  9739               	bcf	57,3,b	;volatile
  5770                           
  5771                           ; BSR set to: 15
  5772                           
  5773                           ; BSR set to: 15
  5774                           
  5775                           ;pin_manager.c: 91: do { ANSD7 = 0; } while(0);
  5776                           
  5777                           ; BSR set to: 15
  5778  00205A  010F               	movlb	15	; () banked
  5779  00205C  9F3B               	bcf	59,7,b	;volatile
  5780                           
  5781                           ; BSR set to: 15
  5782                           
  5783                           ; BSR set to: 15
  5784                           
  5785                           ;pin_manager.c: 92: do { ANSB4 = 0; } while(0);
  5786                           
  5787                           ; BSR set to: 15
  5788  00205E  010F               	movlb	15	; () banked
  5789  002060  9939               	bcf	57,4,b	;volatile
  5790  002062  0012               	return	
  5791  002064                     __end_of_PIN_MANAGER_Initialize:
  5792                           	opt stack 0
  5793                           tosu	equ	0xFFF
  5794                           tosh	equ	0xFFE
  5795                           tosl	equ	0xFFD
  5796                           pclath	equ	0xFFA
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           intcon	equ	0xFF2
  5804                           intcon2	equ	0xFF1
  5805                           postinc0	equ	0xFEE
  5806                           wreg	equ	0xFE8
  5807                           indf2	equ	0xFDF
  5808                           postinc2	equ	0xFDE
  5809                           postdec2	equ	0xFDD
  5810                           plusw2	equ	0xFDB
  5811                           fsr2h	equ	0xFDA
  5812                           fsr2l	equ	0xFD9
  5813                           status	equ	0xFD8
  5814                           
  5815 ;; *************** function _OSCILLATOR_Initialize *****************
  5816 ;; Defined at:
  5817 ;;		line 126 in file "mcc_generated_files/mcc.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5831 ;;      Params:         0       0       0       0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0
  5834 ;;      Totals:         0       0       0       0       0       0       0
  5835 ;;Total ram usage:        0 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    6
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_SYSTEM_Initialize
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text28
  5846  00298A                     __ptext28:
  5847                           	opt stack 0
  5848  00298A                     _OSCILLATOR_Initialize:
  5849                           	opt stack 23
  5850                           
  5851                           ;mcc.c: 128: OSCCON = 0x72;
  5852                           
  5853                           ; BSR set to: 15
  5854                           ;incstack = 0
  5855  00298A  0E72               	movlw	114
  5856  00298C  6ED3               	movwf	4051,c	;volatile
  5857                           
  5858                           ;mcc.c: 130: OSCCON2 = 0x04;
  5859  00298E  0E04               	movlw	4
  5860  002990  6ED2               	movwf	4050,c	;volatile
  5861                           
  5862                           ;mcc.c: 132: OSCTUNE = 0x00;
  5863  002992  0E00               	movlw	0
  5864  002994  6E9B               	movwf	3995,c	;volatile
  5865  002996  0012               	return		;funcret
  5866  002998                     __end_of_OSCILLATOR_Initialize:
  5867                           	opt stack 0
  5868                           tosu	equ	0xFFF
  5869                           tosh	equ	0xFFE
  5870                           tosl	equ	0xFFD
  5871                           pclath	equ	0xFFA
  5872                           tblptru	equ	0xFF8
  5873                           tblptrh	equ	0xFF7
  5874                           tblptrl	equ	0xFF6
  5875                           tablat	equ	0xFF5
  5876                           prodh	equ	0xFF4
  5877                           prodl	equ	0xFF3
  5878                           intcon	equ	0xFF2
  5879                           intcon2	equ	0xFF1
  5880                           postinc0	equ	0xFEE
  5881                           wreg	equ	0xFE8
  5882                           indf2	equ	0xFDF
  5883                           postinc2	equ	0xFDE
  5884                           postdec2	equ	0xFDD
  5885                           plusw2	equ	0xFDB
  5886                           fsr2h	equ	0xFDA
  5887                           fsr2l	equ	0xFD9
  5888                           status	equ	0xFD8
  5889                           
  5890 ;; *************** function _INTERRUPT_Initialize *****************
  5891 ;; Defined at:
  5892 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      void 
  5899 ;; Registers used:
  5900 ;;		None
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5906 ;;      Params:         0       0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0
  5908 ;;      Temps:          0       0       0       0       0       0       0
  5909 ;;      Totals:         0       0       0       0       0       0       0
  5910 ;;Total ram usage:        0 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    6
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_SYSTEM_Initialize
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text29
  5921  002998                     __ptext29:
  5922                           	opt stack 0
  5923  002998                     _INTERRUPT_Initialize:
  5924                           	opt stack 23
  5925                           
  5926                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  5927                           
  5928                           ;incstack = 0
  5929  002998  9ED0               	bcf	4048,7,c	;volatile
  5930                           
  5931                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  5932  00299A  9A9F               	bcf	3999,5,c	;volatile
  5933                           
  5934                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  5935  00299C  989F               	bcf	3999,4,c	;volatile
  5936                           
  5937                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
  5938  00299E  9C9F               	bcf	3999,6,c	;volatile
  5939  0029A0  0012               	return		;funcret
  5940  0029A2                     __end_of_INTERRUPT_Initialize:
  5941                           	opt stack 0
  5942                           tosu	equ	0xFFF
  5943                           tosh	equ	0xFFE
  5944                           tosl	equ	0xFFD
  5945                           pclath	equ	0xFFA
  5946                           tblptru	equ	0xFF8
  5947                           tblptrh	equ	0xFF7
  5948                           tblptrl	equ	0xFF6
  5949                           tablat	equ	0xFF5
  5950                           prodh	equ	0xFF4
  5951                           prodl	equ	0xFF3
  5952                           intcon	equ	0xFF2
  5953                           intcon2	equ	0xFF1
  5954                           postinc0	equ	0xFEE
  5955                           wreg	equ	0xFE8
  5956                           indf2	equ	0xFDF
  5957                           postinc2	equ	0xFDE
  5958                           postdec2	equ	0xFDD
  5959                           plusw2	equ	0xFDB
  5960                           fsr2h	equ	0xFDA
  5961                           fsr2l	equ	0xFD9
  5962                           status	equ	0xFD8
  5963                           
  5964 ;; *************** function _EUSART1_Initialize *****************
  5965 ;; Defined at:
  5966 ;;		line 23 in file "UART.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;		None
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;		None
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      void 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5980 ;;      Params:         0       0       0       0       0       0       0
  5981 ;;      Locals:         0       0       0       0       0       0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0
  5983 ;;      Totals:         0       0       0       0       0       0       0
  5984 ;;Total ram usage:        0 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    8
  5987 ;; This function calls:
  5988 ;;		_UART_buff_init
  5989 ;; This function is called by:
  5990 ;;		_SYSTEM_Initialize
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text30
  5995  002526                     __ptext30:
  5996                           	opt stack 0
  5997  002526                     _EUSART1_Initialize:
  5998                           	opt stack 21
  5999                           
  6000                           ;UART.c: 25: PIE1bits.RC1IE = 0;
  6001                           
  6002                           ;incstack = 0
  6003  002526  9A9D               	bcf	3997,5,c	;volatile
  6004                           
  6005                           ;UART.c: 26: PIE1bits.TX1IE = 0;
  6006  002528  989D               	bcf	3997,4,c	;volatile
  6007                           
  6008                           ;UART.c: 31: BAUD1CON = 0x48;
  6009  00252A  0E48               	movlw	72
  6010  00252C  6EB8               	movwf	4024,c	;volatile
  6011                           
  6012                           ;UART.c: 34: RC1STA = 0x98;
  6013  00252E  0E98               	movlw	152
  6014  002530  6EAB               	movwf	4011,c	;volatile
  6015                           
  6016                           ;UART.c: 37: TX1STA = 0x26;
  6017  002532  0E26               	movlw	38
  6018  002534  6EAC               	movwf	4012,c	;volatile
  6019                           
  6020                           ;UART.c: 40: SPBRG1 = (((16000000/38400)/4)-1);
  6021  002536  0E67               	movlw	103
  6022  002538  6EAF               	movwf	4015,c	;volatile
  6023                           
  6024                           ;UART.c: 43: SPBRGH1 = 0x00;
  6025  00253A  0E00               	movlw	0
  6026  00253C  6EB0               	movwf	4016,c	;volatile
  6027                           
  6028                           ;UART.c: 46: TXREG1 = 0x00;
  6029  00253E  0E00               	movlw	0
  6030  002540  6EAD               	movwf	4013,c	;volatile
  6031                           
  6032                           ;UART.c: 49: RCREG1 = 0x00;
  6033  002542  0E00               	movlw	0
  6034  002544  6EAE               	movwf	4014,c	;volatile
  6035                           
  6036                           ;UART.c: 51: UART_buff_init(&input_buffer);
  6037  002546  0E00               	movlw	low _input_buffer
  6038  002548  0100               	movlb	0	; () banked
  6039  00254A  6FDA               	movwf	UART_buff_init@_this& (0+255),b
  6040  00254C  0E03               	movlw	high _input_buffer
  6041  00254E  0100               	movlb	0	; () banked
  6042  002550  6FDB               	movwf	(UART_buff_init@_this+1)& (0+255),b
  6043  002552  EC31  F014         	call	_UART_buff_init	;wreg free
  6044                           
  6045                           ;UART.c: 52: UART_buff_init(&output_buffer);
  6046  002556  0E00               	movlw	low _output_buffer
  6047  002558  0100               	movlb	0	; () banked
  6048  00255A  6FDA               	movwf	UART_buff_init@_this& (0+255),b
  6049  00255C  0E04               	movlw	high _output_buffer
  6050  00255E  0100               	movlb	0	; () banked
  6051  002560  6FDB               	movwf	(UART_buff_init@_this+1)& (0+255),b
  6052  002562  EC31  F014         	call	_UART_buff_init	;wreg free
  6053                           
  6054                           ;UART.c: 54: PIE1bits.RC1IE = 1;
  6055  002566  8A9D               	bsf	3997,5,c	;volatile
  6056  002568  0012               	return		;funcret
  6057  00256A                     __end_of_EUSART1_Initialize:
  6058                           	opt stack 0
  6059                           tosu	equ	0xFFF
  6060                           tosh	equ	0xFFE
  6061                           tosl	equ	0xFFD
  6062                           pclath	equ	0xFFA
  6063                           tblptru	equ	0xFF8
  6064                           tblptrh	equ	0xFF7
  6065                           tblptrl	equ	0xFF6
  6066                           tablat	equ	0xFF5
  6067                           prodh	equ	0xFF4
  6068                           prodl	equ	0xFF3
  6069                           intcon	equ	0xFF2
  6070                           intcon2	equ	0xFF1
  6071                           postinc0	equ	0xFEE
  6072                           wreg	equ	0xFE8
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           postdec2	equ	0xFDD
  6076                           plusw2	equ	0xFDB
  6077                           fsr2h	equ	0xFDA
  6078                           fsr2l	equ	0xFD9
  6079                           status	equ	0xFD8
  6080                           
  6081 ;; *************** function _UART_buff_init *****************
  6082 ;; Defined at:
  6083 ;;		line 58 in file "UART.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  _this           2    8[BANK0 ] PTR struct UART_ring_buf
  6086 ;;		 -> output_buffer(206), input_buffer(206), 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6098 ;;      Params:         0       2       0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0
  6101 ;;      Totals:         0       2       0       0       0       0       0
  6102 ;;Total ram usage:        2 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    7
  6105 ;; This function calls:
  6106 ;;		_memset
  6107 ;; This function is called by:
  6108 ;;		_EUSART1_Initialize
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text31
  6113  002862                     __ptext31:
  6114                           	opt stack 0
  6115  002862                     _UART_buff_init:
  6116                           	opt stack 21
  6117                           
  6118                           ;UART.c: 67: memset(_this, 0, sizeof (*_this));
  6119                           
  6120                           ;incstack = 0
  6121  002862  C0DA  F0D2         	movff	UART_buff_init@_this,memset@p1
  6122  002866  C0DB  F0D3         	movff	UART_buff_init@_this+1,memset@p1+1
  6123  00286A  0E00               	movlw	0
  6124  00286C  0100               	movlb	0	; () banked
  6125  00286E  6FD5               	movwf	(memset@c+1)& (0+255),b
  6126  002870  0E00               	movlw	0
  6127  002872  6FD4               	movwf	memset@c& (0+255),b
  6128  002874  0E00               	movlw	0
  6129  002876  0100               	movlb	0	; () banked
  6130  002878  6FD7               	movwf	(memset@n+1)& (0+255),b
  6131  00287A  0ECE               	movlw	206
  6132  00287C  6FD6               	movwf	memset@n& (0+255),b
  6133  00287E  EC83  F013         	call	_memset	;wreg free
  6134  002882  0012               	return		;funcret
  6135  002884                     __end_of_UART_buff_init:
  6136                           	opt stack 0
  6137                           tosu	equ	0xFFF
  6138                           tosh	equ	0xFFE
  6139                           tosl	equ	0xFFD
  6140                           pclath	equ	0xFFA
  6141                           tblptru	equ	0xFF8
  6142                           tblptrh	equ	0xFF7
  6143                           tblptrl	equ	0xFF6
  6144                           tablat	equ	0xFF5
  6145                           prodh	equ	0xFF4
  6146                           prodl	equ	0xFF3
  6147                           intcon	equ	0xFF2
  6148                           intcon2	equ	0xFF1
  6149                           postinc0	equ	0xFEE
  6150                           wreg	equ	0xFE8
  6151                           indf2	equ	0xFDF
  6152                           postinc2	equ	0xFDE
  6153                           postdec2	equ	0xFDD
  6154                           plusw2	equ	0xFDB
  6155                           fsr2h	equ	0xFDA
  6156                           fsr2l	equ	0xFD9
  6157                           status	equ	0xFD8
  6158                           
  6159 ;; *************** function _memset *****************
  6160 ;; Defined at:
  6161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  p1              2    0[BANK0 ] PTR void 
  6164 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  6165 ;;  c               2    2[BANK0 ] int 
  6166 ;;  n               2    4[BANK0 ] unsigned int 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  p               2    6[BANK0 ] PTR unsigned char 
  6169 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  2    0[BANK0 ] PTR void 
  6172 ;; Registers used:
  6173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6179 ;;      Params:         0       6       0       0       0       0       0
  6180 ;;      Locals:         0       2       0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0
  6182 ;;      Totals:         0       8       0       0       0       0       0
  6183 ;;Total ram usage:        8 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    6
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_FastTransfer_buffer_flush
  6190 ;;		_UART_buff_init
  6191 ;;		_UART_buff_flush
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text32
  6196  002706                     __ptext32:
  6197                           	opt stack 0
  6198  002706                     _memset:
  6199                           	opt stack 20
  6200                           
  6201                           ;incstack = 0
  6202  002706  C0D2  F0D8         	movff	memset@p1,memset@p
  6203  00270A  C0D3  F0D9         	movff	memset@p1+1,memset@p+1
  6204  00270E  D009               	goto	l4024
  6205  002710                     l4020:
  6206  002710  C0D8  FFD9         	movff	memset@p,fsr2l
  6207  002714  C0D9  FFDA         	movff	memset@p+1,fsr2h
  6208  002718  C0D4  FFDF         	movff	memset@c,indf2
  6209  00271C  0100               	movlb	0	; () banked
  6210  00271E  4BD8               	infsnz	memset@p& (0+255),f,b
  6211  002720  2BD9               	incf	(memset@p+1)& (0+255),f,b
  6212  002722                     l4024:
  6213  002722  0100               	movlb	0	; () banked
  6214  002724  07D6               	decf	memset@n& (0+255),f,b
  6215  002726  A0D8               	btfss	status,0,c
  6216  002728  07D7               	decf	(memset@n+1)& (0+255),f,b
  6217  00272A  0100               	movlb	0	; () banked
  6218  00272C  29D6               	incf	memset@n& (0+255),w,b
  6219  00272E  E1F0               	bnz	l4020
  6220  002730  0100               	movlb	0	; () banked
  6221  002732  29D7               	incf	(memset@n+1)& (0+255),w,b
  6222  002734  B4D8               	btfsc	status,2,c
  6223  002736  0012               	return	
  6224  002738  D7EB               	goto	l4020
  6225  00273A                     __end_of_memset:
  6226                           	opt stack 0
  6227                           tosu	equ	0xFFF
  6228                           tosh	equ	0xFFE
  6229                           tosl	equ	0xFFD
  6230                           pclath	equ	0xFFA
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           intcon2	equ	0xFF1
  6239                           postinc0	equ	0xFEE
  6240                           wreg	equ	0xFE8
  6241                           indf2	equ	0xFDF
  6242                           postinc2	equ	0xFDE
  6243                           postdec2	equ	0xFDD
  6244                           plusw2	equ	0xFDB
  6245                           fsr2h	equ	0xFDA
  6246                           fsr2l	equ	0xFD9
  6247                           status	equ	0xFD8
  6248                           
  6249 ;; *************** function _ADC_Initialize *****************
  6250 ;; Defined at:
  6251 ;;		line 59 in file "mcc_generated_files/adc.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6265 ;;      Params:         0       0       0       0       0       0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0
  6268 ;;      Totals:         0       0       0       0       0       0       0
  6269 ;;Total ram usage:        0 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    6
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_SYSTEM_Initialize
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text33
  6280  0028F8                     __ptext33:
  6281                           	opt stack 0
  6282  0028F8                     _ADC_Initialize:
  6283                           	opt stack 23
  6284                           
  6285                           ;adc.c: 64: ADCON0 = 0x01;
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;incstack = 0
  6289  0028F8  0E01               	movlw	1
  6290  0028FA  6EC2               	movwf	4034,c	;volatile
  6291                           
  6292                           ;adc.c: 67: ADCON1 = 0x80;
  6293  0028FC  0E80               	movlw	128
  6294  0028FE  6EC1               	movwf	4033,c	;volatile
  6295                           
  6296                           ;adc.c: 70: ADCON2 = 0x12;
  6297  002900  0E12               	movlw	18
  6298  002902  6EC0               	movwf	4032,c	;volatile
  6299                           
  6300                           ;adc.c: 72: ADCON2bits.ADFM = 1;
  6301  002904  8EC0               	bsf	4032,7,c	;volatile
  6302                           
  6303                           ;adc.c: 75: ADRESL = 0x00;
  6304  002906  0E00               	movlw	0
  6305  002908  6EC3               	movwf	4035,c	;volatile
  6306                           
  6307                           ;adc.c: 78: ADRESH = 0x00;
  6308  00290A  0E00               	movlw	0
  6309  00290C  6EC4               	movwf	4036,c	;volatile
  6310  00290E  0012               	return		;funcret
  6311  002910                     __end_of_ADC_Initialize:
  6312                           	opt stack 0
  6313                           tosu	equ	0xFFF
  6314                           tosh	equ	0xFFE
  6315                           tosl	equ	0xFFD
  6316                           pclath	equ	0xFFA
  6317                           tblptru	equ	0xFF8
  6318                           tblptrh	equ	0xFF7
  6319                           tblptrl	equ	0xFF6
  6320                           tablat	equ	0xFF5
  6321                           prodh	equ	0xFF4
  6322                           prodl	equ	0xFF3
  6323                           intcon	equ	0xFF2
  6324                           intcon2	equ	0xFF1
  6325                           postinc0	equ	0xFEE
  6326                           wreg	equ	0xFE8
  6327                           indf2	equ	0xFDF
  6328                           postinc2	equ	0xFDE
  6329                           postdec2	equ	0xFDD
  6330                           plusw2	equ	0xFDB
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _PDUStartup *****************
  6336 ;; Defined at:
  6337 ;;		line 18 in file "PDU.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6351 ;;      Params:         0       0       0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0
  6354 ;;      Totals:         0       0       0       0       0       0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   10
  6358 ;; This function calls:
  6359 ;;		_ComputeStorageData
  6360 ;;		_EnableSlavePower
  6361 ;;		_StartUp595
  6362 ;;		_Update
  6363 ;; This function is called by:
  6364 ;;		_main
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text34
  6369  00222C                     __ptext34:
  6370                           	opt stack 0
  6371  00222C                     _PDUStartup:
  6372                           	opt stack 20
  6373                           
  6374                           ;PDU.c: 21: StartUp595();
  6375                           
  6376                           ;incstack = 0
  6377  00222C  EC84  F011         	call	_StartUp595	;wreg free
  6378                           
  6379                           ;PDU.c: 22: EnableSlavePower(SAS, OFF);
  6380  002230  0E00               	movlw	0
  6381  002232  0100               	movlb	0	; () banked
  6382  002234  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  6383  002236  0E00               	movlw	0
  6384  002238  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  6385  00223A  0E03               	movlw	3
  6386  00223C  ECA0  F00C         	call	_EnableSlavePower
  6387                           
  6388                           ;PDU.c: 23: EnableSlavePower(DDS, OFF);
  6389  002240  0E00               	movlw	0
  6390  002242  0100               	movlb	0	; () banked
  6391  002244  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  6392  002246  0E00               	movlw	0
  6393  002248  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  6394  00224A  0E01               	movlw	1
  6395  00224C  ECA0  F00C         	call	_EnableSlavePower
  6396                           
  6397                           ;PDU.c: 24: EnableSlavePower(MCS, OFF);
  6398  002250  0E00               	movlw	0
  6399  002252  0100               	movlb	0	; () banked
  6400  002254  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  6401  002256  0E00               	movlw	0
  6402  002258  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  6403  00225A  0E02               	movlw	2
  6404  00225C  ECA0  F00C         	call	_EnableSlavePower
  6405                           
  6406                           ;PDU.c: 25: EnableSlavePower(BMM, OFF);
  6407  002260  0E00               	movlw	0
  6408  002262  0100               	movlb	0	; () banked
  6409  002264  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  6410  002266  0E00               	movlw	0
  6411  002268  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  6412  00226A  0E04               	movlw	4
  6413  00226C  ECA0  F00C         	call	_EnableSlavePower
  6414                           
  6415                           ;PDU.c: 26: EnableSlavePower(TSS, OFF);
  6416  002270  0E00               	movlw	0
  6417  002272  0100               	movlb	0	; () banked
  6418  002274  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  6419  002276  0E00               	movlw	0
  6420  002278  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  6421  00227A  0E05               	movlw	5
  6422  00227C  ECA0  F00C         	call	_EnableSlavePower
  6423                           
  6424                           ;PDU.c: 27: EnableSlavePower(AUX, OFF);
  6425  002280  0E00               	movlw	0
  6426  002282  0100               	movlb	0	; () banked
  6427  002284  6FDD               	movwf	(EnableSlavePower@onof+1)& (0+255),b
  6428  002286  0E00               	movlw	0
  6429  002288  6FDC               	movwf	EnableSlavePower@onof& (0+255),b
  6430  00228A  0E06               	movlw	6
  6431  00228C  ECA0  F00C         	call	_EnableSlavePower
  6432                           
  6433                           ;PDU.c: 28: Update();
  6434  002290  ECD1  F014         	call	_Update	;wreg free
  6435                           
  6436                           ;PDU.c: 30: ComputeStorageData();
  6437  002294  EC98  F00B         	call	_ComputeStorageData	;wreg free
  6438  002298  0012               	return		;funcret
  6439  00229A                     __end_of_PDUStartup:
  6440                           	opt stack 0
  6441                           tosu	equ	0xFFF
  6442                           tosh	equ	0xFFE
  6443                           tosl	equ	0xFFD
  6444                           pclath	equ	0xFFA
  6445                           tblptru	equ	0xFF8
  6446                           tblptrh	equ	0xFF7
  6447                           tblptrl	equ	0xFF6
  6448                           tablat	equ	0xFF5
  6449                           prodh	equ	0xFF4
  6450                           prodl	equ	0xFF3
  6451                           intcon	equ	0xFF2
  6452                           intcon2	equ	0xFF1
  6453                           postinc0	equ	0xFEE
  6454                           wreg	equ	0xFE8
  6455                           indf2	equ	0xFDF
  6456                           postinc2	equ	0xFDE
  6457                           postdec2	equ	0xFDD
  6458                           plusw2	equ	0xFDB
  6459                           fsr2h	equ	0xFDA
  6460                           fsr2l	equ	0xFD9
  6461                           status	equ	0xFD8
  6462                           
  6463 ;; *************** function _Update *****************
  6464 ;; Defined at:
  6465 ;;		line 209 in file "PDU.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6479 ;;      Params:         0       0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0
  6482 ;;      Totals:         0       0       0       0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    8
  6486 ;; This function calls:
  6487 ;;		_writeRegisters
  6488 ;; This function is called by:
  6489 ;;		_processPowerRequest
  6490 ;;		_PDUStartup
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text35
  6495  0029A2                     __ptext35:
  6496                           	opt stack 0
  6497  0029A2                     _Update:
  6498                           	opt stack 20
  6499                           
  6500                           ;PDU.c: 210: writeRegisters();
  6501                           
  6502                           ;incstack = 0
  6503  0029A2  EC22  F00F         	call	_writeRegisters	;wreg free
  6504  0029A6  0012               	return		;funcret
  6505  0029A8                     __end_of_Update:
  6506                           	opt stack 0
  6507                           tosu	equ	0xFFF
  6508                           tosh	equ	0xFFE
  6509                           tosl	equ	0xFFD
  6510                           pclath	equ	0xFFA
  6511                           tblptru	equ	0xFF8
  6512                           tblptrh	equ	0xFF7
  6513                           tblptrl	equ	0xFF6
  6514                           tablat	equ	0xFF5
  6515                           prodh	equ	0xFF4
  6516                           prodl	equ	0xFF3
  6517                           intcon	equ	0xFF2
  6518                           intcon2	equ	0xFF1
  6519                           postinc0	equ	0xFEE
  6520                           wreg	equ	0xFE8
  6521                           indf2	equ	0xFDF
  6522                           postinc2	equ	0xFDE
  6523                           postdec2	equ	0xFDD
  6524                           plusw2	equ	0xFDB
  6525                           fsr2h	equ	0xFDA
  6526                           fsr2l	equ	0xFD9
  6527                           status	equ	0xFD8
  6528                           
  6529 ;; *************** function _StartUp595 *****************
  6530 ;; Defined at:
  6531 ;;		line 10 in file "Shift595.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;		None
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6545 ;;      Params:         0       0       0       0       0       0       0
  6546 ;;      Locals:         0       0       0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0
  6548 ;;      Totals:         0       0       0       0       0       0       0
  6549 ;;Total ram usage:        0 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    9
  6552 ;; This function calls:
  6553 ;;		_Clear595
  6554 ;;		_Delay
  6555 ;; This function is called by:
  6556 ;;		_PDUStartup
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text36
  6561  002308                     __ptext36:
  6562                           	opt stack 0
  6563  002308                     _StartUp595:
  6564                           	opt stack 20
  6565                           
  6566                           ;incstack = 0
  6567                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  6568  002308  8A8C               	bsf	3980,5,c	;volatile
  6569                           
  6570                           ;Shift595.c: 13: do { LATB0 = 1; } while(0);
  6571  00230A  808A               	bsf	3978,0,c	;volatile
  6572                           
  6573                           ;Shift595.c: 15: Delay(2);
  6574  00230C  0E02               	movlw	2
  6575  00230E  0100               	movlb	0	; () banked
  6576  002310  6FD2               	movwf	Delay@wait& (0+255),b
  6577  002312  0E00               	movlw	0
  6578  002314  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  6579  002316  0E00               	movlw	0
  6580  002318  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  6581  00231A  0E00               	movlw	0
  6582  00231C  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  6583  00231E  ECB9  F011         	call	_Delay	;wreg free
  6584                           
  6585                           ;Shift595.c: 16: do { LATD5 = 0; } while(0);
  6586  002322  9A8C               	bcf	3980,5,c	;volatile
  6587                           
  6588                           ;Shift595.c: 17: Delay(2);
  6589  002324  0E02               	movlw	2
  6590  002326  0100               	movlb	0	; () banked
  6591  002328  6FD2               	movwf	Delay@wait& (0+255),b
  6592  00232A  0E00               	movlw	0
  6593  00232C  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  6594  00232E  0E00               	movlw	0
  6595  002330  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  6596  002332  0E00               	movlw	0
  6597  002334  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  6598  002336  ECB9  F011         	call	_Delay	;wreg free
  6599                           
  6600                           ;Shift595.c: 18: do { LATB0 = 0; } while(0);
  6601  00233A  908A               	bcf	3978,0,c	;volatile
  6602                           
  6603                           ;Shift595.c: 19: Delay(2);
  6604  00233C  0E02               	movlw	2
  6605  00233E  0100               	movlb	0	; () banked
  6606  002340  6FD2               	movwf	Delay@wait& (0+255),b
  6607  002342  0E00               	movlw	0
  6608  002344  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  6609  002346  0E00               	movlw	0
  6610  002348  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  6611  00234A  0E00               	movlw	0
  6612  00234C  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  6613  00234E  ECB9  F011         	call	_Delay	;wreg free
  6614                           
  6615                           ;Shift595.c: 20: do { LATD5 = 1; } while(0);
  6616  002352  8A8C               	bsf	3980,5,c	;volatile
  6617                           
  6618                           ;Shift595.c: 21: Delay(2);
  6619  002354  0E02               	movlw	2
  6620  002356  0100               	movlb	0	; () banked
  6621  002358  6FD2               	movwf	Delay@wait& (0+255),b
  6622  00235A  0E00               	movlw	0
  6623  00235C  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  6624  00235E  0E00               	movlw	0
  6625  002360  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  6626  002362  0E00               	movlw	0
  6627  002364  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  6628  002366  ECB9  F011         	call	_Delay	;wreg free
  6629                           
  6630                           ;Shift595.c: 22: do { LATB0 = 1; } while(0);
  6631  00236A  808A               	bsf	3978,0,c	;volatile
  6632                           
  6633                           ;Shift595.c: 24: Clear595();
  6634  00236C  ECB5  F012         	call	_Clear595	;wreg free
  6635  002370  0012               	return		;funcret
  6636  002372                     __end_of_StartUp595:
  6637                           	opt stack 0
  6638                           tosu	equ	0xFFF
  6639                           tosh	equ	0xFFE
  6640                           tosl	equ	0xFFD
  6641                           pclath	equ	0xFFA
  6642                           tblptru	equ	0xFF8
  6643                           tblptrh	equ	0xFF7
  6644                           tblptrl	equ	0xFF6
  6645                           tablat	equ	0xFF5
  6646                           prodh	equ	0xFF4
  6647                           prodl	equ	0xFF3
  6648                           intcon	equ	0xFF2
  6649                           intcon2	equ	0xFF1
  6650                           postinc0	equ	0xFEE
  6651                           wreg	equ	0xFE8
  6652                           indf2	equ	0xFDF
  6653                           postinc2	equ	0xFDE
  6654                           postdec2	equ	0xFDD
  6655                           plusw2	equ	0xFDB
  6656                           fsr2h	equ	0xFDA
  6657                           fsr2l	equ	0xFD9
  6658                           status	equ	0xFD8
  6659                           
  6660 ;; *************** function _Clear595 *****************
  6661 ;; Defined at:
  6662 ;;		line 39 in file "Shift595.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  i               2   13[BANK0 ] int 
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6676 ;;      Params:         0       0       0       0       0       0       0
  6677 ;;      Locals:         0       2       0       0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0
  6679 ;;      Totals:         0       2       0       0       0       0       0
  6680 ;;Total ram usage:        2 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    8
  6683 ;; This function calls:
  6684 ;;		_writeRegisters
  6685 ;; This function is called by:
  6686 ;;		_StartUp595
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text37
  6691  00256A                     __ptext37:
  6692                           	opt stack 0
  6693  00256A                     _Clear595:
  6694                           	opt stack 20
  6695                           
  6696                           ;Shift595.c: 40: for (int i = 3 * 8 - 1; i >= 0; i--) {
  6697                           
  6698                           ;incstack = 0
  6699  00256A  0E00               	movlw	0
  6700  00256C  0100               	movlb	0	; () banked
  6701  00256E  6FE0               	movwf	(Clear595@i+1)& (0+255),b
  6702  002570  0E17               	movlw	23
  6703  002572  6FDF               	movwf	Clear595@i& (0+255),b
  6704  002574                     l4214:
  6705                           
  6706                           ; BSR set to: 0
  6707  002574  0100               	movlb	0	; () banked
  6708  002576  BFE0               	btfsc	(Clear595@i+1)& (0+255),7,b
  6709  002578  D014               	goto	l4224
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;Shift595.c: 41: registers[i] = 0;
  6713                           
  6714                           ; BSR set to: 0
  6715                           
  6716                           ; BSR set to: 0
  6717  00257A  90D8               	bcf	status,0,c
  6718  00257C  0100               	movlb	0	; () banked
  6719  00257E  35DF               	rlcf	Clear595@i& (0+255),w,b
  6720  002580  6ED9               	movwf	fsr2l,c
  6721  002582  0100               	movlb	0	; () banked
  6722  002584  35E0               	rlcf	(Clear595@i+1)& (0+255),w,b
  6723  002586  6EDA               	movwf	fsr2h,c
  6724  002588  0E00               	movlw	low _registers
  6725  00258A  26D9               	addwf	fsr2l,f,c
  6726  00258C  0E01               	movlw	high _registers
  6727  00258E  22DA               	addwfc	fsr2h,f,c
  6728  002590  0E00               	movlw	0
  6729  002592  6EDE               	movwf	postinc2,c
  6730  002594  0E00               	movlw	0
  6731  002596  6EDD               	movwf	postdec2,c
  6732                           
  6733                           ; BSR set to: 0
  6734  002598  0100               	movlb	0	; () banked
  6735  00259A  07DF               	decf	Clear595@i& (0+255),f,b
  6736  00259C  A0D8               	btfss	status,0,c
  6737  00259E  07E0               	decf	(Clear595@i+1)& (0+255),f,b
  6738  0025A0  D7E9               	goto	l4214
  6739  0025A2                     l4224:
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;Shift595.c: 42: }
  6743                           ;Shift595.c: 44: writeRegisters();
  6744  0025A2  EC22  F00F         	call	_writeRegisters	;wreg free
  6745  0025A6  0012               	return		;funcret
  6746  0025A8                     __end_of_Clear595:
  6747                           	opt stack 0
  6748                           tosu	equ	0xFFF
  6749                           tosh	equ	0xFFE
  6750                           tosl	equ	0xFFD
  6751                           pclath	equ	0xFFA
  6752                           tblptru	equ	0xFF8
  6753                           tblptrh	equ	0xFF7
  6754                           tblptrl	equ	0xFF6
  6755                           tablat	equ	0xFF5
  6756                           prodh	equ	0xFF4
  6757                           prodl	equ	0xFF3
  6758                           intcon	equ	0xFF2
  6759                           intcon2	equ	0xFF1
  6760                           postinc0	equ	0xFEE
  6761                           wreg	equ	0xFE8
  6762                           indf2	equ	0xFDF
  6763                           postinc2	equ	0xFDE
  6764                           postdec2	equ	0xFDD
  6765                           plusw2	equ	0xFDB
  6766                           fsr2h	equ	0xFDA
  6767                           fsr2l	equ	0xFD9
  6768                           status	equ	0xFD8
  6769                           
  6770 ;; *************** function _writeRegisters *****************
  6771 ;; Defined at:
  6772 ;;		line 50 in file "Shift595.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;  i               2   11[BANK0 ] int 
  6777 ;;  val             2    9[BANK0 ] int 
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  1    wreg      void 
  6780 ;; Registers used:
  6781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6787 ;;      Params:         0       0       0       0       0       0       0
  6788 ;;      Locals:         0       4       0       0       0       0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0
  6790 ;;      Totals:         0       4       0       0       0       0       0
  6791 ;;Total ram usage:        4 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    7
  6794 ;; This function calls:
  6795 ;;		_Delay
  6796 ;; This function is called by:
  6797 ;;		_Update
  6798 ;;		_Clear595
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	text38
  6803  001E44                     __ptext38:
  6804                           	opt stack 0
  6805  001E44                     _writeRegisters:
  6806                           	opt stack 20
  6807                           
  6808                           ;Shift595.c: 51: int val = 0;
  6809                           
  6810                           ;incstack = 0
  6811  001E44  0E00               	movlw	0
  6812  001E46  0100               	movlb	0	; () banked
  6813  001E48  6FDC               	movwf	(writeRegisters@val+1)& (0+255),b
  6814  001E4A  0E00               	movlw	0
  6815  001E4C  6FDB               	movwf	writeRegisters@val& (0+255),b
  6816                           
  6817                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  6818  001E4E  0E00               	movlw	0
  6819  001E50  0100               	movlb	0	; () banked
  6820  001E52  6FDE               	movwf	(writeRegisters@i+1)& (0+255),b
  6821  001E54  0E17               	movlw	23
  6822  001E56  6FDD               	movwf	writeRegisters@i& (0+255),b
  6823  001E58                     l4108:
  6824                           
  6825                           ; BSR set to: 0
  6826  001E58  0100               	movlb	0	; () banked
  6827  001E5A  BFDE               	btfsc	(writeRegisters@i+1)& (0+255),7,b
  6828  001E5C  D024               	goto	l743
  6829                           
  6830                           ; BSR set to: 0
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  6834                           
  6835                           ; BSR set to: 0
  6836  001E5E  9E8C               	bcf	3980,7,c	;volatile
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;Shift595.c: 55: val = registers[i];
  6840                           
  6841                           ; BSR set to: 0
  6842  001E60  90D8               	bcf	status,0,c
  6843  001E62  0100               	movlb	0	; () banked
  6844  001E64  35DD               	rlcf	writeRegisters@i& (0+255),w,b
  6845  001E66  6ED9               	movwf	fsr2l,c
  6846  001E68  0100               	movlb	0	; () banked
  6847  001E6A  35DE               	rlcf	(writeRegisters@i+1)& (0+255),w,b
  6848  001E6C  6EDA               	movwf	fsr2h,c
  6849  001E6E  0E00               	movlw	low _registers
  6850  001E70  26D9               	addwf	fsr2l,f,c
  6851  001E72  0E01               	movlw	high _registers
  6852  001E74  22DA               	addwfc	fsr2h,f,c
  6853  001E76  CFDE F0DB          	movff	postinc2,writeRegisters@val
  6854  001E7A  CFDD F0DC          	movff	postdec2,writeRegisters@val+1
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;Shift595.c: 56: if (val == 1) {
  6858  001E7E  0100               	movlb	0	; () banked
  6859  001E80  05DB               	decf	writeRegisters@val& (0+255),w,b
  6860  001E82  0100               	movlb	0	; () banked
  6861  001E84  11DC               	iorwf	(writeRegisters@val+1)& (0+255),w,b
  6862  001E86  A4D8               	btfss	status,2,c
  6863  001E88  D002               	goto	l4116
  6864                           
  6865                           ; BSR set to: 0
  6866                           
  6867                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  6868  001E8A  888C               	bsf	3980,4,c	;volatile
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;Shift595.c: 58: } else if (val == 0) {
  6872  001E8C  D006               	goto	l741
  6873  001E8E                     l4116:
  6874                           
  6875                           ; BSR set to: 0
  6876  001E8E  0100               	movlb	0	; () banked
  6877  001E90  51DB               	movf	writeRegisters@val& (0+255),w,b
  6878  001E92  0100               	movlb	0	; () banked
  6879  001E94  11DC               	iorwf	(writeRegisters@val+1)& (0+255),w,b
  6880  001E96  B4D8               	btfsc	status,2,c
  6881                           
  6882                           ; BSR set to: 0
  6883                           
  6884                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  6885  001E98  988C               	bcf	3980,4,c	;volatile
  6886  001E9A                     l741:
  6887                           
  6888                           ; BSR set to: 0
  6889  001E9A  8E8C               	bsf	3980,7,c	;volatile
  6890                           
  6891                           ; BSR set to: 0
  6892                           
  6893                           ; BSR set to: 0
  6894  001E9C  0100               	movlb	0	; () banked
  6895  001E9E  07DD               	decf	writeRegisters@i& (0+255),f,b
  6896  001EA0  A0D8               	btfss	status,0,c
  6897  001EA2  07DE               	decf	(writeRegisters@i+1)& (0+255),f,b
  6898  001EA4  D7D9               	goto	l4108
  6899  001EA6                     l743:
  6900                           
  6901                           ; BSR set to: 0
  6902  001EA6  9E8C               	bcf	3980,7,c	;volatile
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;Shift595.c: 67: Delay(1);
  6906                           
  6907                           ; BSR set to: 0
  6908  001EA8  0E01               	movlw	1
  6909  001EAA  0100               	movlb	0	; () banked
  6910  001EAC  6FD2               	movwf	Delay@wait& (0+255),b
  6911  001EAE  0E00               	movlw	0
  6912  001EB0  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  6913  001EB2  0E00               	movlw	0
  6914  001EB4  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  6915  001EB6  0E00               	movlw	0
  6916  001EB8  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  6917  001EBA  ECB9  F011         	call	_Delay	;wreg free
  6918                           
  6919                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  6920  001EBE  8C8C               	bsf	3980,6,c	;volatile
  6921                           
  6922                           ;Shift595.c: 69: Delay(1);
  6923  001EC0  0E01               	movlw	1
  6924  001EC2  0100               	movlb	0	; () banked
  6925  001EC4  6FD2               	movwf	Delay@wait& (0+255),b
  6926  001EC6  0E00               	movlw	0
  6927  001EC8  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  6928  001ECA  0E00               	movlw	0
  6929  001ECC  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  6930  001ECE  0E00               	movlw	0
  6931  001ED0  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  6932  001ED2  ECB9  F011         	call	_Delay	;wreg free
  6933                           
  6934                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  6935  001ED6  9C8C               	bcf	3980,6,c	;volatile
  6936  001ED8  0012               	return	
  6937  001EDA                     __end_of_writeRegisters:
  6938                           	opt stack 0
  6939                           tosu	equ	0xFFF
  6940                           tosh	equ	0xFFE
  6941                           tosl	equ	0xFFD
  6942                           pclath	equ	0xFFA
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           prodh	equ	0xFF4
  6948                           prodl	equ	0xFF3
  6949                           intcon	equ	0xFF2
  6950                           intcon2	equ	0xFF1
  6951                           postinc0	equ	0xFEE
  6952                           wreg	equ	0xFE8
  6953                           indf2	equ	0xFDF
  6954                           postinc2	equ	0xFDE
  6955                           postdec2	equ	0xFDD
  6956                           plusw2	equ	0xFDB
  6957                           fsr2h	equ	0xFDA
  6958                           fsr2l	equ	0xFD9
  6959                           status	equ	0xFD8
  6960                           
  6961 ;; *************** function _EnableSlavePower *****************
  6962 ;; Defined at:
  6963 ;;		line 35 in file "PDU.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  slave           1    wreg     enum E6
  6966 ;;  onof            2   10[BANK0 ] int 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  slave           1   12[BANK0 ] enum E6
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  1    wreg      void 
  6971 ;; Registers used:
  6972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6978 ;;      Params:         0       2       0       0       0       0       0
  6979 ;;      Locals:         0       1       0       0       0       0       0
  6980 ;;      Temps:          0       0       0       0       0       0       0
  6981 ;;      Totals:         0       3       0       0       0       0       0
  6982 ;;Total ram usage:        3 bytes
  6983 ;; Hardware stack levels used:    1
  6984 ;; Hardware stack levels required when called:    7
  6985 ;; This function calls:
  6986 ;;		_SetPin595
  6987 ;; This function is called by:
  6988 ;;		_processPowerRequest
  6989 ;;		_PDUStartup
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text39
  6994  001940                     __ptext39:
  6995                           	opt stack 0
  6996  001940                     _EnableSlavePower:
  6997                           	opt stack 21
  6998                           
  6999                           ;incstack = 0
  7000                           ;EnableSlavePower@slave stored from wreg
  7001  001940  0100               	movlb	0	; () banked
  7002  001942  6FDE               	movwf	EnableSlavePower@slave& (0+255),b
  7003                           
  7004                           ;PDU.c: 36: switch (slave) {
  7005  001944  D068               	goto	l4180
  7006  001946                     l4164:
  7007                           
  7008                           ;PDU.c: 38: SetPin595(2, 6, onof);
  7009  001946  0E00               	movlw	0
  7010  001948  0100               	movlb	0	; () banked
  7011  00194A  6FD3               	movwf	(SetPin595@Reg+1)& (0+255),b
  7012  00194C  0E02               	movlw	2
  7013  00194E  6FD2               	movwf	SetPin595@Reg& (0+255),b
  7014  001950  0E00               	movlw	0
  7015  001952  0100               	movlb	0	; () banked
  7016  001954  6FD5               	movwf	(SetPin595@pin+1)& (0+255),b
  7017  001956  0E06               	movlw	6
  7018  001958  6FD4               	movwf	SetPin595@pin& (0+255),b
  7019  00195A  C0DC  F0D6         	movff	EnableSlavePower@onof,SetPin595@value
  7020  00195E  C0DD  F0D7         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  7021  001962  EC4D  F011         	call	_SetPin595	;wreg free
  7022                           
  7023                           ;PDU.c: 39: break;
  7024  001966  0012               	return	
  7025  001968                     l4166:
  7026                           
  7027                           ;PDU.c: 41: SetPin595(1, 1, onof);
  7028  001968  0E00               	movlw	0
  7029  00196A  0100               	movlb	0	; () banked
  7030  00196C  6FD3               	movwf	(SetPin595@Reg+1)& (0+255),b
  7031  00196E  0E01               	movlw	1
  7032  001970  6FD2               	movwf	SetPin595@Reg& (0+255),b
  7033  001972  0E00               	movlw	0
  7034  001974  0100               	movlb	0	; () banked
  7035  001976  6FD5               	movwf	(SetPin595@pin+1)& (0+255),b
  7036  001978  0E01               	movlw	1
  7037  00197A  6FD4               	movwf	SetPin595@pin& (0+255),b
  7038  00197C  C0DC  F0D6         	movff	EnableSlavePower@onof,SetPin595@value
  7039  001980  C0DD  F0D7         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  7040  001984  EC4D  F011         	call	_SetPin595	;wreg free
  7041                           
  7042                           ;PDU.c: 42: break;
  7043  001988  0012               	return	
  7044  00198A                     l4168:
  7045                           
  7046                           ;PDU.c: 44: SetPin595(1, 6, onof);
  7047  00198A  0E00               	movlw	0
  7048  00198C  0100               	movlb	0	; () banked
  7049  00198E  6FD3               	movwf	(SetPin595@Reg+1)& (0+255),b
  7050  001990  0E01               	movlw	1
  7051  001992  6FD2               	movwf	SetPin595@Reg& (0+255),b
  7052  001994  0E00               	movlw	0
  7053  001996  0100               	movlb	0	; () banked
  7054  001998  6FD5               	movwf	(SetPin595@pin+1)& (0+255),b
  7055  00199A  0E06               	movlw	6
  7056  00199C  6FD4               	movwf	SetPin595@pin& (0+255),b
  7057  00199E  C0DC  F0D6         	movff	EnableSlavePower@onof,SetPin595@value
  7058  0019A2  C0DD  F0D7         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  7059  0019A6  EC4D  F011         	call	_SetPin595	;wreg free
  7060                           
  7061                           ;PDU.c: 45: MCSOn = onof;
  7062  0019AA  C0DC  F03E         	movff	EnableSlavePower@onof,_MCSOn
  7063                           
  7064                           ;PDU.c: 46: break;
  7065  0019AE  0012               	return	
  7066  0019B0                     l4172:
  7067                           
  7068                           ;PDU.c: 48: SetPin595(2, 1, onof);
  7069  0019B0  0E00               	movlw	0
  7070  0019B2  0100               	movlb	0	; () banked
  7071  0019B4  6FD3               	movwf	(SetPin595@Reg+1)& (0+255),b
  7072  0019B6  0E02               	movlw	2
  7073  0019B8  6FD2               	movwf	SetPin595@Reg& (0+255),b
  7074  0019BA  0E00               	movlw	0
  7075  0019BC  0100               	movlb	0	; () banked
  7076  0019BE  6FD5               	movwf	(SetPin595@pin+1)& (0+255),b
  7077  0019C0  0E01               	movlw	1
  7078  0019C2  6FD4               	movwf	SetPin595@pin& (0+255),b
  7079  0019C4  C0DC  F0D6         	movff	EnableSlavePower@onof,SetPin595@value
  7080  0019C8  C0DD  F0D7         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  7081  0019CC  EC4D  F011         	call	_SetPin595	;wreg free
  7082                           
  7083                           ;PDU.c: 49: break;
  7084  0019D0  0012               	return	
  7085  0019D2                     l4174:
  7086                           
  7087                           ;PDU.c: 51: SetPin595(3, 6, onof);
  7088  0019D2  0E00               	movlw	0
  7089  0019D4  0100               	movlb	0	; () banked
  7090  0019D6  6FD3               	movwf	(SetPin595@Reg+1)& (0+255),b
  7091  0019D8  0E03               	movlw	3
  7092  0019DA  6FD2               	movwf	SetPin595@Reg& (0+255),b
  7093  0019DC  0E00               	movlw	0
  7094  0019DE  0100               	movlb	0	; () banked
  7095  0019E0  6FD5               	movwf	(SetPin595@pin+1)& (0+255),b
  7096  0019E2  0E06               	movlw	6
  7097  0019E4  6FD4               	movwf	SetPin595@pin& (0+255),b
  7098  0019E6  C0DC  F0D6         	movff	EnableSlavePower@onof,SetPin595@value
  7099  0019EA  C0DD  F0D7         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  7100  0019EE  EC4D  F011         	call	_SetPin595	;wreg free
  7101                           
  7102                           ;PDU.c: 52: break;
  7103  0019F2  0012               	return	
  7104  0019F4                     l4176:
  7105                           
  7106                           ;PDU.c: 54: SetPin595(3, 1, onof);
  7107  0019F4  0E00               	movlw	0
  7108  0019F6  0100               	movlb	0	; () banked
  7109  0019F8  6FD3               	movwf	(SetPin595@Reg+1)& (0+255),b
  7110  0019FA  0E03               	movlw	3
  7111  0019FC  6FD2               	movwf	SetPin595@Reg& (0+255),b
  7112  0019FE  0E00               	movlw	0
  7113  001A00  0100               	movlb	0	; () banked
  7114  001A02  6FD5               	movwf	(SetPin595@pin+1)& (0+255),b
  7115  001A04  0E01               	movlw	1
  7116  001A06  6FD4               	movwf	SetPin595@pin& (0+255),b
  7117  001A08  C0DC  F0D6         	movff	EnableSlavePower@onof,SetPin595@value
  7118  001A0C  C0DD  F0D7         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  7119  001A10  EC4D  F011         	call	_SetPin595	;wreg free
  7120                           
  7121                           ;PDU.c: 56: }
  7122                           
  7123                           ;PDU.c: 55: break;
  7124  001A14  0012               	return	
  7125  001A16                     l4180:
  7126  001A16  0100               	movlb	0	; () banked
  7127  001A18  51DE               	movf	EnableSlavePower@slave& (0+255),w,b
  7128                           
  7129                           ; Switch size 1, requested type "space"
  7130                           ; Number of cases is 6, Range of values is 1 to 6
  7131                           ; switch strategies available:
  7132                           ; Name         Instructions Cycles
  7133                           ; simple_byte           19    10 (average)
  7134                           ;	Chosen strategy is simple_byte
  7135  001A1A  0A01               	xorlw	1	; case 1
  7136  001A1C  B4D8               	btfsc	status,2,c
  7137  001A1E  D7C8               	goto	l4172
  7138  001A20  0A03               	xorlw	3	; case 2
  7139  001A22  B4D8               	btfsc	status,2,c
  7140  001A24  D7B2               	goto	l4168
  7141  001A26  0A01               	xorlw	1	; case 3
  7142  001A28  B4D8               	btfsc	status,2,c
  7143  001A2A  D78D               	goto	l4164
  7144  001A2C  0A07               	xorlw	7	; case 4
  7145  001A2E  B4D8               	btfsc	status,2,c
  7146  001A30  D79B               	goto	l4166
  7147  001A32  0A01               	xorlw	1	; case 5
  7148  001A34  B4D8               	btfsc	status,2,c
  7149  001A36  D7CD               	goto	l4174
  7150  001A38  0A03               	xorlw	3	; case 6
  7151  001A3A  A4D8               	btfss	status,2,c
  7152  001A3C  0012               	return	
  7153  001A3E  D7DA               	goto	l4176
  7154  001A40                     __end_of_EnableSlavePower:
  7155                           	opt stack 0
  7156                           tosu	equ	0xFFF
  7157                           tosh	equ	0xFFE
  7158                           tosl	equ	0xFFD
  7159                           pclath	equ	0xFFA
  7160                           tblptru	equ	0xFF8
  7161                           tblptrh	equ	0xFF7
  7162                           tblptrl	equ	0xFF6
  7163                           tablat	equ	0xFF5
  7164                           prodh	equ	0xFF4
  7165                           prodl	equ	0xFF3
  7166                           intcon	equ	0xFF2
  7167                           intcon2	equ	0xFF1
  7168                           postinc0	equ	0xFEE
  7169                           wreg	equ	0xFE8
  7170                           indf2	equ	0xFDF
  7171                           postinc2	equ	0xFDE
  7172                           postdec2	equ	0xFDD
  7173                           plusw2	equ	0xFDB
  7174                           fsr2h	equ	0xFDA
  7175                           fsr2l	equ	0xFD9
  7176                           status	equ	0xFD8
  7177                           
  7178 ;; *************** function _SetPin595 *****************
  7179 ;; Defined at:
  7180 ;;		line 32 in file "Shift595.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  Reg             2    0[BANK0 ] int 
  7183 ;;  pin             2    2[BANK0 ] int 
  7184 ;;  value           2    4[BANK0 ] int 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7196 ;;      Params:         0       6       0       0       0       0       0
  7197 ;;      Locals:         0       0       0       0       0       0       0
  7198 ;;      Temps:          0       4       0       0       0       0       0
  7199 ;;      Totals:         0      10       0       0       0       0       0
  7200 ;;Total ram usage:       10 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    6
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_EnableSlavePower
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text40
  7211  00229A                     __ptext40:
  7212                           	opt stack 0
  7213  00229A                     _SetPin595:
  7214                           	opt stack 21
  7215                           
  7216                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  7217                           
  7218                           ;incstack = 0
  7219  00229A  0EF0               	movlw	240
  7220  00229C  0100               	movlb	0	; () banked
  7221  00229E  6FD8               	movwf	??_SetPin595& (0+255),b
  7222  0022A0  0EFF               	movlw	255
  7223  0022A2  0100               	movlb	0	; () banked
  7224  0022A4  6FD9               	movwf	(??_SetPin595+1)& (0+255),b
  7225  0022A6  C0D2  F0DA         	movff	SetPin595@Reg,??_SetPin595+2
  7226  0022AA  C0D3  F0DB         	movff	SetPin595@Reg+1,??_SetPin595+3
  7227  0022AE  0100               	movlb	0	; () banked
  7228  0022B0  90D8               	bcf	status,0,c
  7229  0022B2  37DA               	rlcf	(??_SetPin595+2)& (0+255),f,b
  7230  0022B4  37DB               	rlcf	(??_SetPin595+3)& (0+255),f,b
  7231  0022B6  0100               	movlb	0	; () banked
  7232  0022B8  90D8               	bcf	status,0,c
  7233  0022BA  37DA               	rlcf	(??_SetPin595+2)& (0+255),f,b
  7234  0022BC  37DB               	rlcf	(??_SetPin595+3)& (0+255),f,b
  7235  0022BE  0100               	movlb	0	; () banked
  7236  0022C0  90D8               	bcf	status,0,c
  7237  0022C2  37DA               	rlcf	(??_SetPin595+2)& (0+255),f,b
  7238  0022C4  37DB               	rlcf	(??_SetPin595+3)& (0+255),f,b
  7239  0022C6  0100               	movlb	0	; () banked
  7240  0022C8  51D4               	movf	SetPin595@pin& (0+255),w,b
  7241  0022CA  0100               	movlb	0	; () banked
  7242  0022CC  27DA               	addwf	(??_SetPin595+2)& (0+255),f,b
  7243  0022CE  0100               	movlb	0	; () banked
  7244  0022D0  51D5               	movf	(SetPin595@pin+1)& (0+255),w,b
  7245  0022D2  0100               	movlb	0	; () banked
  7246  0022D4  23DB               	addwfc	(??_SetPin595+3)& (0+255),f,b
  7247  0022D6  90D8               	bcf	status,0,c
  7248  0022D8  0100               	movlb	0	; () banked
  7249  0022DA  37DA               	rlcf	(??_SetPin595+2)& (0+255),f,b
  7250  0022DC  37DB               	rlcf	(??_SetPin595+3)& (0+255),f,b
  7251  0022DE  0100               	movlb	0	; () banked
  7252  0022E0  51D8               	movf	??_SetPin595& (0+255),w,b
  7253  0022E2  0100               	movlb	0	; () banked
  7254  0022E4  27DA               	addwf	(??_SetPin595+2)& (0+255),f,b
  7255  0022E6  0100               	movlb	0	; () banked
  7256  0022E8  51D9               	movf	(??_SetPin595+1)& (0+255),w,b
  7257  0022EA  0100               	movlb	0	; () banked
  7258  0022EC  23DB               	addwfc	(??_SetPin595+3)& (0+255),f,b
  7259  0022EE  0E00               	movlw	low _registers
  7260  0022F0  0100               	movlb	0	; () banked
  7261  0022F2  25DA               	addwf	(??_SetPin595+2)& (0+255),w,b
  7262  0022F4  6ED9               	movwf	fsr2l,c
  7263  0022F6  0E01               	movlw	high _registers
  7264  0022F8  0100               	movlb	0	; () banked
  7265  0022FA  21DB               	addwfc	(??_SetPin595+3)& (0+255),w,b
  7266  0022FC  6EDA               	movwf	fsr2h,c
  7267  0022FE  C0D6  FFDE         	movff	SetPin595@value,postinc2
  7268  002302  C0D7  FFDD         	movff	SetPin595@value+1,postdec2
  7269                           
  7270                           ; BSR set to: 0
  7271  002306  0012               	return		;funcret
  7272  002308                     __end_of_SetPin595:
  7273                           	opt stack 0
  7274                           tosu	equ	0xFFF
  7275                           tosh	equ	0xFFE
  7276                           tosl	equ	0xFFD
  7277                           pclath	equ	0xFFA
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           intcon	equ	0xFF2
  7285                           intcon2	equ	0xFF1
  7286                           postinc0	equ	0xFEE
  7287                           wreg	equ	0xFE8
  7288                           indf2	equ	0xFDF
  7289                           postinc2	equ	0xFDE
  7290                           postdec2	equ	0xFDD
  7291                           plusw2	equ	0xFDB
  7292                           fsr2h	equ	0xFDA
  7293                           fsr2l	equ	0xFD9
  7294                           status	equ	0xFD8
  7295                           
  7296 ;; *************** function _ComputeStorageData *****************
  7297 ;; Defined at:
  7298 ;;		line 158 in file "PDU.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;		None
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  i               2    3[BANK0 ] int 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7312 ;;      Params:         0       0       0       0       0       0       0
  7313 ;;      Locals:         0       2       0       0       0       0       0
  7314 ;;      Temps:          0       2       0       0       0       0       0
  7315 ;;      Totals:         0       4       0       0       0       0       0
  7316 ;;Total ram usage:        4 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    7
  7319 ;; This function calls:
  7320 ;;		_DATAEE_ReadByte
  7321 ;; This function is called by:
  7322 ;;		_PDUStartup
  7323 ;;		_main
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text41
  7328  001730                     __ptext41:
  7329                           	opt stack 0
  7330  001730                     _ComputeStorageData:
  7331                           	opt stack 22
  7332                           
  7333                           ;PDU.c: 159: for (int i = 0; i < 12; i++) {
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;incstack = 0
  7337  001730  0E00               	movlw	0
  7338  001732  0100               	movlb	0	; () banked
  7339  001734  6FD6               	movwf	(ComputeStorageData@i+1)& (0+255),b
  7340  001736  0E00               	movlw	0
  7341  001738  6FD5               	movwf	ComputeStorageData@i& (0+255),b
  7342  00173A                     l4570:
  7343                           
  7344                           ; BSR set to: 0
  7345  00173A  0100               	movlb	0	; () banked
  7346  00173C  BFD6               	btfsc	(ComputeStorageData@i+1)& (0+255),7,b
  7347  00173E  D008               	goto	l4574
  7348  001740  0100               	movlb	0	; () banked
  7349  001742  51D6               	movf	(ComputeStorageData@i+1)& (0+255),w,b
  7350  001744  E116               	bnz	l4580
  7351  001746  0E0C               	movlw	12
  7352  001748  0100               	movlb	0	; () banked
  7353  00174A  5DD5               	subwf	ComputeStorageData@i& (0+255),w,b
  7354  00174C  B0D8               	btfsc	status,0,c
  7355  00174E  D011               	goto	l4580
  7356  001750                     l4574:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;PDU.c: 160: data[i] = DATAEE_ReadByte(i);
  7360  001750  0E24               	movlw	low _data
  7361  001752  0100               	movlb	0	; () banked
  7362  001754  25D5               	addwf	ComputeStorageData@i& (0+255),w,b
  7363  001756  6ED9               	movwf	fsr2l,c
  7364  001758  0E00               	movlw	high _data
  7365  00175A  0100               	movlb	0	; () banked
  7366  00175C  21D6               	addwfc	(ComputeStorageData@i+1)& (0+255),w,b
  7367  00175E  6EDA               	movwf	fsr2h,c
  7368  001760  0100               	movlb	0	; () banked
  7369  001762  51D5               	movf	ComputeStorageData@i& (0+255),w,b
  7370  001764  EC88  F014         	call	_DATAEE_ReadByte
  7371  001768  6EDF               	movwf	indf2,c
  7372  00176A  0100               	movlb	0	; () banked
  7373  00176C  4BD5               	infsnz	ComputeStorageData@i& (0+255),f,b
  7374  00176E  2BD6               	incf	(ComputeStorageData@i+1)& (0+255),f,b
  7375  001770  D7E4               	goto	l4570
  7376  001772                     l4580:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;PDU.c: 161: }
  7380                           ;PDU.c: 162: Currentcomp[0] = ((data[0] << 8) | data[1]);
  7381  001772  5025               	movf	_data+1,w,c
  7382  001774  C024  F0D3         	movff	_data,??_ComputeStorageData
  7383  001778  0100               	movlb	0	; () banked
  7384  00177A  6BD4               	clrf	(??_ComputeStorageData+1)& (0+255),b
  7385  00177C  C0D3  F0D4         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  7386  001780  0100               	movlb	0	; () banked
  7387  001782  6BD3               	clrf	??_ComputeStorageData& (0+255),b
  7388  001784  0100               	movlb	0	; () banked
  7389  001786  11D3               	iorwf	??_ComputeStorageData& (0+255),w,b
  7390  001788  0100               	movlb	0	; () banked
  7391  00178A  6F78               	movwf	_Currentcomp& (0+255),b
  7392  00178C  0100               	movlb	0	; () banked
  7393  00178E  51D4               	movf	(??_ComputeStorageData+1)& (0+255),w,b
  7394  001790  0100               	movlb	0	; () banked
  7395  001792  6F79               	movwf	(_Currentcomp+1)& (0+255),b
  7396                           
  7397                           ;PDU.c: 163: Currentcomp[1] = ((data[2] << 8) | data[3]);
  7398  001794  5027               	movf	_data+3,w,c
  7399  001796  C026  F0D3         	movff	_data+2,??_ComputeStorageData
  7400  00179A  0100               	movlb	0	; () banked
  7401  00179C  6BD4               	clrf	(??_ComputeStorageData+1)& (0+255),b
  7402  00179E  C0D3  F0D4         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  7403  0017A2  0100               	movlb	0	; () banked
  7404  0017A4  6BD3               	clrf	??_ComputeStorageData& (0+255),b
  7405  0017A6  0100               	movlb	0	; () banked
  7406  0017A8  11D3               	iorwf	??_ComputeStorageData& (0+255),w,b
  7407  0017AA  0100               	movlb	0	; () banked
  7408  0017AC  6F7A               	movwf	(_Currentcomp+2)& (0+255),b
  7409  0017AE  0100               	movlb	0	; () banked
  7410  0017B0  51D4               	movf	(??_ComputeStorageData+1)& (0+255),w,b
  7411  0017B2  0100               	movlb	0	; () banked
  7412  0017B4  6F7B               	movwf	(_Currentcomp+3)& (0+255),b
  7413                           
  7414                           ;PDU.c: 164: Currentcomp[2] = ((data[4] << 8) | data[5]);
  7415  0017B6  5029               	movf	_data+5,w,c
  7416  0017B8  C028  F0D3         	movff	_data+4,??_ComputeStorageData
  7417  0017BC  0100               	movlb	0	; () banked
  7418  0017BE  6BD4               	clrf	(??_ComputeStorageData+1)& (0+255),b
  7419  0017C0  C0D3  F0D4         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  7420  0017C4  0100               	movlb	0	; () banked
  7421  0017C6  6BD3               	clrf	??_ComputeStorageData& (0+255),b
  7422  0017C8  0100               	movlb	0	; () banked
  7423  0017CA  11D3               	iorwf	??_ComputeStorageData& (0+255),w,b
  7424  0017CC  0100               	movlb	0	; () banked
  7425  0017CE  6F7C               	movwf	(_Currentcomp+4)& (0+255),b
  7426  0017D0  0100               	movlb	0	; () banked
  7427  0017D2  51D4               	movf	(??_ComputeStorageData+1)& (0+255),w,b
  7428  0017D4  0100               	movlb	0	; () banked
  7429  0017D6  6F7D               	movwf	(_Currentcomp+5)& (0+255),b
  7430                           
  7431                           ;PDU.c: 165: Currentcomp[3] = ((data[6] << 8) | data[7]);
  7432  0017D8  502B               	movf	_data+7,w,c
  7433  0017DA  C02A  F0D3         	movff	_data+6,??_ComputeStorageData
  7434  0017DE  0100               	movlb	0	; () banked
  7435  0017E0  6BD4               	clrf	(??_ComputeStorageData+1)& (0+255),b
  7436  0017E2  C0D3  F0D4         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  7437  0017E6  0100               	movlb	0	; () banked
  7438  0017E8  6BD3               	clrf	??_ComputeStorageData& (0+255),b
  7439  0017EA  0100               	movlb	0	; () banked
  7440  0017EC  11D3               	iorwf	??_ComputeStorageData& (0+255),w,b
  7441  0017EE  0100               	movlb	0	; () banked
  7442  0017F0  6F7E               	movwf	(_Currentcomp+6)& (0+255),b
  7443  0017F2  0100               	movlb	0	; () banked
  7444  0017F4  51D4               	movf	(??_ComputeStorageData+1)& (0+255),w,b
  7445  0017F6  0100               	movlb	0	; () banked
  7446  0017F8  6F7F               	movwf	(_Currentcomp+7)& (0+255),b
  7447                           
  7448                           ;PDU.c: 166: Currentcomp[4] = ((data[8] << 8) | data[9]);
  7449  0017FA  502D               	movf	_data+9,w,c
  7450  0017FC  C02C  F0D3         	movff	_data+8,??_ComputeStorageData
  7451  001800  0100               	movlb	0	; () banked
  7452  001802  6BD4               	clrf	(??_ComputeStorageData+1)& (0+255),b
  7453  001804  C0D3  F0D4         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  7454  001808  0100               	movlb	0	; () banked
  7455  00180A  6BD3               	clrf	??_ComputeStorageData& (0+255),b
  7456  00180C  0100               	movlb	0	; () banked
  7457  00180E  11D3               	iorwf	??_ComputeStorageData& (0+255),w,b
  7458  001810  0100               	movlb	0	; () banked
  7459  001812  6F80               	movwf	(_Currentcomp+8)& (0+255),b
  7460  001814  0100               	movlb	0	; () banked
  7461  001816  51D4               	movf	(??_ComputeStorageData+1)& (0+255),w,b
  7462  001818  0100               	movlb	0	; () banked
  7463  00181A  6F81               	movwf	(_Currentcomp+9)& (0+255),b
  7464                           
  7465                           ;PDU.c: 167: Currentcomp[5] = ((data[10] << 8) | data[11]);
  7466  00181C  502F               	movf	_data+11,w,c
  7467  00181E  C02E  F0D3         	movff	_data+10,??_ComputeStorageData
  7468  001822  0100               	movlb	0	; () banked
  7469  001824  6BD4               	clrf	(??_ComputeStorageData+1)& (0+255),b
  7470  001826  C0D3  F0D4         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  7471  00182A  0100               	movlb	0	; () banked
  7472  00182C  6BD3               	clrf	??_ComputeStorageData& (0+255),b
  7473  00182E  0100               	movlb	0	; () banked
  7474  001830  11D3               	iorwf	??_ComputeStorageData& (0+255),w,b
  7475  001832  0100               	movlb	0	; () banked
  7476  001834  6F82               	movwf	(_Currentcomp+10)& (0+255),b
  7477  001836  0100               	movlb	0	; () banked
  7478  001838  51D4               	movf	(??_ComputeStorageData+1)& (0+255),w,b
  7479  00183A  0100               	movlb	0	; () banked
  7480  00183C  6F83               	movwf	(_Currentcomp+11)& (0+255),b
  7481                           
  7482                           ; BSR set to: 0
  7483  00183E  0012               	return		;funcret
  7484  001840                     __end_of_ComputeStorageData:
  7485                           	opt stack 0
  7486                           tosu	equ	0xFFF
  7487                           tosh	equ	0xFFE
  7488                           tosl	equ	0xFFD
  7489                           pclath	equ	0xFFA
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           prodh	equ	0xFF4
  7495                           prodl	equ	0xFF3
  7496                           intcon	equ	0xFF2
  7497                           intcon2	equ	0xFF1
  7498                           postinc0	equ	0xFEE
  7499                           wreg	equ	0xFE8
  7500                           indf2	equ	0xFDF
  7501                           postinc2	equ	0xFDE
  7502                           postdec2	equ	0xFDD
  7503                           plusw2	equ	0xFDB
  7504                           fsr2h	equ	0xFDA
  7505                           fsr2l	equ	0xFD9
  7506                           status	equ	0xFD8
  7507                           
  7508 ;; *************** function _DATAEE_ReadByte *****************
  7509 ;; Defined at:
  7510 ;;		line 143 in file "mcc_generated_files/memory.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  bAdd            1    wreg     unsigned char 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  bAdd            1    0[BANK0 ] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  1    wreg      unsigned char 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7524 ;;      Params:         0       0       0       0       0       0       0
  7525 ;;      Locals:         0       1       0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0
  7527 ;;      Totals:         0       1       0       0       0       0       0
  7528 ;;Total ram usage:        1 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    6
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_ComputeStorageData
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text42
  7539  002910                     __ptext42:
  7540                           	opt stack 0
  7541  002910                     _DATAEE_ReadByte:
  7542                           	opt stack 22
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;incstack = 0
  7546                           ;DATAEE_ReadByte@bAdd stored from wreg
  7547  002910  0100               	movlb	0	; () banked
  7548  002912  6FD2               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  7549                           
  7550                           ;memory.c: 145: EEADR = (bAdd & 0xFF);
  7551  002914  C0D2  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  7552                           
  7553                           ;memory.c: 146: EECON1bits.CFGS = 0;
  7554  002918  9CA6               	bcf	4006,6,c	;volatile
  7555                           
  7556                           ;memory.c: 147: EECON1bits.EEPGD = 0;
  7557  00291A  9EA6               	bcf	4006,7,c	;volatile
  7558                           
  7559                           ;memory.c: 148: EECON1bits.RD = 1;
  7560  00291C  80A6               	bsf	4006,0,c	;volatile
  7561                           
  7562                           ;memory.c: 149: __nop();
  7563  00291E  F000               	nop	
  7564                           
  7565                           ;memory.c: 150: __nop();
  7566  002920  F000               	nop	
  7567                           
  7568                           ;memory.c: 152: return (EEDATA);
  7569  002922  50A8               	movf	4008,w,c	;volatile
  7570  002924  0012               	return	
  7571  002926                     __end_of_DATAEE_ReadByte:
  7572                           	opt stack 0
  7573                           tosu	equ	0xFFF
  7574                           tosh	equ	0xFFE
  7575                           tosl	equ	0xFFD
  7576                           pclath	equ	0xFFA
  7577                           tblptru	equ	0xFF8
  7578                           tblptrh	equ	0xFF7
  7579                           tblptrl	equ	0xFF6
  7580                           tablat	equ	0xFF5
  7581                           prodh	equ	0xFF4
  7582                           prodl	equ	0xFF3
  7583                           intcon	equ	0xFF2
  7584                           intcon2	equ	0xFF1
  7585                           postinc0	equ	0xFEE
  7586                           wreg	equ	0xFE8
  7587                           indf2	equ	0xFDF
  7588                           postinc2	equ	0xFDE
  7589                           postdec2	equ	0xFDD
  7590                           plusw2	equ	0xFDB
  7591                           fsr2h	equ	0xFDA
  7592                           fsr2l	equ	0xFD9
  7593                           status	equ	0xFD8
  7594                           
  7595 ;; *************** function _DATAEE_WriteByte *****************
  7596 ;; Defined at:
  7597 ;;		line 121 in file "mcc_generated_files/memory.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  bAdd            1    wreg     unsigned char 
  7600 ;;  bData           1    0[BANK0 ] unsigned char 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  bAdd            1    1[BANK0 ] unsigned char 
  7603 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7613 ;;      Params:         0       1       0       0       0       0       0
  7614 ;;      Locals:         0       2       0       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0
  7616 ;;      Totals:         0       3       0       0       0       0       0
  7617 ;;Total ram usage:        3 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    6
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_main
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text43
  7628  002620                     __ptext43:
  7629                           	opt stack 0
  7630  002620                     _DATAEE_WriteByte:
  7631                           	opt stack 24
  7632                           
  7633                           ;incstack = 0
  7634                           ;DATAEE_WriteByte@bAdd stored from wreg
  7635  002620  0100               	movlb	0	; () banked
  7636  002622  6FD3               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  7637                           
  7638                           ;memory.c: 123: uint8_t GIEBitValue = INTCONbits.GIE;
  7639  002624  0E00               	movlw	0
  7640  002626  BEF2               	btfsc	intcon,7,c	;volatile
  7641  002628  0E01               	movlw	1
  7642  00262A  0100               	movlb	0	; () banked
  7643  00262C  6FD4               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;memory.c: 125: EEADR = (bAdd & 0xFF);
  7647  00262E  C0D3  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;memory.c: 126: EEDATA = bData;
  7651  002632  C0D2  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;memory.c: 127: EECON1bits.EEPGD = 0;
  7655  002636  9EA6               	bcf	4006,7,c	;volatile
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;memory.c: 128: EECON1bits.CFGS = 0;
  7659  002638  9CA6               	bcf	4006,6,c	;volatile
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;memory.c: 129: EECON1bits.WREN = 1;
  7663  00263A  84A6               	bsf	4006,2,c	;volatile
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;memory.c: 130: INTCONbits.GIE = 0;
  7667  00263C  9EF2               	bcf	intcon,7,c	;volatile
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;memory.c: 131: EECON2 = 0x55;
  7671  00263E  0E55               	movlw	85
  7672  002640  6EA7               	movwf	4007,c	;volatile
  7673                           
  7674                           ; BSR set to: 0
  7675                           ;memory.c: 132: EECON2 = 0xAA;
  7676  002642  0EAA               	movlw	170
  7677  002644  6EA7               	movwf	4007,c	;volatile
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;memory.c: 133: EECON1bits.WR = 1;
  7681  002646  82A6               	bsf	4006,1,c	;volatile
  7682  002648                     l170:
  7683  002648  B2A6               	btfsc	4006,1,c	;volatile
  7684  00264A  D7FE               	goto	l170
  7685                           
  7686                           ;memory.c: 137: }
  7687                           ;memory.c: 139: EECON1bits.WREN = 0;
  7688  00264C  94A6               	bcf	4006,2,c	;volatile
  7689                           
  7690                           ;memory.c: 140: INTCONbits.GIE = GIEBitValue;
  7691  00264E  0100               	movlb	0	; () banked
  7692  002650  B1D4               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
  7693  002652  D002               	bra	u4055
  7694  002654  9EF2               	bcf	intcon,7,c	;volatile
  7695  002656  D001               	bra	u4056
  7696  002658                     u4055:
  7697  002658  8EF2               	bsf	intcon,7,c	;volatile
  7698  00265A                     u4056:
  7699  00265A  0012               	return		;funcret
  7700  00265C                     __end_of_DATAEE_WriteByte:
  7701                           	opt stack 0
  7702                           tosu	equ	0xFFF
  7703                           tosh	equ	0xFFE
  7704                           tosl	equ	0xFFD
  7705                           pclath	equ	0xFFA
  7706                           tblptru	equ	0xFF8
  7707                           tblptrh	equ	0xFF7
  7708                           tblptrl	equ	0xFF6
  7709                           tablat	equ	0xFF5
  7710                           prodh	equ	0xFF4
  7711                           prodl	equ	0xFF3
  7712                           intcon	equ	0xFF2
  7713                           intcon2	equ	0xFF1
  7714                           postinc0	equ	0xFEE
  7715                           wreg	equ	0xFE8
  7716                           indf2	equ	0xFDF
  7717                           postinc2	equ	0xFDE
  7718                           postdec2	equ	0xFDD
  7719                           plusw2	equ	0xFDB
  7720                           fsr2h	equ	0xFDA
  7721                           fsr2l	equ	0xFD9
  7722                           status	equ	0xFD8
  7723                           
  7724 ;; *************** function _CoolingStop *****************
  7725 ;; Defined at:
  7726 ;;		line 30 in file "CoolingControl.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;		None
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      void 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7740 ;;      Params:         0       0       0       0       0       0       0
  7741 ;;      Locals:         0       0       0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0
  7743 ;;      Totals:         0       0       0       0       0       0       0
  7744 ;;Total ram usage:        0 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    8
  7747 ;; This function calls:
  7748 ;;		_PWM4_LoadDutyValue
  7749 ;;		_PotClear
  7750 ;; This function is called by:
  7751 ;;		_main
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text44
  7756  002964                     __ptext44:
  7757                           	opt stack 0
  7758  002964                     _CoolingStop:
  7759                           	opt stack 22
  7760                           
  7761                           ;CoolingControl.c: 31: PotClear();
  7762                           
  7763                           ;incstack = 0
  7764  002964  EC20  F00D         	call	_PotClear	;wreg free
  7765                           
  7766                           ;CoolingControl.c: 32: PWM4_LoadDutyValue(0);
  7767  002968  0E00               	movlw	0
  7768  00296A  0100               	movlb	0	; () banked
  7769  00296C  6FD3               	movwf	(PWM4_LoadDutyValue@dutyValue+1)& (0+255),b
  7770  00296E  0E00               	movlw	0
  7771  002970  6FD2               	movwf	PWM4_LoadDutyValue@dutyValue& (0+255),b
  7772  002972  EC2E  F013         	call	_PWM4_LoadDutyValue	;wreg free
  7773  002976  0012               	return		;funcret
  7774  002978                     __end_of_CoolingStop:
  7775                           	opt stack 0
  7776                           tosu	equ	0xFFF
  7777                           tosh	equ	0xFFE
  7778                           tosl	equ	0xFFD
  7779                           pclath	equ	0xFFA
  7780                           tblptru	equ	0xFF8
  7781                           tblptrh	equ	0xFF7
  7782                           tblptrl	equ	0xFF6
  7783                           tablat	equ	0xFF5
  7784                           prodh	equ	0xFF4
  7785                           prodl	equ	0xFF3
  7786                           intcon	equ	0xFF2
  7787                           intcon2	equ	0xFF1
  7788                           postinc0	equ	0xFEE
  7789                           wreg	equ	0xFE8
  7790                           indf2	equ	0xFDF
  7791                           postinc2	equ	0xFDE
  7792                           postdec2	equ	0xFDD
  7793                           plusw2	equ	0xFDB
  7794                           fsr2h	equ	0xFDA
  7795                           fsr2l	equ	0xFD9
  7796                           status	equ	0xFD8
  7797                           
  7798 ;; *************** function _CoolingStart *****************
  7799 ;; Defined at:
  7800 ;;		line 19 in file "CoolingControl.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg, status,2, status,0, cstack
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7814 ;;      Params:         0       0       0       0       0       0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0
  7817 ;;      Totals:         0       0       0       0       0       0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:    8
  7821 ;; This function calls:
  7822 ;;		_PWM4_LoadDutyValue
  7823 ;;		_PotClear
  7824 ;;		_PotSetpoint
  7825 ;; This function is called by:
  7826 ;;		_main
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           	psect	text45
  7831  002884                     __ptext45:
  7832                           	opt stack 0
  7833  002884                     _CoolingStart:
  7834                           	opt stack 22
  7835                           
  7836                           ;CoolingControl.c: 21: PotClear();
  7837                           
  7838                           ;incstack = 0
  7839  002884  EC20  F00D         	call	_PotClear	;wreg free
  7840                           
  7841                           ;CoolingControl.c: 22: PotSetpoint(40);
  7842  002888  0E00               	movlw	0
  7843  00288A  0100               	movlb	0	; () banked
  7844  00288C  6FDC               	movwf	(PotSetpoint@new_point+1)& (0+255),b
  7845  00288E  0E28               	movlw	40
  7846  002890  6FDB               	movwf	PotSetpoint@new_point& (0+255),b
  7847  002892  EC7E  F00A         	call	_PotSetpoint	;wreg free
  7848                           
  7849                           ;CoolingControl.c: 23: PWM4_LoadDutyValue(1000);
  7850  002896  0E03               	movlw	3
  7851  002898  0100               	movlb	0	; () banked
  7852  00289A  6FD3               	movwf	(PWM4_LoadDutyValue@dutyValue+1)& (0+255),b
  7853  00289C  0EE8               	movlw	232
  7854  00289E  6FD2               	movwf	PWM4_LoadDutyValue@dutyValue& (0+255),b
  7855  0028A0  EC2E  F013         	call	_PWM4_LoadDutyValue	;wreg free
  7856  0028A4  0012               	return		;funcret
  7857  0028A6                     __end_of_CoolingStart:
  7858                           	opt stack 0
  7859                           tosu	equ	0xFFF
  7860                           tosh	equ	0xFFE
  7861                           tosl	equ	0xFFD
  7862                           pclath	equ	0xFFA
  7863                           tblptru	equ	0xFF8
  7864                           tblptrh	equ	0xFF7
  7865                           tblptrl	equ	0xFF6
  7866                           tablat	equ	0xFF5
  7867                           prodh	equ	0xFF4
  7868                           prodl	equ	0xFF3
  7869                           intcon	equ	0xFF2
  7870                           intcon2	equ	0xFF1
  7871                           postinc0	equ	0xFEE
  7872                           wreg	equ	0xFE8
  7873                           indf2	equ	0xFDF
  7874                           postinc2	equ	0xFDE
  7875                           postdec2	equ	0xFDD
  7876                           plusw2	equ	0xFDB
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8
  7880                           
  7881 ;; *************** function _PotSetpoint *****************
  7882 ;; Defined at:
  7883 ;;		line 21 in file "DigiPot.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  new_point       2    9[BANK0 ] int 
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  new_pos         2   17[BANK0 ] int 
  7888 ;;  x               2   15[BANK0 ] int 
  7889 ;;  set_point       2   13[BANK0 ] int 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7899 ;;      Params:         0       2       0       0       0       0       0
  7900 ;;      Locals:         0       6       0       0       0       0       0
  7901 ;;      Temps:          0       2       0       0       0       0       0
  7902 ;;      Totals:         0      10       0       0       0       0       0
  7903 ;;Total ram usage:       10 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    7
  7906 ;; This function calls:
  7907 ;;		_Delay
  7908 ;; This function is called by:
  7909 ;;		_main
  7910 ;;		_CoolingStart
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text46
  7915  0014FC                     __ptext46:
  7916                           	opt stack 0
  7917  0014FC                     _PotSetpoint:
  7918                           	opt stack 23
  7919                           
  7920                           ;DigiPot.c: 22: int set_point;
  7921                           ;DigiPot.c: 31: int new_pos = new_point;
  7922                           
  7923                           ;incstack = 0
  7924  0014FC  C0DB  F0E3         	movff	PotSetpoint@new_point,PotSetpoint@new_pos
  7925  001500  C0DC  F0E4         	movff	PotSetpoint@new_point+1,PotSetpoint@new_pos+1
  7926                           
  7927                           ;DigiPot.c: 35: LATB5 = 0;
  7928  001504  9A8A               	bcf	3978,5,c	;volatile
  7929                           
  7930                           ;DigiPot.c: 38: if (new_pos > prev_pos) {
  7931  001506  0100               	movlb	0	; () banked
  7932  001508  51E3               	movf	PotSetpoint@new_pos& (0+255),w,b
  7933  00150A  5C32               	subwf	_prev_pos,w,c
  7934  00150C  5033               	movf	_prev_pos+1,w,c
  7935  00150E  0A80               	xorlw	128
  7936  001510  0100               	movlb	0	; () banked
  7937  001512  6FDD               	movwf	??_PotSetpoint& (0+255),b
  7938  001514  0100               	movlb	0	; () banked
  7939  001516  51E4               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  7940  001518  0A80               	xorlw	128
  7941  00151A  0100               	movlb	0	; () banked
  7942  00151C  59DD               	subwfb	??_PotSetpoint& (0+255),w,b
  7943  00151E  B0D8               	btfsc	status,0,c
  7944  001520  D016               	goto	l914
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;DigiPot.c: 40: LATB3 = 1;
  7948  001522  868A               	bsf	3978,3,c	;volatile
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;DigiPot.c: 41: set_point = new_pos - prev_pos;
  7952  001524  C032  F0DD         	movff	_prev_pos,??_PotSetpoint
  7953  001528  C033  F0DE         	movff	_prev_pos+1,??_PotSetpoint+1
  7954  00152C  0100               	movlb	0	; () banked
  7955  00152E  1FDD               	comf	??_PotSetpoint& (0+255),f,b
  7956  001530  1FDE               	comf	(??_PotSetpoint+1)& (0+255),f,b
  7957  001532  4BDD               	infsnz	??_PotSetpoint& (0+255),f,b
  7958  001534  2BDE               	incf	(??_PotSetpoint+1)& (0+255),f,b
  7959  001536  0100               	movlb	0	; () banked
  7960  001538  51E3               	movf	PotSetpoint@new_pos& (0+255),w,b
  7961  00153A  0100               	movlb	0	; () banked
  7962  00153C  25DD               	addwf	??_PotSetpoint& (0+255),w,b
  7963  00153E  0100               	movlb	0	; () banked
  7964  001540  6FDF               	movwf	PotSetpoint@set_point& (0+255),b
  7965  001542  0100               	movlb	0	; () banked
  7966  001544  51E4               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  7967  001546  0100               	movlb	0	; () banked
  7968  001548  21DE               	addwfc	(??_PotSetpoint+1)& (0+255),w,b
  7969  00154A  0100               	movlb	0	; () banked
  7970  00154C  6FE0               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  7971  00154E                     l914:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;DigiPot.c: 42: }
  7975                           ;DigiPot.c: 43: if (new_pos < prev_pos) {
  7976  00154E  5032               	movf	_prev_pos,w,c
  7977  001550  0100               	movlb	0	; () banked
  7978  001552  5DE3               	subwf	PotSetpoint@new_pos& (0+255),w,b
  7979  001554  0100               	movlb	0	; () banked
  7980  001556  51E4               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  7981  001558  0A80               	xorlw	128
  7982  00155A  0100               	movlb	0	; () banked
  7983  00155C  6FDD               	movwf	??_PotSetpoint& (0+255),b
  7984  00155E  5033               	movf	_prev_pos+1,w,c
  7985  001560  0A80               	xorlw	128
  7986  001562  0100               	movlb	0	; () banked
  7987  001564  59DD               	subwfb	??_PotSetpoint& (0+255),w,b
  7988  001566  B0D8               	btfsc	status,0,c
  7989  001568  D014               	goto	l4594
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;DigiPot.c: 45: LATB3 = 0;
  7993  00156A  968A               	bcf	3978,3,c	;volatile
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;DigiPot.c: 46: set_point = prev_pos - new_pos;
  7997  00156C  C0E3  F0DD         	movff	PotSetpoint@new_pos,??_PotSetpoint
  7998  001570  C0E4  F0DE         	movff	PotSetpoint@new_pos+1,??_PotSetpoint+1
  7999  001574  0100               	movlb	0	; () banked
  8000  001576  1FDD               	comf	??_PotSetpoint& (0+255),f,b
  8001  001578  1FDE               	comf	(??_PotSetpoint+1)& (0+255),f,b
  8002  00157A  4BDD               	infsnz	??_PotSetpoint& (0+255),f,b
  8003  00157C  2BDE               	incf	(??_PotSetpoint+1)& (0+255),f,b
  8004  00157E  5032               	movf	_prev_pos,w,c
  8005  001580  0100               	movlb	0	; () banked
  8006  001582  25DD               	addwf	??_PotSetpoint& (0+255),w,b
  8007  001584  0100               	movlb	0	; () banked
  8008  001586  6FDF               	movwf	PotSetpoint@set_point& (0+255),b
  8009  001588  5033               	movf	_prev_pos+1,w,c
  8010  00158A  0100               	movlb	0	; () banked
  8011  00158C  21DE               	addwfc	(??_PotSetpoint+1)& (0+255),w,b
  8012  00158E  0100               	movlb	0	; () banked
  8013  001590  6FE0               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  8014  001592                     l4594:
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;DigiPot.c: 47: }
  8018                           ;DigiPot.c: 48: Delay(1);
  8019  001592  0E01               	movlw	1
  8020  001594  0100               	movlb	0	; () banked
  8021  001596  6FD2               	movwf	Delay@wait& (0+255),b
  8022  001598  0E00               	movlw	0
  8023  00159A  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8024  00159C  0E00               	movlw	0
  8025  00159E  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8026  0015A0  0E00               	movlw	0
  8027  0015A2  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8028  0015A4  ECB9  F011         	call	_Delay	;wreg free
  8029                           
  8030                           ;DigiPot.c: 50: int x;
  8031                           ;DigiPot.c: 52: for (x = 0; x < set_point; x++) {
  8032  0015A8  0E00               	movlw	0
  8033  0015AA  0100               	movlb	0	; () banked
  8034  0015AC  6FE2               	movwf	(PotSetpoint@x+1)& (0+255),b
  8035  0015AE  0E00               	movlw	0
  8036  0015B0  6FE1               	movwf	PotSetpoint@x& (0+255),b
  8037  0015B2  D01B               	goto	l4604
  8038  0015B4                     l917:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;DigiPot.c: 53: LATB4 = 1;
  8042  0015B4  888A               	bsf	3978,4,c	;volatile
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;DigiPot.c: 54: Delay(1);
  8046  0015B6  0E01               	movlw	1
  8047  0015B8  0100               	movlb	0	; () banked
  8048  0015BA  6FD2               	movwf	Delay@wait& (0+255),b
  8049  0015BC  0E00               	movlw	0
  8050  0015BE  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8051  0015C0  0E00               	movlw	0
  8052  0015C2  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8053  0015C4  0E00               	movlw	0
  8054  0015C6  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8055  0015C8  ECB9  F011         	call	_Delay	;wreg free
  8056                           
  8057                           ;DigiPot.c: 55: LATB4 = 0;
  8058  0015CC  988A               	bcf	3978,4,c	;volatile
  8059                           
  8060                           ;DigiPot.c: 56: Delay(1);
  8061  0015CE  0E01               	movlw	1
  8062  0015D0  0100               	movlb	0	; () banked
  8063  0015D2  6FD2               	movwf	Delay@wait& (0+255),b
  8064  0015D4  0E00               	movlw	0
  8065  0015D6  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8066  0015D8  0E00               	movlw	0
  8067  0015DA  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8068  0015DC  0E00               	movlw	0
  8069  0015DE  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8070  0015E0  ECB9  F011         	call	_Delay	;wreg free
  8071  0015E4  0100               	movlb	0	; () banked
  8072  0015E6  4BE1               	infsnz	PotSetpoint@x& (0+255),f,b
  8073  0015E8  2BE2               	incf	(PotSetpoint@x+1)& (0+255),f,b
  8074  0015EA                     l4604:
  8075                           
  8076                           ; BSR set to: 0
  8077  0015EA  0100               	movlb	0	; () banked
  8078  0015EC  51DF               	movf	PotSetpoint@set_point& (0+255),w,b
  8079  0015EE  0100               	movlb	0	; () banked
  8080  0015F0  5DE1               	subwf	PotSetpoint@x& (0+255),w,b
  8081  0015F2  0100               	movlb	0	; () banked
  8082  0015F4  51E2               	movf	(PotSetpoint@x+1)& (0+255),w,b
  8083  0015F6  0A80               	xorlw	128
  8084  0015F8  0100               	movlb	0	; () banked
  8085  0015FA  6FDD               	movwf	??_PotSetpoint& (0+255),b
  8086  0015FC  0100               	movlb	0	; () banked
  8087  0015FE  51E0               	movf	(PotSetpoint@set_point+1)& (0+255),w,b
  8088  001600  0A80               	xorlw	128
  8089  001602  0100               	movlb	0	; () banked
  8090  001604  59DD               	subwfb	??_PotSetpoint& (0+255),w,b
  8091  001606  A0D8               	btfss	status,0,c
  8092  001608  D7D5               	goto	l917
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;DigiPot.c: 57: }
  8096                           ;DigiPot.c: 59: LATB5 = 1;
  8097  00160A  8A8A               	bsf	3978,5,c	;volatile
  8098                           
  8099                           ;DigiPot.c: 60: prev_pos = new_pos;
  8100  00160C  C0E3  F032         	movff	PotSetpoint@new_pos,_prev_pos
  8101  001610  C0E4  F033         	movff	PotSetpoint@new_pos+1,_prev_pos+1
  8102                           
  8103                           ; BSR set to: 0
  8104  001614  0012               	return		;funcret
  8105  001616                     __end_of_PotSetpoint:
  8106                           	opt stack 0
  8107                           tosu	equ	0xFFF
  8108                           tosh	equ	0xFFE
  8109                           tosl	equ	0xFFD
  8110                           pclath	equ	0xFFA
  8111                           tblptru	equ	0xFF8
  8112                           tblptrh	equ	0xFF7
  8113                           tblptrl	equ	0xFF6
  8114                           tablat	equ	0xFF5
  8115                           prodh	equ	0xFF4
  8116                           prodl	equ	0xFF3
  8117                           intcon	equ	0xFF2
  8118                           intcon2	equ	0xFF1
  8119                           postinc0	equ	0xFEE
  8120                           wreg	equ	0xFE8
  8121                           indf2	equ	0xFDF
  8122                           postinc2	equ	0xFDE
  8123                           postdec2	equ	0xFDD
  8124                           plusw2	equ	0xFDB
  8125                           fsr2h	equ	0xFDA
  8126                           fsr2l	equ	0xFD9
  8127                           status	equ	0xFD8
  8128                           
  8129 ;; *************** function _PotClear *****************
  8130 ;; Defined at:
  8131 ;;		line 66 in file "DigiPot.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;		None
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  x               2    9[BANK0 ] int 
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  1    wreg      void 
  8138 ;; Registers used:
  8139 ;;		wreg, status,2, status,0, cstack
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8145 ;;      Params:         0       0       0       0       0       0       0
  8146 ;;      Locals:         0       2       0       0       0       0       0
  8147 ;;      Temps:          0       0       0       0       0       0       0
  8148 ;;      Totals:         0       2       0       0       0       0       0
  8149 ;;Total ram usage:        2 bytes
  8150 ;; Hardware stack levels used:    1
  8151 ;; Hardware stack levels required when called:    7
  8152 ;; This function calls:
  8153 ;;		_Delay
  8154 ;; This function is called by:
  8155 ;;		_CoolingStart
  8156 ;;		_CoolingStop
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text47
  8161  001A40                     __ptext47:
  8162                           	opt stack 0
  8163  001A40                     _PotClear:
  8164                           	opt stack 22
  8165                           
  8166                           ;DigiPot.c: 67: Delay(1);
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;incstack = 0
  8170  001A40  0E01               	movlw	1
  8171  001A42  0100               	movlb	0	; () banked
  8172  001A44  6FD2               	movwf	Delay@wait& (0+255),b
  8173  001A46  0E00               	movlw	0
  8174  001A48  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8175  001A4A  0E00               	movlw	0
  8176  001A4C  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8177  001A4E  0E00               	movlw	0
  8178  001A50  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8179  001A52  ECB9  F011         	call	_Delay	;wreg free
  8180                           
  8181                           ;DigiPot.c: 69: LATB5 = 0;
  8182  001A56  9A8A               	bcf	3978,5,c	;volatile
  8183                           
  8184                           ;DigiPot.c: 70: Delay(1);
  8185  001A58  0E01               	movlw	1
  8186  001A5A  0100               	movlb	0	; () banked
  8187  001A5C  6FD2               	movwf	Delay@wait& (0+255),b
  8188  001A5E  0E00               	movlw	0
  8189  001A60  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8190  001A62  0E00               	movlw	0
  8191  001A64  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8192  001A66  0E00               	movlw	0
  8193  001A68  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8194  001A6A  ECB9  F011         	call	_Delay	;wreg free
  8195                           
  8196                           ;DigiPot.c: 71: LATB3 = 0;
  8197  001A6E  968A               	bcf	3978,3,c	;volatile
  8198                           
  8199                           ;DigiPot.c: 72: Delay(1);
  8200  001A70  0E01               	movlw	1
  8201  001A72  0100               	movlb	0	; () banked
  8202  001A74  6FD2               	movwf	Delay@wait& (0+255),b
  8203  001A76  0E00               	movlw	0
  8204  001A78  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8205  001A7A  0E00               	movlw	0
  8206  001A7C  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8207  001A7E  0E00               	movlw	0
  8208  001A80  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8209  001A82  ECB9  F011         	call	_Delay	;wreg free
  8210                           
  8211                           ;DigiPot.c: 73: int x;
  8212                           ;DigiPot.c: 74: for (x = 0; x < 32; x++) {
  8213  001A86  0E00               	movlw	0
  8214  001A88  0100               	movlb	0	; () banked
  8215  001A8A  6FDC               	movwf	(PotClear@x+1)& (0+255),b
  8216  001A8C  0E00               	movlw	0
  8217  001A8E  6FDB               	movwf	PotClear@x& (0+255),b
  8218                           
  8219                           ; BSR set to: 0
  8220  001A90  0100               	movlb	0	; () banked
  8221  001A92  BFDC               	btfsc	(PotClear@x+1)& (0+255),7,b
  8222  001A94  D008               	goto	l922
  8223  001A96  0100               	movlb	0	; () banked
  8224  001A98  51DC               	movf	(PotClear@x+1)& (0+255),w,b
  8225  001A9A  E127               	bnz	l923
  8226  001A9C  0E20               	movlw	32
  8227  001A9E  0100               	movlb	0	; () banked
  8228  001AA0  5DDB               	subwf	PotClear@x& (0+255),w,b
  8229  001AA2  B0D8               	btfsc	status,0,c
  8230  001AA4  D022               	goto	l923
  8231  001AA6                     l922:
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;DigiPot.c: 75: LATB4 = 1;
  8235  001AA6  888A               	bsf	3978,4,c	;volatile
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;DigiPot.c: 76: Delay(1);
  8239  001AA8  0E01               	movlw	1
  8240  001AAA  0100               	movlb	0	; () banked
  8241  001AAC  6FD2               	movwf	Delay@wait& (0+255),b
  8242  001AAE  0E00               	movlw	0
  8243  001AB0  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8244  001AB2  0E00               	movlw	0
  8245  001AB4  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8246  001AB6  0E00               	movlw	0
  8247  001AB8  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8248  001ABA  ECB9  F011         	call	_Delay	;wreg free
  8249                           
  8250                           ;DigiPot.c: 77: LATB4 = 0;
  8251  001ABE  988A               	bcf	3978,4,c	;volatile
  8252                           
  8253                           ;DigiPot.c: 78: Delay(1);
  8254  001AC0  0E01               	movlw	1
  8255  001AC2  0100               	movlb	0	; () banked
  8256  001AC4  6FD2               	movwf	Delay@wait& (0+255),b
  8257  001AC6  0E00               	movlw	0
  8258  001AC8  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8259  001ACA  0E00               	movlw	0
  8260  001ACC  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8261  001ACE  0E00               	movlw	0
  8262  001AD0  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8263  001AD2  ECB9  F011         	call	_Delay	;wreg free
  8264  001AD6  0100               	movlb	0	; () banked
  8265  001AD8  4BDB               	infsnz	PotClear@x& (0+255),f,b
  8266  001ADA  2BDC               	incf	(PotClear@x+1)& (0+255),f,b
  8267                           
  8268                           ; BSR set to: 0
  8269  001ADC  0100               	movlb	0	; () banked
  8270  001ADE  BFDC               	btfsc	(PotClear@x+1)& (0+255),7,b
  8271  001AE0  D7E2               	goto	l922
  8272  001AE2  0100               	movlb	0	; () banked
  8273  001AE4  51DC               	movf	(PotClear@x+1)& (0+255),w,b
  8274  001AE6  E101               	bnz	u4030
  8275  001AE8  D7D9               	goto	L1
  8276  001AEA                     u4030:
  8277  001AEA                     l923:
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;DigiPot.c: 79: }
  8281                           ;DigiPot.c: 80: LATB4 = 1;
  8282  001AEA  888A               	bsf	3978,4,c	;volatile
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;DigiPot.c: 81: Delay(1);
  8286  001AEC  0E01               	movlw	1
  8287  001AEE  0100               	movlb	0	; () banked
  8288  001AF0  6FD2               	movwf	Delay@wait& (0+255),b
  8289  001AF2  0E00               	movlw	0
  8290  001AF4  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8291  001AF6  0E00               	movlw	0
  8292  001AF8  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8293  001AFA  0E00               	movlw	0
  8294  001AFC  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8295  001AFE  ECB9  F011         	call	_Delay	;wreg free
  8296                           
  8297                           ;DigiPot.c: 83: LATB5 = 1;
  8298  001B02  8A8A               	bsf	3978,5,c	;volatile
  8299                           
  8300                           ;DigiPot.c: 84: prev_pos = 0;
  8301  001B04  0E00               	movlw	0
  8302  001B06  6E33               	movwf	_prev_pos+1,c
  8303  001B08  0E00               	movlw	0
  8304  001B0A  6E32               	movwf	_prev_pos,c
  8305                           
  8306                           ;DigiPot.c: 85: Delay(1);
  8307  001B0C  0E01               	movlw	1
  8308  001B0E  0100               	movlb	0	; () banked
  8309  001B10  6FD2               	movwf	Delay@wait& (0+255),b
  8310  001B12  0E00               	movlw	0
  8311  001B14  6FD3               	movwf	(Delay@wait+1)& (0+255),b
  8312  001B16  0E00               	movlw	0
  8313  001B18  6FD4               	movwf	(Delay@wait+2)& (0+255),b
  8314  001B1A  0E00               	movlw	0
  8315  001B1C  6FD5               	movwf	(Delay@wait+3)& (0+255),b
  8316  001B1E  ECB9  F011         	call	_Delay	;wreg free
  8317  001B22  0012               	return		;funcret
  8318  001B24                     __end_of_PotClear:
  8319                           	opt stack 0
  8320                           tosu	equ	0xFFF
  8321                           tosh	equ	0xFFE
  8322                           tosl	equ	0xFFD
  8323                           pclath	equ	0xFFA
  8324                           tblptru	equ	0xFF8
  8325                           tblptrh	equ	0xFF7
  8326                           tblptrl	equ	0xFF6
  8327                           tablat	equ	0xFF5
  8328                           prodh	equ	0xFF4
  8329                           prodl	equ	0xFF3
  8330                           intcon	equ	0xFF2
  8331                           intcon2	equ	0xFF1
  8332                           postinc0	equ	0xFEE
  8333                           wreg	equ	0xFE8
  8334                           indf2	equ	0xFDF
  8335                           postinc2	equ	0xFDE
  8336                           postdec2	equ	0xFDD
  8337                           plusw2	equ	0xFDB
  8338                           fsr2h	equ	0xFDA
  8339                           fsr2l	equ	0xFD9
  8340                           status	equ	0xFD8
  8341                           
  8342 ;; *************** function _Delay *****************
  8343 ;; Defined at:
  8344 ;;		line 9 in file "Functions.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  wait            4    0[BANK0 ] long 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  i               4    5[BANK0 ] long 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8358 ;;      Params:         0       4       0       0       0       0       0
  8359 ;;      Locals:         0       4       0       0       0       0       0
  8360 ;;      Temps:          0       1       0       0       0       0       0
  8361 ;;      Totals:         0       9       0       0       0       0       0
  8362 ;;Total ram usage:        9 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    6
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_respondECU
  8369 ;;		_StartUp595
  8370 ;;		_writeRegisters
  8371 ;;		_PotSetpoint
  8372 ;;		_PotClear
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text48
  8377  002372                     __ptext48:
  8378                           	opt stack 0
  8379  002372                     _Delay:
  8380                           	opt stack 22
  8381                           
  8382                           ;Functions.c: 10: long int i = 0;
  8383                           
  8384                           ;incstack = 0
  8385  002372  0E00               	movlw	0
  8386  002374  0100               	movlb	0	; () banked
  8387  002376  6FD7               	movwf	Delay@i& (0+255),b
  8388  002378  0E00               	movlw	0
  8389  00237A  6FD8               	movwf	(Delay@i+1)& (0+255),b
  8390  00237C  0E00               	movlw	0
  8391  00237E  6FD9               	movwf	(Delay@i+2)& (0+255),b
  8392  002380  0E00               	movlw	0
  8393  002382  6FDA               	movwf	(Delay@i+3)& (0+255),b
  8394                           
  8395                           ;Functions.c: 11: for (; wait > i; i++) {
  8396  002384  D00F               	goto	l4008
  8397  002386                     l4004:
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;Functions.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
  8401  002386  0E03               	movlw	3
  8402  002388  0100               	movlb	0	; () banked
  8403  00238A  6FD6               	movwf	??_Delay& (0+255),b
  8404  00238C  0E98               	movlw	152
  8405  00238E                     u4287:
  8406  00238E  2EE8               	decfsz	wreg,f,c
  8407  002390  D7FE               	goto	u4287
  8408  002392  2FD6               	decfsz	??_Delay& (0+255),f,b
  8409  002394  D7FC               	goto	u4287
  8410  002396  0E01               	movlw	1
  8411  002398  0100               	movlb	0	; () banked
  8412  00239A  27D7               	addwf	Delay@i& (0+255),f,b
  8413  00239C  0E00               	movlw	0
  8414  00239E  23D8               	addwfc	(Delay@i+1)& (0+255),f,b
  8415  0023A0  23D9               	addwfc	(Delay@i+2)& (0+255),f,b
  8416  0023A2  23DA               	addwfc	(Delay@i+3)& (0+255),f,b
  8417  0023A4                     l4008:
  8418                           
  8419                           ; BSR set to: 0
  8420  0023A4  0100               	movlb	0	; () banked
  8421  0023A6  51D2               	movf	Delay@wait& (0+255),w,b
  8422  0023A8  0100               	movlb	0	; () banked
  8423  0023AA  5DD7               	subwf	Delay@i& (0+255),w,b
  8424  0023AC  0100               	movlb	0	; () banked
  8425  0023AE  51D3               	movf	(Delay@wait+1)& (0+255),w,b
  8426  0023B0  0100               	movlb	0	; () banked
  8427  0023B2  59D8               	subwfb	(Delay@i+1)& (0+255),w,b
  8428  0023B4  0100               	movlb	0	; () banked
  8429  0023B6  51D4               	movf	(Delay@wait+2)& (0+255),w,b
  8430  0023B8  0100               	movlb	0	; () banked
  8431  0023BA  59D9               	subwfb	(Delay@i+2)& (0+255),w,b
  8432  0023BC  0100               	movlb	0	; () banked
  8433  0023BE  51DA               	movf	(Delay@i+3)& (0+255),w,b
  8434  0023C0  0A80               	xorlw	128
  8435  0023C2  0100               	movlb	0	; () banked
  8436  0023C4  6FD6               	movwf	??_Delay& (0+255),b
  8437  0023C6  0100               	movlb	0	; () banked
  8438  0023C8  51D5               	movf	(Delay@wait+3)& (0+255),w,b
  8439  0023CA  0A80               	xorlw	128
  8440  0023CC  0100               	movlb	0	; () banked
  8441  0023CE  59D6               	subwfb	??_Delay& (0+255),w,b
  8442  0023D0  B0D8               	btfsc	status,0,c
  8443  0023D2  0012               	return	
  8444  0023D4  D7D8               	goto	l4004
  8445  0023D6                     __end_of_Delay:
  8446                           	opt stack 0
  8447                           tosu	equ	0xFFF
  8448                           tosh	equ	0xFFE
  8449                           tosl	equ	0xFFD
  8450                           pclath	equ	0xFFA
  8451                           tblptru	equ	0xFF8
  8452                           tblptrh	equ	0xFF7
  8453                           tblptrl	equ	0xFF6
  8454                           tablat	equ	0xFF5
  8455                           prodh	equ	0xFF4
  8456                           prodl	equ	0xFF3
  8457                           intcon	equ	0xFF2
  8458                           intcon2	equ	0xFF1
  8459                           postinc0	equ	0xFEE
  8460                           wreg	equ	0xFE8
  8461                           indf2	equ	0xFDF
  8462                           postinc2	equ	0xFDE
  8463                           postdec2	equ	0xFDD
  8464                           plusw2	equ	0xFDB
  8465                           fsr2h	equ	0xFDA
  8466                           fsr2l	equ	0xFD9
  8467                           status	equ	0xFD8
  8468                           
  8469 ;; *************** function _PWM4_LoadDutyValue *****************
  8470 ;; Defined at:
  8471 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      void 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8485 ;;      Params:         0       2       0       0       0       0       0
  8486 ;;      Locals:         0       0       0       0       0       0       0
  8487 ;;      Temps:          0       2       0       0       0       0       0
  8488 ;;      Totals:         0       4       0       0       0       0       0
  8489 ;;Total ram usage:        4 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    6
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_main
  8496 ;;		_CoolingStart
  8497 ;;		_CoolingStop
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           	psect	text49
  8502  00265C                     __ptext49:
  8503                           	opt stack 0
  8504  00265C                     _PWM4_LoadDutyValue:
  8505                           	opt stack 24
  8506                           
  8507                           ;pwm4.c: 84: CCPR2L = ((dutyValue & 0x03FC)>>2);
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;incstack = 0
  8511  00265C  C0D2  F0D4         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  8512  002660  C0D3  F0D5         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  8513  002664  0100               	movlb	0	; () banked
  8514  002666  90D8               	bcf	status,0,c
  8515  002668  33D5               	rrcf	(??_PWM4_LoadDutyValue+1)& (0+255),f,b
  8516  00266A  33D4               	rrcf	??_PWM4_LoadDutyValue& (0+255),f,b
  8517  00266C  0100               	movlb	0	; () banked
  8518  00266E  90D8               	bcf	status,0,c
  8519  002670  33D5               	rrcf	(??_PWM4_LoadDutyValue+1)& (0+255),f,b
  8520  002672  33D4               	rrcf	??_PWM4_LoadDutyValue& (0+255),f,b
  8521  002674  0100               	movlb	0	; () banked
  8522  002676  51D4               	movf	??_PWM4_LoadDutyValue& (0+255),w,b
  8523  002678  6E67               	movwf	3943,c	;volatile
  8524                           
  8525                           ;pwm4.c: 87: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  8526  00267A  C0D2  F0D4         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  8527  00267E  0E03               	movlw	3
  8528  002680  0100               	movlb	0	; () banked
  8529  002682  17D4               	andwf	??_PWM4_LoadDutyValue& (0+255),f,b
  8530  002684  0100               	movlb	0	; () banked
  8531  002686  3BD4               	swapf	??_PWM4_LoadDutyValue& (0+255),f,b
  8532  002688  0EF0               	movlw	240
  8533  00268A  17D4               	andwf	??_PWM4_LoadDutyValue& (0+255),f,b
  8534  00268C  5066               	movf	3942,w,c	;volatile
  8535  00268E  0BCF               	andlw	207
  8536  002690  0100               	movlb	0	; () banked
  8537  002692  11D4               	iorwf	??_PWM4_LoadDutyValue& (0+255),w,b
  8538  002694  6E66               	movwf	3942,c	;volatile
  8539                           
  8540                           ; BSR set to: 0
  8541  002696  0012               	return		;funcret
  8542  002698                     __end_of_PWM4_LoadDutyValue:
  8543                           	opt stack 0
  8544                           tosu	equ	0xFFF
  8545                           tosh	equ	0xFFE
  8546                           tosl	equ	0xFFD
  8547                           pclath	equ	0xFFA
  8548                           tblptru	equ	0xFF8
  8549                           tblptrh	equ	0xFF7
  8550                           tblptrl	equ	0xFF6
  8551                           tablat	equ	0xFF5
  8552                           prodh	equ	0xFF4
  8553                           prodl	equ	0xFF3
  8554                           intcon	equ	0xFF2
  8555                           intcon2	equ	0xFF1
  8556                           postinc0	equ	0xFEE
  8557                           wreg	equ	0xFE8
  8558                           indf2	equ	0xFDF
  8559                           postinc2	equ	0xFDE
  8560                           postdec2	equ	0xFDD
  8561                           plusw2	equ	0xFDB
  8562                           fsr2h	equ	0xFDA
  8563                           fsr2l	equ	0xFD9
  8564                           status	equ	0xFD8
  8565                           
  8566 ;; *************** function _CoolingCheck *****************
  8567 ;; Defined at:
  8568 ;;		line 213 in file "PDU.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      unsigned char 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8582 ;;      Params:         0       0       0       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    6
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_main
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text50
  8597  0029B6                     __ptext50:
  8598                           	opt stack 0
  8599  0029B6                     _CoolingCheck:
  8600                           	opt stack 24
  8601                           
  8602                           ;PDU.c: 214: return MCSOn;
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;incstack = 0
  8606  0029B6  503E               	movf	_MCSOn,w,c
  8607  0029B8  0012               	return	
  8608  0029BA                     __end_of_CoolingCheck:
  8609                           	opt stack 0
  8610                           tosu	equ	0xFFF
  8611                           tosh	equ	0xFFE
  8612                           tosl	equ	0xFFD
  8613                           pclath	equ	0xFFA
  8614                           tblptru	equ	0xFF8
  8615                           tblptrh	equ	0xFF7
  8616                           tblptrl	equ	0xFF6
  8617                           tablat	equ	0xFF5
  8618                           prodh	equ	0xFF4
  8619                           prodl	equ	0xFF3
  8620                           intcon	equ	0xFF2
  8621                           intcon2	equ	0xFF1
  8622                           postinc0	equ	0xFEE
  8623                           wreg	equ	0xFE8
  8624                           indf2	equ	0xFDF
  8625                           postinc2	equ	0xFDE
  8626                           postdec2	equ	0xFDD
  8627                           plusw2	equ	0xFDB
  8628                           fsr2h	equ	0xFDA
  8629                           fsr2l	equ	0xFD9
  8630                           status	equ	0xFD8
  8631                           
  8632 ;; *************** function _INTERRUPT_InterruptManager *****************
  8633 ;; Defined at:
  8634 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;		None
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;		None
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  1    wreg      void 
  8641 ;; Registers used:
  8642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8648 ;;      Params:         0       0       0       0       0       0       0
  8649 ;;      Locals:         0       0       0       0       0       0       0
  8650 ;;      Temps:         14       0       0       0       0       0       0
  8651 ;;      Totals:        14       0       0       0       0       0       0
  8652 ;;Total ram usage:       14 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    5
  8655 ;; This function calls:
  8656 ;;		_ADC_ISR
  8657 ;;		_EUSART1_Receive_ISR
  8658 ;;		_EUSART1_Transmit_ISR
  8659 ;;		_TMR1_ISR
  8660 ;; This function is called by:
  8661 ;;		Interrupt level 2
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	intcode
  8666  000008                     __pintcode:
  8667                           	opt stack 0
  8668  000008                     _INTERRUPT_InterruptManager:
  8669                           	opt stack 19
  8670                           
  8671                           ;incstack = 0
  8672  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8673  00000A  CFFA F016          	movff	pclath,??_INTERRUPT_InterruptManager
  8674  00000E  CFFB F017          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8675  000012  CFE9 F018          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  8676  000016  CFEA F019          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  8677  00001A  CFE1 F01A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  8678  00001E  CFE2 F01B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  8679  000022  CFD9 F01C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  8680  000026  CFDA F01D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  8681  00002A  CFF3 F01E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  8682  00002E  CFF4 F01F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  8683  000032  CFF6 F020          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  8684  000036  CFF7 F021          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  8685  00003A  CFF8 F022          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  8686  00003E  CFF5 F023          	movff	tablat,??_INTERRUPT_InterruptManager+13
  8687                           
  8688                           ;interrupt_manager.c: 70: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  8689  000042  BA9D               	btfsc	3997,5,c	;volatile
  8690  000044  AA9E               	btfss	3998,5,c	;volatile
  8691  000046  D003               	goto	i2l65
  8692                           
  8693                           ;interrupt_manager.c: 71: {
  8694                           ;interrupt_manager.c: 72: EUSART1_Receive_ISR();
  8695  000048  EC53  F014         	call	_EUSART1_Receive_ISR	;wreg free
  8696                           
  8697                           ;interrupt_manager.c: 73: }
  8698  00004C  D011               	goto	i2l73
  8699  00004E                     i2l65:
  8700                           
  8701                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  8702  00004E  B89D               	btfsc	3997,4,c	;volatile
  8703  000050  A89E               	btfss	3998,4,c	;volatile
  8704  000052  D003               	goto	i2l67
  8705                           
  8706                           ;interrupt_manager.c: 75: {
  8707                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
  8708  000054  ECB6  F013         	call	_EUSART1_Transmit_ISR	;wreg free
  8709                           
  8710                           ;interrupt_manager.c: 77: }
  8711  000058  D00B               	goto	i2l73
  8712  00005A                     i2l67:
  8713                           
  8714                           ;interrupt_manager.c: 78: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  8715  00005A  BC9D               	btfsc	3997,6,c	;volatile
  8716  00005C  AC9E               	btfss	3998,6,c	;volatile
  8717  00005E  D003               	goto	i2l69
  8718                           
  8719                           ;interrupt_manager.c: 79: {
  8720                           ;interrupt_manager.c: 80: ADC_ISR();
  8721  000060  ECDD  F014         	call	_ADC_ISR	;wreg free
  8722                           
  8723                           ;interrupt_manager.c: 81: }
  8724  000064  D005               	goto	i2l73
  8725  000066                     i2l69:
  8726                           
  8727                           ;interrupt_manager.c: 82: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  8728  000066  B09D               	btfsc	3997,0,c	;volatile
  8729  000068  A09E               	btfss	3998,0,c	;volatile
  8730  00006A  D002               	goto	i2l73
  8731                           
  8732                           ;interrupt_manager.c: 83: {
  8733                           ;interrupt_manager.c: 84: TMR1_ISR();
  8734  00006C  EC9D  F013         	call	_TMR1_ISR	;wreg free
  8735  000070                     i2l73:
  8736  000070  C023  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  8737  000074  C022  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  8738  000078  C021  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  8739  00007C  C020  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  8740  000080  C01F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  8741  000084  C01E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  8742  000088  C01D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  8743  00008C  C01C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  8744  000090  C01B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  8745  000094  C01A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  8746  000098  C019  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  8747  00009C  C018  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  8748  0000A0  C017  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8749  0000A4  C016  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8750  0000A8  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8751  0000AA  0011               	retfie		f
  8752  0000AC                     __end_of_INTERRUPT_InterruptManager:
  8753                           	opt stack 0
  8754                           tosu	equ	0xFFF
  8755                           tosh	equ	0xFFE
  8756                           tosl	equ	0xFFD
  8757                           pclatu	equ	0xFFB
  8758                           pclath	equ	0xFFA
  8759                           tblptru	equ	0xFF8
  8760                           tblptrh	equ	0xFF7
  8761                           tblptrl	equ	0xFF6
  8762                           tablat	equ	0xFF5
  8763                           prodh	equ	0xFF4
  8764                           prodl	equ	0xFF3
  8765                           intcon	equ	0xFF2
  8766                           intcon2	equ	0xFF1
  8767                           postinc0	equ	0xFEE
  8768                           fsr0h	equ	0xFEA
  8769                           fsr0l	equ	0xFE9
  8770                           wreg	equ	0xFE8
  8771                           fsr1h	equ	0xFE2
  8772                           fsr1l	equ	0xFE1
  8773                           indf2	equ	0xFDF
  8774                           postinc2	equ	0xFDE
  8775                           postdec2	equ	0xFDD
  8776                           plusw2	equ	0xFDB
  8777                           fsr2h	equ	0xFDA
  8778                           fsr2l	equ	0xFD9
  8779                           status	equ	0xFD8
  8780                           
  8781 ;; *************** function _TMR1_ISR *****************
  8782 ;; Defined at:
  8783 ;;		line 161 in file "mcc_generated_files/tmr1.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  2   53[None  ] int 
  8790 ;; Registers used:
  8791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8797 ;;      Params:         0       0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:    4
  8804 ;; This function calls:
  8805 ;;		_FuseSystem
  8806 ;;		_ReadCurrent
  8807 ;; This function is called by:
  8808 ;;		_INTERRUPT_InterruptManager
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           	psect	text52
  8813  00273A                     __ptext52:
  8814                           	opt stack 0
  8815  00273A                     _TMR1_ISR:
  8816                           	opt stack 19
  8817                           
  8818                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  8819                           
  8820                           ;incstack = 0
  8821  00273A  909E               	bcf	3998,0,c	;volatile
  8822                           
  8823                           ;tmr1.c: 168: TMR1H = (timer1ReloadVal >> 8);
  8824  00273C  503B               	movf	_timer1ReloadVal+1,w,c	;volatile
  8825  00273E  6ECF               	movwf	4047,c	;volatile
  8826                           
  8827                           ;tmr1.c: 169: TMR1L = (uint8_t) timer1ReloadVal;
  8828  002740  C03A  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  8829                           
  8830                           ;tmr1.c: 170: readwhat++;
  8831  002744  4A40               	infsnz	_readwhat,f,c
  8832  002746  2A41               	incf	_readwhat+1,f,c
  8833                           
  8834                           ;tmr1.c: 171: if(readwhat > 7)
  8835  002748  BE41               	btfsc	_readwhat+1,7,c
  8836  00274A  D00C               	goto	i2l3710
  8837  00274C  5041               	movf	_readwhat+1,w,c
  8838  00274E  E104               	bnz	i2u274_40
  8839  002750  0E08               	movlw	8
  8840  002752  5C40               	subwf	_readwhat,w,c
  8841  002754  A0D8               	btfss	status,0,c
  8842  002756  D006               	goto	i2l3710
  8843  002758                     i2u274_40:
  8844                           
  8845                           ;tmr1.c: 172: {
  8846                           ;tmr1.c: 173: readwhat = 1;
  8847  002758  0E00               	movlw	0
  8848  00275A  6E41               	movwf	_readwhat+1,c
  8849  00275C  0E01               	movlw	1
  8850  00275E  6E40               	movwf	_readwhat,c
  8851                           
  8852                           ;tmr1.c: 174: FuseSystem();
  8853  002760  ECDF  F007         	call	_FuseSystem	;wreg free
  8854  002764                     i2l3710:
  8855                           
  8856                           ;tmr1.c: 175: }
  8857                           ;tmr1.c: 176: ReadCurrent(readwhat);
  8858  002764  5040               	movf	_readwhat,w,c
  8859  002766  ECC1  F003         	call	_ReadCurrent
  8860  00276A  0012               	return		;funcret
  8861  00276C                     __end_of_TMR1_ISR:
  8862                           	opt stack 0
  8863                           tosu	equ	0xFFF
  8864                           tosh	equ	0xFFE
  8865                           tosl	equ	0xFFD
  8866                           pclatu	equ	0xFFB
  8867                           pclath	equ	0xFFA
  8868                           tblptru	equ	0xFF8
  8869                           tblptrh	equ	0xFF7
  8870                           tblptrl	equ	0xFF6
  8871                           tablat	equ	0xFF5
  8872                           prodh	equ	0xFF4
  8873                           prodl	equ	0xFF3
  8874                           intcon	equ	0xFF2
  8875                           intcon2	equ	0xFF1
  8876                           postinc0	equ	0xFEE
  8877                           fsr0h	equ	0xFEA
  8878                           fsr0l	equ	0xFE9
  8879                           wreg	equ	0xFE8
  8880                           fsr1h	equ	0xFE2
  8881                           fsr1l	equ	0xFE1
  8882                           indf2	equ	0xFDF
  8883                           postinc2	equ	0xFDE
  8884                           postdec2	equ	0xFDD
  8885                           plusw2	equ	0xFDB
  8886                           fsr2h	equ	0xFDA
  8887                           fsr2l	equ	0xFD9
  8888                           status	equ	0xFD8
  8889                           
  8890 ;; *************** function _ReadCurrent *****************
  8891 ;; Defined at:
  8892 ;;		line 61 in file "PDU.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  gather          1    wreg     unsigned char 
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  gather          1   13[COMRAM] unsigned char 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8906 ;;      Params:         0       0       0       0       0       0       0
  8907 ;;      Locals:         1       0       0       0       0       0       0
  8908 ;;      Temps:          0       0       0       0       0       0       0
  8909 ;;      Totals:         1       0       0       0       0       0       0
  8910 ;;Total ram usage:        1 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; Hardware stack levels required when called:    3
  8913 ;; This function calls:
  8914 ;;		_ADC_GetConversion
  8915 ;;		i2_SetPin595
  8916 ;;		i2_Update
  8917 ;; This function is called by:
  8918 ;;		_TMR1_ISR
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text53
  8923  000782                     __ptext53:
  8924                           	opt stack 0
  8925  000782                     _ReadCurrent:
  8926                           	opt stack 19
  8927                           
  8928                           ;incstack = 0
  8929                           ;ReadCurrent@gather stored from wreg
  8930  000782  6E0E               	movwf	ReadCurrent@gather,c
  8931                           
  8932                           ;PDU.c: 62: if (gather == 1) {
  8933  000784  040E               	decf	ReadCurrent@gather,w,c
  8934  000786  A4D8               	btfss	status,2,c
  8935  000788  D088               	goto	i2l3348
  8936                           
  8937                           ;PDU.c: 64: SetPin595(1, 4, ON);
  8938  00078A  0E00               	movlw	0
  8939  00078C  6E02               	movwf	i2SetPin595@Reg+1,c
  8940  00078E  0E01               	movlw	1
  8941  000790  6E01               	movwf	i2SetPin595@Reg,c
  8942  000792  0E00               	movlw	0
  8943  000794  6E04               	movwf	i2SetPin595@pin+1,c
  8944  000796  0E04               	movlw	4
  8945  000798  6E03               	movwf	i2SetPin595@pin,c
  8946  00079A  0E00               	movlw	0
  8947  00079C  6E06               	movwf	i2SetPin595@value+1,c
  8948  00079E  0E01               	movlw	1
  8949  0007A0  6E05               	movwf	i2SetPin595@value,c
  8950  0007A2  EC47  F012         	call	i2_SetPin595	;wreg free
  8951                           
  8952                           ;PDU.c: 65: SetPin595(1, 3, OFF);
  8953  0007A6  0E00               	movlw	0
  8954  0007A8  6E02               	movwf	i2SetPin595@Reg+1,c
  8955  0007AA  0E01               	movlw	1
  8956  0007AC  6E01               	movwf	i2SetPin595@Reg,c
  8957  0007AE  0E00               	movlw	0
  8958  0007B0  6E04               	movwf	i2SetPin595@pin+1,c
  8959  0007B2  0E03               	movlw	3
  8960  0007B4  6E03               	movwf	i2SetPin595@pin,c
  8961  0007B6  0E00               	movlw	0
  8962  0007B8  6E06               	movwf	i2SetPin595@value+1,c
  8963  0007BA  0E00               	movlw	0
  8964  0007BC  6E05               	movwf	i2SetPin595@value,c
  8965  0007BE  EC47  F012         	call	i2_SetPin595	;wreg free
  8966                           
  8967                           ;PDU.c: 66: SetPin595(1, 2, OFF);
  8968  0007C2  0E00               	movlw	0
  8969  0007C4  6E02               	movwf	i2SetPin595@Reg+1,c
  8970  0007C6  0E01               	movlw	1
  8971  0007C8  6E01               	movwf	i2SetPin595@Reg,c
  8972  0007CA  0E00               	movlw	0
  8973  0007CC  6E04               	movwf	i2SetPin595@pin+1,c
  8974  0007CE  0E02               	movlw	2
  8975  0007D0  6E03               	movwf	i2SetPin595@pin,c
  8976  0007D2  0E00               	movlw	0
  8977  0007D4  6E06               	movwf	i2SetPin595@value+1,c
  8978  0007D6  0E00               	movlw	0
  8979  0007D8  6E05               	movwf	i2SetPin595@value,c
  8980  0007DA  EC47  F012         	call	i2_SetPin595	;wreg free
  8981                           
  8982                           ;PDU.c: 67: SetPin595(2, 4, OFF);
  8983  0007DE  0E00               	movlw	0
  8984  0007E0  6E02               	movwf	i2SetPin595@Reg+1,c
  8985  0007E2  0E02               	movlw	2
  8986  0007E4  6E01               	movwf	i2SetPin595@Reg,c
  8987  0007E6  0E00               	movlw	0
  8988  0007E8  6E04               	movwf	i2SetPin595@pin+1,c
  8989  0007EA  0E04               	movlw	4
  8990  0007EC  6E03               	movwf	i2SetPin595@pin,c
  8991  0007EE  0E00               	movlw	0
  8992  0007F0  6E06               	movwf	i2SetPin595@value+1,c
  8993  0007F2  0E00               	movlw	0
  8994  0007F4  6E05               	movwf	i2SetPin595@value,c
  8995  0007F6  EC47  F012         	call	i2_SetPin595	;wreg free
  8996                           
  8997                           ;PDU.c: 68: SetPin595(2, 3, OFF);
  8998  0007FA  0E00               	movlw	0
  8999  0007FC  6E02               	movwf	i2SetPin595@Reg+1,c
  9000  0007FE  0E02               	movlw	2
  9001  000800  6E01               	movwf	i2SetPin595@Reg,c
  9002  000802  0E00               	movlw	0
  9003  000804  6E04               	movwf	i2SetPin595@pin+1,c
  9004  000806  0E03               	movlw	3
  9005  000808  6E03               	movwf	i2SetPin595@pin,c
  9006  00080A  0E00               	movlw	0
  9007  00080C  6E06               	movwf	i2SetPin595@value+1,c
  9008  00080E  0E00               	movlw	0
  9009  000810  6E05               	movwf	i2SetPin595@value,c
  9010  000812  EC47  F012         	call	i2_SetPin595	;wreg free
  9011                           
  9012                           ;PDU.c: 69: SetPin595(2, 2, OFF);
  9013  000816  0E00               	movlw	0
  9014  000818  6E02               	movwf	i2SetPin595@Reg+1,c
  9015  00081A  0E02               	movlw	2
  9016  00081C  6E01               	movwf	i2SetPin595@Reg,c
  9017  00081E  0E00               	movlw	0
  9018  000820  6E04               	movwf	i2SetPin595@pin+1,c
  9019  000822  0E02               	movlw	2
  9020  000824  6E03               	movwf	i2SetPin595@pin,c
  9021  000826  0E00               	movlw	0
  9022  000828  6E06               	movwf	i2SetPin595@value+1,c
  9023  00082A  0E00               	movlw	0
  9024  00082C  6E05               	movwf	i2SetPin595@value,c
  9025  00082E  EC47  F012         	call	i2_SetPin595	;wreg free
  9026                           
  9027                           ;PDU.c: 70: SetPin595(3, 4, OFF);
  9028  000832  0E00               	movlw	0
  9029  000834  6E02               	movwf	i2SetPin595@Reg+1,c
  9030  000836  0E03               	movlw	3
  9031  000838  6E01               	movwf	i2SetPin595@Reg,c
  9032  00083A  0E00               	movlw	0
  9033  00083C  6E04               	movwf	i2SetPin595@pin+1,c
  9034  00083E  0E04               	movlw	4
  9035  000840  6E03               	movwf	i2SetPin595@pin,c
  9036  000842  0E00               	movlw	0
  9037  000844  6E06               	movwf	i2SetPin595@value+1,c
  9038  000846  0E00               	movlw	0
  9039  000848  6E05               	movwf	i2SetPin595@value,c
  9040  00084A  EC47  F012         	call	i2_SetPin595	;wreg free
  9041                           
  9042                           ;PDU.c: 71: SetPin595(3, 3, OFF);
  9043  00084E  0E00               	movlw	0
  9044  000850  6E02               	movwf	i2SetPin595@Reg+1,c
  9045  000852  0E03               	movlw	3
  9046  000854  6E01               	movwf	i2SetPin595@Reg,c
  9047  000856  0E00               	movlw	0
  9048  000858  6E04               	movwf	i2SetPin595@pin+1,c
  9049  00085A  0E03               	movlw	3
  9050  00085C  6E03               	movwf	i2SetPin595@pin,c
  9051  00085E  0E00               	movlw	0
  9052  000860  6E06               	movwf	i2SetPin595@value+1,c
  9053  000862  0E00               	movlw	0
  9054  000864  6E05               	movwf	i2SetPin595@value,c
  9055  000866  EC47  F012         	call	i2_SetPin595	;wreg free
  9056                           
  9057                           ;PDU.c: 72: SetPin595(3, 2, OFF);
  9058  00086A  0E00               	movlw	0
  9059  00086C  6E02               	movwf	i2SetPin595@Reg+1,c
  9060  00086E  0E03               	movlw	3
  9061  000870  6E01               	movwf	i2SetPin595@Reg,c
  9062  000872  0E00               	movlw	0
  9063  000874  6E04               	movwf	i2SetPin595@pin+1,c
  9064  000876  0E02               	movlw	2
  9065  000878  6E03               	movwf	i2SetPin595@pin,c
  9066  00087A  0E00               	movlw	0
  9067  00087C  6E06               	movwf	i2SetPin595@value+1,c
  9068  00087E  0E00               	movlw	0
  9069  000880  6E05               	movwf	i2SetPin595@value,c
  9070  000882  EC47  F012         	call	i2_SetPin595	;wreg free
  9071                           
  9072                           ;PDU.c: 73: Update();
  9073  000886  ECD4  F014         	call	i2_Update	;wreg free
  9074                           
  9075                           ;PDU.c: 74: CurrentADC[5] = ADC_GetConversion(U10Multisense);
  9076  00088A  0E17               	movlw	23
  9077  00088C  ECCF  F013         	call	_ADC_GetConversion
  9078  000890  C001  F076         	movff	?_ADC_GetConversion,_CurrentADC+10
  9079  000894  C002  F077         	movff	?_ADC_GetConversion+1,_CurrentADC+11
  9080                           
  9081                           ;PDU.c: 76: }
  9082  000898  0012               	return	
  9083  00089A                     i2l3348:
  9084                           
  9085                           ;PDU.c: 77: else if(gather == 2){
  9086  00089A  0E02               	movlw	2
  9087  00089C  180E               	xorwf	ReadCurrent@gather,w,c
  9088  00089E  A4D8               	btfss	status,2,c
  9089  0008A0  D088               	goto	i2l3354
  9090                           
  9091                           ;PDU.c: 79: SetPin595(1, 4, OFF);
  9092  0008A2  0E00               	movlw	0
  9093  0008A4  6E02               	movwf	i2SetPin595@Reg+1,c
  9094  0008A6  0E01               	movlw	1
  9095  0008A8  6E01               	movwf	i2SetPin595@Reg,c
  9096  0008AA  0E00               	movlw	0
  9097  0008AC  6E04               	movwf	i2SetPin595@pin+1,c
  9098  0008AE  0E04               	movlw	4
  9099  0008B0  6E03               	movwf	i2SetPin595@pin,c
  9100  0008B2  0E00               	movlw	0
  9101  0008B4  6E06               	movwf	i2SetPin595@value+1,c
  9102  0008B6  0E00               	movlw	0
  9103  0008B8  6E05               	movwf	i2SetPin595@value,c
  9104  0008BA  EC47  F012         	call	i2_SetPin595	;wreg free
  9105                           
  9106                           ;PDU.c: 80: SetPin595(1, 3, OFF);
  9107  0008BE  0E00               	movlw	0
  9108  0008C0  6E02               	movwf	i2SetPin595@Reg+1,c
  9109  0008C2  0E01               	movlw	1
  9110  0008C4  6E01               	movwf	i2SetPin595@Reg,c
  9111  0008C6  0E00               	movlw	0
  9112  0008C8  6E04               	movwf	i2SetPin595@pin+1,c
  9113  0008CA  0E03               	movlw	3
  9114  0008CC  6E03               	movwf	i2SetPin595@pin,c
  9115  0008CE  0E00               	movlw	0
  9116  0008D0  6E06               	movwf	i2SetPin595@value+1,c
  9117  0008D2  0E00               	movlw	0
  9118  0008D4  6E05               	movwf	i2SetPin595@value,c
  9119  0008D6  EC47  F012         	call	i2_SetPin595	;wreg free
  9120                           
  9121                           ;PDU.c: 81: SetPin595(1, 2, OFF);
  9122  0008DA  0E00               	movlw	0
  9123  0008DC  6E02               	movwf	i2SetPin595@Reg+1,c
  9124  0008DE  0E01               	movlw	1
  9125  0008E0  6E01               	movwf	i2SetPin595@Reg,c
  9126  0008E2  0E00               	movlw	0
  9127  0008E4  6E04               	movwf	i2SetPin595@pin+1,c
  9128  0008E6  0E02               	movlw	2
  9129  0008E8  6E03               	movwf	i2SetPin595@pin,c
  9130  0008EA  0E00               	movlw	0
  9131  0008EC  6E06               	movwf	i2SetPin595@value+1,c
  9132  0008EE  0E00               	movlw	0
  9133  0008F0  6E05               	movwf	i2SetPin595@value,c
  9134  0008F2  EC47  F012         	call	i2_SetPin595	;wreg free
  9135                           
  9136                           ;PDU.c: 82: SetPin595(2, 4, ON);
  9137  0008F6  0E00               	movlw	0
  9138  0008F8  6E02               	movwf	i2SetPin595@Reg+1,c
  9139  0008FA  0E02               	movlw	2
  9140  0008FC  6E01               	movwf	i2SetPin595@Reg,c
  9141  0008FE  0E00               	movlw	0
  9142  000900  6E04               	movwf	i2SetPin595@pin+1,c
  9143  000902  0E04               	movlw	4
  9144  000904  6E03               	movwf	i2SetPin595@pin,c
  9145  000906  0E00               	movlw	0
  9146  000908  6E06               	movwf	i2SetPin595@value+1,c
  9147  00090A  0E01               	movlw	1
  9148  00090C  6E05               	movwf	i2SetPin595@value,c
  9149  00090E  EC47  F012         	call	i2_SetPin595	;wreg free
  9150                           
  9151                           ;PDU.c: 83: SetPin595(2, 3, ON);
  9152  000912  0E00               	movlw	0
  9153  000914  6E02               	movwf	i2SetPin595@Reg+1,c
  9154  000916  0E02               	movlw	2
  9155  000918  6E01               	movwf	i2SetPin595@Reg,c
  9156  00091A  0E00               	movlw	0
  9157  00091C  6E04               	movwf	i2SetPin595@pin+1,c
  9158  00091E  0E03               	movlw	3
  9159  000920  6E03               	movwf	i2SetPin595@pin,c
  9160  000922  0E00               	movlw	0
  9161  000924  6E06               	movwf	i2SetPin595@value+1,c
  9162  000926  0E01               	movlw	1
  9163  000928  6E05               	movwf	i2SetPin595@value,c
  9164  00092A  EC47  F012         	call	i2_SetPin595	;wreg free
  9165                           
  9166                           ;PDU.c: 84: SetPin595(2, 2, OFF);
  9167  00092E  0E00               	movlw	0
  9168  000930  6E02               	movwf	i2SetPin595@Reg+1,c
  9169  000932  0E02               	movlw	2
  9170  000934  6E01               	movwf	i2SetPin595@Reg,c
  9171  000936  0E00               	movlw	0
  9172  000938  6E04               	movwf	i2SetPin595@pin+1,c
  9173  00093A  0E02               	movlw	2
  9174  00093C  6E03               	movwf	i2SetPin595@pin,c
  9175  00093E  0E00               	movlw	0
  9176  000940  6E06               	movwf	i2SetPin595@value+1,c
  9177  000942  0E00               	movlw	0
  9178  000944  6E05               	movwf	i2SetPin595@value,c
  9179  000946  EC47  F012         	call	i2_SetPin595	;wreg free
  9180                           
  9181                           ;PDU.c: 85: SetPin595(3, 4, OFF);
  9182  00094A  0E00               	movlw	0
  9183  00094C  6E02               	movwf	i2SetPin595@Reg+1,c
  9184  00094E  0E03               	movlw	3
  9185  000950  6E01               	movwf	i2SetPin595@Reg,c
  9186  000952  0E00               	movlw	0
  9187  000954  6E04               	movwf	i2SetPin595@pin+1,c
  9188  000956  0E04               	movlw	4
  9189  000958  6E03               	movwf	i2SetPin595@pin,c
  9190  00095A  0E00               	movlw	0
  9191  00095C  6E06               	movwf	i2SetPin595@value+1,c
  9192  00095E  0E00               	movlw	0
  9193  000960  6E05               	movwf	i2SetPin595@value,c
  9194  000962  EC47  F012         	call	i2_SetPin595	;wreg free
  9195                           
  9196                           ;PDU.c: 86: SetPin595(3, 3, OFF);
  9197  000966  0E00               	movlw	0
  9198  000968  6E02               	movwf	i2SetPin595@Reg+1,c
  9199  00096A  0E03               	movlw	3
  9200  00096C  6E01               	movwf	i2SetPin595@Reg,c
  9201  00096E  0E00               	movlw	0
  9202  000970  6E04               	movwf	i2SetPin595@pin+1,c
  9203  000972  0E03               	movlw	3
  9204  000974  6E03               	movwf	i2SetPin595@pin,c
  9205  000976  0E00               	movlw	0
  9206  000978  6E06               	movwf	i2SetPin595@value+1,c
  9207  00097A  0E00               	movlw	0
  9208  00097C  6E05               	movwf	i2SetPin595@value,c
  9209  00097E  EC47  F012         	call	i2_SetPin595	;wreg free
  9210                           
  9211                           ;PDU.c: 87: SetPin595(3, 2, OFF);
  9212  000982  0E00               	movlw	0
  9213  000984  6E02               	movwf	i2SetPin595@Reg+1,c
  9214  000986  0E03               	movlw	3
  9215  000988  6E01               	movwf	i2SetPin595@Reg,c
  9216  00098A  0E00               	movlw	0
  9217  00098C  6E04               	movwf	i2SetPin595@pin+1,c
  9218  00098E  0E02               	movlw	2
  9219  000990  6E03               	movwf	i2SetPin595@pin,c
  9220  000992  0E00               	movlw	0
  9221  000994  6E06               	movwf	i2SetPin595@value+1,c
  9222  000996  0E00               	movlw	0
  9223  000998  6E05               	movwf	i2SetPin595@value,c
  9224  00099A  EC47  F012         	call	i2_SetPin595	;wreg free
  9225                           
  9226                           ;PDU.c: 88: Update();
  9227  00099E  ECD4  F014         	call	i2_Update	;wreg free
  9228                           
  9229                           ;PDU.c: 89: CurrentADC[2] = ADC_GetConversion(U8Multisense);
  9230  0009A2  0E16               	movlw	22
  9231  0009A4  ECCF  F013         	call	_ADC_GetConversion
  9232  0009A8  C001  F070         	movff	?_ADC_GetConversion,_CurrentADC+4
  9233  0009AC  C002  F071         	movff	?_ADC_GetConversion+1,_CurrentADC+5
  9234                           
  9235                           ;PDU.c: 91: }
  9236  0009B0  0012               	return	
  9237  0009B2                     i2l3354:
  9238                           
  9239                           ;PDU.c: 92: else if(gather == 3){
  9240  0009B2  0E03               	movlw	3
  9241  0009B4  180E               	xorwf	ReadCurrent@gather,w,c
  9242  0009B6  A4D8               	btfss	status,2,c
  9243  0009B8  D088               	goto	i2l3360
  9244                           
  9245                           ;PDU.c: 94: SetPin595(1, 4, OFF);
  9246  0009BA  0E00               	movlw	0
  9247  0009BC  6E02               	movwf	i2SetPin595@Reg+1,c
  9248  0009BE  0E01               	movlw	1
  9249  0009C0  6E01               	movwf	i2SetPin595@Reg,c
  9250  0009C2  0E00               	movlw	0
  9251  0009C4  6E04               	movwf	i2SetPin595@pin+1,c
  9252  0009C6  0E04               	movlw	4
  9253  0009C8  6E03               	movwf	i2SetPin595@pin,c
  9254  0009CA  0E00               	movlw	0
  9255  0009CC  6E06               	movwf	i2SetPin595@value+1,c
  9256  0009CE  0E00               	movlw	0
  9257  0009D0  6E05               	movwf	i2SetPin595@value,c
  9258  0009D2  EC47  F012         	call	i2_SetPin595	;wreg free
  9259                           
  9260                           ;PDU.c: 95: SetPin595(1, 3, OFF);
  9261  0009D6  0E00               	movlw	0
  9262  0009D8  6E02               	movwf	i2SetPin595@Reg+1,c
  9263  0009DA  0E01               	movlw	1
  9264  0009DC  6E01               	movwf	i2SetPin595@Reg,c
  9265  0009DE  0E00               	movlw	0
  9266  0009E0  6E04               	movwf	i2SetPin595@pin+1,c
  9267  0009E2  0E03               	movlw	3
  9268  0009E4  6E03               	movwf	i2SetPin595@pin,c
  9269  0009E6  0E00               	movlw	0
  9270  0009E8  6E06               	movwf	i2SetPin595@value+1,c
  9271  0009EA  0E00               	movlw	0
  9272  0009EC  6E05               	movwf	i2SetPin595@value,c
  9273  0009EE  EC47  F012         	call	i2_SetPin595	;wreg free
  9274                           
  9275                           ;PDU.c: 96: SetPin595(1, 2, OFF);
  9276  0009F2  0E00               	movlw	0
  9277  0009F4  6E02               	movwf	i2SetPin595@Reg+1,c
  9278  0009F6  0E01               	movlw	1
  9279  0009F8  6E01               	movwf	i2SetPin595@Reg,c
  9280  0009FA  0E00               	movlw	0
  9281  0009FC  6E04               	movwf	i2SetPin595@pin+1,c
  9282  0009FE  0E02               	movlw	2
  9283  000A00  6E03               	movwf	i2SetPin595@pin,c
  9284  000A02  0E00               	movlw	0
  9285  000A04  6E06               	movwf	i2SetPin595@value+1,c
  9286  000A06  0E00               	movlw	0
  9287  000A08  6E05               	movwf	i2SetPin595@value,c
  9288  000A0A  EC47  F012         	call	i2_SetPin595	;wreg free
  9289                           
  9290                           ;PDU.c: 97: SetPin595(2, 4, OFF);
  9291  000A0E  0E00               	movlw	0
  9292  000A10  6E02               	movwf	i2SetPin595@Reg+1,c
  9293  000A12  0E02               	movlw	2
  9294  000A14  6E01               	movwf	i2SetPin595@Reg,c
  9295  000A16  0E00               	movlw	0
  9296  000A18  6E04               	movwf	i2SetPin595@pin+1,c
  9297  000A1A  0E04               	movlw	4
  9298  000A1C  6E03               	movwf	i2SetPin595@pin,c
  9299  000A1E  0E00               	movlw	0
  9300  000A20  6E06               	movwf	i2SetPin595@value+1,c
  9301  000A22  0E00               	movlw	0
  9302  000A24  6E05               	movwf	i2SetPin595@value,c
  9303  000A26  EC47  F012         	call	i2_SetPin595	;wreg free
  9304                           
  9305                           ;PDU.c: 98: SetPin595(2, 3, OFF);
  9306  000A2A  0E00               	movlw	0
  9307  000A2C  6E02               	movwf	i2SetPin595@Reg+1,c
  9308  000A2E  0E02               	movlw	2
  9309  000A30  6E01               	movwf	i2SetPin595@Reg,c
  9310  000A32  0E00               	movlw	0
  9311  000A34  6E04               	movwf	i2SetPin595@pin+1,c
  9312  000A36  0E03               	movlw	3
  9313  000A38  6E03               	movwf	i2SetPin595@pin,c
  9314  000A3A  0E00               	movlw	0
  9315  000A3C  6E06               	movwf	i2SetPin595@value+1,c
  9316  000A3E  0E00               	movlw	0
  9317  000A40  6E05               	movwf	i2SetPin595@value,c
  9318  000A42  EC47  F012         	call	i2_SetPin595	;wreg free
  9319                           
  9320                           ;PDU.c: 99: SetPin595(2, 2, OFF);
  9321  000A46  0E00               	movlw	0
  9322  000A48  6E02               	movwf	i2SetPin595@Reg+1,c
  9323  000A4A  0E02               	movlw	2
  9324  000A4C  6E01               	movwf	i2SetPin595@Reg,c
  9325  000A4E  0E00               	movlw	0
  9326  000A50  6E04               	movwf	i2SetPin595@pin+1,c
  9327  000A52  0E02               	movlw	2
  9328  000A54  6E03               	movwf	i2SetPin595@pin,c
  9329  000A56  0E00               	movlw	0
  9330  000A58  6E06               	movwf	i2SetPin595@value+1,c
  9331  000A5A  0E00               	movlw	0
  9332  000A5C  6E05               	movwf	i2SetPin595@value,c
  9333  000A5E  EC47  F012         	call	i2_SetPin595	;wreg free
  9334                           
  9335                           ;PDU.c: 100: SetPin595(3, 4, ON);
  9336  000A62  0E00               	movlw	0
  9337  000A64  6E02               	movwf	i2SetPin595@Reg+1,c
  9338  000A66  0E03               	movlw	3
  9339  000A68  6E01               	movwf	i2SetPin595@Reg,c
  9340  000A6A  0E00               	movlw	0
  9341  000A6C  6E04               	movwf	i2SetPin595@pin+1,c
  9342  000A6E  0E04               	movlw	4
  9343  000A70  6E03               	movwf	i2SetPin595@pin,c
  9344  000A72  0E00               	movlw	0
  9345  000A74  6E06               	movwf	i2SetPin595@value+1,c
  9346  000A76  0E01               	movlw	1
  9347  000A78  6E05               	movwf	i2SetPin595@value,c
  9348  000A7A  EC47  F012         	call	i2_SetPin595	;wreg free
  9349                           
  9350                           ;PDU.c: 101: SetPin595(3, 3, OFF);
  9351  000A7E  0E00               	movlw	0
  9352  000A80  6E02               	movwf	i2SetPin595@Reg+1,c
  9353  000A82  0E03               	movlw	3
  9354  000A84  6E01               	movwf	i2SetPin595@Reg,c
  9355  000A86  0E00               	movlw	0
  9356  000A88  6E04               	movwf	i2SetPin595@pin+1,c
  9357  000A8A  0E03               	movlw	3
  9358  000A8C  6E03               	movwf	i2SetPin595@pin,c
  9359  000A8E  0E00               	movlw	0
  9360  000A90  6E06               	movwf	i2SetPin595@value+1,c
  9361  000A92  0E00               	movlw	0
  9362  000A94  6E05               	movwf	i2SetPin595@value,c
  9363  000A96  EC47  F012         	call	i2_SetPin595	;wreg free
  9364                           
  9365                           ;PDU.c: 102: SetPin595(3, 2, OFF);
  9366  000A9A  0E00               	movlw	0
  9367  000A9C  6E02               	movwf	i2SetPin595@Reg+1,c
  9368  000A9E  0E03               	movlw	3
  9369  000AA0  6E01               	movwf	i2SetPin595@Reg,c
  9370  000AA2  0E00               	movlw	0
  9371  000AA4  6E04               	movwf	i2SetPin595@pin+1,c
  9372  000AA6  0E02               	movlw	2
  9373  000AA8  6E03               	movwf	i2SetPin595@pin,c
  9374  000AAA  0E00               	movlw	0
  9375  000AAC  6E06               	movwf	i2SetPin595@value+1,c
  9376  000AAE  0E00               	movlw	0
  9377  000AB0  6E05               	movwf	i2SetPin595@value,c
  9378  000AB2  EC47  F012         	call	i2_SetPin595	;wreg free
  9379                           
  9380                           ;PDU.c: 103: Update();
  9381  000AB6  ECD4  F014         	call	i2_Update	;wreg free
  9382                           
  9383                           ;PDU.c: 104: CurrentADC[1] = ADC_GetConversion(U5Multisense);
  9384  000ABA  0E10               	movlw	16
  9385  000ABC  ECCF  F013         	call	_ADC_GetConversion
  9386  000AC0  C001  F06E         	movff	?_ADC_GetConversion,_CurrentADC+2
  9387  000AC4  C002  F06F         	movff	?_ADC_GetConversion+1,_CurrentADC+3
  9388                           
  9389                           ;PDU.c: 106: }
  9390  000AC8  0012               	return	
  9391  000ACA                     i2l3360:
  9392                           
  9393                           ;PDU.c: 107: else if(gather == 4){
  9394  000ACA  0E04               	movlw	4
  9395  000ACC  180E               	xorwf	ReadCurrent@gather,w,c
  9396  000ACE  A4D8               	btfss	status,2,c
  9397  000AD0  D088               	goto	i2l3366
  9398                           
  9399                           ;PDU.c: 109: SetPin595(1, 4, ON);
  9400  000AD2  0E00               	movlw	0
  9401  000AD4  6E02               	movwf	i2SetPin595@Reg+1,c
  9402  000AD6  0E01               	movlw	1
  9403  000AD8  6E01               	movwf	i2SetPin595@Reg,c
  9404  000ADA  0E00               	movlw	0
  9405  000ADC  6E04               	movwf	i2SetPin595@pin+1,c
  9406  000ADE  0E04               	movlw	4
  9407  000AE0  6E03               	movwf	i2SetPin595@pin,c
  9408  000AE2  0E00               	movlw	0
  9409  000AE4  6E06               	movwf	i2SetPin595@value+1,c
  9410  000AE6  0E01               	movlw	1
  9411  000AE8  6E05               	movwf	i2SetPin595@value,c
  9412  000AEA  EC47  F012         	call	i2_SetPin595	;wreg free
  9413                           
  9414                           ;PDU.c: 110: SetPin595(1, 3, ON);
  9415  000AEE  0E00               	movlw	0
  9416  000AF0  6E02               	movwf	i2SetPin595@Reg+1,c
  9417  000AF2  0E01               	movlw	1
  9418  000AF4  6E01               	movwf	i2SetPin595@Reg,c
  9419  000AF6  0E00               	movlw	0
  9420  000AF8  6E04               	movwf	i2SetPin595@pin+1,c
  9421  000AFA  0E03               	movlw	3
  9422  000AFC  6E03               	movwf	i2SetPin595@pin,c
  9423  000AFE  0E00               	movlw	0
  9424  000B00  6E06               	movwf	i2SetPin595@value+1,c
  9425  000B02  0E01               	movlw	1
  9426  000B04  6E05               	movwf	i2SetPin595@value,c
  9427  000B06  EC47  F012         	call	i2_SetPin595	;wreg free
  9428                           
  9429                           ;PDU.c: 111: SetPin595(1, 2, OFF);
  9430  000B0A  0E00               	movlw	0
  9431  000B0C  6E02               	movwf	i2SetPin595@Reg+1,c
  9432  000B0E  0E01               	movlw	1
  9433  000B10  6E01               	movwf	i2SetPin595@Reg,c
  9434  000B12  0E00               	movlw	0
  9435  000B14  6E04               	movwf	i2SetPin595@pin+1,c
  9436  000B16  0E02               	movlw	2
  9437  000B18  6E03               	movwf	i2SetPin595@pin,c
  9438  000B1A  0E00               	movlw	0
  9439  000B1C  6E06               	movwf	i2SetPin595@value+1,c
  9440  000B1E  0E00               	movlw	0
  9441  000B20  6E05               	movwf	i2SetPin595@value,c
  9442  000B22  EC47  F012         	call	i2_SetPin595	;wreg free
  9443                           
  9444                           ;PDU.c: 112: SetPin595(2, 4, OFF);
  9445  000B26  0E00               	movlw	0
  9446  000B28  6E02               	movwf	i2SetPin595@Reg+1,c
  9447  000B2A  0E02               	movlw	2
  9448  000B2C  6E01               	movwf	i2SetPin595@Reg,c
  9449  000B2E  0E00               	movlw	0
  9450  000B30  6E04               	movwf	i2SetPin595@pin+1,c
  9451  000B32  0E04               	movlw	4
  9452  000B34  6E03               	movwf	i2SetPin595@pin,c
  9453  000B36  0E00               	movlw	0
  9454  000B38  6E06               	movwf	i2SetPin595@value+1,c
  9455  000B3A  0E00               	movlw	0
  9456  000B3C  6E05               	movwf	i2SetPin595@value,c
  9457  000B3E  EC47  F012         	call	i2_SetPin595	;wreg free
  9458                           
  9459                           ;PDU.c: 113: SetPin595(2, 3, OFF);
  9460  000B42  0E00               	movlw	0
  9461  000B44  6E02               	movwf	i2SetPin595@Reg+1,c
  9462  000B46  0E02               	movlw	2
  9463  000B48  6E01               	movwf	i2SetPin595@Reg,c
  9464  000B4A  0E00               	movlw	0
  9465  000B4C  6E04               	movwf	i2SetPin595@pin+1,c
  9466  000B4E  0E03               	movlw	3
  9467  000B50  6E03               	movwf	i2SetPin595@pin,c
  9468  000B52  0E00               	movlw	0
  9469  000B54  6E06               	movwf	i2SetPin595@value+1,c
  9470  000B56  0E00               	movlw	0
  9471  000B58  6E05               	movwf	i2SetPin595@value,c
  9472  000B5A  EC47  F012         	call	i2_SetPin595	;wreg free
  9473                           
  9474                           ;PDU.c: 114: SetPin595(2, 2, OFF);
  9475  000B5E  0E00               	movlw	0
  9476  000B60  6E02               	movwf	i2SetPin595@Reg+1,c
  9477  000B62  0E02               	movlw	2
  9478  000B64  6E01               	movwf	i2SetPin595@Reg,c
  9479  000B66  0E00               	movlw	0
  9480  000B68  6E04               	movwf	i2SetPin595@pin+1,c
  9481  000B6A  0E02               	movlw	2
  9482  000B6C  6E03               	movwf	i2SetPin595@pin,c
  9483  000B6E  0E00               	movlw	0
  9484  000B70  6E06               	movwf	i2SetPin595@value+1,c
  9485  000B72  0E00               	movlw	0
  9486  000B74  6E05               	movwf	i2SetPin595@value,c
  9487  000B76  EC47  F012         	call	i2_SetPin595	;wreg free
  9488                           
  9489                           ;PDU.c: 115: SetPin595(3, 4, OFF);
  9490  000B7A  0E00               	movlw	0
  9491  000B7C  6E02               	movwf	i2SetPin595@Reg+1,c
  9492  000B7E  0E03               	movlw	3
  9493  000B80  6E01               	movwf	i2SetPin595@Reg,c
  9494  000B82  0E00               	movlw	0
  9495  000B84  6E04               	movwf	i2SetPin595@pin+1,c
  9496  000B86  0E04               	movlw	4
  9497  000B88  6E03               	movwf	i2SetPin595@pin,c
  9498  000B8A  0E00               	movlw	0
  9499  000B8C  6E06               	movwf	i2SetPin595@value+1,c
  9500  000B8E  0E00               	movlw	0
  9501  000B90  6E05               	movwf	i2SetPin595@value,c
  9502  000B92  EC47  F012         	call	i2_SetPin595	;wreg free
  9503                           
  9504                           ;PDU.c: 116: SetPin595(3, 3, OFF);
  9505  000B96  0E00               	movlw	0
  9506  000B98  6E02               	movwf	i2SetPin595@Reg+1,c
  9507  000B9A  0E03               	movlw	3
  9508  000B9C  6E01               	movwf	i2SetPin595@Reg,c
  9509  000B9E  0E00               	movlw	0
  9510  000BA0  6E04               	movwf	i2SetPin595@pin+1,c
  9511  000BA2  0E03               	movlw	3
  9512  000BA4  6E03               	movwf	i2SetPin595@pin,c
  9513  000BA6  0E00               	movlw	0
  9514  000BA8  6E06               	movwf	i2SetPin595@value+1,c
  9515  000BAA  0E00               	movlw	0
  9516  000BAC  6E05               	movwf	i2SetPin595@value,c
  9517  000BAE  EC47  F012         	call	i2_SetPin595	;wreg free
  9518                           
  9519                           ;PDU.c: 117: SetPin595(3, 2, OFF);
  9520  000BB2  0E00               	movlw	0
  9521  000BB4  6E02               	movwf	i2SetPin595@Reg+1,c
  9522  000BB6  0E03               	movlw	3
  9523  000BB8  6E01               	movwf	i2SetPin595@Reg,c
  9524  000BBA  0E00               	movlw	0
  9525  000BBC  6E04               	movwf	i2SetPin595@pin+1,c
  9526  000BBE  0E02               	movlw	2
  9527  000BC0  6E03               	movwf	i2SetPin595@pin,c
  9528  000BC2  0E00               	movlw	0
  9529  000BC4  6E06               	movwf	i2SetPin595@value+1,c
  9530  000BC6  0E00               	movlw	0
  9531  000BC8  6E05               	movwf	i2SetPin595@value,c
  9532  000BCA  EC47  F012         	call	i2_SetPin595	;wreg free
  9533                           
  9534                           ;PDU.c: 118: Update();
  9535  000BCE  ECD4  F014         	call	i2_Update	;wreg free
  9536                           
  9537                           ;PDU.c: 119: CurrentADC[4] = ADC_GetConversion(U10Multisense);
  9538  000BD2  0E17               	movlw	23
  9539  000BD4  ECCF  F013         	call	_ADC_GetConversion
  9540  000BD8  C001  F074         	movff	?_ADC_GetConversion,_CurrentADC+8
  9541  000BDC  C002  F075         	movff	?_ADC_GetConversion+1,_CurrentADC+9
  9542                           
  9543                           ;PDU.c: 121: }
  9544  000BE0  0012               	return	
  9545  000BE2                     i2l3366:
  9546                           
  9547                           ;PDU.c: 122: else if(gather == 5){
  9548  000BE2  0E05               	movlw	5
  9549  000BE4  180E               	xorwf	ReadCurrent@gather,w,c
  9550  000BE6  A4D8               	btfss	status,2,c
  9551  000BE8  D088               	goto	i2l3372
  9552                           
  9553                           ;PDU.c: 124: SetPin595(1, 4, OFF);
  9554  000BEA  0E00               	movlw	0
  9555  000BEC  6E02               	movwf	i2SetPin595@Reg+1,c
  9556  000BEE  0E01               	movlw	1
  9557  000BF0  6E01               	movwf	i2SetPin595@Reg,c
  9558  000BF2  0E00               	movlw	0
  9559  000BF4  6E04               	movwf	i2SetPin595@pin+1,c
  9560  000BF6  0E04               	movlw	4
  9561  000BF8  6E03               	movwf	i2SetPin595@pin,c
  9562  000BFA  0E00               	movlw	0
  9563  000BFC  6E06               	movwf	i2SetPin595@value+1,c
  9564  000BFE  0E00               	movlw	0
  9565  000C00  6E05               	movwf	i2SetPin595@value,c
  9566  000C02  EC47  F012         	call	i2_SetPin595	;wreg free
  9567                           
  9568                           ;PDU.c: 125: SetPin595(1, 3, OFF);
  9569  000C06  0E00               	movlw	0
  9570  000C08  6E02               	movwf	i2SetPin595@Reg+1,c
  9571  000C0A  0E01               	movlw	1
  9572  000C0C  6E01               	movwf	i2SetPin595@Reg,c
  9573  000C0E  0E00               	movlw	0
  9574  000C10  6E04               	movwf	i2SetPin595@pin+1,c
  9575  000C12  0E03               	movlw	3
  9576  000C14  6E03               	movwf	i2SetPin595@pin,c
  9577  000C16  0E00               	movlw	0
  9578  000C18  6E06               	movwf	i2SetPin595@value+1,c
  9579  000C1A  0E00               	movlw	0
  9580  000C1C  6E05               	movwf	i2SetPin595@value,c
  9581  000C1E  EC47  F012         	call	i2_SetPin595	;wreg free
  9582                           
  9583                           ;PDU.c: 126: SetPin595(1, 2, OFF);
  9584  000C22  0E00               	movlw	0
  9585  000C24  6E02               	movwf	i2SetPin595@Reg+1,c
  9586  000C26  0E01               	movlw	1
  9587  000C28  6E01               	movwf	i2SetPin595@Reg,c
  9588  000C2A  0E00               	movlw	0
  9589  000C2C  6E04               	movwf	i2SetPin595@pin+1,c
  9590  000C2E  0E02               	movlw	2
  9591  000C30  6E03               	movwf	i2SetPin595@pin,c
  9592  000C32  0E00               	movlw	0
  9593  000C34  6E06               	movwf	i2SetPin595@value+1,c
  9594  000C36  0E00               	movlw	0
  9595  000C38  6E05               	movwf	i2SetPin595@value,c
  9596  000C3A  EC47  F012         	call	i2_SetPin595	;wreg free
  9597                           
  9598                           ;PDU.c: 127: SetPin595(2, 4, ON);
  9599  000C3E  0E00               	movlw	0
  9600  000C40  6E02               	movwf	i2SetPin595@Reg+1,c
  9601  000C42  0E02               	movlw	2
  9602  000C44  6E01               	movwf	i2SetPin595@Reg,c
  9603  000C46  0E00               	movlw	0
  9604  000C48  6E04               	movwf	i2SetPin595@pin+1,c
  9605  000C4A  0E04               	movlw	4
  9606  000C4C  6E03               	movwf	i2SetPin595@pin,c
  9607  000C4E  0E00               	movlw	0
  9608  000C50  6E06               	movwf	i2SetPin595@value+1,c
  9609  000C52  0E01               	movlw	1
  9610  000C54  6E05               	movwf	i2SetPin595@value,c
  9611  000C56  EC47  F012         	call	i2_SetPin595	;wreg free
  9612                           
  9613                           ;PDU.c: 128: SetPin595(2, 3, OFF);
  9614  000C5A  0E00               	movlw	0
  9615  000C5C  6E02               	movwf	i2SetPin595@Reg+1,c
  9616  000C5E  0E02               	movlw	2
  9617  000C60  6E01               	movwf	i2SetPin595@Reg,c
  9618  000C62  0E00               	movlw	0
  9619  000C64  6E04               	movwf	i2SetPin595@pin+1,c
  9620  000C66  0E03               	movlw	3
  9621  000C68  6E03               	movwf	i2SetPin595@pin,c
  9622  000C6A  0E00               	movlw	0
  9623  000C6C  6E06               	movwf	i2SetPin595@value+1,c
  9624  000C6E  0E00               	movlw	0
  9625  000C70  6E05               	movwf	i2SetPin595@value,c
  9626  000C72  EC47  F012         	call	i2_SetPin595	;wreg free
  9627                           
  9628                           ;PDU.c: 129: SetPin595(2, 2, OFF);
  9629  000C76  0E00               	movlw	0
  9630  000C78  6E02               	movwf	i2SetPin595@Reg+1,c
  9631  000C7A  0E02               	movlw	2
  9632  000C7C  6E01               	movwf	i2SetPin595@Reg,c
  9633  000C7E  0E00               	movlw	0
  9634  000C80  6E04               	movwf	i2SetPin595@pin+1,c
  9635  000C82  0E02               	movlw	2
  9636  000C84  6E03               	movwf	i2SetPin595@pin,c
  9637  000C86  0E00               	movlw	0
  9638  000C88  6E06               	movwf	i2SetPin595@value+1,c
  9639  000C8A  0E00               	movlw	0
  9640  000C8C  6E05               	movwf	i2SetPin595@value,c
  9641  000C8E  EC47  F012         	call	i2_SetPin595	;wreg free
  9642                           
  9643                           ;PDU.c: 130: SetPin595(3, 4, OFF);
  9644  000C92  0E00               	movlw	0
  9645  000C94  6E02               	movwf	i2SetPin595@Reg+1,c
  9646  000C96  0E03               	movlw	3
  9647  000C98  6E01               	movwf	i2SetPin595@Reg,c
  9648  000C9A  0E00               	movlw	0
  9649  000C9C  6E04               	movwf	i2SetPin595@pin+1,c
  9650  000C9E  0E04               	movlw	4
  9651  000CA0  6E03               	movwf	i2SetPin595@pin,c
  9652  000CA2  0E00               	movlw	0
  9653  000CA4  6E06               	movwf	i2SetPin595@value+1,c
  9654  000CA6  0E00               	movlw	0
  9655  000CA8  6E05               	movwf	i2SetPin595@value,c
  9656  000CAA  EC47  F012         	call	i2_SetPin595	;wreg free
  9657                           
  9658                           ;PDU.c: 131: SetPin595(3, 3, OFF);
  9659  000CAE  0E00               	movlw	0
  9660  000CB0  6E02               	movwf	i2SetPin595@Reg+1,c
  9661  000CB2  0E03               	movlw	3
  9662  000CB4  6E01               	movwf	i2SetPin595@Reg,c
  9663  000CB6  0E00               	movlw	0
  9664  000CB8  6E04               	movwf	i2SetPin595@pin+1,c
  9665  000CBA  0E03               	movlw	3
  9666  000CBC  6E03               	movwf	i2SetPin595@pin,c
  9667  000CBE  0E00               	movlw	0
  9668  000CC0  6E06               	movwf	i2SetPin595@value+1,c
  9669  000CC2  0E00               	movlw	0
  9670  000CC4  6E05               	movwf	i2SetPin595@value,c
  9671  000CC6  EC47  F012         	call	i2_SetPin595	;wreg free
  9672                           
  9673                           ;PDU.c: 132: SetPin595(3, 2, OFF);
  9674  000CCA  0E00               	movlw	0
  9675  000CCC  6E02               	movwf	i2SetPin595@Reg+1,c
  9676  000CCE  0E03               	movlw	3
  9677  000CD0  6E01               	movwf	i2SetPin595@Reg,c
  9678  000CD2  0E00               	movlw	0
  9679  000CD4  6E04               	movwf	i2SetPin595@pin+1,c
  9680  000CD6  0E02               	movlw	2
  9681  000CD8  6E03               	movwf	i2SetPin595@pin,c
  9682  000CDA  0E00               	movlw	0
  9683  000CDC  6E06               	movwf	i2SetPin595@value+1,c
  9684  000CDE  0E00               	movlw	0
  9685  000CE0  6E05               	movwf	i2SetPin595@value,c
  9686  000CE2  EC47  F012         	call	i2_SetPin595	;wreg free
  9687                           
  9688                           ;PDU.c: 133: Update();
  9689  000CE6  ECD4  F014         	call	i2_Update	;wreg free
  9690                           
  9691                           ;PDU.c: 134: CurrentADC[3] = ADC_GetConversion(U8Multisense);
  9692  000CEA  0E16               	movlw	22
  9693  000CEC  ECCF  F013         	call	_ADC_GetConversion
  9694  000CF0  C001  F072         	movff	?_ADC_GetConversion,_CurrentADC+6
  9695  000CF4  C002  F073         	movff	?_ADC_GetConversion+1,_CurrentADC+7
  9696                           
  9697                           ;PDU.c: 136: }
  9698  000CF8  0012               	return	
  9699  000CFA                     i2l3372:
  9700                           
  9701                           ;PDU.c: 137: else if(gather == 6){
  9702  000CFA  0E06               	movlw	6
  9703  000CFC  180E               	xorwf	ReadCurrent@gather,w,c
  9704  000CFE  A4D8               	btfss	status,2,c
  9705  000D00  0012               	return	
  9706                           
  9707                           ;PDU.c: 139: SetPin595(1, 4, OFF);
  9708  000D02  0E00               	movlw	0
  9709  000D04  6E02               	movwf	i2SetPin595@Reg+1,c
  9710  000D06  0E01               	movlw	1
  9711  000D08  6E01               	movwf	i2SetPin595@Reg,c
  9712  000D0A  0E00               	movlw	0
  9713  000D0C  6E04               	movwf	i2SetPin595@pin+1,c
  9714  000D0E  0E04               	movlw	4
  9715  000D10  6E03               	movwf	i2SetPin595@pin,c
  9716  000D12  0E00               	movlw	0
  9717  000D14  6E06               	movwf	i2SetPin595@value+1,c
  9718  000D16  0E00               	movlw	0
  9719  000D18  6E05               	movwf	i2SetPin595@value,c
  9720  000D1A  EC47  F012         	call	i2_SetPin595	;wreg free
  9721                           
  9722                           ;PDU.c: 140: SetPin595(1, 3, OFF);
  9723  000D1E  0E00               	movlw	0
  9724  000D20  6E02               	movwf	i2SetPin595@Reg+1,c
  9725  000D22  0E01               	movlw	1
  9726  000D24  6E01               	movwf	i2SetPin595@Reg,c
  9727  000D26  0E00               	movlw	0
  9728  000D28  6E04               	movwf	i2SetPin595@pin+1,c
  9729  000D2A  0E03               	movlw	3
  9730  000D2C  6E03               	movwf	i2SetPin595@pin,c
  9731  000D2E  0E00               	movlw	0
  9732  000D30  6E06               	movwf	i2SetPin595@value+1,c
  9733  000D32  0E00               	movlw	0
  9734  000D34  6E05               	movwf	i2SetPin595@value,c
  9735  000D36  EC47  F012         	call	i2_SetPin595	;wreg free
  9736                           
  9737                           ;PDU.c: 141: SetPin595(1, 2, OFF);
  9738  000D3A  0E00               	movlw	0
  9739  000D3C  6E02               	movwf	i2SetPin595@Reg+1,c
  9740  000D3E  0E01               	movlw	1
  9741  000D40  6E01               	movwf	i2SetPin595@Reg,c
  9742  000D42  0E00               	movlw	0
  9743  000D44  6E04               	movwf	i2SetPin595@pin+1,c
  9744  000D46  0E02               	movlw	2
  9745  000D48  6E03               	movwf	i2SetPin595@pin,c
  9746  000D4A  0E00               	movlw	0
  9747  000D4C  6E06               	movwf	i2SetPin595@value+1,c
  9748  000D4E  0E00               	movlw	0
  9749  000D50  6E05               	movwf	i2SetPin595@value,c
  9750  000D52  EC47  F012         	call	i2_SetPin595	;wreg free
  9751                           
  9752                           ;PDU.c: 142: SetPin595(2, 4, OFF);
  9753  000D56  0E00               	movlw	0
  9754  000D58  6E02               	movwf	i2SetPin595@Reg+1,c
  9755  000D5A  0E02               	movlw	2
  9756  000D5C  6E01               	movwf	i2SetPin595@Reg,c
  9757  000D5E  0E00               	movlw	0
  9758  000D60  6E04               	movwf	i2SetPin595@pin+1,c
  9759  000D62  0E04               	movlw	4
  9760  000D64  6E03               	movwf	i2SetPin595@pin,c
  9761  000D66  0E00               	movlw	0
  9762  000D68  6E06               	movwf	i2SetPin595@value+1,c
  9763  000D6A  0E00               	movlw	0
  9764  000D6C  6E05               	movwf	i2SetPin595@value,c
  9765  000D6E  EC47  F012         	call	i2_SetPin595	;wreg free
  9766                           
  9767                           ;PDU.c: 143: SetPin595(2, 3, OFF);
  9768  000D72  0E00               	movlw	0
  9769  000D74  6E02               	movwf	i2SetPin595@Reg+1,c
  9770  000D76  0E02               	movlw	2
  9771  000D78  6E01               	movwf	i2SetPin595@Reg,c
  9772  000D7A  0E00               	movlw	0
  9773  000D7C  6E04               	movwf	i2SetPin595@pin+1,c
  9774  000D7E  0E03               	movlw	3
  9775  000D80  6E03               	movwf	i2SetPin595@pin,c
  9776  000D82  0E00               	movlw	0
  9777  000D84  6E06               	movwf	i2SetPin595@value+1,c
  9778  000D86  0E00               	movlw	0
  9779  000D88  6E05               	movwf	i2SetPin595@value,c
  9780  000D8A  EC47  F012         	call	i2_SetPin595	;wreg free
  9781                           
  9782                           ;PDU.c: 144: SetPin595(2, 2, OFF);
  9783  000D8E  0E00               	movlw	0
  9784  000D90  6E02               	movwf	i2SetPin595@Reg+1,c
  9785  000D92  0E02               	movlw	2
  9786  000D94  6E01               	movwf	i2SetPin595@Reg,c
  9787  000D96  0E00               	movlw	0
  9788  000D98  6E04               	movwf	i2SetPin595@pin+1,c
  9789  000D9A  0E02               	movlw	2
  9790  000D9C  6E03               	movwf	i2SetPin595@pin,c
  9791  000D9E  0E00               	movlw	0
  9792  000DA0  6E06               	movwf	i2SetPin595@value+1,c
  9793  000DA2  0E00               	movlw	0
  9794  000DA4  6E05               	movwf	i2SetPin595@value,c
  9795  000DA6  EC47  F012         	call	i2_SetPin595	;wreg free
  9796                           
  9797                           ;PDU.c: 145: SetPin595(3, 4, ON);
  9798  000DAA  0E00               	movlw	0
  9799  000DAC  6E02               	movwf	i2SetPin595@Reg+1,c
  9800  000DAE  0E03               	movlw	3
  9801  000DB0  6E01               	movwf	i2SetPin595@Reg,c
  9802  000DB2  0E00               	movlw	0
  9803  000DB4  6E04               	movwf	i2SetPin595@pin+1,c
  9804  000DB6  0E04               	movlw	4
  9805  000DB8  6E03               	movwf	i2SetPin595@pin,c
  9806  000DBA  0E00               	movlw	0
  9807  000DBC  6E06               	movwf	i2SetPin595@value+1,c
  9808  000DBE  0E01               	movlw	1
  9809  000DC0  6E05               	movwf	i2SetPin595@value,c
  9810  000DC2  EC47  F012         	call	i2_SetPin595	;wreg free
  9811                           
  9812                           ;PDU.c: 146: SetPin595(3, 3, ON);
  9813  000DC6  0E00               	movlw	0
  9814  000DC8  6E02               	movwf	i2SetPin595@Reg+1,c
  9815  000DCA  0E03               	movlw	3
  9816  000DCC  6E01               	movwf	i2SetPin595@Reg,c
  9817  000DCE  0E00               	movlw	0
  9818  000DD0  6E04               	movwf	i2SetPin595@pin+1,c
  9819  000DD2  0E03               	movlw	3
  9820  000DD4  6E03               	movwf	i2SetPin595@pin,c
  9821  000DD6  0E00               	movlw	0
  9822  000DD8  6E06               	movwf	i2SetPin595@value+1,c
  9823  000DDA  0E01               	movlw	1
  9824  000DDC  6E05               	movwf	i2SetPin595@value,c
  9825  000DDE  EC47  F012         	call	i2_SetPin595	;wreg free
  9826                           
  9827                           ;PDU.c: 147: SetPin595(3, 2, OFF);
  9828  000DE2  0E00               	movlw	0
  9829  000DE4  6E02               	movwf	i2SetPin595@Reg+1,c
  9830  000DE6  0E03               	movlw	3
  9831  000DE8  6E01               	movwf	i2SetPin595@Reg,c
  9832  000DEA  0E00               	movlw	0
  9833  000DEC  6E04               	movwf	i2SetPin595@pin+1,c
  9834  000DEE  0E02               	movlw	2
  9835  000DF0  6E03               	movwf	i2SetPin595@pin,c
  9836  000DF2  0E00               	movlw	0
  9837  000DF4  6E06               	movwf	i2SetPin595@value+1,c
  9838  000DF6  0E00               	movlw	0
  9839  000DF8  6E05               	movwf	i2SetPin595@value,c
  9840  000DFA  EC47  F012         	call	i2_SetPin595	;wreg free
  9841                           
  9842                           ;PDU.c: 148: Update();
  9843  000DFE  ECD4  F014         	call	i2_Update	;wreg free
  9844                           
  9845                           ;PDU.c: 149: CurrentADC[0] = ADC_GetConversion(U5Multisense);
  9846  000E02  0E10               	movlw	16
  9847  000E04  ECCF  F013         	call	_ADC_GetConversion
  9848  000E08  C001  F06C         	movff	?_ADC_GetConversion,_CurrentADC
  9849  000E0C  C002  F06D         	movff	?_ADC_GetConversion+1,_CurrentADC+1
  9850  000E10  0012               	return	
  9851  000E12                     __end_of_ReadCurrent:
  9852                           	opt stack 0
  9853                           tosu	equ	0xFFF
  9854                           tosh	equ	0xFFE
  9855                           tosl	equ	0xFFD
  9856                           pclatu	equ	0xFFB
  9857                           pclath	equ	0xFFA
  9858                           tblptru	equ	0xFF8
  9859                           tblptrh	equ	0xFF7
  9860                           tblptrl	equ	0xFF6
  9861                           tablat	equ	0xFF5
  9862                           prodh	equ	0xFF4
  9863                           prodl	equ	0xFF3
  9864                           intcon	equ	0xFF2
  9865                           intcon2	equ	0xFF1
  9866                           postinc0	equ	0xFEE
  9867                           fsr0h	equ	0xFEA
  9868                           fsr0l	equ	0xFE9
  9869                           wreg	equ	0xFE8
  9870                           fsr1h	equ	0xFE2
  9871                           fsr1l	equ	0xFE1
  9872                           indf2	equ	0xFDF
  9873                           postinc2	equ	0xFDE
  9874                           postdec2	equ	0xFDD
  9875                           plusw2	equ	0xFDB
  9876                           fsr2h	equ	0xFDA
  9877                           fsr2l	equ	0xFD9
  9878                           status	equ	0xFD8
  9879                           
  9880 ;; *************** function i2_Update *****************
  9881 ;; Defined at:
  9882 ;;		line 209 in file "PDU.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;		None
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;		None
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9896 ;;      Params:         0       0       0       0       0       0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0
  9899 ;;      Totals:         0       0       0       0       0       0       0
  9900 ;;Total ram usage:        0 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    2
  9903 ;; This function calls:
  9904 ;;		i2_writeRegisters
  9905 ;; This function is called by:
  9906 ;;		_ReadCurrent
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           	psect	text54
  9911  0029A8                     __ptext54:
  9912                           	opt stack 0
  9913  0029A8                     i2_Update:
  9914                           	opt stack 19
  9915                           
  9916                           ;PDU.c: 210: writeRegisters();
  9917                           
  9918                           ;incstack = 0
  9919  0029A8  ECB6  F00F         	call	i2_writeRegisters	;wreg free
  9920  0029AC  0012               	return		;funcret
  9921  0029AE                     __end_ofi2_Update:
  9922                           	opt stack 0
  9923                           tosu	equ	0xFFF
  9924                           tosh	equ	0xFFE
  9925                           tosl	equ	0xFFD
  9926                           pclatu	equ	0xFFB
  9927                           pclath	equ	0xFFA
  9928                           tblptru	equ	0xFF8
  9929                           tblptrh	equ	0xFF7
  9930                           tblptrl	equ	0xFF6
  9931                           tablat	equ	0xFF5
  9932                           prodh	equ	0xFF4
  9933                           prodl	equ	0xFF3
  9934                           intcon	equ	0xFF2
  9935                           intcon2	equ	0xFF1
  9936                           postinc0	equ	0xFEE
  9937                           fsr0h	equ	0xFEA
  9938                           fsr0l	equ	0xFE9
  9939                           wreg	equ	0xFE8
  9940                           fsr1h	equ	0xFE2
  9941                           fsr1l	equ	0xFE1
  9942                           indf2	equ	0xFDF
  9943                           postinc2	equ	0xFDE
  9944                           postdec2	equ	0xFDD
  9945                           plusw2	equ	0xFDB
  9946                           fsr2h	equ	0xFDA
  9947                           fsr2l	equ	0xFD9
  9948                           status	equ	0xFD8
  9949                           
  9950 ;; *************** function i2_writeRegisters *****************
  9951 ;; Defined at:
  9952 ;;		line 50 in file "Shift595.c"
  9953 ;; Parameters:    Size  Location     Type
  9954 ;;		None
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;  writeRegiste    2   11[COMRAM] int 
  9957 ;;  writeRegiste    2    9[COMRAM] int 
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  1    wreg      void 
  9960 ;; Registers used:
  9961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9967 ;;      Params:         0       0       0       0       0       0       0
  9968 ;;      Locals:         4       0       0       0       0       0       0
  9969 ;;      Temps:          0       0       0       0       0       0       0
  9970 ;;      Totals:         4       0       0       0       0       0       0
  9971 ;;Total ram usage:        4 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; Hardware stack levels required when called:    1
  9974 ;; This function calls:
  9975 ;;		i2_Delay
  9976 ;; This function is called by:
  9977 ;;		i2_Update
  9978 ;; This function uses a non-reentrant model
  9979 ;;
  9980                           
  9981                           	psect	text55
  9982  001F6C                     __ptext55:
  9983                           	opt stack 0
  9984  001F6C                     i2_writeRegisters:
  9985                           	opt stack 19
  9986                           
  9987                           ;Shift595.c: 51: int val = 0;
  9988                           
  9989                           ;incstack = 0
  9990  001F6C  0E00               	movlw	0
  9991  001F6E  6E0B               	movwf	i2writeRegisters@val+1,c
  9992  001F70  0E00               	movlw	0
  9993  001F72  6E0A               	movwf	i2writeRegisters@val,c
  9994                           
  9995                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  9996  001F74  0E00               	movlw	0
  9997  001F76  6E0D               	movwf	i2writeRegisters@i+1,c
  9998  001F78  0E17               	movlw	23
  9999  001F7A  6E0C               	movwf	i2writeRegisters@i,c
 10000  001F7C                     i2l3012:
 10001  001F7C  BE0D               	btfsc	i2writeRegisters@i+1,7,c
 10002  001F7E  D01D               	goto	i2l743
 10003                           
 10004                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
 10005  001F80  9E8C               	bcf	3980,7,c	;volatile
 10006                           
 10007                           ;Shift595.c: 55: val = registers[i];
 10008  001F82  90D8               	bcf	status,0,c
 10009  001F84  340C               	rlcf	i2writeRegisters@i,w,c
 10010  001F86  6ED9               	movwf	fsr2l,c
 10011  001F88  340D               	rlcf	i2writeRegisters@i+1,w,c
 10012  001F8A  6EDA               	movwf	fsr2h,c
 10013  001F8C  0E00               	movlw	low _registers
 10014  001F8E  26D9               	addwf	fsr2l,f,c
 10015  001F90  0E01               	movlw	high _registers
 10016  001F92  22DA               	addwfc	fsr2h,f,c
 10017  001F94  CFDE F00A          	movff	postinc2,i2writeRegisters@val
 10018  001F98  CFDD F00B          	movff	postdec2,i2writeRegisters@val+1
 10019                           
 10020                           ;Shift595.c: 56: if (val == 1) {
 10021  001F9C  040A               	decf	i2writeRegisters@val,w,c
 10022  001F9E  100B               	iorwf	i2writeRegisters@val+1,w,c
 10023  001FA0  A4D8               	btfss	status,2,c
 10024  001FA2  D002               	goto	i2l3020
 10025                           
 10026                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
 10027  001FA4  888C               	bsf	3980,4,c	;volatile
 10028                           
 10029                           ;Shift595.c: 58: } else if (val == 0) {
 10030  001FA6  D004               	goto	i2l741
 10031  001FA8                     i2l3020:
 10032  001FA8  500A               	movf	i2writeRegisters@val,w,c
 10033  001FAA  100B               	iorwf	i2writeRegisters@val+1,w,c
 10034  001FAC  B4D8               	btfsc	status,2,c
 10035                           
 10036                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
 10037  001FAE  988C               	bcf	3980,4,c	;volatile
 10038  001FB0                     i2l741:
 10039  001FB0  8E8C               	bsf	3980,7,c	;volatile
 10040  001FB2  060C               	decf	i2writeRegisters@i,f,c
 10041  001FB4  A0D8               	btfss	status,0,c
 10042  001FB6  060D               	decf	i2writeRegisters@i+1,f,c
 10043  001FB8  D7E1               	goto	i2l3012
 10044  001FBA                     i2l743:
 10045  001FBA  9E8C               	bcf	3980,7,c	;volatile
 10046                           
 10047                           ;Shift595.c: 67: Delay(1);
 10048  001FBC  0E01               	movlw	1
 10049  001FBE  6E01               	movwf	i2Delay@wait,c
 10050  001FC0  0E00               	movlw	0
 10051  001FC2  6E02               	movwf	i2Delay@wait+1,c
 10052  001FC4  0E00               	movlw	0
 10053  001FC6  6E03               	movwf	i2Delay@wait+2,c
 10054  001FC8  0E00               	movlw	0
 10055  001FCA  6E04               	movwf	i2Delay@wait+3,c
 10056  001FCC  EC6E  F012         	call	i2_Delay	;wreg free
 10057                           
 10058                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
 10059  001FD0  8C8C               	bsf	3980,6,c	;volatile
 10060                           
 10061                           ;Shift595.c: 69: Delay(1);
 10062  001FD2  0E01               	movlw	1
 10063  001FD4  6E01               	movwf	i2Delay@wait,c
 10064  001FD6  0E00               	movlw	0
 10065  001FD8  6E02               	movwf	i2Delay@wait+1,c
 10066  001FDA  0E00               	movlw	0
 10067  001FDC  6E03               	movwf	i2Delay@wait+2,c
 10068  001FDE  0E00               	movlw	0
 10069  001FE0  6E04               	movwf	i2Delay@wait+3,c
 10070  001FE2  EC6E  F012         	call	i2_Delay	;wreg free
 10071                           
 10072                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
 10073  001FE6  9C8C               	bcf	3980,6,c	;volatile
 10074  001FE8  0012               	return	
 10075  001FEA                     __end_ofi2_writeRegisters:
 10076                           	opt stack 0
 10077                           tosu	equ	0xFFF
 10078                           tosh	equ	0xFFE
 10079                           tosl	equ	0xFFD
 10080                           pclatu	equ	0xFFB
 10081                           pclath	equ	0xFFA
 10082                           tblptru	equ	0xFF8
 10083                           tblptrh	equ	0xFF7
 10084                           tblptrl	equ	0xFF6
 10085                           tablat	equ	0xFF5
 10086                           prodh	equ	0xFF4
 10087                           prodl	equ	0xFF3
 10088                           intcon	equ	0xFF2
 10089                           intcon2	equ	0xFF1
 10090                           postinc0	equ	0xFEE
 10091                           fsr0h	equ	0xFEA
 10092                           fsr0l	equ	0xFE9
 10093                           wreg	equ	0xFE8
 10094                           fsr1h	equ	0xFE2
 10095                           fsr1l	equ	0xFE1
 10096                           indf2	equ	0xFDF
 10097                           postinc2	equ	0xFDE
 10098                           postdec2	equ	0xFDD
 10099                           plusw2	equ	0xFDB
 10100                           fsr2h	equ	0xFDA
 10101                           fsr2l	equ	0xFD9
 10102                           status	equ	0xFD8
 10103                           
 10104 ;; *************** function i2_Delay *****************
 10105 ;; Defined at:
 10106 ;;		line 9 in file "Functions.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;  wait            4    0[COMRAM] long 
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  Delay           4    5[COMRAM] long 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg, status,2, status,0
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10120 ;;      Params:         4       0       0       0       0       0       0
 10121 ;;      Locals:         4       0       0       0       0       0       0
 10122 ;;      Temps:          1       0       0       0       0       0       0
 10123 ;;      Totals:         9       0       0       0       0       0       0
 10124 ;;Total ram usage:        9 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		i2_writeRegisters
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text56
 10134  0024DC                     __ptext56:
 10135                           	opt stack 0
 10136  0024DC                     i2_Delay:
 10137                           	opt stack 19
 10138                           
 10139                           ;Functions.c: 10: long int i = 0;
 10140                           
 10141                           ;incstack = 0
 10142  0024DC  0E00               	movlw	0
 10143  0024DE  6E06               	movwf	i2Delay@i,c
 10144  0024E0  0E00               	movlw	0
 10145  0024E2  6E07               	movwf	i2Delay@i+1,c
 10146  0024E4  0E00               	movlw	0
 10147  0024E6  6E08               	movwf	i2Delay@i+2,c
 10148  0024E8  0E00               	movlw	0
 10149  0024EA  6E09               	movwf	i2Delay@i+3,c
 10150                           
 10151                           ;Functions.c: 11: for (; wait > i; i++) {
 10152  0024EC  D00D               	goto	i2l2916
 10153  0024EE                     i2l2912:
 10154                           
 10155                           ;Functions.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
 10156  0024EE  0E03               	movlw	3
 10157  0024F0  6E05               	movwf	??i2_Delay& (0+255),c
 10158  0024F2  0E98               	movlw	152
 10159  0024F4                     i2u429_47:
 10160  0024F4  2EE8               	decfsz	wreg,f,c
 10161  0024F6  D7FE               	goto	i2u429_47
 10162  0024F8  2E05               	decfsz	??i2_Delay& (0+255),f,c
 10163  0024FA  D7FC               	goto	i2u429_47
 10164  0024FC  0E01               	movlw	1
 10165  0024FE  2606               	addwf	i2Delay@i,f,c
 10166  002500  0E00               	movlw	0
 10167  002502  2207               	addwfc	i2Delay@i+1,f,c
 10168  002504  2208               	addwfc	i2Delay@i+2,f,c
 10169  002506  2209               	addwfc	i2Delay@i+3,f,c
 10170  002508                     i2l2916:
 10171  002508  5001               	movf	i2Delay@wait,w,c
 10172  00250A  5C06               	subwf	i2Delay@i,w,c
 10173  00250C  5002               	movf	i2Delay@wait+1,w,c
 10174  00250E  5807               	subwfb	i2Delay@i+1,w,c
 10175  002510  5003               	movf	i2Delay@wait+2,w,c
 10176  002512  5808               	subwfb	i2Delay@i+2,w,c
 10177  002514  5009               	movf	i2Delay@i+3,w,c
 10178  002516  0A80               	xorlw	128
 10179  002518  6E05               	movwf	??i2_Delay& (0+255),c
 10180  00251A  5004               	movf	i2Delay@wait+3,w,c
 10181  00251C  0A80               	xorlw	128
 10182  00251E  5805               	subwfb	??i2_Delay& (0+255),w,c
 10183  002520  B0D8               	btfsc	status,0,c
 10184  002522  0012               	return	
 10185  002524  D7E4               	goto	i2l2912
 10186  002526                     __end_ofi2_Delay:
 10187                           	opt stack 0
 10188                           tosu	equ	0xFFF
 10189                           tosh	equ	0xFFE
 10190                           tosl	equ	0xFFD
 10191                           pclatu	equ	0xFFB
 10192                           pclath	equ	0xFFA
 10193                           tblptru	equ	0xFF8
 10194                           tblptrh	equ	0xFF7
 10195                           tblptrl	equ	0xFF6
 10196                           tablat	equ	0xFF5
 10197                           prodh	equ	0xFF4
 10198                           prodl	equ	0xFF3
 10199                           intcon	equ	0xFF2
 10200                           intcon2	equ	0xFF1
 10201                           postinc0	equ	0xFEE
 10202                           fsr0h	equ	0xFEA
 10203                           fsr0l	equ	0xFE9
 10204                           wreg	equ	0xFE8
 10205                           fsr1h	equ	0xFE2
 10206                           fsr1l	equ	0xFE1
 10207                           indf2	equ	0xFDF
 10208                           postinc2	equ	0xFDE
 10209                           postdec2	equ	0xFDD
 10210                           plusw2	equ	0xFDB
 10211                           fsr2h	equ	0xFDA
 10212                           fsr2l	equ	0xFD9
 10213                           status	equ	0xFD8
 10214                           
 10215 ;; *************** function _ADC_GetConversion *****************
 10216 ;; Defined at:
 10217 ;;		line 109 in file "mcc_generated_files/adc.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  channel         1    wreg     enum E7738
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  channel         1    4[COMRAM] enum E7738
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  2    0[COMRAM] unsigned int 
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10231 ;;      Params:         2       0       0       0       0       0       0
 10232 ;;      Locals:         1       0       0       0       0       0       0
 10233 ;;      Temps:          2       0       0       0       0       0       0
 10234 ;;      Totals:         5       0       0       0       0       0       0
 10235 ;;Total ram usage:        5 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_ReadCurrent
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           	psect	text57
 10245  00279E                     __ptext57:
 10246                           	opt stack 0
 10247  00279E                     _ADC_GetConversion:
 10248                           	opt stack 21
 10249                           
 10250                           ;incstack = 0
 10251                           ;ADC_GetConversion@channel stored from wreg
 10252  00279E  6E05               	movwf	ADC_GetConversion@channel,c
 10253                           
 10254                           ;adc.c: 112: ADCON0bits.CHS = channel;
 10255  0027A0  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 10256  0027A4  4603               	rlncf	??_ADC_GetConversion,f,c
 10257  0027A6  4603               	rlncf	??_ADC_GetConversion,f,c
 10258  0027A8  50C2               	movf	4034,w,c	;volatile
 10259  0027AA  1803               	xorwf	??_ADC_GetConversion,w,c
 10260  0027AC  0B83               	andlw	-125
 10261  0027AE  1803               	xorwf	??_ADC_GetConversion,w,c
 10262  0027B0  6EC2               	movwf	4034,c	;volatile
 10263                           
 10264                           ;adc.c: 115: ADCON0bits.ADON = 1;
 10265  0027B2  80C2               	bsf	4034,0,c	;volatile
 10266                           
 10267                           ;adc.c: 119: ADCON0bits.GO_nDONE = 1;
 10268  0027B4  82C2               	bsf	4034,1,c	;volatile
 10269  0027B6                     i2l31:
 10270  0027B6  B2C2               	btfsc	4034,1,c	;volatile
 10271  0027B8  D7FE               	goto	i2l31
 10272                           
 10273                           ;adc.c: 124: }
 10274                           ;adc.c: 127: return ((ADRESH << 8) + ADRESL);
 10275  0027BA  50C4               	movf	4036,w,c	;volatile
 10276  0027BC  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
 10277  0027BE  6A03               	clrf	??_ADC_GetConversion& (0+255),c
 10278  0027C0  50C3               	movf	4035,w,c	;volatile
 10279  0027C2  2403               	addwf	??_ADC_GetConversion,w,c
 10280  0027C4  6E01               	movwf	?_ADC_GetConversion,c
 10281  0027C6  0E00               	movlw	0
 10282  0027C8  2004               	addwfc	??_ADC_GetConversion+1,w,c
 10283  0027CA  6E02               	movwf	?_ADC_GetConversion+1,c
 10284  0027CC  0012               	return	
 10285  0027CE                     __end_of_ADC_GetConversion:
 10286                           	opt stack 0
 10287                           tosu	equ	0xFFF
 10288                           tosh	equ	0xFFE
 10289                           tosl	equ	0xFFD
 10290                           pclatu	equ	0xFFB
 10291                           pclath	equ	0xFFA
 10292                           tblptru	equ	0xFF8
 10293                           tblptrh	equ	0xFF7
 10294                           tblptrl	equ	0xFF6
 10295                           tablat	equ	0xFF5
 10296                           prodh	equ	0xFF4
 10297                           prodl	equ	0xFF3
 10298                           intcon	equ	0xFF2
 10299                           intcon2	equ	0xFF1
 10300                           postinc0	equ	0xFEE
 10301                           fsr0h	equ	0xFEA
 10302                           fsr0l	equ	0xFE9
 10303                           wreg	equ	0xFE8
 10304                           fsr1h	equ	0xFE2
 10305                           fsr1l	equ	0xFE1
 10306                           indf2	equ	0xFDF
 10307                           postinc2	equ	0xFDE
 10308                           postdec2	equ	0xFDD
 10309                           plusw2	equ	0xFDB
 10310                           fsr2h	equ	0xFDA
 10311                           fsr2l	equ	0xFD9
 10312                           status	equ	0xFD8
 10313                           
 10314 ;; *************** function _FuseSystem *****************
 10315 ;; Defined at:
 10316 ;;		line 173 in file "PDU.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;  i               2   19[COMRAM] int 
 10321 ;;  i               2   17[COMRAM] int 
 10322 ;; Return value:  Size  Location     Type
 10323 ;;                  1    wreg      void 
 10324 ;; Registers used:
 10325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10326 ;; Tracked objects:
 10327 ;;		On entry : 0/0
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10331 ;;      Params:         0       0       0       0       0       0       0
 10332 ;;      Locals:         4       0       0       0       0       0       0
 10333 ;;      Temps:          4       0       0       0       0       0       0
 10334 ;;      Totals:         8       0       0       0       0       0       0
 10335 ;;Total ram usage:        8 bytes
 10336 ;; Hardware stack levels used:    1
 10337 ;; Hardware stack levels required when called:    2
 10338 ;; This function calls:
 10339 ;;		___wmul
 10340 ;;		i2_EnableSlavePower
 10341 ;; This function is called by:
 10342 ;;		_TMR1_ISR
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           	psect	text58
 10347  000FBE                     __ptext58:
 10348                           	opt stack 0
 10349  000FBE                     _FuseSystem:
 10350                           	opt stack 20
 10351                           
 10352                           ;PDU.c: 175: for (int i = 0; i < 6; i++) {
 10353                           
 10354                           ;incstack = 0
 10355  000FBE  0E00               	movlw	0
 10356  000FC0  6E13               	movwf	FuseSystem@i+1,c
 10357  000FC2  0E00               	movlw	0
 10358  000FC4  6E12               	movwf	FuseSystem@i,c
 10359  000FC6                     i2l3300:
 10360  000FC6  BE13               	btfsc	FuseSystem@i+1,7,c
 10361  000FC8  D006               	goto	i2l3304
 10362  000FCA  5013               	movf	FuseSystem@i+1,w,c
 10363  000FCC  E127               	bnz	i2l3310
 10364  000FCE  0E06               	movlw	6
 10365  000FD0  5C12               	subwf	FuseSystem@i,w,c
 10366  000FD2  B0D8               	btfsc	status,0,c
 10367  000FD4  D023               	goto	i2l3310
 10368  000FD6                     i2l3304:
 10369                           
 10370                           ;PDU.c: 176: Current[i] = CurrentADC[i]*48;
 10371  000FD6  90D8               	bcf	status,0,c
 10372  000FD8  3412               	rlcf	FuseSystem@i,w,c
 10373  000FDA  6ED9               	movwf	fsr2l,c
 10374  000FDC  3413               	rlcf	FuseSystem@i+1,w,c
 10375  000FDE  6EDA               	movwf	fsr2h,c
 10376  000FE0  0E6C               	movlw	low _CurrentADC
 10377  000FE2  26D9               	addwf	fsr2l,f,c
 10378  000FE4  0E00               	movlw	high _CurrentADC
 10379  000FE6  22DA               	addwfc	fsr2h,f,c
 10380  000FE8  CFDE F001          	movff	postinc2,___wmul@multiplier
 10381  000FEC  CFDD F002          	movff	postdec2,___wmul@multiplier+1
 10382  000FF0  0E00               	movlw	0
 10383  000FF2  6E04               	movwf	___wmul@multiplicand+1,c
 10384  000FF4  0E30               	movlw	48
 10385  000FF6  6E03               	movwf	___wmul@multiplicand,c
 10386  000FF8  ECFC  F013         	call	___wmul	;wreg free
 10387  000FFC  90D8               	bcf	status,0,c
 10388  000FFE  3412               	rlcf	FuseSystem@i,w,c
 10389  001000  6ED9               	movwf	fsr2l,c
 10390  001002  3413               	rlcf	FuseSystem@i+1,w,c
 10391  001004  6EDA               	movwf	fsr2h,c
 10392  001006  0E60               	movlw	low _Current
 10393  001008  26D9               	addwf	fsr2l,f,c
 10394  00100A  0E00               	movlw	high _Current
 10395  00100C  22DA               	addwfc	fsr2h,f,c
 10396  00100E  C001  FFDE         	movff	?___wmul,postinc2
 10397  001012  C002  FFDD         	movff	?___wmul+1,postdec2
 10398  001016  4A12               	infsnz	FuseSystem@i,f,c
 10399  001018  2A13               	incf	FuseSystem@i+1,f,c
 10400  00101A  D7D5               	goto	i2l3300
 10401  00101C                     i2l3310:
 10402                           
 10403                           ;PDU.c: 179: }
 10404                           ;PDU.c: 181: for (int i = 0; i < 6; i++) {
 10405  00101C  0E00               	movlw	0
 10406  00101E  6E15               	movwf	FuseSystem@i_1528+1,c
 10407  001020  0E00               	movlw	0
 10408  001022  6E14               	movwf	FuseSystem@i_1528,c
 10409  001024  BE15               	btfsc	FuseSystem@i_1528+1,7,c
 10410  001026  D008               	goto	i2l3316
 10411  001028  5015               	movf	FuseSystem@i_1528+1,w,c
 10412  00102A  E105               	bnz	i2u205_40
 10413  00102C  0E06               	movlw	6
 10414  00102E  5C14               	subwf	FuseSystem@i_1528,w,c
 10415  001030  B0D8               	btfsc	status,0,c
 10416  001032  0012               	return	
 10417  001034  D001               	goto	i2l3316
 10418  001036                     i2u205_40:
 10419  001036  0012               	return	
 10420  001038                     i2l3316:
 10421                           
 10422                           ;PDU.c: 182: if (Current[i] > Currentcomp[i]) {
 10423  001038  90D8               	bcf	status,0,c
 10424  00103A  3414               	rlcf	FuseSystem@i_1528,w,c
 10425  00103C  6ED9               	movwf	fsr2l,c
 10426  00103E  3415               	rlcf	FuseSystem@i_1528+1,w,c
 10427  001040  6EDA               	movwf	fsr2h,c
 10428  001042  0E60               	movlw	low _Current
 10429  001044  26D9               	addwf	fsr2l,f,c
 10430  001046  0E00               	movlw	high _Current
 10431  001048  22DA               	addwfc	fsr2h,f,c
 10432  00104A  90D8               	bcf	status,0,c
 10433  00104C  3414               	rlcf	FuseSystem@i_1528,w,c
 10434  00104E  6EE1               	movwf	fsr1l,c
 10435  001050  3415               	rlcf	FuseSystem@i_1528+1,w,c
 10436  001052  6EE2               	movwf	fsr1h,c
 10437  001054  0E78               	movlw	low _Currentcomp
 10438  001056  26E1               	addwf	fsr1l,f,c
 10439  001058  0E00               	movlw	high _Currentcomp
 10440  00105A  22E2               	addwfc	fsr1h,f,c
 10441  00105C  50DE               	movf	postinc2,w,c
 10442  00105E  5CE6               	subwf	postinc1,w,c
 10443  001060  50DE               	movf	postinc2,w,c
 10444  001062  58E6               	subwfb	postinc1,w,c
 10445  001064  B0D8               	btfsc	status,0,c
 10446  001066  D04D               	goto	i2l3334
 10447                           
 10448                           ;PDU.c: 184: do { LATA3 = 1; } while(0);
 10449  001068  8689               	bsf	3977,3,c	;volatile
 10450                           
 10451                           ;PDU.c: 185: switch(i){
 10452  00106A  D030               	goto	i2l3332
 10453  00106C                     i2l3318:
 10454                           
 10455                           ;PDU.c: 187: EnableSlavePower(AUX, 0);
 10456  00106C  0E00               	movlw	0
 10457  00106E  6E0C               	movwf	i2EnableSlavePower@onof+1,c
 10458  001070  0E00               	movlw	0
 10459  001072  6E0B               	movwf	i2EnableSlavePower@onof,c
 10460  001074  0E06               	movlw	6
 10461  001076  EC92  F00D         	call	i2_EnableSlavePower
 10462                           
 10463                           ;PDU.c: 188: break;
 10464  00107A  D043               	goto	i2l3334
 10465  00107C                     i2l3320:
 10466                           
 10467                           ;PDU.c: 190: EnableSlavePower(TSS, 0);
 10468  00107C  0E00               	movlw	0
 10469  00107E  6E0C               	movwf	i2EnableSlavePower@onof+1,c
 10470  001080  0E00               	movlw	0
 10471  001082  6E0B               	movwf	i2EnableSlavePower@onof,c
 10472  001084  0E05               	movlw	5
 10473  001086  EC92  F00D         	call	i2_EnableSlavePower
 10474                           
 10475                           ;PDU.c: 191: break;
 10476  00108A  D03B               	goto	i2l3334
 10477  00108C                     i2l3322:
 10478                           
 10479                           ;PDU.c: 193: EnableSlavePower(DDS, 0);
 10480  00108C  0E00               	movlw	0
 10481  00108E  6E0C               	movwf	i2EnableSlavePower@onof+1,c
 10482  001090  0E00               	movlw	0
 10483  001092  6E0B               	movwf	i2EnableSlavePower@onof,c
 10484  001094  0E01               	movlw	1
 10485  001096  EC92  F00D         	call	i2_EnableSlavePower
 10486                           
 10487                           ;PDU.c: 194: break;
 10488  00109A  D033               	goto	i2l3334
 10489  00109C                     i2l3324:
 10490                           
 10491                           ;PDU.c: 196: EnableSlavePower(SAS, 0);
 10492  00109C  0E00               	movlw	0
 10493  00109E  6E0C               	movwf	i2EnableSlavePower@onof+1,c
 10494  0010A0  0E00               	movlw	0
 10495  0010A2  6E0B               	movwf	i2EnableSlavePower@onof,c
 10496  0010A4  0E03               	movlw	3
 10497  0010A6  EC92  F00D         	call	i2_EnableSlavePower
 10498                           
 10499                           ;PDU.c: 197: break;
 10500  0010AA  D02B               	goto	i2l3334
 10501  0010AC                     i2l3326:
 10502                           
 10503                           ;PDU.c: 199: EnableSlavePower(BMM, 0);
 10504  0010AC  0E00               	movlw	0
 10505  0010AE  6E0C               	movwf	i2EnableSlavePower@onof+1,c
 10506  0010B0  0E00               	movlw	0
 10507  0010B2  6E0B               	movwf	i2EnableSlavePower@onof,c
 10508  0010B4  0E04               	movlw	4
 10509  0010B6  EC92  F00D         	call	i2_EnableSlavePower
 10510                           
 10511                           ;PDU.c: 200: break;
 10512  0010BA  D023               	goto	i2l3334
 10513  0010BC                     i2l3328:
 10514                           
 10515                           ;PDU.c: 202: EnableSlavePower(MCS, 0);
 10516  0010BC  0E00               	movlw	0
 10517  0010BE  6E0C               	movwf	i2EnableSlavePower@onof+1,c
 10518  0010C0  0E00               	movlw	0
 10519  0010C2  6E0B               	movwf	i2EnableSlavePower@onof,c
 10520  0010C4  0E02               	movlw	2
 10521  0010C6  EC92  F00D         	call	i2_EnableSlavePower
 10522                           
 10523                           ;PDU.c: 204: }
 10524                           
 10525                           ;PDU.c: 203: break;
 10526  0010CA  D01B               	goto	i2l3334
 10527  0010CC                     i2l3332:
 10528  0010CC  C014  F00E         	movff	FuseSystem@i_1528,??_FuseSystem
 10529  0010D0  C015  F00F         	movff	FuseSystem@i_1528+1,??_FuseSystem+1
 10530                           
 10531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10532                           ; Switch size 1, requested type "space"
 10533                           ; Number of cases is 1, Range of values is 0 to 0
 10534                           ; switch strategies available:
 10535                           ; Name         Instructions Cycles
 10536                           ; simple_byte            4     3 (average)
 10537                           ;	Chosen strategy is simple_byte
 10538  0010D4  500F               	movf	??_FuseSystem+1,w,c
 10539  0010D6  0A00               	xorlw	0	; case 0
 10540  0010D8  A4D8               	btfss	status,2,c
 10541  0010DA  D013               	goto	i2l3334
 10542                           
 10543                           ; Switch size 1, requested type "space"
 10544                           ; Number of cases is 6, Range of values is 0 to 5
 10545                           ; switch strategies available:
 10546                           ; Name         Instructions Cycles
 10547                           ; simple_byte           19    10 (average)
 10548                           ;	Chosen strategy is simple_byte
 10549  0010DC  500E               	movf	??_FuseSystem,w,c
 10550  0010DE  0A00               	xorlw	0	; case 0
 10551  0010E0  B4D8               	btfsc	status,2,c
 10552  0010E2  D7C4               	goto	i2l3318
 10553  0010E4  0A01               	xorlw	1	; case 1
 10554  0010E6  B4D8               	btfsc	status,2,c
 10555  0010E8  D7C9               	goto	i2l3320
 10556  0010EA  0A03               	xorlw	3	; case 2
 10557  0010EC  B4D8               	btfsc	status,2,c
 10558  0010EE  D7CE               	goto	i2l3322
 10559  0010F0  0A01               	xorlw	1	; case 3
 10560  0010F2  B4D8               	btfsc	status,2,c
 10561  0010F4  D7D3               	goto	i2l3324
 10562  0010F6  0A07               	xorlw	7	; case 4
 10563  0010F8  B4D8               	btfsc	status,2,c
 10564  0010FA  D7D8               	goto	i2l3326
 10565  0010FC  0A01               	xorlw	1	; case 5
 10566  0010FE  B4D8               	btfsc	status,2,c
 10567  001100  D7DD               	goto	i2l3328
 10568  001102                     i2l3334:
 10569  001102  4A14               	infsnz	FuseSystem@i_1528,f,c
 10570  001104  2A15               	incf	FuseSystem@i_1528+1,f,c
 10571  001106  BE15               	btfsc	FuseSystem@i_1528+1,7,c
 10572  001108  D797               	goto	i2l3316
 10573  00110A  5015               	movf	FuseSystem@i_1528+1,w,c
 10574  00110C  E101               	bnz	i2l680
 10575  00110E  D78E               	goto	L2
 10576  001110                     i2l680:
 10577  001110  0012               	return		;funcret
 10578  001112                     __end_of_FuseSystem:
 10579                           	opt stack 0
 10580                           tosu	equ	0xFFF
 10581                           tosh	equ	0xFFE
 10582                           tosl	equ	0xFFD
 10583                           pclatu	equ	0xFFB
 10584                           pclath	equ	0xFFA
 10585                           tblptru	equ	0xFF8
 10586                           tblptrh	equ	0xFF7
 10587                           tblptrl	equ	0xFF6
 10588                           tablat	equ	0xFF5
 10589                           prodh	equ	0xFF4
 10590                           prodl	equ	0xFF3
 10591                           intcon	equ	0xFF2
 10592                           intcon2	equ	0xFF1
 10593                           postinc0	equ	0xFEE
 10594                           fsr0h	equ	0xFEA
 10595                           fsr0l	equ	0xFE9
 10596                           wreg	equ	0xFE8
 10597                           postinc1	equ	0xFE6
 10598                           fsr1h	equ	0xFE2
 10599                           fsr1l	equ	0xFE1
 10600                           indf2	equ	0xFDF
 10601                           postinc2	equ	0xFDE
 10602                           postdec2	equ	0xFDD
 10603                           plusw2	equ	0xFDB
 10604                           fsr2h	equ	0xFDA
 10605                           fsr2l	equ	0xFD9
 10606                           status	equ	0xFD8
 10607                           
 10608 ;; *************** function i2_EnableSlavePower *****************
 10609 ;; Defined at:
 10610 ;;		line 35 in file "PDU.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  slave           1    wreg     enum E6
 10613 ;;  onof            2   10[COMRAM] int 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  slave           1   12[COMRAM] enum E6
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  1    wreg      void 
 10618 ;; Registers used:
 10619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10625 ;;      Params:         2       0       0       0       0       0       0
 10626 ;;      Locals:         1       0       0       0       0       0       0
 10627 ;;      Temps:          0       0       0       0       0       0       0
 10628 ;;      Totals:         3       0       0       0       0       0       0
 10629 ;;Total ram usage:        3 bytes
 10630 ;; Hardware stack levels used:    1
 10631 ;; Hardware stack levels required when called:    1
 10632 ;; This function calls:
 10633 ;;		i2_SetPin595
 10634 ;; This function is called by:
 10635 ;;		_FuseSystem
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text59
 10640  001B24                     __ptext59:
 10641                           	opt stack 0
 10642  001B24                     i2_EnableSlavePower:
 10643                           	opt stack 20
 10644                           
 10645                           ;incstack = 0
 10646                           ;i2EnableSlavePower@slave stored from wreg
 10647  001B24  6E0D               	movwf	i2EnableSlavePower@slave,c
 10648                           
 10649                           ;PDU.c: 36: switch (slave) {
 10650  001B26  D05C               	goto	i2l3204
 10651  001B28                     i2l3188:
 10652                           
 10653                           ;PDU.c: 38: SetPin595(2, 6, onof);
 10654  001B28  0E00               	movlw	0
 10655  001B2A  6E02               	movwf	i2SetPin595@Reg+1,c
 10656  001B2C  0E02               	movlw	2
 10657  001B2E  6E01               	movwf	i2SetPin595@Reg,c
 10658  001B30  0E00               	movlw	0
 10659  001B32  6E04               	movwf	i2SetPin595@pin+1,c
 10660  001B34  0E06               	movlw	6
 10661  001B36  6E03               	movwf	i2SetPin595@pin,c
 10662  001B38  C00B  F005         	movff	i2EnableSlavePower@onof,i2SetPin595@value
 10663  001B3C  C00C  F006         	movff	i2EnableSlavePower@onof+1,i2SetPin595@value+1
 10664  001B40  EC47  F012         	call	i2_SetPin595	;wreg free
 10665                           
 10666                           ;PDU.c: 39: break;
 10667  001B44  0012               	return	
 10668  001B46                     i2l3190:
 10669                           
 10670                           ;PDU.c: 41: SetPin595(1, 1, onof);
 10671  001B46  0E00               	movlw	0
 10672  001B48  6E02               	movwf	i2SetPin595@Reg+1,c
 10673  001B4A  0E01               	movlw	1
 10674  001B4C  6E01               	movwf	i2SetPin595@Reg,c
 10675  001B4E  0E00               	movlw	0
 10676  001B50  6E04               	movwf	i2SetPin595@pin+1,c
 10677  001B52  0E01               	movlw	1
 10678  001B54  6E03               	movwf	i2SetPin595@pin,c
 10679  001B56  C00B  F005         	movff	i2EnableSlavePower@onof,i2SetPin595@value
 10680  001B5A  C00C  F006         	movff	i2EnableSlavePower@onof+1,i2SetPin595@value+1
 10681  001B5E  EC47  F012         	call	i2_SetPin595	;wreg free
 10682                           
 10683                           ;PDU.c: 42: break;
 10684  001B62  0012               	return	
 10685  001B64                     i2l3192:
 10686                           
 10687                           ;PDU.c: 44: SetPin595(1, 6, onof);
 10688  001B64  0E00               	movlw	0
 10689  001B66  6E02               	movwf	i2SetPin595@Reg+1,c
 10690  001B68  0E01               	movlw	1
 10691  001B6A  6E01               	movwf	i2SetPin595@Reg,c
 10692  001B6C  0E00               	movlw	0
 10693  001B6E  6E04               	movwf	i2SetPin595@pin+1,c
 10694  001B70  0E06               	movlw	6
 10695  001B72  6E03               	movwf	i2SetPin595@pin,c
 10696  001B74  C00B  F005         	movff	i2EnableSlavePower@onof,i2SetPin595@value
 10697  001B78  C00C  F006         	movff	i2EnableSlavePower@onof+1,i2SetPin595@value+1
 10698  001B7C  EC47  F012         	call	i2_SetPin595	;wreg free
 10699                           
 10700                           ;PDU.c: 45: MCSOn = onof;
 10701  001B80  C00B  F03E         	movff	i2EnableSlavePower@onof,_MCSOn
 10702                           
 10703                           ;PDU.c: 46: break;
 10704  001B84  0012               	return	
 10705  001B86                     i2l3196:
 10706                           
 10707                           ;PDU.c: 48: SetPin595(2, 1, onof);
 10708  001B86  0E00               	movlw	0
 10709  001B88  6E02               	movwf	i2SetPin595@Reg+1,c
 10710  001B8A  0E02               	movlw	2
 10711  001B8C  6E01               	movwf	i2SetPin595@Reg,c
 10712  001B8E  0E00               	movlw	0
 10713  001B90  6E04               	movwf	i2SetPin595@pin+1,c
 10714  001B92  0E01               	movlw	1
 10715  001B94  6E03               	movwf	i2SetPin595@pin,c
 10716  001B96  C00B  F005         	movff	i2EnableSlavePower@onof,i2SetPin595@value
 10717  001B9A  C00C  F006         	movff	i2EnableSlavePower@onof+1,i2SetPin595@value+1
 10718  001B9E  EC47  F012         	call	i2_SetPin595	;wreg free
 10719                           
 10720                           ;PDU.c: 49: break;
 10721  001BA2  0012               	return	
 10722  001BA4                     i2l3198:
 10723                           
 10724                           ;PDU.c: 51: SetPin595(3, 6, onof);
 10725  001BA4  0E00               	movlw	0
 10726  001BA6  6E02               	movwf	i2SetPin595@Reg+1,c
 10727  001BA8  0E03               	movlw	3
 10728  001BAA  6E01               	movwf	i2SetPin595@Reg,c
 10729  001BAC  0E00               	movlw	0
 10730  001BAE  6E04               	movwf	i2SetPin595@pin+1,c
 10731  001BB0  0E06               	movlw	6
 10732  001BB2  6E03               	movwf	i2SetPin595@pin,c
 10733  001BB4  C00B  F005         	movff	i2EnableSlavePower@onof,i2SetPin595@value
 10734  001BB8  C00C  F006         	movff	i2EnableSlavePower@onof+1,i2SetPin595@value+1
 10735  001BBC  EC47  F012         	call	i2_SetPin595	;wreg free
 10736                           
 10737                           ;PDU.c: 52: break;
 10738  001BC0  0012               	return	
 10739  001BC2                     i2l3200:
 10740                           
 10741                           ;PDU.c: 54: SetPin595(3, 1, onof);
 10742  001BC2  0E00               	movlw	0
 10743  001BC4  6E02               	movwf	i2SetPin595@Reg+1,c
 10744  001BC6  0E03               	movlw	3
 10745  001BC8  6E01               	movwf	i2SetPin595@Reg,c
 10746  001BCA  0E00               	movlw	0
 10747  001BCC  6E04               	movwf	i2SetPin595@pin+1,c
 10748  001BCE  0E01               	movlw	1
 10749  001BD0  6E03               	movwf	i2SetPin595@pin,c
 10750  001BD2  C00B  F005         	movff	i2EnableSlavePower@onof,i2SetPin595@value
 10751  001BD6  C00C  F006         	movff	i2EnableSlavePower@onof+1,i2SetPin595@value+1
 10752  001BDA  EC47  F012         	call	i2_SetPin595	;wreg free
 10753                           
 10754                           ;PDU.c: 56: }
 10755                           
 10756                           ;PDU.c: 55: break;
 10757  001BDE  0012               	return	
 10758  001BE0                     i2l3204:
 10759  001BE0  500D               	movf	i2EnableSlavePower@slave,w,c
 10760                           
 10761                           ; Switch size 1, requested type "space"
 10762                           ; Number of cases is 6, Range of values is 1 to 6
 10763                           ; switch strategies available:
 10764                           ; Name         Instructions Cycles
 10765                           ; simple_byte           19    10 (average)
 10766                           ;	Chosen strategy is simple_byte
 10767  001BE2  0A01               	xorlw	1	; case 1
 10768  001BE4  B4D8               	btfsc	status,2,c
 10769  001BE6  D7CF               	goto	i2l3196
 10770  001BE8  0A03               	xorlw	3	; case 2
 10771  001BEA  B4D8               	btfsc	status,2,c
 10772  001BEC  D7BB               	goto	i2l3192
 10773  001BEE  0A01               	xorlw	1	; case 3
 10774  001BF0  B4D8               	btfsc	status,2,c
 10775  001BF2  D79A               	goto	i2l3188
 10776  001BF4  0A07               	xorlw	7	; case 4
 10777  001BF6  B4D8               	btfsc	status,2,c
 10778  001BF8  D7A6               	goto	i2l3190
 10779  001BFA  0A01               	xorlw	1	; case 5
 10780  001BFC  B4D8               	btfsc	status,2,c
 10781  001BFE  D7D2               	goto	i2l3198
 10782  001C00  0A03               	xorlw	3	; case 6
 10783  001C02  A4D8               	btfss	status,2,c
 10784  001C04  0012               	return	
 10785  001C06  D7DD               	goto	i2l3200
 10786  001C08                     __end_ofi2_EnableSlavePower:
 10787                           	opt stack 0
 10788                           tosu	equ	0xFFF
 10789                           tosh	equ	0xFFE
 10790                           tosl	equ	0xFFD
 10791                           pclatu	equ	0xFFB
 10792                           pclath	equ	0xFFA
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           intcon	equ	0xFF2
 10800                           intcon2	equ	0xFF1
 10801                           postinc0	equ	0xFEE
 10802                           fsr0h	equ	0xFEA
 10803                           fsr0l	equ	0xFE9
 10804                           wreg	equ	0xFE8
 10805                           postinc1	equ	0xFE6
 10806                           fsr1h	equ	0xFE2
 10807                           fsr1l	equ	0xFE1
 10808                           indf2	equ	0xFDF
 10809                           postinc2	equ	0xFDE
 10810                           postdec2	equ	0xFDD
 10811                           plusw2	equ	0xFDB
 10812                           fsr2h	equ	0xFDA
 10813                           fsr2l	equ	0xFD9
 10814                           status	equ	0xFD8
 10815                           
 10816 ;; *************** function i2_SetPin595 *****************
 10817 ;; Defined at:
 10818 ;;		line 32 in file "Shift595.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;  Reg             2    0[COMRAM] int 
 10821 ;;  pin             2    2[COMRAM] int 
 10822 ;;  value           2    4[COMRAM] int 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10834 ;;      Params:         6       0       0       0       0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0
 10836 ;;      Temps:          4       0       0       0       0       0       0
 10837 ;;      Totals:        10       0       0       0       0       0       0
 10838 ;;Total ram usage:       10 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		_ReadCurrent
 10844 ;;		i2_EnableSlavePower
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text60
 10849  00248E                     __ptext60:
 10850                           	opt stack 0
 10851  00248E                     i2_SetPin595:
 10852                           	opt stack 21
 10853                           
 10854                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
 10855                           
 10856                           ;incstack = 0
 10857  00248E  0EF0               	movlw	240
 10858  002490  6E07               	movwf	??i2_SetPin595& (0+255),c
 10859  002492  0EFF               	movlw	255
 10860  002494  6E08               	movwf	(??i2_SetPin595+1)& (0+255),c
 10861  002496  C001  F009         	movff	i2SetPin595@Reg,??i2_SetPin595+2
 10862  00249A  C002  F00A         	movff	i2SetPin595@Reg+1,??i2_SetPin595+3
 10863  00249E  90D8               	bcf	status,0,c
 10864  0024A0  3609               	rlcf	??i2_SetPin595+2,f,c
 10865  0024A2  360A               	rlcf	??i2_SetPin595+3,f,c
 10866  0024A4  90D8               	bcf	status,0,c
 10867  0024A6  3609               	rlcf	??i2_SetPin595+2,f,c
 10868  0024A8  360A               	rlcf	??i2_SetPin595+3,f,c
 10869  0024AA  90D8               	bcf	status,0,c
 10870  0024AC  3609               	rlcf	??i2_SetPin595+2,f,c
 10871  0024AE  360A               	rlcf	??i2_SetPin595+3,f,c
 10872  0024B0  5003               	movf	i2SetPin595@pin,w,c
 10873  0024B2  2609               	addwf	??i2_SetPin595+2,f,c
 10874  0024B4  5004               	movf	i2SetPin595@pin+1,w,c
 10875  0024B6  220A               	addwfc	??i2_SetPin595+3,f,c
 10876  0024B8  90D8               	bcf	status,0,c
 10877  0024BA  3609               	rlcf	??i2_SetPin595+2,f,c
 10878  0024BC  360A               	rlcf	??i2_SetPin595+3,f,c
 10879  0024BE  5007               	movf	??i2_SetPin595,w,c
 10880  0024C0  2609               	addwf	??i2_SetPin595+2,f,c
 10881  0024C2  5008               	movf	??i2_SetPin595+1,w,c
 10882  0024C4  220A               	addwfc	??i2_SetPin595+3,f,c
 10883  0024C6  0E00               	movlw	low _registers
 10884  0024C8  2409               	addwf	??i2_SetPin595+2,w,c
 10885  0024CA  6ED9               	movwf	fsr2l,c
 10886  0024CC  0E01               	movlw	high _registers
 10887  0024CE  200A               	addwfc	??i2_SetPin595+3,w,c
 10888  0024D0  6EDA               	movwf	fsr2h,c
 10889  0024D2  C005  FFDE         	movff	i2SetPin595@value,postinc2
 10890  0024D6  C006  FFDD         	movff	i2SetPin595@value+1,postdec2
 10891  0024DA  0012               	return		;funcret
 10892  0024DC                     __end_ofi2_SetPin595:
 10893                           	opt stack 0
 10894                           tosu	equ	0xFFF
 10895                           tosh	equ	0xFFE
 10896                           tosl	equ	0xFFD
 10897                           pclatu	equ	0xFFB
 10898                           pclath	equ	0xFFA
 10899                           tblptru	equ	0xFF8
 10900                           tblptrh	equ	0xFF7
 10901                           tblptrl	equ	0xFF6
 10902                           tablat	equ	0xFF5
 10903                           prodh	equ	0xFF4
 10904                           prodl	equ	0xFF3
 10905                           intcon	equ	0xFF2
 10906                           intcon2	equ	0xFF1
 10907                           postinc0	equ	0xFEE
 10908                           fsr0h	equ	0xFEA
 10909                           fsr0l	equ	0xFE9
 10910                           wreg	equ	0xFE8
 10911                           postinc1	equ	0xFE6
 10912                           fsr1h	equ	0xFE2
 10913                           fsr1l	equ	0xFE1
 10914                           indf2	equ	0xFDF
 10915                           postinc2	equ	0xFDE
 10916                           postdec2	equ	0xFDD
 10917                           plusw2	equ	0xFDB
 10918                           fsr2h	equ	0xFDA
 10919                           fsr2l	equ	0xFD9
 10920                           status	equ	0xFD8
 10921                           
 10922 ;; *************** function ___wmul *****************
 10923 ;; Defined at:
 10924 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  multiplier      2    0[COMRAM] unsigned int 
 10927 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;  product         2    4[COMRAM] unsigned int 
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  2    0[COMRAM] unsigned int 
 10932 ;; Registers used:
 10933 ;;		wreg, status,2, status,0, prodl, prodh
 10934 ;; Tracked objects:
 10935 ;;		On entry : 0/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10939 ;;      Params:         4       0       0       0       0       0       0
 10940 ;;      Locals:         2       0       0       0       0       0       0
 10941 ;;      Temps:          0       0       0       0       0       0       0
 10942 ;;      Totals:         6       0       0       0       0       0       0
 10943 ;;Total ram usage:        6 bytes
 10944 ;; Hardware stack levels used:    1
 10945 ;; This function calls:
 10946 ;;		Nothing
 10947 ;; This function is called by:
 10948 ;;		_FuseSystem
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952                           	psect	text61
 10953  0027F8                     __ptext61:
 10954                           	opt stack 0
 10955  0027F8                     ___wmul:
 10956                           	opt stack 21
 10957                           
 10958                           ;incstack = 0
 10959  0027F8  5001               	movf	___wmul@multiplier,w,c
 10960  0027FA  0203               	mulwf	___wmul@multiplicand,c
 10961  0027FC  CFF3 F005          	movff	prodl,___wmul@product
 10962  002800  CFF4 F006          	movff	prodh,___wmul@product+1
 10963  002804  5001               	movf	___wmul@multiplier,w,c
 10964  002806  0204               	mulwf	___wmul@multiplicand+1,c
 10965  002808  50F3               	movf	prodl,w,c
 10966  00280A  2606               	addwf	___wmul@product+1,f,c
 10967  00280C  5002               	movf	___wmul@multiplier+1,w,c
 10968  00280E  0203               	mulwf	___wmul@multiplicand,c
 10969  002810  50F3               	movf	prodl,w,c
 10970  002812  2606               	addwf	___wmul@product+1,f,c
 10971  002814  C005  F001         	movff	___wmul@product,?___wmul
 10972  002818  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10973  00281C  0012               	return	
 10974  00281E                     __end_of___wmul:
 10975                           	opt stack 0
 10976                           tosu	equ	0xFFF
 10977                           tosh	equ	0xFFE
 10978                           tosl	equ	0xFFD
 10979                           pclatu	equ	0xFFB
 10980                           pclath	equ	0xFFA
 10981                           tblptru	equ	0xFF8
 10982                           tblptrh	equ	0xFF7
 10983                           tblptrl	equ	0xFF6
 10984                           tablat	equ	0xFF5
 10985                           prodh	equ	0xFF4
 10986                           prodl	equ	0xFF3
 10987                           intcon	equ	0xFF2
 10988                           intcon2	equ	0xFF1
 10989                           postinc0	equ	0xFEE
 10990                           fsr0h	equ	0xFEA
 10991                           fsr0l	equ	0xFE9
 10992                           wreg	equ	0xFE8
 10993                           postinc1	equ	0xFE6
 10994                           fsr1h	equ	0xFE2
 10995                           fsr1l	equ	0xFE1
 10996                           indf2	equ	0xFDF
 10997                           postinc2	equ	0xFDE
 10998                           postdec2	equ	0xFDD
 10999                           plusw2	equ	0xFDB
 11000                           fsr2h	equ	0xFDA
 11001                           fsr2l	equ	0xFD9
 11002                           status	equ	0xFD8
 11003                           
 11004 ;; *************** function _EUSART1_Transmit_ISR *****************
 11005 ;; Defined at:
 11006 ;;		line 153 in file "UART.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;		None
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;		None
 11011 ;; Return value:  Size  Location     Type
 11012 ;;                  1    wreg      void 
 11013 ;; Registers used:
 11014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11015 ;; Tracked objects:
 11016 ;;		On entry : 0/0
 11017 ;;		On exit  : 0/0
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11020 ;;      Params:         0       0       0       0       0       0       0
 11021 ;;      Locals:         0       0       0       0       0       0       0
 11022 ;;      Temps:          0       0       0       0       0       0       0
 11023 ;;      Totals:         0       0       0       0       0       0       0
 11024 ;;Total ram usage:        0 bytes
 11025 ;; Hardware stack levels used:    1
 11026 ;; Hardware stack levels required when called:    2
 11027 ;; This function calls:
 11028 ;;		i2_UART_buff_get
 11029 ;;		i2_UART_buff_size
 11030 ;; This function is called by:
 11031 ;;		_INTERRUPT_InterruptManager
 11032 ;; This function uses a non-reentrant model
 11033 ;;
 11034                           
 11035                           	psect	text62
 11036  00276C                     __ptext62:
 11037                           	opt stack 0
 11038  00276C                     _EUSART1_Transmit_ISR:
 11039                           	opt stack 21
 11040                           
 11041                           ;UART.c: 154: if (UART_buff_size(&output_buffer) > 0) {
 11042                           
 11043                           ;incstack = 0
 11044  00276C  0E00               	movlw	low _output_buffer
 11045  00276E  6E01               	movwf	i2UART_buff_size@_this,c
 11046  002770  0E04               	movlw	high _output_buffer
 11047  002772  6E02               	movwf	i2UART_buff_size@_this+1,c
 11048  002774  EC93  F014         	call	i2_UART_buff_size	;wreg free
 11049  002778  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 11050  00277A  D00D               	goto	i2l3692
 11051  00277C  5002               	movf	?i2_UART_buff_size+1,w,c
 11052  00277E  E103               	bnz	i2u273_40
 11053  002780  0401               	decf	?i2_UART_buff_size,w,c
 11054  002782  A0D8               	btfss	status,0,c
 11055  002784  D008               	goto	i2l3692
 11056  002786                     i2u273_40:
 11057                           
 11058                           ;UART.c: 155: TXREG1 = UART_buff_get(&output_buffer);
 11059  002786  0E00               	movlw	low _output_buffer
 11060  002788  6E07               	movwf	i2UART_buff_get@_this,c
 11061  00278A  0E04               	movlw	high _output_buffer
 11062  00278C  6E08               	movwf	i2UART_buff_get@_this+1,c
 11063  00278E  EC6D  F00F         	call	i2_UART_buff_get	;wreg free
 11064  002792  6EAD               	movwf	4013,c	;volatile
 11065                           
 11066                           ;UART.c: 156: } else {
 11067  002794  0012               	return	
 11068  002796                     i2l3692:
 11069                           
 11070                           ;UART.c: 157: Transmit_stall = 1;
 11071  002796  0E01               	movlw	1
 11072  002798  6E42               	movwf	_Transmit_stall,c
 11073                           
 11074                           ;UART.c: 158: PIE1bits.TX1IE = 0;
 11075  00279A  989D               	bcf	3997,4,c	;volatile
 11076  00279C  0012               	return	
 11077  00279E                     __end_of_EUSART1_Transmit_ISR:
 11078                           	opt stack 0
 11079                           tosu	equ	0xFFF
 11080                           tosh	equ	0xFFE
 11081                           tosl	equ	0xFFD
 11082                           pclatu	equ	0xFFB
 11083                           pclath	equ	0xFFA
 11084                           tblptru	equ	0xFF8
 11085                           tblptrh	equ	0xFF7
 11086                           tblptrl	equ	0xFF6
 11087                           tablat	equ	0xFF5
 11088                           prodh	equ	0xFF4
 11089                           prodl	equ	0xFF3
 11090                           intcon	equ	0xFF2
 11091                           intcon2	equ	0xFF1
 11092                           postinc0	equ	0xFEE
 11093                           fsr0h	equ	0xFEA
 11094                           fsr0l	equ	0xFE9
 11095                           wreg	equ	0xFE8
 11096                           postinc1	equ	0xFE6
 11097                           fsr1h	equ	0xFE2
 11098                           fsr1l	equ	0xFE1
 11099                           indf2	equ	0xFDF
 11100                           postinc2	equ	0xFDE
 11101                           postdec2	equ	0xFDD
 11102                           plusw2	equ	0xFDB
 11103                           fsr2h	equ	0xFDA
 11104                           fsr2l	equ	0xFD9
 11105                           status	equ	0xFD8
 11106                           
 11107 ;; *************** function i2_UART_buff_size *****************
 11108 ;; Defined at:
 11109 ;;		line 104 in file "UART.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 11112 ;;		 -> output_buffer(206), input_buffer(206), 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;		None
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  2    0[COMRAM] int 
 11117 ;; Registers used:
 11118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11124 ;;      Params:         2       0       0       0       0       0       0
 11125 ;;      Locals:         0       0       0       0       0       0       0
 11126 ;;      Temps:          0       0       0       0       0       0       0
 11127 ;;      Totals:         2       0       0       0       0       0       0
 11128 ;;Total ram usage:        2 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_EUSART1_Transmit_ISR
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text63
 11138  002926                     __ptext63:
 11139                           	opt stack 0
 11140  002926                     i2_UART_buff_size:
 11141                           	opt stack 22
 11142                           
 11143                           ;UART.c: 105: return (_this->count);
 11144                           
 11145                           ;incstack = 0
 11146  002926  EE20 F0CC          	lfsr	2,204
 11147  00292A  5001               	movf	i2UART_buff_size@_this,w,c
 11148  00292C  26D9               	addwf	fsr2l,f,c
 11149  00292E  5002               	movf	i2UART_buff_size@_this+1,w,c
 11150  002930  22DA               	addwfc	fsr2h,f,c
 11151  002932  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 11152  002936  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 11153  00293A  0012               	return	
 11154  00293C                     __end_ofi2_UART_buff_size:
 11155                           	opt stack 0
 11156                           tosu	equ	0xFFF
 11157                           tosh	equ	0xFFE
 11158                           tosl	equ	0xFFD
 11159                           pclatu	equ	0xFFB
 11160                           pclath	equ	0xFFA
 11161                           tblptru	equ	0xFF8
 11162                           tblptrh	equ	0xFF7
 11163                           tblptrl	equ	0xFF6
 11164                           tablat	equ	0xFF5
 11165                           prodh	equ	0xFF4
 11166                           prodl	equ	0xFF3
 11167                           intcon	equ	0xFF2
 11168                           intcon2	equ	0xFF1
 11169                           postinc0	equ	0xFEE
 11170                           fsr0h	equ	0xFEA
 11171                           fsr0l	equ	0xFE9
 11172                           wreg	equ	0xFE8
 11173                           postinc1	equ	0xFE6
 11174                           fsr1h	equ	0xFE2
 11175                           fsr1l	equ	0xFE1
 11176                           indf2	equ	0xFDF
 11177                           postinc2	equ	0xFDE
 11178                           postdec2	equ	0xFDD
 11179                           plusw2	equ	0xFDB
 11180                           fsr2h	equ	0xFDA
 11181                           fsr2l	equ	0xFD9
 11182                           status	equ	0xFD8
 11183                           
 11184 ;; *************** function i2_UART_buff_get *****************
 11185 ;; Defined at:
 11186 ;;		line 83 in file "UART.c"
 11187 ;; Parameters:    Size  Location     Type
 11188 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 11189 ;;		 -> output_buffer(206), input_buffer(206), 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      unsigned char 
 11194 ;; Registers used:
 11195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11201 ;;      Params:         2       0       0       0       0       0       0
 11202 ;;      Locals:         1       0       0       0       0       0       0
 11203 ;;      Temps:          2       0       0       0       0       0       0
 11204 ;;      Totals:         5       0       0       0       0       0       0
 11205 ;;Total ram usage:        5 bytes
 11206 ;; Hardware stack levels used:    1
 11207 ;; Hardware stack levels required when called:    1
 11208 ;; This function calls:
 11209 ;;		i2_UART_buff_modulo_inc
 11210 ;; This function is called by:
 11211 ;;		_EUSART1_Transmit_ISR
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           	psect	text64
 11216  001EDA                     __ptext64:
 11217                           	opt stack 0
 11218  001EDA                     i2_UART_buff_get:
 11219                           	opt stack 21
 11220                           
 11221                           ;UART.c: 84: unsigned char c;
 11222                           ;UART.c: 85: if (_this->count > 0) {
 11223                           
 11224                           ;incstack = 0
 11225  001EDA  EE20 F0CC          	lfsr	2,204
 11226  001EDE  5007               	movf	i2UART_buff_get@_this,w,c
 11227  001EE0  26D9               	addwf	fsr2l,f,c
 11228  001EE2  5008               	movf	i2UART_buff_get@_this+1,w,c
 11229  001EE4  22DA               	addwfc	fsr2h,f,c
 11230  001EE6  0E01               	movlw	1
 11231  001EE8  BEDB               	btfsc	plusw2,7,c
 11232  001EEA  D03C               	goto	i2l3672
 11233  001EEC  0E01               	movlw	1
 11234  001EEE  50DB               	movf	plusw2,w,c
 11235  001EF0  E103               	bnz	i2u271_40
 11236  001EF2  04DE               	decf	postinc2,w,c
 11237  001EF4  A0D8               	btfss	status,0,c
 11238  001EF6  D036               	goto	i2l3672
 11239  001EF8                     i2u271_40:
 11240                           
 11241                           ;UART.c: 86: c = _this->buf[_this->tail];
 11242  001EF8  EE20 F0CA          	lfsr	2,202
 11243  001EFC  5007               	movf	i2UART_buff_get@_this,w,c
 11244  001EFE  26D9               	addwf	fsr2l,f,c
 11245  001F00  5008               	movf	i2UART_buff_get@_this+1,w,c
 11246  001F02  22DA               	addwfc	fsr2h,f,c
 11247  001F04  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 11248  001F08  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 11249  001F0C  5009               	movf	??i2_UART_buff_get,w,c
 11250  001F0E  2407               	addwf	i2UART_buff_get@_this,w,c
 11251  001F10  6ED9               	movwf	fsr2l,c
 11252  001F12  500A               	movf	??i2_UART_buff_get+1,w,c
 11253  001F14  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 11254  001F16  6EDA               	movwf	fsr2h,c
 11255  001F18  50DF               	movf	indf2,w,c
 11256  001F1A  6E0B               	movwf	i2UART_buff_get@c,c
 11257                           
 11258                           ;UART.c: 87: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 11259  001F1C  EE20 F0CA          	lfsr	2,202
 11260  001F20  5007               	movf	i2UART_buff_get@_this,w,c
 11261  001F22  26D9               	addwf	fsr2l,f,c
 11262  001F24  5008               	movf	i2UART_buff_get@_this+1,w,c
 11263  001F26  22DA               	addwfc	fsr2h,f,c
 11264  001F28  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 11265  001F2C  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 11266  001F30  0E00               	movlw	0
 11267  001F32  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 11268  001F34  0EC8               	movlw	200
 11269  001F36  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 11270  001F38  ECE7  F013         	call	i2_UART_buff_modulo_inc	;wreg free
 11271  001F3C  EE20 F0CA          	lfsr	2,202
 11272  001F40  5007               	movf	i2UART_buff_get@_this,w,c
 11273  001F42  26D9               	addwf	fsr2l,f,c
 11274  001F44  5008               	movf	i2UART_buff_get@_this+1,w,c
 11275  001F46  22DA               	addwfc	fsr2h,f,c
 11276  001F48  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 11277  001F4C  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 11278                           
 11279                           ;UART.c: 88: --_this->count;
 11280  001F50  EE20 F0CC          	lfsr	2,204
 11281  001F54  5007               	movf	i2UART_buff_get@_this,w,c
 11282  001F56  26D9               	addwf	fsr2l,f,c
 11283  001F58  5008               	movf	i2UART_buff_get@_this+1,w,c
 11284  001F5A  22DA               	addwfc	fsr2h,f,c
 11285  001F5C  06DE               	decf	postinc2,f,c
 11286  001F5E  0E00               	movlw	0
 11287  001F60  5ADD               	subwfb	postdec2,f,c
 11288                           
 11289                           ;UART.c: 89: } else {
 11290  001F62  D002               	goto	i2l794
 11291  001F64                     i2l3672:
 11292                           
 11293                           ;UART.c: 90: c = 0;
 11294  001F64  0E00               	movlw	0
 11295  001F66  6E0B               	movwf	i2UART_buff_get@c,c
 11296  001F68                     i2l794:
 11297                           
 11298                           ;UART.c: 91: }
 11299                           ;UART.c: 92: return (c);
 11300  001F68  500B               	movf	i2UART_buff_get@c,w,c
 11301  001F6A  0012               	return	
 11302  001F6C                     __end_ofi2_UART_buff_get:
 11303                           	opt stack 0
 11304                           tosu	equ	0xFFF
 11305                           tosh	equ	0xFFE
 11306                           tosl	equ	0xFFD
 11307                           pclatu	equ	0xFFB
 11308                           pclath	equ	0xFFA
 11309                           tblptru	equ	0xFF8
 11310                           tblptrh	equ	0xFF7
 11311                           tblptrl	equ	0xFF6
 11312                           tablat	equ	0xFF5
 11313                           prodh	equ	0xFF4
 11314                           prodl	equ	0xFF3
 11315                           intcon	equ	0xFF2
 11316                           intcon2	equ	0xFF1
 11317                           postinc0	equ	0xFEE
 11318                           fsr0h	equ	0xFEA
 11319                           fsr0l	equ	0xFE9
 11320                           wreg	equ	0xFE8
 11321                           postinc1	equ	0xFE6
 11322                           fsr1h	equ	0xFE2
 11323                           fsr1l	equ	0xFE1
 11324                           indf2	equ	0xFDF
 11325                           postinc2	equ	0xFDE
 11326                           postdec2	equ	0xFDD
 11327                           plusw2	equ	0xFDB
 11328                           fsr2h	equ	0xFDA
 11329                           fsr2l	equ	0xFD9
 11330                           status	equ	0xFD8
 11331                           
 11332 ;; *************** function _EUSART1_Receive_ISR *****************
 11333 ;; Defined at:
 11334 ;;		line 141 in file "UART.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;		None
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  data            1   11[COMRAM] unsigned char 
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      void 
 11341 ;; Registers used:
 11342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11348 ;;      Params:         0       0       0       0       0       0       0
 11349 ;;      Locals:         1       0       0       0       0       0       0
 11350 ;;      Temps:          0       0       0       0       0       0       0
 11351 ;;      Totals:         1       0       0       0       0       0       0
 11352 ;;Total ram usage:        1 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; Hardware stack levels required when called:    2
 11355 ;; This function calls:
 11356 ;;		i2_UART_buff_put
 11357 ;; This function is called by:
 11358 ;;		_INTERRUPT_InterruptManager
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           	psect	text65
 11363  0028A6                     __ptext65:
 11364                           	opt stack 0
 11365  0028A6                     _EUSART1_Receive_ISR:
 11366                           	opt stack 21
 11367                           
 11368                           ;UART.c: 142: if (1 == RC1STAbits.OERR) {
 11369                           
 11370                           ;incstack = 0
 11371  0028A6  A2AB               	btfss	4011,1,c	;volatile
 11372  0028A8  D002               	goto	i2l825
 11373                           
 11374                           ;UART.c: 145: RC1STAbits.CREN = 0;
 11375  0028AA  98AB               	bcf	4011,4,c	;volatile
 11376                           
 11377                           ;UART.c: 146: RC1STAbits.CREN = 1;
 11378  0028AC  88AB               	bsf	4011,4,c	;volatile
 11379  0028AE                     i2l825:
 11380                           
 11381                           ;UART.c: 147: }
 11382                           ;UART.c: 148: unsigned char data = RCREG1;
 11383  0028AE  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 11384                           
 11385                           ;UART.c: 149: UART_buff_put(&input_buffer, data);
 11386  0028B2  0E00               	movlw	low _input_buffer
 11387  0028B4  6E07               	movwf	i2UART_buff_put@_this,c
 11388  0028B6  0E03               	movlw	high _input_buffer
 11389  0028B8  6E08               	movwf	i2UART_buff_put@_this+1,c
 11390  0028BA  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 11391  0028BE  EC0B  F00B         	call	i2_UART_buff_put	;wreg free
 11392                           
 11393                           ;UART.c: 150: PIE1bits.RC1IE == 0;
 11394  0028C2  509D               	movf	3997,w,c	;volatile
 11395  0028C4  0012               	return		;funcret
 11396  0028C6                     __end_of_EUSART1_Receive_ISR:
 11397                           	opt stack 0
 11398                           tosu	equ	0xFFF
 11399                           tosh	equ	0xFFE
 11400                           tosl	equ	0xFFD
 11401                           pclatu	equ	0xFFB
 11402                           pclath	equ	0xFFA
 11403                           tblptru	equ	0xFF8
 11404                           tblptrh	equ	0xFF7
 11405                           tblptrl	equ	0xFF6
 11406                           tablat	equ	0xFF5
 11407                           prodh	equ	0xFF4
 11408                           prodl	equ	0xFF3
 11409                           intcon	equ	0xFF2
 11410                           intcon2	equ	0xFF1
 11411                           postinc0	equ	0xFEE
 11412                           fsr0h	equ	0xFEA
 11413                           fsr0l	equ	0xFE9
 11414                           wreg	equ	0xFE8
 11415                           postinc1	equ	0xFE6
 11416                           fsr1h	equ	0xFE2
 11417                           fsr1l	equ	0xFE1
 11418                           indf2	equ	0xFDF
 11419                           postinc2	equ	0xFDE
 11420                           postdec2	equ	0xFDD
 11421                           plusw2	equ	0xFDB
 11422                           fsr2h	equ	0xFDA
 11423                           fsr2l	equ	0xFD9
 11424                           status	equ	0xFD8
 11425                           
 11426 ;; *************** function i2_UART_buff_put *****************
 11427 ;; Defined at:
 11428 ;;		line 70 in file "UART.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 11431 ;;		 -> output_buffer(206), input_buffer(206), 
 11432 ;;  c               1    8[COMRAM] const unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11444 ;;      Params:         3       0       0       0       0       0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0
 11446 ;;      Temps:          2       0       0       0       0       0       0
 11447 ;;      Totals:         5       0       0       0       0       0       0
 11448 ;;Total ram usage:        5 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    1
 11451 ;; This function calls:
 11452 ;;		i2_UART_buff_modulo_inc
 11453 ;; This function is called by:
 11454 ;;		_EUSART1_Receive_ISR
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text66
 11459  001616                     __ptext66:
 11460                           	opt stack 0
 11461  001616                     i2_UART_buff_put:
 11462                           	opt stack 21
 11463                           
 11464                           ;UART.c: 71: if (_this->count < 200) {
 11465                           
 11466                           ;incstack = 0
 11467  001616  EE20 F0CC          	lfsr	2,204
 11468  00161A  5007               	movf	i2UART_buff_put@_this,w,c
 11469  00161C  26D9               	addwf	fsr2l,f,c
 11470  00161E  5008               	movf	i2UART_buff_put@_this+1,w,c
 11471  001620  22DA               	addwfc	fsr2h,f,c
 11472  001622  0E01               	movlw	1
 11473  001624  BEDB               	btfsc	plusw2,7,c
 11474  001626  D007               	goto	i2l3652
 11475  001628  0E01               	movlw	1
 11476  00162A  50DB               	movf	plusw2,w,c
 11477  00162C  E13A               	bnz	i2l3658
 11478  00162E  0EC8               	movlw	200
 11479  001630  5CDE               	subwf	postinc2,w,c
 11480  001632  B0D8               	btfsc	status,0,c
 11481  001634  D036               	goto	i2l3658
 11482  001636                     i2l3652:
 11483                           
 11484                           ;UART.c: 72: _this->buf[_this->head] = c;
 11485  001636  EE20 F0C8          	lfsr	2,200
 11486  00163A  5007               	movf	i2UART_buff_put@_this,w,c
 11487  00163C  26D9               	addwf	fsr2l,f,c
 11488  00163E  5008               	movf	i2UART_buff_put@_this+1,w,c
 11489  001640  22DA               	addwfc	fsr2h,f,c
 11490  001642  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 11491  001646  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 11492  00164A  500A               	movf	??i2_UART_buff_put,w,c
 11493  00164C  2407               	addwf	i2UART_buff_put@_this,w,c
 11494  00164E  6ED9               	movwf	fsr2l,c
 11495  001650  500B               	movf	??i2_UART_buff_put+1,w,c
 11496  001652  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 11497  001654  6EDA               	movwf	fsr2h,c
 11498  001656  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 11499                           
 11500                           ;UART.c: 73: _this->head = UART_buff_modulo_inc(_this->head, 200);
 11501  00165A  EE20 F0C8          	lfsr	2,200
 11502  00165E  5007               	movf	i2UART_buff_put@_this,w,c
 11503  001660  26D9               	addwf	fsr2l,f,c
 11504  001662  5008               	movf	i2UART_buff_put@_this+1,w,c
 11505  001664  22DA               	addwfc	fsr2h,f,c
 11506  001666  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 11507  00166A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 11508  00166E  0E00               	movlw	0
 11509  001670  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 11510  001672  0EC8               	movlw	200
 11511  001674  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 11512  001676  ECE7  F013         	call	i2_UART_buff_modulo_inc	;wreg free
 11513  00167A  EE20 F0C8          	lfsr	2,200
 11514  00167E  5007               	movf	i2UART_buff_put@_this,w,c
 11515  001680  26D9               	addwf	fsr2l,f,c
 11516  001682  5008               	movf	i2UART_buff_put@_this+1,w,c
 11517  001684  22DA               	addwfc	fsr2h,f,c
 11518  001686  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 11519  00168A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 11520                           
 11521                           ;UART.c: 74: ++_this->count;
 11522  00168E  EE20 F0CC          	lfsr	2,204
 11523  001692  5007               	movf	i2UART_buff_put@_this,w,c
 11524  001694  26D9               	addwf	fsr2l,f,c
 11525  001696  5008               	movf	i2UART_buff_put@_this+1,w,c
 11526  001698  22DA               	addwfc	fsr2h,f,c
 11527  00169A  2ADE               	incf	postinc2,f,c
 11528  00169C  0E00               	movlw	0
 11529  00169E  22DD               	addwfc	postdec2,f,c
 11530                           
 11531                           ;UART.c: 75: } else {
 11532  0016A0  0012               	return	
 11533  0016A2                     i2l3658:
 11534                           
 11535                           ;UART.c: 76: _this->buf[_this->head] = c;
 11536  0016A2  EE20 F0C8          	lfsr	2,200
 11537  0016A6  5007               	movf	i2UART_buff_put@_this,w,c
 11538  0016A8  26D9               	addwf	fsr2l,f,c
 11539  0016AA  5008               	movf	i2UART_buff_put@_this+1,w,c
 11540  0016AC  22DA               	addwfc	fsr2h,f,c
 11541  0016AE  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 11542  0016B2  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 11543  0016B6  500A               	movf	??i2_UART_buff_put,w,c
 11544  0016B8  2407               	addwf	i2UART_buff_put@_this,w,c
 11545  0016BA  6ED9               	movwf	fsr2l,c
 11546  0016BC  500B               	movf	??i2_UART_buff_put+1,w,c
 11547  0016BE  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 11548  0016C0  6EDA               	movwf	fsr2h,c
 11549  0016C2  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 11550                           
 11551                           ;UART.c: 77: _this->head = UART_buff_modulo_inc(_this->head, 200);
 11552  0016C6  EE20 F0C8          	lfsr	2,200
 11553  0016CA  5007               	movf	i2UART_buff_put@_this,w,c
 11554  0016CC  26D9               	addwf	fsr2l,f,c
 11555  0016CE  5008               	movf	i2UART_buff_put@_this+1,w,c
 11556  0016D0  22DA               	addwfc	fsr2h,f,c
 11557  0016D2  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 11558  0016D6  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 11559  0016DA  0E00               	movlw	0
 11560  0016DC  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 11561  0016DE  0EC8               	movlw	200
 11562  0016E0  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 11563  0016E2  ECE7  F013         	call	i2_UART_buff_modulo_inc	;wreg free
 11564  0016E6  EE20 F0C8          	lfsr	2,200
 11565  0016EA  5007               	movf	i2UART_buff_put@_this,w,c
 11566  0016EC  26D9               	addwf	fsr2l,f,c
 11567  0016EE  5008               	movf	i2UART_buff_put@_this+1,w,c
 11568  0016F0  22DA               	addwfc	fsr2h,f,c
 11569  0016F2  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 11570  0016F6  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 11571                           
 11572                           ;UART.c: 78: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 11573  0016FA  EE20 F0CA          	lfsr	2,202
 11574  0016FE  5007               	movf	i2UART_buff_put@_this,w,c
 11575  001700  26D9               	addwf	fsr2l,f,c
 11576  001702  5008               	movf	i2UART_buff_put@_this+1,w,c
 11577  001704  22DA               	addwfc	fsr2h,f,c
 11578  001706  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 11579  00170A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 11580  00170E  0E00               	movlw	0
 11581  001710  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 11582  001712  0EC8               	movlw	200
 11583  001714  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 11584  001716  ECE7  F013         	call	i2_UART_buff_modulo_inc	;wreg free
 11585  00171A  EE20 F0CA          	lfsr	2,202
 11586  00171E  5007               	movf	i2UART_buff_put@_this,w,c
 11587  001720  26D9               	addwf	fsr2l,f,c
 11588  001722  5008               	movf	i2UART_buff_put@_this+1,w,c
 11589  001724  22DA               	addwfc	fsr2h,f,c
 11590  001726  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 11591  00172A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 11592  00172E  0012               	return	
 11593  001730                     __end_ofi2_UART_buff_put:
 11594                           	opt stack 0
 11595                           tosu	equ	0xFFF
 11596                           tosh	equ	0xFFE
 11597                           tosl	equ	0xFFD
 11598                           pclatu	equ	0xFFB
 11599                           pclath	equ	0xFFA
 11600                           tblptru	equ	0xFF8
 11601                           tblptrh	equ	0xFF7
 11602                           tblptrl	equ	0xFF6
 11603                           tablat	equ	0xFF5
 11604                           prodh	equ	0xFF4
 11605                           prodl	equ	0xFF3
 11606                           intcon	equ	0xFF2
 11607                           intcon2	equ	0xFF1
 11608                           postinc0	equ	0xFEE
 11609                           fsr0h	equ	0xFEA
 11610                           fsr0l	equ	0xFE9
 11611                           wreg	equ	0xFE8
 11612                           postinc1	equ	0xFE6
 11613                           fsr1h	equ	0xFE2
 11614                           fsr1l	equ	0xFE1
 11615                           indf2	equ	0xFDF
 11616                           postinc2	equ	0xFDE
 11617                           postdec2	equ	0xFDD
 11618                           plusw2	equ	0xFDB
 11619                           fsr2h	equ	0xFDA
 11620                           fsr2l	equ	0xFD9
 11621                           status	equ	0xFD8
 11622                           
 11623 ;; *************** function i2_UART_buff_modulo_inc *****************
 11624 ;; Defined at:
 11625 ;;		line 108 in file "UART.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;  value           2    0[COMRAM] const unsigned int 
 11628 ;;  modulus         2    2[COMRAM] const unsigned int 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 11631 ;; Return value:  Size  Location     Type
 11632 ;;                  2    0[COMRAM] unsigned int 
 11633 ;; Registers used:
 11634 ;;		wreg, status,2, status,0
 11635 ;; Tracked objects:
 11636 ;;		On entry : 0/0
 11637 ;;		On exit  : 0/0
 11638 ;;		Unchanged: 0/0
 11639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11640 ;;      Params:         4       0       0       0       0       0       0
 11641 ;;      Locals:         2       0       0       0       0       0       0
 11642 ;;      Temps:          0       0       0       0       0       0       0
 11643 ;;      Totals:         6       0       0       0       0       0       0
 11644 ;;Total ram usage:        6 bytes
 11645 ;; Hardware stack levels used:    1
 11646 ;; This function calls:
 11647 ;;		Nothing
 11648 ;; This function is called by:
 11649 ;;		i2_UART_buff_put
 11650 ;;		i2_UART_buff_get
 11651 ;; This function uses a non-reentrant model
 11652 ;;
 11653                           
 11654                           	psect	text67
 11655  0027CE                     __ptext67:
 11656                           	opt stack 0
 11657  0027CE                     i2_UART_buff_modulo_inc:
 11658                           	opt stack 21
 11659                           
 11660                           ;UART.c: 109: unsigned int my_value = value + 1;
 11661                           
 11662                           ;incstack = 0
 11663  0027CE  0E01               	movlw	1
 11664  0027D0  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 11665  0027D2  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 11666  0027D4  0E00               	movlw	0
 11667  0027D6  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 11668  0027D8  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 11669                           
 11670                           ;UART.c: 110: if (my_value >= modulus) {
 11671  0027DA  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 11672  0027DC  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 11673  0027DE  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 11674  0027E0  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 11675  0027E2  A0D8               	btfss	status,0,c
 11676  0027E4  D004               	goto	i2l3212
 11677                           
 11678                           ;UART.c: 111: my_value = 0;
 11679  0027E6  0E00               	movlw	0
 11680  0027E8  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 11681  0027EA  0E00               	movlw	0
 11682  0027EC  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 11683  0027EE                     i2l3212:
 11684                           
 11685                           ;UART.c: 112: }
 11686                           ;UART.c: 113: return (my_value);
 11687  0027EE  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 11688  0027F2  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 11689  0027F6  0012               	return	
 11690  0027F8                     __end_ofi2_UART_buff_modulo_inc:
 11691                           	opt stack 0
 11692                           tosu	equ	0xFFF
 11693                           tosh	equ	0xFFE
 11694                           tosl	equ	0xFFD
 11695                           pclatu	equ	0xFFB
 11696                           pclath	equ	0xFFA
 11697                           tblptru	equ	0xFF8
 11698                           tblptrh	equ	0xFF7
 11699                           tblptrl	equ	0xFF6
 11700                           tablat	equ	0xFF5
 11701                           prodh	equ	0xFF4
 11702                           prodl	equ	0xFF3
 11703                           intcon	equ	0xFF2
 11704                           intcon2	equ	0xFF1
 11705                           postinc0	equ	0xFEE
 11706                           fsr0h	equ	0xFEA
 11707                           fsr0l	equ	0xFE9
 11708                           wreg	equ	0xFE8
 11709                           postinc1	equ	0xFE6
 11710                           fsr1h	equ	0xFE2
 11711                           fsr1l	equ	0xFE1
 11712                           indf2	equ	0xFDF
 11713                           postinc2	equ	0xFDE
 11714                           postdec2	equ	0xFDD
 11715                           plusw2	equ	0xFDB
 11716                           fsr2h	equ	0xFDA
 11717                           fsr2l	equ	0xFD9
 11718                           status	equ	0xFD8
 11719                           
 11720 ;; *************** function _ADC_ISR *****************
 11721 ;; Defined at:
 11722 ;;		line 130 in file "mcc_generated_files/adc.c"
 11723 ;; Parameters:    Size  Location     Type
 11724 ;;		None
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;		None
 11727 ;; Return value:  Size  Location     Type
 11728 ;;                  1    wreg      void 
 11729 ;; Registers used:
 11730 ;;		None
 11731 ;; Tracked objects:
 11732 ;;		On entry : 0/0
 11733 ;;		On exit  : 0/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11736 ;;      Params:         0       0       0       0       0       0       0
 11737 ;;      Locals:         0       0       0       0       0       0       0
 11738 ;;      Temps:          0       0       0       0       0       0       0
 11739 ;;      Totals:         0       0       0       0       0       0       0
 11740 ;;Total ram usage:        0 bytes
 11741 ;; Hardware stack levels used:    1
 11742 ;; This function calls:
 11743 ;;		Nothing
 11744 ;; This function is called by:
 11745 ;;		_INTERRUPT_InterruptManager
 11746 ;; This function uses a non-reentrant model
 11747 ;;
 11748                           
 11749                           	psect	text68
 11750  0029BA                     __ptext68:
 11751                           	opt stack 0
 11752  0029BA                     _ADC_ISR:
 11753                           	opt stack 23
 11754                           
 11755                           ;adc.c: 133: PIR1bits.ADIF = 0;
 11756                           
 11757                           ;incstack = 0
 11758  0029BA  9C9E               	bcf	3998,6,c	;volatile
 11759  0029BC  0012               	return		;funcret
 11760  0029BE                     __end_of_ADC_ISR:
 11761                           	opt stack 0
 11762  0000                     tosu	equ	0xFFF
 11763                           tosh	equ	0xFFE
 11764                           tosl	equ	0xFFD
 11765                           pclatu	equ	0xFFB
 11766                           pclath	equ	0xFFA
 11767                           tblptru	equ	0xFF8
 11768                           tblptrh	equ	0xFF7
 11769                           tblptrl	equ	0xFF6
 11770                           tablat	equ	0xFF5
 11771                           prodh	equ	0xFF4
 11772                           prodl	equ	0xFF3
 11773                           intcon	equ	0xFF2
 11774                           intcon2	equ	0xFF1
 11775                           postinc0	equ	0xFEE
 11776                           fsr0h	equ	0xFEA
 11777                           fsr0l	equ	0xFE9
 11778                           wreg	equ	0xFE8
 11779                           postinc1	equ	0xFE6
 11780                           fsr1h	equ	0xFE2
 11781                           fsr1l	equ	0xFE1
 11782                           indf2	equ	0xFDF
 11783                           postinc2	equ	0xFDE
 11784                           postdec2	equ	0xFDD
 11785                           plusw2	equ	0xFDB
 11786                           fsr2h	equ	0xFDA
 11787                           fsr2l	equ	0xFD9
 11788                           status	equ	0xFD8
 11789                           tosu	equ	0xFFF
 11790                           tosh	equ	0xFFE
 11791                           tosl	equ	0xFFD
 11792                           pclatu	equ	0xFFB
 11793                           pclath	equ	0xFFA
 11794                           tblptru	equ	0xFF8
 11795                           tblptrh	equ	0xFF7
 11796                           tblptrl	equ	0xFF6
 11797                           tablat	equ	0xFF5
 11798                           prodh	equ	0xFF4
 11799                           prodl	equ	0xFF3
 11800                           intcon	equ	0xFF2
 11801                           intcon2	equ	0xFF1
 11802                           postinc0	equ	0xFEE
 11803                           fsr0h	equ	0xFEA
 11804                           fsr0l	equ	0xFE9
 11805                           wreg	equ	0xFE8
 11806                           postinc1	equ	0xFE6
 11807                           fsr1h	equ	0xFE2
 11808                           fsr1l	equ	0xFE1
 11809                           indf2	equ	0xFDF
 11810                           postinc2	equ	0xFDE
 11811                           postdec2	equ	0xFDD
 11812                           plusw2	equ	0xFDB
 11813                           fsr2h	equ	0xFDA
 11814                           fsr2l	equ	0xFD9
 11815                           status	equ	0xFD8
 11816                           
 11817                           	psect	text69
 11818  000000                     __ptext69:
 11819                           	opt stack 0
 11820                           tosu	equ	0xFFF
 11821                           tosh	equ	0xFFE
 11822                           tosl	equ	0xFFD
 11823                           pclatu	equ	0xFFB
 11824                           pclath	equ	0xFFA
 11825                           tblptru	equ	0xFF8
 11826                           tblptrh	equ	0xFF7
 11827                           tblptrl	equ	0xFF6
 11828                           tablat	equ	0xFF5
 11829                           prodh	equ	0xFF4
 11830                           prodl	equ	0xFF3
 11831                           intcon	equ	0xFF2
 11832                           intcon2	equ	0xFF1
 11833                           postinc0	equ	0xFEE
 11834                           fsr0h	equ	0xFEA
 11835                           fsr0l	equ	0xFE9
 11836                           wreg	equ	0xFE8
 11837                           postinc1	equ	0xFE6
 11838                           fsr1h	equ	0xFE2
 11839                           fsr1l	equ	0xFE1
 11840                           indf2	equ	0xFDF
 11841                           postinc2	equ	0xFDE
 11842                           postdec2	equ	0xFDD
 11843                           plusw2	equ	0xFDB
 11844                           fsr2h	equ	0xFDA
 11845                           fsr2l	equ	0xFD9
 11846                           status	equ	0xFD8
 11847                           
 11848                           	psect	rparam
 11849  0000                     tosu	equ	0xFFF
 11850                           tosh	equ	0xFFE
 11851                           tosl	equ	0xFFD
 11852                           pclatu	equ	0xFFB
 11853                           pclath	equ	0xFFA
 11854                           tblptru	equ	0xFF8
 11855                           tblptrh	equ	0xFF7
 11856                           tblptrl	equ	0xFF6
 11857                           tablat	equ	0xFF5
 11858                           prodh	equ	0xFF4
 11859                           prodl	equ	0xFF3
 11860                           intcon	equ	0xFF2
 11861                           intcon2	equ	0xFF1
 11862                           postinc0	equ	0xFEE
 11863                           fsr0h	equ	0xFEA
 11864                           fsr0l	equ	0xFE9
 11865                           wreg	equ	0xFE8
 11866                           postinc1	equ	0xFE6
 11867                           fsr1h	equ	0xFE2
 11868                           fsr1l	equ	0xFE1
 11869                           indf2	equ	0xFDF
 11870                           postinc2	equ	0xFDE
 11871                           postdec2	equ	0xFDD
 11872                           plusw2	equ	0xFDB
 11873                           fsr2h	equ	0xFDA
 11874                           fsr2l	equ	0xFD9
 11875                           status	equ	0xFD8
 11876                           
 11877                           	psect	temp
 11878  000043                     btemp:
 11879                           	opt stack 0
 11880  000043                     	ds	1
 11881  0000                     int$flags	set	btemp
 11882                           tosu	equ	0xFFF
 11883                           tosh	equ	0xFFE
 11884                           tosl	equ	0xFFD
 11885                           pclatu	equ	0xFFB
 11886                           pclath	equ	0xFFA
 11887                           tblptru	equ	0xFF8
 11888                           tblptrh	equ	0xFF7
 11889                           tblptrl	equ	0xFF6
 11890                           tablat	equ	0xFF5
 11891                           prodh	equ	0xFF4
 11892                           prodl	equ	0xFF3
 11893                           intcon	equ	0xFF2
 11894                           intcon2	equ	0xFF1
 11895                           postinc0	equ	0xFEE
 11896                           fsr0h	equ	0xFEA
 11897                           fsr0l	equ	0xFE9
 11898                           wreg	equ	0xFE8
 11899                           postinc1	equ	0xFE6
 11900                           fsr1h	equ	0xFE2
 11901                           fsr1l	equ	0xFE1
 11902                           indf2	equ	0xFDF
 11903                           postinc2	equ	0xFDE
 11904                           postdec2	equ	0xFDD
 11905                           plusw2	equ	0xFDB
 11906                           fsr2h	equ	0xFDA
 11907                           fsr2l	equ	0xFD9
 11908                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         1008
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      66
    BANK0           160     35     149
    BANK1           256      0     254
    BANK2           256      0     200
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK0[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK1[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), CRCcheck@arrayHolder(COMRAM[3]), receiveData@holder_1388(BANK0[3]), receiveData@holder(BANK0[3]), 
		 -> rx_buffer(BANK2[200]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), ring_buffer(BANK1[206]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK0[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> NULL(NULL[0]), receiveArray(BANK0[40]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_FuseSystem
    i2_Update->i2_writeRegisters
    i2_writeRegisters->i2_Delay
    _FuseSystem->i2_EnableSlavePower
    i2_EnableSlavePower->i2_SetPin595
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _updateComms->_receiveData
    _respondECU->_sendData
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _ToSend->_FastTransfer_buffer_put
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _processPowerRequest->_EnableSlavePower
    _SYSTEM_Initialize->_begin
    _begin->___awdiv
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _Update->_writeRegisters
    _StartUp595->_Clear595
    _Clear595->_writeRegisters
    _writeRegisters->_Delay
    _EnableSlavePower->_SetPin595
    _ComputeStorageData->_DATAEE_ReadByte
    _CoolingStop->_PotClear
    _CoolingStart->_PotSetpoint
    _PotSetpoint->_Delay
    _PotClear->_Delay

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   52910
                                             30 BANK0      5     5      0
                 _ComputeStorageData
                       _CoolingCheck
                       _CoolingStart
                        _CoolingStop
                   _DATAEE_WriteByte
                         _PDUStartup
                 _PWM4_LoadDutyValue
                        _PotSetpoint
                  _SYSTEM_Initialize
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   26239
                _processPowerRequest
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    8909
                              _Delay
                             _ToSend
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             12 BANK0      5     5      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                              8 BANK0      4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1751
                                             13 BANK0      3     1      2
            _FastTransfer_buffer_put
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1535
                                              6 BANK0      7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     746
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0    5462
                                             12 BANK0     18    18      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             11 BANK0      1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                              6 BANK0      5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                              6 BANK0      5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                              2 BANK0      2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _processPowerRequest                                  2     0      2   11868
                                             13 BANK0      2     0      2
                   _EnableSlavePower
                             _Update
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2478
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1463
                                              8 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     599
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                              8 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0   14971
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (3) _Update                                               0     0      0    1621
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    3174
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             2     2      0    1720
                                             13 BANK0      2     2      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (4) _writeRegisters                                       4     4      0    1621
                                              9 BANK0      4     4      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _EnableSlavePower                                     3     1      2   10015
                                             10 BANK0      3     1      2
                          _SetPin595
 ---------------------------------------------------------------------------------
 (4) _SetPin595                                           10     4      6    8283
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0     161
                                              1 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1    1020
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _CoolingStop                                          0     0      0    1892
                 _PWM4_LoadDutyValue
                           _PotClear
 ---------------------------------------------------------------------------------
 (1) _CoolingStart                                         0     0      0    3763
                 _PWM4_LoadDutyValue
                           _PotClear
                        _PotSetpoint
 ---------------------------------------------------------------------------------
 (1) _PotSetpoint                                         10     8      2    1871
                                              9 BANK0     10     8      2
                              _Delay
 ---------------------------------------------------------------------------------
 (2) _PotClear                                             2     2      0    1522
                                              9 BANK0      2     2      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                9     5      4    1454
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     370
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _CoolingCheck                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0   11888
                                             21 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0   10679
                         _FuseSystem
                        _ReadCurrent
 ---------------------------------------------------------------------------------
 (9) _ReadCurrent                                          1     1      0    5112
                                             13 COMRAM     1     1      0
                  _ADC_GetConversion
                        i2_SetPin595
                           i2_Update
 ---------------------------------------------------------------------------------
 (10) i2_Update                                            0     0      0     212
                   i2_writeRegisters
 ---------------------------------------------------------------------------------
 (11) i2_writeRegisters                                    4     4      0     212
                                              9 COMRAM     4     4      0
                            i2_Delay
 ---------------------------------------------------------------------------------
 (12) i2_Delay                                             9     5      4      98
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (9) _FuseSystem                                           8     8      0    5567
                                             13 COMRAM     8     8      0
                             ___wmul
                 i2_EnableSlavePower
 ---------------------------------------------------------------------------------
 (10) i2_EnableSlavePower                                  3     1      2    5078
                                             10 COMRAM     3     1      2
                        i2_SetPin595
 ---------------------------------------------------------------------------------
 (10) i2_SetPin595                                        10     4      6    4746
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ComputeStorageData
     _DATAEE_ReadByte
   _CoolingCheck
   _CoolingStart
     _PWM4_LoadDutyValue
     _PotClear
       _Delay
     _PotSetpoint
       _Delay
   _CoolingStop
     _PWM4_LoadDutyValue
     _PotClear
       _Delay
   _DATAEE_WriteByte
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _PWM4_LoadDutyValue
   _PotSetpoint
     _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _begin
       ___awdiv
   _updateComms
     _processPowerRequest
       _EnableSlavePower
         _SetPin595
       _Update
         _writeRegisters
           _Delay
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _TMR1_ISR
     _FuseSystem
       ___wmul
       i2_EnableSlavePower
         i2_SetPin595
     _ReadCurrent
       _ADC_GetConversion
       i2_SetPin595
       i2_Update
         i2_writeRegisters
           i2_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      FE       6       99.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     23      95       4       93.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      42       1       70.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     439       9        0.0%
DATA                 0      0     439      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Oct 08 01:50:04 2016

      __end_of_FastTransfer_buffer_flush 21BE                   i2_UART_buff_modulo_inc 27CE  
                          ??_CoolingStop 00DD                           ??_CoolingCheck 00D2  
                           _rx_array_inx 0097                             ___awdiv@sign 00D7  
                    ___wmul@multiplicand 0003                           ??_CoolingStart 00E5  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                                    l170 2648                                      l404 1CD0  
                                    l476 2206                                      l741 1E9A  
                                    l743 1EA6                                      l922 1AA6  
                                    l914 154E                                      l923 1AEA  
                                    l917 15B4                                      l794 1E3E  
                           __CFG_CPB$OFF 000000                                      _PR2 000FBB  
                           __CFG_CPD$OFF 000000                          _timer1ReloadVal 003A  
                        __end_of_ADC_ISR 29BE     FastTransfer_buffer_flush@clearBuffer 00DC  
                        _TMR2_Initialize 293C                          _PWM4_Initialize 2950  
                                    prod 000FF3                                      tosl 000FFD  
                                    wreg 000FE8            i2UART_buff_modulo_inc@modulus 0003  
                           __CFG_LVP$OFF 000000                                     l4004 2386  
                                   l4020 2710                                     l4014 25DA  
                                   l4008 23A4                                     l4024 2722  
                                   l4200 11BC                                     l4034 1306  
                                   l4202 11E6                                     l4116 1E8E  
                                   l4108 1E58                                     l4060 21E2  
                                   l4028 1284                                     l4204 11EC  
                                   l4214 2574                                     l4054 21C6  
                                   l4070 221A                                     l4224 25A2  
                                   l4048 1E38                                     l4208 1228  
                                   l4250 1D08                                     l4410 027C  
                                   l4402 0238                                     l4090 0E3C  
                                   l4172 19B0                                     l4164 1946  
                                   l4180 1A16                                     l4260 1D38  
                                   l4244 1CF2                                     l4068 2210  
                                   l4500 0752                                     l4174 19D2  
                                   l4166 1968                                     l4502 076E  
                                   l4430 0402                                     l4422 0358  
                                   l4414 02AE                                     l4406 0244  
                                   l4510 077E                                     l4190 1144  
                                   l4176 19F4                                     l4168 198A  
                                   l4256 1D26                                     l4272 1D76  
                                   l4520 1C30                                     l4432 0416  
                                   l4192 115E                                     l4258 1D32  
                                   l4530 1C70                                     l4450 04F8  
                                   l4370 00EC                                     l4194 117A  
                                   l4604 15EA                                     l4276 1D8A  
                                   l4268 1D68                                     l4532 1C80  
                                   l4524 1C48                                     l4460 05B0  
                                   l4452 0512                                     l4428 03FC  
                                   l4196 1194                                     l4542 1CC0  
                                   l4526 1C58                                     l4518 1C20  
                                   l4454 052C                                     l4446 04C2  
                                   l4462 05CC                                     l4390 01DA  
                                   l4374 0120                                     l4198 11B0  
                                   l4536 1C98                                     l4456 0546  
                                   l4448 04DC                                     l4472 05DC  
                                   l4392 01F4                                     l4800 14AC  
                                   l4570 173A                                     l4538 1CA8  
                                   l4490 069A                                     l4458 0560  
                                   l4394 01FA                                     l4378 0124  
                                   l4580 1772                                     l4492 06B4  
                                   l4574 1750                                     l4494 06CE  
                                   l4486 0664                                     l4496 06E8  
                                   l4488 067E                                     l4680 2700  
                                   l4808 14C8                     receiveData@crcHolder 00EA  
                                   l4594 1592                                     l4498 0702  
                                   l4790 148A                                     l3998 2616  
                                   _CRC8 21BE                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   u3200 1DB4                                     _LATD 000F8C  
                                   _LATE 000F8D                                     u4030 1AEA  
                                   u3240 1928                                     u3261 0E3A  
                                   u4070 26EC                                     u4055 2658  
                                   u4056 265A                                     u3328 112E  
                                   u3338 1148                                     u3348 1162  
                                   u3518 00F4                                     u3358 117E  
                                   u3519 010A                                     u3368 1198  
                                   u3618 01DE                                     u3538 0128  
                                   u3378 11C0                                     u3539 013E  
                                   u3558 0148                                     u3398 1210  
                                   u4287 238E                                     u3559 015E  
                                   u3808 0564                                     u3648 0248  
                                   u3681 02F2                                     u3649 025E  
                                   u3818 05B4                                     u3738 04AC  
                                   u3658 0280                                     u3578 0168  
                                   u3498 00BE                                     u3659 0296  
                                   u3579 017E                                     u3499 00D4  
                                   u3908 0706                                     u3748 04C6  
                                   u3588 0186                                     u3589 019C  
                                   u3918 0756                                     u3838 064E  
                                   u3758 04E0                                     u3598 01A4  
                                   i2l31 27B6                                     u3599 01BA  
                                   u3848 0668                                     u3768 04FC  
                                   u3858 0682                                     u3778 0516  
                                   u3868 069E                                     u3788 0530  
                                   u3878 06B8                                     u3798 054A  
                                   u3888 06D2                                     i2l73 0070  
                                   i2l65 004E                                     u3898 06EC  
                                   i2l67 005A                                     i2l69 0066  
                                   _TMR2 000FBC                                     _WPUB 000F61  
                        __end_ofi2_Delay 2526                                     _data 0024  
                                   _main 13B2                 __end_of_EnableSlavePower 1A40  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                                     btemp 0043  
                          __CFG_BORV$190 000000                                     pclat 000FFA  
                                   prodh 000FF4                                     prodl 000FF3  
        __end_of_FastTransfer_buffer_put 0FBE                                     start 00AC  
                          __CFG_IESO$OFF 000000                        ?i2_writeRegisters 0001  
                           ___param_bank 000010                            ??_ReadCurrent 000E  
                     ??i2_writeRegisters 000A           i2UART_buff_modulo_inc@my_value 0005  
              __size_of_DATAEE_WriteByte 003C                                    ?_CRC8 00D2  
         __size_of_OSCILLATOR_Initialize 000E            __end_of_OSCILLATOR_Initialize 2998  
                     crcBufS_put@address 00D4                                    ?_main 0001  
                        __end_of___awdiv 1D94                                    _EEADR 000FA9  
                                  _ANSB3 0079CB                                    _ANSB4 0079CC  
                        _TMR1_StartTimer 29B2                                    _ANSD7 0079DF  
                        ___awdiv@divisor 00D4                                    _T1CON 000FCD  
                                  _T2CON 000FBA                                    _LATB0 007C50  
                                  _LATA3 007C4B                                    _LATB3 007C53  
                                  _LATB4 007C54                                    _LATB5 007C55  
                                  _LATD4 007C64                                    _LATD5 007C65  
                                  _LATD6 007C66                                    _LATD7 007C67  
                         __CFG_DEBUG$OFF 000000                              ?_PDUStartup 0001  
                                  i2l741 1FB0                                    i2l743 1FBA  
                                  i2l680 1110                                    i2l825 28AE  
                                  _MCSOn 003E                                    i2l794 1F68  
                        ___awdiv@counter 00D6                       _PWM4_LoadDutyValue 265C  
                                  _TMR1H 000FCF                                    _TMR1L 000FCE  
                    __end_of_CoolingStop 2978                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
                                  _Delay 2372                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                     _EUSART1_Transmit_ISR 276C  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                         ??_writeRegisters 00DB  
                       __end_of_TMR1_ISR 276C                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                                  _begin 23D6                          _DATAEE_ReadByte 2910  
                         __CFG_EBTRB$OFF 000000                                    _group 008A  
                    ?_PWM4_LoadDutyValue 00D2                       __CFG_MCLRE$EXTMCLR 000000  
                                  main@i 00F2                                    main@j 00F0  
                __end_of_TMR1_Initialize 2862                         __end_ofi2_Update 29AE  
                                  pclath 000FFA                                    tablat 000FF5  
                          ??_Receive_get 00DD                                    plusw2 000FDB  
                         begin@stuffpeek 00E5                     __size_of_crcBufS_put 0100  
                                  status 000FD8                         __end_of_Clear595 25A8  
                         __CFG_HFOFST$ON 000000                          _TMR2_StartTimer 29AE  
                           ?_receiveData 0001                           __CFG_PBADEN$ON 000000  
                   PotSetpoint@new_point 00DB                             __end_of_CRC8 222C  
                        __initialization 20DA               __end_of_EUSART1_Initialize 256A  
                           __end_of_main 14FC                               _CurrentADC 006C  
                   ??_PWM4_LoadDutyValue 00D4                               ToSend@what 00DF  
                                 ??_CRC8 00D5                  __end_of_PWM4_Initialize 2964  
                __end_of_TMR2_Initialize 2950                                ??_ADC_ISR 0001  
            ?_INTERRUPT_InterruptManager 0001                     PotSetpoint@set_point 00DF  
                             _FuseSystem 0FBE                                   ??_main 00F0  
                    __end_of_ReadCurrent 0E12                         __end_of_PotClear 1B24  
                          __activetblptr 000002                         __end_of_Send_put 26D0  
              __size_ofi2_UART_buff_size 0016                                   ?_Delay 00D2  
                  ?_EUSART1_Transmit_ISR 0001            FastTransfer_buffer_put@towhat 00DB  
                     i2_EnableSlavePower 1B24                                   ?_begin 00DA  
                              ??i2_Delay 0005                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                            FuseSystem@i 0012                                   _ADRESH 000FC4  
                                 _ADRESL 000FC3                                   _EEDATA 000FA8  
                                 _CCPR2H 000F68                                   _CCPR2L 000F67  
                                 _EECON2 000FA7                         ___awdiv@dividend 00D2  
                                 _ANSELA 000F38                                   _ANSELB 000F39  
                                 _ANSELC 000F3A                                   _ANSELD 000F3B  
                                 _ANSELE 000F3C                                   _T1GCON 000FCC  
                   __end_of_CoolingCheck 29BA                          i2_UART_buff_get 1EDA  
                                 _RC1STA 000FAB                                   i2l3020 1FA8  
                                 i2l3012 1F7C                                   i2l3200 1BC2  
                        i2_UART_buff_put 1616                                   i2l3212 27EE  
                                 i2l3204 1BE0                                   i2l3300 0FC6  
                                 Delay@i 00D7                                   i2l3310 101C  
                                 i2l3320 107C                                   i2l3304 0FD6  
                                 i2l3322 108C                                   i2l3324 109C  
                                 i2l3332 10CC                                   i2l3316 1038  
                                 i2l3190 1B46                                   i2l3326 10AC  
                                 i2l3318 106C                                   i2l3334 1102  
                         __CFG_WDTEN$OFF 000000                                   i2l3192 1B64  
                                 i2l3328 10BC                                   i2l3360 0ACA  
                                 i2l3354 09B2                                   i2l3196 1B86  
                                 i2l3188 1B28                                   i2l3372 0CFA  
                                 i2l3348 089A                                   i2l3198 1BA4  
                                 i2l3366 0BE2                                   i2l3710 2764  
                                 i2l2912 24EE              UART_buff_modulo_inc@modulus 00D4  
                                 i2l3652 1636                                   i2l2916 2508  
                                 i2l3672 1F64                                   i2l3658 16A2  
                                 i2l3692 2796                                   _TABLAT 000FF5  
                                 _RCREG1 000FAE                                   _OSCCON 000FD3  
            __end_of_processPowerRequest 1CD6                                   _SPBRG1 000FAF  
                   __end_of_CoolingStart 28A6                      ?i2_EnableSlavePower 000B  
                                 _TX1STA 000FAC                                   _TRISB3 007C9B  
                                 _TRISB4 007C9C                                   _TRISB5 007C9D  
                                 _TXREG1 000FAD                      __size_of_PDUStartup 006E  
                         __CFG_XINST$OFF 000000                                   _ToSend 281E  
                          ??_PotSetpoint 00DD                      __end_of_Receive_get 298A  
                           _CCPTMRS1bits 000F48              ??_FastTransfer_buffer_flush 00DE  
                                 _Update 29A2                       __size_of_SetPin595 006E  
                          _output_buffer 0400                  __end_of_TMR1_StartTimer 29B6  
                                 ___wmul 27F8                                ??___awdiv 00D6  
                              CRC8@tempI 00D7                           __CFG_STVREN$ON 000000  
                            _CoolingStop 2964                                   _memset 2706  
                                 clear_0 20E0                                   clear_1 20EC  
                                 clear_2 20F8                                   clear_3 2104  
                                 clear_4 2110                                   clear_5 211C  
                       ___awdiv@quotient 00D8                     ??i2_EnableSlavePower 000D  
                                 main@UP 00F4                                   _rx_len 0098  
                       __end_of_sendData 1262                  __end_of_DATAEE_ReadByte 2926  
                           __pdataCOMRAM 0040                            Send_put@_data 00DD  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8         __size_of_FastTransfer_buffer_put 01AC  
                             _StartUp595 2308                 ADC_GetConversion@channel 0005  
           __end_of_UART_buff_modulo_inc 2620                  __end_of_TMR2_StartTimer 29B2  
          __size_of_INTERRUPT_Initialize 000A                        ReadCurrent@gather 000E  
                       ?_TMR1_Initialize 0001                        _SYSTEM_Initialize 2064  
                             __accesstop 0060                  __end_of__initialization 2140  
                           ?i2_SetPin595 0001                       ?_SYSTEM_Initialize 0001  
                          ___rparam_used 000001                  ?i2_UART_buff_modulo_inc 0001  
                           ?_updateComms 0001                            __end_of_Delay 23D6  
                         __pcstackCOMRAM 0001                      ??_SYSTEM_Initialize 00E7  
                       crcBufS_put@_this 00D2                              _ReadCurrent 0782  
                          __end_of_begin 2436                                ?_TMR1_ISR 0001  
 __end_of_FastTransfer_buffer_modulo_inc 25E4  __size_of_FastTransfer_buffer_modulo_inc 003C  
         _FastTransfer_buffer_modulo_inc 25A8                         _DATAEE_WriteByte 2620  
                       ?_TMR2_Initialize 0001                         ?_PWM4_Initialize 0001  
           FastTransfer_buffer_put@_this 00D8                              ToSend@where 00E1  
                            ?_FuseSystem 0001                                ?i2_Update 0001  
                    __end_of_PotSetpoint 1616              __size_of_ComputeStorageData 0110  
            PWM4_LoadDutyValue@dutyValue 00D2                       UART_buff_get@_this 00D8  
                            _Currentcomp 0078                    __end_of_UART_buff_get 1E44  
                 ??_EUSART1_Transmit_ISR 000C                    __end_of_UART_buff_put 13B2  
                              ?_Clear595 0001                                  ??_Delay 00D6  
                __end_ofi2_UART_buff_get 1F6C                  __end_ofi2_UART_buff_put 1730  
            __end_of_EUSART1_Receive_ISR 28C6                _FastTransfer_buffer_flush 214E  
                                CRC8@crc 00D8                                  CRC8@len 00D4  
                                CRC8@sum 00D5                                  ??_begin 00E7  
                      __end_of_SetPin595 2308                __end_of_SYSTEM_Initialize 20DA  
                 receiveData@holder_1388 00E7                      _addressErrorCounter 0084  
                             __pbssBANK0 0060                               __pbssBANK1 0100  
                             __pbssBANK2 0200                               __pbssBANK3 0300  
                             __pbssBANK4 0400                          __CFG_PLLCFG$OFF 000000  
                            _Receive_get 2978           __end_ofi2_UART_buff_modulo_inc 27F8  
                      begin@givenAddress 00DD                        ?_EnableSlavePower 00DC  
                __size_of_UART_buff_init 0022                  __size_of_UART_buff_size 0018  
                              ?_PotClear 0001                                ?_Send_put 0001  
                     ??_EnableSlavePower 00DE                     __size_of_receiveData 06D2  
                                ?_ToSend 00DF                       __CFG_CCP2MX$PORTC1 000000  
                                ?_Update 0001                                  ?___wmul 0001  
                       ?_TMR1_StartTimer 0001                               ??_TMR1_ISR 0016  
                     __CFG_CCP3MX$PORTB5 000000      FastTransfer_buffer_modulo_inc@value 00D2  
                                _CCP2CON 000F66                                  _ADC_ISR 29BA  
                                ?_memset 00D2                               _crc_buffer 00C1  
                             ??i2_Update 000E                  __size_of_ADC_Initialize 0018  
                       ?_DATAEE_ReadByte 0001                             ??_PDUStartup 00E1  
                     UART_buff_put@_this 00D8                               ??_Clear595 00DF  
                       i2_UART_buff_size 2926                __size_ofi2_writeRegisters 007E  
            i2UART_buff_modulo_inc@value 0001                    __size_of_CoolingCheck 0004  
                                _OSCCON2 000FD2                                  _TBLPTRH 000FF7  
                                _TBLPTRL 000FF6                                  _TBLPTRU 000FF8  
                            ?_StartUp595 0001                        _Receive_available 28C6  
           UART_buff_modulo_inc@my_value 00D6                        __CFG_PRICLKEN$OFF 000000  
                                _OSCTUNE 000F9B                                  _SPBRGH1 000FB0  
                    sendData@whereToSend 00DF                      _receiveArrayAddress 008C  
                                i2_Delay 24DC                    __size_of_CoolingStart 0022  
                       ?_TMR2_StartTimer 0001                       ?_Receive_available 00D4  
                             begin@error 00DE                   i2EnableSlavePower@onof 000B  
                   DATAEE_WriteByte@bAdd 00D3                      __size_of_FuseSystem 0154  
                    ??_Receive_available 00D6                                ?_sendData 0001  
                                _Current 0060                        _alignErrorCounter 0030  
                        __CFG_PWRTEN$OFF 000000                               ??_PotClear 00DB  
                             ??_Send_put 00DD                                  __Hparam 0000  
                                __Lparam 0000                       __end_of_PDUStartup 229A  
                        __size_of_ToSend 0022                              _PotSetpoint 14FC  
                              _AKNAKsend 0092                          __size_of_Update 0006  
                                ___awdiv 1CD6                     _UART_buff_modulo_inc 25E4  
                        __size_of___wmul 0026                                  _calc_CS 0093  
                           _CoolingCheck 29B6                                  __pcinit 20DA  
                        __size_of_memset 0034                                  __ramtop 0600  
                       i2UART_buff_get@c 000B                                  __ptext0 13B2  
                                __ptext1 26D0                                  __ptext2 2436  
                                __ptext3 1112                                  __ptext4 1840  
                                __ptext5 214E                                  __ptext6 281E  
                                __ptext7 0E12                                  __ptext8 25A8  
                                __ptext9 00B0                             _CoolingStart 2884  
                       i2UART_buff_put@c 0009                                _T1CONbits 000FCD  
                  _OSCILLATOR_Initialize 298A                __end_of_Receive_available 28E0  
                              _T2CONbits 000FBA                  _FastTransfer_buffer_put 0E12  
                     _EUSART1_Initialize 2526                         ?i2_UART_buff_get 0007  
               ??_PIN_MANAGER_Initialize 00D2                                Clear595@i 00DF  
                       ?i2_UART_buff_put 0007                            ??_crcBufS_put 00D7  
             __size_of_SYSTEM_Initialize 0076                     end_of_initialization 2140  
                              Delay@wait 00D2                      ?_EUSART1_Initialize 0001  
                                memset@c 00D4                                  memset@n 00D6  
                                memset@p 00D8                            __Lmediumconst 0000  
                             ??_sendData 00DE                     __size_ofi2_SetPin595 004E  
                  ?_UART_buff_modulo_inc 00D2                     __size_of_updateComms 0036  
                                postdec2 000FDD                      __size_of_StartUp595 006A  
                                postinc0 000FEE                                  postinc1 000FE6  
                                postinc2 000FDE                               _respondECU 2436  
            __size_of_PWM4_LoadDutyValue 003C                             ?_CoolingStop 0001  
                       begin@stufftosend 00DF                             SetPin595@Reg 00D2  
                   ??_EUSART1_Initialize 00DC                             SetPin595@pin 00D4  
                 _dataAdressErrorCounter 0088                               _rx_address 0096  
                              _TRISCbits 000F94                                _TRISDbits 000F95  
                       FuseSystem@i_1528 0014                 __end_of_DATAEE_WriteByte 265C  
                           begin@maxSize 00DC       __size_of_FastTransfer_buffer_flush 0070  
                  i2UART_buff_size@_this 0001                           _UART_buff_init 2862  
                         _UART_buff_size 28E0                  __size_of_writeRegisters 0096  
                    __end_of_crcBufS_put 1940                            _moduleAddress 003F  
           __size_of_processPowerRequest 00CE                             ?_ReadCurrent 0001  
                         __end_of_ToSend 2840             __end_of_INTERRUPT_Initialize 29A2  
                         __end_of_Update 29A8                          _crcErrorCounter 0086  
                         __end_of___wmul 281E                        crcBufS_put@oldCRC 00D5  
                          __pidataCOMRAM 29BE                             ??_FuseSystem 000E  
                      __size_of_TMR1_ISR 0032                           _ADC_Initialize 28F8  
              ??_FastTransfer_buffer_put 00DD              __size_ofi2_EnableSlavePower 00E4  
                 ?_OSCILLATOR_Initialize 0001                           __end_of_memset 273A  
                      crcBufS_put@status 00D6                             receiveData@r 00EE  
             __size_of_Receive_available 001A                             receiveData@u 00EC  
                       i2_writeRegisters 1F6C                        __size_ofi2_Update 0006  
                    start_initialization 20DA          __size_of_PIN_MANAGER_Initialize 007A  
                  EnableSlavePower@slave 00DE                        __size_of_Clear595 003E  
                    i2writeRegisters@val 000A                                PotClear@x 00DB  
                 __end_of_UART_buff_init 2884                           UART_buff_get@c 00DC  
                 __end_of_UART_buff_size 28F8                             ?_Receive_get 0001  
                              _SetPin595 229A                           UART_buff_put@c 00DA  
                    DATAEE_ReadByte@bAdd 00D2                       __end_of_FuseSystem 1112  
               __end_ofi2_UART_buff_size 293C                                 ??_ToSend 00E1  
                 ??_UART_buff_modulo_inc 00D6                 __size_of_TMR1_Initialize 0022  
                               CRC8@data 00D2                                 ??_Update 00DF  
                      __size_of_PotClear 00E4                        __size_of_Send_put 0038  
                            ?_respondECU 0001                                 ??___wmul 0005  
                 __end_of_ADC_Initialize 2910               __end_of_ComputeStorageData 1840  
                               ?_ADC_ISR 0001                                 ??_memset 00D8  
              __size_of_EnableSlavePower 0100                              __pbssCOMRAM 0024  
          __size_of_EUSART1_Transmit_ISR 0032                            __pcstackBANK0 00D2  
                           ??_StartUp595 00E1                 __size_of_PWM4_Initialize 0014  
               __size_of_TMR2_Initialize 0014                                 ?i2_Delay 0001  
                           _Receive_peek 000000                      UART_buff_init@_this 00DA  
                            _crcBufS_put 1840                        i2writeRegisters@i 000C  
                        ?_UART_buff_init 00DA                          ?_UART_buff_size 00D2  
           __size_of_EUSART1_Receive_ISR 0020                               ?_SetPin595 00D2  
                          ??_receiveData 00DE                               sendData@CS 00E0  
                 __size_of_UART_buff_get 00B0                   __size_of_UART_buff_put 0150  
                 _PIN_MANAGER_Initialize 1FEA                        __size_of_sendData 0150  
                           ?_PotSetpoint 00DB                                __pintcode 0008  
                               ?___awdiv 00D2                       __end_of_StartUp595 2372  
                        ?_ADC_Initialize 0001             ??_INTERRUPT_InterruptManager 0016  
                   i2UART_buff_get@_this 0007                     __size_of_CoolingStop 0014  
                         i2SetPin595@Reg 0001                           i2SetPin595@pin 0003  
                               _BAUD1CON 000FB8                 __size_of_TMR1_StartTimer 0004  
                         __size_of_Delay 0064                           __size_of_begin 0060  
               __size_of_DATAEE_ReadByte 0016                      __size_of_respondECU 0058  
                   _INTERRUPT_Initialize 2998                             _receiveArray 0099  
            processPowerRequest@powerSet 00DF                           ___wmul@product 0005  
                               _LATCbits 000F8B                           _writeRegisters 1E44  
                    UART_buff_size@_this 00D2                                _registers 0100  
                               _IPR1bits 000F9F                                 _PIE1bits 000F9D  
               __size_of_TMR2_StartTimer 0004                                 i2Delay@i 0006  
                               i2u205_40 1036      __size_of_INTERRUPT_InterruptManager 00A4  
                               i2u271_40 1EF8                                 i2u273_40 2786  
                               _PIR1bits 000F9E                                 i2u274_40 2758  
                               i2u429_47 24F4                      begin@stuffavailable 00E3  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                    __end_of_receiveData 0782                                 _TMR1_ISR 273A  
         FastTransfer_buffer_flush@_this 00DA                             PotSetpoint@x 00E1  
                           _input_buffer 0300                     __size_of_ReadCurrent 0690  
                              _rx_buffer 0200                        ??_TMR1_Initialize 00D2  
                       __size_of_ADC_ISR 0004                                 i2_Update 29A8  
                             _ADCON0bits 000FC2                               _ADCON2bits 000FC0  
                      ___wmul@multiplier 0001                     i2UART_buff_put@_this 0007  
                       i2SetPin595@value 0005                                 _Clear595 256A  
                          _UART_buff_get 1D94                            _UART_buff_put 1262  
                i2EnableSlavePower@slave 000D                    DATAEE_WriteByte@bData 00D2  
                    _processPowerRequest 1C08                 ??i2_UART_buff_modulo_inc 0005  
                            _INTCON2bits 000FF1                         __size_ofi2_Delay 004A  
                  ?_INTERRUPT_Initialize 0001                        _sendStructAddress 0034  
                      ?_DATAEE_WriteByte 00D2                   __end_of_writeRegisters 1EDA  
                     PotSetpoint@new_pos 00E3                            ??i2_SetPin595 0007  
                            ??_SetPin595 00D8                     EnableSlavePower@onof 00DC  
               __size_ofi2_UART_buff_get 0092                        ??_TMR2_Initialize 00D2  
                      ??_PWM4_Initialize 00D2                 __size_ofi2_UART_buff_put 011A  
                     ??_DATAEE_WriteByte 00D3                               _EECON1bits 000FA6  
                          ??_updateComms 00F0                     __size_of_Receive_get 0012  
               __end_ofi2_writeRegisters 1FEA                                 _PotClear 1A40  
                               __Hrparam 0000                                 _Send_put 2698  
             __end_of_PWM4_LoadDutyValue 2698                                 __Lrparam 0000  
                      _ADC_GetConversion 279E                     ?_processPowerRequest 00DF  
                     __CFG_BOREN$SBORDIS 000000                        __CFG_P2BMX$PORTD2 000000  
                ??_OSCILLATOR_Initialize 00D2                       ?_ADC_GetConversion 0001  
                       __size_of___awdiv 00BE              __size_of_EUSART1_Initialize 0044  
                    begin@stufftoreceive 00E1                         _EnableSlavePower 1940  
                             _ANSELCbits 000F3A                           ?_UART_buff_get 00D8  
                         ?_UART_buff_put 00D8                              CRC8@extract 00D6  
                    ??_ADC_GetConversion 0003                                sendData@i 00E1  
                               __ptext10 2698                                 __ptext11 1262  
                               __ptext20 23D6                                 __ptext12 2978  
                               __ptext21 1CD6                                 __ptext13 1D94  
                             _T1GCONbits 000FCC                                 __ptext30 2526  
                               __ptext22 293C                                 __ptext14 25E4  
                               __ptext31 2862                                 __ptext23 29AE  
                               __ptext15 28C6                                 __ptext40 229A  
                               __ptext32 2706                                 __ptext24 2840  
                               __ptext16 28E0                                 __ptext41 1730  
                               __ptext33 28F8                                 __ptext25 29B2  
                               __ptext17 21BE                                 __ptext50 29B6  
                               __ptext42 2910                                 __ptext34 222C  
                               __ptext26 2950                                 __ptext18 1C08  
                               __ptext43 2620                                 __ptext35 29A2  
                               __ptext27 1FEA                                 __ptext19 2064  
                               __ptext60 248E                                 __ptext52 273A  
                               __ptext44 2964                                 __ptext36 2308  
                               __ptext28 298A                                 __ptext61 27F8  
                               __ptext53 0782                                 __ptext45 2884  
                               __ptext37 256A                                 __ptext29 2998  
                               __ptext62 276C                                 __ptext54 29A8  
                               __ptext46 14FC                                 __ptext38 1E44  
                               __ptext63 2926                                 __ptext55 1F6C  
                               __ptext47 1A40                                 __ptext39 1940  
                               __ptext64 1EDA                                 __ptext56 24DC  
                               __ptext48 2372                                 __ptext65 28A6  
                               __ptext57 279E                                 __ptext49 265C  
                               __ptext66 1616                                 __ptext58 0FBE  
                               __ptext67 27CE                                 __ptext59 1B24  
                               __ptext68 29BA                                 __ptext69 0000  
                      ??_TMR1_StartTimer 00D2                            __size_of_CRC8 006E  
                               begin@ptr 00DA                              i2Delay@wait 0001  
            DATAEE_WriteByte@GIEBitValue 00D4                  EUSART1_Receive_ISR@data 000C  
                        ?_writeRegisters 0001                            _returnAddress 0095  
                          __size_of_main 014A                              _receiveData 00B0  
                               _readwhat 0040                           _Transmit_stall 0042  
                               _sendData 1112                        ??_DATAEE_ReadByte 00D2  
              __end_of_ADC_GetConversion 27CE                        ?i2_UART_buff_size 0001  
                  ??_processPowerRequest 00E1                               _RC1STAbits 000FAB  
                    __end_ofi2_SetPin595 24DC                                 _prev_pos 0032  
                           ??_respondECU 00E3                       ??i2_UART_buff_size 0003  
                      writeRegisters@val 00DB                                 int$flags 0043  
                           _serial_write 0038               __end_ofi2_EnableSlavePower 1C08  
                      ??_TMR2_StartTimer 00D2                      __end_of_updateComms 2706  
     __end_of_INTERRUPT_InterruptManager 00AC               _INTERRUPT_InterruptManager 0008  
                   __size_of_PotSetpoint 011A                      _EUSART1_Receive_ISR 28A6  
                      receiveData@holder 00E4                               _INTCONbits 000FF2  
                    ComputeStorageData@i 00D5                UART_buff_modulo_inc@value 00D2  
                       ??_UART_buff_init 00DC                         ??_UART_buff_size 00D4  
                     _ComputeStorageData 1730                   ??_INTERRUPT_Initialize 00D2  
                               memset@p1 00D2                         _serial_available 008E  
        __size_ofi2_UART_buff_modulo_inc 002A                             ?_crcBufS_put 00D2  
                               intlevel2 0000                       __end_of_respondECU 248E  
                   ?_EUSART1_Receive_ISR 0001   FastTransfer_buffer_modulo_inc@my_value 00D6  
         FastTransfer_buffer_put@towhere 00DA                      ?_ComputeStorageData 0001  
                ?_PIN_MANAGER_Initialize 0001                           SetPin595@value 00D6  
           __end_of_EUSART1_Transmit_ISR 279E                              _ring_buffer 0130  
                       ??_ADC_Initialize 00D2               ?_FastTransfer_buffer_flush 00DA  
                      ??i2_UART_buff_get 0009                              _serial_peek 0036  
                            _serial_read 0090                        ??i2_UART_buff_put 000A  
               ?_FastTransfer_buffer_put 00D8            __size_of_UART_buff_modulo_inc 003C  
                          ?_CoolingCheck 0001                          ??_UART_buff_get 00DA  
                        ??_UART_buff_put 00DB                     ??_ComputeStorageData 00D3  
                          ?_CoolingStart 0001    FastTransfer_buffer_modulo_inc@modulus 00D4  
                             _PDUStartup 222C                receiveData@crcHolder_1389 00EB  
                      __CFG_T3CMX$PORTC0 000000                           _maxDataAddress 0094  
                        writeRegisters@i 00DD                    ??_EUSART1_Receive_ISR 000C  
         __end_of_PIN_MANAGER_Initialize 2064         ??_FastTransfer_buffer_modulo_inc 00D6  
        ?_FastTransfer_buffer_modulo_inc 00D2            updateComms@previousPowerState 003C  
                            i2_SetPin595 248E                        __CFG_FOSC$INTIO67 000000  
             __size_of_ADC_GetConversion 0030                          _TMR1_Initialize 2840  
                            _updateComms 26D0  
