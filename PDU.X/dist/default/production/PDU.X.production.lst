

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Oct 04 19:39:24 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67 ;; Function _Receive_peek is unused but had its address taken
    68  0000                     
    69 ;; Function _Receive_available is unused but had its address taken
    70  0000                     
    71 ;; Function _Receive_get is unused but had its address taken
    72  0000                     
    73                           	psect	idataCOMRAM
    74  0017F6                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _Transmit_stall
    78  0017F6  01                 	db	1
    79                           
    80                           	psect	smallconst
    81  000600                     __psmallconst:
    82                           	opt stack 0
    83  000600  00                 	db	0
    84  000601                     _dpowers:
    85                           	opt stack 0
    86  000601  0001               	dw	1
    87  000603  000A               	dw	10
    88  000605  0064               	dw	100
    89  000607  03E8               	dw	1000
    90  000609  2710               	dw	10000
    91  00060B                     __end_of_dpowers:
    92                           	opt stack 0
    93  0000                     _ANSELA	set	3896
    94  0000                     _ANSELB	set	3897
    95  0000                     _ANSELC	set	3898
    96  0000                     _ANSELCbits	set	3898
    97  0000                     _ANSELD	set	3899
    98  0000                     _ANSELE	set	3900
    99  0000                     _CCPTMRS1bits	set	3912
   100  0000                     _ANSB3	set	31179
   101  0000                     _ANSB4	set	31180
   102  0000                     _ANSD7	set	31199
   103  0000                     _TMR1	set	4046
   104  0000                     _ADCON0	set	4034
   105  0000                     _ADCON0bits	set	4034
   106  0000                     _ADCON1	set	4033
   107  0000                     _ADCON2	set	4032
   108  0000                     _ADRESH	set	4036
   109  0000                     _ADRESL	set	4035
   110  0000                     _BAUD1CON	set	4024
   111  0000                     _CCP2CON	set	3942
   112  0000                     _CCPR2H	set	3944
   113  0000                     _CCPR2L	set	3943
   114  0000                     _EEADR	set	4009
   115  0000                     _EECON1bits	set	4006
   116  0000                     _EECON2	set	4007
   117  0000                     _EEDATA	set	4008
   118  0000                     _INTCON2bits	set	4081
   119  0000                     _INTCONbits	set	4082
   120  0000                     _IPR1bits	set	3999
   121  0000                     _LATA	set	3977
   122  0000                     _LATB	set	3978
   123  0000                     _LATC	set	3979
   124  0000                     _LATCbits	set	3979
   125  0000                     _LATD	set	3980
   126  0000                     _LATE	set	3981
   127  0000                     _OSCCON	set	4051
   128  0000                     _OSCCON2	set	4050
   129  0000                     _OSCTUNE	set	3995
   130  0000                     _PIE1bits	set	3997
   131  0000                     _PIR1bits	set	3998
   132  0000                     _PR2	set	4027
   133  0000                     _RC1STA	set	4011
   134  0000                     _RC1STAbits	set	4011
   135  0000                     _RCONbits	set	4048
   136  0000                     _RCREG1	set	4014
   137  0000                     _SPBRG1	set	4015
   138  0000                     _SPBRGH1	set	4016
   139  0000                     _T1CON	set	4045
   140  0000                     _T1CONbits	set	4045
   141  0000                     _T1GCON	set	4044
   142  0000                     _T1GCONbits	set	4044
   143  0000                     _T2CON	set	4026
   144  0000                     _T2CONbits	set	4026
   145  0000                     _TABLAT	set	4085
   146  0000                     _TBLPTRH	set	4087
   147  0000                     _TBLPTRL	set	4086
   148  0000                     _TBLPTRU	set	4088
   149  0000                     _TMR1H	set	4047
   150  0000                     _TMR1L	set	4046
   151  0000                     _TMR2	set	4028
   152  0000                     _TRISA	set	3986
   153  0000                     _TRISB	set	3987
   154  0000                     _TRISC	set	3988
   155  0000                     _TRISCbits	set	3988
   156  0000                     _TRISD	set	3989
   157  0000                     _TRISDbits	set	3989
   158  0000                     _TRISE	set	3990
   159  0000                     _TX1STA	set	4012
   160  0000                     _TXREG1	set	4013
   161  0000                     _WPUB	set	3937
   162  0000                     _LATA3	set	31819
   163  0000                     _LATB0	set	31824
   164  0000                     _LATB3	set	31827
   165  0000                     _LATB4	set	31828
   166  0000                     _LATB5	set	31829
   167  0000                     _LATD4	set	31844
   168  0000                     _LATD5	set	31845
   169  0000                     _LATD6	set	31846
   170  0000                     _LATD7	set	31847
   171  0000                     _TRISB3	set	31899
   172  0000                     _TRISB4	set	31900
   173  0000                     _TRISB5	set	31901
   174  00060B                     STR_1:
   175  00060B  52                 	db	82	;'R'
   176  00060C  65                 	db	101	;'e'
   177  00060D  61                 	db	97	;'a'
   178  00060E  64                 	db	100	;'d'
   179  00060F  69                 	db	105	;'i'
   180  000610  6E                 	db	110	;'n'
   181  000611  67                 	db	103	;'g'
   182  000612  20                 	db	32
   183  000613  53                 	db	83	;'S'
   184  000614  74                 	db	116	;'t'
   185  000615  75                 	db	117	;'u'
   186  000616  66                 	db	102	;'f'
   187  000617  66                 	db	102	;'f'
   188  000618  20                 	db	32
   189  000619  0A                 	db	10
   190  00061A  00                 	db	0
   191  00061B                     STR_2:
   192  00061B  25                 	db	37
   193  00061C  69                 	db	105	;'i'
   194  00061D  20                 	db	32
   195  00061E  00                 	db	0
   196  0000                     
   197                           ; #config settings
   198  00061F  00                 	db	0	; dummy byte at the end
   199  0000                     
   200                           	psect	cinit
   201  00129C                     __pcinit:
   202                           	opt stack 0
   203  00129C                     start_initialization:
   204                           	opt stack 0
   205  00129C                     __initialization:
   206                           	opt stack 0
   207                           
   208                           ; Clear objects allocated to BANK4 (206 bytes)
   209  00129C  EE04  F000         	lfsr	0,__pbssBANK4
   210  0012A0  0ECE               	movlw	206
   211  0012A2                     clear_0:
   212  0012A2  6AEE               	clrf	postinc0,c
   213  0012A4  06E8               	decf	wreg,f,c
   214  0012A6  E1FD               	bnz	clear_0
   215                           
   216                           ; Clear objects allocated to BANK3 (206 bytes)
   217  0012A8  EE03  F000         	lfsr	0,__pbssBANK3
   218  0012AC  0ECE               	movlw	206
   219  0012AE                     clear_1:
   220  0012AE  6AEE               	clrf	postinc0,c
   221  0012B0  06E8               	decf	wreg,f,c
   222  0012B2  E1FD               	bnz	clear_1
   223                           
   224                           ; Clear objects allocated to BANK2 (200 bytes)
   225  0012B4  EE02  F000         	lfsr	0,__pbssBANK2
   226  0012B8  0EC8               	movlw	200
   227  0012BA                     clear_2:
   228  0012BA  6AEE               	clrf	postinc0,c
   229  0012BC  06E8               	decf	wreg,f,c
   230  0012BE  E1FD               	bnz	clear_2
   231                           
   232                           ; Clear objects allocated to BANK1 (254 bytes)
   233  0012C0  EE01  F000         	lfsr	0,__pbssBANK1
   234  0012C4  0EFE               	movlw	254
   235  0012C6                     clear_3:
   236  0012C6  6AEE               	clrf	postinc0,c
   237  0012C8  06E8               	decf	wreg,f,c
   238  0012CA  E1FD               	bnz	clear_3
   239                           
   240                           ; Clear objects allocated to BANK0 (115 bytes)
   241  0012CC  EE00  F060         	lfsr	0,__pbssBANK0
   242  0012D0  0E73               	movlw	115
   243  0012D2                     clear_4:
   244  0012D2  6AEE               	clrf	postinc0,c
   245  0012D4  06E8               	decf	wreg,f,c
   246  0012D6  E1FD               	bnz	clear_4
   247                           
   248                           ; Clear objects allocated to COMRAM (29 bytes)
   249  0012D8  EE00  F027         	lfsr	0,__pbssCOMRAM
   250  0012DC  0E1D               	movlw	29
   251  0012DE                     clear_5:
   252  0012DE  6AEE               	clrf	postinc0,c
   253  0012E0  06E8               	decf	wreg,f,c
   254  0012E2  E1FD               	bnz	clear_5
   255                           
   256                           ; Initialize objects allocated to COMRAM (1 bytes)
   257                           ; load TBLPTR registers with __pidataCOMRAM
   258  0012E4  0EF6               	movlw	low __pidataCOMRAM
   259  0012E6  6EF6               	movwf	tblptrl,c
   260  0012E8  0E17               	movlw	high __pidataCOMRAM
   261  0012EA  6EF7               	movwf	tblptrh,c
   262  0012EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   263  0012EE  6EF8               	movwf	tblptru,c
   264  0012F0  0009               	tblrd		*+	;fetch initializer
   265  0012F2  CFF5 F044          	movff	tablat,__pdataCOMRAM
   266  0012F6                     end_of_initialization:
   267                           	opt stack 0
   268  0012F6                     __end_of__initialization:
   269                           	opt stack 0
   270  0012F6  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   271  0012F8  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   272  0012FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   273  0012FC  6EF8               	movwf	tblptru,c
   274  0012FE  0100               	movlb	0
   275  001300  EFA5  F004         	goto	_main	;jump to C main() function
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           
   283                           	psect	bssCOMRAM
   284  000027                     __pbssCOMRAM:
   285                           	opt stack 0
   286  000027                     _group:
   287                           	opt stack 0
   288  000027                     	ds	2
   289  000029                     _prev_pos:
   290                           	opt stack 0
   291  000029                     	ds	2
   292  00002B                     _readwhat:
   293                           	opt stack 0
   294  00002B                     	ds	2
   295  00002D                     _sendStructAddress:
   296                           	opt stack 0
   297  00002D                     	ds	2
   298  00002F                     _serial_available:
   299                           	opt stack 0
   300  00002F                     	ds	2
   301  000031                     _serial_peek:
   302                           	opt stack 0
   303  000031                     	ds	2
   304  000033                     _serial_read:
   305                           	opt stack 0
   306  000033                     	ds	2
   307  000035                     _serial_write:
   308                           	opt stack 0
   309  000035                     	ds	2
   310  000037                     _timer1ReloadVal:
   311                           	opt stack 0
   312  000037                     	ds	2
   313  000039                     updateComms@previousPowerState:
   314                           	opt stack 0
   315  000039                     	ds	2
   316  00003B                     _AKNAKsend:
   317                           	opt stack 0
   318  00003B                     	ds	1
   319  00003C                     _MCSOn:
   320                           	opt stack 0
   321  00003C                     	ds	1
   322  00003D                     _calc_CS:
   323                           	opt stack 0
   324  00003D                     	ds	1
   325  00003E                     _maxDataAddress:
   326                           	opt stack 0
   327  00003E                     	ds	1
   328  00003F                     _moduleAddress:
   329                           	opt stack 0
   330  00003F                     	ds	1
   331  000040                     _returnAddress:
   332                           	opt stack 0
   333  000040                     	ds	1
   334  000041                     _rx_address:
   335                           	opt stack 0
   336  000041                     	ds	1
   337  000042                     _rx_array_inx:
   338                           	opt stack 0
   339  000042                     	ds	1
   340  000043                     _rx_len:
   341                           	opt stack 0
   342  000043                     	ds	1
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           
   350                           	psect	dataCOMRAM
   351  000044                     __pdataCOMRAM:
   352                           	opt stack 0
   353  000044                     _Transmit_stall:
   354                           	opt stack 0
   355  000044                     	ds	1
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           
   363                           	psect	bssBANK0
   364  000060                     __pbssBANK0:
   365                           	opt stack 0
   366  000060                     _Current:
   367                           	opt stack 0
   368  000060                     	ds	12
   369  00006C                     _CurrentADC:
   370                           	opt stack 0
   371  00006C                     	ds	12
   372  000078                     _Currentcomp:
   373                           	opt stack 0
   374  000078                     	ds	12
   375  000084                     _data:
   376                           	opt stack 0
   377  000084                     	ds	12
   378  000090                     _addressErrorCounter:
   379                           	opt stack 0
   380  000090                     	ds	2
   381  000092                     _alignErrorCounter:
   382                           	opt stack 0
   383  000092                     	ds	2
   384  000094                     _crcErrorCounter:
   385                           	opt stack 0
   386  000094                     	ds	2
   387  000096                     _dataAdressErrorCounter:
   388                           	opt stack 0
   389  000096                     	ds	2
   390  000098                     _receiveArrayAddress:
   391                           	opt stack 0
   392  000098                     	ds	2
   393  00009A                     _receiveArray:
   394                           	opt stack 0
   395  00009A                     	ds	40
   396  0000C2                     _crc_buffer:
   397                           	opt stack 0
   398  0000C2                     	ds	17
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406                           	psect	bssBANK1
   407  000100                     __pbssBANK1:
   408                           	opt stack 0
   409  000100                     _registers:
   410                           	opt stack 0
   411  000100                     	ds	48
   412  000130                     _ring_buffer:
   413                           	opt stack 0
   414  000130                     	ds	206
   415                           tblptru	equ	0xFF8
   416                           tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           postinc0	equ	0xFEE
   420                           wreg	equ	0xFE8
   421                           
   422                           	psect	bssBANK2
   423  000200                     __pbssBANK2:
   424                           	opt stack 0
   425  000200                     _rx_buffer:
   426                           	opt stack 0
   427  000200                     	ds	200
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           
   435                           	psect	bssBANK3
   436  000300                     __pbssBANK3:
   437                           	opt stack 0
   438  000300                     _input_buffer:
   439                           	opt stack 0
   440  000300                     	ds	206
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           
   448                           	psect	bssBANK4
   449  000400                     __pbssBANK4:
   450                           	opt stack 0
   451  000400                     _output_buffer:
   452                           	opt stack 0
   453  000400                     	ds	206
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           	psect	cstackBANK0
   462  0000D3                     __pcstackBANK0:
   463                           	opt stack 0
   464  0000D3                     ??_PotSetpoint:
   465  0000D3                     EnableSlavePower@slave:
   466                           	opt stack 0
   467  0000D3                     putch@txData:
   468                           	opt stack 0
   469  0000D3                     begin@ptr:
   470                           	opt stack 0
   471  0000D3                     writeRegisters@val:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x0
   475  0000D3                     	ds	1
   476  0000D4                     ?_printf:
   477                           	opt stack 0
   478  0000D4                     printf@f:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x1
   482  0000D4                     	ds	1
   483  0000D5                     begin@maxSize:
   484                           	opt stack 0
   485  0000D5                     writeRegisters@i:
   486                           	opt stack 0
   487  0000D5                     PotSetpoint@set_point:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491  0000D5                     	ds	1
   492  0000D6                     begin@givenAddress:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x3
   496  0000D6                     	ds	1
   497  0000D7                     begin@error:
   498                           	opt stack 0
   499  0000D7                     PotSetpoint@x:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x4
   503  0000D7                     	ds	1
   504  0000D8                     ??_printf:
   505  0000D8                     begin@stufftosend:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x5
   509  0000D8                     	ds	1
   510  0000D9                     PotSetpoint@new_pos:
   511                           	opt stack 0
   512  0000D9                     printf@ap:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x6
   516  0000D9                     	ds	1
   517  0000DA                     begin@stufftoreceive:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x7
   521  0000DA                     	ds	1
   522  0000DB                     printf@flag:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x8
   526  0000DB                     	ds	1
   527  0000DC                     printf@prec:
   528                           	opt stack 0
   529  0000DC                     begin@stuffavailable:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x9
   533  0000DC                     	ds	1
   534  0000DD                     printf@val:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0xA
   538  0000DD                     	ds	1
   539  0000DE                     begin@stuffpeek:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0xB
   543  0000DE                     	ds	1
   544  0000DF                     printf@c:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0xC
   548  0000DF                     	ds	1
   549  0000E0                     ??_FuseSystem:
   550                           
   551                           ; 1 bytes @ 0xD
   552  0000E0                     	ds	5
   553  0000E5                     FuseSystem@i:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x12
   557  0000E5                     	ds	2
   558  0000E7                     FuseSystem@i_1515:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x14
   562  0000E7                     	ds	2
   563  0000E9                     main@UP:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x16
   567  0000E9                     	ds	1
   568  0000EA                     main@i:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x17
   572  0000EA                     	ds	2
   573                           tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           
   580                           	psect	cstackCOMRAM
   581  000001                     __pcstackCOMRAM:
   582                           	opt stack 0
   583  000001                     ?_UART_buff_size:
   584                           	opt stack 0
   585  000001                     ?i2_UART_buff_modulo_inc:
   586                           	opt stack 0
   587  000001                     UART_buff_size@_this:
   588                           	opt stack 0
   589  000001                     i2UART_buff_modulo_inc@value:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x0
   593  000001                     	ds	2
   594  000003                     i2UART_buff_modulo_inc@modulus:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x2
   598  000003                     	ds	2
   599  000005                     i2UART_buff_modulo_inc@my_value:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x4
   603  000005                     	ds	2
   604  000007                     i2UART_buff_put@_this:
   605                           	opt stack 0
   606  000007                     i2UART_buff_get@_this:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x6
   610  000007                     	ds	2
   611  000009                     ??i2_UART_buff_get:
   612  000009                     i2UART_buff_put@c:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x8
   616  000009                     	ds	1
   617  00000A                     ??i2_UART_buff_put:
   618                           
   619                           ; 1 bytes @ 0x9
   620  00000A                     	ds	1
   621  00000B                     i2UART_buff_get@c:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0xA
   625  00000B                     	ds	1
   626  00000C                     EUSART1_Receive_ISR@data:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0xB
   630  00000C                     	ds	1
   631  00000D                     ??_INTERRUPT_InterruptManager:
   632                           
   633                           ; 1 bytes @ 0xC
   634  00000D                     	ds	14
   635  00001B                     ?_UART_buff_modulo_inc:
   636                           	opt stack 0
   637  00001B                     ?___wmul:
   638                           	opt stack 0
   639  00001B                     ?___awdiv:
   640                           	opt stack 0
   641  00001B                     ?___lwdiv:
   642                           	opt stack 0
   643  00001B                     DATAEE_WriteByte@bData:
   644                           	opt stack 0
   645  00001B                     DATAEE_ReadByte@bAdd:
   646                           	opt stack 0
   647  00001B                     PWM4_LoadDutyValue@dutyValue:
   648                           	opt stack 0
   649  00001B                     SetPin595@Reg:
   650                           	opt stack 0
   651  00001B                     UART_buff_modulo_inc@value:
   652                           	opt stack 0
   653  00001B                     ___wmul@multiplier:
   654                           	opt stack 0
   655  00001B                     ___awdiv@dividend:
   656                           	opt stack 0
   657  00001B                     ___lwdiv@dividend:
   658                           	opt stack 0
   659  00001B                     memset@p1:
   660                           	opt stack 0
   661  00001B                     Delay@wait:
   662                           	opt stack 0
   663                           
   664                           ; 4 bytes @ 0x1A
   665  00001B                     	ds	1
   666  00001C                     ??_ComputeStorageData:
   667  00001C                     DATAEE_WriteByte@bAdd:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x1B
   671  00001C                     	ds	1
   672  00001D                     ??_PWM4_LoadDutyValue:
   673  00001D                     DATAEE_WriteByte@GIEBitValue:
   674                           	opt stack 0
   675  00001D                     SetPin595@pin:
   676                           	opt stack 0
   677  00001D                     UART_buff_modulo_inc@modulus:
   678                           	opt stack 0
   679  00001D                     ___wmul@multiplicand:
   680                           	opt stack 0
   681  00001D                     ___awdiv@divisor:
   682                           	opt stack 0
   683  00001D                     ___lwdiv@divisor:
   684                           	opt stack 0
   685  00001D                     memset@c:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x1C
   689  00001D                     	ds	1
   690  00001E                     ComputeStorageData@i:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x1D
   694  00001E                     	ds	1
   695  00001F                     ??_Delay:
   696  00001F                     ___awdiv@counter:
   697                           	opt stack 0
   698  00001F                     ___lwdiv@counter:
   699                           	opt stack 0
   700  00001F                     SetPin595@value:
   701                           	opt stack 0
   702  00001F                     UART_buff_modulo_inc@my_value:
   703                           	opt stack 0
   704  00001F                     ___wmul@product:
   705                           	opt stack 0
   706  00001F                     memset@n:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x1E
   710  00001F                     	ds	1
   711  000020                     ___awdiv@sign:
   712                           	opt stack 0
   713  000020                     ___lwdiv@quotient:
   714                           	opt stack 0
   715  000020                     Delay@i:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x1F
   719  000020                     	ds	1
   720  000021                     ??_SetPin595:
   721  000021                     UART_buff_put@_this:
   722                           	opt stack 0
   723  000021                     UART_buff_get@_this:
   724                           	opt stack 0
   725  000021                     ___awdiv@quotient:
   726                           	opt stack 0
   727  000021                     memset@p:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x20
   731  000021                     	ds	1
   732  000022                     ?___lwmod:
   733                           	opt stack 0
   734  000022                     ___lwmod@dividend:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x21
   738  000022                     	ds	1
   739  000023                     ??_UART_buff_get:
   740  000023                     UART_buff_put@c:
   741                           	opt stack 0
   742  000023                     UART_buff_init@_this:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x22
   746  000023                     	ds	1
   747  000024                     ??_UART_buff_put:
   748  000024                     Clear595@i:
   749                           	opt stack 0
   750  000024                     PotSetpoint@new_point:
   751                           	opt stack 0
   752  000024                     ___lwmod@divisor:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x23
   756  000024                     	ds	1
   757  000025                     UART_buff_get@c:
   758                           	opt stack 0
   759  000025                     EnableSlavePower@onof:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x24
   763  000025                     	ds	1
   764  000026                     Send_put@_data:
   765                           	opt stack 0
   766  000026                     ___lwmod@counter:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x25
   770  000026                     	ds	1
   771  000027                     tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           postinc0	equ	0xFEE
   776                           wreg	equ	0xFE8
   777                           
   778                           ; 1 bytes @ 0x26
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 10 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  i               2   23[BANK0 ] int 
   789 ;;  UP              1   22[BANK0 ] unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   799 ;;      Params:         0       0       0       0       0       0       0
   800 ;;      Locals:         0       3       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0
   802 ;;      Totals:         0       3       0       0       0       0       0
   803 ;;Total ram usage:        3 bytes
   804 ;; Hardware stack levels required when called:   10
   805 ;; This function calls:
   806 ;;		_ComputeStorageData
   807 ;;		_DATAEE_WriteByte
   808 ;;		_Delay
   809 ;;		_EnableSlavePower
   810 ;;		_FuseSystem
   811 ;;		_PDUStartup
   812 ;;		_PWM4_LoadDutyValue
   813 ;;		_PotSetpoint
   814 ;;		_SYSTEM_Initialize
   815 ;;		_Update
   816 ;; This function is called by:
   817 ;;		Startup code after reset
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text0
   822  00094A                     __ptext0:
   823                           	opt stack 0
   824  00094A                     _main:
   825                           	opt stack 21
   826                           
   827                           ;main.c: 12: SYSTEM_Initialize();
   828                           
   829                           ;incstack = 0
   830  00094A  EC15  F009         	call	_SYSTEM_Initialize	;wreg free
   831                           
   832                           ;main.c: 13: PDUStartup();
   833  00094E  ECE0  F009         	call	_PDUStartup	;wreg free
   834                           
   835                           ;main.c: 32: (INTCONbits.GIE = 1);
   836  000952  8EF2               	bsf	intcon,7,c	;volatile
   837                           
   838                           ;main.c: 35: (INTCONbits.PEIE = 1);
   839  000954  8CF2               	bsf	intcon,6,c	;volatile
   840                           
   841                           ;main.c: 42: DATAEE_WriteByte(0, 0x03);
   842  000956  0E03               	movlw	3
   843  000958  6E1B               	movwf	DATAEE_WriteByte@bData,c
   844  00095A  0E00               	movlw	0
   845  00095C  ECBE  F00A         	call	_DATAEE_WriteByte
   846                           
   847                           ;main.c: 43: DATAEE_WriteByte(1, 0xE8);
   848  000960  0EE8               	movlw	232
   849  000962  6E1B               	movwf	DATAEE_WriteByte@bData,c
   850  000964  0E01               	movlw	1
   851  000966  ECBE  F00A         	call	_DATAEE_WriteByte
   852                           
   853                           ;main.c: 44: DATAEE_WriteByte(2, 0x03);
   854  00096A  0E03               	movlw	3
   855  00096C  6E1B               	movwf	DATAEE_WriteByte@bData,c
   856  00096E  0E02               	movlw	2
   857  000970  ECBE  F00A         	call	_DATAEE_WriteByte
   858                           
   859                           ;main.c: 45: DATAEE_WriteByte(3, 0xE8);
   860  000974  0EE8               	movlw	232
   861  000976  6E1B               	movwf	DATAEE_WriteByte@bData,c
   862  000978  0E03               	movlw	3
   863  00097A  ECBE  F00A         	call	_DATAEE_WriteByte
   864                           
   865                           ;main.c: 46: DATAEE_WriteByte(4, 0x03);
   866  00097E  0E03               	movlw	3
   867  000980  6E1B               	movwf	DATAEE_WriteByte@bData,c
   868  000982  0E04               	movlw	4
   869  000984  ECBE  F00A         	call	_DATAEE_WriteByte
   870                           
   871                           ;main.c: 47: DATAEE_WriteByte(5, 0xE8);
   872  000988  0EE8               	movlw	232
   873  00098A  6E1B               	movwf	DATAEE_WriteByte@bData,c
   874  00098C  0E05               	movlw	5
   875  00098E  ECBE  F00A         	call	_DATAEE_WriteByte
   876                           
   877                           ;main.c: 48: DATAEE_WriteByte(6, 0x03);
   878  000992  0E03               	movlw	3
   879  000994  6E1B               	movwf	DATAEE_WriteByte@bData,c
   880  000996  0E06               	movlw	6
   881  000998  ECBE  F00A         	call	_DATAEE_WriteByte
   882                           
   883                           ;main.c: 49: DATAEE_WriteByte(7, 0xE8);
   884  00099C  0EE8               	movlw	232
   885  00099E  6E1B               	movwf	DATAEE_WriteByte@bData,c
   886  0009A0  0E07               	movlw	7
   887  0009A2  ECBE  F00A         	call	_DATAEE_WriteByte
   888                           
   889                           ;main.c: 50: DATAEE_WriteByte(8, 0x03);
   890  0009A6  0E03               	movlw	3
   891  0009A8  6E1B               	movwf	DATAEE_WriteByte@bData,c
   892  0009AA  0E08               	movlw	8
   893  0009AC  ECBE  F00A         	call	_DATAEE_WriteByte
   894                           
   895                           ;main.c: 51: DATAEE_WriteByte(9, 0xE8);
   896  0009B0  0EE8               	movlw	232
   897  0009B2  6E1B               	movwf	DATAEE_WriteByte@bData,c
   898  0009B4  0E09               	movlw	9
   899  0009B6  ECBE  F00A         	call	_DATAEE_WriteByte
   900                           
   901                           ;main.c: 52: DATAEE_WriteByte(10, 0x03);
   902  0009BA  0E03               	movlw	3
   903  0009BC  6E1B               	movwf	DATAEE_WriteByte@bData,c
   904  0009BE  0E0A               	movlw	10
   905  0009C0  ECBE  F00A         	call	_DATAEE_WriteByte
   906                           
   907                           ;main.c: 53: DATAEE_WriteByte(11, 0xE8);
   908  0009C4  0EE8               	movlw	232
   909  0009C6  6E1B               	movwf	DATAEE_WriteByte@bData,c
   910  0009C8  0E0B               	movlw	11
   911  0009CA  ECBE  F00A         	call	_DATAEE_WriteByte
   912                           
   913                           ;main.c: 55: PotSetpoint(0);
   914  0009CE  0E00               	movlw	0
   915  0009D0  6E25               	movwf	PotSetpoint@new_point+1,c
   916  0009D2  0E00               	movlw	0
   917  0009D4  6E24               	movwf	PotSetpoint@new_point,c
   918  0009D6  EC4E  F006         	call	_PotSetpoint	;wreg free
   919                           
   920                           ;main.c: 56: PWM4_LoadDutyValue(0);
   921  0009DA  0E00               	movlw	0
   922  0009DC  6E1C               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   923  0009DE  0E00               	movlw	0
   924  0009E0  6E1B               	movwf	PWM4_LoadDutyValue@dutyValue,c
   925  0009E2  EC0C  F00B         	call	_PWM4_LoadDutyValue	;wreg free
   926                           
   927                           ;main.c: 57: LATCbits.LATC5 = 0;
   928  0009E6  9A8B               	bcf	3979,5,c	;volatile
   929                           
   930                           ;main.c: 58: int i = 0;
   931  0009E8  0E00               	movlw	0
   932  0009EA  0100               	movlb	0	; () banked
   933  0009EC  6FEB               	movwf	(main@i+1)& (0+255),b
   934  0009EE  0E00               	movlw	0
   935  0009F0  6FEA               	movwf	main@i& (0+255),b
   936                           
   937                           ; BSR set to: 0
   938                           ;main.c: 59: bool UP = 0;
   939  0009F2  0E00               	movlw	0
   940  0009F4  0100               	movlb	0	; () banked
   941  0009F6  6FE9               	movwf	main@UP& (0+255),b
   942                           
   943                           ;main.c: 60: ComputeStorageData();
   944  0009F8  EC4C  F007         	call	_ComputeStorageData	;wreg free
   945                           
   946                           ;main.c: 62: EnableSlavePower(DDS,1);
   947  0009FC  0E00               	movlw	0
   948  0009FE  6E26               	movwf	EnableSlavePower@onof+1,c
   949  000A00  0E01               	movlw	1
   950  000A02  6E25               	movwf	EnableSlavePower@onof,c
   951  000A04  0E01               	movlw	1
   952  000A06  ECD8  F006         	call	_EnableSlavePower
   953                           
   954                           ;main.c: 63: EnableSlavePower(SAS,1);
   955  000A0A  0E00               	movlw	0
   956  000A0C  6E26               	movwf	EnableSlavePower@onof+1,c
   957  000A0E  0E01               	movlw	1
   958  000A10  6E25               	movwf	EnableSlavePower@onof,c
   959  000A12  0E03               	movlw	3
   960  000A14  ECD8  F006         	call	_EnableSlavePower
   961                           
   962                           ;main.c: 64: Update();
   963  000A18  ECF4  F00B         	call	_Update	;wreg free
   964  000A1C                     l4885:
   965                           
   966                           ;main.c: 77: Delay(10);
   967  000A1C  0E0A               	movlw	10
   968  000A1E  6E1B               	movwf	Delay@wait,c
   969  000A20  0E00               	movlw	0
   970  000A22  6E1C               	movwf	Delay@wait+1,c
   971  000A24  0E00               	movlw	0
   972  000A26  6E1D               	movwf	Delay@wait+2,c
   973  000A28  0E00               	movlw	0
   974  000A2A  6E1E               	movwf	Delay@wait+3,c
   975  000A2C  EC5A  F00A         	call	_Delay	;wreg free
   976                           
   977                           ;main.c: 78: i++;
   978  000A30  0100               	movlb	0	; () banked
   979  000A32  4BEA               	infsnz	main@i& (0+255),f,b
   980  000A34  2BEB               	incf	(main@i+1)& (0+255),f,b
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 79: PWM4_LoadDutyValue(i);
   984  000A36  C0EA  F01B         	movff	main@i,PWM4_LoadDutyValue@dutyValue
   985  000A3A  C0EB  F01C         	movff	main@i+1,PWM4_LoadDutyValue@dutyValue+1
   986  000A3E  EC0C  F00B         	call	_PWM4_LoadDutyValue	;wreg free
   987                           
   988                           ;main.c: 80: if(i>500){
   989  000A42  0100               	movlb	0	; () banked
   990  000A44  BFEB               	btfsc	(main@i+1)& (0+255),7,b
   991  000A46  D7EA               	goto	l4885
   992  000A48  0EF5               	movlw	245
   993  000A4A  0100               	movlb	0	; () banked
   994  000A4C  5DEA               	subwf	main@i& (0+255),w,b
   995  000A4E  0E01               	movlw	1
   996  000A50  0100               	movlb	0	; () banked
   997  000A52  59EB               	subwfb	(main@i+1)& (0+255),w,b
   998  000A54  A0D8               	btfss	status,0,c
   999  000A56  D7E2               	goto	l4885
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 81: i = 0;
  1003  000A58  0E00               	movlw	0
  1004  000A5A  0100               	movlb	0	; () banked
  1005  000A5C  6FEB               	movwf	(main@i+1)& (0+255),b
  1006  000A5E  0E00               	movlw	0
  1007  000A60  6FEA               	movwf	main@i& (0+255),b
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 82: FuseSystem();
  1011  000A62  EC10  F003         	call	_FuseSystem	;wreg free
  1012  000A66  D7DA               	goto	l4885
  1013  000A68                     __end_of_main:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           intcon	equ	0xFF2
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _SYSTEM_Initialize *****************
  1025 ;; Defined at:
  1026 ;;		line 113 in file "mcc_generated_files/mcc.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1040 ;;      Params:         0       0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    7
  1047 ;; This function calls:
  1048 ;;		_ADC_Initialize
  1049 ;;		_EUSART1_Initialize
  1050 ;;		_INTERRUPT_Initialize
  1051 ;;		_OSCILLATOR_Initialize
  1052 ;;		_PIN_MANAGER_Initialize
  1053 ;;		_PWM4_Initialize
  1054 ;;		_TMR2_Initialize
  1055 ;;		_begin
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text1
  1062  00122A                     __ptext1:
  1063                           	opt stack 0
  1064  00122A                     _SYSTEM_Initialize:
  1065                           	opt stack 23
  1066                           
  1067                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1068                           
  1069                           ;incstack = 0
  1070  00122A  ECE1  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  1071                           
  1072                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1073  00122E  ECD7  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  1074                           
  1075                           ;mcc.c: 116: INTERRUPT_Initialize();
  1076  001232  ECEF  F00B         	call	_INTERRUPT_Initialize	;wreg free
  1077                           
  1078                           ;mcc.c: 117: EUSART1_Initialize();
  1079  001236  ECA0  F00A         	call	_EUSART1_Initialize	;wreg free
  1080                           
  1081                           ;mcc.c: 118: begin(receiveArray, sizeof (receiveArray), 5, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  1082  00123A  0E9A               	movlw	low _receiveArray
  1083  00123C  0100               	movlb	0	; () banked
  1084  00123E  6FD3               	movwf	begin@ptr& (0+255),b
  1085  001240  0E00               	movlw	high _receiveArray
  1086  001242  0100               	movlb	0	; () banked
  1087  001244  6FD4               	movwf	(begin@ptr+1)& (0+255),b
  1088  001246  0E28               	movlw	40
  1089  001248  0100               	movlb	0	; () banked
  1090  00124A  6FD5               	movwf	begin@maxSize& (0+255),b
  1091  00124C  0E05               	movlw	5
  1092  00124E  0100               	movlb	0	; () banked
  1093  001250  6FD6               	movwf	begin@givenAddress& (0+255),b
  1094  001252  0E00               	movlw	0
  1095  001254  0100               	movlb	0	; () banked
  1096  001256  6FD7               	movwf	begin@error& (0+255),b
  1097  001258  0E48               	movlw	low _Send_put
  1098  00125A  0100               	movlb	0	; () banked
  1099  00125C  6FD8               	movwf	begin@stufftosend& (0+255),b
  1100  00125E  0E16               	movlw	high _Send_put
  1101  001260  0100               	movlb	0	; () banked
  1102  001262  6FD9               	movwf	(begin@stufftosend+1)& (0+255),b
  1103  001264  0E00               	movlw	0
  1104  001266  0100               	movlb	0	; () banked
  1105  001268  6FDA               	movwf	begin@stufftoreceive& (0+255),b
  1106  00126A  0E00               	movlw	0
  1107  00126C  0100               	movlb	0	; () banked
  1108  00126E  6FDB               	movwf	(begin@stufftoreceive+1)& (0+255),b
  1109  001270  0E00               	movlw	0
  1110  001272  0100               	movlb	0	; () banked
  1111  001274  6FDC               	movwf	begin@stuffavailable& (0+255),b
  1112  001276  0E00               	movlw	0
  1113  001278  0100               	movlb	0	; () banked
  1114  00127A  6FDD               	movwf	(begin@stuffavailable+1)& (0+255),b
  1115  00127C  0E00               	movlw	0
  1116  00127E  0100               	movlb	0	; () banked
  1117  001280  6FDE               	movwf	begin@stuffpeek& (0+255),b
  1118  001282  0E00               	movlw	0
  1119  001284  0100               	movlb	0	; () banked
  1120  001286  6FDF               	movwf	(begin@stuffpeek+1)& (0+255),b
  1121  001288  ECB3  F009         	call	_begin	;wreg free
  1122                           
  1123                           ;mcc.c: 119: PWM4_Initialize();
  1124  00128C  ECCD  F00B         	call	_PWM4_Initialize	;wreg free
  1125                           
  1126                           ;mcc.c: 120: TMR2_Initialize();
  1127  001290  ECC3  F00B         	call	_TMR2_Initialize	;wreg free
  1128                           
  1129                           ;mcc.c: 121: LATB4 = 1;
  1130  001294  888A               	bsf	3978,4,c	;volatile
  1131                           
  1132                           ;mcc.c: 122: ADC_Initialize();
  1133  001296  ECAC  F00B         	call	_ADC_Initialize	;wreg free
  1134  00129A  0012               	return		;funcret
  1135  00129C                     __end_of_SYSTEM_Initialize:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           intcon	equ	0xFF2
  1142                           postinc0	equ	0xFEE
  1143                           wreg	equ	0xFE8
  1144                           status	equ	0xFD8
  1145                           
  1146 ;; *************** function _begin *****************
  1147 ;; Defined at:
  1148 ;;		line 18 in file "FastTransfer.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  1151 ;;		 -> receiveArray(40), 
  1152 ;;  maxSize         1    2[BANK0 ] unsigned char 
  1153 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  1154 ;;  error           1    4[BANK0 ] unsigned char 
  1155 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  1156 ;;		 -> Send_put(1), 
  1157 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  1158 ;;		 -> Receive_get(1), 
  1159 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  1160 ;;		 -> Receive_available(2), 
  1161 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  1162 ;;		 -> Receive_peek(1), 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1174 ;;      Params:         0      13       0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0
  1177 ;;      Totals:         0      13       0       0       0       0       0
  1178 ;;Total ram usage:       13 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    5
  1181 ;; This function calls:
  1182 ;;		___awdiv
  1183 ;; This function is called by:
  1184 ;;		_SYSTEM_Initialize
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text2
  1189  001366                     __ptext2:
  1190                           	opt stack 0
  1191  001366                     _begin:
  1192                           	opt stack 24
  1193                           
  1194                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  1195                           
  1196                           ;incstack = 0
  1197  001366  C0D3  F098         	movff	begin@ptr,_receiveArrayAddress
  1198  00136A  C0D4  F099         	movff	begin@ptr+1,_receiveArrayAddress+1
  1199                           
  1200                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  1201  00136E  C0D6  F03F         	movff	begin@givenAddress,_moduleAddress
  1202                           
  1203                           ;FastTransfer.c: 21: serial_write = stufftosend;
  1204  001372  C0D8  F035         	movff	begin@stufftosend,_serial_write
  1205  001376  C0D9  F036         	movff	begin@stufftosend+1,_serial_write+1
  1206                           
  1207                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  1208  00137A  C0DC  F02F         	movff	begin@stuffavailable,_serial_available
  1209  00137E  C0DD  F030         	movff	begin@stuffavailable+1,_serial_available+1
  1210                           
  1211                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  1212  001382  C0DE  F031         	movff	begin@stuffpeek,_serial_peek
  1213  001386  C0DF  F032         	movff	begin@stuffpeek+1,_serial_peek+1
  1214                           
  1215                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  1216  00138A  C0DA  F033         	movff	begin@stufftoreceive,_serial_read
  1217  00138E  C0DB  F034         	movff	begin@stufftoreceive+1,_serial_read+1
  1218                           
  1219                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  1220  001392  C0D5  F01B         	movff	begin@maxSize,___awdiv@dividend
  1221  001396  6A1C               	clrf	___awdiv@dividend+1,c
  1222  001398  0E00               	movlw	0
  1223  00139A  6E1E               	movwf	___awdiv@divisor+1,c
  1224  00139C  0E02               	movlw	2
  1225  00139E  6E1D               	movwf	___awdiv@divisor,c
  1226  0013A0  EC95  F008         	call	___awdiv	;wreg free
  1227  0013A4  501B               	movf	?___awdiv,w,c
  1228  0013A6  6E3E               	movwf	_maxDataAddress,c
  1229                           
  1230                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  1231  0013A8  0E30               	movlw	low _ring_buffer
  1232  0013AA  6E2D               	movwf	_sendStructAddress,c
  1233  0013AC  0E01               	movlw	high _ring_buffer
  1234  0013AE  6E2E               	movwf	_sendStructAddress+1,c
  1235                           
  1236                           ;FastTransfer.c: 27: AKNAKsend = error;
  1237  0013B0  C0D7  F03B         	movff	begin@error,_AKNAKsend
  1238                           
  1239                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  1240  0013B4  0E00               	movlw	0
  1241  0013B6  0100               	movlb	0	; () banked
  1242  0013B8  6F93               	movwf	(_alignErrorCounter+1)& (0+255),b
  1243  0013BA  0E00               	movlw	0
  1244  0013BC  6F92               	movwf	_alignErrorCounter& (0+255),b
  1245                           
  1246                           ; BSR set to: 0
  1247  0013BE  0012               	return		;funcret
  1248  0013C0                     __end_of_begin:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           intcon	equ	0xFF2
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function ___awdiv *****************
  1260 ;; Defined at:
  1261 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  dividend        2   26[COMRAM] int 
  1264 ;;  divisor         2   28[COMRAM] int 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  quotient        2   32[COMRAM] int 
  1267 ;;  sign            1   31[COMRAM] unsigned char 
  1268 ;;  counter         1   30[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  2   26[COMRAM] int 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1278 ;;      Params:         4       0       0       0       0       0       0
  1279 ;;      Locals:         4       0       0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0
  1281 ;;      Totals:         8       0       0       0       0       0       0
  1282 ;;Total ram usage:        8 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    4
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_begin
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text3
  1293  00112A                     __ptext3:
  1294                           	opt stack 0
  1295  00112A                     ___awdiv:
  1296                           	opt stack 24
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;incstack = 0
  1300  00112A  0E00               	movlw	0
  1301  00112C  6E20               	movwf	___awdiv@sign,c
  1302  00112E  AE1E               	btfss	___awdiv@divisor+1,7,c
  1303  001130  D006               	goto	l4147
  1304  001132  6C1D               	negf	___awdiv@divisor,c
  1305  001134  1E1E               	comf	___awdiv@divisor+1,f,c
  1306  001136  B0D8               	btfsc	status,0,c
  1307  001138  2A1E               	incf	___awdiv@divisor+1,f,c
  1308  00113A  0E01               	movlw	1
  1309  00113C  6E20               	movwf	___awdiv@sign,c
  1310  00113E                     l4147:
  1311  00113E  AE1C               	btfss	___awdiv@dividend+1,7,c
  1312  001140  D006               	goto	l4153
  1313  001142  6C1B               	negf	___awdiv@dividend,c
  1314  001144  1E1C               	comf	___awdiv@dividend+1,f,c
  1315  001146  B0D8               	btfsc	status,0,c
  1316  001148  2A1C               	incf	___awdiv@dividend+1,f,c
  1317  00114A  0E01               	movlw	1
  1318  00114C  1A20               	xorwf	___awdiv@sign,f,c
  1319  00114E                     l4153:
  1320  00114E  0E00               	movlw	0
  1321  001150  6E22               	movwf	___awdiv@quotient+1,c
  1322  001152  0E00               	movlw	0
  1323  001154  6E21               	movwf	___awdiv@quotient,c
  1324  001156  501D               	movf	___awdiv@divisor,w,c
  1325  001158  101E               	iorwf	___awdiv@divisor+1,w,c
  1326  00115A  B4D8               	btfsc	status,2,c
  1327  00115C  D01C               	goto	l4175
  1328  00115E  0E01               	movlw	1
  1329  001160  6E1F               	movwf	___awdiv@counter,c
  1330  001162  D004               	goto	l4161
  1331  001164                     l4159:
  1332  001164  90D8               	bcf	status,0,c
  1333  001166  361D               	rlcf	___awdiv@divisor,f,c
  1334  001168  361E               	rlcf	___awdiv@divisor+1,f,c
  1335  00116A  2A1F               	incf	___awdiv@counter,f,c
  1336  00116C                     l4161:
  1337  00116C  AE1E               	btfss	___awdiv@divisor+1,7,c
  1338  00116E  D7FA               	goto	l4159
  1339  001170                     l4163:
  1340  001170  90D8               	bcf	status,0,c
  1341  001172  3621               	rlcf	___awdiv@quotient,f,c
  1342  001174  3622               	rlcf	___awdiv@quotient+1,f,c
  1343  001176  501D               	movf	___awdiv@divisor,w,c
  1344  001178  5C1B               	subwf	___awdiv@dividend,w,c
  1345  00117A  501E               	movf	___awdiv@divisor+1,w,c
  1346  00117C  581C               	subwfb	___awdiv@dividend+1,w,c
  1347  00117E  A0D8               	btfss	status,0,c
  1348  001180  D005               	goto	l4171
  1349  001182  501D               	movf	___awdiv@divisor,w,c
  1350  001184  5E1B               	subwf	___awdiv@dividend,f,c
  1351  001186  501E               	movf	___awdiv@divisor+1,w,c
  1352  001188  5A1C               	subwfb	___awdiv@dividend+1,f,c
  1353  00118A  8021               	bsf	___awdiv@quotient,0,c
  1354  00118C                     l4171:
  1355  00118C  90D8               	bcf	status,0,c
  1356  00118E  321E               	rrcf	___awdiv@divisor+1,f,c
  1357  001190  321D               	rrcf	___awdiv@divisor,f,c
  1358  001192  2E1F               	decfsz	___awdiv@counter,f,c
  1359  001194  D7ED               	goto	l4163
  1360  001196                     l4175:
  1361  001196  5020               	movf	___awdiv@sign,w,c
  1362  001198  B4D8               	btfsc	status,2,c
  1363  00119A  D004               	goto	l4179
  1364  00119C  6C21               	negf	___awdiv@quotient,c
  1365  00119E  1E22               	comf	___awdiv@quotient+1,f,c
  1366  0011A0  B0D8               	btfsc	status,0,c
  1367  0011A2  2A22               	incf	___awdiv@quotient+1,f,c
  1368  0011A4                     l4179:
  1369  0011A4  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  1370  0011A8  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  1371  0011AC  0012               	return	
  1372  0011AE                     __end_of___awdiv:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           intcon	equ	0xFF2
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           status	equ	0xFD8
  1382                           
  1383 ;; *************** function _TMR2_Initialize *****************
  1384 ;; Defined at:
  1385 ;;		line 9 in file "mcc_generated_files/tmr2.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1399 ;;      Params:         0       0       0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    5
  1406 ;; This function calls:
  1407 ;;		_TMR2_StartTimer
  1408 ;; This function is called by:
  1409 ;;		_SYSTEM_Initialize
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text4
  1414  001786                     __ptext4:
  1415                           	opt stack 0
  1416  001786                     _TMR2_Initialize:
  1417                           	opt stack 24
  1418                           
  1419                           ;tmr2.c: 14: T2CON = 0x1A;
  1420                           
  1421                           ;incstack = 0
  1422  001786  0E1A               	movlw	26
  1423  001788  6EBA               	movwf	4026,c	;volatile
  1424                           
  1425                           ;tmr2.c: 17: PR2 = 0x7C;
  1426  00178A  0E7C               	movlw	124
  1427  00178C  6EBB               	movwf	4027,c	;volatile
  1428                           
  1429                           ;tmr2.c: 20: TMR2 = 0x00;
  1430  00178E  0E00               	movlw	0
  1431  001790  6EBC               	movwf	4028,c	;volatile
  1432                           
  1433                           ;tmr2.c: 23: PIR1bits.TMR2IF = 0;
  1434  001792  929E               	bcf	3998,1,c	;volatile
  1435                           
  1436                           ;tmr2.c: 26: TMR2_StartTimer();
  1437  001794  ECF7  F00B         	call	_TMR2_StartTimer	;wreg free
  1438  001798  0012               	return		;funcret
  1439  00179A                     __end_of_TMR2_Initialize:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           intcon	equ	0xFF2
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _TMR2_StartTimer *****************
  1451 ;; Defined at:
  1452 ;;		line 29 in file "mcc_generated_files/tmr2.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		None
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1466 ;;      Params:         0       0       0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    4
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_TMR2_Initialize
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text5
  1481  0017EE                     __ptext5:
  1482                           	opt stack 0
  1483  0017EE                     _TMR2_StartTimer:
  1484                           	opt stack 24
  1485                           
  1486                           ;tmr2.c: 32: T2CONbits.TMR2ON = 1;
  1487                           
  1488                           ;incstack = 0
  1489  0017EE  84BA               	bsf	4026,2,c	;volatile
  1490  0017F0  0012               	return		;funcret
  1491  0017F2                     __end_of_TMR2_StartTimer:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           intcon	equ	0xFF2
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _PWM4_Initialize *****************
  1503 ;; Defined at:
  1504 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1518 ;;      Params:         0       0       0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    4
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_SYSTEM_Initialize
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text6
  1533  00179A                     __ptext6:
  1534                           	opt stack 0
  1535  00179A                     _PWM4_Initialize:
  1536                           	opt stack 25
  1537                           
  1538                           ;pwm4.c: 69: CCP2CON = 0x1C;
  1539                           
  1540                           ;incstack = 0
  1541  00179A  0E1C               	movlw	28
  1542  00179C  6E66               	movwf	3942,c	;volatile
  1543                           
  1544                           ;pwm4.c: 72: CCPR2L = 0x3E;
  1545  00179E  0E3E               	movlw	62
  1546  0017A0  6E67               	movwf	3943,c	;volatile
  1547                           
  1548                           ;pwm4.c: 75: CCPR2H = 0x00;
  1549  0017A2  0E00               	movlw	0
  1550  0017A4  6E68               	movwf	3944,c	;volatile
  1551                           
  1552                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
  1553  0017A6  0EFC               	movlw	-4
  1554  0017A8  010F               	movlb	15	; () banked
  1555  0017AA  1748               	andwf	72,f,b	;volatile
  1556                           
  1557                           ; BSR set to: 15
  1558  0017AC  0012               	return		;funcret
  1559  0017AE                     __end_of_PWM4_Initialize:
  1560                           	opt stack 0
  1561                           tblptru	equ	0xFF8
  1562                           tblptrh	equ	0xFF7
  1563                           tblptrl	equ	0xFF6
  1564                           tablat	equ	0xFF5
  1565                           intcon	equ	0xFF2
  1566                           postinc0	equ	0xFEE
  1567                           wreg	equ	0xFE8
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _PIN_MANAGER_Initialize *****************
  1571 ;; Defined at:
  1572 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1586 ;;      Params:         0       0       0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    4
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_SYSTEM_Initialize
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text7
  1601  0011AE                     __ptext7:
  1602                           	opt stack 0
  1603  0011AE                     _PIN_MANAGER_Initialize:
  1604                           	opt stack 25
  1605                           
  1606                           ;pin_manager.c: 52: LATA = 0x00;
  1607                           
  1608                           ; BSR set to: 15
  1609                           ;incstack = 0
  1610  0011AE  0E00               	movlw	0
  1611  0011B0  6E89               	movwf	3977,c	;volatile
  1612                           
  1613                           ;pin_manager.c: 53: TRISA = 0xF7;
  1614  0011B2  0EF7               	movlw	247
  1615  0011B4  6E92               	movwf	3986,c	;volatile
  1616                           
  1617                           ;pin_manager.c: 54: ANSELA = 0x27;
  1618  0011B6  0E27               	movlw	39
  1619  0011B8  010F               	movlb	15	; () banked
  1620  0011BA  6F38               	movwf	56,b	;volatile
  1621                           
  1622                           ;pin_manager.c: 56: LATB = 0x01;
  1623  0011BC  0E01               	movlw	1
  1624  0011BE  6E8A               	movwf	3978,c	;volatile
  1625                           
  1626                           ;pin_manager.c: 57: TRISB = 0xFE;
  1627  0011C0  0EFE               	movlw	254
  1628  0011C2  6E93               	movwf	3987,c	;volatile
  1629                           
  1630                           ;pin_manager.c: 58: ANSELB = 0x3E;
  1631  0011C4  0E3E               	movlw	62
  1632  0011C6  010F               	movlb	15	; () banked
  1633  0011C8  6F39               	movwf	57,b	;volatile
  1634                           
  1635                           ;pin_manager.c: 59: WPUB = 0x00;
  1636  0011CA  0E00               	movlw	0
  1637  0011CC  6E61               	movwf	3937,c	;volatile
  1638                           
  1639                           ;pin_manager.c: 61: LATC = 0x00;
  1640  0011CE  0E00               	movlw	0
  1641  0011D0  6E8B               	movwf	3979,c	;volatile
  1642                           
  1643                           ;pin_manager.c: 62: TRISC = 0xDF;
  1644  0011D2  0EDF               	movlw	223
  1645  0011D4  6E94               	movwf	3988,c	;volatile
  1646                           
  1647                           ;pin_manager.c: 63: ANSELC = 0x1C;
  1648  0011D6  0E1C               	movlw	28
  1649  0011D8  010F               	movlb	15	; () banked
  1650  0011DA  6F3A               	movwf	58,b	;volatile
  1651                           
  1652                           ;pin_manager.c: 65: LATD = 0x00;
  1653  0011DC  0E00               	movlw	0
  1654  0011DE  6E8C               	movwf	3980,c	;volatile
  1655                           
  1656                           ;pin_manager.c: 66: TRISD = 0x0F;
  1657  0011E0  0E0F               	movlw	15
  1658  0011E2  6E95               	movwf	3989,c	;volatile
  1659                           
  1660                           ;pin_manager.c: 67: ANSELD = 0x0F;
  1661  0011E4  0E0F               	movlw	15
  1662  0011E6  010F               	movlb	15	; () banked
  1663  0011E8  6F3B               	movwf	59,b	;volatile
  1664                           
  1665                           ;pin_manager.c: 69: LATE = 0x00;
  1666  0011EA  0E00               	movlw	0
  1667  0011EC  6E8D               	movwf	3981,c	;volatile
  1668                           
  1669                           ;pin_manager.c: 70: TRISE = 0x07;
  1670  0011EE  0E07               	movlw	7
  1671  0011F0  6E96               	movwf	3990,c	;volatile
  1672                           
  1673                           ;pin_manager.c: 71: ANSELE = 0x07;
  1674  0011F2  0E07               	movlw	7
  1675  0011F4  010F               	movlb	15	; () banked
  1676  0011F6  6F3C               	movwf	60,b	;volatile
  1677                           
  1678                           ; BSR set to: 15
  1679                           ;pin_manager.c: 72: TRISCbits.RC6 = 1;
  1680  0011F8  8C94               	bsf	3988,6,c	;volatile
  1681                           
  1682                           ; BSR set to: 15
  1683                           ;pin_manager.c: 73: TRISCbits.RC7 = 1;
  1684  0011FA  8E94               	bsf	3988,7,c	;volatile
  1685                           
  1686                           ; BSR set to: 15
  1687                           ;pin_manager.c: 74: TRISCbits.RC5 = 1;
  1688  0011FC  8A94               	bsf	3988,5,c	;volatile
  1689                           
  1690                           ; BSR set to: 15
  1691                           ;pin_manager.c: 75: TRISCbits.RC1 = 0;
  1692  0011FE  9294               	bcf	3988,1,c	;volatile
  1693                           
  1694                           ; BSR set to: 15
  1695                           ;pin_manager.c: 76: LATCbits.LATC5 = 1;
  1696  001200  8A8B               	bsf	3979,5,c	;volatile
  1697                           
  1698                           ; BSR set to: 15
  1699                           ;pin_manager.c: 77: LATCbits.LATC6 = 1;
  1700  001202  8C8B               	bsf	3979,6,c	;volatile
  1701                           
  1702                           ; BSR set to: 15
  1703                           ;pin_manager.c: 78: LATCbits.LATC7 = 1;
  1704  001204  8E8B               	bsf	3979,7,c	;volatile
  1705                           
  1706                           ; BSR set to: 15
  1707                           ;pin_manager.c: 79: ANSELCbits.ANSC5 =0;
  1708  001206  010F               	movlb	15	; () banked
  1709  001208  9B3A               	bcf	58,5,b	;volatile
  1710                           
  1711                           ; BSR set to: 15
  1712                           ;pin_manager.c: 80: ANSELCbits.ANSC6 =0;
  1713  00120A  010F               	movlb	15	; () banked
  1714  00120C  9D3A               	bcf	58,6,b	;volatile
  1715                           
  1716                           ; BSR set to: 15
  1717                           ;pin_manager.c: 81: ANSELCbits.ANSC7 =0;
  1718  00120E  010F               	movlb	15	; () banked
  1719  001210  9F3A               	bcf	58,7,b	;volatile
  1720                           
  1721                           ; BSR set to: 15
  1722                           ;pin_manager.c: 83: INTCON2bits.nRBPU = 0x01;
  1723  001212  8EF1               	bsf	intcon2,7,c	;volatile
  1724                           
  1725                           ; BSR set to: 15
  1726                           
  1727                           ; BSR set to: 15
  1728                           
  1729                           ;pin_manager.c: 85: do { TRISB4 = 0; } while(0);
  1730  001214  9893               	bcf	3987,4,c	;volatile
  1731                           
  1732                           ; BSR set to: 15
  1733                           
  1734                           ; BSR set to: 15
  1735                           
  1736                           ;pin_manager.c: 86: do { TRISB3 = 0; } while(0);
  1737                           
  1738                           ; BSR set to: 15
  1739  001216  9693               	bcf	3987,3,c	;volatile
  1740                           
  1741                           ; BSR set to: 15
  1742                           
  1743                           ; BSR set to: 15
  1744                           
  1745                           ;pin_manager.c: 87: do { TRISB5 = 0; } while(0);
  1746                           
  1747                           ; BSR set to: 15
  1748  001218  9A93               	bcf	3987,5,c	;volatile
  1749                           
  1750                           ; BSR set to: 15
  1751                           ;pin_manager.c: 89: TRISDbits.RD1 = 0;
  1752                           
  1753                           ; BSR set to: 15
  1754  00121A  9295               	bcf	3989,1,c	;volatile
  1755                           
  1756                           ; BSR set to: 15
  1757                           
  1758                           ; BSR set to: 15
  1759                           
  1760                           ;pin_manager.c: 91: do { ANSB3 = 0; } while(0);
  1761  00121C  010F               	movlb	15	; () banked
  1762  00121E  9739               	bcf	57,3,b	;volatile
  1763                           
  1764                           ; BSR set to: 15
  1765                           
  1766                           ; BSR set to: 15
  1767                           
  1768                           ;pin_manager.c: 92: do { ANSD7 = 0; } while(0);
  1769                           
  1770                           ; BSR set to: 15
  1771  001220  010F               	movlb	15	; () banked
  1772  001222  9F3B               	bcf	59,7,b	;volatile
  1773                           
  1774                           ; BSR set to: 15
  1775                           
  1776                           ; BSR set to: 15
  1777                           
  1778                           ;pin_manager.c: 93: do { ANSB4 = 0; } while(0);
  1779                           
  1780                           ; BSR set to: 15
  1781  001224  010F               	movlb	15	; () banked
  1782  001226  9939               	bcf	57,4,b	;volatile
  1783  001228  0012               	return	
  1784  00122A                     __end_of_PIN_MANAGER_Initialize:
  1785                           	opt stack 0
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           intcon	equ	0xFF2
  1791                           intcon2	equ	0xFF1
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           status	equ	0xFD8
  1795                           
  1796 ;; *************** function _OSCILLATOR_Initialize *****************
  1797 ;; Defined at:
  1798 ;;		line 125 in file "mcc_generated_files/mcc.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1812 ;;      Params:         0       0       0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    4
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_SYSTEM_Initialize
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text8
  1827  0017C2                     __ptext8:
  1828                           	opt stack 0
  1829  0017C2                     _OSCILLATOR_Initialize:
  1830                           	opt stack 25
  1831                           
  1832                           ;mcc.c: 127: OSCCON = 0x60;
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;incstack = 0
  1836  0017C2  0E60               	movlw	96
  1837  0017C4  6ED3               	movwf	4051,c	;volatile
  1838                           
  1839                           ;mcc.c: 129: OSCCON2 = 0x04;
  1840  0017C6  0E04               	movlw	4
  1841  0017C8  6ED2               	movwf	4050,c	;volatile
  1842                           
  1843                           ;mcc.c: 131: OSCTUNE = 0x00;
  1844  0017CA  0E00               	movlw	0
  1845  0017CC  6E9B               	movwf	3995,c	;volatile
  1846  0017CE  0012               	return		;funcret
  1847  0017D0                     __end_of_OSCILLATOR_Initialize:
  1848                           	opt stack 0
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           intcon	equ	0xFF2
  1854                           intcon2	equ	0xFF1
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function _INTERRUPT_Initialize *****************
  1860 ;; Defined at:
  1861 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		None
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1875 ;;      Params:         0       0       0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0
  1878 ;;      Totals:         0       0       0       0       0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    4
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_SYSTEM_Initialize
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text9
  1890  0017DE                     __ptext9:
  1891                           	opt stack 0
  1892  0017DE                     _INTERRUPT_Initialize:
  1893                           	opt stack 25
  1894                           
  1895                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1896                           
  1897                           ;incstack = 0
  1898  0017DE  9ED0               	bcf	4048,7,c	;volatile
  1899                           
  1900                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  1901  0017E0  9A9F               	bcf	3999,5,c	;volatile
  1902                           
  1903                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  1904  0017E2  989F               	bcf	3999,4,c	;volatile
  1905                           
  1906                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
  1907  0017E4  9C9F               	bcf	3999,6,c	;volatile
  1908  0017E6  0012               	return		;funcret
  1909  0017E8                     __end_of_INTERRUPT_Initialize:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           intcon	equ	0xFF2
  1916                           intcon2	equ	0xFF1
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _EUSART1_Initialize *****************
  1922 ;; Defined at:
  1923 ;;		line 21 in file "UART.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1937 ;;      Params:         0       0       0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    6
  1944 ;; This function calls:
  1945 ;;		_UART_buff_init
  1946 ;; This function is called by:
  1947 ;;		_SYSTEM_Initialize
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text10
  1952  001540                     __ptext10:
  1953                           	opt stack 0
  1954  001540                     _EUSART1_Initialize:
  1955                           	opt stack 23
  1956                           
  1957                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  1958                           
  1959                           ;incstack = 0
  1960  001540  9A9D               	bcf	3997,5,c	;volatile
  1961                           
  1962                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  1963  001542  989D               	bcf	3997,4,c	;volatile
  1964                           
  1965                           ;UART.c: 29: BAUD1CON = 0x48;
  1966  001544  0E48               	movlw	72
  1967  001546  6EB8               	movwf	4024,c	;volatile
  1968                           
  1969                           ;UART.c: 32: RC1STA = 0x98;
  1970  001548  0E98               	movlw	152
  1971  00154A  6EAB               	movwf	4011,c	;volatile
  1972                           
  1973                           ;UART.c: 35: TX1STA = 0x26;
  1974  00154C  0E26               	movlw	38
  1975  00154E  6EAC               	movwf	4012,c	;volatile
  1976                           
  1977                           ;UART.c: 38: SPBRG1 = (((8000000/38400)/4)-1);
  1978  001550  0E33               	movlw	51
  1979  001552  6EAF               	movwf	4015,c	;volatile
  1980                           
  1981                           ;UART.c: 41: SPBRGH1 = 0x00;
  1982  001554  0E00               	movlw	0
  1983  001556  6EB0               	movwf	4016,c	;volatile
  1984                           
  1985                           ;UART.c: 44: TXREG1 = 0x00;
  1986  001558  0E00               	movlw	0
  1987  00155A  6EAD               	movwf	4013,c	;volatile
  1988                           
  1989                           ;UART.c: 47: RCREG1 = 0x00;
  1990  00155C  0E00               	movlw	0
  1991  00155E  6EAE               	movwf	4014,c	;volatile
  1992                           
  1993                           ;UART.c: 49: UART_buff_init(&input_buffer);
  1994  001560  0E00               	movlw	low _input_buffer
  1995  001562  6E23               	movwf	UART_buff_init@_this,c
  1996  001564  0E03               	movlw	high _input_buffer
  1997  001566  6E24               	movwf	UART_buff_init@_this+1,c
  1998  001568  EC8E  F00B         	call	_UART_buff_init	;wreg free
  1999                           
  2000                           ;UART.c: 50: UART_buff_init(&output_buffer);
  2001  00156C  0E00               	movlw	low _output_buffer
  2002  00156E  6E23               	movwf	UART_buff_init@_this,c
  2003  001570  0E04               	movlw	high _output_buffer
  2004  001572  6E24               	movwf	UART_buff_init@_this+1,c
  2005  001574  EC8E  F00B         	call	_UART_buff_init	;wreg free
  2006                           
  2007                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  2008  001578  8A9D               	bsf	3997,5,c	;volatile
  2009  00157A  0012               	return		;funcret
  2010  00157C                     __end_of_EUSART1_Initialize:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           intcon	equ	0xFF2
  2017                           intcon2	equ	0xFF1
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _UART_buff_init *****************
  2023 ;; Defined at:
  2024 ;;		line 56 in file "UART.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  2027 ;;		 -> output_buffer(206), input_buffer(206), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         2       0       0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0
  2042 ;;      Totals:         2       0       0       0       0       0       0
  2043 ;;Total ram usage:        2 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    5
  2046 ;; This function calls:
  2047 ;;		_memset
  2048 ;; This function is called by:
  2049 ;;		_EUSART1_Initialize
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text11
  2054  00171C                     __ptext11:
  2055                           	opt stack 0
  2056  00171C                     _UART_buff_init:
  2057                           	opt stack 23
  2058                           
  2059                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  2060                           
  2061                           ;incstack = 0
  2062  00171C  C023  F01B         	movff	UART_buff_init@_this,memset@p1
  2063  001720  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
  2064  001724  0E00               	movlw	0
  2065  001726  6E1E               	movwf	memset@c+1,c
  2066  001728  0E00               	movlw	0
  2067  00172A  6E1D               	movwf	memset@c,c
  2068  00172C  0E00               	movlw	0
  2069  00172E  6E20               	movwf	memset@n+1,c
  2070  001730  0ECE               	movlw	206
  2071  001732  6E1F               	movwf	memset@n,c
  2072  001734  EC3B  F00B         	call	_memset	;wreg free
  2073  001738  0012               	return		;funcret
  2074  00173A                     __end_of_UART_buff_init:
  2075                           	opt stack 0
  2076                           tblptru	equ	0xFF8
  2077                           tblptrh	equ	0xFF7
  2078                           tblptrl	equ	0xFF6
  2079                           tablat	equ	0xFF5
  2080                           intcon	equ	0xFF2
  2081                           intcon2	equ	0xFF1
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _memset *****************
  2087 ;; Defined at:
  2088 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  p1              2   26[COMRAM] PTR void 
  2091 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  2092 ;;  c               2   28[COMRAM] int 
  2093 ;;  n               2   30[COMRAM] unsigned int 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  p               2   32[COMRAM] PTR unsigned char 
  2096 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2   26[COMRAM] PTR void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2106 ;;      Params:         6       0       0       0       0       0       0
  2107 ;;      Locals:         2       0       0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0
  2109 ;;      Totals:         8       0       0       0       0       0       0
  2110 ;;Total ram usage:        8 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    4
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_UART_buff_init
  2117 ;;		_FastTransfer_buffer_flush
  2118 ;;		_UART_buff_flush
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text12
  2123  001676                     __ptext12:
  2124                           	opt stack 0
  2125  001676                     _memset:
  2126                           	opt stack 23
  2127                           
  2128                           ;incstack = 0
  2129  001676  C01B  F021         	movff	memset@p1,memset@p
  2130  00167A  C01C  F022         	movff	memset@p1+1,memset@p+1
  2131  00167E  D008               	goto	l4067
  2132  001680                     l4063:
  2133  001680  C021  FFD9         	movff	memset@p,fsr2l
  2134  001684  C022  FFDA         	movff	memset@p+1,fsr2h
  2135  001688  C01D  FFDF         	movff	memset@c,indf2
  2136  00168C  4A21               	infsnz	memset@p,f,c
  2137  00168E  2A22               	incf	memset@p+1,f,c
  2138  001690                     l4067:
  2139  001690  061F               	decf	memset@n,f,c
  2140  001692  A0D8               	btfss	status,0,c
  2141  001694  0620               	decf	memset@n+1,f,c
  2142  001696  281F               	incf	memset@n,w,c
  2143  001698  E1F3               	bnz	l4063
  2144  00169A  2820               	incf	memset@n+1,w,c
  2145  00169C  B4D8               	btfsc	status,2,c
  2146  00169E  0012               	return	
  2147  0016A0  D7EF               	goto	l4063
  2148  0016A2                     __end_of_memset:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           intcon	equ	0xFF2
  2155                           intcon2	equ	0xFF1
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           indf2	equ	0xFDF
  2159                           fsr2h	equ	0xFDA
  2160                           fsr2l	equ	0xFD9
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function _ADC_Initialize *****************
  2164 ;; Defined at:
  2165 ;;		line 59 in file "mcc_generated_files/adc.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2179 ;;      Params:         0       0       0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    4
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_SYSTEM_Initialize
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text13
  2194  001758                     __ptext13:
  2195                           	opt stack 0
  2196  001758                     _ADC_Initialize:
  2197                           	opt stack 25
  2198                           
  2199                           ;adc.c: 64: ADCON0 = 0x01;
  2200                           
  2201                           ;incstack = 0
  2202  001758  0E01               	movlw	1
  2203  00175A  6EC2               	movwf	4034,c	;volatile
  2204                           
  2205                           ;adc.c: 67: ADCON1 = 0x80;
  2206  00175C  0E80               	movlw	128
  2207  00175E  6EC1               	movwf	4033,c	;volatile
  2208                           
  2209                           ;adc.c: 70: ADCON2 = 0x12;
  2210  001760  0E12               	movlw	18
  2211  001762  6EC0               	movwf	4032,c	;volatile
  2212                           
  2213                           ;adc.c: 73: ADRESL = 0x00;
  2214  001764  0E00               	movlw	0
  2215  001766  6EC3               	movwf	4035,c	;volatile
  2216                           
  2217                           ;adc.c: 76: ADRESH = 0x00;
  2218  001768  0E00               	movlw	0
  2219  00176A  6EC4               	movwf	4036,c	;volatile
  2220                           
  2221                           ;adc.c: 79: PIE1bits.ADIE = 1;
  2222  00176C  8C9D               	bsf	3997,6,c	;volatile
  2223  00176E  0012               	return		;funcret
  2224  001770                     __end_of_ADC_Initialize:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           intcon	equ	0xFF2
  2231                           intcon2	equ	0xFF1
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           indf2	equ	0xFDF
  2235                           fsr2h	equ	0xFDA
  2236                           fsr2l	equ	0xFD9
  2237                           status	equ	0xFD8
  2238                           
  2239 ;; *************** function _PotSetpoint *****************
  2240 ;; Defined at:
  2241 ;;		line 21 in file "DigiPot.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  new_point       2   35[COMRAM] int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  new_pos         2    6[BANK0 ] int 
  2246 ;;  x               2    4[BANK0 ] int 
  2247 ;;  set_point       2    2[BANK0 ] int 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2257 ;;      Params:         2       0       0       0       0       0       0
  2258 ;;      Locals:         0       6       0       0       0       0       0
  2259 ;;      Temps:          0       2       0       0       0       0       0
  2260 ;;      Totals:         2       8       0       0       0       0       0
  2261 ;;Total ram usage:       10 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    5
  2264 ;; This function calls:
  2265 ;;		_Delay
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;;		_CoolingStart
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text14
  2273  000C9C                     __ptext14:
  2274                           	opt stack 0
  2275  000C9C                     _PotSetpoint:
  2276                           	opt stack 25
  2277                           
  2278                           ;DigiPot.c: 22: int set_point;
  2279                           ;DigiPot.c: 31: int new_pos = new_point;
  2280                           
  2281                           ;incstack = 0
  2282  000C9C  C024  F0D9         	movff	PotSetpoint@new_point,PotSetpoint@new_pos
  2283  000CA0  C025  F0DA         	movff	PotSetpoint@new_point+1,PotSetpoint@new_pos+1
  2284                           
  2285                           ;DigiPot.c: 35: LATB5 = 0;
  2286  000CA4  9A8A               	bcf	3978,5,c	;volatile
  2287                           
  2288                           ;DigiPot.c: 38: if (new_pos > prev_pos) {
  2289  000CA6  0100               	movlb	0	; () banked
  2290  000CA8  51D9               	movf	PotSetpoint@new_pos& (0+255),w,b
  2291  000CAA  5C29               	subwf	_prev_pos,w,c
  2292  000CAC  502A               	movf	_prev_pos+1,w,c
  2293  000CAE  0A80               	xorlw	128
  2294  000CB0  0100               	movlb	0	; () banked
  2295  000CB2  6FD3               	movwf	??_PotSetpoint& (0+255),b
  2296  000CB4  0100               	movlb	0	; () banked
  2297  000CB6  51DA               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  2298  000CB8  0A80               	xorlw	128
  2299  000CBA  0100               	movlb	0	; () banked
  2300  000CBC  59D3               	subwfb	??_PotSetpoint& (0+255),w,b
  2301  000CBE  B0D8               	btfsc	status,0,c
  2302  000CC0  D016               	goto	l905
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;DigiPot.c: 40: LATB3 = 1;
  2306  000CC2  868A               	bsf	3978,3,c	;volatile
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;DigiPot.c: 41: set_point = new_pos - prev_pos;
  2310  000CC4  C029  F0D3         	movff	_prev_pos,??_PotSetpoint
  2311  000CC8  C02A  F0D4         	movff	_prev_pos+1,??_PotSetpoint+1
  2312  000CCC  0100               	movlb	0	; () banked
  2313  000CCE  1FD3               	comf	??_PotSetpoint& (0+255),f,b
  2314  000CD0  1FD4               	comf	(??_PotSetpoint+1)& (0+255),f,b
  2315  000CD2  4BD3               	infsnz	??_PotSetpoint& (0+255),f,b
  2316  000CD4  2BD4               	incf	(??_PotSetpoint+1)& (0+255),f,b
  2317  000CD6  0100               	movlb	0	; () banked
  2318  000CD8  51D9               	movf	PotSetpoint@new_pos& (0+255),w,b
  2319  000CDA  0100               	movlb	0	; () banked
  2320  000CDC  25D3               	addwf	??_PotSetpoint& (0+255),w,b
  2321  000CDE  0100               	movlb	0	; () banked
  2322  000CE0  6FD5               	movwf	PotSetpoint@set_point& (0+255),b
  2323  000CE2  0100               	movlb	0	; () banked
  2324  000CE4  51DA               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  2325  000CE6  0100               	movlb	0	; () banked
  2326  000CE8  21D4               	addwfc	(??_PotSetpoint+1)& (0+255),w,b
  2327  000CEA  0100               	movlb	0	; () banked
  2328  000CEC  6FD6               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  2329  000CEE                     l905:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;DigiPot.c: 42: }
  2333                           ;DigiPot.c: 43: if (new_pos < prev_pos) {
  2334  000CEE  5029               	movf	_prev_pos,w,c
  2335  000CF0  0100               	movlb	0	; () banked
  2336  000CF2  5DD9               	subwf	PotSetpoint@new_pos& (0+255),w,b
  2337  000CF4  0100               	movlb	0	; () banked
  2338  000CF6  51DA               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  2339  000CF8  0A80               	xorlw	128
  2340  000CFA  0100               	movlb	0	; () banked
  2341  000CFC  6FD3               	movwf	??_PotSetpoint& (0+255),b
  2342  000CFE  502A               	movf	_prev_pos+1,w,c
  2343  000D00  0A80               	xorlw	128
  2344  000D02  0100               	movlb	0	; () banked
  2345  000D04  59D3               	subwfb	??_PotSetpoint& (0+255),w,b
  2346  000D06  B0D8               	btfsc	status,0,c
  2347  000D08  D014               	goto	l4507
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;DigiPot.c: 45: LATB3 = 0;
  2351  000D0A  968A               	bcf	3978,3,c	;volatile
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;DigiPot.c: 46: set_point = prev_pos - new_pos;
  2355  000D0C  C0D9  F0D3         	movff	PotSetpoint@new_pos,??_PotSetpoint
  2356  000D10  C0DA  F0D4         	movff	PotSetpoint@new_pos+1,??_PotSetpoint+1
  2357  000D14  0100               	movlb	0	; () banked
  2358  000D16  1FD3               	comf	??_PotSetpoint& (0+255),f,b
  2359  000D18  1FD4               	comf	(??_PotSetpoint+1)& (0+255),f,b
  2360  000D1A  4BD3               	infsnz	??_PotSetpoint& (0+255),f,b
  2361  000D1C  2BD4               	incf	(??_PotSetpoint+1)& (0+255),f,b
  2362  000D1E  5029               	movf	_prev_pos,w,c
  2363  000D20  0100               	movlb	0	; () banked
  2364  000D22  25D3               	addwf	??_PotSetpoint& (0+255),w,b
  2365  000D24  0100               	movlb	0	; () banked
  2366  000D26  6FD5               	movwf	PotSetpoint@set_point& (0+255),b
  2367  000D28  502A               	movf	_prev_pos+1,w,c
  2368  000D2A  0100               	movlb	0	; () banked
  2369  000D2C  21D4               	addwfc	(??_PotSetpoint+1)& (0+255),w,b
  2370  000D2E  0100               	movlb	0	; () banked
  2371  000D30  6FD6               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  2372  000D32                     l4507:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;DigiPot.c: 47: }
  2376                           ;DigiPot.c: 48: Delay(1);
  2377  000D32  0E01               	movlw	1
  2378  000D34  6E1B               	movwf	Delay@wait,c
  2379  000D36  0E00               	movlw	0
  2380  000D38  6E1C               	movwf	Delay@wait+1,c
  2381  000D3A  0E00               	movlw	0
  2382  000D3C  6E1D               	movwf	Delay@wait+2,c
  2383  000D3E  0E00               	movlw	0
  2384  000D40  6E1E               	movwf	Delay@wait+3,c
  2385  000D42  EC5A  F00A         	call	_Delay	;wreg free
  2386                           
  2387                           ;DigiPot.c: 50: int x;
  2388                           ;DigiPot.c: 52: for (x = 0; x < set_point; x++) {
  2389  000D46  0E00               	movlw	0
  2390  000D48  0100               	movlb	0	; () banked
  2391  000D4A  6FD8               	movwf	(PotSetpoint@x+1)& (0+255),b
  2392  000D4C  0E00               	movlw	0
  2393  000D4E  6FD7               	movwf	PotSetpoint@x& (0+255),b
  2394  000D50  D019               	goto	l4517
  2395  000D52                     l908:
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;DigiPot.c: 53: LATB4 = 1;
  2399  000D52  888A               	bsf	3978,4,c	;volatile
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;DigiPot.c: 54: Delay(1);
  2403  000D54  0E01               	movlw	1
  2404  000D56  6E1B               	movwf	Delay@wait,c
  2405  000D58  0E00               	movlw	0
  2406  000D5A  6E1C               	movwf	Delay@wait+1,c
  2407  000D5C  0E00               	movlw	0
  2408  000D5E  6E1D               	movwf	Delay@wait+2,c
  2409  000D60  0E00               	movlw	0
  2410  000D62  6E1E               	movwf	Delay@wait+3,c
  2411  000D64  EC5A  F00A         	call	_Delay	;wreg free
  2412                           
  2413                           ;DigiPot.c: 55: LATB4 = 0;
  2414  000D68  988A               	bcf	3978,4,c	;volatile
  2415                           
  2416                           ;DigiPot.c: 56: Delay(1);
  2417  000D6A  0E01               	movlw	1
  2418  000D6C  6E1B               	movwf	Delay@wait,c
  2419  000D6E  0E00               	movlw	0
  2420  000D70  6E1C               	movwf	Delay@wait+1,c
  2421  000D72  0E00               	movlw	0
  2422  000D74  6E1D               	movwf	Delay@wait+2,c
  2423  000D76  0E00               	movlw	0
  2424  000D78  6E1E               	movwf	Delay@wait+3,c
  2425  000D7A  EC5A  F00A         	call	_Delay	;wreg free
  2426  000D7E  0100               	movlb	0	; () banked
  2427  000D80  4BD7               	infsnz	PotSetpoint@x& (0+255),f,b
  2428  000D82  2BD8               	incf	(PotSetpoint@x+1)& (0+255),f,b
  2429  000D84                     l4517:
  2430                           
  2431                           ; BSR set to: 0
  2432  000D84  0100               	movlb	0	; () banked
  2433  000D86  51D5               	movf	PotSetpoint@set_point& (0+255),w,b
  2434  000D88  0100               	movlb	0	; () banked
  2435  000D8A  5DD7               	subwf	PotSetpoint@x& (0+255),w,b
  2436  000D8C  0100               	movlb	0	; () banked
  2437  000D8E  51D8               	movf	(PotSetpoint@x+1)& (0+255),w,b
  2438  000D90  0A80               	xorlw	128
  2439  000D92  0100               	movlb	0	; () banked
  2440  000D94  6FD3               	movwf	??_PotSetpoint& (0+255),b
  2441  000D96  0100               	movlb	0	; () banked
  2442  000D98  51D6               	movf	(PotSetpoint@set_point+1)& (0+255),w,b
  2443  000D9A  0A80               	xorlw	128
  2444  000D9C  0100               	movlb	0	; () banked
  2445  000D9E  59D3               	subwfb	??_PotSetpoint& (0+255),w,b
  2446  000DA0  A0D8               	btfss	status,0,c
  2447  000DA2  D7D7               	goto	l908
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;DigiPot.c: 57: }
  2451                           ;DigiPot.c: 59: LATB5 = 1;
  2452  000DA4  8A8A               	bsf	3978,5,c	;volatile
  2453                           
  2454                           ;DigiPot.c: 60: prev_pos = new_pos;
  2455  000DA6  C0D9  F029         	movff	PotSetpoint@new_pos,_prev_pos
  2456  000DAA  C0DA  F02A         	movff	PotSetpoint@new_pos+1,_prev_pos+1
  2457                           
  2458                           ; BSR set to: 0
  2459  000DAE  0012               	return		;funcret
  2460  000DB0                     __end_of_PotSetpoint:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           intcon	equ	0xFF2
  2467                           intcon2	equ	0xFF1
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           indf2	equ	0xFDF
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function _PWM4_LoadDutyValue *****************
  2476 ;; Defined at:
  2477 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  dutyValue       2   26[COMRAM] unsigned int 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2491 ;;      Params:         2       0       0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0
  2493 ;;      Temps:          2       0       0       0       0       0       0
  2494 ;;      Totals:         4       0       0       0       0       0       0
  2495 ;;Total ram usage:        4 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    4
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_main
  2502 ;;		_CoolingStart
  2503 ;;		_CoolingStop
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text15
  2508  001618                     __ptext15:
  2509                           	opt stack 0
  2510  001618                     _PWM4_LoadDutyValue:
  2511                           	opt stack 26
  2512                           
  2513                           ;pwm4.c: 84: CCPR2L = ((dutyValue & 0x03FC)>>2);
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;incstack = 0
  2517  001618  C01B  F01D         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  2518  00161C  C01C  F01E         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  2519  001620  90D8               	bcf	status,0,c
  2520  001622  321E               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  2521  001624  321D               	rrcf	??_PWM4_LoadDutyValue,f,c
  2522  001626  90D8               	bcf	status,0,c
  2523  001628  321E               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  2524  00162A  321D               	rrcf	??_PWM4_LoadDutyValue,f,c
  2525  00162C  501D               	movf	??_PWM4_LoadDutyValue,w,c
  2526  00162E  6E67               	movwf	3943,c	;volatile
  2527                           
  2528                           ;pwm4.c: 87: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2529  001630  C01B  F01D         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  2530  001634  0E03               	movlw	3
  2531  001636  161D               	andwf	??_PWM4_LoadDutyValue,f,c
  2532  001638  3A1D               	swapf	??_PWM4_LoadDutyValue,f,c
  2533  00163A  0EF0               	movlw	240
  2534  00163C  161D               	andwf	??_PWM4_LoadDutyValue,f,c
  2535  00163E  5066               	movf	3942,w,c	;volatile
  2536  001640  0BCF               	andlw	207
  2537  001642  101D               	iorwf	??_PWM4_LoadDutyValue,w,c
  2538  001644  6E66               	movwf	3942,c	;volatile
  2539  001646  0012               	return		;funcret
  2540  001648                     __end_of_PWM4_LoadDutyValue:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           intcon	equ	0xFF2
  2547                           intcon2	equ	0xFF1
  2548                           postinc0	equ	0xFEE
  2549                           wreg	equ	0xFE8
  2550                           indf2	equ	0xFDF
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _PDUStartup *****************
  2556 ;; Defined at:
  2557 ;;		line 18 in file "PDU.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2571 ;;      Params:         0       0       0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    8
  2578 ;; This function calls:
  2579 ;;		_ComputeStorageData
  2580 ;;		_EnableSlavePower
  2581 ;;		_StartUp595
  2582 ;;		_Update
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text16
  2589  0013C0                     __ptext16:
  2590                           	opt stack 0
  2591  0013C0                     _PDUStartup:
  2592                           	opt stack 22
  2593                           
  2594                           ;PDU.c: 21: StartUp595();
  2595                           
  2596                           ;incstack = 0
  2597  0013C0  EC82  F009         	call	_StartUp595	;wreg free
  2598                           
  2599                           ;PDU.c: 23: EnableSlavePower(SAS, OFF);
  2600  0013C4  0E00               	movlw	0
  2601  0013C6  6E26               	movwf	EnableSlavePower@onof+1,c
  2602  0013C8  0E00               	movlw	0
  2603  0013CA  6E25               	movwf	EnableSlavePower@onof,c
  2604  0013CC  0E03               	movlw	3
  2605  0013CE  ECD8  F006         	call	_EnableSlavePower
  2606                           
  2607                           ;PDU.c: 24: EnableSlavePower(DDS, OFF);
  2608  0013D2  0E00               	movlw	0
  2609  0013D4  6E26               	movwf	EnableSlavePower@onof+1,c
  2610  0013D6  0E00               	movlw	0
  2611  0013D8  6E25               	movwf	EnableSlavePower@onof,c
  2612  0013DA  0E01               	movlw	1
  2613  0013DC  ECD8  F006         	call	_EnableSlavePower
  2614                           
  2615                           ;PDU.c: 25: EnableSlavePower(MCS, OFF);
  2616  0013E0  0E00               	movlw	0
  2617  0013E2  6E26               	movwf	EnableSlavePower@onof+1,c
  2618  0013E4  0E00               	movlw	0
  2619  0013E6  6E25               	movwf	EnableSlavePower@onof,c
  2620  0013E8  0E02               	movlw	2
  2621  0013EA  ECD8  F006         	call	_EnableSlavePower
  2622                           
  2623                           ;PDU.c: 26: EnableSlavePower(BMM, OFF);
  2624  0013EE  0E00               	movlw	0
  2625  0013F0  6E26               	movwf	EnableSlavePower@onof+1,c
  2626  0013F2  0E00               	movlw	0
  2627  0013F4  6E25               	movwf	EnableSlavePower@onof,c
  2628  0013F6  0E04               	movlw	4
  2629  0013F8  ECD8  F006         	call	_EnableSlavePower
  2630                           
  2631                           ;PDU.c: 27: EnableSlavePower(TSS, OFF);
  2632  0013FC  0E00               	movlw	0
  2633  0013FE  6E26               	movwf	EnableSlavePower@onof+1,c
  2634  001400  0E00               	movlw	0
  2635  001402  6E25               	movwf	EnableSlavePower@onof,c
  2636  001404  0E05               	movlw	5
  2637  001406  ECD8  F006         	call	_EnableSlavePower
  2638                           
  2639                           ;PDU.c: 28: Update();
  2640  00140A  ECF4  F00B         	call	_Update	;wreg free
  2641                           
  2642                           ;PDU.c: 30: ComputeStorageData();
  2643  00140E  EC4C  F007         	call	_ComputeStorageData	;wreg free
  2644  001412  0012               	return		;funcret
  2645  001414                     __end_of_PDUStartup:
  2646                           	opt stack 0
  2647                           tblptru	equ	0xFF8
  2648                           tblptrh	equ	0xFF7
  2649                           tblptrl	equ	0xFF6
  2650                           tablat	equ	0xFF5
  2651                           intcon	equ	0xFF2
  2652                           intcon2	equ	0xFF1
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           indf2	equ	0xFDF
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function _Update *****************
  2661 ;; Defined at:
  2662 ;;		line 150 in file "PDU.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2676 ;;      Params:         0       0       0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    6
  2683 ;; This function calls:
  2684 ;;		_writeRegisters
  2685 ;; This function is called by:
  2686 ;;		_PDUStartup
  2687 ;;		_main
  2688 ;;		_processPowerRequest
  2689 ;;		_ReadCurrent
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text17
  2694  0017E8                     __ptext17:
  2695                           	opt stack 0
  2696  0017E8                     _Update:
  2697                           	opt stack 24
  2698                           
  2699                           ;PDU.c: 151: writeRegisters();
  2700                           
  2701                           ;incstack = 0
  2702  0017E8  ECBA  F007         	call	_writeRegisters	;wreg free
  2703  0017EC  0012               	return		;funcret
  2704  0017EE                     __end_of_Update:
  2705                           	opt stack 0
  2706                           tblptru	equ	0xFF8
  2707                           tblptrh	equ	0xFF7
  2708                           tblptrl	equ	0xFF6
  2709                           tablat	equ	0xFF5
  2710                           intcon	equ	0xFF2
  2711                           intcon2	equ	0xFF1
  2712                           postinc0	equ	0xFEE
  2713                           wreg	equ	0xFE8
  2714                           indf2	equ	0xFDF
  2715                           fsr2h	equ	0xFDA
  2716                           fsr2l	equ	0xFD9
  2717                           status	equ	0xFD8
  2718                           
  2719 ;; *************** function _StartUp595 *****************
  2720 ;; Defined at:
  2721 ;;		line 10 in file "Shift595.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2735 ;;      Params:         0       0       0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    7
  2742 ;; This function calls:
  2743 ;;		_Clear595
  2744 ;;		_Delay
  2745 ;; This function is called by:
  2746 ;;		_PDUStartup
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text18
  2751  001304                     __ptext18:
  2752                           	opt stack 0
  2753  001304                     _StartUp595:
  2754                           	opt stack 22
  2755                           
  2756                           ;incstack = 0
  2757                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  2758  001304  8A8C               	bsf	3980,5,c	;volatile
  2759                           
  2760                           ;Shift595.c: 13: do { LATB0 = 1; } while(0);
  2761  001306  808A               	bsf	3978,0,c	;volatile
  2762                           
  2763                           ;Shift595.c: 15: Delay(2);
  2764  001308  0E02               	movlw	2
  2765  00130A  6E1B               	movwf	Delay@wait,c
  2766  00130C  0E00               	movlw	0
  2767  00130E  6E1C               	movwf	Delay@wait+1,c
  2768  001310  0E00               	movlw	0
  2769  001312  6E1D               	movwf	Delay@wait+2,c
  2770  001314  0E00               	movlw	0
  2771  001316  6E1E               	movwf	Delay@wait+3,c
  2772  001318  EC5A  F00A         	call	_Delay	;wreg free
  2773                           
  2774                           ;Shift595.c: 16: do { LATD5 = 0; } while(0);
  2775  00131C  9A8C               	bcf	3980,5,c	;volatile
  2776                           
  2777                           ;Shift595.c: 17: Delay(2);
  2778  00131E  0E02               	movlw	2
  2779  001320  6E1B               	movwf	Delay@wait,c
  2780  001322  0E00               	movlw	0
  2781  001324  6E1C               	movwf	Delay@wait+1,c
  2782  001326  0E00               	movlw	0
  2783  001328  6E1D               	movwf	Delay@wait+2,c
  2784  00132A  0E00               	movlw	0
  2785  00132C  6E1E               	movwf	Delay@wait+3,c
  2786  00132E  EC5A  F00A         	call	_Delay	;wreg free
  2787                           
  2788                           ;Shift595.c: 18: do { LATB0 = 0; } while(0);
  2789  001332  908A               	bcf	3978,0,c	;volatile
  2790                           
  2791                           ;Shift595.c: 19: Delay(2);
  2792  001334  0E02               	movlw	2
  2793  001336  6E1B               	movwf	Delay@wait,c
  2794  001338  0E00               	movlw	0
  2795  00133A  6E1C               	movwf	Delay@wait+1,c
  2796  00133C  0E00               	movlw	0
  2797  00133E  6E1D               	movwf	Delay@wait+2,c
  2798  001340  0E00               	movlw	0
  2799  001342  6E1E               	movwf	Delay@wait+3,c
  2800  001344  EC5A  F00A         	call	_Delay	;wreg free
  2801                           
  2802                           ;Shift595.c: 20: do { LATD5 = 1; } while(0);
  2803  001348  8A8C               	bsf	3980,5,c	;volatile
  2804                           
  2805                           ;Shift595.c: 21: Delay(2);
  2806  00134A  0E02               	movlw	2
  2807  00134C  6E1B               	movwf	Delay@wait,c
  2808  00134E  0E00               	movlw	0
  2809  001350  6E1C               	movwf	Delay@wait+1,c
  2810  001352  0E00               	movlw	0
  2811  001354  6E1D               	movwf	Delay@wait+2,c
  2812  001356  0E00               	movlw	0
  2813  001358  6E1E               	movwf	Delay@wait+3,c
  2814  00135A  EC5A  F00A         	call	_Delay	;wreg free
  2815                           
  2816                           ;Shift595.c: 22: do { LATB0 = 1; } while(0);
  2817  00135E  808A               	bsf	3978,0,c	;volatile
  2818                           
  2819                           ;Shift595.c: 24: Clear595();
  2820  001360  ECD9  F00A         	call	_Clear595	;wreg free
  2821  001364  0012               	return		;funcret
  2822  001366                     __end_of_StartUp595:
  2823                           	opt stack 0
  2824                           tblptru	equ	0xFF8
  2825                           tblptrh	equ	0xFF7
  2826                           tblptrl	equ	0xFF6
  2827                           tablat	equ	0xFF5
  2828                           intcon	equ	0xFF2
  2829                           intcon2	equ	0xFF1
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           indf2	equ	0xFDF
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837 ;; *************** function _Clear595 *****************
  2838 ;; Defined at:
  2839 ;;		line 39 in file "Shift595.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  i               2   35[COMRAM] int 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2853 ;;      Params:         0       0       0       0       0       0       0
  2854 ;;      Locals:         2       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0
  2856 ;;      Totals:         2       0       0       0       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    6
  2860 ;; This function calls:
  2861 ;;		_writeRegisters
  2862 ;; This function is called by:
  2863 ;;		_StartUp595
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text19
  2868  0015B2                     __ptext19:
  2869                           	opt stack 0
  2870  0015B2                     _Clear595:
  2871                           	opt stack 22
  2872                           
  2873                           ;Shift595.c: 40: for (int i = 3 * 8 - 1; i >= 0; i--) {
  2874                           
  2875                           ;incstack = 0
  2876  0015B2  0E00               	movlw	0
  2877  0015B4  6E25               	movwf	Clear595@i+1,c
  2878  0015B6  0E17               	movlw	23
  2879  0015B8  6E24               	movwf	Clear595@i,c
  2880  0015BA                     l4123:
  2881  0015BA  BE25               	btfsc	Clear595@i+1,7,c
  2882  0015BC  D011               	goto	l4133
  2883                           
  2884                           ;Shift595.c: 41: registers[i] = 0;
  2885  0015BE  90D8               	bcf	status,0,c
  2886  0015C0  3424               	rlcf	Clear595@i,w,c
  2887  0015C2  6ED9               	movwf	fsr2l,c
  2888  0015C4  3425               	rlcf	Clear595@i+1,w,c
  2889  0015C6  6EDA               	movwf	fsr2h,c
  2890  0015C8  0E00               	movlw	low _registers
  2891  0015CA  26D9               	addwf	fsr2l,f,c
  2892  0015CC  0E01               	movlw	high _registers
  2893  0015CE  22DA               	addwfc	fsr2h,f,c
  2894  0015D0  0E00               	movlw	0
  2895  0015D2  6EDE               	movwf	postinc2,c
  2896  0015D4  0E00               	movlw	0
  2897  0015D6  6EDD               	movwf	postdec2,c
  2898  0015D8  0624               	decf	Clear595@i,f,c
  2899  0015DA  A0D8               	btfss	status,0,c
  2900  0015DC  0625               	decf	Clear595@i+1,f,c
  2901  0015DE  D7ED               	goto	l4123
  2902  0015E0                     l4133:
  2903                           
  2904                           ;Shift595.c: 42: }
  2905                           ;Shift595.c: 44: writeRegisters();
  2906  0015E0  ECBA  F007         	call	_writeRegisters	;wreg free
  2907  0015E4  0012               	return		;funcret
  2908  0015E6                     __end_of_Clear595:
  2909                           	opt stack 0
  2910                           tblptru	equ	0xFF8
  2911                           tblptrh	equ	0xFF7
  2912                           tblptrl	equ	0xFF6
  2913                           tablat	equ	0xFF5
  2914                           intcon	equ	0xFF2
  2915                           intcon2	equ	0xFF1
  2916                           postinc0	equ	0xFEE
  2917                           wreg	equ	0xFE8
  2918                           indf2	equ	0xFDF
  2919                           postinc2	equ	0xFDE
  2920                           postdec2	equ	0xFDD
  2921                           fsr2h	equ	0xFDA
  2922                           fsr2l	equ	0xFD9
  2923                           status	equ	0xFD8
  2924                           
  2925 ;; *************** function _writeRegisters *****************
  2926 ;; Defined at:
  2927 ;;		line 50 in file "Shift595.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  i               2    2[BANK0 ] int 
  2932 ;;  val             2    0[BANK0 ] int 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2942 ;;      Params:         0       0       0       0       0       0       0
  2943 ;;      Locals:         0       4       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0
  2945 ;;      Totals:         0       4       0       0       0       0       0
  2946 ;;Total ram usage:        4 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    5
  2949 ;; This function calls:
  2950 ;;		_Delay
  2951 ;; This function is called by:
  2952 ;;		_Update
  2953 ;;		_Clear595
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text20
  2958  000F74                     __ptext20:
  2959                           	opt stack 0
  2960  000F74                     _writeRegisters:
  2961                           	opt stack 24
  2962                           
  2963                           ;Shift595.c: 51: int val = 0;
  2964                           
  2965                           ;incstack = 0
  2966  000F74  0E00               	movlw	0
  2967  000F76  0100               	movlb	0	; () banked
  2968  000F78  6FD4               	movwf	(writeRegisters@val+1)& (0+255),b
  2969  000F7A  0E00               	movlw	0
  2970  000F7C  6FD3               	movwf	writeRegisters@val& (0+255),b
  2971                           
  2972                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  2973  000F7E  0E00               	movlw	0
  2974  000F80  0100               	movlb	0	; () banked
  2975  000F82  6FD6               	movwf	(writeRegisters@i+1)& (0+255),b
  2976  000F84  0E17               	movlw	23
  2977  000F86  6FD5               	movwf	writeRegisters@i& (0+255),b
  2978  000F88                     l4071:
  2979                           
  2980                           ; BSR set to: 0
  2981  000F88  0100               	movlb	0	; () banked
  2982  000F8A  BFD6               	btfsc	(writeRegisters@i+1)& (0+255),7,b
  2983  000F8C  D024               	goto	l738
  2984                           
  2985                           ; BSR set to: 0
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  2989                           
  2990                           ; BSR set to: 0
  2991  000F8E  9E8C               	bcf	3980,7,c	;volatile
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;Shift595.c: 55: val = registers[i];
  2995                           
  2996                           ; BSR set to: 0
  2997  000F90  90D8               	bcf	status,0,c
  2998  000F92  0100               	movlb	0	; () banked
  2999  000F94  35D5               	rlcf	writeRegisters@i& (0+255),w,b
  3000  000F96  6ED9               	movwf	fsr2l,c
  3001  000F98  0100               	movlb	0	; () banked
  3002  000F9A  35D6               	rlcf	(writeRegisters@i+1)& (0+255),w,b
  3003  000F9C  6EDA               	movwf	fsr2h,c
  3004  000F9E  0E00               	movlw	low _registers
  3005  000FA0  26D9               	addwf	fsr2l,f,c
  3006  000FA2  0E01               	movlw	high _registers
  3007  000FA4  22DA               	addwfc	fsr2h,f,c
  3008  000FA6  CFDE F0D3          	movff	postinc2,writeRegisters@val
  3009  000FAA  CFDD F0D4          	movff	postdec2,writeRegisters@val+1
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;Shift595.c: 56: if (val == 1) {
  3013  000FAE  0100               	movlb	0	; () banked
  3014  000FB0  05D3               	decf	writeRegisters@val& (0+255),w,b
  3015  000FB2  0100               	movlb	0	; () banked
  3016  000FB4  11D4               	iorwf	(writeRegisters@val+1)& (0+255),w,b
  3017  000FB6  A4D8               	btfss	status,2,c
  3018  000FB8  D002               	goto	l4079
  3019                           
  3020                           ; BSR set to: 0
  3021                           
  3022                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  3023  000FBA  888C               	bsf	3980,4,c	;volatile
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;Shift595.c: 58: } else if (val == 0) {
  3027  000FBC  D006               	goto	l736
  3028  000FBE                     l4079:
  3029                           
  3030                           ; BSR set to: 0
  3031  000FBE  0100               	movlb	0	; () banked
  3032  000FC0  51D3               	movf	writeRegisters@val& (0+255),w,b
  3033  000FC2  0100               	movlb	0	; () banked
  3034  000FC4  11D4               	iorwf	(writeRegisters@val+1)& (0+255),w,b
  3035  000FC6  B4D8               	btfsc	status,2,c
  3036                           
  3037                           ; BSR set to: 0
  3038                           
  3039                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  3040  000FC8  988C               	bcf	3980,4,c	;volatile
  3041  000FCA                     l736:
  3042                           
  3043                           ; BSR set to: 0
  3044  000FCA  8E8C               	bsf	3980,7,c	;volatile
  3045                           
  3046                           ; BSR set to: 0
  3047                           
  3048                           ; BSR set to: 0
  3049  000FCC  0100               	movlb	0	; () banked
  3050  000FCE  07D5               	decf	writeRegisters@i& (0+255),f,b
  3051  000FD0  A0D8               	btfss	status,0,c
  3052  000FD2  07D6               	decf	(writeRegisters@i+1)& (0+255),f,b
  3053  000FD4  D7D9               	goto	l4071
  3054  000FD6                     l738:
  3055                           
  3056                           ; BSR set to: 0
  3057  000FD6  9E8C               	bcf	3980,7,c	;volatile
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;Shift595.c: 67: Delay(1);
  3061                           
  3062                           ; BSR set to: 0
  3063  000FD8  0E01               	movlw	1
  3064  000FDA  6E1B               	movwf	Delay@wait,c
  3065  000FDC  0E00               	movlw	0
  3066  000FDE  6E1C               	movwf	Delay@wait+1,c
  3067  000FE0  0E00               	movlw	0
  3068  000FE2  6E1D               	movwf	Delay@wait+2,c
  3069  000FE4  0E00               	movlw	0
  3070  000FE6  6E1E               	movwf	Delay@wait+3,c
  3071  000FE8  EC5A  F00A         	call	_Delay	;wreg free
  3072                           
  3073                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  3074  000FEC  8C8C               	bsf	3980,6,c	;volatile
  3075                           
  3076                           ;Shift595.c: 69: Delay(1);
  3077  000FEE  0E01               	movlw	1
  3078  000FF0  6E1B               	movwf	Delay@wait,c
  3079  000FF2  0E00               	movlw	0
  3080  000FF4  6E1C               	movwf	Delay@wait+1,c
  3081  000FF6  0E00               	movlw	0
  3082  000FF8  6E1D               	movwf	Delay@wait+2,c
  3083  000FFA  0E00               	movlw	0
  3084  000FFC  6E1E               	movwf	Delay@wait+3,c
  3085  000FFE  EC5A  F00A         	call	_Delay	;wreg free
  3086                           
  3087                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  3088  001002  9C8C               	bcf	3980,6,c	;volatile
  3089  001004  0012               	return	
  3090  001006                     __end_of_writeRegisters:
  3091                           	opt stack 0
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           intcon	equ	0xFF2
  3097                           intcon2	equ	0xFF1
  3098                           postinc0	equ	0xFEE
  3099                           wreg	equ	0xFE8
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           postdec2	equ	0xFDD
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _Delay *****************
  3108 ;; Defined at:
  3109 ;;		line 9 in file "Functions.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  wait            4   26[COMRAM] long 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  i               4   31[COMRAM] long 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3123 ;;      Params:         4       0       0       0       0       0       0
  3124 ;;      Locals:         4       0       0       0       0       0       0
  3125 ;;      Temps:          1       0       0       0       0       0       0
  3126 ;;      Totals:         9       0       0       0       0       0       0
  3127 ;;Total ram usage:        9 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    4
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_StartUp595
  3134 ;;		_writeRegisters
  3135 ;;		_main
  3136 ;;		_PotSetpoint
  3137 ;;		_respondECU
  3138 ;;		_PotClear
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text21
  3143  0014B4                     __ptext21:
  3144                           	opt stack 0
  3145  0014B4                     _Delay:
  3146                           	opt stack 24
  3147                           
  3148                           ;Functions.c: 10: long int i = 0;
  3149                           
  3150                           ;incstack = 0
  3151  0014B4  0E00               	movlw	0
  3152  0014B6  6E20               	movwf	Delay@i,c
  3153  0014B8  0E00               	movlw	0
  3154  0014BA  6E21               	movwf	Delay@i+1,c
  3155  0014BC  0E00               	movlw	0
  3156  0014BE  6E22               	movwf	Delay@i+2,c
  3157  0014C0  0E00               	movlw	0
  3158  0014C2  6E23               	movwf	Delay@i+3,c
  3159                           
  3160                           ;Functions.c: 11: for (; wait > i; i++) {
  3161  0014C4  D00D               	goto	l4033
  3162  0014C6                     l4029:
  3163                           
  3164                           ;Functions.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
  3165  0014C6  0E03               	movlw	3
  3166  0014C8  6E1F               	movwf	??_Delay& (0+255),c
  3167  0014CA  0E98               	movlw	152
  3168  0014CC                     u4497:
  3169  0014CC  2EE8               	decfsz	wreg,f,c
  3170  0014CE  D7FE               	goto	u4497
  3171  0014D0  2E1F               	decfsz	??_Delay& (0+255),f,c
  3172  0014D2  D7FC               	goto	u4497
  3173  0014D4  0E01               	movlw	1
  3174  0014D6  2620               	addwf	Delay@i,f,c
  3175  0014D8  0E00               	movlw	0
  3176  0014DA  2221               	addwfc	Delay@i+1,f,c
  3177  0014DC  2222               	addwfc	Delay@i+2,f,c
  3178  0014DE  2223               	addwfc	Delay@i+3,f,c
  3179  0014E0                     l4033:
  3180  0014E0  501B               	movf	Delay@wait,w,c
  3181  0014E2  5C20               	subwf	Delay@i,w,c
  3182  0014E4  501C               	movf	Delay@wait+1,w,c
  3183  0014E6  5821               	subwfb	Delay@i+1,w,c
  3184  0014E8  501D               	movf	Delay@wait+2,w,c
  3185  0014EA  5822               	subwfb	Delay@i+2,w,c
  3186  0014EC  5023               	movf	Delay@i+3,w,c
  3187  0014EE  0A80               	xorlw	128
  3188  0014F0  6E1F               	movwf	??_Delay& (0+255),c
  3189  0014F2  501E               	movf	Delay@wait+3,w,c
  3190  0014F4  0A80               	xorlw	128
  3191  0014F6  581F               	subwfb	??_Delay& (0+255),w,c
  3192  0014F8  B0D8               	btfsc	status,0,c
  3193  0014FA  0012               	return	
  3194  0014FC  D7E4               	goto	l4029
  3195  0014FE                     __end_of_Delay:
  3196                           	opt stack 0
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           intcon	equ	0xFF2
  3202                           intcon2	equ	0xFF1
  3203                           postinc0	equ	0xFEE
  3204                           wreg	equ	0xFE8
  3205                           indf2	equ	0xFDF
  3206                           postinc2	equ	0xFDE
  3207                           postdec2	equ	0xFDD
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function _ComputeStorageData *****************
  3213 ;; Defined at:
  3214 ;;		line 99 in file "PDU.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  i               2   29[COMRAM] int 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3228 ;;      Params:         0       0       0       0       0       0       0
  3229 ;;      Locals:         2       0       0       0       0       0       0
  3230 ;;      Temps:          2       0       0       0       0       0       0
  3231 ;;      Totals:         4       0       0       0       0       0       0
  3232 ;;Total ram usage:        4 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    5
  3235 ;; This function calls:
  3236 ;;		_DATAEE_ReadByte
  3237 ;; This function is called by:
  3238 ;;		_PDUStartup
  3239 ;;		_main
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text22
  3244  000E98                     __ptext22:
  3245                           	opt stack 0
  3246  000E98                     _ComputeStorageData:
  3247                           	opt stack 24
  3248                           
  3249                           ;PDU.c: 100: for (int i = 0; i < 12; i++) {
  3250                           
  3251                           ;incstack = 0
  3252  000E98  0E00               	movlw	0
  3253  000E9A  6E1F               	movwf	ComputeStorageData@i+1,c
  3254  000E9C  0E00               	movlw	0
  3255  000E9E  6E1E               	movwf	ComputeStorageData@i,c
  3256  000EA0                     l4333:
  3257  000EA0  BE1F               	btfsc	ComputeStorageData@i+1,7,c
  3258  000EA2  D006               	goto	l4337
  3259  000EA4  501F               	movf	ComputeStorageData@i+1,w,c
  3260  000EA6  E111               	bnz	l4343
  3261  000EA8  0E0C               	movlw	12
  3262  000EAA  5C1E               	subwf	ComputeStorageData@i,w,c
  3263  000EAC  B0D8               	btfsc	status,0,c
  3264  000EAE  D00D               	goto	l4343
  3265  000EB0                     l4337:
  3266                           
  3267                           ;PDU.c: 101: data[i] = DATAEE_ReadByte(i);
  3268  000EB0  0E84               	movlw	low _data
  3269  000EB2  241E               	addwf	ComputeStorageData@i,w,c
  3270  000EB4  6ED9               	movwf	fsr2l,c
  3271  000EB6  0E00               	movlw	high _data
  3272  000EB8  201F               	addwfc	ComputeStorageData@i+1,w,c
  3273  000EBA  6EDA               	movwf	fsr2h,c
  3274  000EBC  501E               	movf	ComputeStorageData@i,w,c
  3275  000EBE  ECD7  F00B         	call	_DATAEE_ReadByte
  3276  000EC2  6EDF               	movwf	indf2,c
  3277  000EC4  4A1E               	infsnz	ComputeStorageData@i,f,c
  3278  000EC6  2A1F               	incf	ComputeStorageData@i+1,f,c
  3279  000EC8  D7EB               	goto	l4333
  3280  000ECA                     l4343:
  3281                           
  3282                           ;PDU.c: 102: }
  3283                           ;PDU.c: 103: Currentcomp[0] = ((data[0] << 8) | data[1]);
  3284  000ECA  0100               	movlb	0	; () banked
  3285  000ECC  5185               	movf	(_data+1)& (0+255),w,b
  3286  000ECE  C084  F01C         	movff	_data,??_ComputeStorageData
  3287  000ED2  6A1D               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3288  000ED4  C01C  F01D         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3289  000ED8  6A1C               	clrf	??_ComputeStorageData,c
  3290  000EDA  101C               	iorwf	??_ComputeStorageData,w,c
  3291  000EDC  0100               	movlb	0	; () banked
  3292  000EDE  6F78               	movwf	_Currentcomp& (0+255),b
  3293  000EE0  501D               	movf	??_ComputeStorageData+1,w,c
  3294  000EE2  0100               	movlb	0	; () banked
  3295  000EE4  6F79               	movwf	(_Currentcomp+1)& (0+255),b
  3296                           
  3297                           ;PDU.c: 104: Currentcomp[1] = ((data[2] << 8) | data[3]);
  3298  000EE6  0100               	movlb	0	; () banked
  3299  000EE8  5187               	movf	(_data+3)& (0+255),w,b
  3300  000EEA  C086  F01C         	movff	_data+2,??_ComputeStorageData
  3301  000EEE  6A1D               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3302  000EF0  C01C  F01D         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3303  000EF4  6A1C               	clrf	??_ComputeStorageData,c
  3304  000EF6  101C               	iorwf	??_ComputeStorageData,w,c
  3305  000EF8  0100               	movlb	0	; () banked
  3306  000EFA  6F7A               	movwf	(_Currentcomp+2)& (0+255),b
  3307  000EFC  501D               	movf	??_ComputeStorageData+1,w,c
  3308  000EFE  0100               	movlb	0	; () banked
  3309  000F00  6F7B               	movwf	(_Currentcomp+3)& (0+255),b
  3310                           
  3311                           ;PDU.c: 105: Currentcomp[2] = ((data[4] << 8) | data[5]);
  3312  000F02  0100               	movlb	0	; () banked
  3313  000F04  5189               	movf	(_data+5)& (0+255),w,b
  3314  000F06  C088  F01C         	movff	_data+4,??_ComputeStorageData
  3315  000F0A  6A1D               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3316  000F0C  C01C  F01D         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3317  000F10  6A1C               	clrf	??_ComputeStorageData,c
  3318  000F12  101C               	iorwf	??_ComputeStorageData,w,c
  3319  000F14  0100               	movlb	0	; () banked
  3320  000F16  6F7C               	movwf	(_Currentcomp+4)& (0+255),b
  3321  000F18  501D               	movf	??_ComputeStorageData+1,w,c
  3322  000F1A  0100               	movlb	0	; () banked
  3323  000F1C  6F7D               	movwf	(_Currentcomp+5)& (0+255),b
  3324                           
  3325                           ;PDU.c: 106: Currentcomp[3] = ((data[6] << 8) | data[7]);
  3326  000F1E  0100               	movlb	0	; () banked
  3327  000F20  518B               	movf	(_data+7)& (0+255),w,b
  3328  000F22  C08A  F01C         	movff	_data+6,??_ComputeStorageData
  3329  000F26  6A1D               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3330  000F28  C01C  F01D         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3331  000F2C  6A1C               	clrf	??_ComputeStorageData,c
  3332  000F2E  101C               	iorwf	??_ComputeStorageData,w,c
  3333  000F30  0100               	movlb	0	; () banked
  3334  000F32  6F7E               	movwf	(_Currentcomp+6)& (0+255),b
  3335  000F34  501D               	movf	??_ComputeStorageData+1,w,c
  3336  000F36  0100               	movlb	0	; () banked
  3337  000F38  6F7F               	movwf	(_Currentcomp+7)& (0+255),b
  3338                           
  3339                           ;PDU.c: 107: Currentcomp[4] = ((data[8] << 8) | data[9]);
  3340  000F3A  0100               	movlb	0	; () banked
  3341  000F3C  518D               	movf	(_data+9)& (0+255),w,b
  3342  000F3E  C08C  F01C         	movff	_data+8,??_ComputeStorageData
  3343  000F42  6A1D               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3344  000F44  C01C  F01D         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3345  000F48  6A1C               	clrf	??_ComputeStorageData,c
  3346  000F4A  101C               	iorwf	??_ComputeStorageData,w,c
  3347  000F4C  0100               	movlb	0	; () banked
  3348  000F4E  6F80               	movwf	(_Currentcomp+8)& (0+255),b
  3349  000F50  501D               	movf	??_ComputeStorageData+1,w,c
  3350  000F52  0100               	movlb	0	; () banked
  3351  000F54  6F81               	movwf	(_Currentcomp+9)& (0+255),b
  3352                           
  3353                           ;PDU.c: 108: Currentcomp[5] = ((data[10] << 8) | data[11]);
  3354  000F56  0100               	movlb	0	; () banked
  3355  000F58  518F               	movf	(_data+11)& (0+255),w,b
  3356  000F5A  C08E  F01C         	movff	_data+10,??_ComputeStorageData
  3357  000F5E  6A1D               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3358  000F60  C01C  F01D         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3359  000F64  6A1C               	clrf	??_ComputeStorageData,c
  3360  000F66  101C               	iorwf	??_ComputeStorageData,w,c
  3361  000F68  0100               	movlb	0	; () banked
  3362  000F6A  6F82               	movwf	(_Currentcomp+10)& (0+255),b
  3363  000F6C  501D               	movf	??_ComputeStorageData+1,w,c
  3364  000F6E  0100               	movlb	0	; () banked
  3365  000F70  6F83               	movwf	(_Currentcomp+11)& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368  000F72  0012               	return		;funcret
  3369  000F74                     __end_of_ComputeStorageData:
  3370                           	opt stack 0
  3371                           tblptru	equ	0xFF8
  3372                           tblptrh	equ	0xFF7
  3373                           tblptrl	equ	0xFF6
  3374                           tablat	equ	0xFF5
  3375                           intcon	equ	0xFF2
  3376                           intcon2	equ	0xFF1
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           indf2	equ	0xFDF
  3380                           postinc2	equ	0xFDE
  3381                           postdec2	equ	0xFDD
  3382                           fsr2h	equ	0xFDA
  3383                           fsr2l	equ	0xFD9
  3384                           status	equ	0xFD8
  3385                           
  3386 ;; *************** function _DATAEE_ReadByte *****************
  3387 ;; Defined at:
  3388 ;;		line 143 in file "mcc_generated_files/memory.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  bAdd            1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  bAdd            1   26[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      unsigned char 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3402 ;;      Params:         0       0       0       0       0       0       0
  3403 ;;      Locals:         1       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0
  3405 ;;      Totals:         1       0       0       0       0       0       0
  3406 ;;Total ram usage:        1 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    4
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_ComputeStorageData
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text23
  3417  0017AE                     __ptext23:
  3418                           	opt stack 0
  3419  0017AE                     _DATAEE_ReadByte:
  3420                           	opt stack 24
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;incstack = 0
  3424                           ;DATAEE_ReadByte@bAdd stored from wreg
  3425  0017AE  6E1B               	movwf	DATAEE_ReadByte@bAdd,c
  3426                           
  3427                           ;memory.c: 145: EEADR = (bAdd & 0xFF);
  3428  0017B0  C01B  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  3429                           
  3430                           ;memory.c: 146: EECON1bits.CFGS = 0;
  3431  0017B4  9CA6               	bcf	4006,6,c	;volatile
  3432                           
  3433                           ;memory.c: 147: EECON1bits.EEPGD = 0;
  3434  0017B6  9EA6               	bcf	4006,7,c	;volatile
  3435                           
  3436                           ;memory.c: 148: EECON1bits.RD = 1;
  3437  0017B8  80A6               	bsf	4006,0,c	;volatile
  3438                           
  3439                           ;memory.c: 149: __nop();
  3440  0017BA  F000               	nop	
  3441                           
  3442                           ;memory.c: 150: __nop();
  3443  0017BC  F000               	nop	
  3444                           
  3445                           ;memory.c: 152: return (EEDATA);
  3446  0017BE  50A8               	movf	4008,w,c	;volatile
  3447  0017C0  0012               	return	
  3448  0017C2                     __end_of_DATAEE_ReadByte:
  3449                           	opt stack 0
  3450                           tblptru	equ	0xFF8
  3451                           tblptrh	equ	0xFF7
  3452                           tblptrl	equ	0xFF6
  3453                           tablat	equ	0xFF5
  3454                           intcon	equ	0xFF2
  3455                           intcon2	equ	0xFF1
  3456                           postinc0	equ	0xFEE
  3457                           wreg	equ	0xFE8
  3458                           indf2	equ	0xFDF
  3459                           postinc2	equ	0xFDE
  3460                           postdec2	equ	0xFDD
  3461                           fsr2h	equ	0xFDA
  3462                           fsr2l	equ	0xFD9
  3463                           status	equ	0xFD8
  3464                           
  3465 ;; *************** function _FuseSystem *****************
  3466 ;; Defined at:
  3467 ;;		line 114 in file "PDU.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  i               2   20[BANK0 ] int 
  3472 ;;  i               2   18[BANK0 ] int 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3482 ;;      Params:         0       0       0       0       0       0       0
  3483 ;;      Locals:         0       4       0       0       0       0       0
  3484 ;;      Temps:          0       5       0       0       0       0       0
  3485 ;;      Totals:         0       9       0       0       0       0       0
  3486 ;;Total ram usage:        9 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    9
  3489 ;; This function calls:
  3490 ;;		_EnableSlavePower
  3491 ;;		___wmul
  3492 ;;		_printf
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text24
  3499  000620                     __ptext24:
  3500                           	opt stack 0
  3501  000620                     _FuseSystem:
  3502                           	opt stack 21
  3503                           
  3504                           ;PDU.c: 115: printf("Reading Stuff \n");
  3505                           
  3506                           ;incstack = 0
  3507  000620  0E0B               	movlw	low STR_1
  3508  000622  0100               	movlb	0	; () banked
  3509  000624  6FD4               	movwf	printf@f& (0+255),b
  3510  000626  0E06               	movlw	high STR_1
  3511  000628  0100               	movlb	0	; () banked
  3512  00062A  6FD5               	movwf	(printf@f+1)& (0+255),b
  3513  00062C  ECFD  F003         	call	_printf	;wreg free
  3514                           
  3515                           ;PDU.c: 116: for (int i = 0; i < 6; i++) {
  3516  000630  0E00               	movlw	0
  3517  000632  0100               	movlb	0	; () banked
  3518  000634  6FE6               	movwf	(FuseSystem@i+1)& (0+255),b
  3519  000636  0E00               	movlw	0
  3520  000638  6FE5               	movwf	FuseSystem@i& (0+255),b
  3521  00063A                     l4445:
  3522                           
  3523                           ; BSR set to: 0
  3524  00063A  0100               	movlb	0	; () banked
  3525  00063C  BFE6               	btfsc	(FuseSystem@i+1)& (0+255),7,b
  3526  00063E  D008               	goto	l4449
  3527  000640  0100               	movlb	0	; () banked
  3528  000642  51E6               	movf	(FuseSystem@i+1)& (0+255),w,b
  3529  000644  E144               	bnz	l4457
  3530  000646  0E06               	movlw	6
  3531  000648  0100               	movlb	0	; () banked
  3532  00064A  5DE5               	subwf	FuseSystem@i& (0+255),w,b
  3533  00064C  B0D8               	btfsc	status,0,c
  3534  00064E  D03F               	goto	l4457
  3535  000650                     l4449:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;PDU.c: 117: Current[i] = CurrentADC[i]*146;
  3539  000650  90D8               	bcf	status,0,c
  3540  000652  0100               	movlb	0	; () banked
  3541  000654  35E5               	rlcf	FuseSystem@i& (0+255),w,b
  3542  000656  6ED9               	movwf	fsr2l,c
  3543  000658  0100               	movlb	0	; () banked
  3544  00065A  35E6               	rlcf	(FuseSystem@i+1)& (0+255),w,b
  3545  00065C  6EDA               	movwf	fsr2h,c
  3546  00065E  0E6C               	movlw	low _CurrentADC
  3547  000660  26D9               	addwf	fsr2l,f,c
  3548  000662  0E00               	movlw	high _CurrentADC
  3549  000664  22DA               	addwfc	fsr2h,f,c
  3550  000666  CFDE F01B          	movff	postinc2,___wmul@multiplier
  3551  00066A  CFDD F01C          	movff	postdec2,___wmul@multiplier+1
  3552  00066E  0E00               	movlw	0
  3553  000670  6E1E               	movwf	___wmul@multiplicand+1,c
  3554  000672  0E92               	movlw	146
  3555  000674  6E1D               	movwf	___wmul@multiplicand,c
  3556  000676  EC7B  F00B         	call	___wmul	;wreg free
  3557  00067A  90D8               	bcf	status,0,c
  3558  00067C  0100               	movlb	0	; () banked
  3559  00067E  35E5               	rlcf	FuseSystem@i& (0+255),w,b
  3560  000680  6ED9               	movwf	fsr2l,c
  3561  000682  0100               	movlb	0	; () banked
  3562  000684  35E6               	rlcf	(FuseSystem@i+1)& (0+255),w,b
  3563  000686  6EDA               	movwf	fsr2h,c
  3564  000688  0E60               	movlw	low _Current
  3565  00068A  26D9               	addwf	fsr2l,f,c
  3566  00068C  0E00               	movlw	high _Current
  3567  00068E  22DA               	addwfc	fsr2h,f,c
  3568  000690  C01B  FFDE         	movff	?___wmul,postinc2
  3569  000694  C01C  FFDD         	movff	?___wmul+1,postdec2
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;PDU.c: 118: printf("%i ",Current[i]);
  3573  000698  0E1B               	movlw	low STR_2
  3574  00069A  0100               	movlb	0	; () banked
  3575  00069C  6FD4               	movwf	printf@f& (0+255),b
  3576  00069E  0E06               	movlw	high STR_2
  3577  0006A0  0100               	movlb	0	; () banked
  3578  0006A2  6FD5               	movwf	(printf@f+1)& (0+255),b
  3579  0006A4  90D8               	bcf	status,0,c
  3580  0006A6  0100               	movlb	0	; () banked
  3581  0006A8  35E5               	rlcf	FuseSystem@i& (0+255),w,b
  3582  0006AA  6ED9               	movwf	fsr2l,c
  3583  0006AC  0100               	movlb	0	; () banked
  3584  0006AE  35E6               	rlcf	(FuseSystem@i+1)& (0+255),w,b
  3585  0006B0  6EDA               	movwf	fsr2h,c
  3586  0006B2  0E60               	movlw	low _Current
  3587  0006B4  26D9               	addwf	fsr2l,f,c
  3588  0006B6  0E00               	movlw	high _Current
  3589  0006B8  22DA               	addwfc	fsr2h,f,c
  3590  0006BA  CFDE F0D6          	movff	postinc2,?_printf+2
  3591  0006BE  CFDD F0D7          	movff	postdec2,?_printf+3
  3592  0006C2  ECFD  F003         	call	_printf	;wreg free
  3593  0006C6  0100               	movlb	0	; () banked
  3594  0006C8  4BE5               	infsnz	FuseSystem@i& (0+255),f,b
  3595  0006CA  2BE6               	incf	(FuseSystem@i+1)& (0+255),f,b
  3596  0006CC  D7B6               	goto	l4445
  3597  0006CE                     l4457:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;PDU.c: 120: }
  3601                           ;PDU.c: 121: printf("\n");
  3602  0006CE  0E19               	movlw	low (STR_1+14)
  3603  0006D0  0100               	movlb	0	; () banked
  3604  0006D2  6FD4               	movwf	printf@f& (0+255),b
  3605  0006D4  0E06               	movlw	high (STR_1+14)
  3606  0006D6  0100               	movlb	0	; () banked
  3607  0006D8  6FD5               	movwf	(printf@f+1)& (0+255),b
  3608  0006DA  ECFD  F003         	call	_printf	;wreg free
  3609                           
  3610                           ;PDU.c: 122: for (int i = 0; i < 6; i++) {
  3611  0006DE  0E00               	movlw	0
  3612  0006E0  0100               	movlb	0	; () banked
  3613  0006E2  6FE8               	movwf	(FuseSystem@i_1515+1)& (0+255),b
  3614  0006E4  0E00               	movlw	0
  3615  0006E6  6FE7               	movwf	FuseSystem@i_1515& (0+255),b
  3616                           
  3617                           ; BSR set to: 0
  3618  0006E8  0100               	movlb	0	; () banked
  3619  0006EA  BFE8               	btfsc	(FuseSystem@i_1515+1)& (0+255),7,b
  3620  0006EC  D00A               	goto	l4465
  3621  0006EE  0100               	movlb	0	; () banked
  3622  0006F0  51E8               	movf	(FuseSystem@i_1515+1)& (0+255),w,b
  3623  0006F2  E106               	bnz	u3590
  3624  0006F4  0E06               	movlw	6
  3625  0006F6  0100               	movlb	0	; () banked
  3626  0006F8  5DE7               	subwf	FuseSystem@i_1515& (0+255),w,b
  3627  0006FA  B0D8               	btfsc	status,0,c
  3628  0006FC  0012               	return	
  3629  0006FE  D001               	goto	l4465
  3630  000700                     u3590:
  3631                           
  3632                           ; BSR set to: 0
  3633  000700  0012               	return	
  3634  000702                     l4465:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;PDU.c: 123: if (Current[i] > Currentcomp[i]) {
  3638  000702  90D8               	bcf	status,0,c
  3639  000704  0100               	movlb	0	; () banked
  3640  000706  35E7               	rlcf	FuseSystem@i_1515& (0+255),w,b
  3641  000708  6ED9               	movwf	fsr2l,c
  3642  00070A  0100               	movlb	0	; () banked
  3643  00070C  35E8               	rlcf	(FuseSystem@i_1515+1)& (0+255),w,b
  3644  00070E  6EDA               	movwf	fsr2h,c
  3645  000710  0E60               	movlw	low _Current
  3646  000712  26D9               	addwf	fsr2l,f,c
  3647  000714  0E00               	movlw	high _Current
  3648  000716  22DA               	addwfc	fsr2h,f,c
  3649  000718  90D8               	bcf	status,0,c
  3650  00071A  0100               	movlb	0	; () banked
  3651  00071C  35E7               	rlcf	FuseSystem@i_1515& (0+255),w,b
  3652  00071E  6EE1               	movwf	fsr1l,c
  3653  000720  0100               	movlb	0	; () banked
  3654  000722  35E8               	rlcf	(FuseSystem@i_1515+1)& (0+255),w,b
  3655  000724  6EE2               	movwf	fsr1h,c
  3656  000726  0E78               	movlw	low _Currentcomp
  3657  000728  26E1               	addwf	fsr1l,f,c
  3658  00072A  0E00               	movlw	high _Currentcomp
  3659  00072C  22E2               	addwfc	fsr1h,f,c
  3660  00072E  50DE               	movf	postinc2,w,c
  3661  000730  5CE6               	subwf	postinc1,w,c
  3662  000732  50E6               	movf	postinc1,w,c
  3663  000734  0A80               	xorlw	128
  3664  000736  0100               	movlb	0	; () banked
  3665  000738  6FE4               	movwf	(??_FuseSystem+4)& (0+255),b
  3666  00073A  50DE               	movf	postinc2,w,c
  3667  00073C  0A80               	xorlw	128
  3668  00073E  0100               	movlb	0	; () banked
  3669  000740  59E4               	subwfb	(??_FuseSystem+4)& (0+255),w,b
  3670  000742  B0D8               	btfsc	status,0,c
  3671  000744  D04F               	goto	l4483
  3672                           
  3673                           ; BSR set to: 0
  3674                           
  3675                           ;PDU.c: 125: do { LATA3 = 1; } while(0);
  3676  000746  8689               	bsf	3977,3,c	;volatile
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;PDU.c: 126: switch(i){
  3680  000748  D030               	goto	l4481
  3681  00074A                     l4467:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;PDU.c: 128: EnableSlavePower(SAS, 0);
  3685  00074A  0E00               	movlw	0
  3686  00074C  6E26               	movwf	EnableSlavePower@onof+1,c
  3687  00074E  0E00               	movlw	0
  3688  000750  6E25               	movwf	EnableSlavePower@onof,c
  3689  000752  0E03               	movlw	3
  3690  000754  ECD8  F006         	call	_EnableSlavePower
  3691                           
  3692                           ;PDU.c: 129: break;
  3693  000758  D045               	goto	l4483
  3694  00075A                     l4469:
  3695                           
  3696                           ;PDU.c: 131: EnableSlavePower(BMM, 0);
  3697  00075A  0E00               	movlw	0
  3698  00075C  6E26               	movwf	EnableSlavePower@onof+1,c
  3699  00075E  0E00               	movlw	0
  3700  000760  6E25               	movwf	EnableSlavePower@onof,c
  3701  000762  0E04               	movlw	4
  3702  000764  ECD8  F006         	call	_EnableSlavePower
  3703                           
  3704                           ;PDU.c: 132: break;
  3705  000768  D03D               	goto	l4483
  3706  00076A                     l4471:
  3707                           
  3708                           ;PDU.c: 134: EnableSlavePower(MCS, 0);
  3709  00076A  0E00               	movlw	0
  3710  00076C  6E26               	movwf	EnableSlavePower@onof+1,c
  3711  00076E  0E00               	movlw	0
  3712  000770  6E25               	movwf	EnableSlavePower@onof,c
  3713  000772  0E02               	movlw	2
  3714  000774  ECD8  F006         	call	_EnableSlavePower
  3715                           
  3716                           ;PDU.c: 135: break;
  3717  000778  D035               	goto	l4483
  3718  00077A                     l4473:
  3719                           
  3720                           ;PDU.c: 137: EnableSlavePower(DDS, 0);
  3721  00077A  0E00               	movlw	0
  3722  00077C  6E26               	movwf	EnableSlavePower@onof+1,c
  3723  00077E  0E00               	movlw	0
  3724  000780  6E25               	movwf	EnableSlavePower@onof,c
  3725  000782  0E01               	movlw	1
  3726  000784  ECD8  F006         	call	_EnableSlavePower
  3727                           
  3728                           ;PDU.c: 138: break;
  3729  000788  D02D               	goto	l4483
  3730  00078A                     l4475:
  3731                           
  3732                           ;PDU.c: 140: EnableSlavePower(TSS, 0);
  3733  00078A  0E00               	movlw	0
  3734  00078C  6E26               	movwf	EnableSlavePower@onof+1,c
  3735  00078E  0E00               	movlw	0
  3736  000790  6E25               	movwf	EnableSlavePower@onof,c
  3737  000792  0E05               	movlw	5
  3738  000794  ECD8  F006         	call	_EnableSlavePower
  3739                           
  3740                           ;PDU.c: 141: break;
  3741  000798  D025               	goto	l4483
  3742  00079A                     l4477:
  3743                           
  3744                           ;PDU.c: 143: EnableSlavePower(AUX, 0);
  3745  00079A  0E00               	movlw	0
  3746  00079C  6E26               	movwf	EnableSlavePower@onof+1,c
  3747  00079E  0E00               	movlw	0
  3748  0007A0  6E25               	movwf	EnableSlavePower@onof,c
  3749  0007A2  0E06               	movlw	6
  3750  0007A4  ECD8  F006         	call	_EnableSlavePower
  3751                           
  3752                           ;PDU.c: 145: }
  3753                           
  3754                           ;PDU.c: 144: break;
  3755  0007A8  D01D               	goto	l4483
  3756  0007AA                     l4481:
  3757  0007AA  C0E7  F0E0         	movff	FuseSystem@i_1515,??_FuseSystem
  3758  0007AE  C0E8  F0E1         	movff	FuseSystem@i_1515+1,??_FuseSystem+1
  3759                           
  3760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3761                           ; Switch size 1, requested type "space"
  3762                           ; Number of cases is 1, Range of values is 0 to 0
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte            4     3 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767  0007B2  0100               	movlb	0	; () banked
  3768  0007B4  51E1               	movf	(??_FuseSystem+1)& (0+255),w,b
  3769  0007B6  0A00               	xorlw	0	; case 0
  3770  0007B8  A4D8               	btfss	status,2,c
  3771  0007BA  D014               	goto	l4483
  3772                           
  3773                           ; BSR set to: 0
  3774                           ; Switch size 1, requested type "space"
  3775                           ; Number of cases is 6, Range of values is 0 to 5
  3776                           ; switch strategies available:
  3777                           ; Name         Instructions Cycles
  3778                           ; simple_byte           19    10 (average)
  3779                           ;	Chosen strategy is simple_byte
  3780  0007BC  0100               	movlb	0	; () banked
  3781  0007BE  51E0               	movf	??_FuseSystem& (0+255),w,b
  3782  0007C0  0A00               	xorlw	0	; case 0
  3783  0007C2  B4D8               	btfsc	status,2,c
  3784  0007C4  D7C2               	goto	l4467
  3785  0007C6  0A01               	xorlw	1	; case 1
  3786  0007C8  B4D8               	btfsc	status,2,c
  3787  0007CA  D7C7               	goto	l4469
  3788  0007CC  0A03               	xorlw	3	; case 2
  3789  0007CE  B4D8               	btfsc	status,2,c
  3790  0007D0  D7CC               	goto	l4471
  3791  0007D2  0A01               	xorlw	1	; case 3
  3792  0007D4  B4D8               	btfsc	status,2,c
  3793  0007D6  D7D1               	goto	l4473
  3794  0007D8  0A07               	xorlw	7	; case 4
  3795  0007DA  B4D8               	btfsc	status,2,c
  3796  0007DC  D7D6               	goto	l4475
  3797  0007DE  0A01               	xorlw	1	; case 5
  3798  0007E0  B4D8               	btfsc	status,2,c
  3799  0007E2  D7DB               	goto	l4477
  3800  0007E4                     l4483:
  3801  0007E4  0100               	movlb	0	; () banked
  3802  0007E6  4BE7               	infsnz	FuseSystem@i_1515& (0+255),f,b
  3803  0007E8  2BE8               	incf	(FuseSystem@i_1515+1)& (0+255),f,b
  3804                           
  3805                           ; BSR set to: 0
  3806  0007EA  0100               	movlb	0	; () banked
  3807  0007EC  BFE8               	btfsc	(FuseSystem@i_1515+1)& (0+255),7,b
  3808  0007EE  D789               	goto	l4465
  3809  0007F0  0100               	movlb	0	; () banked
  3810  0007F2  51E8               	movf	(FuseSystem@i_1515+1)& (0+255),w,b
  3811  0007F4  E101               	bnz	l675
  3812  0007F6  D77E               	goto	L1
  3813  0007F8                     l675:
  3814                           
  3815                           ; BSR set to: 0
  3816  0007F8  0012               	return		;funcret
  3817  0007FA                     __end_of_FuseSystem:
  3818                           	opt stack 0
  3819                           tblptru	equ	0xFF8
  3820                           tblptrh	equ	0xFF7
  3821                           tblptrl	equ	0xFF6
  3822                           tablat	equ	0xFF5
  3823                           intcon	equ	0xFF2
  3824                           intcon2	equ	0xFF1
  3825                           postinc0	equ	0xFEE
  3826                           wreg	equ	0xFE8
  3827                           postinc1	equ	0xFE6
  3828                           fsr1h	equ	0xFE2
  3829                           fsr1l	equ	0xFE1
  3830                           indf2	equ	0xFDF
  3831                           postinc2	equ	0xFDE
  3832                           postdec2	equ	0xFDD
  3833                           fsr2h	equ	0xFDA
  3834                           fsr2l	equ	0xFD9
  3835                           status	equ	0xFD8
  3836                           
  3837 ;; *************** function _printf *****************
  3838 ;; Defined at:
  3839 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  f               2    1[BANK0 ] PTR const unsigned char 
  3842 ;;		 -> STR_3(2), STR_2(4), STR_1(16), 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  tmpval          4    0        struct .
  3845 ;;  cp              3    0        PTR const unsigned char 
  3846 ;;  val             2   10[BANK0 ] unsigned int 
  3847 ;;  ap              2    6[BANK0 ] PTR void [1]
  3848 ;;		 -> ?_printf(2), 
  3849 ;;  len             2    0        unsigned int 
  3850 ;;  c               1   12[BANK0 ] char 
  3851 ;;  prec            1    9[BANK0 ] char 
  3852 ;;  flag            1    8[BANK0 ] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  2    1[BANK0 ] int 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       4       0       0       0       0       0
  3863 ;;      Locals:         0       7       0       0       0       0       0
  3864 ;;      Temps:          0       1       0       0       0       0       0
  3865 ;;      Totals:         0      12       0       0       0       0       0
  3866 ;;Total ram usage:       12 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    8
  3869 ;; This function calls:
  3870 ;;		___lwdiv
  3871 ;;		___lwmod
  3872 ;;		_putch
  3873 ;; This function is called by:
  3874 ;;		_FuseSystem
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text25
  3879  0007FA                     __ptext25:
  3880                           	opt stack 0
  3881  0007FA                     _printf:
  3882                           	opt stack 21
  3883                           
  3884                           ;doprnt.c: 466: va_list ap;
  3885                           ;doprnt.c: 499: signed char c;
  3886                           ;doprnt.c: 506: signed char prec;
  3887                           ;doprnt.c: 508: unsigned char flag;
  3888                           ;doprnt.c: 523: union {
  3889                           ;doprnt.c: 524: unsigned long vd;
  3890                           ;doprnt.c: 525: double integ;
  3891                           ;doprnt.c: 526: } tmpval;
  3892                           ;doprnt.c: 528: unsigned int val;
  3893                           ;doprnt.c: 529: unsigned len;
  3894                           ;doprnt.c: 530: const char * cp;
  3895                           ;doprnt.c: 533: *ap = __va_start();
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;incstack = 0
  3899  0007FA  0ED6               	movlw	low (?_printf+2)
  3900  0007FC  0100               	movlb	0	; () banked
  3901  0007FE  6FD9               	movwf	printf@ap& (0+255),b
  3902  000800  0E00               	movlw	high (?_printf+2)
  3903  000802  0100               	movlb	0	; () banked
  3904  000804  6FDA               	movwf	(printf@ap+1)& (0+255),b
  3905                           
  3906                           ;doprnt.c: 536: while(c = *f++) {
  3907  000806  D092               	goto	l4393
  3908  000808                     l4347:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;doprnt.c: 538: if(c != '%')
  3912  000808  0E25               	movlw	37
  3913  00080A  0100               	movlb	0	; () banked
  3914  00080C  19DF               	xorwf	printf@c& (0+255),w,b
  3915  00080E  B4D8               	btfsc	status,2,c
  3916  000810  D005               	goto	l4351
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;doprnt.c: 540: {
  3920                           ;doprnt.c: 541: (putch(c) );
  3921  000812  0100               	movlb	0	; () banked
  3922  000814  51DF               	movf	printf@c& (0+255),w,b
  3923  000816  ECE8  F00B         	call	_putch
  3924                           
  3925                           ;doprnt.c: 542: continue;
  3926  00081A  D088               	goto	l4393
  3927  00081C                     l4351:
  3928                           
  3929                           ;doprnt.c: 543: }
  3930                           ;doprnt.c: 548: flag = 0;
  3931  00081C  0E00               	movlw	0
  3932  00081E  0100               	movlb	0	; () banked
  3933  000820  6FDB               	movwf	printf@flag& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           
  3937                           ; BSR set to: 0
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;doprnt.c: 822: }
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;doprnt.c: 813: continue;
  3944                           
  3945                           ;doprnt.c: 802: default:
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;doprnt.c: 698: case 'i':
  3949                           ;doprnt.c: 699: break;
  3950                           
  3951                           ; BSR set to: 0
  3952                           
  3953                           ;doprnt.c: 697: case 'd':
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;doprnt.c: 638: goto alldone;
  3957                           
  3958                           ;doprnt.c: 637: case 0:
  3959                           
  3960                           ;doprnt.c: 635: switch(c = *f++) {
  3961  000822  C0D4  FFF6         	movff	printf@f,tblptrl
  3962  000826  C0D5  FFF7         	movff	printf@f+1,tblptrh
  3963  00082A  0100               	movlb	0	; () banked
  3964  00082C  4BD4               	infsnz	printf@f& (0+255),f,b
  3965  00082E  2BD5               	incf	(printf@f+1)& (0+255),f,b
  3966  000830                     	if	0	;tblptru may be non-zero
  3967  000830                     	endif
  3968  000830                     	if	0	;tblptru may be non-zero
  3969  000830                     	endif
  3970  000830  0008               	tblrd		*
  3971  000832  CFF5 F0DF          	movff	tablat,printf@c
  3972  000836  0100               	movlb	0	; () banked
  3973  000838  51DF               	movf	printf@c& (0+255),w,b
  3974                           
  3975                           ; Switch size 1, requested type "space"
  3976                           ; Number of cases is 3, Range of values is 0 to 105
  3977                           ; switch strategies available:
  3978                           ; Name         Instructions Cycles
  3979                           ; simple_byte           10     6 (average)
  3980                           ;	Chosen strategy is simple_byte
  3981  00083A  0A00               	xorlw	0	; case 0
  3982  00083C  B4D8               	btfsc	status,2,c
  3983  00083E  0012               	return	
  3984  000840  0A64               	xorlw	100	; case 100
  3985  000842  B4D8               	btfsc	status,2,c
  3986  000844  D003               	goto	l4357
  3987  000846  0A0D               	xorlw	13	; case 105
  3988  000848  A4D8               	btfss	status,2,c
  3989  00084A  D070               	goto	l4393
  3990  00084C                     l4357:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;doprnt.c: 1253: {
  3994                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3995  00084C  C0D9  FFD9         	movff	printf@ap,fsr2l
  3996  000850  C0DA  FFDA         	movff	printf@ap+1,fsr2h
  3997  000854  CFDE F0DD          	movff	postinc2,printf@val
  3998  000858  CFDD F0DE          	movff	postdec2,printf@val+1
  3999                           
  4000                           ; BSR set to: 0
  4001  00085C  0E02               	movlw	2
  4002  00085E  0100               	movlb	0	; () banked
  4003  000860  27D9               	addwf	printf@ap& (0+255),f,b
  4004  000862  0E00               	movlw	0
  4005  000864  23DA               	addwfc	(printf@ap+1)& (0+255),f,b
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;doprnt.c: 1261: if((int)val < 0) {
  4009  000866  0100               	movlb	0	; () banked
  4010  000868  AFDE               	btfss	(printf@val+1)& (0+255),7,b
  4011  00086A  D008               	goto	l4367
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;doprnt.c: 1262: flag |= 0x03;
  4015  00086C  0E03               	movlw	3
  4016  00086E  0100               	movlb	0	; () banked
  4017  000870  13DB               	iorwf	printf@flag& (0+255),f,b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;doprnt.c: 1263: val = -val;
  4021  000872  0100               	movlb	0	; () banked
  4022  000874  6DDD               	negf	printf@val& (0+255),b
  4023  000876  1FDE               	comf	(printf@val+1)& (0+255),f,b
  4024  000878  B0D8               	btfsc	status,0,c
  4025  00087A  2BDE               	incf	(printf@val+1)& (0+255),f,b
  4026  00087C                     l4367:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;doprnt.c: 1264: }
  4030                           ;doprnt.c: 1266: }
  4031                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4032  00087C  0E01               	movlw	1
  4033  00087E  0100               	movlb	0	; () banked
  4034  000880  6FDF               	movwf	printf@c& (0+255),b
  4035  000882                     l4369:
  4036                           
  4037                           ; BSR set to: 0
  4038  000882  0E05               	movlw	5
  4039  000884  0100               	movlb	0	; () banked
  4040  000886  19DF               	xorwf	printf@c& (0+255),w,b
  4041  000888  B4D8               	btfsc	status,2,c
  4042  00088A  D016               	goto	l4381
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;doprnt.c: 1306: if(val < dpowers[c])
  4046                           
  4047                           ; BSR set to: 0
  4048                           
  4049                           ; BSR set to: 0
  4050  00088C  0100               	movlb	0	; () banked
  4051  00088E  51DF               	movf	printf@c& (0+255),w,b
  4052  000890  0D02               	mullw	2
  4053  000892  0E01               	movlw	low _dpowers
  4054  000894  24F3               	addwf	prodl,w,c
  4055  000896  6EF6               	movwf	tblptrl,c
  4056  000898  0E06               	movlw	high _dpowers
  4057  00089A  20F4               	addwfc	prodh,w,c
  4058  00089C  6EF7               	movwf	tblptrh,c
  4059  00089E                     	if	0	;There are less than 3 active tblptr bytes
  4060  00089E                     	endif
  4061  00089E  0009               	tblrd		*+
  4062  0008A0  50F5               	movf	tablat,w,c
  4063  0008A2  0100               	movlb	0	; () banked
  4064  0008A4  5DDD               	subwf	printf@val& (0+255),w,b
  4065  0008A6  0009               	tblrd		*+
  4066  0008A8  50F5               	movf	tablat,w,c
  4067  0008AA  0100               	movlb	0	; () banked
  4068  0008AC  59DE               	subwfb	(printf@val+1)& (0+255),w,b
  4069  0008AE  A0D8               	btfss	status,0,c
  4070  0008B0  D003               	goto	l4381
  4071                           
  4072                           ; BSR set to: 0
  4073                           
  4074                           ; BSR set to: 0
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;doprnt.c: 1307: break;
  4078  0008B2  0100               	movlb	0	; () banked
  4079  0008B4  2BDF               	incf	printf@c& (0+255),f,b
  4080  0008B6  D7E5               	goto	l4369
  4081  0008B8                     l4381:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;doprnt.c: 1422: {
  4085                           ;doprnt.c: 1438: if(flag & 0x03)
  4086  0008B8  C0DB  F0D8         	movff	printf@flag,??_printf
  4087  0008BC  0E03               	movlw	3
  4088  0008BE  0100               	movlb	0	; () banked
  4089  0008C0  17D8               	andwf	??_printf& (0+255),f,b
  4090  0008C2  B4D8               	btfsc	status,2,c
  4091  0008C4  D003               	goto	l4385
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;doprnt.c: 1439: (putch('-') );
  4095  0008C6  0E2D               	movlw	45
  4096  0008C8  ECE8  F00B         	call	_putch
  4097  0008CC                     l4385:
  4098                           
  4099                           ;doprnt.c: 1469: }
  4100                           ;doprnt.c: 1472: prec = c;
  4101  0008CC  C0DF  F0DC         	movff	printf@c,printf@prec
  4102                           
  4103                           ;doprnt.c: 1474: while(prec--) {
  4104  0008D0  D027               	goto	l4391
  4105  0008D2                     l4387:
  4106                           
  4107                           ;doprnt.c: 1478: {
  4108                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4109  0008D2  0100               	movlb	0	; () banked
  4110  0008D4  51DC               	movf	printf@prec& (0+255),w,b
  4111  0008D6  0D02               	mullw	2
  4112  0008D8  0E01               	movlw	low _dpowers
  4113  0008DA  24F3               	addwf	prodl,w,c
  4114  0008DC  6EF6               	movwf	tblptrl,c
  4115  0008DE  0E06               	movlw	high _dpowers
  4116  0008E0  20F4               	addwfc	prodh,w,c
  4117  0008E2  6EF7               	movwf	tblptrh,c
  4118  0008E4                     	if	0	;There are less than 3 active tblptr bytes
  4119  0008E4                     	endif
  4120  0008E4  0009               	tblrd		*+
  4121  0008E6  CFF5 F01D          	movff	tablat,___lwdiv@divisor
  4122  0008EA  000A               	tblrd		*-
  4123  0008EC  CFF5 F01E          	movff	tablat,___lwdiv@divisor+1
  4124  0008F0  C0DD  F01B         	movff	printf@val,___lwdiv@dividend
  4125  0008F4  C0DE  F01C         	movff	printf@val+1,___lwdiv@dividend+1
  4126  0008F8  EC0A  F00A         	call	___lwdiv	;wreg free
  4127  0008FC  C01B  F022         	movff	?___lwdiv,___lwmod@dividend
  4128  000900  C01C  F023         	movff	?___lwdiv+1,___lwmod@dividend+1
  4129  000904  0E00               	movlw	0
  4130  000906  6E25               	movwf	___lwmod@divisor+1,c
  4131  000908  0E0A               	movlw	10
  4132  00090A  6E24               	movwf	___lwmod@divisor,c
  4133  00090C  EC7F  F00A         	call	___lwmod	;wreg free
  4134  000910  5022               	movf	?___lwmod,w,c
  4135  000912  0F30               	addlw	48
  4136  000914  0100               	movlb	0	; () banked
  4137  000916  6FDF               	movwf	printf@c& (0+255),b
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;doprnt.c: 1523: }
  4141                           ;doprnt.c: 1524: (putch(c) );
  4142  000918  0100               	movlb	0	; () banked
  4143  00091A  51DF               	movf	printf@c& (0+255),w,b
  4144  00091C  ECE8  F00B         	call	_putch
  4145  000920                     l4391:
  4146  000920  0100               	movlb	0	; () banked
  4147  000922  07DC               	decf	printf@prec& (0+255),f,b
  4148  000924  0100               	movlb	0	; () banked
  4149  000926  29DC               	incf	printf@prec& (0+255),w,b
  4150  000928  A4D8               	btfss	status,2,c
  4151  00092A  D7D3               	goto	l4387
  4152  00092C                     l4393:
  4153  00092C  C0D4  FFF6         	movff	printf@f,tblptrl
  4154  000930  C0D5  FFF7         	movff	printf@f+1,tblptrh
  4155  000934  0100               	movlb	0	; () banked
  4156  000936  4BD4               	infsnz	printf@f& (0+255),f,b
  4157  000938  2BD5               	incf	(printf@f+1)& (0+255),f,b
  4158  00093A                     	if	0	;tblptru may be non-zero
  4159  00093A                     	endif
  4160  00093A                     	if	0	;tblptru may be non-zero
  4161  00093A                     	endif
  4162  00093A  0008               	tblrd		*
  4163  00093C  CFF5 F0DF          	movff	tablat,printf@c
  4164  000940  0100               	movlb	0	; () banked
  4165  000942  51DF               	movf	printf@c& (0+255),w,b
  4166  000944  B4D8               	btfsc	status,2,c
  4167  000946  0012               	return	
  4168  000948  D75F               	goto	l4347
  4169  00094A                     __end_of_printf:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           intcon2	equ	0xFF1
  4179                           postinc0	equ	0xFEE
  4180                           wreg	equ	0xFE8
  4181                           postinc1	equ	0xFE6
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           postinc2	equ	0xFDE
  4186                           postdec2	equ	0xFDD
  4187                           fsr2h	equ	0xFDA
  4188                           fsr2l	equ	0xFD9
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _putch *****************
  4192 ;; Defined at:
  4193 ;;		line 164 in file "UART.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  txData          1    wreg     unsigned char 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  txData          1    0[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         0       0       0       0       0       0       0
  4208 ;;      Locals:         0       1       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0
  4210 ;;      Totals:         0       1       0       0       0       0       0
  4211 ;;Total ram usage:        1 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    7
  4214 ;; This function calls:
  4215 ;;		_Send_put
  4216 ;; This function is called by:
  4217 ;;		_printf
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text26
  4222  0017D0                     __ptext26:
  4223                           	opt stack 0
  4224  0017D0                     _putch:
  4225                           	opt stack 21
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;incstack = 0
  4229                           ;putch@txData stored from wreg
  4230  0017D0  0100               	movlb	0	; () banked
  4231  0017D2  6FD3               	movwf	putch@txData& (0+255),b
  4232                           
  4233                           ;UART.c: 165: Send_put(txData);
  4234  0017D4  0100               	movlb	0	; () banked
  4235  0017D6  51D3               	movf	putch@txData& (0+255),w,b
  4236  0017D8  EC24  F00B         	call	_Send_put
  4237  0017DC  0012               	return		;funcret
  4238  0017DE                     __end_of_putch:
  4239                           	opt stack 0
  4240                           tblptru	equ	0xFF8
  4241                           tblptrh	equ	0xFF7
  4242                           tblptrl	equ	0xFF6
  4243                           tablat	equ	0xFF5
  4244                           prodh	equ	0xFF4
  4245                           prodl	equ	0xFF3
  4246                           intcon	equ	0xFF2
  4247                           intcon2	equ	0xFF1
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           postinc1	equ	0xFE6
  4251                           fsr1h	equ	0xFE2
  4252                           fsr1l	equ	0xFE1
  4253                           indf2	equ	0xFDF
  4254                           postinc2	equ	0xFDE
  4255                           postdec2	equ	0xFDD
  4256                           fsr2h	equ	0xFDA
  4257                           fsr2l	equ	0xFD9
  4258                           status	equ	0xFD8
  4259                           
  4260 ;; *************** function _Send_put *****************
  4261 ;; Defined at:
  4262 ;;		line 130 in file "UART.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  _data           1    wreg     unsigned char 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  _data           1   37[COMRAM] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4276 ;;      Params:         0       0       0       0       0       0       0
  4277 ;;      Locals:         1       0       0       0       0       0       0
  4278 ;;      Temps:          0       0       0       0       0       0       0
  4279 ;;      Totals:         1       0       0       0       0       0       0
  4280 ;;Total ram usage:        1 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    6
  4283 ;; This function calls:
  4284 ;;		_UART_buff_get
  4285 ;;		_UART_buff_put
  4286 ;; This function is called by:
  4287 ;;		_SYSTEM_Initialize
  4288 ;;		_putch
  4289 ;;		_receiveData
  4290 ;;		_sendData
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text27
  4295  001648                     __ptext27:
  4296                           	opt stack 0
  4297  001648                     _Send_put:
  4298                           	opt stack 21
  4299                           
  4300                           ;incstack = 0
  4301                           ;Send_put@_data stored from wreg
  4302  001648  6E26               	movwf	Send_put@_data,c
  4303                           
  4304                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4305  00164A  0E00               	movlw	low _output_buffer
  4306  00164C  6E21               	movwf	UART_buff_put@_this,c
  4307  00164E  0E04               	movlw	high _output_buffer
  4308  001650  6E22               	movwf	UART_buff_put@_this+1,c
  4309  001652  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4310  001656  EC34  F005         	call	_UART_buff_put	;wreg free
  4311                           
  4312                           ;UART.c: 132: if (Transmit_stall == 1) {
  4313  00165A  0444               	decf	_Transmit_stall,w,c
  4314  00165C  A4D8               	btfss	status,2,c
  4315  00165E  0012               	return	
  4316                           
  4317                           ;UART.c: 133: Transmit_stall = 0;
  4318  001660  0E00               	movlw	0
  4319  001662  6E44               	movwf	_Transmit_stall,c
  4320                           
  4321                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4322  001664  0E00               	movlw	low _output_buffer
  4323  001666  6E21               	movwf	UART_buff_get@_this,c
  4324  001668  0E04               	movlw	high _output_buffer
  4325  00166A  6E22               	movwf	UART_buff_get@_this+1,c
  4326  00166C  EC03  F008         	call	_UART_buff_get	;wreg free
  4327  001670  6EAD               	movwf	4013,c	;volatile
  4328                           
  4329                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4330  001672  889D               	bsf	3997,4,c	;volatile
  4331  001674  0012               	return	
  4332  001676                     __end_of_Send_put:
  4333                           	opt stack 0
  4334                           tblptru	equ	0xFF8
  4335                           tblptrh	equ	0xFF7
  4336                           tblptrl	equ	0xFF6
  4337                           tablat	equ	0xFF5
  4338                           prodh	equ	0xFF4
  4339                           prodl	equ	0xFF3
  4340                           intcon	equ	0xFF2
  4341                           intcon2	equ	0xFF1
  4342                           postinc0	equ	0xFEE
  4343                           wreg	equ	0xFE8
  4344                           postinc1	equ	0xFE6
  4345                           fsr1h	equ	0xFE2
  4346                           fsr1l	equ	0xFE1
  4347                           indf2	equ	0xFDF
  4348                           postinc2	equ	0xFDE
  4349                           postdec2	equ	0xFDD
  4350                           fsr2h	equ	0xFDA
  4351                           fsr2l	equ	0xFD9
  4352                           status	equ	0xFD8
  4353                           
  4354 ;; *************** function _UART_buff_put *****************
  4355 ;; Defined at:
  4356 ;;		line 68 in file "UART.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4359 ;;		 -> output_buffer(206), input_buffer(206), 
  4360 ;;  c               1   34[COMRAM] const unsigned char 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4372 ;;      Params:         3       0       0       0       0       0       0
  4373 ;;      Locals:         0       0       0       0       0       0       0
  4374 ;;      Temps:          2       0       0       0       0       0       0
  4375 ;;      Totals:         5       0       0       0       0       0       0
  4376 ;;Total ram usage:        5 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    5
  4379 ;; This function calls:
  4380 ;;		_UART_buff_modulo_inc
  4381 ;; This function is called by:
  4382 ;;		_Send_put
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text28
  4387  000A68                     __ptext28:
  4388                           	opt stack 0
  4389  000A68                     _UART_buff_put:
  4390                           	opt stack 21
  4391                           
  4392                           ;UART.c: 69: if (_this->count < 200) {
  4393                           
  4394                           ;incstack = 0
  4395  000A68  EE20 F0CC          	lfsr	2,204
  4396  000A6C  5021               	movf	UART_buff_put@_this,w,c
  4397  000A6E  26D9               	addwf	fsr2l,f,c
  4398  000A70  5022               	movf	UART_buff_put@_this+1,w,c
  4399  000A72  22DA               	addwfc	fsr2h,f,c
  4400  000A74  0E01               	movlw	1
  4401  000A76  BEDB               	btfsc	plusw2,7,c
  4402  000A78  D007               	goto	l4037
  4403  000A7A  0E01               	movlw	1
  4404  000A7C  50DB               	movf	plusw2,w,c
  4405  000A7E  E13A               	bnz	l4043
  4406  000A80  0EC8               	movlw	200
  4407  000A82  5CDE               	subwf	postinc2,w,c
  4408  000A84  B0D8               	btfsc	status,0,c
  4409  000A86  D036               	goto	l4043
  4410  000A88                     l4037:
  4411                           
  4412                           ;UART.c: 70: _this->buf[_this->head] = c;
  4413  000A88  EE20 F0C8          	lfsr	2,200
  4414  000A8C  5021               	movf	UART_buff_put@_this,w,c
  4415  000A8E  26D9               	addwf	fsr2l,f,c
  4416  000A90  5022               	movf	UART_buff_put@_this+1,w,c
  4417  000A92  22DA               	addwfc	fsr2h,f,c
  4418  000A94  CFDE F024          	movff	postinc2,??_UART_buff_put
  4419  000A98  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4420  000A9C  5024               	movf	??_UART_buff_put,w,c
  4421  000A9E  2421               	addwf	UART_buff_put@_this,w,c
  4422  000AA0  6ED9               	movwf	fsr2l,c
  4423  000AA2  5025               	movf	??_UART_buff_put+1,w,c
  4424  000AA4  2022               	addwfc	UART_buff_put@_this+1,w,c
  4425  000AA6  6EDA               	movwf	fsr2h,c
  4426  000AA8  C023  FFDF         	movff	UART_buff_put@c,indf2
  4427                           
  4428                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4429  000AAC  EE20 F0C8          	lfsr	2,200
  4430  000AB0  5021               	movf	UART_buff_put@_this,w,c
  4431  000AB2  26D9               	addwf	fsr2l,f,c
  4432  000AB4  5022               	movf	UART_buff_put@_this+1,w,c
  4433  000AB6  22DA               	addwfc	fsr2h,f,c
  4434  000AB8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4435  000ABC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4436  000AC0  0E00               	movlw	0
  4437  000AC2  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4438  000AC4  0EC8               	movlw	200
  4439  000AC6  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4440  000AC8  EC51  F00B         	call	_UART_buff_modulo_inc	;wreg free
  4441  000ACC  EE20 F0C8          	lfsr	2,200
  4442  000AD0  5021               	movf	UART_buff_put@_this,w,c
  4443  000AD2  26D9               	addwf	fsr2l,f,c
  4444  000AD4  5022               	movf	UART_buff_put@_this+1,w,c
  4445  000AD6  22DA               	addwfc	fsr2h,f,c
  4446  000AD8  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4447  000ADC  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4448                           
  4449                           ;UART.c: 72: ++_this->count;
  4450  000AE0  EE20 F0CC          	lfsr	2,204
  4451  000AE4  5021               	movf	UART_buff_put@_this,w,c
  4452  000AE6  26D9               	addwf	fsr2l,f,c
  4453  000AE8  5022               	movf	UART_buff_put@_this+1,w,c
  4454  000AEA  22DA               	addwfc	fsr2h,f,c
  4455  000AEC  2ADE               	incf	postinc2,f,c
  4456  000AEE  0E00               	movlw	0
  4457  000AF0  22DD               	addwfc	postdec2,f,c
  4458                           
  4459                           ;UART.c: 73: } else {
  4460  000AF2  0012               	return	
  4461  000AF4                     l4043:
  4462                           
  4463                           ;UART.c: 74: _this->buf[_this->head] = c;
  4464  000AF4  EE20 F0C8          	lfsr	2,200
  4465  000AF8  5021               	movf	UART_buff_put@_this,w,c
  4466  000AFA  26D9               	addwf	fsr2l,f,c
  4467  000AFC  5022               	movf	UART_buff_put@_this+1,w,c
  4468  000AFE  22DA               	addwfc	fsr2h,f,c
  4469  000B00  CFDE F024          	movff	postinc2,??_UART_buff_put
  4470  000B04  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  4471  000B08  5024               	movf	??_UART_buff_put,w,c
  4472  000B0A  2421               	addwf	UART_buff_put@_this,w,c
  4473  000B0C  6ED9               	movwf	fsr2l,c
  4474  000B0E  5025               	movf	??_UART_buff_put+1,w,c
  4475  000B10  2022               	addwfc	UART_buff_put@_this+1,w,c
  4476  000B12  6EDA               	movwf	fsr2h,c
  4477  000B14  C023  FFDF         	movff	UART_buff_put@c,indf2
  4478                           
  4479                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4480  000B18  EE20 F0C8          	lfsr	2,200
  4481  000B1C  5021               	movf	UART_buff_put@_this,w,c
  4482  000B1E  26D9               	addwf	fsr2l,f,c
  4483  000B20  5022               	movf	UART_buff_put@_this+1,w,c
  4484  000B22  22DA               	addwfc	fsr2h,f,c
  4485  000B24  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4486  000B28  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4487  000B2C  0E00               	movlw	0
  4488  000B2E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4489  000B30  0EC8               	movlw	200
  4490  000B32  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4491  000B34  EC51  F00B         	call	_UART_buff_modulo_inc	;wreg free
  4492  000B38  EE20 F0C8          	lfsr	2,200
  4493  000B3C  5021               	movf	UART_buff_put@_this,w,c
  4494  000B3E  26D9               	addwf	fsr2l,f,c
  4495  000B40  5022               	movf	UART_buff_put@_this+1,w,c
  4496  000B42  22DA               	addwfc	fsr2h,f,c
  4497  000B44  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4498  000B48  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4499                           
  4500                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4501  000B4C  EE20 F0CA          	lfsr	2,202
  4502  000B50  5021               	movf	UART_buff_put@_this,w,c
  4503  000B52  26D9               	addwf	fsr2l,f,c
  4504  000B54  5022               	movf	UART_buff_put@_this+1,w,c
  4505  000B56  22DA               	addwfc	fsr2h,f,c
  4506  000B58  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4507  000B5C  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4508  000B60  0E00               	movlw	0
  4509  000B62  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4510  000B64  0EC8               	movlw	200
  4511  000B66  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4512  000B68  EC51  F00B         	call	_UART_buff_modulo_inc	;wreg free
  4513  000B6C  EE20 F0CA          	lfsr	2,202
  4514  000B70  5021               	movf	UART_buff_put@_this,w,c
  4515  000B72  26D9               	addwf	fsr2l,f,c
  4516  000B74  5022               	movf	UART_buff_put@_this+1,w,c
  4517  000B76  22DA               	addwfc	fsr2h,f,c
  4518  000B78  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4519  000B7C  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4520  000B80  0012               	return	
  4521  000B82                     __end_of_UART_buff_put:
  4522                           	opt stack 0
  4523                           tblptru	equ	0xFF8
  4524                           tblptrh	equ	0xFF7
  4525                           tblptrl	equ	0xFF6
  4526                           tablat	equ	0xFF5
  4527                           prodh	equ	0xFF4
  4528                           prodl	equ	0xFF3
  4529                           intcon	equ	0xFF2
  4530                           intcon2	equ	0xFF1
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postinc1	equ	0xFE6
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           indf2	equ	0xFDF
  4537                           postinc2	equ	0xFDE
  4538                           postdec2	equ	0xFDD
  4539                           plusw2	equ	0xFDB
  4540                           fsr2h	equ	0xFDA
  4541                           fsr2l	equ	0xFD9
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function _UART_buff_get *****************
  4545 ;; Defined at:
  4546 ;;		line 81 in file "UART.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4549 ;;		 -> output_buffer(206), input_buffer(206), 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  c               1   36[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      unsigned char 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         2       0       0       0       0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0
  4563 ;;      Temps:          2       0       0       0       0       0       0
  4564 ;;      Totals:         5       0       0       0       0       0       0
  4565 ;;Total ram usage:        5 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    5
  4568 ;; This function calls:
  4569 ;;		_UART_buff_modulo_inc
  4570 ;; This function is called by:
  4571 ;;		_Receive_get
  4572 ;;		_Send_put
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text29
  4577  001006                     __ptext29:
  4578                           	opt stack 0
  4579  001006                     _UART_buff_get:
  4580                           	opt stack 21
  4581                           
  4582                           ;UART.c: 82: unsigned char c;
  4583                           ;UART.c: 83: if (_this->count > 0) {
  4584                           
  4585                           ;incstack = 0
  4586  001006  EE20 F0CC          	lfsr	2,204
  4587  00100A  5021               	movf	UART_buff_get@_this,w,c
  4588  00100C  26D9               	addwf	fsr2l,f,c
  4589  00100E  5022               	movf	UART_buff_get@_this+1,w,c
  4590  001010  22DA               	addwfc	fsr2h,f,c
  4591  001012  0E01               	movlw	1
  4592  001014  BEDB               	btfsc	plusw2,7,c
  4593  001016  D03C               	goto	l4057
  4594  001018  0E01               	movlw	1
  4595  00101A  50DB               	movf	plusw2,w,c
  4596  00101C  E103               	bnz	u3240
  4597  00101E  04DE               	decf	postinc2,w,c
  4598  001020  A0D8               	btfss	status,0,c
  4599  001022  D036               	goto	l4057
  4600  001024                     u3240:
  4601                           
  4602                           ;UART.c: 84: c = _this->buf[_this->tail];
  4603  001024  EE20 F0CA          	lfsr	2,202
  4604  001028  5021               	movf	UART_buff_get@_this,w,c
  4605  00102A  26D9               	addwf	fsr2l,f,c
  4606  00102C  5022               	movf	UART_buff_get@_this+1,w,c
  4607  00102E  22DA               	addwfc	fsr2h,f,c
  4608  001030  CFDE F023          	movff	postinc2,??_UART_buff_get
  4609  001034  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  4610  001038  5023               	movf	??_UART_buff_get,w,c
  4611  00103A  2421               	addwf	UART_buff_get@_this,w,c
  4612  00103C  6ED9               	movwf	fsr2l,c
  4613  00103E  5024               	movf	??_UART_buff_get+1,w,c
  4614  001040  2022               	addwfc	UART_buff_get@_this+1,w,c
  4615  001042  6EDA               	movwf	fsr2h,c
  4616  001044  50DF               	movf	indf2,w,c
  4617  001046  6E25               	movwf	UART_buff_get@c,c
  4618                           
  4619                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4620  001048  EE20 F0CA          	lfsr	2,202
  4621  00104C  5021               	movf	UART_buff_get@_this,w,c
  4622  00104E  26D9               	addwf	fsr2l,f,c
  4623  001050  5022               	movf	UART_buff_get@_this+1,w,c
  4624  001052  22DA               	addwfc	fsr2h,f,c
  4625  001054  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  4626  001058  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  4627  00105C  0E00               	movlw	0
  4628  00105E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  4629  001060  0EC8               	movlw	200
  4630  001062  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  4631  001064  EC51  F00B         	call	_UART_buff_modulo_inc	;wreg free
  4632  001068  EE20 F0CA          	lfsr	2,202
  4633  00106C  5021               	movf	UART_buff_get@_this,w,c
  4634  00106E  26D9               	addwf	fsr2l,f,c
  4635  001070  5022               	movf	UART_buff_get@_this+1,w,c
  4636  001072  22DA               	addwfc	fsr2h,f,c
  4637  001074  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4638  001078  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4639                           
  4640                           ;UART.c: 86: --_this->count;
  4641  00107C  EE20 F0CC          	lfsr	2,204
  4642  001080  5021               	movf	UART_buff_get@_this,w,c
  4643  001082  26D9               	addwf	fsr2l,f,c
  4644  001084  5022               	movf	UART_buff_get@_this+1,w,c
  4645  001086  22DA               	addwfc	fsr2h,f,c
  4646  001088  06DE               	decf	postinc2,f,c
  4647  00108A  0E00               	movlw	0
  4648  00108C  5ADD               	subwfb	postdec2,f,c
  4649                           
  4650                           ;UART.c: 87: } else {
  4651  00108E  D002               	goto	l789
  4652  001090                     l4057:
  4653                           
  4654                           ;UART.c: 88: c = 0;
  4655  001090  0E00               	movlw	0
  4656  001092  6E25               	movwf	UART_buff_get@c,c
  4657  001094                     l789:
  4658                           
  4659                           ;UART.c: 89: }
  4660                           ;UART.c: 90: return (c);
  4661  001094  5025               	movf	UART_buff_get@c,w,c
  4662  001096  0012               	return	
  4663  001098                     __end_of_UART_buff_get:
  4664                           	opt stack 0
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           intcon	equ	0xFF2
  4672                           intcon2	equ	0xFF1
  4673                           postinc0	equ	0xFEE
  4674                           wreg	equ	0xFE8
  4675                           postinc1	equ	0xFE6
  4676                           fsr1h	equ	0xFE2
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           plusw2	equ	0xFDB
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function _UART_buff_modulo_inc *****************
  4687 ;; Defined at:
  4688 ;;		line 106 in file "UART.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  value           2   26[COMRAM] const unsigned int 
  4691 ;;  modulus         2   28[COMRAM] const unsigned int 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  my_value        2   30[COMRAM] unsigned int 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  2   26[COMRAM] unsigned int 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4703 ;;      Params:         4       0       0       0       0       0       0
  4704 ;;      Locals:         2       0       0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0
  4706 ;;      Totals:         6       0       0       0       0       0       0
  4707 ;;Total ram usage:        6 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    4
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_UART_buff_put
  4714 ;;		_UART_buff_get
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text30
  4719  0016A2                     __ptext30:
  4720                           	opt stack 0
  4721  0016A2                     _UART_buff_modulo_inc:
  4722                           	opt stack 21
  4723                           
  4724                           ;UART.c: 107: unsigned int my_value = value + 1;
  4725                           
  4726                           ;incstack = 0
  4727  0016A2  0E01               	movlw	1
  4728  0016A4  241B               	addwf	UART_buff_modulo_inc@value,w,c
  4729  0016A6  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  4730  0016A8  0E00               	movlw	0
  4731  0016AA  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  4732  0016AC  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  4733                           
  4734                           ;UART.c: 108: if (my_value >= modulus) {
  4735  0016AE  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  4736  0016B0  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  4737  0016B2  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  4738  0016B4  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  4739  0016B6  A0D8               	btfss	status,0,c
  4740  0016B8  D004               	goto	l4023
  4741                           
  4742                           ;UART.c: 109: my_value = 0;
  4743  0016BA  0E00               	movlw	0
  4744  0016BC  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  4745  0016BE  0E00               	movlw	0
  4746  0016C0  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  4747  0016C2                     l4023:
  4748                           
  4749                           ;UART.c: 110: }
  4750                           ;UART.c: 111: return (my_value);
  4751  0016C2  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  4752  0016C6  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  4753  0016CA  0012               	return	
  4754  0016CC                     __end_of_UART_buff_modulo_inc:
  4755                           	opt stack 0
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           prodh	equ	0xFF4
  4761                           prodl	equ	0xFF3
  4762                           intcon	equ	0xFF2
  4763                           intcon2	equ	0xFF1
  4764                           postinc0	equ	0xFEE
  4765                           wreg	equ	0xFE8
  4766                           postinc1	equ	0xFE6
  4767                           fsr1h	equ	0xFE2
  4768                           fsr1l	equ	0xFE1
  4769                           indf2	equ	0xFDF
  4770                           postinc2	equ	0xFDE
  4771                           postdec2	equ	0xFDD
  4772                           plusw2	equ	0xFDB
  4773                           fsr2h	equ	0xFDA
  4774                           fsr2l	equ	0xFD9
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function ___lwmod *****************
  4778 ;; Defined at:
  4779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  dividend        2   33[COMRAM] unsigned int 
  4782 ;;  divisor         2   35[COMRAM] unsigned int 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  counter         1   37[COMRAM] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  2   33[COMRAM] unsigned int 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4794 ;;      Params:         4       0       0       0       0       0       0
  4795 ;;      Locals:         1       0       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0
  4797 ;;      Totals:         5       0       0       0       0       0       0
  4798 ;;Total ram usage:        5 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    4
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_printf
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text31
  4809  0014FE                     __ptext31:
  4810                           	opt stack 0
  4811  0014FE                     ___lwmod:
  4812                           	opt stack 24
  4813                           
  4814                           ;incstack = 0
  4815  0014FE  5024               	movf	___lwmod@divisor,w,c
  4816  001500  1025               	iorwf	___lwmod@divisor+1,w,c
  4817  001502  B4D8               	btfsc	status,2,c
  4818  001504  D018               	goto	l1358
  4819  001506  0E01               	movlw	1
  4820  001508  6E26               	movwf	___lwmod@counter,c
  4821  00150A  D004               	goto	l4211
  4822  00150C                     l4209:
  4823  00150C  90D8               	bcf	status,0,c
  4824  00150E  3624               	rlcf	___lwmod@divisor,f,c
  4825  001510  3625               	rlcf	___lwmod@divisor+1,f,c
  4826  001512  2A26               	incf	___lwmod@counter,f,c
  4827  001514                     l4211:
  4828  001514  AE25               	btfss	___lwmod@divisor+1,7,c
  4829  001516  D7FA               	goto	l4209
  4830  001518                     l4213:
  4831  001518  5024               	movf	___lwmod@divisor,w,c
  4832  00151A  5C22               	subwf	___lwmod@dividend,w,c
  4833  00151C  5025               	movf	___lwmod@divisor+1,w,c
  4834  00151E  5823               	subwfb	___lwmod@dividend+1,w,c
  4835  001520  A0D8               	btfss	status,0,c
  4836  001522  D004               	goto	l4217
  4837  001524  5024               	movf	___lwmod@divisor,w,c
  4838  001526  5E22               	subwf	___lwmod@dividend,f,c
  4839  001528  5025               	movf	___lwmod@divisor+1,w,c
  4840  00152A  5A23               	subwfb	___lwmod@dividend+1,f,c
  4841  00152C                     l4217:
  4842  00152C  90D8               	bcf	status,0,c
  4843  00152E  3225               	rrcf	___lwmod@divisor+1,f,c
  4844  001530  3224               	rrcf	___lwmod@divisor,f,c
  4845  001532  2E26               	decfsz	___lwmod@counter,f,c
  4846  001534  D7F1               	goto	l4213
  4847  001536                     l1358:
  4848  001536  C022  F022         	movff	___lwmod@dividend,?___lwmod
  4849  00153A  C023  F023         	movff	___lwmod@dividend+1,?___lwmod+1
  4850  00153E  0012               	return		;funcret
  4851  001540                     __end_of___lwmod:
  4852                           	opt stack 0
  4853                           tblptru	equ	0xFF8
  4854                           tblptrh	equ	0xFF7
  4855                           tblptrl	equ	0xFF6
  4856                           tablat	equ	0xFF5
  4857                           prodh	equ	0xFF4
  4858                           prodl	equ	0xFF3
  4859                           intcon	equ	0xFF2
  4860                           intcon2	equ	0xFF1
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           postinc1	equ	0xFE6
  4864                           fsr1h	equ	0xFE2
  4865                           fsr1l	equ	0xFE1
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           postdec2	equ	0xFDD
  4869                           plusw2	equ	0xFDB
  4870                           fsr2h	equ	0xFDA
  4871                           fsr2l	equ	0xFD9
  4872                           status	equ	0xFD8
  4873                           
  4874 ;; *************** function ___lwdiv *****************
  4875 ;; Defined at:
  4876 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  dividend        2   26[COMRAM] unsigned int 
  4879 ;;  divisor         2   28[COMRAM] unsigned int 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  quotient        2   31[COMRAM] unsigned int 
  4882 ;;  counter         1   30[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  2   26[COMRAM] unsigned int 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4892 ;;      Params:         4       0       0       0       0       0       0
  4893 ;;      Locals:         3       0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0
  4895 ;;      Totals:         7       0       0       0       0       0       0
  4896 ;;Total ram usage:        7 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    4
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_printf
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text32
  4907  001414                     __ptext32:
  4908                           	opt stack 0
  4909  001414                     ___lwdiv:
  4910                           	opt stack 24
  4911                           
  4912                           ;incstack = 0
  4913  001414  0E00               	movlw	0
  4914  001416  6E21               	movwf	___lwdiv@quotient+1,c
  4915  001418  0E00               	movlw	0
  4916  00141A  6E20               	movwf	___lwdiv@quotient,c
  4917  00141C  501D               	movf	___lwdiv@divisor,w,c
  4918  00141E  101E               	iorwf	___lwdiv@divisor+1,w,c
  4919  001420  B4D8               	btfsc	status,2,c
  4920  001422  D01C               	goto	l1348
  4921  001424  0E01               	movlw	1
  4922  001426  6E1F               	movwf	___lwdiv@counter,c
  4923  001428  D004               	goto	l4191
  4924  00142A                     l4189:
  4925  00142A  90D8               	bcf	status,0,c
  4926  00142C  361D               	rlcf	___lwdiv@divisor,f,c
  4927  00142E  361E               	rlcf	___lwdiv@divisor+1,f,c
  4928  001430  2A1F               	incf	___lwdiv@counter,f,c
  4929  001432                     l4191:
  4930  001432  AE1E               	btfss	___lwdiv@divisor+1,7,c
  4931  001434  D7FA               	goto	l4189
  4932  001436                     l4193:
  4933  001436  90D8               	bcf	status,0,c
  4934  001438  3620               	rlcf	___lwdiv@quotient,f,c
  4935  00143A  3621               	rlcf	___lwdiv@quotient+1,f,c
  4936  00143C  501D               	movf	___lwdiv@divisor,w,c
  4937  00143E  5C1B               	subwf	___lwdiv@dividend,w,c
  4938  001440  501E               	movf	___lwdiv@divisor+1,w,c
  4939  001442  581C               	subwfb	___lwdiv@dividend+1,w,c
  4940  001444  A0D8               	btfss	status,0,c
  4941  001446  D005               	goto	l4201
  4942  001448  501D               	movf	___lwdiv@divisor,w,c
  4943  00144A  5E1B               	subwf	___lwdiv@dividend,f,c
  4944  00144C  501E               	movf	___lwdiv@divisor+1,w,c
  4945  00144E  5A1C               	subwfb	___lwdiv@dividend+1,f,c
  4946  001450  8020               	bsf	___lwdiv@quotient,0,c
  4947  001452                     l4201:
  4948  001452  90D8               	bcf	status,0,c
  4949  001454  321E               	rrcf	___lwdiv@divisor+1,f,c
  4950  001456  321D               	rrcf	___lwdiv@divisor,f,c
  4951  001458  2E1F               	decfsz	___lwdiv@counter,f,c
  4952  00145A  D7ED               	goto	l4193
  4953  00145C                     l1348:
  4954  00145C  C020  F01B         	movff	___lwdiv@quotient,?___lwdiv
  4955  001460  C021  F01C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4956  001464  0012               	return		;funcret
  4957  001466                     __end_of___lwdiv:
  4958                           	opt stack 0
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           intcon	equ	0xFF2
  4966                           intcon2	equ	0xFF1
  4967                           postinc0	equ	0xFEE
  4968                           wreg	equ	0xFE8
  4969                           postinc1	equ	0xFE6
  4970                           fsr1h	equ	0xFE2
  4971                           fsr1l	equ	0xFE1
  4972                           indf2	equ	0xFDF
  4973                           postinc2	equ	0xFDE
  4974                           postdec2	equ	0xFDD
  4975                           plusw2	equ	0xFDB
  4976                           fsr2h	equ	0xFDA
  4977                           fsr2l	equ	0xFD9
  4978                           status	equ	0xFD8
  4979                           
  4980 ;; *************** function ___wmul *****************
  4981 ;; Defined at:
  4982 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  multiplier      2   26[COMRAM] unsigned int 
  4985 ;;  multiplicand    2   28[COMRAM] unsigned int 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  product         2   30[COMRAM] unsigned int 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  2   26[COMRAM] unsigned int 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0, prodl, prodh
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4997 ;;      Params:         4       0       0       0       0       0       0
  4998 ;;      Locals:         2       0       0       0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0
  5000 ;;      Totals:         6       0       0       0       0       0       0
  5001 ;;Total ram usage:        6 bytes
  5002 ;; Hardware stack levels used:    1
  5003 ;; Hardware stack levels required when called:    4
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_FuseSystem
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text33
  5012  0016F6                     __ptext33:
  5013                           	opt stack 0
  5014  0016F6                     ___wmul:
  5015                           	opt stack 25
  5016                           
  5017                           ;incstack = 0
  5018  0016F6  501B               	movf	___wmul@multiplier,w,c
  5019  0016F8  021D               	mulwf	___wmul@multiplicand,c
  5020  0016FA  CFF3 F01F          	movff	prodl,___wmul@product
  5021  0016FE  CFF4 F020          	movff	prodh,___wmul@product+1
  5022  001702  501B               	movf	___wmul@multiplier,w,c
  5023  001704  021E               	mulwf	___wmul@multiplicand+1,c
  5024  001706  50F3               	movf	prodl,w,c
  5025  001708  2620               	addwf	___wmul@product+1,f,c
  5026  00170A  501C               	movf	___wmul@multiplier+1,w,c
  5027  00170C  021D               	mulwf	___wmul@multiplicand,c
  5028  00170E  50F3               	movf	prodl,w,c
  5029  001710  2620               	addwf	___wmul@product+1,f,c
  5030  001712  C01F  F01B         	movff	___wmul@product,?___wmul
  5031  001716  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  5032  00171A  0012               	return	
  5033  00171C                     __end_of___wmul:
  5034                           	opt stack 0
  5035                           tblptru	equ	0xFF8
  5036                           tblptrh	equ	0xFF7
  5037                           tblptrl	equ	0xFF6
  5038                           tablat	equ	0xFF5
  5039                           prodh	equ	0xFF4
  5040                           prodl	equ	0xFF3
  5041                           intcon	equ	0xFF2
  5042                           intcon2	equ	0xFF1
  5043                           postinc0	equ	0xFEE
  5044                           wreg	equ	0xFE8
  5045                           postinc1	equ	0xFE6
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           indf2	equ	0xFDF
  5049                           postinc2	equ	0xFDE
  5050                           postdec2	equ	0xFDD
  5051                           plusw2	equ	0xFDB
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function _EnableSlavePower *****************
  5057 ;; Defined at:
  5058 ;;		line 35 in file "PDU.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  slave           1    wreg     enum E6
  5061 ;;  onof            2   36[COMRAM] int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  slave           1    0[BANK0 ] enum E6
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5073 ;;      Params:         2       0       0       0       0       0       0
  5074 ;;      Locals:         0       1       0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0
  5076 ;;      Totals:         2       1       0       0       0       0       0
  5077 ;;Total ram usage:        3 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    5
  5080 ;; This function calls:
  5081 ;;		_SetPin595
  5082 ;; This function is called by:
  5083 ;;		_PDUStartup
  5084 ;;		_FuseSystem
  5085 ;;		_main
  5086 ;;		_processPowerRequest
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text34
  5091  000DB0                     __ptext34:
  5092                           	opt stack 0
  5093  000DB0                     _EnableSlavePower:
  5094                           	opt stack 24
  5095                           
  5096                           ;incstack = 0
  5097                           ;EnableSlavePower@slave stored from wreg
  5098  000DB0  0100               	movlb	0	; () banked
  5099  000DB2  6FD3               	movwf	EnableSlavePower@slave& (0+255),b
  5100                           
  5101                           ;PDU.c: 36: switch (slave) {
  5102  000DB4  D05C               	goto	l4315
  5103  000DB6                     l4299:
  5104                           
  5105                           ;PDU.c: 38: SetPin595(2, 6, onof);
  5106  000DB6  0E00               	movlw	0
  5107  000DB8  6E1C               	movwf	SetPin595@Reg+1,c
  5108  000DBA  0E02               	movlw	2
  5109  000DBC  6E1B               	movwf	SetPin595@Reg,c
  5110  000DBE  0E00               	movlw	0
  5111  000DC0  6E1E               	movwf	SetPin595@pin+1,c
  5112  000DC2  0E06               	movlw	6
  5113  000DC4  6E1D               	movwf	SetPin595@pin,c
  5114  000DC6  C025  F01F         	movff	EnableSlavePower@onof,SetPin595@value
  5115  000DCA  C026  F020         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5116  000DCE  EC33  F00A         	call	_SetPin595	;wreg free
  5117                           
  5118                           ;PDU.c: 39: break;
  5119  000DD2  0012               	return	
  5120  000DD4                     l4301:
  5121                           
  5122                           ;PDU.c: 41: SetPin595(1, 1, onof);
  5123  000DD4  0E00               	movlw	0
  5124  000DD6  6E1C               	movwf	SetPin595@Reg+1,c
  5125  000DD8  0E01               	movlw	1
  5126  000DDA  6E1B               	movwf	SetPin595@Reg,c
  5127  000DDC  0E00               	movlw	0
  5128  000DDE  6E1E               	movwf	SetPin595@pin+1,c
  5129  000DE0  0E01               	movlw	1
  5130  000DE2  6E1D               	movwf	SetPin595@pin,c
  5131  000DE4  C025  F01F         	movff	EnableSlavePower@onof,SetPin595@value
  5132  000DE8  C026  F020         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5133  000DEC  EC33  F00A         	call	_SetPin595	;wreg free
  5134                           
  5135                           ;PDU.c: 42: break;
  5136  000DF0  0012               	return	
  5137  000DF2                     l4303:
  5138                           
  5139                           ;PDU.c: 44: SetPin595(1, 6, onof);
  5140  000DF2  0E00               	movlw	0
  5141  000DF4  6E1C               	movwf	SetPin595@Reg+1,c
  5142  000DF6  0E01               	movlw	1
  5143  000DF8  6E1B               	movwf	SetPin595@Reg,c
  5144  000DFA  0E00               	movlw	0
  5145  000DFC  6E1E               	movwf	SetPin595@pin+1,c
  5146  000DFE  0E06               	movlw	6
  5147  000E00  6E1D               	movwf	SetPin595@pin,c
  5148  000E02  C025  F01F         	movff	EnableSlavePower@onof,SetPin595@value
  5149  000E06  C026  F020         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5150  000E0A  EC33  F00A         	call	_SetPin595	;wreg free
  5151                           
  5152                           ;PDU.c: 45: MCSOn = onof;
  5153  000E0E  C025  F03C         	movff	EnableSlavePower@onof,_MCSOn
  5154                           
  5155                           ;PDU.c: 46: break;
  5156  000E12  0012               	return	
  5157  000E14                     l4307:
  5158                           
  5159                           ;PDU.c: 48: SetPin595(2, 1, onof);
  5160  000E14  0E00               	movlw	0
  5161  000E16  6E1C               	movwf	SetPin595@Reg+1,c
  5162  000E18  0E02               	movlw	2
  5163  000E1A  6E1B               	movwf	SetPin595@Reg,c
  5164  000E1C  0E00               	movlw	0
  5165  000E1E  6E1E               	movwf	SetPin595@pin+1,c
  5166  000E20  0E01               	movlw	1
  5167  000E22  6E1D               	movwf	SetPin595@pin,c
  5168  000E24  C025  F01F         	movff	EnableSlavePower@onof,SetPin595@value
  5169  000E28  C026  F020         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5170  000E2C  EC33  F00A         	call	_SetPin595	;wreg free
  5171                           
  5172                           ;PDU.c: 49: break;
  5173  000E30  0012               	return	
  5174  000E32                     l4309:
  5175                           
  5176                           ;PDU.c: 51: SetPin595(3, 6, onof);
  5177  000E32  0E00               	movlw	0
  5178  000E34  6E1C               	movwf	SetPin595@Reg+1,c
  5179  000E36  0E03               	movlw	3
  5180  000E38  6E1B               	movwf	SetPin595@Reg,c
  5181  000E3A  0E00               	movlw	0
  5182  000E3C  6E1E               	movwf	SetPin595@pin+1,c
  5183  000E3E  0E06               	movlw	6
  5184  000E40  6E1D               	movwf	SetPin595@pin,c
  5185  000E42  C025  F01F         	movff	EnableSlavePower@onof,SetPin595@value
  5186  000E46  C026  F020         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5187  000E4A  EC33  F00A         	call	_SetPin595	;wreg free
  5188                           
  5189                           ;PDU.c: 52: break;
  5190  000E4E  0012               	return	
  5191  000E50                     l4311:
  5192                           
  5193                           ;PDU.c: 54: SetPin595(3, 1, onof);
  5194  000E50  0E00               	movlw	0
  5195  000E52  6E1C               	movwf	SetPin595@Reg+1,c
  5196  000E54  0E03               	movlw	3
  5197  000E56  6E1B               	movwf	SetPin595@Reg,c
  5198  000E58  0E00               	movlw	0
  5199  000E5A  6E1E               	movwf	SetPin595@pin+1,c
  5200  000E5C  0E01               	movlw	1
  5201  000E5E  6E1D               	movwf	SetPin595@pin,c
  5202  000E60  C025  F01F         	movff	EnableSlavePower@onof,SetPin595@value
  5203  000E64  C026  F020         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5204  000E68  EC33  F00A         	call	_SetPin595	;wreg free
  5205                           
  5206                           ;PDU.c: 56: }
  5207                           
  5208                           ;PDU.c: 55: break;
  5209  000E6C  0012               	return	
  5210  000E6E                     l4315:
  5211  000E6E  0100               	movlb	0	; () banked
  5212  000E70  51D3               	movf	EnableSlavePower@slave& (0+255),w,b
  5213                           
  5214                           ; Switch size 1, requested type "space"
  5215                           ; Number of cases is 6, Range of values is 1 to 6
  5216                           ; switch strategies available:
  5217                           ; Name         Instructions Cycles
  5218                           ; simple_byte           19    10 (average)
  5219                           ;	Chosen strategy is simple_byte
  5220  000E72  0A01               	xorlw	1	; case 1
  5221  000E74  B4D8               	btfsc	status,2,c
  5222  000E76  D7CE               	goto	l4307
  5223  000E78  0A03               	xorlw	3	; case 2
  5224  000E7A  B4D8               	btfsc	status,2,c
  5225  000E7C  D7BA               	goto	l4303
  5226  000E7E  0A01               	xorlw	1	; case 3
  5227  000E80  B4D8               	btfsc	status,2,c
  5228  000E82  D799               	goto	l4299
  5229  000E84  0A07               	xorlw	7	; case 4
  5230  000E86  B4D8               	btfsc	status,2,c
  5231  000E88  D7A5               	goto	l4301
  5232  000E8A  0A01               	xorlw	1	; case 5
  5233  000E8C  B4D8               	btfsc	status,2,c
  5234  000E8E  D7D1               	goto	l4309
  5235  000E90  0A03               	xorlw	3	; case 6
  5236  000E92  A4D8               	btfss	status,2,c
  5237  000E94  0012               	return	
  5238  000E96  D7DC               	goto	l4311
  5239  000E98                     __end_of_EnableSlavePower:
  5240                           	opt stack 0
  5241                           tblptru	equ	0xFF8
  5242                           tblptrh	equ	0xFF7
  5243                           tblptrl	equ	0xFF6
  5244                           tablat	equ	0xFF5
  5245                           prodh	equ	0xFF4
  5246                           prodl	equ	0xFF3
  5247                           intcon	equ	0xFF2
  5248                           intcon2	equ	0xFF1
  5249                           postinc0	equ	0xFEE
  5250                           wreg	equ	0xFE8
  5251                           postinc1	equ	0xFE6
  5252                           fsr1h	equ	0xFE2
  5253                           fsr1l	equ	0xFE1
  5254                           indf2	equ	0xFDF
  5255                           postinc2	equ	0xFDE
  5256                           postdec2	equ	0xFDD
  5257                           plusw2	equ	0xFDB
  5258                           fsr2h	equ	0xFDA
  5259                           fsr2l	equ	0xFD9
  5260                           status	equ	0xFD8
  5261                           
  5262 ;; *************** function _SetPin595 *****************
  5263 ;; Defined at:
  5264 ;;		line 32 in file "Shift595.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  Reg             2   26[COMRAM] int 
  5267 ;;  pin             2   28[COMRAM] int 
  5268 ;;  value           2   30[COMRAM] int 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5280 ;;      Params:         6       0       0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0
  5282 ;;      Temps:          4       0       0       0       0       0       0
  5283 ;;      Totals:        10       0       0       0       0       0       0
  5284 ;;Total ram usage:       10 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    4
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_EnableSlavePower
  5291 ;;		_ReadCurrent
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text35
  5296  001466                     __ptext35:
  5297                           	opt stack 0
  5298  001466                     _SetPin595:
  5299                           	opt stack 24
  5300                           
  5301                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  5302                           
  5303                           ;incstack = 0
  5304  001466  0EF0               	movlw	240
  5305  001468  6E21               	movwf	??_SetPin595& (0+255),c
  5306  00146A  0EFF               	movlw	255
  5307  00146C  6E22               	movwf	(??_SetPin595+1)& (0+255),c
  5308  00146E  C01B  F023         	movff	SetPin595@Reg,??_SetPin595+2
  5309  001472  C01C  F024         	movff	SetPin595@Reg+1,??_SetPin595+3
  5310  001476  90D8               	bcf	status,0,c
  5311  001478  3623               	rlcf	??_SetPin595+2,f,c
  5312  00147A  3624               	rlcf	??_SetPin595+3,f,c
  5313  00147C  90D8               	bcf	status,0,c
  5314  00147E  3623               	rlcf	??_SetPin595+2,f,c
  5315  001480  3624               	rlcf	??_SetPin595+3,f,c
  5316  001482  90D8               	bcf	status,0,c
  5317  001484  3623               	rlcf	??_SetPin595+2,f,c
  5318  001486  3624               	rlcf	??_SetPin595+3,f,c
  5319  001488  501D               	movf	SetPin595@pin,w,c
  5320  00148A  2623               	addwf	??_SetPin595+2,f,c
  5321  00148C  501E               	movf	SetPin595@pin+1,w,c
  5322  00148E  2224               	addwfc	??_SetPin595+3,f,c
  5323  001490  90D8               	bcf	status,0,c
  5324  001492  3623               	rlcf	??_SetPin595+2,f,c
  5325  001494  3624               	rlcf	??_SetPin595+3,f,c
  5326  001496  5021               	movf	??_SetPin595,w,c
  5327  001498  2623               	addwf	??_SetPin595+2,f,c
  5328  00149A  5022               	movf	??_SetPin595+1,w,c
  5329  00149C  2224               	addwfc	??_SetPin595+3,f,c
  5330  00149E  0E00               	movlw	low _registers
  5331  0014A0  2423               	addwf	??_SetPin595+2,w,c
  5332  0014A2  6ED9               	movwf	fsr2l,c
  5333  0014A4  0E01               	movlw	high _registers
  5334  0014A6  2024               	addwfc	??_SetPin595+3,w,c
  5335  0014A8  6EDA               	movwf	fsr2h,c
  5336  0014AA  C01F  FFDE         	movff	SetPin595@value,postinc2
  5337  0014AE  C020  FFDD         	movff	SetPin595@value+1,postdec2
  5338  0014B2  0012               	return		;funcret
  5339  0014B4                     __end_of_SetPin595:
  5340                           	opt stack 0
  5341                           tblptru	equ	0xFF8
  5342                           tblptrh	equ	0xFF7
  5343                           tblptrl	equ	0xFF6
  5344                           tablat	equ	0xFF5
  5345                           prodh	equ	0xFF4
  5346                           prodl	equ	0xFF3
  5347                           intcon	equ	0xFF2
  5348                           intcon2	equ	0xFF1
  5349                           postinc0	equ	0xFEE
  5350                           wreg	equ	0xFE8
  5351                           postinc1	equ	0xFE6
  5352                           fsr1h	equ	0xFE2
  5353                           fsr1l	equ	0xFE1
  5354                           indf2	equ	0xFDF
  5355                           postinc2	equ	0xFDE
  5356                           postdec2	equ	0xFDD
  5357                           plusw2	equ	0xFDB
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8
  5361                           
  5362 ;; *************** function _DATAEE_WriteByte *****************
  5363 ;; Defined at:
  5364 ;;		line 121 in file "mcc_generated_files/memory.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  bAdd            1    wreg     unsigned char 
  5367 ;;  bData           1   26[COMRAM] unsigned char 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  bAdd            1   27[COMRAM] unsigned char 
  5370 ;;  GIEBitValue     1   28[COMRAM] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5380 ;;      Params:         1       0       0       0       0       0       0
  5381 ;;      Locals:         2       0       0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0
  5383 ;;      Totals:         3       0       0       0       0       0       0
  5384 ;;Total ram usage:        3 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    4
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_main
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text36
  5395  00157C                     __ptext36:
  5396                           	opt stack 0
  5397  00157C                     _DATAEE_WriteByte:
  5398                           	opt stack 26
  5399                           
  5400                           ;incstack = 0
  5401                           ;DATAEE_WriteByte@bAdd stored from wreg
  5402  00157C  6E1C               	movwf	DATAEE_WriteByte@bAdd,c
  5403                           
  5404                           ;memory.c: 123: uint8_t GIEBitValue = INTCONbits.GIE;
  5405  00157E  0E00               	movlw	0
  5406  001580  BEF2               	btfsc	intcon,7,c	;volatile
  5407  001582  0E01               	movlw	1
  5408  001584  6E1D               	movwf	DATAEE_WriteByte@GIEBitValue,c
  5409                           
  5410                           ;memory.c: 125: EEADR = (bAdd & 0xFF);
  5411  001586  C01C  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  5412                           
  5413                           ;memory.c: 126: EEDATA = bData;
  5414  00158A  C01B  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  5415                           
  5416                           ;memory.c: 127: EECON1bits.EEPGD = 0;
  5417  00158E  9EA6               	bcf	4006,7,c	;volatile
  5418                           
  5419                           ;memory.c: 128: EECON1bits.CFGS = 0;
  5420  001590  9CA6               	bcf	4006,6,c	;volatile
  5421                           
  5422                           ;memory.c: 129: EECON1bits.WREN = 1;
  5423  001592  84A6               	bsf	4006,2,c	;volatile
  5424                           
  5425                           ;memory.c: 130: INTCONbits.GIE = 0;
  5426  001594  9EF2               	bcf	intcon,7,c	;volatile
  5427                           
  5428                           ;memory.c: 131: EECON2 = 0x55;
  5429  001596  0E55               	movlw	85
  5430  001598  6EA7               	movwf	4007,c	;volatile
  5431                           
  5432                           ;memory.c: 132: EECON2 = 0xAA;
  5433  00159A  0EAA               	movlw	170
  5434  00159C  6EA7               	movwf	4007,c	;volatile
  5435                           
  5436                           ;memory.c: 133: EECON1bits.WR = 1;
  5437  00159E  82A6               	bsf	4006,1,c	;volatile
  5438  0015A0                     l164:
  5439  0015A0  B2A6               	btfsc	4006,1,c	;volatile
  5440  0015A2  D7FE               	goto	l164
  5441                           
  5442                           ;memory.c: 137: }
  5443                           ;memory.c: 139: EECON1bits.WREN = 0;
  5444  0015A4  94A6               	bcf	4006,2,c	;volatile
  5445                           
  5446                           ;memory.c: 140: INTCONbits.GIE = GIEBitValue;
  5447  0015A6  B01D               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  5448  0015A8  D002               	bra	u3565
  5449  0015AA  9EF2               	bcf	intcon,7,c	;volatile
  5450  0015AC  D001               	bra	u3566
  5451  0015AE                     u3565:
  5452  0015AE  8EF2               	bsf	intcon,7,c	;volatile
  5453  0015B0                     u3566:
  5454  0015B0  0012               	return		;funcret
  5455  0015B2                     __end_of_DATAEE_WriteByte:
  5456                           	opt stack 0
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           intcon	equ	0xFF2
  5464                           intcon2	equ	0xFF1
  5465                           postinc0	equ	0xFEE
  5466                           wreg	equ	0xFE8
  5467                           postinc1	equ	0xFE6
  5468                           fsr1h	equ	0xFE2
  5469                           fsr1l	equ	0xFE1
  5470                           indf2	equ	0xFDF
  5471                           postinc2	equ	0xFDE
  5472                           postdec2	equ	0xFDD
  5473                           plusw2	equ	0xFDB
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8
  5477                           
  5478 ;; *************** function _INTERRUPT_InterruptManager *****************
  5479 ;; Defined at:
  5480 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5494 ;;      Params:         0       0       0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0
  5496 ;;      Temps:         14       0       0       0       0       0       0
  5497 ;;      Totals:        14       0       0       0       0       0       0
  5498 ;;Total ram usage:       14 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    3
  5501 ;; This function calls:
  5502 ;;		_ADC_ISR
  5503 ;;		_EUSART1_Receive_ISR
  5504 ;;		_EUSART1_Transmit_ISR
  5505 ;; This function is called by:
  5506 ;;		Interrupt level 2
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	intcode
  5511  000008                     __pintcode:
  5512                           	opt stack 0
  5513  000008                     _INTERRUPT_InterruptManager:
  5514                           	opt stack 21
  5515                           
  5516                           ;incstack = 0
  5517  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5518  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  5519  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5520  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  5521  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  5522  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  5523  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  5524  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  5525  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  5526  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
  5527  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
  5528  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  5529  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  5530  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  5531  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
  5532                           
  5533                           ;interrupt_manager.c: 70: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  5534  000042  BA9D               	btfsc	3997,5,c	;volatile
  5535  000044  AA9E               	btfss	3998,5,c	;volatile
  5536  000046  D003               	goto	i2l63
  5537                           
  5538                           ;interrupt_manager.c: 71: {
  5539                           ;interrupt_manager.c: 72: EUSART1_Receive_ISR();
  5540  000048  EC9D  F00B         	call	_EUSART1_Receive_ISR	;wreg free
  5541                           
  5542                           ;interrupt_manager.c: 73: }
  5543  00004C  D00B               	goto	i2l69
  5544  00004E                     i2l63:
  5545                           
  5546                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5547  00004E  B89D               	btfsc	3997,4,c	;volatile
  5548  000050  A89E               	btfss	3998,4,c	;volatile
  5549  000052  D003               	goto	i2l65
  5550                           
  5551                           ;interrupt_manager.c: 75: {
  5552                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
  5553  000054  ECF3  F00A         	call	_EUSART1_Transmit_ISR	;wreg free
  5554                           
  5555                           ;interrupt_manager.c: 77: }
  5556  000058  D005               	goto	i2l69
  5557  00005A                     i2l65:
  5558                           
  5559                           ;interrupt_manager.c: 78: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  5560  00005A  BC9D               	btfsc	3997,6,c	;volatile
  5561  00005C  AC9E               	btfss	3998,6,c	;volatile
  5562  00005E  D002               	goto	i2l69
  5563                           
  5564                           ;interrupt_manager.c: 79: {
  5565                           ;interrupt_manager.c: 80: ADC_ISR();
  5566  000060  ECF9  F00B         	call	_ADC_ISR	;wreg free
  5567  000064                     i2l69:
  5568  000064  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  5569  000068  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  5570  00006C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  5571  000070  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  5572  000074  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  5573  000078  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  5574  00007C  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  5575  000080  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  5576  000084  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  5577  000088  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  5578  00008C  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  5579  000090  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  5580  000094  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5581  000098  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5582  00009C  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5583  00009E  0011               	retfie		f
  5584  0000A0                     __end_of_INTERRUPT_InterruptManager:
  5585                           	opt stack 0
  5586                           pclatu	equ	0xFFB
  5587                           pclath	equ	0xFFA
  5588                           tblptru	equ	0xFF8
  5589                           tblptrh	equ	0xFF7
  5590                           tblptrl	equ	0xFF6
  5591                           tablat	equ	0xFF5
  5592                           prodh	equ	0xFF4
  5593                           prodl	equ	0xFF3
  5594                           intcon	equ	0xFF2
  5595                           intcon2	equ	0xFF1
  5596                           postinc0	equ	0xFEE
  5597                           fsr0h	equ	0xFEA
  5598                           fsr0l	equ	0xFE9
  5599                           wreg	equ	0xFE8
  5600                           postinc1	equ	0xFE6
  5601                           fsr1h	equ	0xFE2
  5602                           fsr1l	equ	0xFE1
  5603                           indf2	equ	0xFDF
  5604                           postinc2	equ	0xFDE
  5605                           postdec2	equ	0xFDD
  5606                           plusw2	equ	0xFDB
  5607                           fsr2h	equ	0xFDA
  5608                           fsr2l	equ	0xFD9
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function _EUSART1_Transmit_ISR *****************
  5612 ;; Defined at:
  5613 ;;		line 150 in file "UART.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5627 ;;      Params:         0       0       0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0
  5630 ;;      Totals:         0       0       0       0       0       0       0
  5631 ;;Total ram usage:        0 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    2
  5634 ;; This function calls:
  5635 ;;		_UART_buff_size
  5636 ;;		i2_UART_buff_get
  5637 ;; This function is called by:
  5638 ;;		_INTERRUPT_InterruptManager
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text38
  5643  0015E6                     __ptext38:
  5644                           	opt stack 0
  5645  0015E6                     _EUSART1_Transmit_ISR:
  5646                           	opt stack 21
  5647                           
  5648                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
  5649                           
  5650                           ;incstack = 0
  5651  0015E6  0E00               	movlw	low _output_buffer
  5652  0015E8  6E01               	movwf	UART_buff_size@_this,c
  5653  0015EA  0E04               	movlw	high _output_buffer
  5654  0015EC  6E02               	movwf	UART_buff_size@_this+1,c
  5655  0015EE  ECB8  F00B         	call	_UART_buff_size	;wreg free
  5656  0015F2  BE02               	btfsc	?_UART_buff_size+1,7,c
  5657  0015F4  D00D               	goto	i2l3323
  5658  0015F6  5002               	movf	?_UART_buff_size+1,w,c
  5659  0015F8  E103               	bnz	i2u205_40
  5660  0015FA  0401               	decf	?_UART_buff_size,w,c
  5661  0015FC  A0D8               	btfss	status,0,c
  5662  0015FE  D008               	goto	i2l3323
  5663  001600                     i2u205_40:
  5664                           
  5665                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
  5666  001600  0E00               	movlw	low _output_buffer
  5667  001602  6E07               	movwf	i2UART_buff_get@_this,c
  5668  001604  0E04               	movlw	high _output_buffer
  5669  001606  6E08               	movwf	i2UART_buff_get@_this+1,c
  5670  001608  EC4C  F008         	call	i2_UART_buff_get	;wreg free
  5671  00160C  6EAD               	movwf	4013,c	;volatile
  5672                           
  5673                           ;UART.c: 154: } else {
  5674  00160E  0012               	return	
  5675  001610                     i2l3323:
  5676                           
  5677                           ;UART.c: 155: Transmit_stall = 1;
  5678  001610  0E01               	movlw	1
  5679  001612  6E44               	movwf	_Transmit_stall,c
  5680                           
  5681                           ;UART.c: 156: PIE1bits.TX1IE = 0;
  5682  001614  989D               	bcf	3997,4,c	;volatile
  5683  001616  0012               	return	
  5684  001618                     __end_of_EUSART1_Transmit_ISR:
  5685                           	opt stack 0
  5686                           pclatu	equ	0xFFB
  5687                           pclath	equ	0xFFA
  5688                           tblptru	equ	0xFF8
  5689                           tblptrh	equ	0xFF7
  5690                           tblptrl	equ	0xFF6
  5691                           tablat	equ	0xFF5
  5692                           prodh	equ	0xFF4
  5693                           prodl	equ	0xFF3
  5694                           intcon	equ	0xFF2
  5695                           intcon2	equ	0xFF1
  5696                           postinc0	equ	0xFEE
  5697                           fsr0h	equ	0xFEA
  5698                           fsr0l	equ	0xFE9
  5699                           wreg	equ	0xFE8
  5700                           postinc1	equ	0xFE6
  5701                           fsr1h	equ	0xFE2
  5702                           fsr1l	equ	0xFE1
  5703                           indf2	equ	0xFDF
  5704                           postinc2	equ	0xFDE
  5705                           postdec2	equ	0xFDD
  5706                           plusw2	equ	0xFDB
  5707                           fsr2h	equ	0xFDA
  5708                           fsr2l	equ	0xFD9
  5709                           status	equ	0xFD8
  5710                           
  5711 ;; *************** function i2_UART_buff_get *****************
  5712 ;; Defined at:
  5713 ;;		line 81 in file "UART.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  5716 ;;		 -> output_buffer(206), input_buffer(206), 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      unsigned char 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5728 ;;      Params:         2       0       0       0       0       0       0
  5729 ;;      Locals:         1       0       0       0       0       0       0
  5730 ;;      Temps:          2       0       0       0       0       0       0
  5731 ;;      Totals:         5       0       0       0       0       0       0
  5732 ;;Total ram usage:        5 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    1
  5735 ;; This function calls:
  5736 ;;		i2_UART_buff_modulo_inc
  5737 ;; This function is called by:
  5738 ;;		_EUSART1_Transmit_ISR
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text39
  5743  001098                     __ptext39:
  5744                           	opt stack 0
  5745  001098                     i2_UART_buff_get:
  5746                           	opt stack 21
  5747                           
  5748                           ;UART.c: 82: unsigned char c;
  5749                           ;UART.c: 83: if (_this->count > 0) {
  5750                           
  5751                           ;incstack = 0
  5752  001098  EE20 F0CC          	lfsr	2,204
  5753  00109C  5007               	movf	i2UART_buff_get@_this,w,c
  5754  00109E  26D9               	addwf	fsr2l,f,c
  5755  0010A0  5008               	movf	i2UART_buff_get@_this+1,w,c
  5756  0010A2  22DA               	addwfc	fsr2h,f,c
  5757  0010A4  0E01               	movlw	1
  5758  0010A6  BEDB               	btfsc	plusw2,7,c
  5759  0010A8  D03C               	goto	i2l3299
  5760  0010AA  0E01               	movlw	1
  5761  0010AC  50DB               	movf	plusw2,w,c
  5762  0010AE  E103               	bnz	i2u202_40
  5763  0010B0  04DE               	decf	postinc2,w,c
  5764  0010B2  A0D8               	btfss	status,0,c
  5765  0010B4  D036               	goto	i2l3299
  5766  0010B6                     i2u202_40:
  5767                           
  5768                           ;UART.c: 84: c = _this->buf[_this->tail];
  5769  0010B6  EE20 F0CA          	lfsr	2,202
  5770  0010BA  5007               	movf	i2UART_buff_get@_this,w,c
  5771  0010BC  26D9               	addwf	fsr2l,f,c
  5772  0010BE  5008               	movf	i2UART_buff_get@_this+1,w,c
  5773  0010C0  22DA               	addwfc	fsr2h,f,c
  5774  0010C2  CFDE F009          	movff	postinc2,??i2_UART_buff_get
  5775  0010C6  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
  5776  0010CA  5009               	movf	??i2_UART_buff_get,w,c
  5777  0010CC  2407               	addwf	i2UART_buff_get@_this,w,c
  5778  0010CE  6ED9               	movwf	fsr2l,c
  5779  0010D0  500A               	movf	??i2_UART_buff_get+1,w,c
  5780  0010D2  2008               	addwfc	i2UART_buff_get@_this+1,w,c
  5781  0010D4  6EDA               	movwf	fsr2h,c
  5782  0010D6  50DF               	movf	indf2,w,c
  5783  0010D8  6E0B               	movwf	i2UART_buff_get@c,c
  5784                           
  5785                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5786  0010DA  EE20 F0CA          	lfsr	2,202
  5787  0010DE  5007               	movf	i2UART_buff_get@_this,w,c
  5788  0010E0  26D9               	addwf	fsr2l,f,c
  5789  0010E2  5008               	movf	i2UART_buff_get@_this+1,w,c
  5790  0010E4  22DA               	addwfc	fsr2h,f,c
  5791  0010E6  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  5792  0010EA  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  5793  0010EE  0E00               	movlw	0
  5794  0010F0  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  5795  0010F2  0EC8               	movlw	200
  5796  0010F4  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  5797  0010F6  EC66  F00B         	call	i2_UART_buff_modulo_inc	;wreg free
  5798  0010FA  EE20 F0CA          	lfsr	2,202
  5799  0010FE  5007               	movf	i2UART_buff_get@_this,w,c
  5800  001100  26D9               	addwf	fsr2l,f,c
  5801  001102  5008               	movf	i2UART_buff_get@_this+1,w,c
  5802  001104  22DA               	addwfc	fsr2h,f,c
  5803  001106  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  5804  00110A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  5805                           
  5806                           ;UART.c: 86: --_this->count;
  5807  00110E  EE20 F0CC          	lfsr	2,204
  5808  001112  5007               	movf	i2UART_buff_get@_this,w,c
  5809  001114  26D9               	addwf	fsr2l,f,c
  5810  001116  5008               	movf	i2UART_buff_get@_this+1,w,c
  5811  001118  22DA               	addwfc	fsr2h,f,c
  5812  00111A  06DE               	decf	postinc2,f,c
  5813  00111C  0E00               	movlw	0
  5814  00111E  5ADD               	subwfb	postdec2,f,c
  5815                           
  5816                           ;UART.c: 87: } else {
  5817  001120  D002               	goto	i2l789
  5818  001122                     i2l3299:
  5819                           
  5820                           ;UART.c: 88: c = 0;
  5821  001122  0E00               	movlw	0
  5822  001124  6E0B               	movwf	i2UART_buff_get@c,c
  5823  001126                     i2l789:
  5824                           
  5825                           ;UART.c: 89: }
  5826                           ;UART.c: 90: return (c);
  5827  001126  500B               	movf	i2UART_buff_get@c,w,c
  5828  001128  0012               	return	
  5829  00112A                     __end_ofi2_UART_buff_get:
  5830                           	opt stack 0
  5831                           pclatu	equ	0xFFB
  5832                           pclath	equ	0xFFA
  5833                           tblptru	equ	0xFF8
  5834                           tblptrh	equ	0xFF7
  5835                           tblptrl	equ	0xFF6
  5836                           tablat	equ	0xFF5
  5837                           prodh	equ	0xFF4
  5838                           prodl	equ	0xFF3
  5839                           intcon	equ	0xFF2
  5840                           intcon2	equ	0xFF1
  5841                           postinc0	equ	0xFEE
  5842                           fsr0h	equ	0xFEA
  5843                           fsr0l	equ	0xFE9
  5844                           wreg	equ	0xFE8
  5845                           postinc1	equ	0xFE6
  5846                           fsr1h	equ	0xFE2
  5847                           fsr1l	equ	0xFE1
  5848                           indf2	equ	0xFDF
  5849                           postinc2	equ	0xFDE
  5850                           postdec2	equ	0xFDD
  5851                           plusw2	equ	0xFDB
  5852                           fsr2h	equ	0xFDA
  5853                           fsr2l	equ	0xFD9
  5854                           status	equ	0xFD8
  5855                           
  5856 ;; *************** function _UART_buff_size *****************
  5857 ;; Defined at:
  5858 ;;		line 102 in file "UART.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  5861 ;;		 -> output_buffer(206), input_buffer(206), 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  2    0[COMRAM] int 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5873 ;;      Params:         2       0       0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0
  5876 ;;      Totals:         2       0       0       0       0       0       0
  5877 ;;Total ram usage:        2 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_Receive_available
  5883 ;;		_EUSART1_Transmit_ISR
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text40
  5888  001770                     __ptext40:
  5889                           	opt stack 0
  5890  001770                     _UART_buff_size:
  5891                           	opt stack 22
  5892                           
  5893                           ;UART.c: 103: return (_this->count);
  5894                           
  5895                           ;incstack = 0
  5896  001770  EE20 F0CC          	lfsr	2,204
  5897  001774  5001               	movf	UART_buff_size@_this,w,c
  5898  001776  26D9               	addwf	fsr2l,f,c
  5899  001778  5002               	movf	UART_buff_size@_this+1,w,c
  5900  00177A  22DA               	addwfc	fsr2h,f,c
  5901  00177C  CFDE F001          	movff	postinc2,?_UART_buff_size
  5902  001780  CFDD F002          	movff	postdec2,?_UART_buff_size+1
  5903  001784  0012               	return	
  5904  001786                     __end_of_UART_buff_size:
  5905                           	opt stack 0
  5906                           pclatu	equ	0xFFB
  5907                           pclath	equ	0xFFA
  5908                           tblptru	equ	0xFF8
  5909                           tblptrh	equ	0xFF7
  5910                           tblptrl	equ	0xFF6
  5911                           tablat	equ	0xFF5
  5912                           prodh	equ	0xFF4
  5913                           prodl	equ	0xFF3
  5914                           intcon	equ	0xFF2
  5915                           intcon2	equ	0xFF1
  5916                           postinc0	equ	0xFEE
  5917                           fsr0h	equ	0xFEA
  5918                           fsr0l	equ	0xFE9
  5919                           wreg	equ	0xFE8
  5920                           postinc1	equ	0xFE6
  5921                           fsr1h	equ	0xFE2
  5922                           fsr1l	equ	0xFE1
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           postdec2	equ	0xFDD
  5926                           plusw2	equ	0xFDB
  5927                           fsr2h	equ	0xFDA
  5928                           fsr2l	equ	0xFD9
  5929                           status	equ	0xFD8
  5930                           
  5931 ;; *************** function _EUSART1_Receive_ISR *****************
  5932 ;; Defined at:
  5933 ;;		line 139 in file "UART.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  data            1   11[COMRAM] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5947 ;;      Params:         0       0       0       0       0       0       0
  5948 ;;      Locals:         1       0       0       0       0       0       0
  5949 ;;      Temps:          0       0       0       0       0       0       0
  5950 ;;      Totals:         1       0       0       0       0       0       0
  5951 ;;Total ram usage:        1 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    2
  5954 ;; This function calls:
  5955 ;;		i2_UART_buff_put
  5956 ;; This function is called by:
  5957 ;;		_INTERRUPT_InterruptManager
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text41
  5962  00173A                     __ptext41:
  5963                           	opt stack 0
  5964  00173A                     _EUSART1_Receive_ISR:
  5965                           	opt stack 21
  5966                           
  5967                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
  5968                           
  5969                           ;incstack = 0
  5970  00173A  A2AB               	btfss	4011,1,c	;volatile
  5971  00173C  D002               	goto	i2l820
  5972                           
  5973                           ;UART.c: 143: RC1STAbits.CREN = 0;
  5974  00173E  98AB               	bcf	4011,4,c	;volatile
  5975                           
  5976                           ;UART.c: 144: RC1STAbits.CREN = 1;
  5977  001740  88AB               	bsf	4011,4,c	;volatile
  5978  001742                     i2l820:
  5979                           
  5980                           ;UART.c: 145: }
  5981                           ;UART.c: 146: unsigned char data = RCREG1;
  5982  001742  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
  5983                           
  5984                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
  5985  001746  0E00               	movlw	low _input_buffer
  5986  001748  6E07               	movwf	i2UART_buff_put@_this,c
  5987  00174A  0E03               	movlw	high _input_buffer
  5988  00174C  6E08               	movwf	i2UART_buff_put@_this+1,c
  5989  00174E  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
  5990  001752  ECC1  F005         	call	i2_UART_buff_put	;wreg free
  5991  001756  0012               	return		;funcret
  5992  001758                     __end_of_EUSART1_Receive_ISR:
  5993                           	opt stack 0
  5994                           pclatu	equ	0xFFB
  5995                           pclath	equ	0xFFA
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           prodh	equ	0xFF4
  6001                           prodl	equ	0xFF3
  6002                           intcon	equ	0xFF2
  6003                           intcon2	equ	0xFF1
  6004                           postinc0	equ	0xFEE
  6005                           fsr0h	equ	0xFEA
  6006                           fsr0l	equ	0xFE9
  6007                           wreg	equ	0xFE8
  6008                           postinc1	equ	0xFE6
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           postinc2	equ	0xFDE
  6013                           postdec2	equ	0xFDD
  6014                           plusw2	equ	0xFDB
  6015                           fsr2h	equ	0xFDA
  6016                           fsr2l	equ	0xFD9
  6017                           status	equ	0xFD8
  6018                           
  6019 ;; *************** function i2_UART_buff_put *****************
  6020 ;; Defined at:
  6021 ;;		line 68 in file "UART.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  6024 ;;		 -> output_buffer(206), input_buffer(206), 
  6025 ;;  c               1    8[COMRAM] const unsigned char 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6037 ;;      Params:         3       0       0       0       0       0       0
  6038 ;;      Locals:         0       0       0       0       0       0       0
  6039 ;;      Temps:          2       0       0       0       0       0       0
  6040 ;;      Totals:         5       0       0       0       0       0       0
  6041 ;;Total ram usage:        5 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    1
  6044 ;; This function calls:
  6045 ;;		i2_UART_buff_modulo_inc
  6046 ;; This function is called by:
  6047 ;;		_EUSART1_Receive_ISR
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text42
  6052  000B82                     __ptext42:
  6053                           	opt stack 0
  6054  000B82                     i2_UART_buff_put:
  6055                           	opt stack 21
  6056                           
  6057                           ;UART.c: 69: if (_this->count < 200) {
  6058                           
  6059                           ;incstack = 0
  6060  000B82  EE20 F0CC          	lfsr	2,204
  6061  000B86  5007               	movf	i2UART_buff_put@_this,w,c
  6062  000B88  26D9               	addwf	fsr2l,f,c
  6063  000B8A  5008               	movf	i2UART_buff_put@_this+1,w,c
  6064  000B8C  22DA               	addwfc	fsr2h,f,c
  6065  000B8E  0E01               	movlw	1
  6066  000B90  BEDB               	btfsc	plusw2,7,c
  6067  000B92  D007               	goto	i2l3279
  6068  000B94  0E01               	movlw	1
  6069  000B96  50DB               	movf	plusw2,w,c
  6070  000B98  E13A               	bnz	i2l3285
  6071  000B9A  0EC8               	movlw	200
  6072  000B9C  5CDE               	subwf	postinc2,w,c
  6073  000B9E  B0D8               	btfsc	status,0,c
  6074  000BA0  D036               	goto	i2l3285
  6075  000BA2                     i2l3279:
  6076                           
  6077                           ;UART.c: 70: _this->buf[_this->head] = c;
  6078  000BA2  EE20 F0C8          	lfsr	2,200
  6079  000BA6  5007               	movf	i2UART_buff_put@_this,w,c
  6080  000BA8  26D9               	addwf	fsr2l,f,c
  6081  000BAA  5008               	movf	i2UART_buff_put@_this+1,w,c
  6082  000BAC  22DA               	addwfc	fsr2h,f,c
  6083  000BAE  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  6084  000BB2  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  6085  000BB6  500A               	movf	??i2_UART_buff_put,w,c
  6086  000BB8  2407               	addwf	i2UART_buff_put@_this,w,c
  6087  000BBA  6ED9               	movwf	fsr2l,c
  6088  000BBC  500B               	movf	??i2_UART_buff_put+1,w,c
  6089  000BBE  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  6090  000BC0  6EDA               	movwf	fsr2h,c
  6091  000BC2  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  6092                           
  6093                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  6094  000BC6  EE20 F0C8          	lfsr	2,200
  6095  000BCA  5007               	movf	i2UART_buff_put@_this,w,c
  6096  000BCC  26D9               	addwf	fsr2l,f,c
  6097  000BCE  5008               	movf	i2UART_buff_put@_this+1,w,c
  6098  000BD0  22DA               	addwfc	fsr2h,f,c
  6099  000BD2  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  6100  000BD6  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  6101  000BDA  0E00               	movlw	0
  6102  000BDC  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  6103  000BDE  0EC8               	movlw	200
  6104  000BE0  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  6105  000BE2  EC66  F00B         	call	i2_UART_buff_modulo_inc	;wreg free
  6106  000BE6  EE20 F0C8          	lfsr	2,200
  6107  000BEA  5007               	movf	i2UART_buff_put@_this,w,c
  6108  000BEC  26D9               	addwf	fsr2l,f,c
  6109  000BEE  5008               	movf	i2UART_buff_put@_this+1,w,c
  6110  000BF0  22DA               	addwfc	fsr2h,f,c
  6111  000BF2  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  6112  000BF6  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  6113                           
  6114                           ;UART.c: 72: ++_this->count;
  6115  000BFA  EE20 F0CC          	lfsr	2,204
  6116  000BFE  5007               	movf	i2UART_buff_put@_this,w,c
  6117  000C00  26D9               	addwf	fsr2l,f,c
  6118  000C02  5008               	movf	i2UART_buff_put@_this+1,w,c
  6119  000C04  22DA               	addwfc	fsr2h,f,c
  6120  000C06  2ADE               	incf	postinc2,f,c
  6121  000C08  0E00               	movlw	0
  6122  000C0A  22DD               	addwfc	postdec2,f,c
  6123                           
  6124                           ;UART.c: 73: } else {
  6125  000C0C  0012               	return	
  6126  000C0E                     i2l3285:
  6127                           
  6128                           ;UART.c: 74: _this->buf[_this->head] = c;
  6129  000C0E  EE20 F0C8          	lfsr	2,200
  6130  000C12  5007               	movf	i2UART_buff_put@_this,w,c
  6131  000C14  26D9               	addwf	fsr2l,f,c
  6132  000C16  5008               	movf	i2UART_buff_put@_this+1,w,c
  6133  000C18  22DA               	addwfc	fsr2h,f,c
  6134  000C1A  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  6135  000C1E  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  6136  000C22  500A               	movf	??i2_UART_buff_put,w,c
  6137  000C24  2407               	addwf	i2UART_buff_put@_this,w,c
  6138  000C26  6ED9               	movwf	fsr2l,c
  6139  000C28  500B               	movf	??i2_UART_buff_put+1,w,c
  6140  000C2A  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  6141  000C2C  6EDA               	movwf	fsr2h,c
  6142  000C2E  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  6143                           
  6144                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  6145  000C32  EE20 F0C8          	lfsr	2,200
  6146  000C36  5007               	movf	i2UART_buff_put@_this,w,c
  6147  000C38  26D9               	addwf	fsr2l,f,c
  6148  000C3A  5008               	movf	i2UART_buff_put@_this+1,w,c
  6149  000C3C  22DA               	addwfc	fsr2h,f,c
  6150  000C3E  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  6151  000C42  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  6152  000C46  0E00               	movlw	0
  6153  000C48  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  6154  000C4A  0EC8               	movlw	200
  6155  000C4C  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  6156  000C4E  EC66  F00B         	call	i2_UART_buff_modulo_inc	;wreg free
  6157  000C52  EE20 F0C8          	lfsr	2,200
  6158  000C56  5007               	movf	i2UART_buff_put@_this,w,c
  6159  000C58  26D9               	addwf	fsr2l,f,c
  6160  000C5A  5008               	movf	i2UART_buff_put@_this+1,w,c
  6161  000C5C  22DA               	addwfc	fsr2h,f,c
  6162  000C5E  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  6163  000C62  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  6164                           
  6165                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  6166  000C66  EE20 F0CA          	lfsr	2,202
  6167  000C6A  5007               	movf	i2UART_buff_put@_this,w,c
  6168  000C6C  26D9               	addwf	fsr2l,f,c
  6169  000C6E  5008               	movf	i2UART_buff_put@_this+1,w,c
  6170  000C70  22DA               	addwfc	fsr2h,f,c
  6171  000C72  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  6172  000C76  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  6173  000C7A  0E00               	movlw	0
  6174  000C7C  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  6175  000C7E  0EC8               	movlw	200
  6176  000C80  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  6177  000C82  EC66  F00B         	call	i2_UART_buff_modulo_inc	;wreg free
  6178  000C86  EE20 F0CA          	lfsr	2,202
  6179  000C8A  5007               	movf	i2UART_buff_put@_this,w,c
  6180  000C8C  26D9               	addwf	fsr2l,f,c
  6181  000C8E  5008               	movf	i2UART_buff_put@_this+1,w,c
  6182  000C90  22DA               	addwfc	fsr2h,f,c
  6183  000C92  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  6184  000C96  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  6185  000C9A  0012               	return	
  6186  000C9C                     __end_ofi2_UART_buff_put:
  6187                           	opt stack 0
  6188                           pclatu	equ	0xFFB
  6189                           pclath	equ	0xFFA
  6190                           tblptru	equ	0xFF8
  6191                           tblptrh	equ	0xFF7
  6192                           tblptrl	equ	0xFF6
  6193                           tablat	equ	0xFF5
  6194                           prodh	equ	0xFF4
  6195                           prodl	equ	0xFF3
  6196                           intcon	equ	0xFF2
  6197                           intcon2	equ	0xFF1
  6198                           postinc0	equ	0xFEE
  6199                           fsr0h	equ	0xFEA
  6200                           fsr0l	equ	0xFE9
  6201                           wreg	equ	0xFE8
  6202                           postinc1	equ	0xFE6
  6203                           fsr1h	equ	0xFE2
  6204                           fsr1l	equ	0xFE1
  6205                           indf2	equ	0xFDF
  6206                           postinc2	equ	0xFDE
  6207                           postdec2	equ	0xFDD
  6208                           plusw2	equ	0xFDB
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function i2_UART_buff_modulo_inc *****************
  6214 ;; Defined at:
  6215 ;;		line 106 in file "UART.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  value           2    0[COMRAM] const unsigned int 
  6218 ;;  modulus         2    2[COMRAM] const unsigned int 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  2    0[COMRAM] unsigned int 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6230 ;;      Params:         4       0       0       0       0       0       0
  6231 ;;      Locals:         2       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0
  6233 ;;      Totals:         6       0       0       0       0       0       0
  6234 ;;Total ram usage:        6 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		i2_UART_buff_put
  6240 ;;		i2_UART_buff_get
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text43
  6245  0016CC                     __ptext43:
  6246                           	opt stack 0
  6247  0016CC                     i2_UART_buff_modulo_inc:
  6248                           	opt stack 21
  6249                           
  6250                           ;UART.c: 107: unsigned int my_value = value + 1;
  6251                           
  6252                           ;incstack = 0
  6253  0016CC  0E01               	movlw	1
  6254  0016CE  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
  6255  0016D0  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  6256  0016D2  0E00               	movlw	0
  6257  0016D4  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
  6258  0016D6  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  6259                           
  6260                           ;UART.c: 108: if (my_value >= modulus) {
  6261  0016D8  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
  6262  0016DA  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
  6263  0016DC  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
  6264  0016DE  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
  6265  0016E0  A0D8               	btfss	status,0,c
  6266  0016E2  D004               	goto	i2l3089
  6267                           
  6268                           ;UART.c: 109: my_value = 0;
  6269  0016E4  0E00               	movlw	0
  6270  0016E6  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  6271  0016E8  0E00               	movlw	0
  6272  0016EA  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  6273  0016EC                     i2l3089:
  6274                           
  6275                           ;UART.c: 110: }
  6276                           ;UART.c: 111: return (my_value);
  6277  0016EC  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
  6278  0016F0  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
  6279  0016F4  0012               	return	
  6280  0016F6                     __end_ofi2_UART_buff_modulo_inc:
  6281                           	opt stack 0
  6282                           pclatu	equ	0xFFB
  6283                           pclath	equ	0xFFA
  6284                           tblptru	equ	0xFF8
  6285                           tblptrh	equ	0xFF7
  6286                           tblptrl	equ	0xFF6
  6287                           tablat	equ	0xFF5
  6288                           prodh	equ	0xFF4
  6289                           prodl	equ	0xFF3
  6290                           intcon	equ	0xFF2
  6291                           intcon2	equ	0xFF1
  6292                           postinc0	equ	0xFEE
  6293                           fsr0h	equ	0xFEA
  6294                           fsr0l	equ	0xFE9
  6295                           wreg	equ	0xFE8
  6296                           postinc1	equ	0xFE6
  6297                           fsr1h	equ	0xFE2
  6298                           fsr1l	equ	0xFE1
  6299                           indf2	equ	0xFDF
  6300                           postinc2	equ	0xFDE
  6301                           postdec2	equ	0xFDD
  6302                           plusw2	equ	0xFDB
  6303                           fsr2h	equ	0xFDA
  6304                           fsr2l	equ	0xFD9
  6305                           status	equ	0xFD8
  6306                           
  6307 ;; *************** function _ADC_ISR *****************
  6308 ;; Defined at:
  6309 ;;		line 128 in file "mcc_generated_files/adc.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		None
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6323 ;;      Params:         0       0       0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0
  6326 ;;      Totals:         0       0       0       0       0       0       0
  6327 ;;Total ram usage:        0 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_INTERRUPT_InterruptManager
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text44
  6337  0017F2                     __ptext44:
  6338                           	opt stack 0
  6339  0017F2                     _ADC_ISR:
  6340                           	opt stack 23
  6341                           
  6342                           ;adc.c: 131: PIR1bits.ADIF = 0;
  6343                           
  6344                           ;incstack = 0
  6345  0017F2  9C9E               	bcf	3998,6,c	;volatile
  6346  0017F4  0012               	return		;funcret
  6347  0017F6                     __end_of_ADC_ISR:
  6348                           	opt stack 0
  6349                           pclatu	equ	0xFFB
  6350                           pclath	equ	0xFFA
  6351                           tblptru	equ	0xFF8
  6352                           tblptrh	equ	0xFF7
  6353                           tblptrl	equ	0xFF6
  6354                           tablat	equ	0xFF5
  6355                           prodh	equ	0xFF4
  6356                           prodl	equ	0xFF3
  6357                           intcon	equ	0xFF2
  6358                           intcon2	equ	0xFF1
  6359                           postinc0	equ	0xFEE
  6360                           fsr0h	equ	0xFEA
  6361                           fsr0l	equ	0xFE9
  6362                           wreg	equ	0xFE8
  6363                           postinc1	equ	0xFE6
  6364                           fsr1h	equ	0xFE2
  6365                           fsr1l	equ	0xFE1
  6366                           indf2	equ	0xFDF
  6367                           postinc2	equ	0xFDE
  6368                           postdec2	equ	0xFDD
  6369                           plusw2	equ	0xFDB
  6370                           fsr2h	equ	0xFDA
  6371                           fsr2l	equ	0xFD9
  6372                           status	equ	0xFD8
  6373                           pclatu	equ	0xFFB
  6374                           pclath	equ	0xFFA
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           intcon2	equ	0xFF1
  6383                           postinc0	equ	0xFEE
  6384                           fsr0h	equ	0xFEA
  6385                           fsr0l	equ	0xFE9
  6386                           wreg	equ	0xFE8
  6387                           postinc1	equ	0xFE6
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           indf2	equ	0xFDF
  6391                           postinc2	equ	0xFDE
  6392                           postdec2	equ	0xFDD
  6393                           plusw2	equ	0xFDB
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398                           	psect	text45
  6399  000000                     __ptext45:
  6400                           	opt stack 0
  6401                           pclatu	equ	0xFFB
  6402                           pclath	equ	0xFFA
  6403                           tblptru	equ	0xFF8
  6404                           tblptrh	equ	0xFF7
  6405                           tblptrl	equ	0xFF6
  6406                           tablat	equ	0xFF5
  6407                           prodh	equ	0xFF4
  6408                           prodl	equ	0xFF3
  6409                           intcon	equ	0xFF2
  6410                           intcon2	equ	0xFF1
  6411                           postinc0	equ	0xFEE
  6412                           fsr0h	equ	0xFEA
  6413                           fsr0l	equ	0xFE9
  6414                           wreg	equ	0xFE8
  6415                           postinc1	equ	0xFE6
  6416                           fsr1h	equ	0xFE2
  6417                           fsr1l	equ	0xFE1
  6418                           indf2	equ	0xFDF
  6419                           postinc2	equ	0xFDE
  6420                           postdec2	equ	0xFDD
  6421                           plusw2	equ	0xFDB
  6422                           fsr2h	equ	0xFDA
  6423                           fsr2l	equ	0xFD9
  6424                           status	equ	0xFD8
  6425                           
  6426                           	psect	rparam
  6427  0000                     pclatu	equ	0xFFB
  6428                           pclath	equ	0xFFA
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           prodh	equ	0xFF4
  6434                           prodl	equ	0xFF3
  6435                           intcon	equ	0xFF2
  6436                           intcon2	equ	0xFF1
  6437                           postinc0	equ	0xFEE
  6438                           fsr0h	equ	0xFEA
  6439                           fsr0l	equ	0xFE9
  6440                           wreg	equ	0xFE8
  6441                           postinc1	equ	0xFE6
  6442                           fsr1h	equ	0xFE2
  6443                           fsr1l	equ	0xFE1
  6444                           indf2	equ	0xFDF
  6445                           postinc2	equ	0xFDE
  6446                           postdec2	equ	0xFDD
  6447                           plusw2	equ	0xFDB
  6448                           fsr2h	equ	0xFDA
  6449                           fsr2l	equ	0xFD9
  6450                           status	equ	0xFD8
  6451                           
  6452                           	psect	temp
  6453  000045                     btemp:
  6454                           	opt stack 0
  6455  000045                     	ds	1
  6456  0000                     int$flags	set	btemp
  6457                           pclatu	equ	0xFFB
  6458                           pclath	equ	0xFFA
  6459                           tblptru	equ	0xFF8
  6460                           tblptrh	equ	0xFF7
  6461                           tblptrl	equ	0xFF6
  6462                           tablat	equ	0xFF5
  6463                           prodh	equ	0xFF4
  6464                           prodl	equ	0xFF3
  6465                           intcon	equ	0xFF2
  6466                           intcon2	equ	0xFF1
  6467                           postinc0	equ	0xFEE
  6468                           fsr0h	equ	0xFEA
  6469                           fsr0l	equ	0xFE9
  6470                           wreg	equ	0xFE8
  6471                           postinc1	equ	0xFE6
  6472                           fsr1h	equ	0xFE2
  6473                           fsr1l	equ	0xFE1
  6474                           indf2	equ	0xFDF
  6475                           postinc2	equ	0xFDE
  6476                           postdec2	equ	0xFDD
  6477                           plusw2	equ	0xFDB
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    10
    Data        1
    BSS         1010
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      68
    BANK0           160     25     140
    BANK1           256      0     254
    BANK2           256      0     200
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[2]), STR_2(CODE[4]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), ring_buffer(BANK1[206]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK0[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> NULL(NULL[0]), receiveArray(BANK0[40]), 


Critical Paths under _main in COMRAM

    _main->_EnableSlavePower
    _begin->___awdiv
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _PotSetpoint->_Delay
    _PDUStartup->_EnableSlavePower
    _StartUp595->_Clear595
    _writeRegisters->_Delay
    _ComputeStorageData->_DATAEE_ReadByte
    _FuseSystem->_EnableSlavePower
    _printf->___lwmod
    _putch->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _UART_buff_get->_UART_buff_modulo_inc
    ___lwmod->___lwdiv
    _EnableSlavePower->_SetPin595

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_FuseSystem
    _SYSTEM_Initialize->_begin
    _Update->_writeRegisters
    _Clear595->_writeRegisters
    _FuseSystem->_printf
    _printf->_putch

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   42363
                                             22 BANK0      3     3      0
                 _ComputeStorageData
                   _DATAEE_WriteByte
                              _Delay
                   _EnableSlavePower
                         _FuseSystem
                         _PDUStartup
                 _PWM4_LoadDutyValue
                        _PotSetpoint
                  _SYSTEM_Initialize
                             _Update
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2478
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1463
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     599
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PotSetpoint                                         10     8      2    1948
                                             35 COMRAM     2     0      2
                                              0 BANK0      8     8      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     370
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0   12843
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (1) _Update                                               0     0      0    1698
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    3328
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             2     2      0    1797
                                             35 COMRAM     2     2      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _writeRegisters                                       4     4      0    1698
                                              0 BANK0      4     4      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                9     5      4    1531
                                             26 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0     161
                                             27 COMRAM     4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      31
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FuseSystem                                           9     9      0   12584
                                             13 BANK0      9     9      0
                   _EnableSlavePower
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              21    17      4    4220
                                              1 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0    2645
                                              0 BANK0      1     1      0
                           _Send_put
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             33 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                             26 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EnableSlavePower                                     3     1      2    7656
                                             36 COMRAM     2     0      2
                                              0 BANK0      1     1      0
                          _SetPin595
 ---------------------------------------------------------------------------------
 (3) _SetPin595                                           10     4      6    5637
                                             26 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1    1020
                                             26 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1311
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     630
                     _UART_buff_size
                    i2_UART_buff_get
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (9) _UART_buff_size                                       2     0      2     150
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ComputeStorageData
     _DATAEE_ReadByte
   _DATAEE_WriteByte
   _Delay
   _EnableSlavePower
     _SetPin595
   _FuseSystem
     _EnableSlavePower
       _SetPin595
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _Send_put
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _PWM4_LoadDutyValue
   _PotSetpoint
     _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
     _begin
       ___awdiv
   _Update
     _writeRegisters
       _Delay

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     _UART_buff_size
     i2_UART_buff_get
       i2_UART_buff_modulo_inc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      FE       6       99.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     19      8C       4       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     432       9        0.0%
DATA                 0      0     432      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Oct 04 19:39:24 2016

             i2_UART_buff_modulo_inc 16CC                         _rx_array_inx 0042  
                       ___awdiv@sign 0020                  ___wmul@multiplicand 001D  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l164 15A0                                  l736 0FCA  
                                l905 0CEE                                  l738 0FD6  
                                l675 07F8                                  l908 0D52  
                                l789 1094                         __CFG_CPB$OFF 000000  
                                _PR2 000FBB                         __CFG_CPD$OFF 000000  
                    _timer1ReloadVal 0037                      __end_of_ADC_ISR 17F6  
                    _TMR2_Initialize 1786                      _PWM4_Initialize 179A  
                                wreg 000FE8        i2UART_buff_modulo_inc@modulus 0003  
                       __CFG_LVP$OFF 000000                                 l1348 145C  
                               l1358 1536                                 l4023 16C2  
                               l4201 1452                                 l4033 14E0  
                               l4211 1514                                 l4043 0AF4  
                               l4123 15BA                                 l4301 0DD4  
                               l4213 1518                                 l4037 0A88  
                               l4029 14C6                                 l4133 15E0  
                               l4311 0E50                                 l4303 0DF2  
                               l4071 0F88                                 l4063 1680  
                               l4217 152C                                 l4209 150C  
                               l4057 1090                                 l4161 116C  
                               l4153 114E                                 l4307 0E14  
                               l4315 0E6E                                 l4067 1690  
                               l4171 118C                                 l4163 1170  
                               l4147 113E                                 l4309 0E32  
                               l4333 0EA0                                 l4191 1432  
                               l4351 081C                                 l4343 0ECA  
                               l4079 0FBE                                 l4159 1164  
                               l4175 1196                                 l4193 1436  
                               l4337 0EB0                                 l4347 0808  
                               l4507 0D32                                 l4179 11A4  
                               l4189 142A                                 l4381 08B8  
                               l4357 084C                                 l4445 063A  
                               l4517 0D84                                 l4391 0920  
                               l4367 087C                                 l4471 076A  
                               l4385 08CC                                 l4369 0882  
                               l4393 092C                                 l4473 077A  
                               l4481 07AA                                 l4465 0702  
                               l4457 06CE                                 l4449 0650  
                               l4299 0DB6                                 l4387 08D2  
                               l4475 078A                                 l4467 074A  
                               l4483 07E4                                 l4477 079A  
                               l4469 075A                                 l4885 0A1C  
                               STR_1 060B                                 STR_2 061B  
                               STR_3 0619                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               _LATD 000F8C                                 _LATE 000F8D  
                               u3240 1024                                 u3565 15AE  
                               u3566 15B0                                 u3590 0700  
                               u4497 14CC                                 i2l63 004E  
                               i2l65 005A                                 i2l69 0064  
                               _TMR1 000FCE                                 _TMR2 000FBC  
                               _WPUB 000F61                                 _data 0084  
                               _main 094A             __end_of_EnableSlavePower 0E98  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 0045  
                      __CFG_BORV$190 000000                                 pclat 000FFA  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A0                        __CFG_IESO$OFF 000000  
                       ___param_bank 000010       i2UART_buff_modulo_inc@my_value 0005  
          __size_of_DATAEE_WriteByte 0036       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 17D0                                ?_main 0001  
                    __end_of___awdiv 11AE                                _EEADR 000FA9  
                              _ANSB3 0079CB                                _ANSB4 0079CC  
                              _ANSD7 0079DF                      ___awdiv@divisor 001D  
                              _T1CON 000FCD                                _T2CON 000FBA  
                              _LATB0 007C50                                _LATA3 007C4B  
                              _LATB3 007C53                                _LATB4 007C54  
                              _LATB5 007C55                                _LATD4 007C64  
                              _LATD5 007C65                                _LATD6 007C66  
                              _LATD7 007C67                       __CFG_DEBUG$OFF 000000  
                    __end_of___lwdiv 1466                      __end_of___lwmod 1540  
                        ?_PDUStartup 0001                                i2l820 1742  
                              _MCSOn 003C                      ___awdiv@counter 001F  
                              i2l789 1126                   _PWM4_LoadDutyValue 1618  
                              _TMR1H 000FCF                                _TMR1L 000FCE  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _Delay 14B4  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 15E6                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                   ??_writeRegisters 0024                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                              _begin 1366                      _DATAEE_ReadByte 17AE  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers 060B  
                              _group 0027                  ?_PWM4_LoadDutyValue 001B  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 17D0  
                              main@i 00EA                                tablat 000FF5  
                              plusw2 000FDB                       begin@stuffpeek 00DE  
                              status 000FD8                     __end_of_Clear595 15E6  
                     __CFG_HFOFST$ON 000000                      _TMR2_StartTimer 17EE  
                     __CFG_PBADEN$ON 000000                 PotSetpoint@new_point 0024  
                    __initialization 129C           __end_of_EUSART1_Initialize 157C  
                       __end_of_main 0A68                           _CurrentADC 006C  
               ??_PWM4_LoadDutyValue 001D              __end_of_PWM4_Initialize 17AE  
            __end_of_TMR2_Initialize 179A                            ??_ADC_ISR 0001  
        ?_INTERRUPT_InterruptManager 0001                 PotSetpoint@set_point 00D5  
                         _FuseSystem 0620                               ??_main 0027  
                      __activetblptr 000002                     __end_of_Send_put 1676  
                             ?_Delay 001B                ?_EUSART1_Transmit_ISR 0001  
                             ?_begin 00D3                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                        FuseSystem@i 00E5                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _EEDATA 000FA8  
                             _CCPR2H 000F68                               _CCPR2L 000F67  
                             _EECON2 000FA7                     ___awdiv@dividend 001B  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _T1GCON 000FCC                      i2_UART_buff_get 1098  
                             _RC1STA 000FAB                      i2_UART_buff_put 0B82  
                             Delay@i 0020                               i2l3323 1610  
                     __CFG_WDTEN$OFF 000000                               i2l3089 16EC  
                             i2l3285 0C0E                               i2l3279 0BA2  
        UART_buff_modulo_inc@modulus 001D                               i2l3299 1122  
                             _TABLAT 000FF5                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1STA 000FAC                               _TRISB3 007C9B  
                             _TRISB4 007C9C                               _TRISB5 007C9D  
                             _TXREG1 000FAD                  __size_of_PDUStartup 0054  
                     __CFG_XINST$OFF 000000                        ??_PotSetpoint 00D3  
                       _CCPTMRS1bits 000F48                               _Update 17E8  
                 __size_of_SetPin595 004E                        _output_buffer 0400  
                             ___wmul 16F6                            ??___awdiv 001F  
                     __CFG_STVREN$ON 000000                            ??___lwdiv 001F  
                          ??___lwmod 0026                               _memset 1676  
                             clear_0 12A2                               clear_1 12AE  
                             clear_2 12BA                               clear_3 12C6  
                             clear_4 12D2                               clear_5 12DE  
                   ___awdiv@quotient 0021                               _printf 07FA  
                             main@UP 00E9                               _rx_len 0043  
            __end_of_DATAEE_ReadByte 17C2                         __pdataCOMRAM 0044  
                      Send_put@_data 0026                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                           _StartUp595 1304  
       __end_of_UART_buff_modulo_inc 16CC              __end_of_TMR2_StartTimer 17F2  
      __size_of_INTERRUPT_Initialize 000A                    _SYSTEM_Initialize 122A  
                         __accesstop 0060              __end_of__initialization 12F6  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
            ?i2_UART_buff_modulo_inc 0001                        __end_of_Delay 14FE  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0025  
                      __end_of_begin 13C0                     _DATAEE_WriteByte 157C  
                      __end_of_putch 17DE                     ?_TMR2_Initialize 0001  
                   ?_PWM4_Initialize 0001                          ?_FuseSystem 0001  
                __end_of_PotSetpoint 0DB0          __size_of_ComputeStorageData 00DC  
        PWM4_LoadDutyValue@dutyValue 001B                   UART_buff_get@_this 0021  
                        _Currentcomp 0078                __end_of_UART_buff_get 1098  
             ??_EUSART1_Transmit_ISR 000C                __end_of_UART_buff_put 0B82  
                          ?_Clear595 0001                              ??_Delay 001F  
            __end_ofi2_UART_buff_get 112A              __end_ofi2_UART_buff_put 0C9C  
        __end_of_EUSART1_Receive_ISR 1758                              ??_begin 0023  
                  __end_of_SetPin595 14B4            __end_of_SYSTEM_Initialize 129C  
                            ??_putch 0027                  _addressErrorCounter 0090  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                         __pbssBANK4 0400                      __CFG_PLLCFG$OFF 000000  
                        _Receive_get 000000       __end_ofi2_UART_buff_modulo_inc 16F6  
                  begin@givenAddress 00D6                    ?_EnableSlavePower 0025  
            __size_of_UART_buff_init 001E              __size_of_UART_buff_size 0016  
                          ?_Send_put 0001                   ??_EnableSlavePower 0027  
                 __CFG_CCP2MX$PORTC1 000000                              ?_Update 0001  
                            ?___wmul 001B                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP2CON 000F66                              _ADC_ISR 17F2  
                            ?_memset 001B                           _crc_buffer 00C2  
                            ?_printf 00D4              __size_of_ADC_Initialize 0018  
                   ?_DATAEE_ReadByte 0001                         ??_PDUStartup 0027  
                 UART_buff_put@_this 0021                           ??_Clear595 0024  
        i2UART_buff_modulo_inc@value 0001                              _OSCCON2 000FD2  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8                          ?_StartUp595 0001  
                  _Receive_available 000000         UART_buff_modulo_inc@my_value 001F  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                  _receiveArrayAddress 0098  
                   ?_TMR2_StartTimer 0001                           begin@error 00D7  
               DATAEE_WriteByte@bAdd 001C                  __size_of_FuseSystem 01DA  
                            _Current 0060                    _alignErrorCounter 0092  
                    __CFG_PWRTEN$OFF 000000                           ??_Send_put 0026  
                            __Hparam 0000                              __Lparam 0000  
                 __end_of_PDUStartup 1414                          _PotSetpoint 0C9C  
                          _AKNAKsend 003B                      __size_of_Update 0006  
                            ___awdiv 112A                 _UART_buff_modulo_inc 16A2  
                    __size_of___wmul 0026                              ___lwdiv 1414  
                            _calc_CS 003D                              ___lwmod 14FE  
                       __psmallconst 0600                              __pcinit 129C  
                    __size_of_memset 002C                              __ramtop 0600  
                   i2UART_buff_get@c 000B                              __ptext0 094A  
                            __ptext1 122A                              __ptext2 1366  
                            __ptext3 112A                              __ptext4 1786  
                            __ptext5 17EE                              __ptext6 179A  
                            __ptext7 11AE                              __ptext8 17C2  
                            __ptext9 17DE                      __size_of_printf 0150  
                   i2UART_buff_put@c 0009                            _T1CONbits 000FCD  
                            _dpowers 0601                _OSCILLATOR_Initialize 17C2  
                          _T2CONbits 000FBA                   _EUSART1_Initialize 1540  
                   ?i2_UART_buff_get 0007             ??_PIN_MANAGER_Initialize 001B  
                          Clear595@i 0024                     ?i2_UART_buff_put 0007  
         __size_of_SYSTEM_Initialize 0072                 end_of_initialization 12F6  
                          Delay@wait 001B                  ?_EUSART1_Initialize 0001  
                            memset@c 001D                              memset@n 001F  
                            memset@p 0021                        __Lmediumconst 0000  
                            printf@c 00DF                              printf@f 00D4  
              ?_UART_buff_modulo_inc 001B                              postdec2 000FDD  
                __size_of_StartUp595 0062                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
        __size_of_PWM4_LoadDutyValue 0030                     begin@stufftosend 00D8  
                       SetPin595@Reg 001B                 ??_EUSART1_Initialize 0025  
                       SetPin595@pin 001D               _dataAdressErrorCounter 0096  
                         _rx_address 0041                            _TRISCbits 000F94  
                          _TRISDbits 000F95                     FuseSystem@i_1515 00E7  
           __end_of_DATAEE_WriteByte 15B2                         begin@maxSize 00D5  
                     _UART_buff_init 171C                       _UART_buff_size 1770  
            __size_of_writeRegisters 0092                        _moduleAddress 003F  
       __end_of_INTERRUPT_Initialize 17E8                       __end_of_Update 17EE  
                    _crcErrorCounter 0094                       __end_of___wmul 171C  
                      __pidataCOMRAM 17F6                         ??_FuseSystem 00E0  
                     _ADC_Initialize 1758               ?_OSCILLATOR_Initialize 0001  
                     __end_of_memset 16A2                       __end_of_printf 094A  
                start_initialization 129C      __size_of_PIN_MANAGER_Initialize 007C  
              EnableSlavePower@slave 00D3                    __size_of_Clear595 0034  
                        putch@txData 00D3               __end_of_UART_buff_init 173A  
                     UART_buff_get@c 0025               __end_of_UART_buff_size 1786  
                          _SetPin595 1466                       UART_buff_put@c 0023  
                DATAEE_ReadByte@bAdd 001B                   __end_of_FuseSystem 07FA  
             ??_UART_buff_modulo_inc 001F                             ??_Update 0024  
                  __size_of_Send_put 002E                             ??___wmul 001F  
             __end_of_ADC_Initialize 1770           __end_of_ComputeStorageData 0F74  
                           ?_ADC_ISR 0001                             ??_memset 0021  
                           ??_printf 00D8            __size_of_EnableSlavePower 00E8  
                        __pbssCOMRAM 0027        __size_of_EUSART1_Transmit_ISR 0032  
                      __pcstackBANK0 00D3                         ??_StartUp595 0026  
           __size_of_PWM4_Initialize 0014             __size_of_TMR2_Initialize 0014  
                       _Receive_peek 000000                  UART_buff_init@_this 0023  
                    ?_UART_buff_init 0023                      ?_UART_buff_size 0001  
       __size_of_EUSART1_Receive_ISR 001E                           ?_SetPin595 001B  
             __size_of_UART_buff_get 0092               __size_of_UART_buff_put 011A  
                   ___lwdiv@dividend 001B               _PIN_MANAGER_Initialize 11AE  
                       ?_PotSetpoint 0024                            __pintcode 0008  
                           ?___awdiv 001B                   __end_of_StartUp595 1366  
                           ?___lwdiv 001B                             ?___lwmod 0022  
                    ?_ADC_Initialize 0001         ??_INTERRUPT_InterruptManager 000D  
               i2UART_buff_get@_this 0007                             _BAUD1CON 000FB8  
                        __smallconst 0600                       __size_of_Delay 004A  
                     __size_of_begin 005A                     ___lwdiv@quotient 0020  
           __size_of_DATAEE_ReadByte 0014                       __size_of_putch 000E  
               _INTERRUPT_Initialize 17DE                         _receiveArray 009A  
                     ___wmul@product 001F                             _LATCbits 000F8B  
                     _writeRegisters 0F74                  UART_buff_size@_this 0001  
                          _registers 0100                             _IPR1bits 000F9F  
                           _PIE1bits 000F9D             __size_of_TMR2_StartTimer 0004  
                           i2u202_40 10B6                             i2u205_40 1600  
__size_of_INTERRUPT_InterruptManager 0098                             _PIR1bits 000F9E  
                begin@stuffavailable 00DC                             _RCONbits 000FD0  
                   __CFG_WDTPS$32768 000000                         PotSetpoint@x 00D7  
                       _input_buffer 0300                            _rx_buffer 0200  
                   __size_of_ADC_ISR 0004                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 001B                 i2UART_buff_put@_this 0007  
                         printf@flag 00DB                             _Clear595 15B2  
                      _UART_buff_get 1006                           printf@prec 00DC  
                      _UART_buff_put 0A68                DATAEE_WriteByte@bData 001B  
           ??i2_UART_buff_modulo_inc 0005                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0001                    _sendStructAddress 002D  
                  ?_DATAEE_WriteByte 001B               __end_of_writeRegisters 1006  
                 PotSetpoint@new_pos 00D9                          ??_SetPin595 0021  
               EnableSlavePower@onof 0025             __size_ofi2_UART_buff_get 0092  
                  ??_TMR2_Initialize 001B                    ??_PWM4_Initialize 001B  
           __size_ofi2_UART_buff_put 011A                   ??_DATAEE_WriteByte 001C  
                         _EECON1bits 000FA6                             __Hrparam 0000  
                           _Send_put 1648           __end_of_PWM4_LoadDutyValue 1648  
                           __Lrparam 0000                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 001B  
                   __size_of___awdiv 0084          __size_of_EUSART1_Initialize 003C  
                   __size_of___lwdiv 0052                     __size_of___lwmod 0042  
                begin@stufftoreceive 00DA                     _EnableSlavePower 0DB0  
                         _ANSELCbits 000F3A                       ?_UART_buff_get 0021  
                     ?_UART_buff_put 0021                      ___lwdiv@divisor 001D  
                    ___lwdiv@counter 001F                             __ptext10 1540  
                           __ptext11 171C                             __ptext20 0F74  
                           __ptext12 1676                             __ptext21 14B4  
                           __ptext13 1758                           _T1GCONbits 000FCC  
                           __ptext30 16A2                             __ptext22 0E98  
                           __ptext14 0C9C                             __ptext31 14FE  
                           __ptext23 17AE                             __ptext15 1618  
                           __ptext40 1770                             __ptext32 1414  
                           __ptext24 0620                             __ptext16 13C0  
                           __ptext41 173A                             __ptext33 16F6  
                           __ptext25 07FA                             __ptext17 17E8  
                           __ptext42 0B82                             __ptext34 0DB0  
                           __ptext26 17D0                             __ptext18 1304  
                           __ptext43 16CC                             __ptext35 1466  
                           __ptext27 1648                             __ptext19 15B2  
                           __ptext44 17F2                             __ptext36 157C  
                           __ptext28 0A68                             __ptext45 0000  
                           __ptext29 1006                             __ptext38 15E6  
                           __ptext39 1098                             begin@ptr 00D3  
        DATAEE_WriteByte@GIEBitValue 001D              EUSART1_Receive_ISR@data 000C  
                    ?_writeRegisters 0001                        _returnAddress 0040  
                      __size_of_main 011E                             _readwhat 002B  
                     _Transmit_stall 0044                    ??_DATAEE_ReadByte 001B  
                         _RC1STAbits 000FAB                             _prev_pos 0029  
                  writeRegisters@val 00D3                             int$flags 0045  
                       _serial_write 0035                    ??_TMR2_StartTimer 001B  
 __end_of_INTERRUPT_InterruptManager 00A0           _INTERRUPT_InterruptManager 0008  
               __size_of_PotSetpoint 0114                            printf@val 00DD  
                _EUSART1_Receive_ISR 173A                           _INTCONbits 000FF2  
                ComputeStorageData@i 001E            UART_buff_modulo_inc@value 001B  
                   ??_UART_buff_init 0025                     ??_UART_buff_size 0003  
                 _ComputeStorageData 0E98               ??_INTERRUPT_Initialize 001B  
                           memset@p1 001B                     _serial_available 002F  
    __size_ofi2_UART_buff_modulo_inc 002A                             intlevel2 0000  
               ?_EUSART1_Receive_ISR 0001                     ___lwmod@dividend 0022  
                ?_ComputeStorageData 0001              ?_PIN_MANAGER_Initialize 0001  
                     SetPin595@value 001F         __end_of_EUSART1_Transmit_ISR 1618  
                        _ring_buffer 0130                     ??_ADC_Initialize 001B  
                  ??i2_UART_buff_get 0009                          _serial_peek 0031  
                        _serial_read 0033                    ??i2_UART_buff_put 000A  
                           printf@ap 00D9        __size_of_UART_buff_modulo_inc 002A  
                    ??_UART_buff_get 0023                      ??_UART_buff_put 0024  
               ??_ComputeStorageData 001C                           _PDUStartup 13C0  
                    ___lwmod@divisor 0024                      ___lwmod@counter 0026  
                  __CFG_T3CMX$PORTC0 000000                       _maxDataAddress 003E  
                    writeRegisters@i 00D5                ??_EUSART1_Receive_ISR 000C  
     __end_of_PIN_MANAGER_Initialize 122A        updateComms@previousPowerState 0039  
                  __CFG_FOSC$INTIO67 000000  
