

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Oct 05 03:33:59 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74 ;; Function _Receive_peek is unused but had its address taken
    75  0000                     
    76 ;; Function _Receive_available is unused but had its address taken
    77  0000                     
    78 ;; Function _Receive_get is unused but had its address taken
    79  0000                     
    80                           	psect	idataCOMRAM
    81  0020FA                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _Transmit_stall
    85  0020FA  01                 	db	1
    86                           
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	opt stack 0
    90  000600  00                 	db	0
    91  000601                     _dpowers:
    92                           	opt stack 0
    93  000601  0001               	dw	1
    94  000603  000A               	dw	10
    95  000605  0064               	dw	100
    96  000607  03E8               	dw	1000
    97  000609  2710               	dw	10000
    98  00060B                     __end_of_dpowers:
    99                           	opt stack 0
   100  0000                     _ANSELA	set	3896
   101  0000                     _ANSELB	set	3897
   102  0000                     _ANSELC	set	3898
   103  0000                     _ANSELCbits	set	3898
   104  0000                     _ANSELD	set	3899
   105  0000                     _ANSELDbits	set	3899
   106  0000                     _ANSELE	set	3900
   107  0000                     _CCPTMRS1bits	set	3912
   108  0000                     _ANSB3	set	31179
   109  0000                     _ANSB4	set	31180
   110  0000                     _ANSD7	set	31199
   111  0000                     _ADCON0	set	4034
   112  0000                     _ADCON0bits	set	4034
   113  0000                     _ADCON1	set	4033
   114  0000                     _ADCON2	set	4032
   115  0000                     _ADCON2bits	set	4032
   116  0000                     _ADRESH	set	4036
   117  0000                     _ADRESL	set	4035
   118  0000                     _BAUD1CON	set	4024
   119  0000                     _CCP2CON	set	3942
   120  0000                     _CCPR2H	set	3944
   121  0000                     _CCPR2L	set	3943
   122  0000                     _EEADR	set	4009
   123  0000                     _EECON1bits	set	4006
   124  0000                     _EECON2	set	4007
   125  0000                     _EEDATA	set	4008
   126  0000                     _INTCON2bits	set	4081
   127  0000                     _INTCONbits	set	4082
   128  0000                     _IPR1bits	set	3999
   129  0000                     _LATA	set	3977
   130  0000                     _LATB	set	3978
   131  0000                     _LATC	set	3979
   132  0000                     _LATCbits	set	3979
   133  0000                     _LATD	set	3980
   134  0000                     _LATE	set	3981
   135  0000                     _OSCCON	set	4051
   136  0000                     _OSCCON2	set	4050
   137  0000                     _OSCTUNE	set	3995
   138  0000                     _PIE1bits	set	3997
   139  0000                     _PIR1bits	set	3998
   140  0000                     _PR2	set	4027
   141  0000                     _RC1STA	set	4011
   142  0000                     _RC1STAbits	set	4011
   143  0000                     _RCONbits	set	4048
   144  0000                     _RCREG1	set	4014
   145  0000                     _SPBRG1	set	4015
   146  0000                     _SPBRGH1	set	4016
   147  0000                     _T1CON	set	4045
   148  0000                     _T1CONbits	set	4045
   149  0000                     _T1GCON	set	4044
   150  0000                     _T1GCONbits	set	4044
   151  0000                     _T2CON	set	4026
   152  0000                     _T2CONbits	set	4026
   153  0000                     _TABLAT	set	4085
   154  0000                     _TBLPTRH	set	4087
   155  0000                     _TBLPTRL	set	4086
   156  0000                     _TBLPTRU	set	4088
   157  0000                     _TMR1H	set	4047
   158  0000                     _TMR1L	set	4046
   159  0000                     _TMR2	set	4028
   160  0000                     _TRISA	set	3986
   161  0000                     _TRISB	set	3987
   162  0000                     _TRISC	set	3988
   163  0000                     _TRISCbits	set	3988
   164  0000                     _TRISD	set	3989
   165  0000                     _TRISDbits	set	3989
   166  0000                     _TRISE	set	3990
   167  0000                     _TX1STA	set	4012
   168  0000                     _TXREG1	set	4013
   169  0000                     _WPUB	set	3937
   170  0000                     _LATA3	set	31819
   171  0000                     _LATB0	set	31824
   172  0000                     _LATB3	set	31827
   173  0000                     _LATB4	set	31828
   174  0000                     _LATB5	set	31829
   175  0000                     _LATD4	set	31844
   176  0000                     _LATD5	set	31845
   177  0000                     _LATD6	set	31846
   178  0000                     _LATD7	set	31847
   179  0000                     _TRISB3	set	31899
   180  0000                     _TRISB4	set	31900
   181  0000                     _TRISB5	set	31901
   182  00060B                     STR_1:
   183  00060B  52                 	db	82	;'R'
   184  00060C  65                 	db	101	;'e'
   185  00060D  61                 	db	97	;'a'
   186  00060E  64                 	db	100	;'d'
   187  00060F  69                 	db	105	;'i'
   188  000610  6E                 	db	110	;'n'
   189  000611  67                 	db	103	;'g'
   190  000612  20                 	db	32
   191  000613  53                 	db	83	;'S'
   192  000614  74                 	db	116	;'t'
   193  000615  75                 	db	117	;'u'
   194  000616  66                 	db	102	;'f'
   195  000617  66                 	db	102	;'f'
   196  000618  20                 	db	32
   197  000619  0A                 	db	10
   198  00061A  00                 	db	0
   199  00061B                     STR_2:
   200  00061B  25                 	db	37
   201  00061C  75                 	db	117	;'u'
   202  00061D  20                 	db	32
   203  00061E  00                 	db	0
   204  0000                     
   205                           ; #config settings
   206  00061F  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	cinit
   209  001AAC                     __pcinit:
   210                           	opt stack 0
   211  001AAC                     start_initialization:
   212                           	opt stack 0
   213  001AAC                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Clear objects allocated to BANK4 (206 bytes)
   217  001AAC  EE04  F000         	lfsr	0,__pbssBANK4
   218  001AB0  0ECE               	movlw	206
   219  001AB2                     clear_0:
   220  001AB2  6AEE               	clrf	postinc0,c
   221  001AB4  06E8               	decf	wreg,f,c
   222  001AB6  E1FD               	bnz	clear_0
   223                           
   224                           ; Clear objects allocated to BANK3 (206 bytes)
   225  001AB8  EE03  F000         	lfsr	0,__pbssBANK3
   226  001ABC  0ECE               	movlw	206
   227  001ABE                     clear_1:
   228  001ABE  6AEE               	clrf	postinc0,c
   229  001AC0  06E8               	decf	wreg,f,c
   230  001AC2  E1FD               	bnz	clear_1
   231                           
   232                           ; Clear objects allocated to BANK2 (200 bytes)
   233  001AC4  EE02  F000         	lfsr	0,__pbssBANK2
   234  001AC8  0EC8               	movlw	200
   235  001ACA                     clear_2:
   236  001ACA  6AEE               	clrf	postinc0,c
   237  001ACC  06E8               	decf	wreg,f,c
   238  001ACE  E1FD               	bnz	clear_2
   239                           
   240                           ; Clear objects allocated to BANK1 (254 bytes)
   241  001AD0  EE01  F000         	lfsr	0,__pbssBANK1
   242  001AD4  0EFE               	movlw	254
   243  001AD6                     clear_3:
   244  001AD6  6AEE               	clrf	postinc0,c
   245  001AD8  06E8               	decf	wreg,f,c
   246  001ADA  E1FD               	bnz	clear_3
   247                           
   248                           ; Clear objects allocated to BANK0 (115 bytes)
   249  001ADC  EE00  F060         	lfsr	0,__pbssBANK0
   250  001AE0  0E73               	movlw	115
   251  001AE2                     clear_4:
   252  001AE2  6AEE               	clrf	postinc0,c
   253  001AE4  06E8               	decf	wreg,f,c
   254  001AE6  E1FD               	bnz	clear_4
   255                           
   256                           ; Clear objects allocated to COMRAM (29 bytes)
   257  001AE8  EE00  F025         	lfsr	0,__pbssCOMRAM
   258  001AEC  0E1D               	movlw	29
   259  001AEE                     clear_5:
   260  001AEE  6AEE               	clrf	postinc0,c
   261  001AF0  06E8               	decf	wreg,f,c
   262  001AF2  E1FD               	bnz	clear_5
   263                           
   264                           ; Initialize objects allocated to COMRAM (1 bytes)
   265                           ; load TBLPTR registers with __pidataCOMRAM
   266  001AF4  0EFA               	movlw	low __pidataCOMRAM
   267  001AF6  6EF6               	movwf	tblptrl,c
   268  001AF8  0E20               	movlw	high __pidataCOMRAM
   269  001AFA  6EF7               	movwf	tblptrh,c
   270  001AFC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   271  001AFE  6EF8               	movwf	tblptru,c
   272  001B00  0009               	tblrd		*+	;fetch initializer
   273  001B02  CFF5 F042          	movff	tablat,__pdataCOMRAM
   274  001B06                     end_of_initialization:
   275                           	opt stack 0
   276  001B06                     __end_of__initialization:
   277                           	opt stack 0
   278  001B06  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   279  001B08  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   280  001B0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   281  001B0C  6EF8               	movwf	tblptru,c
   282  001B0E  0100               	movlb	0
   283  001B10  EF3F  F007         	goto	_main	;jump to C main() function
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	bssCOMRAM
   292  000025                     __pbssCOMRAM:
   293                           	opt stack 0
   294  000025                     _group:
   295                           	opt stack 0
   296  000025                     	ds	2
   297  000027                     _prev_pos:
   298                           	opt stack 0
   299  000027                     	ds	2
   300  000029                     _readwhat:
   301                           	opt stack 0
   302  000029                     	ds	2
   303  00002B                     _sendStructAddress:
   304                           	opt stack 0
   305  00002B                     	ds	2
   306  00002D                     _serial_available:
   307                           	opt stack 0
   308  00002D                     	ds	2
   309  00002F                     _serial_peek:
   310                           	opt stack 0
   311  00002F                     	ds	2
   312  000031                     _serial_read:
   313                           	opt stack 0
   314  000031                     	ds	2
   315  000033                     _serial_write:
   316                           	opt stack 0
   317  000033                     	ds	2
   318  000035                     _timer1ReloadVal:
   319                           	opt stack 0
   320  000035                     	ds	2
   321  000037                     updateComms@previousPowerState:
   322                           	opt stack 0
   323  000037                     	ds	2
   324  000039                     _AKNAKsend:
   325                           	opt stack 0
   326  000039                     	ds	1
   327  00003A                     _MCSOn:
   328                           	opt stack 0
   329  00003A                     	ds	1
   330  00003B                     _calc_CS:
   331                           	opt stack 0
   332  00003B                     	ds	1
   333  00003C                     _maxDataAddress:
   334                           	opt stack 0
   335  00003C                     	ds	1
   336  00003D                     _moduleAddress:
   337                           	opt stack 0
   338  00003D                     	ds	1
   339  00003E                     _returnAddress:
   340                           	opt stack 0
   341  00003E                     	ds	1
   342  00003F                     _rx_address:
   343                           	opt stack 0
   344  00003F                     	ds	1
   345  000040                     _rx_array_inx:
   346                           	opt stack 0
   347  000040                     	ds	1
   348  000041                     _rx_len:
   349                           	opt stack 0
   350  000041                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           
   358                           	psect	dataCOMRAM
   359  000042                     __pdataCOMRAM:
   360                           	opt stack 0
   361  000042                     _Transmit_stall:
   362                           	opt stack 0
   363  000042                     	ds	1
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           
   371                           	psect	bssBANK0
   372  000060                     __pbssBANK0:
   373                           	opt stack 0
   374  000060                     _Current:
   375                           	opt stack 0
   376  000060                     	ds	12
   377  00006C                     _CurrentADC:
   378                           	opt stack 0
   379  00006C                     	ds	12
   380  000078                     _Currentcomp:
   381                           	opt stack 0
   382  000078                     	ds	12
   383  000084                     _data:
   384                           	opt stack 0
   385  000084                     	ds	12
   386  000090                     _addressErrorCounter:
   387                           	opt stack 0
   388  000090                     	ds	2
   389  000092                     _alignErrorCounter:
   390                           	opt stack 0
   391  000092                     	ds	2
   392  000094                     _crcErrorCounter:
   393                           	opt stack 0
   394  000094                     	ds	2
   395  000096                     _dataAdressErrorCounter:
   396                           	opt stack 0
   397  000096                     	ds	2
   398  000098                     _receiveArrayAddress:
   399                           	opt stack 0
   400  000098                     	ds	2
   401  00009A                     _receiveArray:
   402                           	opt stack 0
   403  00009A                     	ds	40
   404  0000C2                     _crc_buffer:
   405                           	opt stack 0
   406  0000C2                     	ds	17
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           
   414                           	psect	bssBANK1
   415  000100                     __pbssBANK1:
   416                           	opt stack 0
   417  000100                     _registers:
   418                           	opt stack 0
   419  000100                     	ds	48
   420  000130                     _ring_buffer:
   421                           	opt stack 0
   422  000130                     	ds	206
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           
   430                           	psect	bssBANK2
   431  000200                     __pbssBANK2:
   432                           	opt stack 0
   433  000200                     _rx_buffer:
   434                           	opt stack 0
   435  000200                     	ds	200
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           
   443                           	psect	bssBANK3
   444  000300                     __pbssBANK3:
   445                           	opt stack 0
   446  000300                     _input_buffer:
   447                           	opt stack 0
   448  000300                     	ds	206
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           
   456                           	psect	bssBANK4
   457  000400                     __pbssBANK4:
   458                           	opt stack 0
   459  000400                     _output_buffer:
   460                           	opt stack 0
   461  000400                     	ds	206
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           
   469                           	psect	cstackBANK0
   470  0000D3                     __pcstackBANK0:
   471                           	opt stack 0
   472  0000D3                     ??_SetPin595:
   473  0000D3                     ??_UART_buff_get:
   474  0000D3                     ?___lwmod:
   475                           	opt stack 0
   476  0000D3                     begin@ptr:
   477                           	opt stack 0
   478  0000D3                     UART_buff_init@_this:
   479                           	opt stack 0
   480  0000D3                     UART_buff_put@_this:
   481                           	opt stack 0
   482  0000D3                     ___lwmod@dividend:
   483                           	opt stack 0
   484  0000D3                     Delay@i:
   485                           	opt stack 0
   486                           
   487                           ; 4 bytes @ 0x0
   488  0000D3                     	ds	2
   489  0000D5                     begin@maxSize:
   490                           	opt stack 0
   491  0000D5                     UART_buff_put@c:
   492                           	opt stack 0
   493  0000D5                     UART_buff_get@c:
   494                           	opt stack 0
   495  0000D5                     ___lwmod@divisor:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499  0000D5                     	ds	1
   500  0000D6                     begin@givenAddress:
   501                           	opt stack 0
   502  0000D6                     Send_put@_data:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x3
   506  0000D6                     	ds	1
   507  0000D7                     ??_PotSetpoint:
   508  0000D7                     begin@error:
   509                           	opt stack 0
   510  0000D7                     EnableSlavePower@slave:
   511                           	opt stack 0
   512  0000D7                     putch@txData:
   513                           	opt stack 0
   514  0000D7                     writeRegisters@val:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x4
   518  0000D7                     	ds	1
   519  0000D8                     ?_printf:
   520                           	opt stack 0
   521  0000D8                     begin@stufftosend:
   522                           	opt stack 0
   523  0000D8                     printf@f:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x5
   527  0000D8                     	ds	1
   528  0000D9                     writeRegisters@i:
   529                           	opt stack 0
   530  0000D9                     PotSetpoint@set_point:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x6
   534  0000D9                     	ds	1
   535  0000DA                     begin@stufftoreceive:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x7
   539  0000DA                     	ds	1
   540  0000DB                     PotSetpoint@x:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x8
   544  0000DB                     	ds	1
   545  0000DC                     printf@flag:
   546                           	opt stack 0
   547  0000DC                     begin@stuffavailable:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x9
   551  0000DC                     	ds	1
   552  0000DD                     PotSetpoint@new_pos:
   553                           	opt stack 0
   554  0000DD                     printf@ap:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0xA
   558  0000DD                     	ds	1
   559  0000DE                     begin@stuffpeek:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0xB
   563  0000DE                     	ds	1
   564  0000DF                     printf@val:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0xC
   568  0000DF                     	ds	2
   569  0000E1                     printf@prec:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0xE
   573  0000E1                     	ds	1
   574  0000E2                     printf@c:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0xF
   578  0000E2                     	ds	1
   579  0000E3                     ??_FuseSystem:
   580                           
   581                           ; 1 bytes @ 0x10
   582  0000E3                     	ds	4
   583  0000E7                     FuseSystem@i:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587  0000E7                     	ds	2
   588  0000E9                     FuseSystem@i_1562:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x16
   592  0000E9                     	ds	2
   593  0000EB                     main@UP:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x18
   597  0000EB                     	ds	1
   598  0000EC                     main@i:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x19
   602  0000EC                     	ds	2
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           
   610                           	psect	cstackCOMRAM
   611  000001                     __pcstackCOMRAM:
   612                           	opt stack 0
   613  000001                     ?_ADC_GetConversion:
   614                           	opt stack 0
   615  000001                     ?_UART_buff_size:
   616                           	opt stack 0
   617  000001                     ?i2_UART_buff_modulo_inc:
   618                           	opt stack 0
   619  000001                     UART_buff_size@_this:
   620                           	opt stack 0
   621  000001                     i2SetPin595@Reg:
   622                           	opt stack 0
   623  000001                     i2UART_buff_modulo_inc@value:
   624                           	opt stack 0
   625  000001                     i2Delay@wait:
   626                           	opt stack 0
   627                           
   628                           ; 4 bytes @ 0x0
   629  000001                     	ds	2
   630  000003                     ??_ADC_GetConversion:
   631  000003                     i2SetPin595@pin:
   632                           	opt stack 0
   633  000003                     i2UART_buff_modulo_inc@modulus:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x2
   637  000003                     	ds	2
   638  000005                     ??i2_Delay:
   639  000005                     ADC_GetConversion@channel:
   640                           	opt stack 0
   641  000005                     i2SetPin595@value:
   642                           	opt stack 0
   643  000005                     i2UART_buff_modulo_inc@my_value:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x4
   647  000005                     	ds	1
   648  000006                     i2Delay@i:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x5
   652  000006                     	ds	1
   653  000007                     ??i2_SetPin595:
   654  000007                     i2UART_buff_put@_this:
   655                           	opt stack 0
   656  000007                     i2UART_buff_get@_this:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x6
   660  000007                     	ds	2
   661  000009                     ??i2_UART_buff_get:
   662  000009                     i2UART_buff_put@c:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x8
   666  000009                     	ds	1
   667  00000A                     ??i2_UART_buff_put:
   668  00000A                     i2writeRegisters@val:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x9
   672  00000A                     	ds	1
   673  00000B                     i2UART_buff_get@c:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0xA
   677  00000B                     	ds	1
   678  00000C                     EUSART1_Receive_ISR@data:
   679                           	opt stack 0
   680  00000C                     i2writeRegisters@i:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0xB
   684  00000C                     	ds	2
   685  00000E                     ReadCurrent@gather:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0xD
   689  00000E                     	ds	1
   690  00000F                     ??_INTERRUPT_InterruptManager:
   691                           
   692                           ; 1 bytes @ 0xE
   693  00000F                     	ds	14
   694  00001D                     ?_UART_buff_modulo_inc:
   695                           	opt stack 0
   696  00001D                     ?___wmul:
   697                           	opt stack 0
   698  00001D                     ?___awdiv:
   699                           	opt stack 0
   700  00001D                     ?___lwdiv:
   701                           	opt stack 0
   702  00001D                     DATAEE_WriteByte@bData:
   703                           	opt stack 0
   704  00001D                     DATAEE_ReadByte@bAdd:
   705                           	opt stack 0
   706  00001D                     PWM4_LoadDutyValue@dutyValue:
   707                           	opt stack 0
   708  00001D                     SetPin595@Reg:
   709                           	opt stack 0
   710  00001D                     UART_buff_modulo_inc@value:
   711                           	opt stack 0
   712  00001D                     ___wmul@multiplier:
   713                           	opt stack 0
   714  00001D                     ___awdiv@dividend:
   715                           	opt stack 0
   716  00001D                     ___lwdiv@dividend:
   717                           	opt stack 0
   718  00001D                     memset@p1:
   719                           	opt stack 0
   720  00001D                     Delay@wait:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x1C
   724  00001D                     	ds	1
   725  00001E                     ??_ComputeStorageData:
   726  00001E                     DATAEE_WriteByte@bAdd:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x1D
   730  00001E                     	ds	1
   731  00001F                     ??_PWM4_LoadDutyValue:
   732  00001F                     DATAEE_WriteByte@GIEBitValue:
   733                           	opt stack 0
   734  00001F                     SetPin595@pin:
   735                           	opt stack 0
   736  00001F                     UART_buff_modulo_inc@modulus:
   737                           	opt stack 0
   738  00001F                     ___wmul@multiplicand:
   739                           	opt stack 0
   740  00001F                     ___awdiv@divisor:
   741                           	opt stack 0
   742  00001F                     ___lwdiv@divisor:
   743                           	opt stack 0
   744  00001F                     memset@c:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x1E
   748  00001F                     	ds	1
   749  000020                     ComputeStorageData@i:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x1F
   753  000020                     	ds	1
   754  000021                     ??_Delay:
   755  000021                     ___awdiv@counter:
   756                           	opt stack 0
   757  000021                     ___lwdiv@counter:
   758                           	opt stack 0
   759  000021                     SetPin595@value:
   760                           	opt stack 0
   761  000021                     UART_buff_modulo_inc@my_value:
   762                           	opt stack 0
   763  000021                     ___wmul@product:
   764                           	opt stack 0
   765  000021                     memset@n:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x20
   769  000021                     	ds	1
   770  000022                     ___awdiv@sign:
   771                           	opt stack 0
   772  000022                     Clear595@i:
   773                           	opt stack 0
   774  000022                     PotSetpoint@new_point:
   775                           	opt stack 0
   776  000022                     ___lwdiv@quotient:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x21
   780  000022                     	ds	1
   781  000023                     ??_UART_buff_put:
   782  000023                     EnableSlavePower@onof:
   783                           	opt stack 0
   784  000023                     UART_buff_get@_this:
   785                           	opt stack 0
   786  000023                     ___awdiv@quotient:
   787                           	opt stack 0
   788  000023                     memset@p:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x22
   792  000023                     	ds	1
   793  000024                     ___lwmod@counter:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x23
   797  000024                     	ds	1
   798  000025                     tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           
   805                           ; 1 bytes @ 0x24
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 11 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  i               2   25[BANK0 ] int 
   816 ;;  UP              1   24[BANK0 ] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   826 ;;      Params:         0       0       0       0       0       0       0
   827 ;;      Locals:         0       3       0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0
   829 ;;      Totals:         0       3       0       0       0       0       0
   830 ;;Total ram usage:        3 bytes
   831 ;; Hardware stack levels required when called:   12
   832 ;; This function calls:
   833 ;;		_ComputeStorageData
   834 ;;		_DATAEE_WriteByte
   835 ;;		_Delay
   836 ;;		_EnableSlavePower
   837 ;;		_FuseSystem
   838 ;;		_PDUStartup
   839 ;;		_PWM4_LoadDutyValue
   840 ;;		_PotSetpoint
   841 ;;		_SYSTEM_Initialize
   842 ;;		_SetPin595
   843 ;;		_Update
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text0
   850  000E7E                     __ptext0:
   851                           	opt stack 0
   852  000E7E                     _main:
   853                           	opt stack 19
   854                           
   855                           ;main.c: 13: SYSTEM_Initialize();
   856                           
   857                           ;incstack = 0
   858  000E7E  ECE8  F00C         	call	_SYSTEM_Initialize	;wreg free
   859                           
   860                           ;main.c: 14: PDUStartup();
   861  000E82  EC41  F00E         	call	_PDUStartup	;wreg free
   862                           
   863                           ;main.c: 33: (INTCONbits.GIE = 1);
   864  000E86  8EF2               	bsf	intcon,7,c	;volatile
   865                           
   866                           ;main.c: 36: (INTCONbits.PEIE = 1);
   867  000E88  8CF2               	bsf	intcon,6,c	;volatile
   868                           
   869                           ;main.c: 43: DATAEE_WriteByte(0, 0x03);
   870  000E8A  0E03               	movlw	3
   871  000E8C  6E1D               	movwf	DATAEE_WriteByte@bData,c
   872  000E8E  0E00               	movlw	0
   873  000E90  EC02  F00F         	call	_DATAEE_WriteByte
   874                           
   875                           ;main.c: 44: DATAEE_WriteByte(1, 0xE8);
   876  000E94  0EE8               	movlw	232
   877  000E96  6E1D               	movwf	DATAEE_WriteByte@bData,c
   878  000E98  0E01               	movlw	1
   879  000E9A  EC02  F00F         	call	_DATAEE_WriteByte
   880                           
   881                           ;main.c: 45: DATAEE_WriteByte(2, 0x03);
   882  000E9E  0E03               	movlw	3
   883  000EA0  6E1D               	movwf	DATAEE_WriteByte@bData,c
   884  000EA2  0E02               	movlw	2
   885  000EA4  EC02  F00F         	call	_DATAEE_WriteByte
   886                           
   887                           ;main.c: 46: DATAEE_WriteByte(3, 0xE8);
   888  000EA8  0EE8               	movlw	232
   889  000EAA  6E1D               	movwf	DATAEE_WriteByte@bData,c
   890  000EAC  0E03               	movlw	3
   891  000EAE  EC02  F00F         	call	_DATAEE_WriteByte
   892                           
   893                           ;main.c: 47: DATAEE_WriteByte(4, 0x03);
   894  000EB2  0E03               	movlw	3
   895  000EB4  6E1D               	movwf	DATAEE_WriteByte@bData,c
   896  000EB6  0E04               	movlw	4
   897  000EB8  EC02  F00F         	call	_DATAEE_WriteByte
   898                           
   899                           ;main.c: 48: DATAEE_WriteByte(5, 0xE8);
   900  000EBC  0EE8               	movlw	232
   901  000EBE  6E1D               	movwf	DATAEE_WriteByte@bData,c
   902  000EC0  0E05               	movlw	5
   903  000EC2  EC02  F00F         	call	_DATAEE_WriteByte
   904                           
   905                           ;main.c: 49: DATAEE_WriteByte(6, 0x03);
   906  000EC6  0E03               	movlw	3
   907  000EC8  6E1D               	movwf	DATAEE_WriteByte@bData,c
   908  000ECA  0E06               	movlw	6
   909  000ECC  EC02  F00F         	call	_DATAEE_WriteByte
   910                           
   911                           ;main.c: 50: DATAEE_WriteByte(7, 0xE8);
   912  000ED0  0EE8               	movlw	232
   913  000ED2  6E1D               	movwf	DATAEE_WriteByte@bData,c
   914  000ED4  0E07               	movlw	7
   915  000ED6  EC02  F00F         	call	_DATAEE_WriteByte
   916                           
   917                           ;main.c: 51: DATAEE_WriteByte(8, 0x03);
   918  000EDA  0E03               	movlw	3
   919  000EDC  6E1D               	movwf	DATAEE_WriteByte@bData,c
   920  000EDE  0E08               	movlw	8
   921  000EE0  EC02  F00F         	call	_DATAEE_WriteByte
   922                           
   923                           ;main.c: 52: DATAEE_WriteByte(9, 0xE8);
   924  000EE4  0EE8               	movlw	232
   925  000EE6  6E1D               	movwf	DATAEE_WriteByte@bData,c
   926  000EE8  0E09               	movlw	9
   927  000EEA  EC02  F00F         	call	_DATAEE_WriteByte
   928                           
   929                           ;main.c: 53: DATAEE_WriteByte(10, 0x03);
   930  000EEE  0E03               	movlw	3
   931  000EF0  6E1D               	movwf	DATAEE_WriteByte@bData,c
   932  000EF2  0E0A               	movlw	10
   933  000EF4  EC02  F00F         	call	_DATAEE_WriteByte
   934                           
   935                           ;main.c: 54: DATAEE_WriteByte(11, 0xE8);
   936  000EF8  0EE8               	movlw	232
   937  000EFA  6E1D               	movwf	DATAEE_WriteByte@bData,c
   938  000EFC  0E0B               	movlw	11
   939  000EFE  EC02  F00F         	call	_DATAEE_WriteByte
   940                           
   941                           ;main.c: 56: PotSetpoint(0);
   942  000F02  0E00               	movlw	0
   943  000F04  6E23               	movwf	PotSetpoint@new_point+1,c
   944  000F06  0E00               	movlw	0
   945  000F08  6E22               	movwf	PotSetpoint@new_point,c
   946  000F0A  ECD4  F009         	call	_PotSetpoint	;wreg free
   947                           
   948                           ;main.c: 57: PWM4_LoadDutyValue(0);
   949  000F0E  0E00               	movlw	0
   950  000F10  6E1E               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   951  000F12  0E00               	movlw	0
   952  000F14  6E1D               	movwf	PWM4_LoadDutyValue@dutyValue,c
   953  000F16  EC6A  F00F         	call	_PWM4_LoadDutyValue	;wreg free
   954                           
   955                           ;main.c: 58: LATCbits.LATC5 = 0;
   956  000F1A  9A8B               	bcf	3979,5,c	;volatile
   957                           
   958                           ;main.c: 59: int i = 0;
   959  000F1C  0E00               	movlw	0
   960  000F1E  0100               	movlb	0	; () banked
   961  000F20  6FED               	movwf	(main@i+1)& (0+255),b
   962  000F22  0E00               	movlw	0
   963  000F24  6FEC               	movwf	main@i& (0+255),b
   964                           
   965                           ; BSR set to: 0
   966                           ;main.c: 60: bool UP = 0;
   967  000F26  0E00               	movlw	0
   968  000F28  0100               	movlb	0	; () banked
   969  000F2A  6FEB               	movwf	main@UP& (0+255),b
   970                           
   971                           ;main.c: 61: ComputeStorageData();
   972  000F2C  ECD2  F00A         	call	_ComputeStorageData	;wreg free
   973                           
   974                           ;main.c: 63: EnableSlavePower(DDS,1);
   975  000F30  0E00               	movlw	0
   976  000F32  6E24               	movwf	EnableSlavePower@onof+1,c
   977  000F34  0E01               	movlw	1
   978  000F36  6E23               	movwf	EnableSlavePower@onof,c
   979  000F38  0E01               	movlw	1
   980  000F3A  EC5E  F00A         	call	_EnableSlavePower
   981                           
   982                           ;main.c: 64: EnableSlavePower(SAS,1);
   983  000F3E  0E00               	movlw	0
   984  000F40  6E24               	movwf	EnableSlavePower@onof+1,c
   985  000F42  0E01               	movlw	1
   986  000F44  6E23               	movwf	EnableSlavePower@onof,c
   987  000F46  0E03               	movlw	3
   988  000F48  EC5E  F00A         	call	_EnableSlavePower
   989                           
   990                           ;main.c: 65: EnableSlavePower(BMM,1);
   991  000F4C  0E00               	movlw	0
   992  000F4E  6E24               	movwf	EnableSlavePower@onof+1,c
   993  000F50  0E01               	movlw	1
   994  000F52  6E23               	movwf	EnableSlavePower@onof,c
   995  000F54  0E04               	movlw	4
   996  000F56  EC5E  F00A         	call	_EnableSlavePower
   997                           
   998                           ;main.c: 66: EnableSlavePower(TSS,1);
   999  000F5A  0E00               	movlw	0
  1000  000F5C  6E24               	movwf	EnableSlavePower@onof+1,c
  1001  000F5E  0E01               	movlw	1
  1002  000F60  6E23               	movwf	EnableSlavePower@onof,c
  1003  000F62  0E05               	movlw	5
  1004  000F64  EC5E  F00A         	call	_EnableSlavePower
  1005                           
  1006                           ;main.c: 67: EnableSlavePower(MCS,1);
  1007  000F68  0E00               	movlw	0
  1008  000F6A  6E24               	movwf	EnableSlavePower@onof+1,c
  1009  000F6C  0E01               	movlw	1
  1010  000F6E  6E23               	movwf	EnableSlavePower@onof,c
  1011  000F70  0E02               	movlw	2
  1012  000F72  EC5E  F00A         	call	_EnableSlavePower
  1013                           
  1014                           ;main.c: 68: EnableSlavePower(AUX, 1);
  1015  000F76  0E00               	movlw	0
  1016  000F78  6E24               	movwf	EnableSlavePower@onof+1,c
  1017  000F7A  0E01               	movlw	1
  1018  000F7C  6E23               	movwf	EnableSlavePower@onof,c
  1019  000F7E  0E06               	movlw	6
  1020  000F80  EC5E  F00A         	call	_EnableSlavePower
  1021                           
  1022                           ;main.c: 69: SetPin595(2, 4, ON);
  1023  000F84  0E00               	movlw	0
  1024  000F86  6E1E               	movwf	SetPin595@Reg+1,c
  1025  000F88  0E02               	movlw	2
  1026  000F8A  6E1D               	movwf	SetPin595@Reg,c
  1027  000F8C  0E00               	movlw	0
  1028  000F8E  6E20               	movwf	SetPin595@pin+1,c
  1029  000F90  0E04               	movlw	4
  1030  000F92  6E1F               	movwf	SetPin595@pin,c
  1031  000F94  0E00               	movlw	0
  1032  000F96  6E22               	movwf	SetPin595@value+1,c
  1033  000F98  0E01               	movlw	1
  1034  000F9A  6E21               	movwf	SetPin595@value,c
  1035  000F9C  EC21  F00D         	call	_SetPin595	;wreg free
  1036                           
  1037                           ;main.c: 70: SetPin595(2, 3, OFF);
  1038  000FA0  0E00               	movlw	0
  1039  000FA2  6E1E               	movwf	SetPin595@Reg+1,c
  1040  000FA4  0E02               	movlw	2
  1041  000FA6  6E1D               	movwf	SetPin595@Reg,c
  1042  000FA8  0E00               	movlw	0
  1043  000FAA  6E20               	movwf	SetPin595@pin+1,c
  1044  000FAC  0E03               	movlw	3
  1045  000FAE  6E1F               	movwf	SetPin595@pin,c
  1046  000FB0  0E00               	movlw	0
  1047  000FB2  6E22               	movwf	SetPin595@value+1,c
  1048  000FB4  0E00               	movlw	0
  1049  000FB6  6E21               	movwf	SetPin595@value,c
  1050  000FB8  EC21  F00D         	call	_SetPin595	;wreg free
  1051                           
  1052                           ;main.c: 71: SetPin595(2, 2, OFF);
  1053  000FBC  0E00               	movlw	0
  1054  000FBE  6E1E               	movwf	SetPin595@Reg+1,c
  1055  000FC0  0E02               	movlw	2
  1056  000FC2  6E1D               	movwf	SetPin595@Reg,c
  1057  000FC4  0E00               	movlw	0
  1058  000FC6  6E20               	movwf	SetPin595@pin+1,c
  1059  000FC8  0E02               	movlw	2
  1060  000FCA  6E1F               	movwf	SetPin595@pin,c
  1061  000FCC  0E00               	movlw	0
  1062  000FCE  6E22               	movwf	SetPin595@value+1,c
  1063  000FD0  0E00               	movlw	0
  1064  000FD2  6E21               	movwf	SetPin595@value,c
  1065  000FD4  EC21  F00D         	call	_SetPin595	;wreg free
  1066                           
  1067                           ;main.c: 72: Update();
  1068  000FD8  EC73  F010         	call	_Update	;wreg free
  1069  000FDC                     l4986:
  1070                           
  1071                           ;main.c: 85: Delay(1000);
  1072  000FDC  0EE8               	movlw	232
  1073  000FDE  6E1D               	movwf	Delay@wait,c
  1074  000FE0  0E03               	movlw	3
  1075  000FE2  6E1E               	movwf	Delay@wait+1,c
  1076  000FE4  0E00               	movlw	0
  1077  000FE6  6E1F               	movwf	Delay@wait+2,c
  1078  000FE8  0E00               	movlw	0
  1079  000FEA  6E20               	movwf	Delay@wait+3,c
  1080  000FEC  EC16  F00E         	call	_Delay	;wreg free
  1081                           
  1082                           ;main.c: 86: FuseSystem();
  1083  000FF0  EC58  F006         	call	_FuseSystem	;wreg free
  1084                           
  1085                           ;main.c: 87: i++;
  1086  000FF4  0100               	movlb	0	; () banked
  1087  000FF6  4BEC               	infsnz	main@i& (0+255),f,b
  1088  000FF8  2BED               	incf	(main@i+1)& (0+255),f,b
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;main.c: 88: PWM4_LoadDutyValue(i);
  1092  000FFA  C0EC  F01D         	movff	main@i,PWM4_LoadDutyValue@dutyValue
  1093  000FFE  C0ED  F01E         	movff	main@i+1,PWM4_LoadDutyValue@dutyValue+1
  1094  001002  EC6A  F00F         	call	_PWM4_LoadDutyValue	;wreg free
  1095                           
  1096                           ;main.c: 89: if(i>500){
  1097  001006  0100               	movlb	0	; () banked
  1098  001008  BFED               	btfsc	(main@i+1)& (0+255),7,b
  1099  00100A  D7E8               	goto	l4986
  1100  00100C  0EF5               	movlw	245
  1101  00100E  0100               	movlb	0	; () banked
  1102  001010  5DEC               	subwf	main@i& (0+255),w,b
  1103  001012  0E01               	movlw	1
  1104  001014  0100               	movlb	0	; () banked
  1105  001016  59ED               	subwfb	(main@i+1)& (0+255),w,b
  1106  001018  A0D8               	btfss	status,0,c
  1107  00101A  D7E0               	goto	l4986
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;main.c: 90: i = 0;
  1111  00101C  0E00               	movlw	0
  1112  00101E  0100               	movlb	0	; () banked
  1113  001020  6FED               	movwf	(main@i+1)& (0+255),b
  1114  001022  0E00               	movlw	0
  1115  001024  6FEC               	movwf	main@i& (0+255),b
  1116                           
  1117                           ; BSR set to: 0
  1118                           
  1119                           ; BSR set to: 0
  1120  001026  D7DA               	goto	l4986
  1121  001028                     __end_of_main:
  1122                           	opt stack 0
  1123                           tblptru	equ	0xFF8
  1124                           tblptrh	equ	0xFF7
  1125                           tblptrl	equ	0xFF6
  1126                           tablat	equ	0xFF5
  1127                           intcon	equ	0xFF2
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _SYSTEM_Initialize *****************
  1133 ;; Defined at:
  1134 ;;		line 113 in file "mcc_generated_files/mcc.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1148 ;;      Params:         0       0       0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    9
  1155 ;; This function calls:
  1156 ;;		_ADC_Initialize
  1157 ;;		_EUSART1_Initialize
  1158 ;;		_INTERRUPT_Initialize
  1159 ;;		_OSCILLATOR_Initialize
  1160 ;;		_PIN_MANAGER_Initialize
  1161 ;;		_PWM4_Initialize
  1162 ;;		_TMR1_Initialize
  1163 ;;		_begin
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text1
  1170  0019D0                     __ptext1:
  1171                           	opt stack 0
  1172  0019D0                     _SYSTEM_Initialize:
  1173                           	opt stack 21
  1174                           
  1175                           ;mcc.c: 114: OSCILLATOR_Initialize();
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;incstack = 0
  1179  0019D0  EC60  F010         	call	_OSCILLATOR_Initialize	;wreg free
  1180                           
  1181                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1182  0019D4  EC20  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  1183                           
  1184                           ;mcc.c: 116: INTERRUPT_Initialize();
  1185  0019D8  EC6E  F010         	call	_INTERRUPT_Initialize	;wreg free
  1186                           
  1187                           ;mcc.c: 117: EUSART1_Initialize();
  1188  0019DC  ECE0  F00E         	call	_EUSART1_Initialize	;wreg free
  1189                           
  1190                           ;mcc.c: 118: begin(receiveArray, sizeof (receiveArray), 5, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  1191  0019E0  0E9A               	movlw	low _receiveArray
  1192  0019E2  0100               	movlb	0	; () banked
  1193  0019E4  6FD3               	movwf	begin@ptr& (0+255),b
  1194  0019E6  0E00               	movlw	high _receiveArray
  1195  0019E8  0100               	movlb	0	; () banked
  1196  0019EA  6FD4               	movwf	(begin@ptr+1)& (0+255),b
  1197  0019EC  0E28               	movlw	40
  1198  0019EE  0100               	movlb	0	; () banked
  1199  0019F0  6FD5               	movwf	begin@maxSize& (0+255),b
  1200  0019F2  0E05               	movlw	5
  1201  0019F4  0100               	movlb	0	; () banked
  1202  0019F6  6FD6               	movwf	begin@givenAddress& (0+255),b
  1203  0019F8  0E00               	movlw	0
  1204  0019FA  0100               	movlb	0	; () banked
  1205  0019FC  6FD7               	movwf	begin@error& (0+255),b
  1206  0019FE  0E6E               	movlw	low _Send_put
  1207  001A00  0100               	movlb	0	; () banked
  1208  001A02  6FD8               	movwf	begin@stufftosend& (0+255),b
  1209  001A04  0E1E               	movlw	high _Send_put
  1210  001A06  0100               	movlb	0	; () banked
  1211  001A08  6FD9               	movwf	(begin@stufftosend+1)& (0+255),b
  1212  001A0A  0E00               	movlw	0
  1213  001A0C  0100               	movlb	0	; () banked
  1214  001A0E  6FDA               	movwf	begin@stufftoreceive& (0+255),b
  1215  001A10  0E00               	movlw	0
  1216  001A12  0100               	movlb	0	; () banked
  1217  001A14  6FDB               	movwf	(begin@stufftoreceive+1)& (0+255),b
  1218  001A16  0E00               	movlw	0
  1219  001A18  0100               	movlb	0	; () banked
  1220  001A1A  6FDC               	movwf	begin@stuffavailable& (0+255),b
  1221  001A1C  0E00               	movlw	0
  1222  001A1E  0100               	movlb	0	; () banked
  1223  001A20  6FDD               	movwf	(begin@stuffavailable+1)& (0+255),b
  1224  001A22  0E00               	movlw	0
  1225  001A24  0100               	movlb	0	; () banked
  1226  001A26  6FDE               	movwf	begin@stuffpeek& (0+255),b
  1227  001A28  0E00               	movlw	0
  1228  001A2A  0100               	movlb	0	; () banked
  1229  001A2C  6FDF               	movwf	(begin@stuffpeek+1)& (0+255),b
  1230  001A2E  ECE9  F00D         	call	_begin	;wreg free
  1231                           
  1232                           ;mcc.c: 119: PWM4_Initialize();
  1233  001A32  EC4C  F010         	call	_PWM4_Initialize	;wreg free
  1234                           
  1235                           ;mcc.c: 120: TMR1_Initialize();
  1236  001A36  ECF1  F00F         	call	_TMR1_Initialize	;wreg free
  1237                           
  1238                           ;mcc.c: 122: LATB4 = 1;
  1239  001A3A  888A               	bsf	3978,4,c	;volatile
  1240                           
  1241                           ;mcc.c: 123: ADC_Initialize();
  1242  001A3C  EC35  F010         	call	_ADC_Initialize	;wreg free
  1243  001A40  0012               	return		;funcret
  1244  001A42                     __end_of_SYSTEM_Initialize:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           intcon	equ	0xFF2
  1251                           postinc0	equ	0xFEE
  1252                           wreg	equ	0xFE8
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _begin *****************
  1256 ;; Defined at:
  1257 ;;		line 18 in file "FastTransfer.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  ptr             2    0[BANK0 ] PTR volatile int 
  1260 ;;		 -> receiveArray(40), 
  1261 ;;  maxSize         1    2[BANK0 ] unsigned char 
  1262 ;;  givenAddress    1    3[BANK0 ] unsigned char 
  1263 ;;  error           1    4[BANK0 ] unsigned char 
  1264 ;;  stufftosend     2    5[BANK0 ] PTR FTN(unsigned char ,)
  1265 ;;		 -> Send_put(1), 
  1266 ;;  stufftorecei    2    7[BANK0 ] PTR FTN()unsigned char 
  1267 ;;		 -> Receive_get(1), 
  1268 ;;  stuffavailab    2    9[BANK0 ] PTR FTN()int 
  1269 ;;		 -> Receive_available(2), 
  1270 ;;  stuffpeek       2   11[BANK0 ] PTR FTN()unsigned char 
  1271 ;;		 -> Receive_peek(1), 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1283 ;;      Params:         0      13       0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0
  1286 ;;      Totals:         0      13       0       0       0       0       0
  1287 ;;Total ram usage:       13 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    7
  1290 ;; This function calls:
  1291 ;;		___awdiv
  1292 ;; This function is called by:
  1293 ;;		_SYSTEM_Initialize
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text2
  1298  001BD2                     __ptext2:
  1299                           	opt stack 0
  1300  001BD2                     _begin:
  1301                           	opt stack 22
  1302                           
  1303                           ;FastTransfer.c: 19: receiveArrayAddress = ptr;
  1304                           
  1305                           ;incstack = 0
  1306  001BD2  C0D3  F098         	movff	begin@ptr,_receiveArrayAddress
  1307  001BD6  C0D4  F099         	movff	begin@ptr+1,_receiveArrayAddress+1
  1308                           
  1309                           ;FastTransfer.c: 20: moduleAddress = givenAddress;
  1310  001BDA  C0D6  F03D         	movff	begin@givenAddress,_moduleAddress
  1311                           
  1312                           ;FastTransfer.c: 21: serial_write = stufftosend;
  1313  001BDE  C0D8  F033         	movff	begin@stufftosend,_serial_write
  1314  001BE2  C0D9  F034         	movff	begin@stufftosend+1,_serial_write+1
  1315                           
  1316                           ;FastTransfer.c: 22: serial_available = stuffavailable;
  1317  001BE6  C0DC  F02D         	movff	begin@stuffavailable,_serial_available
  1318  001BEA  C0DD  F02E         	movff	begin@stuffavailable+1,_serial_available+1
  1319                           
  1320                           ;FastTransfer.c: 23: serial_peek = stuffpeek;
  1321  001BEE  C0DE  F02F         	movff	begin@stuffpeek,_serial_peek
  1322  001BF2  C0DF  F030         	movff	begin@stuffpeek+1,_serial_peek+1
  1323                           
  1324                           ;FastTransfer.c: 24: serial_read = stufftoreceive;
  1325  001BF6  C0DA  F031         	movff	begin@stufftoreceive,_serial_read
  1326  001BFA  C0DB  F032         	movff	begin@stufftoreceive+1,_serial_read+1
  1327                           
  1328                           ;FastTransfer.c: 25: maxDataAddress = maxSize / 2;
  1329  001BFE  C0D5  F01D         	movff	begin@maxSize,___awdiv@dividend
  1330  001C02  6A1E               	clrf	___awdiv@dividend+1,c
  1331  001C04  0E00               	movlw	0
  1332  001C06  6E20               	movwf	___awdiv@divisor+1,c
  1333  001C08  0E02               	movlw	2
  1334  001C0A  6E1F               	movwf	___awdiv@divisor,c
  1335  001C0C  EC67  F00C         	call	___awdiv	;wreg free
  1336  001C10  501D               	movf	?___awdiv,w,c
  1337  001C12  6E3C               	movwf	_maxDataAddress,c
  1338                           
  1339                           ;FastTransfer.c: 26: sendStructAddress = (unsigned char*) & ring_buffer;
  1340  001C14  0E30               	movlw	low _ring_buffer
  1341  001C16  6E2B               	movwf	_sendStructAddress,c
  1342  001C18  0E01               	movlw	high _ring_buffer
  1343  001C1A  6E2C               	movwf	_sendStructAddress+1,c
  1344                           
  1345                           ;FastTransfer.c: 27: AKNAKsend = error;
  1346  001C1C  C0D7  F039         	movff	begin@error,_AKNAKsend
  1347                           
  1348                           ;FastTransfer.c: 28: alignErrorCounter = 0;
  1349  001C20  0E00               	movlw	0
  1350  001C22  0100               	movlb	0	; () banked
  1351  001C24  6F93               	movwf	(_alignErrorCounter+1)& (0+255),b
  1352  001C26  0E00               	movlw	0
  1353  001C28  6F92               	movwf	_alignErrorCounter& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356  001C2A  0012               	return		;funcret
  1357  001C2C                     __end_of_begin:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           intcon	equ	0xFF2
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function ___awdiv *****************
  1369 ;; Defined at:
  1370 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  dividend        2   28[COMRAM] int 
  1373 ;;  divisor         2   30[COMRAM] int 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  quotient        2   34[COMRAM] int 
  1376 ;;  sign            1   33[COMRAM] unsigned char 
  1377 ;;  counter         1   32[COMRAM] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  2   28[COMRAM] int 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1387 ;;      Params:         4       0       0       0       0       0       0
  1388 ;;      Locals:         4       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0
  1390 ;;      Totals:         8       0       0       0       0       0       0
  1391 ;;Total ram usage:        8 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    6
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_begin
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text3
  1402  0018CE                     __ptext3:
  1403                           	opt stack 0
  1404  0018CE                     ___awdiv:
  1405                           	opt stack 22
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;incstack = 0
  1409  0018CE  0E00               	movlw	0
  1410  0018D0  6E22               	movwf	___awdiv@sign,c
  1411  0018D2  AE20               	btfss	___awdiv@divisor+1,7,c
  1412  0018D4  D006               	goto	l4276
  1413  0018D6  6C1F               	negf	___awdiv@divisor,c
  1414  0018D8  1E20               	comf	___awdiv@divisor+1,f,c
  1415  0018DA  B0D8               	btfsc	status,0,c
  1416  0018DC  2A20               	incf	___awdiv@divisor+1,f,c
  1417  0018DE  0E01               	movlw	1
  1418  0018E0  6E22               	movwf	___awdiv@sign,c
  1419  0018E2                     l4276:
  1420  0018E2  AE1E               	btfss	___awdiv@dividend+1,7,c
  1421  0018E4  D006               	goto	l4282
  1422  0018E6  6C1D               	negf	___awdiv@dividend,c
  1423  0018E8  1E1E               	comf	___awdiv@dividend+1,f,c
  1424  0018EA  B0D8               	btfsc	status,0,c
  1425  0018EC  2A1E               	incf	___awdiv@dividend+1,f,c
  1426  0018EE  0E01               	movlw	1
  1427  0018F0  1A22               	xorwf	___awdiv@sign,f,c
  1428  0018F2                     l4282:
  1429  0018F2  0E00               	movlw	0
  1430  0018F4  6E24               	movwf	___awdiv@quotient+1,c
  1431  0018F6  0E00               	movlw	0
  1432  0018F8  6E23               	movwf	___awdiv@quotient,c
  1433  0018FA  501F               	movf	___awdiv@divisor,w,c
  1434  0018FC  1020               	iorwf	___awdiv@divisor+1,w,c
  1435  0018FE  B4D8               	btfsc	status,2,c
  1436  001900  D01C               	goto	l4304
  1437  001902  0E01               	movlw	1
  1438  001904  6E21               	movwf	___awdiv@counter,c
  1439  001906  D004               	goto	l4290
  1440  001908                     l4288:
  1441  001908  90D8               	bcf	status,0,c
  1442  00190A  361F               	rlcf	___awdiv@divisor,f,c
  1443  00190C  3620               	rlcf	___awdiv@divisor+1,f,c
  1444  00190E  2A21               	incf	___awdiv@counter,f,c
  1445  001910                     l4290:
  1446  001910  AE20               	btfss	___awdiv@divisor+1,7,c
  1447  001912  D7FA               	goto	l4288
  1448  001914                     l4292:
  1449  001914  90D8               	bcf	status,0,c
  1450  001916  3623               	rlcf	___awdiv@quotient,f,c
  1451  001918  3624               	rlcf	___awdiv@quotient+1,f,c
  1452  00191A  501F               	movf	___awdiv@divisor,w,c
  1453  00191C  5C1D               	subwf	___awdiv@dividend,w,c
  1454  00191E  5020               	movf	___awdiv@divisor+1,w,c
  1455  001920  581E               	subwfb	___awdiv@dividend+1,w,c
  1456  001922  A0D8               	btfss	status,0,c
  1457  001924  D005               	goto	l4300
  1458  001926  501F               	movf	___awdiv@divisor,w,c
  1459  001928  5E1D               	subwf	___awdiv@dividend,f,c
  1460  00192A  5020               	movf	___awdiv@divisor+1,w,c
  1461  00192C  5A1E               	subwfb	___awdiv@dividend+1,f,c
  1462  00192E  8023               	bsf	___awdiv@quotient,0,c
  1463  001930                     l4300:
  1464  001930  90D8               	bcf	status,0,c
  1465  001932  3220               	rrcf	___awdiv@divisor+1,f,c
  1466  001934  321F               	rrcf	___awdiv@divisor,f,c
  1467  001936  2E21               	decfsz	___awdiv@counter,f,c
  1468  001938  D7ED               	goto	l4292
  1469  00193A                     l4304:
  1470  00193A  5022               	movf	___awdiv@sign,w,c
  1471  00193C  B4D8               	btfsc	status,2,c
  1472  00193E  D004               	goto	l4308
  1473  001940  6C23               	negf	___awdiv@quotient,c
  1474  001942  1E24               	comf	___awdiv@quotient+1,f,c
  1475  001944  B0D8               	btfsc	status,0,c
  1476  001946  2A24               	incf	___awdiv@quotient+1,f,c
  1477  001948                     l4308:
  1478  001948  C023  F01D         	movff	___awdiv@quotient,?___awdiv
  1479  00194C  C024  F01E         	movff	___awdiv@quotient+1,?___awdiv+1
  1480  001950  0012               	return	
  1481  001952                     __end_of___awdiv:
  1482                           	opt stack 0
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           intcon	equ	0xFF2
  1488                           postinc0	equ	0xFEE
  1489                           wreg	equ	0xFE8
  1490                           status	equ	0xFD8
  1491                           
  1492 ;; *************** function _TMR1_Initialize *****************
  1493 ;; Defined at:
  1494 ;;		line 66 in file "mcc_generated_files/tmr1.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  2   97[None  ] int 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1508 ;;      Params:         0       0       0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    7
  1515 ;; This function calls:
  1516 ;;		_TMR1_StartTimer
  1517 ;; This function is called by:
  1518 ;;		_SYSTEM_Initialize
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text4
  1523  001FE2                     __ptext4:
  1524                           	opt stack 0
  1525  001FE2                     _TMR1_Initialize:
  1526                           	opt stack 22
  1527                           
  1528                           ;tmr1.c: 71: T1CON = 0x00;
  1529                           
  1530                           ;incstack = 0
  1531  001FE2  0E00               	movlw	0
  1532  001FE4  6ECD               	movwf	4045,c	;volatile
  1533                           
  1534                           ;tmr1.c: 72: T1CONbits.T1CKPS = 0x03;
  1535  001FE6  0E30               	movlw	48
  1536  001FE8  12CD               	iorwf	4045,f,c	;volatile
  1537                           
  1538                           ;tmr1.c: 75: T1GCON = 0x00;
  1539  001FEA  0E00               	movlw	0
  1540  001FEC  6ECC               	movwf	4044,c	;volatile
  1541                           
  1542                           ;tmr1.c: 78: TMR1H = 0x00;
  1543  001FEE  0E00               	movlw	0
  1544  001FF0  6ECF               	movwf	4047,c	;volatile
  1545                           
  1546                           ;tmr1.c: 81: TMR1L = 0x00;
  1547  001FF2  0E00               	movlw	0
  1548  001FF4  6ECE               	movwf	4046,c	;volatile
  1549                           
  1550                           ;tmr1.c: 84: timer1ReloadVal=0;
  1551  001FF6  0E00               	movlw	0
  1552  001FF8  6E36               	movwf	_timer1ReloadVal+1,c	;volatile
  1553  001FFA  0E00               	movlw	0
  1554  001FFC  6E35               	movwf	_timer1ReloadVal,c	;volatile
  1555                           
  1556                           ;tmr1.c: 87: PIR1bits.TMR1IF = 0;
  1557  001FFE  909E               	bcf	3998,0,c	;volatile
  1558                           
  1559                           ;tmr1.c: 90: PIE1bits.TMR1IE = 1;
  1560  002000  809D               	bsf	3997,0,c	;volatile
  1561                           
  1562                           ;tmr1.c: 93: TMR1_StartTimer();
  1563  002002  EC79  F010         	call	_TMR1_StartTimer	;wreg free
  1564  002006  0012               	return		;funcret
  1565  002008                     __end_of_TMR1_Initialize:
  1566                           	opt stack 0
  1567                           tblptru	equ	0xFF8
  1568                           tblptrh	equ	0xFF7
  1569                           tblptrl	equ	0xFF6
  1570                           tablat	equ	0xFF5
  1571                           intcon	equ	0xFF2
  1572                           postinc0	equ	0xFEE
  1573                           wreg	equ	0xFE8
  1574                           status	equ	0xFD8
  1575                           
  1576 ;; *************** function _TMR1_StartTimer *****************
  1577 ;; Defined at:
  1578 ;;		line 96 in file "mcc_generated_files/tmr1.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		None
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1592 ;;      Params:         0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    6
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_TMR1_Initialize
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text5
  1607  0020F2                     __ptext5:
  1608                           	opt stack 0
  1609  0020F2                     _TMR1_StartTimer:
  1610                           	opt stack 22
  1611                           
  1612                           ;tmr1.c: 99: T1CONbits.TMR1ON = 1;
  1613                           
  1614                           ;incstack = 0
  1615  0020F2  80CD               	bsf	4045,0,c	;volatile
  1616  0020F4  0012               	return		;funcret
  1617  0020F6                     __end_of_TMR1_StartTimer:
  1618                           	opt stack 0
  1619                           tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           intcon	equ	0xFF2
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           status	equ	0xFD8
  1627                           
  1628 ;; *************** function _PWM4_Initialize *****************
  1629 ;; Defined at:
  1630 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1644 ;;      Params:         0       0       0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    6
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_SYSTEM_Initialize
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text6
  1659  002098                     __ptext6:
  1660                           	opt stack 0
  1661  002098                     _PWM4_Initialize:
  1662                           	opt stack 23
  1663                           
  1664                           ;pwm4.c: 69: CCP2CON = 0x1C;
  1665                           
  1666                           ;incstack = 0
  1667  002098  0E1C               	movlw	28
  1668  00209A  6E66               	movwf	3942,c	;volatile
  1669                           
  1670                           ;pwm4.c: 72: CCPR2L = 0x3E;
  1671  00209C  0E3E               	movlw	62
  1672  00209E  6E67               	movwf	3943,c	;volatile
  1673                           
  1674                           ;pwm4.c: 75: CCPR2H = 0x00;
  1675  0020A0  0E00               	movlw	0
  1676  0020A2  6E68               	movwf	3944,c	;volatile
  1677                           
  1678                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
  1679  0020A4  0EFC               	movlw	-4
  1680  0020A6  010F               	movlb	15	; () banked
  1681  0020A8  1748               	andwf	72,f,b	;volatile
  1682                           
  1683                           ; BSR set to: 15
  1684  0020AA  0012               	return		;funcret
  1685  0020AC                     __end_of_PWM4_Initialize:
  1686                           	opt stack 0
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           intcon	equ	0xFF2
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _PIN_MANAGER_Initialize *****************
  1697 ;; Defined at:
  1698 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1712 ;;      Params:         0       0       0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    6
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_SYSTEM_Initialize
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text7
  1727  001840                     __ptext7:
  1728                           	opt stack 0
  1729  001840                     _PIN_MANAGER_Initialize:
  1730                           	opt stack 23
  1731                           
  1732                           ;pin_manager.c: 52: LATA = 0x00;
  1733                           
  1734                           ; BSR set to: 15
  1735                           ;incstack = 0
  1736  001840  0E00               	movlw	0
  1737  001842  6E89               	movwf	3977,c	;volatile
  1738                           
  1739                           ;pin_manager.c: 53: TRISA = 0xF7;
  1740  001844  0EF7               	movlw	247
  1741  001846  6E92               	movwf	3986,c	;volatile
  1742                           
  1743                           ;pin_manager.c: 54: ANSELA = 0x27;
  1744  001848  0E27               	movlw	39
  1745  00184A  010F               	movlb	15	; () banked
  1746  00184C  6F38               	movwf	56,b	;volatile
  1747                           
  1748                           ;pin_manager.c: 56: LATB = 0x01;
  1749  00184E  0E01               	movlw	1
  1750  001850  6E8A               	movwf	3978,c	;volatile
  1751                           
  1752                           ;pin_manager.c: 57: TRISB = 0xFE;
  1753  001852  0EFE               	movlw	254
  1754  001854  6E93               	movwf	3987,c	;volatile
  1755                           
  1756                           ;pin_manager.c: 58: ANSELB = 0x3E;
  1757  001856  0E3E               	movlw	62
  1758  001858  010F               	movlb	15	; () banked
  1759  00185A  6F39               	movwf	57,b	;volatile
  1760                           
  1761                           ;pin_manager.c: 59: WPUB = 0x00;
  1762  00185C  0E00               	movlw	0
  1763  00185E  6E61               	movwf	3937,c	;volatile
  1764                           
  1765                           ;pin_manager.c: 61: LATC = 0x00;
  1766  001860  0E00               	movlw	0
  1767  001862  6E8B               	movwf	3979,c	;volatile
  1768                           
  1769                           ;pin_manager.c: 62: TRISC = 0xDF;
  1770  001864  0EDF               	movlw	223
  1771  001866  6E94               	movwf	3988,c	;volatile
  1772                           
  1773                           ;pin_manager.c: 63: ANSELC = 0x1C;
  1774  001868  0E1C               	movlw	28
  1775  00186A  010F               	movlb	15	; () banked
  1776  00186C  6F3A               	movwf	58,b	;volatile
  1777                           
  1778                           ;pin_manager.c: 65: LATD = 0x00;
  1779  00186E  0E00               	movlw	0
  1780  001870  6E8C               	movwf	3980,c	;volatile
  1781                           
  1782                           ;pin_manager.c: 66: TRISD = 0x0F;
  1783  001872  0E0F               	movlw	15
  1784  001874  6E95               	movwf	3989,c	;volatile
  1785                           
  1786                           ;pin_manager.c: 67: ANSELD = 0x0F;
  1787  001876  0E0F               	movlw	15
  1788  001878  010F               	movlb	15	; () banked
  1789  00187A  6F3B               	movwf	59,b	;volatile
  1790                           
  1791                           ;pin_manager.c: 69: LATE = 0x00;
  1792  00187C  0E00               	movlw	0
  1793  00187E  6E8D               	movwf	3981,c	;volatile
  1794                           
  1795                           ;pin_manager.c: 70: TRISE = 0x07;
  1796  001880  0E07               	movlw	7
  1797  001882  6E96               	movwf	3990,c	;volatile
  1798                           
  1799                           ;pin_manager.c: 71: ANSELE = 0x07;
  1800  001884  0E07               	movlw	7
  1801  001886  010F               	movlb	15	; () banked
  1802  001888  6F3C               	movwf	60,b	;volatile
  1803                           
  1804                           ; BSR set to: 15
  1805                           ;pin_manager.c: 72: TRISCbits.RC6 = 1;
  1806  00188A  8C94               	bsf	3988,6,c	;volatile
  1807                           
  1808                           ; BSR set to: 15
  1809                           ;pin_manager.c: 73: TRISCbits.RC7 = 1;
  1810  00188C  8E94               	bsf	3988,7,c	;volatile
  1811                           
  1812                           ; BSR set to: 15
  1813                           ;pin_manager.c: 74: TRISCbits.RC5 = 1;
  1814  00188E  8A94               	bsf	3988,5,c	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817                           ;pin_manager.c: 75: TRISCbits.RC1 = 0;
  1818  001890  9294               	bcf	3988,1,c	;volatile
  1819                           
  1820                           ; BSR set to: 15
  1821                           ;pin_manager.c: 76: LATCbits.LATC5 = 1;
  1822  001892  8A8B               	bsf	3979,5,c	;volatile
  1823                           
  1824                           ; BSR set to: 15
  1825                           ;pin_manager.c: 77: LATCbits.LATC6 = 1;
  1826  001894  8C8B               	bsf	3979,6,c	;volatile
  1827                           
  1828                           ; BSR set to: 15
  1829                           ;pin_manager.c: 78: LATCbits.LATC7 = 1;
  1830  001896  8E8B               	bsf	3979,7,c	;volatile
  1831                           
  1832                           ; BSR set to: 15
  1833                           ;pin_manager.c: 79: ANSELCbits.ANSC5 =0;
  1834  001898  010F               	movlb	15	; () banked
  1835  00189A  9B3A               	bcf	58,5,b	;volatile
  1836                           
  1837                           ; BSR set to: 15
  1838                           ;pin_manager.c: 80: ANSELCbits.ANSC6 =0;
  1839  00189C  010F               	movlb	15	; () banked
  1840  00189E  9D3A               	bcf	58,6,b	;volatile
  1841                           
  1842                           ; BSR set to: 15
  1843                           ;pin_manager.c: 81: ANSELCbits.ANSC7 =0;
  1844  0018A0  010F               	movlb	15	; () banked
  1845  0018A2  9F3A               	bcf	58,7,b	;volatile
  1846                           
  1847                           ; BSR set to: 15
  1848                           ;pin_manager.c: 83: INTCON2bits.nRBPU = 0x01;
  1849  0018A4  8EF1               	bsf	intcon2,7,c	;volatile
  1850                           
  1851                           ; BSR set to: 15
  1852                           
  1853                           ; BSR set to: 15
  1854                           
  1855                           ;pin_manager.c: 85: do { TRISB4 = 0; } while(0);
  1856  0018A6  9893               	bcf	3987,4,c	;volatile
  1857                           
  1858                           ; BSR set to: 15
  1859                           
  1860                           ; BSR set to: 15
  1861                           
  1862                           ;pin_manager.c: 86: do { TRISB3 = 0; } while(0);
  1863                           
  1864                           ; BSR set to: 15
  1865  0018A8  9693               	bcf	3987,3,c	;volatile
  1866                           
  1867                           ; BSR set to: 15
  1868                           
  1869                           ; BSR set to: 15
  1870                           
  1871                           ;pin_manager.c: 87: do { TRISB5 = 0; } while(0);
  1872                           
  1873                           ; BSR set to: 15
  1874  0018AA  9A93               	bcf	3987,5,c	;volatile
  1875                           
  1876                           ; BSR set to: 15
  1877                           ;pin_manager.c: 89: TRISDbits.RD1 = 0;
  1878                           
  1879                           ; BSR set to: 15
  1880  0018AC  9295               	bcf	3989,1,c	;volatile
  1881                           
  1882                           ; BSR set to: 15
  1883                           
  1884                           ; BSR set to: 15
  1885                           
  1886                           ;pin_manager.c: 91: do { ANSB3 = 0; } while(0);
  1887  0018AE  010F               	movlb	15	; () banked
  1888  0018B0  9739               	bcf	57,3,b	;volatile
  1889                           
  1890                           ; BSR set to: 15
  1891                           
  1892                           ; BSR set to: 15
  1893                           
  1894                           ;pin_manager.c: 92: do { ANSD7 = 0; } while(0);
  1895                           
  1896                           ; BSR set to: 15
  1897  0018B2  010F               	movlb	15	; () banked
  1898  0018B4  9F3B               	bcf	59,7,b	;volatile
  1899                           
  1900                           ; BSR set to: 15
  1901                           
  1902                           ; BSR set to: 15
  1903                           
  1904                           ;pin_manager.c: 93: do { ANSB4 = 0; } while(0);
  1905                           
  1906                           ; BSR set to: 15
  1907  0018B6  010F               	movlb	15	; () banked
  1908  0018B8  9939               	bcf	57,4,b	;volatile
  1909                           
  1910                           ; BSR set to: 15
  1911                           ;pin_manager.c: 95: ANSELCbits.ANSC4 = 1;
  1912                           
  1913                           ; BSR set to: 15
  1914  0018BA  010F               	movlb	15	; () banked
  1915  0018BC  893A               	bsf	58,4,b	;volatile
  1916                           
  1917                           ; BSR set to: 15
  1918                           ;pin_manager.c: 96: ANSELDbits.ANSD3 = 1;
  1919  0018BE  010F               	movlb	15	; () banked
  1920  0018C0  873B               	bsf	59,3,b	;volatile
  1921                           
  1922                           ; BSR set to: 15
  1923                           ;pin_manager.c: 97: ANSELDbits.ANSD2 = 1;
  1924  0018C2  010F               	movlb	15	; () banked
  1925  0018C4  853B               	bsf	59,2,b	;volatile
  1926                           
  1927                           ; BSR set to: 15
  1928                           ;pin_manager.c: 98: TRISCbits.RC4 = 1;
  1929  0018C6  8894               	bsf	3988,4,c	;volatile
  1930                           
  1931                           ; BSR set to: 15
  1932                           ;pin_manager.c: 99: TRISDbits.RD3 = 1;
  1933  0018C8  8695               	bsf	3989,3,c	;volatile
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;pin_manager.c: 100: TRISDbits.RD2 = 1;
  1937  0018CA  8495               	bsf	3989,2,c	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940  0018CC  0012               	return		;funcret
  1941  0018CE                     __end_of_PIN_MANAGER_Initialize:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           intcon	equ	0xFF2
  1948                           intcon2	equ	0xFF1
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function _OSCILLATOR_Initialize *****************
  1954 ;; Defined at:
  1955 ;;		line 126 in file "mcc_generated_files/mcc.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1969 ;;      Params:         0       0       0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0
  1972 ;;      Totals:         0       0       0       0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    6
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_SYSTEM_Initialize
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text8
  1984  0020C0                     __ptext8:
  1985                           	opt stack 0
  1986  0020C0                     _OSCILLATOR_Initialize:
  1987                           	opt stack 23
  1988                           
  1989                           ;mcc.c: 128: OSCCON = 0x72;
  1990                           
  1991                           ; BSR set to: 15
  1992                           ;incstack = 0
  1993  0020C0  0E72               	movlw	114
  1994  0020C2  6ED3               	movwf	4051,c	;volatile
  1995                           
  1996                           ;mcc.c: 130: OSCCON2 = 0x04;
  1997  0020C4  0E04               	movlw	4
  1998  0020C6  6ED2               	movwf	4050,c	;volatile
  1999                           
  2000                           ;mcc.c: 132: OSCTUNE = 0x00;
  2001  0020C8  0E00               	movlw	0
  2002  0020CA  6E9B               	movwf	3995,c	;volatile
  2003  0020CC  0012               	return		;funcret
  2004  0020CE                     __end_of_OSCILLATOR_Initialize:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           intcon	equ	0xFF2
  2011                           intcon2	equ	0xFF1
  2012                           postinc0	equ	0xFEE
  2013                           wreg	equ	0xFE8
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function _INTERRUPT_Initialize *****************
  2017 ;; Defined at:
  2018 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		None
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2032 ;;      Params:         0       0       0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    6
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_SYSTEM_Initialize
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text9
  2047  0020DC                     __ptext9:
  2048                           	opt stack 0
  2049  0020DC                     _INTERRUPT_Initialize:
  2050                           	opt stack 23
  2051                           
  2052                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2053                           
  2054                           ;incstack = 0
  2055  0020DC  9ED0               	bcf	4048,7,c	;volatile
  2056                           
  2057                           ;interrupt_manager.c: 60: IPR1bits.RC1IP = 0;
  2058  0020DE  9A9F               	bcf	3999,5,c	;volatile
  2059                           
  2060                           ;interrupt_manager.c: 62: IPR1bits.TX1IP = 0;
  2061  0020E0  989F               	bcf	3999,4,c	;volatile
  2062                           
  2063                           ;interrupt_manager.c: 64: IPR1bits.ADIP = 0;
  2064  0020E2  9C9F               	bcf	3999,6,c	;volatile
  2065  0020E4  0012               	return		;funcret
  2066  0020E6                     __end_of_INTERRUPT_Initialize:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           intcon	equ	0xFF2
  2073                           intcon2	equ	0xFF1
  2074                           postinc0	equ	0xFEE
  2075                           wreg	equ	0xFE8
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _EUSART1_Initialize *****************
  2079 ;; Defined at:
  2080 ;;		line 21 in file "UART.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2094 ;;      Params:         0       0       0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    8
  2101 ;; This function calls:
  2102 ;;		_UART_buff_init
  2103 ;; This function is called by:
  2104 ;;		_SYSTEM_Initialize
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text10
  2109  001DC0                     __ptext10:
  2110                           	opt stack 0
  2111  001DC0                     _EUSART1_Initialize:
  2112                           	opt stack 21
  2113                           
  2114                           ;UART.c: 23: PIE1bits.RC1IE = 0;
  2115                           
  2116                           ;incstack = 0
  2117  001DC0  9A9D               	bcf	3997,5,c	;volatile
  2118                           
  2119                           ;UART.c: 24: PIE1bits.TX1IE = 0;
  2120  001DC2  989D               	bcf	3997,4,c	;volatile
  2121                           
  2122                           ;UART.c: 29: BAUD1CON = 0x48;
  2123  001DC4  0E48               	movlw	72
  2124  001DC6  6EB8               	movwf	4024,c	;volatile
  2125                           
  2126                           ;UART.c: 32: RC1STA = 0x98;
  2127  001DC8  0E98               	movlw	152
  2128  001DCA  6EAB               	movwf	4011,c	;volatile
  2129                           
  2130                           ;UART.c: 35: TX1STA = 0x26;
  2131  001DCC  0E26               	movlw	38
  2132  001DCE  6EAC               	movwf	4012,c	;volatile
  2133                           
  2134                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
  2135  001DD0  0E67               	movlw	103
  2136  001DD2  6EAF               	movwf	4015,c	;volatile
  2137                           
  2138                           ;UART.c: 41: SPBRGH1 = 0x00;
  2139  001DD4  0E00               	movlw	0
  2140  001DD6  6EB0               	movwf	4016,c	;volatile
  2141                           
  2142                           ;UART.c: 44: TXREG1 = 0x00;
  2143  001DD8  0E00               	movlw	0
  2144  001DDA  6EAD               	movwf	4013,c	;volatile
  2145                           
  2146                           ;UART.c: 47: RCREG1 = 0x00;
  2147  001DDC  0E00               	movlw	0
  2148  001DDE  6EAE               	movwf	4014,c	;volatile
  2149                           
  2150                           ;UART.c: 49: UART_buff_init(&input_buffer);
  2151  001DE0  0E00               	movlw	low _input_buffer
  2152  001DE2  0100               	movlb	0	; () banked
  2153  001DE4  6FD3               	movwf	UART_buff_init@_this& (0+255),b
  2154  001DE6  0E03               	movlw	high _input_buffer
  2155  001DE8  0100               	movlb	0	; () banked
  2156  001DEA  6FD4               	movwf	(UART_buff_init@_this+1)& (0+255),b
  2157  001DEC  EC17  F010         	call	_UART_buff_init	;wreg free
  2158                           
  2159                           ;UART.c: 50: UART_buff_init(&output_buffer);
  2160  001DF0  0E00               	movlw	low _output_buffer
  2161  001DF2  0100               	movlb	0	; () banked
  2162  001DF4  6FD3               	movwf	UART_buff_init@_this& (0+255),b
  2163  001DF6  0E04               	movlw	high _output_buffer
  2164  001DF8  0100               	movlb	0	; () banked
  2165  001DFA  6FD4               	movwf	(UART_buff_init@_this+1)& (0+255),b
  2166  001DFC  EC17  F010         	call	_UART_buff_init	;wreg free
  2167                           
  2168                           ;UART.c: 52: PIE1bits.RC1IE = 1;
  2169  001E00  8A9D               	bsf	3997,5,c	;volatile
  2170  001E02  0012               	return		;funcret
  2171  001E04                     __end_of_EUSART1_Initialize:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           intcon	equ	0xFF2
  2178                           intcon2	equ	0xFF1
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           status	equ	0xFD8
  2182                           
  2183 ;; *************** function _UART_buff_init *****************
  2184 ;; Defined at:
  2185 ;;		line 56 in file "UART.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  _this           2    0[BANK0 ] PTR struct UART_ring_buf
  2188 ;;		 -> output_buffer(206), input_buffer(206), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2200 ;;      Params:         0       2       0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0
  2203 ;;      Totals:         0       2       0       0       0       0       0
  2204 ;;Total ram usage:        2 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    7
  2207 ;; This function calls:
  2208 ;;		_memset
  2209 ;; This function is called by:
  2210 ;;		_EUSART1_Initialize
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text11
  2215  00202E                     __ptext11:
  2216                           	opt stack 0
  2217  00202E                     _UART_buff_init:
  2218                           	opt stack 21
  2219                           
  2220                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
  2221                           
  2222                           ;incstack = 0
  2223  00202E  C0D3  F01D         	movff	UART_buff_init@_this,memset@p1
  2224  002032  C0D4  F01E         	movff	UART_buff_init@_this+1,memset@p1+1
  2225  002036  0E00               	movlw	0
  2226  002038  6E20               	movwf	memset@c+1,c
  2227  00203A  0E00               	movlw	0
  2228  00203C  6E1F               	movwf	memset@c,c
  2229  00203E  0E00               	movlw	0
  2230  002040  6E22               	movwf	memset@n+1,c
  2231  002042  0ECE               	movlw	206
  2232  002044  6E21               	movwf	memset@n,c
  2233  002046  ECB1  F00F         	call	_memset	;wreg free
  2234  00204A  0012               	return		;funcret
  2235  00204C                     __end_of_UART_buff_init:
  2236                           	opt stack 0
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           intcon	equ	0xFF2
  2242                           intcon2	equ	0xFF1
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _memset *****************
  2248 ;; Defined at:
  2249 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  p1              2   28[COMRAM] PTR void 
  2252 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  2253 ;;  c               2   30[COMRAM] int 
  2254 ;;  n               2   32[COMRAM] unsigned int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  p               2   34[COMRAM] PTR unsigned char 
  2257 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  2   28[COMRAM] PTR void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2267 ;;      Params:         6       0       0       0       0       0       0
  2268 ;;      Locals:         2       0       0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0
  2270 ;;      Totals:         8       0       0       0       0       0       0
  2271 ;;Total ram usage:        8 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    6
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_UART_buff_init
  2278 ;;		_FastTransfer_buffer_flush
  2279 ;;		_UART_buff_flush
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text12
  2284  001F62                     __ptext12:
  2285                           	opt stack 0
  2286  001F62                     _memset:
  2287                           	opt stack 21
  2288                           
  2289                           ;incstack = 0
  2290  001F62  C01D  F023         	movff	memset@p1,memset@p
  2291  001F66  C01E  F024         	movff	memset@p1+1,memset@p+1
  2292  001F6A  D008               	goto	l4196
  2293  001F6C                     l4192:
  2294  001F6C  C023  FFD9         	movff	memset@p,fsr2l
  2295  001F70  C024  FFDA         	movff	memset@p+1,fsr2h
  2296  001F74  C01F  FFDF         	movff	memset@c,indf2
  2297  001F78  4A23               	infsnz	memset@p,f,c
  2298  001F7A  2A24               	incf	memset@p+1,f,c
  2299  001F7C                     l4196:
  2300  001F7C  0621               	decf	memset@n,f,c
  2301  001F7E  A0D8               	btfss	status,0,c
  2302  001F80  0622               	decf	memset@n+1,f,c
  2303  001F82  2821               	incf	memset@n,w,c
  2304  001F84  E1F3               	bnz	l4192
  2305  001F86  2822               	incf	memset@n+1,w,c
  2306  001F88  B4D8               	btfsc	status,2,c
  2307  001F8A  0012               	return	
  2308  001F8C  D7EF               	goto	l4192
  2309  001F8E                     __end_of_memset:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           intcon	equ	0xFF2
  2316                           intcon2	equ	0xFF1
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           indf2	equ	0xFDF
  2320                           fsr2h	equ	0xFDA
  2321                           fsr2l	equ	0xFD9
  2322                           status	equ	0xFD8
  2323                           
  2324 ;; *************** function _ADC_Initialize *****************
  2325 ;; Defined at:
  2326 ;;		line 59 in file "mcc_generated_files/adc.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2340 ;;      Params:         0       0       0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    6
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_SYSTEM_Initialize
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text13
  2355  00206A                     __ptext13:
  2356                           	opt stack 0
  2357  00206A                     _ADC_Initialize:
  2358                           	opt stack 23
  2359                           
  2360                           ;adc.c: 64: ADCON0 = 0x01;
  2361                           
  2362                           ;incstack = 0
  2363  00206A  0E01               	movlw	1
  2364  00206C  6EC2               	movwf	4034,c	;volatile
  2365                           
  2366                           ;adc.c: 67: ADCON1 = 0x80;
  2367  00206E  0E80               	movlw	128
  2368  002070  6EC1               	movwf	4033,c	;volatile
  2369                           
  2370                           ;adc.c: 70: ADCON2 = 0x12;
  2371  002072  0E12               	movlw	18
  2372  002074  6EC0               	movwf	4032,c	;volatile
  2373                           
  2374                           ;adc.c: 72: ADCON2bits.ADFM = 1;
  2375  002076  8EC0               	bsf	4032,7,c	;volatile
  2376                           
  2377                           ;adc.c: 75: ADRESL = 0x00;
  2378  002078  0E00               	movlw	0
  2379  00207A  6EC3               	movwf	4035,c	;volatile
  2380                           
  2381                           ;adc.c: 78: ADRESH = 0x00;
  2382  00207C  0E00               	movlw	0
  2383  00207E  6EC4               	movwf	4036,c	;volatile
  2384  002080  0012               	return		;funcret
  2385  002082                     __end_of_ADC_Initialize:
  2386                           	opt stack 0
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           intcon	equ	0xFF2
  2392                           intcon2	equ	0xFF1
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           indf2	equ	0xFDF
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function _PotSetpoint *****************
  2401 ;; Defined at:
  2402 ;;		line 21 in file "DigiPot.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  new_point       2   33[COMRAM] int 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  new_pos         2   10[BANK0 ] int 
  2407 ;;  x               2    8[BANK0 ] int 
  2408 ;;  set_point       2    6[BANK0 ] int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         2       0       0       0       0       0       0
  2419 ;;      Locals:         0       6       0       0       0       0       0
  2420 ;;      Temps:          0       2       0       0       0       0       0
  2421 ;;      Totals:         2       8       0       0       0       0       0
  2422 ;;Total ram usage:       10 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    7
  2425 ;; This function calls:
  2426 ;;		_Delay
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;;		_CoolingStart
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text14
  2434  0013A8                     __ptext14:
  2435                           	opt stack 0
  2436  0013A8                     _PotSetpoint:
  2437                           	opt stack 23
  2438                           
  2439                           ;DigiPot.c: 22: int set_point;
  2440                           ;DigiPot.c: 31: int new_pos = new_point;
  2441                           
  2442                           ;incstack = 0
  2443  0013A8  C022  F0DD         	movff	PotSetpoint@new_point,PotSetpoint@new_pos
  2444  0013AC  C023  F0DE         	movff	PotSetpoint@new_point+1,PotSetpoint@new_pos+1
  2445                           
  2446                           ;DigiPot.c: 35: LATB5 = 0;
  2447  0013B0  9A8A               	bcf	3978,5,c	;volatile
  2448                           
  2449                           ;DigiPot.c: 38: if (new_pos > prev_pos) {
  2450  0013B2  0100               	movlb	0	; () banked
  2451  0013B4  51DD               	movf	PotSetpoint@new_pos& (0+255),w,b
  2452  0013B6  5C27               	subwf	_prev_pos,w,c
  2453  0013B8  5028               	movf	_prev_pos+1,w,c
  2454  0013BA  0A80               	xorlw	128
  2455  0013BC  0100               	movlb	0	; () banked
  2456  0013BE  6FD7               	movwf	??_PotSetpoint& (0+255),b
  2457  0013C0  0100               	movlb	0	; () banked
  2458  0013C2  51DE               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  2459  0013C4  0A80               	xorlw	128
  2460  0013C6  0100               	movlb	0	; () banked
  2461  0013C8  59D7               	subwfb	??_PotSetpoint& (0+255),w,b
  2462  0013CA  B0D8               	btfsc	status,0,c
  2463  0013CC  D016               	goto	l921
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;DigiPot.c: 40: LATB3 = 1;
  2467  0013CE  868A               	bsf	3978,3,c	;volatile
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;DigiPot.c: 41: set_point = new_pos - prev_pos;
  2471  0013D0  C027  F0D7         	movff	_prev_pos,??_PotSetpoint
  2472  0013D4  C028  F0D8         	movff	_prev_pos+1,??_PotSetpoint+1
  2473  0013D8  0100               	movlb	0	; () banked
  2474  0013DA  1FD7               	comf	??_PotSetpoint& (0+255),f,b
  2475  0013DC  1FD8               	comf	(??_PotSetpoint+1)& (0+255),f,b
  2476  0013DE  4BD7               	infsnz	??_PotSetpoint& (0+255),f,b
  2477  0013E0  2BD8               	incf	(??_PotSetpoint+1)& (0+255),f,b
  2478  0013E2  0100               	movlb	0	; () banked
  2479  0013E4  51DD               	movf	PotSetpoint@new_pos& (0+255),w,b
  2480  0013E6  0100               	movlb	0	; () banked
  2481  0013E8  25D7               	addwf	??_PotSetpoint& (0+255),w,b
  2482  0013EA  0100               	movlb	0	; () banked
  2483  0013EC  6FD9               	movwf	PotSetpoint@set_point& (0+255),b
  2484  0013EE  0100               	movlb	0	; () banked
  2485  0013F0  51DE               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  2486  0013F2  0100               	movlb	0	; () banked
  2487  0013F4  21D8               	addwfc	(??_PotSetpoint+1)& (0+255),w,b
  2488  0013F6  0100               	movlb	0	; () banked
  2489  0013F8  6FDA               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  2490  0013FA                     l921:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;DigiPot.c: 42: }
  2494                           ;DigiPot.c: 43: if (new_pos < prev_pos) {
  2495  0013FA  5027               	movf	_prev_pos,w,c
  2496  0013FC  0100               	movlb	0	; () banked
  2497  0013FE  5DDD               	subwf	PotSetpoint@new_pos& (0+255),w,b
  2498  001400  0100               	movlb	0	; () banked
  2499  001402  51DE               	movf	(PotSetpoint@new_pos+1)& (0+255),w,b
  2500  001404  0A80               	xorlw	128
  2501  001406  0100               	movlb	0	; () banked
  2502  001408  6FD7               	movwf	??_PotSetpoint& (0+255),b
  2503  00140A  5028               	movf	_prev_pos+1,w,c
  2504  00140C  0A80               	xorlw	128
  2505  00140E  0100               	movlb	0	; () banked
  2506  001410  59D7               	subwfb	??_PotSetpoint& (0+255),w,b
  2507  001412  B0D8               	btfsc	status,0,c
  2508  001414  D014               	goto	l4640
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;DigiPot.c: 45: LATB3 = 0;
  2512  001416  968A               	bcf	3978,3,c	;volatile
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;DigiPot.c: 46: set_point = prev_pos - new_pos;
  2516  001418  C0DD  F0D7         	movff	PotSetpoint@new_pos,??_PotSetpoint
  2517  00141C  C0DE  F0D8         	movff	PotSetpoint@new_pos+1,??_PotSetpoint+1
  2518  001420  0100               	movlb	0	; () banked
  2519  001422  1FD7               	comf	??_PotSetpoint& (0+255),f,b
  2520  001424  1FD8               	comf	(??_PotSetpoint+1)& (0+255),f,b
  2521  001426  4BD7               	infsnz	??_PotSetpoint& (0+255),f,b
  2522  001428  2BD8               	incf	(??_PotSetpoint+1)& (0+255),f,b
  2523  00142A  5027               	movf	_prev_pos,w,c
  2524  00142C  0100               	movlb	0	; () banked
  2525  00142E  25D7               	addwf	??_PotSetpoint& (0+255),w,b
  2526  001430  0100               	movlb	0	; () banked
  2527  001432  6FD9               	movwf	PotSetpoint@set_point& (0+255),b
  2528  001434  5028               	movf	_prev_pos+1,w,c
  2529  001436  0100               	movlb	0	; () banked
  2530  001438  21D8               	addwfc	(??_PotSetpoint+1)& (0+255),w,b
  2531  00143A  0100               	movlb	0	; () banked
  2532  00143C  6FDA               	movwf	(PotSetpoint@set_point+1)& (0+255),b
  2533  00143E                     l4640:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;DigiPot.c: 47: }
  2537                           ;DigiPot.c: 48: Delay(1);
  2538  00143E  0E01               	movlw	1
  2539  001440  6E1D               	movwf	Delay@wait,c
  2540  001442  0E00               	movlw	0
  2541  001444  6E1E               	movwf	Delay@wait+1,c
  2542  001446  0E00               	movlw	0
  2543  001448  6E1F               	movwf	Delay@wait+2,c
  2544  00144A  0E00               	movlw	0
  2545  00144C  6E20               	movwf	Delay@wait+3,c
  2546  00144E  EC16  F00E         	call	_Delay	;wreg free
  2547                           
  2548                           ;DigiPot.c: 50: int x;
  2549                           ;DigiPot.c: 52: for (x = 0; x < set_point; x++) {
  2550  001452  0E00               	movlw	0
  2551  001454  0100               	movlb	0	; () banked
  2552  001456  6FDC               	movwf	(PotSetpoint@x+1)& (0+255),b
  2553  001458  0E00               	movlw	0
  2554  00145A  6FDB               	movwf	PotSetpoint@x& (0+255),b
  2555  00145C  D019               	goto	l4650
  2556  00145E                     l924:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;DigiPot.c: 53: LATB4 = 1;
  2560  00145E  888A               	bsf	3978,4,c	;volatile
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;DigiPot.c: 54: Delay(1);
  2564  001460  0E01               	movlw	1
  2565  001462  6E1D               	movwf	Delay@wait,c
  2566  001464  0E00               	movlw	0
  2567  001466  6E1E               	movwf	Delay@wait+1,c
  2568  001468  0E00               	movlw	0
  2569  00146A  6E1F               	movwf	Delay@wait+2,c
  2570  00146C  0E00               	movlw	0
  2571  00146E  6E20               	movwf	Delay@wait+3,c
  2572  001470  EC16  F00E         	call	_Delay	;wreg free
  2573                           
  2574                           ;DigiPot.c: 55: LATB4 = 0;
  2575  001474  988A               	bcf	3978,4,c	;volatile
  2576                           
  2577                           ;DigiPot.c: 56: Delay(1);
  2578  001476  0E01               	movlw	1
  2579  001478  6E1D               	movwf	Delay@wait,c
  2580  00147A  0E00               	movlw	0
  2581  00147C  6E1E               	movwf	Delay@wait+1,c
  2582  00147E  0E00               	movlw	0
  2583  001480  6E1F               	movwf	Delay@wait+2,c
  2584  001482  0E00               	movlw	0
  2585  001484  6E20               	movwf	Delay@wait+3,c
  2586  001486  EC16  F00E         	call	_Delay	;wreg free
  2587  00148A  0100               	movlb	0	; () banked
  2588  00148C  4BDB               	infsnz	PotSetpoint@x& (0+255),f,b
  2589  00148E  2BDC               	incf	(PotSetpoint@x+1)& (0+255),f,b
  2590  001490                     l4650:
  2591                           
  2592                           ; BSR set to: 0
  2593  001490  0100               	movlb	0	; () banked
  2594  001492  51D9               	movf	PotSetpoint@set_point& (0+255),w,b
  2595  001494  0100               	movlb	0	; () banked
  2596  001496  5DDB               	subwf	PotSetpoint@x& (0+255),w,b
  2597  001498  0100               	movlb	0	; () banked
  2598  00149A  51DC               	movf	(PotSetpoint@x+1)& (0+255),w,b
  2599  00149C  0A80               	xorlw	128
  2600  00149E  0100               	movlb	0	; () banked
  2601  0014A0  6FD7               	movwf	??_PotSetpoint& (0+255),b
  2602  0014A2  0100               	movlb	0	; () banked
  2603  0014A4  51DA               	movf	(PotSetpoint@set_point+1)& (0+255),w,b
  2604  0014A6  0A80               	xorlw	128
  2605  0014A8  0100               	movlb	0	; () banked
  2606  0014AA  59D7               	subwfb	??_PotSetpoint& (0+255),w,b
  2607  0014AC  A0D8               	btfss	status,0,c
  2608  0014AE  D7D7               	goto	l924
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;DigiPot.c: 57: }
  2612                           ;DigiPot.c: 59: LATB5 = 1;
  2613  0014B0  8A8A               	bsf	3978,5,c	;volatile
  2614                           
  2615                           ;DigiPot.c: 60: prev_pos = new_pos;
  2616  0014B2  C0DD  F027         	movff	PotSetpoint@new_pos,_prev_pos
  2617  0014B6  C0DE  F028         	movff	PotSetpoint@new_pos+1,_prev_pos+1
  2618                           
  2619                           ; BSR set to: 0
  2620  0014BA  0012               	return		;funcret
  2621  0014BC                     __end_of_PotSetpoint:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           intcon	equ	0xFF2
  2628                           intcon2	equ	0xFF1
  2629                           postinc0	equ	0xFEE
  2630                           wreg	equ	0xFE8
  2631                           indf2	equ	0xFDF
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _PWM4_LoadDutyValue *****************
  2637 ;; Defined at:
  2638 ;;		line 81 in file "mcc_generated_files/pwm4.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  dutyValue       2   28[COMRAM] unsigned int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2652 ;;      Params:         2       0       0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0
  2654 ;;      Temps:          2       0       0       0       0       0       0
  2655 ;;      Totals:         4       0       0       0       0       0       0
  2656 ;;Total ram usage:        4 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    6
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;;		_CoolingStart
  2664 ;;		_CoolingStop
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text15
  2669  001ED4                     __ptext15:
  2670                           	opt stack 0
  2671  001ED4                     _PWM4_LoadDutyValue:
  2672                           	opt stack 24
  2673                           
  2674                           ;pwm4.c: 84: CCPR2L = ((dutyValue & 0x03FC)>>2);
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;incstack = 0
  2678  001ED4  C01D  F01F         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  2679  001ED8  C01E  F020         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  2680  001EDC  90D8               	bcf	status,0,c
  2681  001EDE  3220               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  2682  001EE0  321F               	rrcf	??_PWM4_LoadDutyValue,f,c
  2683  001EE2  90D8               	bcf	status,0,c
  2684  001EE4  3220               	rrcf	??_PWM4_LoadDutyValue+1,f,c
  2685  001EE6  321F               	rrcf	??_PWM4_LoadDutyValue,f,c
  2686  001EE8  501F               	movf	??_PWM4_LoadDutyValue,w,c
  2687  001EEA  6E67               	movwf	3943,c	;volatile
  2688                           
  2689                           ;pwm4.c: 87: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  2690  001EEC  C01D  F01F         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  2691  001EF0  0E03               	movlw	3
  2692  001EF2  161F               	andwf	??_PWM4_LoadDutyValue,f,c
  2693  001EF4  3A1F               	swapf	??_PWM4_LoadDutyValue,f,c
  2694  001EF6  0EF0               	movlw	240
  2695  001EF8  161F               	andwf	??_PWM4_LoadDutyValue,f,c
  2696  001EFA  5066               	movf	3942,w,c	;volatile
  2697  001EFC  0BCF               	andlw	207
  2698  001EFE  101F               	iorwf	??_PWM4_LoadDutyValue,w,c
  2699  001F00  6E66               	movwf	3942,c	;volatile
  2700  001F02  0012               	return		;funcret
  2701  001F04                     __end_of_PWM4_LoadDutyValue:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           intcon	equ	0xFF2
  2708                           intcon2	equ	0xFF1
  2709                           postinc0	equ	0xFEE
  2710                           wreg	equ	0xFE8
  2711                           indf2	equ	0xFDF
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _PDUStartup *****************
  2717 ;; Defined at:
  2718 ;;		line 18 in file "PDU.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2732 ;;      Params:         0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:   10
  2739 ;; This function calls:
  2740 ;;		_ComputeStorageData
  2741 ;;		_EnableSlavePower
  2742 ;;		_StartUp595
  2743 ;;		_Update
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text16
  2750  001C82                     __ptext16:
  2751                           	opt stack 0
  2752  001C82                     _PDUStartup:
  2753                           	opt stack 20
  2754                           
  2755                           ;PDU.c: 21: StartUp595();
  2756                           
  2757                           ;incstack = 0
  2758  001C82  EC8A  F00D         	call	_StartUp595	;wreg free
  2759                           
  2760                           ;PDU.c: 23: EnableSlavePower(SAS, OFF);
  2761  001C86  0E00               	movlw	0
  2762  001C88  6E24               	movwf	EnableSlavePower@onof+1,c
  2763  001C8A  0E00               	movlw	0
  2764  001C8C  6E23               	movwf	EnableSlavePower@onof,c
  2765  001C8E  0E03               	movlw	3
  2766  001C90  EC5E  F00A         	call	_EnableSlavePower
  2767                           
  2768                           ;PDU.c: 24: EnableSlavePower(DDS, OFF);
  2769  001C94  0E00               	movlw	0
  2770  001C96  6E24               	movwf	EnableSlavePower@onof+1,c
  2771  001C98  0E00               	movlw	0
  2772  001C9A  6E23               	movwf	EnableSlavePower@onof,c
  2773  001C9C  0E01               	movlw	1
  2774  001C9E  EC5E  F00A         	call	_EnableSlavePower
  2775                           
  2776                           ;PDU.c: 25: EnableSlavePower(MCS, OFF);
  2777  001CA2  0E00               	movlw	0
  2778  001CA4  6E24               	movwf	EnableSlavePower@onof+1,c
  2779  001CA6  0E00               	movlw	0
  2780  001CA8  6E23               	movwf	EnableSlavePower@onof,c
  2781  001CAA  0E02               	movlw	2
  2782  001CAC  EC5E  F00A         	call	_EnableSlavePower
  2783                           
  2784                           ;PDU.c: 26: EnableSlavePower(BMM, OFF);
  2785  001CB0  0E00               	movlw	0
  2786  001CB2  6E24               	movwf	EnableSlavePower@onof+1,c
  2787  001CB4  0E00               	movlw	0
  2788  001CB6  6E23               	movwf	EnableSlavePower@onof,c
  2789  001CB8  0E04               	movlw	4
  2790  001CBA  EC5E  F00A         	call	_EnableSlavePower
  2791                           
  2792                           ;PDU.c: 27: EnableSlavePower(TSS, OFF);
  2793  001CBE  0E00               	movlw	0
  2794  001CC0  6E24               	movwf	EnableSlavePower@onof+1,c
  2795  001CC2  0E00               	movlw	0
  2796  001CC4  6E23               	movwf	EnableSlavePower@onof,c
  2797  001CC6  0E05               	movlw	5
  2798  001CC8  EC5E  F00A         	call	_EnableSlavePower
  2799                           
  2800                           ;PDU.c: 28: Update();
  2801  001CCC  EC73  F010         	call	_Update	;wreg free
  2802                           
  2803                           ;PDU.c: 30: ComputeStorageData();
  2804  001CD0  ECD2  F00A         	call	_ComputeStorageData	;wreg free
  2805  001CD4  0012               	return		;funcret
  2806  001CD6                     __end_of_PDUStartup:
  2807                           	opt stack 0
  2808                           tblptru	equ	0xFF8
  2809                           tblptrh	equ	0xFF7
  2810                           tblptrl	equ	0xFF6
  2811                           tablat	equ	0xFF5
  2812                           intcon	equ	0xFF2
  2813                           intcon2	equ	0xFF1
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           indf2	equ	0xFDF
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function _Update *****************
  2822 ;; Defined at:
  2823 ;;		line 215 in file "PDU.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2837 ;;      Params:         0       0       0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    8
  2844 ;; This function calls:
  2845 ;;		_writeRegisters
  2846 ;; This function is called by:
  2847 ;;		_PDUStartup
  2848 ;;		_main
  2849 ;;		_processPowerRequest
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text17
  2854  0020E6                     __ptext17:
  2855                           	opt stack 0
  2856  0020E6                     _Update:
  2857                           	opt stack 22
  2858                           
  2859                           ;PDU.c: 216: writeRegisters();
  2860                           
  2861                           ;incstack = 0
  2862  0020E6  EC8E  F00B         	call	_writeRegisters	;wreg free
  2863  0020EA  0012               	return		;funcret
  2864  0020EC                     __end_of_Update:
  2865                           	opt stack 0
  2866                           tblptru	equ	0xFF8
  2867                           tblptrh	equ	0xFF7
  2868                           tblptrl	equ	0xFF6
  2869                           tablat	equ	0xFF5
  2870                           intcon	equ	0xFF2
  2871                           intcon2	equ	0xFF1
  2872                           postinc0	equ	0xFEE
  2873                           wreg	equ	0xFE8
  2874                           indf2	equ	0xFDF
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _StartUp595 *****************
  2880 ;; Defined at:
  2881 ;;		line 10 in file "Shift595.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         0       0       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    9
  2902 ;; This function calls:
  2903 ;;		_Clear595
  2904 ;;		_Delay
  2905 ;; This function is called by:
  2906 ;;		_PDUStartup
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text18
  2911  001B14                     __ptext18:
  2912                           	opt stack 0
  2913  001B14                     _StartUp595:
  2914                           	opt stack 20
  2915                           
  2916                           ;incstack = 0
  2917                           ;Shift595.c: 12: do { LATD5 = 1; } while(0);
  2918  001B14  8A8C               	bsf	3980,5,c	;volatile
  2919                           
  2920                           ;Shift595.c: 13: do { LATB0 = 1; } while(0);
  2921  001B16  808A               	bsf	3978,0,c	;volatile
  2922                           
  2923                           ;Shift595.c: 15: Delay(2);
  2924  001B18  0E02               	movlw	2
  2925  001B1A  6E1D               	movwf	Delay@wait,c
  2926  001B1C  0E00               	movlw	0
  2927  001B1E  6E1E               	movwf	Delay@wait+1,c
  2928  001B20  0E00               	movlw	0
  2929  001B22  6E1F               	movwf	Delay@wait+2,c
  2930  001B24  0E00               	movlw	0
  2931  001B26  6E20               	movwf	Delay@wait+3,c
  2932  001B28  EC16  F00E         	call	_Delay	;wreg free
  2933                           
  2934                           ;Shift595.c: 16: do { LATD5 = 0; } while(0);
  2935  001B2C  9A8C               	bcf	3980,5,c	;volatile
  2936                           
  2937                           ;Shift595.c: 17: Delay(2);
  2938  001B2E  0E02               	movlw	2
  2939  001B30  6E1D               	movwf	Delay@wait,c
  2940  001B32  0E00               	movlw	0
  2941  001B34  6E1E               	movwf	Delay@wait+1,c
  2942  001B36  0E00               	movlw	0
  2943  001B38  6E1F               	movwf	Delay@wait+2,c
  2944  001B3A  0E00               	movlw	0
  2945  001B3C  6E20               	movwf	Delay@wait+3,c
  2946  001B3E  EC16  F00E         	call	_Delay	;wreg free
  2947                           
  2948                           ;Shift595.c: 18: do { LATB0 = 0; } while(0);
  2949  001B42  908A               	bcf	3978,0,c	;volatile
  2950                           
  2951                           ;Shift595.c: 19: Delay(2);
  2952  001B44  0E02               	movlw	2
  2953  001B46  6E1D               	movwf	Delay@wait,c
  2954  001B48  0E00               	movlw	0
  2955  001B4A  6E1E               	movwf	Delay@wait+1,c
  2956  001B4C  0E00               	movlw	0
  2957  001B4E  6E1F               	movwf	Delay@wait+2,c
  2958  001B50  0E00               	movlw	0
  2959  001B52  6E20               	movwf	Delay@wait+3,c
  2960  001B54  EC16  F00E         	call	_Delay	;wreg free
  2961                           
  2962                           ;Shift595.c: 20: do { LATD5 = 1; } while(0);
  2963  001B58  8A8C               	bsf	3980,5,c	;volatile
  2964                           
  2965                           ;Shift595.c: 21: Delay(2);
  2966  001B5A  0E02               	movlw	2
  2967  001B5C  6E1D               	movwf	Delay@wait,c
  2968  001B5E  0E00               	movlw	0
  2969  001B60  6E1E               	movwf	Delay@wait+1,c
  2970  001B62  0E00               	movlw	0
  2971  001B64  6E1F               	movwf	Delay@wait+2,c
  2972  001B66  0E00               	movlw	0
  2973  001B68  6E20               	movwf	Delay@wait+3,c
  2974  001B6A  EC16  F00E         	call	_Delay	;wreg free
  2975                           
  2976                           ;Shift595.c: 22: do { LATB0 = 1; } while(0);
  2977  001B6E  808A               	bsf	3978,0,c	;volatile
  2978                           
  2979                           ;Shift595.c: 24: Clear595();
  2980  001B70  EC1D  F00F         	call	_Clear595	;wreg free
  2981  001B74  0012               	return		;funcret
  2982  001B76                     __end_of_StartUp595:
  2983                           	opt stack 0
  2984                           tblptru	equ	0xFF8
  2985                           tblptrh	equ	0xFF7
  2986                           tblptrl	equ	0xFF6
  2987                           tablat	equ	0xFF5
  2988                           intcon	equ	0xFF2
  2989                           intcon2	equ	0xFF1
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           indf2	equ	0xFDF
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _Clear595 *****************
  2998 ;; Defined at:
  2999 ;;		line 39 in file "Shift595.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  i               2   33[COMRAM] int 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3013 ;;      Params:         0       0       0       0       0       0       0
  3014 ;;      Locals:         2       0       0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0
  3016 ;;      Totals:         2       0       0       0       0       0       0
  3017 ;;Total ram usage:        2 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    8
  3020 ;; This function calls:
  3021 ;;		_writeRegisters
  3022 ;; This function is called by:
  3023 ;;		_StartUp595
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text19
  3028  001E3A                     __ptext19:
  3029                           	opt stack 0
  3030  001E3A                     _Clear595:
  3031                           	opt stack 20
  3032                           
  3033                           ;Shift595.c: 40: for (int i = 3 * 8 - 1; i >= 0; i--) {
  3034                           
  3035                           ;incstack = 0
  3036  001E3A  0E00               	movlw	0
  3037  001E3C  6E23               	movwf	Clear595@i+1,c
  3038  001E3E  0E17               	movlw	23
  3039  001E40  6E22               	movwf	Clear595@i,c
  3040  001E42                     l4252:
  3041  001E42  BE23               	btfsc	Clear595@i+1,7,c
  3042  001E44  D011               	goto	l4262
  3043                           
  3044                           ;Shift595.c: 41: registers[i] = 0;
  3045  001E46  90D8               	bcf	status,0,c
  3046  001E48  3422               	rlcf	Clear595@i,w,c
  3047  001E4A  6ED9               	movwf	fsr2l,c
  3048  001E4C  3423               	rlcf	Clear595@i+1,w,c
  3049  001E4E  6EDA               	movwf	fsr2h,c
  3050  001E50  0E00               	movlw	low _registers
  3051  001E52  26D9               	addwf	fsr2l,f,c
  3052  001E54  0E01               	movlw	high _registers
  3053  001E56  22DA               	addwfc	fsr2h,f,c
  3054  001E58  0E00               	movlw	0
  3055  001E5A  6EDE               	movwf	postinc2,c
  3056  001E5C  0E00               	movlw	0
  3057  001E5E  6EDD               	movwf	postdec2,c
  3058  001E60  0622               	decf	Clear595@i,f,c
  3059  001E62  A0D8               	btfss	status,0,c
  3060  001E64  0623               	decf	Clear595@i+1,f,c
  3061  001E66  D7ED               	goto	l4252
  3062  001E68                     l4262:
  3063                           
  3064                           ;Shift595.c: 42: }
  3065                           ;Shift595.c: 44: writeRegisters();
  3066  001E68  EC8E  F00B         	call	_writeRegisters	;wreg free
  3067  001E6C  0012               	return		;funcret
  3068  001E6E                     __end_of_Clear595:
  3069                           	opt stack 0
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           intcon	equ	0xFF2
  3075                           intcon2	equ	0xFF1
  3076                           postinc0	equ	0xFEE
  3077                           wreg	equ	0xFE8
  3078                           indf2	equ	0xFDF
  3079                           postinc2	equ	0xFDE
  3080                           postdec2	equ	0xFDD
  3081                           fsr2h	equ	0xFDA
  3082                           fsr2l	equ	0xFD9
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function _writeRegisters *****************
  3086 ;; Defined at:
  3087 ;;		line 50 in file "Shift595.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  i               2    6[BANK0 ] int 
  3092 ;;  val             2    4[BANK0 ] int 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3102 ;;      Params:         0       0       0       0       0       0       0
  3103 ;;      Locals:         0       4       0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0
  3105 ;;      Totals:         0       4       0       0       0       0       0
  3106 ;;Total ram usage:        4 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    7
  3109 ;; This function calls:
  3110 ;;		_Delay
  3111 ;; This function is called by:
  3112 ;;		_Update
  3113 ;;		_Clear595
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text20
  3118  00171C                     __ptext20:
  3119                           	opt stack 0
  3120  00171C                     _writeRegisters:
  3121                           	opt stack 22
  3122                           
  3123                           ;Shift595.c: 51: int val = 0;
  3124                           
  3125                           ;incstack = 0
  3126  00171C  0E00               	movlw	0
  3127  00171E  0100               	movlb	0	; () banked
  3128  001720  6FD8               	movwf	(writeRegisters@val+1)& (0+255),b
  3129  001722  0E00               	movlw	0
  3130  001724  6FD7               	movwf	writeRegisters@val& (0+255),b
  3131                           
  3132                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  3133  001726  0E00               	movlw	0
  3134  001728  0100               	movlb	0	; () banked
  3135  00172A  6FDA               	movwf	(writeRegisters@i+1)& (0+255),b
  3136  00172C  0E17               	movlw	23
  3137  00172E  6FD9               	movwf	writeRegisters@i& (0+255),b
  3138  001730                     l4200:
  3139                           
  3140                           ; BSR set to: 0
  3141  001730  0100               	movlb	0	; () banked
  3142  001732  BFDA               	btfsc	(writeRegisters@i+1)& (0+255),7,b
  3143  001734  D024               	goto	l750
  3144                           
  3145                           ; BSR set to: 0
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  3149                           
  3150                           ; BSR set to: 0
  3151  001736  9E8C               	bcf	3980,7,c	;volatile
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;Shift595.c: 55: val = registers[i];
  3155                           
  3156                           ; BSR set to: 0
  3157  001738  90D8               	bcf	status,0,c
  3158  00173A  0100               	movlb	0	; () banked
  3159  00173C  35D9               	rlcf	writeRegisters@i& (0+255),w,b
  3160  00173E  6ED9               	movwf	fsr2l,c
  3161  001740  0100               	movlb	0	; () banked
  3162  001742  35DA               	rlcf	(writeRegisters@i+1)& (0+255),w,b
  3163  001744  6EDA               	movwf	fsr2h,c
  3164  001746  0E00               	movlw	low _registers
  3165  001748  26D9               	addwf	fsr2l,f,c
  3166  00174A  0E01               	movlw	high _registers
  3167  00174C  22DA               	addwfc	fsr2h,f,c
  3168  00174E  CFDE F0D7          	movff	postinc2,writeRegisters@val
  3169  001752  CFDD F0D8          	movff	postdec2,writeRegisters@val+1
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;Shift595.c: 56: if (val == 1) {
  3173  001756  0100               	movlb	0	; () banked
  3174  001758  05D7               	decf	writeRegisters@val& (0+255),w,b
  3175  00175A  0100               	movlb	0	; () banked
  3176  00175C  11D8               	iorwf	(writeRegisters@val+1)& (0+255),w,b
  3177  00175E  A4D8               	btfss	status,2,c
  3178  001760  D002               	goto	l4208
  3179                           
  3180                           ; BSR set to: 0
  3181                           
  3182                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  3183  001762  888C               	bsf	3980,4,c	;volatile
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;Shift595.c: 58: } else if (val == 0) {
  3187  001764  D006               	goto	l748
  3188  001766                     l4208:
  3189                           
  3190                           ; BSR set to: 0
  3191  001766  0100               	movlb	0	; () banked
  3192  001768  51D7               	movf	writeRegisters@val& (0+255),w,b
  3193  00176A  0100               	movlb	0	; () banked
  3194  00176C  11D8               	iorwf	(writeRegisters@val+1)& (0+255),w,b
  3195  00176E  B4D8               	btfsc	status,2,c
  3196                           
  3197                           ; BSR set to: 0
  3198                           
  3199                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  3200  001770  988C               	bcf	3980,4,c	;volatile
  3201  001772                     l748:
  3202                           
  3203                           ; BSR set to: 0
  3204  001772  8E8C               	bsf	3980,7,c	;volatile
  3205                           
  3206                           ; BSR set to: 0
  3207                           
  3208                           ; BSR set to: 0
  3209  001774  0100               	movlb	0	; () banked
  3210  001776  07D9               	decf	writeRegisters@i& (0+255),f,b
  3211  001778  A0D8               	btfss	status,0,c
  3212  00177A  07DA               	decf	(writeRegisters@i+1)& (0+255),f,b
  3213  00177C  D7D9               	goto	l4200
  3214  00177E                     l750:
  3215                           
  3216                           ; BSR set to: 0
  3217  00177E  9E8C               	bcf	3980,7,c	;volatile
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;Shift595.c: 67: Delay(1);
  3221                           
  3222                           ; BSR set to: 0
  3223  001780  0E01               	movlw	1
  3224  001782  6E1D               	movwf	Delay@wait,c
  3225  001784  0E00               	movlw	0
  3226  001786  6E1E               	movwf	Delay@wait+1,c
  3227  001788  0E00               	movlw	0
  3228  00178A  6E1F               	movwf	Delay@wait+2,c
  3229  00178C  0E00               	movlw	0
  3230  00178E  6E20               	movwf	Delay@wait+3,c
  3231  001790  EC16  F00E         	call	_Delay	;wreg free
  3232                           
  3233                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  3234  001794  8C8C               	bsf	3980,6,c	;volatile
  3235                           
  3236                           ;Shift595.c: 69: Delay(1);
  3237  001796  0E01               	movlw	1
  3238  001798  6E1D               	movwf	Delay@wait,c
  3239  00179A  0E00               	movlw	0
  3240  00179C  6E1E               	movwf	Delay@wait+1,c
  3241  00179E  0E00               	movlw	0
  3242  0017A0  6E1F               	movwf	Delay@wait+2,c
  3243  0017A2  0E00               	movlw	0
  3244  0017A4  6E20               	movwf	Delay@wait+3,c
  3245  0017A6  EC16  F00E         	call	_Delay	;wreg free
  3246                           
  3247                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  3248  0017AA  9C8C               	bcf	3980,6,c	;volatile
  3249  0017AC  0012               	return	
  3250  0017AE                     __end_of_writeRegisters:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           intcon	equ	0xFF2
  3257                           intcon2	equ	0xFF1
  3258                           postinc0	equ	0xFEE
  3259                           wreg	equ	0xFE8
  3260                           indf2	equ	0xFDF
  3261                           postinc2	equ	0xFDE
  3262                           postdec2	equ	0xFDD
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _Delay *****************
  3268 ;; Defined at:
  3269 ;;		line 9 in file "Functions.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  wait            4   28[COMRAM] long 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  i               4    0[BANK0 ] long 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3283 ;;      Params:         4       0       0       0       0       0       0
  3284 ;;      Locals:         0       4       0       0       0       0       0
  3285 ;;      Temps:          1       0       0       0       0       0       0
  3286 ;;      Totals:         5       4       0       0       0       0       0
  3287 ;;Total ram usage:        9 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    6
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_StartUp595
  3294 ;;		_writeRegisters
  3295 ;;		_main
  3296 ;;		_PotSetpoint
  3297 ;;		_respondECU
  3298 ;;		_PotClear
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text21
  3303  001C2C                     __ptext21:
  3304                           	opt stack 0
  3305  001C2C                     _Delay:
  3306                           	opt stack 22
  3307                           
  3308                           ;Functions.c: 10: long int i = 0;
  3309                           
  3310                           ;incstack = 0
  3311  001C2C  0E00               	movlw	0
  3312  001C2E  0100               	movlb	0	; () banked
  3313  001C30  6FD3               	movwf	Delay@i& (0+255),b
  3314  001C32  0E00               	movlw	0
  3315  001C34  6FD4               	movwf	(Delay@i+1)& (0+255),b
  3316  001C36  0E00               	movlw	0
  3317  001C38  6FD5               	movwf	(Delay@i+2)& (0+255),b
  3318  001C3A  0E00               	movlw	0
  3319  001C3C  6FD6               	movwf	(Delay@i+3)& (0+255),b
  3320                           
  3321                           ;Functions.c: 11: for (; wait > i; i++) {
  3322  001C3E  D00E               	goto	l4162
  3323  001C40                     l4158:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;Functions.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
  3327  001C40  0E03               	movlw	3
  3328  001C42  6E21               	movwf	??_Delay& (0+255),c
  3329  001C44  0E98               	movlw	152
  3330  001C46                     u4657:
  3331  001C46  2EE8               	decfsz	wreg,f,c
  3332  001C48  D7FE               	goto	u4657
  3333  001C4A  2E21               	decfsz	??_Delay& (0+255),f,c
  3334  001C4C  D7FC               	goto	u4657
  3335  001C4E  0E01               	movlw	1
  3336  001C50  0100               	movlb	0	; () banked
  3337  001C52  27D3               	addwf	Delay@i& (0+255),f,b
  3338  001C54  0E00               	movlw	0
  3339  001C56  23D4               	addwfc	(Delay@i+1)& (0+255),f,b
  3340  001C58  23D5               	addwfc	(Delay@i+2)& (0+255),f,b
  3341  001C5A  23D6               	addwfc	(Delay@i+3)& (0+255),f,b
  3342  001C5C                     l4162:
  3343                           
  3344                           ; BSR set to: 0
  3345  001C5C  501D               	movf	Delay@wait,w,c
  3346  001C5E  0100               	movlb	0	; () banked
  3347  001C60  5DD3               	subwf	Delay@i& (0+255),w,b
  3348  001C62  501E               	movf	Delay@wait+1,w,c
  3349  001C64  0100               	movlb	0	; () banked
  3350  001C66  59D4               	subwfb	(Delay@i+1)& (0+255),w,b
  3351  001C68  501F               	movf	Delay@wait+2,w,c
  3352  001C6A  0100               	movlb	0	; () banked
  3353  001C6C  59D5               	subwfb	(Delay@i+2)& (0+255),w,b
  3354  001C6E  0100               	movlb	0	; () banked
  3355  001C70  51D6               	movf	(Delay@i+3)& (0+255),w,b
  3356  001C72  0A80               	xorlw	128
  3357  001C74  6E21               	movwf	??_Delay& (0+255),c
  3358  001C76  5020               	movf	Delay@wait+3,w,c
  3359  001C78  0A80               	xorlw	128
  3360  001C7A  5821               	subwfb	??_Delay& (0+255),w,c
  3361  001C7C  B0D8               	btfsc	status,0,c
  3362  001C7E  0012               	return	
  3363  001C80  D7DF               	goto	l4158
  3364  001C82                     __end_of_Delay:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           intcon	equ	0xFF2
  3371                           intcon2	equ	0xFF1
  3372                           postinc0	equ	0xFEE
  3373                           wreg	equ	0xFE8
  3374                           indf2	equ	0xFDF
  3375                           postinc2	equ	0xFDE
  3376                           postdec2	equ	0xFDD
  3377                           fsr2h	equ	0xFDA
  3378                           fsr2l	equ	0xFD9
  3379                           status	equ	0xFD8
  3380                           
  3381 ;; *************** function _ComputeStorageData *****************
  3382 ;; Defined at:
  3383 ;;		line 164 in file "PDU.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  i               2   31[COMRAM] int 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3397 ;;      Params:         0       0       0       0       0       0       0
  3398 ;;      Locals:         2       0       0       0       0       0       0
  3399 ;;      Temps:          2       0       0       0       0       0       0
  3400 ;;      Totals:         4       0       0       0       0       0       0
  3401 ;;Total ram usage:        4 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    7
  3404 ;; This function calls:
  3405 ;;		_DATAEE_ReadByte
  3406 ;; This function is called by:
  3407 ;;		_PDUStartup
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text22
  3413  0015A4                     __ptext22:
  3414                           	opt stack 0
  3415  0015A4                     _ComputeStorageData:
  3416                           	opt stack 22
  3417                           
  3418                           ;PDU.c: 165: for (int i = 0; i < 12; i++) {
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;incstack = 0
  3422  0015A4  0E00               	movlw	0
  3423  0015A6  6E21               	movwf	ComputeStorageData@i+1,c
  3424  0015A8  0E00               	movlw	0
  3425  0015AA  6E20               	movwf	ComputeStorageData@i,c
  3426  0015AC                     l4476:
  3427  0015AC  BE21               	btfsc	ComputeStorageData@i+1,7,c
  3428  0015AE  D006               	goto	l4480
  3429  0015B0  5021               	movf	ComputeStorageData@i+1,w,c
  3430  0015B2  E111               	bnz	l4486
  3431  0015B4  0E0C               	movlw	12
  3432  0015B6  5C20               	subwf	ComputeStorageData@i,w,c
  3433  0015B8  B0D8               	btfsc	status,0,c
  3434  0015BA  D00D               	goto	l4486
  3435  0015BC                     l4480:
  3436                           
  3437                           ;PDU.c: 166: data[i] = DATAEE_ReadByte(i);
  3438  0015BC  0E84               	movlw	low _data
  3439  0015BE  2420               	addwf	ComputeStorageData@i,w,c
  3440  0015C0  6ED9               	movwf	fsr2l,c
  3441  0015C2  0E00               	movlw	high _data
  3442  0015C4  2021               	addwfc	ComputeStorageData@i+1,w,c
  3443  0015C6  6EDA               	movwf	fsr2h,c
  3444  0015C8  5020               	movf	ComputeStorageData@i,w,c
  3445  0015CA  EC56  F010         	call	_DATAEE_ReadByte
  3446  0015CE  6EDF               	movwf	indf2,c
  3447  0015D0  4A20               	infsnz	ComputeStorageData@i,f,c
  3448  0015D2  2A21               	incf	ComputeStorageData@i+1,f,c
  3449  0015D4  D7EB               	goto	l4476
  3450  0015D6                     l4486:
  3451                           
  3452                           ;PDU.c: 167: }
  3453                           ;PDU.c: 168: Currentcomp[0] = ((data[0] << 8) | data[1]);
  3454  0015D6  0100               	movlb	0	; () banked
  3455  0015D8  5185               	movf	(_data+1)& (0+255),w,b
  3456  0015DA  C084  F01E         	movff	_data,??_ComputeStorageData
  3457  0015DE  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3458  0015E0  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3459  0015E4  6A1E               	clrf	??_ComputeStorageData,c
  3460  0015E6  101E               	iorwf	??_ComputeStorageData,w,c
  3461  0015E8  0100               	movlb	0	; () banked
  3462  0015EA  6F78               	movwf	_Currentcomp& (0+255),b
  3463  0015EC  501F               	movf	??_ComputeStorageData+1,w,c
  3464  0015EE  0100               	movlb	0	; () banked
  3465  0015F0  6F79               	movwf	(_Currentcomp+1)& (0+255),b
  3466                           
  3467                           ;PDU.c: 169: Currentcomp[1] = ((data[2] << 8) | data[3]);
  3468  0015F2  0100               	movlb	0	; () banked
  3469  0015F4  5187               	movf	(_data+3)& (0+255),w,b
  3470  0015F6  C086  F01E         	movff	_data+2,??_ComputeStorageData
  3471  0015FA  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3472  0015FC  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3473  001600  6A1E               	clrf	??_ComputeStorageData,c
  3474  001602  101E               	iorwf	??_ComputeStorageData,w,c
  3475  001604  0100               	movlb	0	; () banked
  3476  001606  6F7A               	movwf	(_Currentcomp+2)& (0+255),b
  3477  001608  501F               	movf	??_ComputeStorageData+1,w,c
  3478  00160A  0100               	movlb	0	; () banked
  3479  00160C  6F7B               	movwf	(_Currentcomp+3)& (0+255),b
  3480                           
  3481                           ;PDU.c: 170: Currentcomp[2] = ((data[4] << 8) | data[5]);
  3482  00160E  0100               	movlb	0	; () banked
  3483  001610  5189               	movf	(_data+5)& (0+255),w,b
  3484  001612  C088  F01E         	movff	_data+4,??_ComputeStorageData
  3485  001616  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3486  001618  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3487  00161C  6A1E               	clrf	??_ComputeStorageData,c
  3488  00161E  101E               	iorwf	??_ComputeStorageData,w,c
  3489  001620  0100               	movlb	0	; () banked
  3490  001622  6F7C               	movwf	(_Currentcomp+4)& (0+255),b
  3491  001624  501F               	movf	??_ComputeStorageData+1,w,c
  3492  001626  0100               	movlb	0	; () banked
  3493  001628  6F7D               	movwf	(_Currentcomp+5)& (0+255),b
  3494                           
  3495                           ;PDU.c: 171: Currentcomp[3] = ((data[6] << 8) | data[7]);
  3496  00162A  0100               	movlb	0	; () banked
  3497  00162C  518B               	movf	(_data+7)& (0+255),w,b
  3498  00162E  C08A  F01E         	movff	_data+6,??_ComputeStorageData
  3499  001632  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3500  001634  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3501  001638  6A1E               	clrf	??_ComputeStorageData,c
  3502  00163A  101E               	iorwf	??_ComputeStorageData,w,c
  3503  00163C  0100               	movlb	0	; () banked
  3504  00163E  6F7E               	movwf	(_Currentcomp+6)& (0+255),b
  3505  001640  501F               	movf	??_ComputeStorageData+1,w,c
  3506  001642  0100               	movlb	0	; () banked
  3507  001644  6F7F               	movwf	(_Currentcomp+7)& (0+255),b
  3508                           
  3509                           ;PDU.c: 172: Currentcomp[4] = ((data[8] << 8) | data[9]);
  3510  001646  0100               	movlb	0	; () banked
  3511  001648  518D               	movf	(_data+9)& (0+255),w,b
  3512  00164A  C08C  F01E         	movff	_data+8,??_ComputeStorageData
  3513  00164E  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3514  001650  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3515  001654  6A1E               	clrf	??_ComputeStorageData,c
  3516  001656  101E               	iorwf	??_ComputeStorageData,w,c
  3517  001658  0100               	movlb	0	; () banked
  3518  00165A  6F80               	movwf	(_Currentcomp+8)& (0+255),b
  3519  00165C  501F               	movf	??_ComputeStorageData+1,w,c
  3520  00165E  0100               	movlb	0	; () banked
  3521  001660  6F81               	movwf	(_Currentcomp+9)& (0+255),b
  3522                           
  3523                           ;PDU.c: 173: Currentcomp[5] = ((data[10] << 8) | data[11]);
  3524  001662  0100               	movlb	0	; () banked
  3525  001664  518F               	movf	(_data+11)& (0+255),w,b
  3526  001666  C08E  F01E         	movff	_data+10,??_ComputeStorageData
  3527  00166A  6A1F               	clrf	(??_ComputeStorageData+1)& (0+255),c
  3528  00166C  C01E  F01F         	movff	??_ComputeStorageData,??_ComputeStorageData+1
  3529  001670  6A1E               	clrf	??_ComputeStorageData,c
  3530  001672  101E               	iorwf	??_ComputeStorageData,w,c
  3531  001674  0100               	movlb	0	; () banked
  3532  001676  6F82               	movwf	(_Currentcomp+10)& (0+255),b
  3533  001678  501F               	movf	??_ComputeStorageData+1,w,c
  3534  00167A  0100               	movlb	0	; () banked
  3535  00167C  6F83               	movwf	(_Currentcomp+11)& (0+255),b
  3536                           
  3537                           ; BSR set to: 0
  3538  00167E  0012               	return		;funcret
  3539  001680                     __end_of_ComputeStorageData:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           intcon	equ	0xFF2
  3546                           intcon2	equ	0xFF1
  3547                           postinc0	equ	0xFEE
  3548                           wreg	equ	0xFE8
  3549                           indf2	equ	0xFDF
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556 ;; *************** function _DATAEE_ReadByte *****************
  3557 ;; Defined at:
  3558 ;;		line 143 in file "mcc_generated_files/memory.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  bAdd            1    wreg     unsigned char 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  bAdd            1   28[COMRAM] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      unsigned char 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3572 ;;      Params:         0       0       0       0       0       0       0
  3573 ;;      Locals:         1       0       0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0
  3575 ;;      Totals:         1       0       0       0       0       0       0
  3576 ;;Total ram usage:        1 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    6
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_ComputeStorageData
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text23
  3587  0020AC                     __ptext23:
  3588                           	opt stack 0
  3589  0020AC                     _DATAEE_ReadByte:
  3590                           	opt stack 22
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;incstack = 0
  3594                           ;DATAEE_ReadByte@bAdd stored from wreg
  3595  0020AC  6E1D               	movwf	DATAEE_ReadByte@bAdd,c
  3596                           
  3597                           ;memory.c: 145: EEADR = (bAdd & 0xFF);
  3598  0020AE  C01D  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
  3599                           
  3600                           ;memory.c: 146: EECON1bits.CFGS = 0;
  3601  0020B2  9CA6               	bcf	4006,6,c	;volatile
  3602                           
  3603                           ;memory.c: 147: EECON1bits.EEPGD = 0;
  3604  0020B4  9EA6               	bcf	4006,7,c	;volatile
  3605                           
  3606                           ;memory.c: 148: EECON1bits.RD = 1;
  3607  0020B6  80A6               	bsf	4006,0,c	;volatile
  3608                           
  3609                           ;memory.c: 149: __nop();
  3610  0020B8  F000               	nop	
  3611                           
  3612                           ;memory.c: 150: __nop();
  3613  0020BA  F000               	nop	
  3614                           
  3615                           ;memory.c: 152: return (EEDATA);
  3616  0020BC  50A8               	movf	4008,w,c	;volatile
  3617  0020BE  0012               	return	
  3618  0020C0                     __end_of_DATAEE_ReadByte:
  3619                           	opt stack 0
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           intcon	equ	0xFF2
  3625                           intcon2	equ	0xFF1
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf2	equ	0xFDF
  3629                           postinc2	equ	0xFDE
  3630                           postdec2	equ	0xFDD
  3631                           fsr2h	equ	0xFDA
  3632                           fsr2l	equ	0xFD9
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function _FuseSystem *****************
  3636 ;; Defined at:
  3637 ;;		line 179 in file "PDU.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  i               2   22[BANK0 ] int 
  3642 ;;  i               2   20[BANK0 ] int 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3652 ;;      Params:         0       0       0       0       0       0       0
  3653 ;;      Locals:         0       4       0       0       0       0       0
  3654 ;;      Temps:          0       4       0       0       0       0       0
  3655 ;;      Totals:         0       8       0       0       0       0       0
  3656 ;;Total ram usage:        8 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:   11
  3659 ;; This function calls:
  3660 ;;		_EnableSlavePower
  3661 ;;		___wmul
  3662 ;;		_printf
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text24
  3669  000CB0                     __ptext24:
  3670                           	opt stack 0
  3671  000CB0                     _FuseSystem:
  3672                           	opt stack 19
  3673                           
  3674                           ;PDU.c: 180: printf("Reading Stuff \n");
  3675                           
  3676                           ;incstack = 0
  3677  000CB0  0E0B               	movlw	low STR_1
  3678  000CB2  0100               	movlb	0	; () banked
  3679  000CB4  6FD8               	movwf	printf@f& (0+255),b
  3680  000CB6  0E06               	movlw	high STR_1
  3681  000CB8  0100               	movlb	0	; () banked
  3682  000CBA  6FD9               	movwf	(printf@f+1)& (0+255),b
  3683  000CBC  ECAF  F008         	call	_printf	;wreg free
  3684                           
  3685                           ;PDU.c: 181: for (int i = 0; i < 6; i++) {
  3686  000CC0  0E00               	movlw	0
  3687  000CC2  0100               	movlb	0	; () banked
  3688  000CC4  6FE8               	movwf	(FuseSystem@i+1)& (0+255),b
  3689  000CC6  0E00               	movlw	0
  3690  000CC8  6FE7               	movwf	FuseSystem@i& (0+255),b
  3691  000CCA                     l4578:
  3692                           
  3693                           ; BSR set to: 0
  3694  000CCA  0100               	movlb	0	; () banked
  3695  000CCC  BFE8               	btfsc	(FuseSystem@i+1)& (0+255),7,b
  3696  000CCE  D008               	goto	l4582
  3697  000CD0  0100               	movlb	0	; () banked
  3698  000CD2  51E8               	movf	(FuseSystem@i+1)& (0+255),w,b
  3699  000CD4  E144               	bnz	l4590
  3700  000CD6  0E06               	movlw	6
  3701  000CD8  0100               	movlb	0	; () banked
  3702  000CDA  5DE7               	subwf	FuseSystem@i& (0+255),w,b
  3703  000CDC  B0D8               	btfsc	status,0,c
  3704  000CDE  D03F               	goto	l4590
  3705  000CE0                     l4582:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;PDU.c: 182: Current[i] = CurrentADC[i]*48;
  3709  000CE0  90D8               	bcf	status,0,c
  3710  000CE2  0100               	movlb	0	; () banked
  3711  000CE4  35E7               	rlcf	FuseSystem@i& (0+255),w,b
  3712  000CE6  6ED9               	movwf	fsr2l,c
  3713  000CE8  0100               	movlb	0	; () banked
  3714  000CEA  35E8               	rlcf	(FuseSystem@i+1)& (0+255),w,b
  3715  000CEC  6EDA               	movwf	fsr2h,c
  3716  000CEE  0E6C               	movlw	low _CurrentADC
  3717  000CF0  26D9               	addwf	fsr2l,f,c
  3718  000CF2  0E00               	movlw	high _CurrentADC
  3719  000CF4  22DA               	addwfc	fsr2h,f,c
  3720  000CF6  CFDE F01D          	movff	postinc2,___wmul@multiplier
  3721  000CFA  CFDD F01E          	movff	postdec2,___wmul@multiplier+1
  3722  000CFE  0E00               	movlw	0
  3723  000D00  6E20               	movwf	___wmul@multiplicand+1,c
  3724  000D02  0E30               	movlw	48
  3725  000D04  6E1F               	movwf	___wmul@multiplicand,c
  3726  000D06  EC04  F010         	call	___wmul	;wreg free
  3727  000D0A  90D8               	bcf	status,0,c
  3728  000D0C  0100               	movlb	0	; () banked
  3729  000D0E  35E7               	rlcf	FuseSystem@i& (0+255),w,b
  3730  000D10  6ED9               	movwf	fsr2l,c
  3731  000D12  0100               	movlb	0	; () banked
  3732  000D14  35E8               	rlcf	(FuseSystem@i+1)& (0+255),w,b
  3733  000D16  6EDA               	movwf	fsr2h,c
  3734  000D18  0E60               	movlw	low _Current
  3735  000D1A  26D9               	addwf	fsr2l,f,c
  3736  000D1C  0E00               	movlw	high _Current
  3737  000D1E  22DA               	addwfc	fsr2h,f,c
  3738  000D20  C01D  FFDE         	movff	?___wmul,postinc2
  3739  000D24  C01E  FFDD         	movff	?___wmul+1,postdec2
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;PDU.c: 183: printf("%u ",Current[i]);
  3743  000D28  0E1B               	movlw	low STR_2
  3744  000D2A  0100               	movlb	0	; () banked
  3745  000D2C  6FD8               	movwf	printf@f& (0+255),b
  3746  000D2E  0E06               	movlw	high STR_2
  3747  000D30  0100               	movlb	0	; () banked
  3748  000D32  6FD9               	movwf	(printf@f+1)& (0+255),b
  3749  000D34  90D8               	bcf	status,0,c
  3750  000D36  0100               	movlb	0	; () banked
  3751  000D38  35E7               	rlcf	FuseSystem@i& (0+255),w,b
  3752  000D3A  6ED9               	movwf	fsr2l,c
  3753  000D3C  0100               	movlb	0	; () banked
  3754  000D3E  35E8               	rlcf	(FuseSystem@i+1)& (0+255),w,b
  3755  000D40  6EDA               	movwf	fsr2h,c
  3756  000D42  0E60               	movlw	low _Current
  3757  000D44  26D9               	addwf	fsr2l,f,c
  3758  000D46  0E00               	movlw	high _Current
  3759  000D48  22DA               	addwfc	fsr2h,f,c
  3760  000D4A  CFDE F0DA          	movff	postinc2,?_printf+2
  3761  000D4E  CFDD F0DB          	movff	postdec2,?_printf+3
  3762  000D52  ECAF  F008         	call	_printf	;wreg free
  3763  000D56  0100               	movlb	0	; () banked
  3764  000D58  4BE7               	infsnz	FuseSystem@i& (0+255),f,b
  3765  000D5A  2BE8               	incf	(FuseSystem@i+1)& (0+255),f,b
  3766  000D5C  D7B6               	goto	l4578
  3767  000D5E                     l4590:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;PDU.c: 185: }
  3771                           ;PDU.c: 186: printf("\n");
  3772  000D5E  0E19               	movlw	low (STR_1+14)
  3773  000D60  0100               	movlb	0	; () banked
  3774  000D62  6FD8               	movwf	printf@f& (0+255),b
  3775  000D64  0E06               	movlw	high (STR_1+14)
  3776  000D66  0100               	movlb	0	; () banked
  3777  000D68  6FD9               	movwf	(printf@f+1)& (0+255),b
  3778  000D6A  ECAF  F008         	call	_printf	;wreg free
  3779                           
  3780                           ;PDU.c: 187: for (int i = 0; i < 6; i++) {
  3781  000D6E  0E00               	movlw	0
  3782  000D70  0100               	movlb	0	; () banked
  3783  000D72  6FEA               	movwf	(FuseSystem@i_1562+1)& (0+255),b
  3784  000D74  0E00               	movlw	0
  3785  000D76  6FE9               	movwf	FuseSystem@i_1562& (0+255),b
  3786                           
  3787                           ; BSR set to: 0
  3788  000D78  0100               	movlb	0	; () banked
  3789  000D7A  BFEA               	btfsc	(FuseSystem@i_1562+1)& (0+255),7,b
  3790  000D7C  D00A               	goto	l4598
  3791  000D7E  0100               	movlb	0	; () banked
  3792  000D80  51EA               	movf	(FuseSystem@i_1562+1)& (0+255),w,b
  3793  000D82  E106               	bnz	u3770
  3794  000D84  0E06               	movlw	6
  3795  000D86  0100               	movlb	0	; () banked
  3796  000D88  5DE9               	subwf	FuseSystem@i_1562& (0+255),w,b
  3797  000D8A  B0D8               	btfsc	status,0,c
  3798  000D8C  0012               	return	
  3799  000D8E  D001               	goto	l4598
  3800  000D90                     u3770:
  3801                           
  3802                           ; BSR set to: 0
  3803  000D90  0012               	return	
  3804  000D92                     l4598:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;PDU.c: 188: if (Current[i] > Currentcomp[i]) {
  3808  000D92  90D8               	bcf	status,0,c
  3809  000D94  0100               	movlb	0	; () banked
  3810  000D96  35E9               	rlcf	FuseSystem@i_1562& (0+255),w,b
  3811  000D98  6ED9               	movwf	fsr2l,c
  3812  000D9A  0100               	movlb	0	; () banked
  3813  000D9C  35EA               	rlcf	(FuseSystem@i_1562+1)& (0+255),w,b
  3814  000D9E  6EDA               	movwf	fsr2h,c
  3815  000DA0  0E60               	movlw	low _Current
  3816  000DA2  26D9               	addwf	fsr2l,f,c
  3817  000DA4  0E00               	movlw	high _Current
  3818  000DA6  22DA               	addwfc	fsr2h,f,c
  3819  000DA8  90D8               	bcf	status,0,c
  3820  000DAA  0100               	movlb	0	; () banked
  3821  000DAC  35E9               	rlcf	FuseSystem@i_1562& (0+255),w,b
  3822  000DAE  6EE1               	movwf	fsr1l,c
  3823  000DB0  0100               	movlb	0	; () banked
  3824  000DB2  35EA               	rlcf	(FuseSystem@i_1562+1)& (0+255),w,b
  3825  000DB4  6EE2               	movwf	fsr1h,c
  3826  000DB6  0E78               	movlw	low _Currentcomp
  3827  000DB8  26E1               	addwf	fsr1l,f,c
  3828  000DBA  0E00               	movlw	high _Currentcomp
  3829  000DBC  22E2               	addwfc	fsr1h,f,c
  3830  000DBE  50DE               	movf	postinc2,w,c
  3831  000DC0  5CE6               	subwf	postinc1,w,c
  3832  000DC2  50DE               	movf	postinc2,w,c
  3833  000DC4  58E6               	subwfb	postinc1,w,c
  3834  000DC6  B0D8               	btfsc	status,0,c
  3835  000DC8  D04F               	goto	l4616
  3836                           
  3837                           ; BSR set to: 0
  3838                           
  3839                           ;PDU.c: 190: do { LATA3 = 1; } while(0);
  3840  000DCA  8689               	bsf	3977,3,c	;volatile
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;PDU.c: 191: switch(i){
  3844  000DCC  D030               	goto	l4614
  3845  000DCE                     l4600:
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;PDU.c: 193: EnableSlavePower(AUX, 0);
  3849  000DCE  0E00               	movlw	0
  3850  000DD0  6E24               	movwf	EnableSlavePower@onof+1,c
  3851  000DD2  0E00               	movlw	0
  3852  000DD4  6E23               	movwf	EnableSlavePower@onof,c
  3853  000DD6  0E06               	movlw	6
  3854  000DD8  EC5E  F00A         	call	_EnableSlavePower
  3855                           
  3856                           ;PDU.c: 194: break;
  3857  000DDC  D045               	goto	l4616
  3858  000DDE                     l4602:
  3859                           
  3860                           ;PDU.c: 196: EnableSlavePower(TSS, 0);
  3861  000DDE  0E00               	movlw	0
  3862  000DE0  6E24               	movwf	EnableSlavePower@onof+1,c
  3863  000DE2  0E00               	movlw	0
  3864  000DE4  6E23               	movwf	EnableSlavePower@onof,c
  3865  000DE6  0E05               	movlw	5
  3866  000DE8  EC5E  F00A         	call	_EnableSlavePower
  3867                           
  3868                           ;PDU.c: 197: break;
  3869  000DEC  D03D               	goto	l4616
  3870  000DEE                     l4604:
  3871                           
  3872                           ;PDU.c: 199: EnableSlavePower(SAS, 0);
  3873  000DEE  0E00               	movlw	0
  3874  000DF0  6E24               	movwf	EnableSlavePower@onof+1,c
  3875  000DF2  0E00               	movlw	0
  3876  000DF4  6E23               	movwf	EnableSlavePower@onof,c
  3877  000DF6  0E03               	movlw	3
  3878  000DF8  EC5E  F00A         	call	_EnableSlavePower
  3879                           
  3880                           ;PDU.c: 200: break;
  3881  000DFC  D035               	goto	l4616
  3882  000DFE                     l4606:
  3883                           
  3884                           ;PDU.c: 202: EnableSlavePower(DDS, 0);
  3885  000DFE  0E00               	movlw	0
  3886  000E00  6E24               	movwf	EnableSlavePower@onof+1,c
  3887  000E02  0E00               	movlw	0
  3888  000E04  6E23               	movwf	EnableSlavePower@onof,c
  3889  000E06  0E01               	movlw	1
  3890  000E08  EC5E  F00A         	call	_EnableSlavePower
  3891                           
  3892                           ;PDU.c: 203: break;
  3893  000E0C  D02D               	goto	l4616
  3894  000E0E                     l4608:
  3895                           
  3896                           ;PDU.c: 205: EnableSlavePower(BMM, 0);
  3897  000E0E  0E00               	movlw	0
  3898  000E10  6E24               	movwf	EnableSlavePower@onof+1,c
  3899  000E12  0E00               	movlw	0
  3900  000E14  6E23               	movwf	EnableSlavePower@onof,c
  3901  000E16  0E04               	movlw	4
  3902  000E18  EC5E  F00A         	call	_EnableSlavePower
  3903                           
  3904                           ;PDU.c: 206: break;
  3905  000E1C  D025               	goto	l4616
  3906  000E1E                     l4610:
  3907                           
  3908                           ;PDU.c: 208: EnableSlavePower(MCS, 0);
  3909  000E1E  0E00               	movlw	0
  3910  000E20  6E24               	movwf	EnableSlavePower@onof+1,c
  3911  000E22  0E00               	movlw	0
  3912  000E24  6E23               	movwf	EnableSlavePower@onof,c
  3913  000E26  0E02               	movlw	2
  3914  000E28  EC5E  F00A         	call	_EnableSlavePower
  3915                           
  3916                           ;PDU.c: 210: }
  3917                           
  3918                           ;PDU.c: 209: break;
  3919  000E2C  D01D               	goto	l4616
  3920  000E2E                     l4614:
  3921  000E2E  C0E9  F0E3         	movff	FuseSystem@i_1562,??_FuseSystem
  3922  000E32  C0EA  F0E4         	movff	FuseSystem@i_1562+1,??_FuseSystem+1
  3923                           
  3924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3925                           ; Switch size 1, requested type "space"
  3926                           ; Number of cases is 1, Range of values is 0 to 0
  3927                           ; switch strategies available:
  3928                           ; Name         Instructions Cycles
  3929                           ; simple_byte            4     3 (average)
  3930                           ;	Chosen strategy is simple_byte
  3931  000E36  0100               	movlb	0	; () banked
  3932  000E38  51E4               	movf	(??_FuseSystem+1)& (0+255),w,b
  3933  000E3A  0A00               	xorlw	0	; case 0
  3934  000E3C  A4D8               	btfss	status,2,c
  3935  000E3E  D014               	goto	l4616
  3936                           
  3937                           ; BSR set to: 0
  3938                           ; Switch size 1, requested type "space"
  3939                           ; Number of cases is 6, Range of values is 0 to 5
  3940                           ; switch strategies available:
  3941                           ; Name         Instructions Cycles
  3942                           ; simple_byte           19    10 (average)
  3943                           ;	Chosen strategy is simple_byte
  3944  000E40  0100               	movlb	0	; () banked
  3945  000E42  51E3               	movf	??_FuseSystem& (0+255),w,b
  3946  000E44  0A00               	xorlw	0	; case 0
  3947  000E46  B4D8               	btfsc	status,2,c
  3948  000E48  D7C2               	goto	l4600
  3949  000E4A  0A01               	xorlw	1	; case 1
  3950  000E4C  B4D8               	btfsc	status,2,c
  3951  000E4E  D7C7               	goto	l4602
  3952  000E50  0A03               	xorlw	3	; case 2
  3953  000E52  B4D8               	btfsc	status,2,c
  3954  000E54  D7CC               	goto	l4604
  3955  000E56  0A01               	xorlw	1	; case 3
  3956  000E58  B4D8               	btfsc	status,2,c
  3957  000E5A  D7D1               	goto	l4606
  3958  000E5C  0A07               	xorlw	7	; case 4
  3959  000E5E  B4D8               	btfsc	status,2,c
  3960  000E60  D7D6               	goto	l4608
  3961  000E62  0A01               	xorlw	1	; case 5
  3962  000E64  B4D8               	btfsc	status,2,c
  3963  000E66  D7DB               	goto	l4610
  3964  000E68                     l4616:
  3965  000E68  0100               	movlb	0	; () banked
  3966  000E6A  4BE9               	infsnz	FuseSystem@i_1562& (0+255),f,b
  3967  000E6C  2BEA               	incf	(FuseSystem@i_1562+1)& (0+255),f,b
  3968                           
  3969                           ; BSR set to: 0
  3970  000E6E  0100               	movlb	0	; () banked
  3971  000E70  BFEA               	btfsc	(FuseSystem@i_1562+1)& (0+255),7,b
  3972  000E72  D78F               	goto	l4598
  3973  000E74  0100               	movlb	0	; () banked
  3974  000E76  51EA               	movf	(FuseSystem@i_1562+1)& (0+255),w,b
  3975  000E78  E101               	bnz	l687
  3976  000E7A  D784               	goto	L1
  3977  000E7C                     l687:
  3978                           
  3979                           ; BSR set to: 0
  3980  000E7C  0012               	return		;funcret
  3981  000E7E                     __end_of_FuseSystem:
  3982                           	opt stack 0
  3983                           tblptru	equ	0xFF8
  3984                           tblptrh	equ	0xFF7
  3985                           tblptrl	equ	0xFF6
  3986                           tablat	equ	0xFF5
  3987                           intcon	equ	0xFF2
  3988                           intcon2	equ	0xFF1
  3989                           postinc0	equ	0xFEE
  3990                           wreg	equ	0xFE8
  3991                           postinc1	equ	0xFE6
  3992                           fsr1h	equ	0xFE2
  3993                           fsr1l	equ	0xFE1
  3994                           indf2	equ	0xFDF
  3995                           postinc2	equ	0xFDE
  3996                           postdec2	equ	0xFDD
  3997                           fsr2h	equ	0xFDA
  3998                           fsr2l	equ	0xFD9
  3999                           status	equ	0xFD8
  4000                           
  4001 ;; *************** function _printf *****************
  4002 ;; Defined at:
  4003 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  f               2    5[BANK0 ] PTR const unsigned char 
  4006 ;;		 -> STR_3(2), STR_2(4), STR_1(16), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  tmpval          4    0        struct .
  4009 ;;  cp              3    0        PTR const unsigned char 
  4010 ;;  val             2   12[BANK0 ] unsigned int 
  4011 ;;  ap              2   10[BANK0 ] PTR void [1]
  4012 ;;		 -> ?_printf(2), 
  4013 ;;  len             2    0        unsigned int 
  4014 ;;  c               1   15[BANK0 ] char 
  4015 ;;  prec            1   14[BANK0 ] char 
  4016 ;;  flag            1    9[BANK0 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    5[BANK0 ] int 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4026 ;;      Params:         0       4       0       0       0       0       0
  4027 ;;      Locals:         0       7       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0
  4029 ;;      Totals:         0      11       0       0       0       0       0
  4030 ;;Total ram usage:       11 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:   10
  4033 ;; This function calls:
  4034 ;;		___lwdiv
  4035 ;;		___lwmod
  4036 ;;		_putch
  4037 ;; This function is called by:
  4038 ;;		_FuseSystem
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text25
  4043  00115E                     __ptext25:
  4044                           	opt stack 0
  4045  00115E                     _printf:
  4046                           	opt stack 19
  4047                           
  4048                           ;doprnt.c: 466: va_list ap;
  4049                           ;doprnt.c: 499: signed char c;
  4050                           ;doprnt.c: 506: signed char prec;
  4051                           ;doprnt.c: 508: unsigned char flag;
  4052                           ;doprnt.c: 523: union {
  4053                           ;doprnt.c: 524: unsigned long vd;
  4054                           ;doprnt.c: 525: double integ;
  4055                           ;doprnt.c: 526: } tmpval;
  4056                           ;doprnt.c: 528: unsigned int val;
  4057                           ;doprnt.c: 529: unsigned len;
  4058                           ;doprnt.c: 530: const char * cp;
  4059                           ;doprnt.c: 533: *ap = __va_start();
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;incstack = 0
  4063  00115E  0EDA               	movlw	low (?_printf+2)
  4064  001160  0100               	movlb	0	; () banked
  4065  001162  6FDD               	movwf	printf@ap& (0+255),b
  4066  001164  0E00               	movlw	high (?_printf+2)
  4067  001166  0100               	movlb	0	; () banked
  4068  001168  6FDE               	movwf	(printf@ap+1)& (0+255),b
  4069                           
  4070                           ;doprnt.c: 536: while(c = *f++) {
  4071  00116A  D082               	goto	l4526
  4072  00116C                     l4490:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;doprnt.c: 538: if(c != '%')
  4076  00116C  0E25               	movlw	37
  4077  00116E  0100               	movlb	0	; () banked
  4078  001170  19E2               	xorwf	printf@c& (0+255),w,b
  4079  001172  B4D8               	btfsc	status,2,c
  4080  001174  D005               	goto	l4494
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;doprnt.c: 540: {
  4084                           ;doprnt.c: 541: (putch(c) );
  4085  001176  0100               	movlb	0	; () banked
  4086  001178  51E2               	movf	printf@c& (0+255),w,b
  4087  00117A  EC67  F010         	call	_putch
  4088                           
  4089                           ;doprnt.c: 542: continue;
  4090  00117E  D078               	goto	l4526
  4091  001180                     l4494:
  4092                           
  4093                           ;doprnt.c: 543: }
  4094                           ;doprnt.c: 548: flag = 0;
  4095  001180  0E00               	movlw	0
  4096  001182  0100               	movlb	0	; () banked
  4097  001184  6FDC               	movwf	printf@flag& (0+255),b
  4098                           
  4099                           ;doprnt.c: 635: switch(c = *f++) {
  4100  001186  D004               	goto	l4500
  4101  001188                     l4496:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;doprnt.c: 818: flag |= 0xC0;
  4105  001188  0EC0               	movlw	192
  4106  00118A  0100               	movlb	0	; () banked
  4107  00118C  13DC               	iorwf	printf@flag& (0+255),f,b
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;doprnt.c: 822: }
  4111                           
  4112                           ;doprnt.c: 819: break;
  4113  00118E  D013               	goto	l4502
  4114  001190                     l4500:
  4115                           
  4116                           ; BSR set to: 0
  4117  001190  C0D8  FFF6         	movff	printf@f,tblptrl
  4118  001194  C0D9  FFF7         	movff	printf@f+1,tblptrh
  4119  001198  0100               	movlb	0	; () banked
  4120  00119A  4BD8               	infsnz	printf@f& (0+255),f,b
  4121  00119C  2BD9               	incf	(printf@f+1)& (0+255),f,b
  4122  00119E                     	if	0	;tblptru may be non-zero
  4123  00119E                     	endif
  4124  00119E                     	if	0	;tblptru may be non-zero
  4125  00119E                     	endif
  4126  00119E  0008               	tblrd		*
  4127  0011A0  CFF5 F0E2          	movff	tablat,printf@c
  4128  0011A4  0100               	movlb	0	; () banked
  4129  0011A6  51E2               	movf	printf@c& (0+255),w,b
  4130                           
  4131                           ; Switch size 1, requested type "space"
  4132                           ; Number of cases is 2, Range of values is 0 to 117
  4133                           ; switch strategies available:
  4134                           ; Name         Instructions Cycles
  4135                           ; simple_byte            7     4 (average)
  4136                           ;	Chosen strategy is simple_byte
  4137  0011A8  0A00               	xorlw	0	; case 0
  4138  0011AA  B4D8               	btfsc	status,2,c
  4139  0011AC  0012               	return	
  4140  0011AE  0A75               	xorlw	117	; case 117
  4141  0011B0  B4D8               	btfsc	status,2,c
  4142  0011B2  D7EA               	goto	l4496
  4143  0011B4  D05D               	goto	l4526
  4144  0011B6                     l4502:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;doprnt.c: 1273: {
  4148                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4149  0011B6  C0DD  FFD9         	movff	printf@ap,fsr2l
  4150  0011BA  C0DE  FFDA         	movff	printf@ap+1,fsr2h
  4151  0011BE  CFDE F0DF          	movff	postinc2,printf@val
  4152  0011C2  CFDD F0E0          	movff	postdec2,printf@val+1
  4153                           
  4154                           ; BSR set to: 0
  4155  0011C6  0E02               	movlw	2
  4156  0011C8  0100               	movlb	0	; () banked
  4157  0011CA  27DD               	addwf	printf@ap& (0+255),f,b
  4158  0011CC  0E00               	movlw	0
  4159  0011CE  23DE               	addwfc	(printf@ap+1)& (0+255),f,b
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;doprnt.c: 1287: }
  4163                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4164  0011D0  0E01               	movlw	1
  4165  0011D2  0100               	movlb	0	; () banked
  4166  0011D4  6FE2               	movwf	printf@c& (0+255),b
  4167  0011D6                     l4508:
  4168                           
  4169                           ; BSR set to: 0
  4170  0011D6  0E05               	movlw	5
  4171  0011D8  0100               	movlb	0	; () banked
  4172  0011DA  19E2               	xorwf	printf@c& (0+255),w,b
  4173  0011DC  B4D8               	btfsc	status,2,c
  4174  0011DE  D016               	goto	l952
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;doprnt.c: 1306: if(val < dpowers[c])
  4178                           
  4179                           ; BSR set to: 0
  4180                           
  4181                           ; BSR set to: 0
  4182  0011E0  0100               	movlb	0	; () banked
  4183  0011E2  51E2               	movf	printf@c& (0+255),w,b
  4184  0011E4  0D02               	mullw	2
  4185  0011E6  0E01               	movlw	low _dpowers
  4186  0011E8  24F3               	addwf	prodl,w,c
  4187  0011EA  6EF6               	movwf	tblptrl,c
  4188  0011EC  0E06               	movlw	high _dpowers
  4189  0011EE  20F4               	addwfc	prodh,w,c
  4190  0011F0  6EF7               	movwf	tblptrh,c
  4191  0011F2                     	if	0	;There are less than 3 active tblptr bytes
  4192  0011F2                     	endif
  4193  0011F2  0009               	tblrd		*+
  4194  0011F4  50F5               	movf	tablat,w,c
  4195  0011F6  0100               	movlb	0	; () banked
  4196  0011F8  5DDF               	subwf	printf@val& (0+255),w,b
  4197  0011FA  0009               	tblrd		*+
  4198  0011FC  50F5               	movf	tablat,w,c
  4199  0011FE  0100               	movlb	0	; () banked
  4200  001200  59E0               	subwfb	(printf@val+1)& (0+255),w,b
  4201  001202  A0D8               	btfss	status,0,c
  4202  001204  D003               	goto	l952
  4203                           
  4204                           ; BSR set to: 0
  4205                           
  4206                           ; BSR set to: 0
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;doprnt.c: 1307: break;
  4210  001206  0100               	movlb	0	; () banked
  4211  001208  2BE2               	incf	printf@c& (0+255),f,b
  4212  00120A  D7E5               	goto	l4508
  4213  00120C                     l952:
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;doprnt.c: 1422: {
  4217                           ;doprnt.c: 1469: }
  4218                           ;doprnt.c: 1472: prec = c;
  4219  00120C  C0E2  F0E1         	movff	printf@c,printf@prec
  4220                           
  4221                           ;doprnt.c: 1474: while(prec--) {
  4222  001210  D029               	goto	l4524
  4223  001212                     l4520:
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;doprnt.c: 1478: {
  4227                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4228  001212  0100               	movlb	0	; () banked
  4229  001214  51E1               	movf	printf@prec& (0+255),w,b
  4230  001216  0D02               	mullw	2
  4231  001218  0E01               	movlw	low _dpowers
  4232  00121A  24F3               	addwf	prodl,w,c
  4233  00121C  6EF6               	movwf	tblptrl,c
  4234  00121E  0E06               	movlw	high _dpowers
  4235  001220  20F4               	addwfc	prodh,w,c
  4236  001222  6EF7               	movwf	tblptrh,c
  4237  001224                     	if	0	;There are less than 3 active tblptr bytes
  4238  001224                     	endif
  4239  001224  0009               	tblrd		*+
  4240  001226  CFF5 F01F          	movff	tablat,___lwdiv@divisor
  4241  00122A  000A               	tblrd		*-
  4242  00122C  CFF5 F020          	movff	tablat,___lwdiv@divisor+1
  4243  001230  C0DF  F01D         	movff	printf@val,___lwdiv@dividend
  4244  001234  C0E0  F01E         	movff	printf@val+1,___lwdiv@dividend+1
  4245  001238  EC6B  F00E         	call	___lwdiv	;wreg free
  4246  00123C  C01D  F0D3         	movff	?___lwdiv,___lwmod@dividend
  4247  001240  C01E  F0D4         	movff	?___lwdiv+1,___lwmod@dividend+1
  4248  001244  0E00               	movlw	0
  4249  001246  0100               	movlb	0	; () banked
  4250  001248  6FD6               	movwf	(___lwmod@divisor+1)& (0+255),b
  4251  00124A  0E0A               	movlw	10
  4252  00124C  6FD5               	movwf	___lwmod@divisor& (0+255),b
  4253  00124E  ECBB  F00D         	call	___lwmod	;wreg free
  4254  001252  0100               	movlb	0	; () banked
  4255  001254  51D3               	movf	?___lwmod& (0+255),w,b
  4256  001256  0F30               	addlw	48
  4257  001258  0100               	movlb	0	; () banked
  4258  00125A  6FE2               	movwf	printf@c& (0+255),b
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;doprnt.c: 1523: }
  4262                           ;doprnt.c: 1524: (putch(c) );
  4263  00125C  0100               	movlb	0	; () banked
  4264  00125E  51E2               	movf	printf@c& (0+255),w,b
  4265  001260  EC67  F010         	call	_putch
  4266  001264                     l4524:
  4267  001264  0100               	movlb	0	; () banked
  4268  001266  07E1               	decf	printf@prec& (0+255),f,b
  4269  001268  0100               	movlb	0	; () banked
  4270  00126A  29E1               	incf	printf@prec& (0+255),w,b
  4271  00126C  A4D8               	btfss	status,2,c
  4272  00126E  D7D1               	goto	l4520
  4273  001270                     l4526:
  4274  001270  C0D8  FFF6         	movff	printf@f,tblptrl
  4275  001274  C0D9  FFF7         	movff	printf@f+1,tblptrh
  4276  001278  0100               	movlb	0	; () banked
  4277  00127A  4BD8               	infsnz	printf@f& (0+255),f,b
  4278  00127C  2BD9               	incf	(printf@f+1)& (0+255),f,b
  4279  00127E                     	if	0	;tblptru may be non-zero
  4280  00127E                     	endif
  4281  00127E                     	if	0	;tblptru may be non-zero
  4282  00127E                     	endif
  4283  00127E  0008               	tblrd		*
  4284  001280  CFF5 F0E2          	movff	tablat,printf@c
  4285  001284  0100               	movlb	0	; () banked
  4286  001286  51E2               	movf	printf@c& (0+255),w,b
  4287  001288  B4D8               	btfsc	status,2,c
  4288  00128A  0012               	return	
  4289  00128C  D76F               	goto	l4490
  4290  00128E                     __end_of_printf:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           prodh	equ	0xFF4
  4297                           prodl	equ	0xFF3
  4298                           intcon	equ	0xFF2
  4299                           intcon2	equ	0xFF1
  4300                           postinc0	equ	0xFEE
  4301                           wreg	equ	0xFE8
  4302                           postinc1	equ	0xFE6
  4303                           fsr1h	equ	0xFE2
  4304                           fsr1l	equ	0xFE1
  4305                           indf2	equ	0xFDF
  4306                           postinc2	equ	0xFDE
  4307                           postdec2	equ	0xFDD
  4308                           fsr2h	equ	0xFDA
  4309                           fsr2l	equ	0xFD9
  4310                           status	equ	0xFD8
  4311                           
  4312 ;; *************** function _putch *****************
  4313 ;; Defined at:
  4314 ;;		line 164 in file "UART.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  txData          1    wreg     unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  txData          1    4[BANK0 ] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4328 ;;      Params:         0       0       0       0       0       0       0
  4329 ;;      Locals:         0       1       0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0
  4331 ;;      Totals:         0       1       0       0       0       0       0
  4332 ;;Total ram usage:        1 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    9
  4335 ;; This function calls:
  4336 ;;		_Send_put
  4337 ;; This function is called by:
  4338 ;;		_printf
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text26
  4343  0020CE                     __ptext26:
  4344                           	opt stack 0
  4345  0020CE                     _putch:
  4346                           	opt stack 19
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;incstack = 0
  4350                           ;putch@txData stored from wreg
  4351  0020CE  0100               	movlb	0	; () banked
  4352  0020D0  6FD7               	movwf	putch@txData& (0+255),b
  4353                           
  4354                           ;UART.c: 165: Send_put(txData);
  4355  0020D2  0100               	movlb	0	; () banked
  4356  0020D4  51D7               	movf	putch@txData& (0+255),w,b
  4357  0020D6  EC37  F00F         	call	_Send_put
  4358  0020DA  0012               	return		;funcret
  4359  0020DC                     __end_of_putch:
  4360                           	opt stack 0
  4361                           tblptru	equ	0xFF8
  4362                           tblptrh	equ	0xFF7
  4363                           tblptrl	equ	0xFF6
  4364                           tablat	equ	0xFF5
  4365                           prodh	equ	0xFF4
  4366                           prodl	equ	0xFF3
  4367                           intcon	equ	0xFF2
  4368                           intcon2	equ	0xFF1
  4369                           postinc0	equ	0xFEE
  4370                           wreg	equ	0xFE8
  4371                           postinc1	equ	0xFE6
  4372                           fsr1h	equ	0xFE2
  4373                           fsr1l	equ	0xFE1
  4374                           indf2	equ	0xFDF
  4375                           postinc2	equ	0xFDE
  4376                           postdec2	equ	0xFDD
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function _Send_put *****************
  4382 ;; Defined at:
  4383 ;;		line 130 in file "UART.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  _data           1    wreg     unsigned char 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  _data           1    3[BANK0 ] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4397 ;;      Params:         0       0       0       0       0       0       0
  4398 ;;      Locals:         0       1       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0
  4400 ;;      Totals:         0       1       0       0       0       0       0
  4401 ;;Total ram usage:        1 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    8
  4404 ;; This function calls:
  4405 ;;		_UART_buff_get
  4406 ;;		_UART_buff_put
  4407 ;; This function is called by:
  4408 ;;		_SYSTEM_Initialize
  4409 ;;		_putch
  4410 ;;		_receiveData
  4411 ;;		_sendData
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text27
  4416  001E6E                     __ptext27:
  4417                           	opt stack 0
  4418  001E6E                     _Send_put:
  4419                           	opt stack 19
  4420                           
  4421                           ;incstack = 0
  4422                           ;Send_put@_data stored from wreg
  4423  001E6E  0100               	movlb	0	; () banked
  4424  001E70  6FD6               	movwf	Send_put@_data& (0+255),b
  4425                           
  4426                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4427  001E72  0E00               	movlw	low _output_buffer
  4428  001E74  0100               	movlb	0	; () banked
  4429  001E76  6FD3               	movwf	UART_buff_put@_this& (0+255),b
  4430  001E78  0E04               	movlw	high _output_buffer
  4431  001E7A  0100               	movlb	0	; () banked
  4432  001E7C  6FD4               	movwf	(UART_buff_put@_this+1)& (0+255),b
  4433  001E7E  C0D6  F0D5         	movff	Send_put@_data,UART_buff_put@c
  4434  001E82  EC14  F008         	call	_UART_buff_put	;wreg free
  4435                           
  4436                           ;UART.c: 132: if (Transmit_stall == 1) {
  4437  001E86  0442               	decf	_Transmit_stall,w,c
  4438  001E88  A4D8               	btfss	status,2,c
  4439  001E8A  0012               	return	
  4440                           
  4441                           ;UART.c: 133: Transmit_stall = 0;
  4442  001E8C  0E00               	movlw	0
  4443  001E8E  6E42               	movwf	_Transmit_stall,c
  4444                           
  4445                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4446  001E90  0E00               	movlw	low _output_buffer
  4447  001E92  6E23               	movwf	UART_buff_get@_this,c
  4448  001E94  0E04               	movlw	high _output_buffer
  4449  001E96  6E24               	movwf	UART_buff_get@_this+1,c
  4450  001E98  EC40  F00B         	call	_UART_buff_get	;wreg free
  4451  001E9C  6EAD               	movwf	4013,c	;volatile
  4452                           
  4453                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4454  001E9E  889D               	bsf	3997,4,c	;volatile
  4455  001EA0  0012               	return	
  4456  001EA2                     __end_of_Send_put:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           intcon	equ	0xFF2
  4465                           intcon2	equ	0xFF1
  4466                           postinc0	equ	0xFEE
  4467                           wreg	equ	0xFE8
  4468                           postinc1	equ	0xFE6
  4469                           fsr1h	equ	0xFE2
  4470                           fsr1l	equ	0xFE1
  4471                           indf2	equ	0xFDF
  4472                           postinc2	equ	0xFDE
  4473                           postdec2	equ	0xFDD
  4474                           fsr2h	equ	0xFDA
  4475                           fsr2l	equ	0xFD9
  4476                           status	equ	0xFD8
  4477                           
  4478 ;; *************** function _UART_buff_put *****************
  4479 ;; Defined at:
  4480 ;;		line 68 in file "UART.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  _this           2    0[BANK0 ] PTR struct UART_ring_buf
  4483 ;;		 -> output_buffer(206), input_buffer(206), 
  4484 ;;  c               1    2[BANK0 ] const unsigned char 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4496 ;;      Params:         0       3       0       0       0       0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0
  4498 ;;      Temps:          2       0       0       0       0       0       0
  4499 ;;      Totals:         2       3       0       0       0       0       0
  4500 ;;Total ram usage:        5 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    7
  4503 ;; This function calls:
  4504 ;;		_UART_buff_modulo_inc
  4505 ;; This function is called by:
  4506 ;;		_Send_put
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text28
  4511  001028                     __ptext28:
  4512                           	opt stack 0
  4513  001028                     _UART_buff_put:
  4514                           	opt stack 19
  4515                           
  4516                           ;UART.c: 69: if (_this->count < 200) {
  4517                           
  4518                           ;incstack = 0
  4519  001028  0100               	movlb	0	; () banked
  4520  00102A  EE20 F0CC          	lfsr	2,204
  4521  00102E  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4522  001030  26D9               	addwf	fsr2l,f,c
  4523  001032  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4524  001034  22DA               	addwfc	fsr2h,f,c
  4525  001036  0E01               	movlw	1
  4526  001038  BEDB               	btfsc	plusw2,7,c
  4527  00103A  D007               	goto	l4166
  4528  00103C  0E01               	movlw	1
  4529  00103E  50DB               	movf	plusw2,w,c
  4530  001040  E140               	bnz	l4172
  4531  001042  0EC8               	movlw	200
  4532  001044  5CDE               	subwf	postinc2,w,c
  4533  001046  B0D8               	btfsc	status,0,c
  4534  001048  D03C               	goto	l4172
  4535  00104A                     l4166:
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;UART.c: 70: _this->buf[_this->head] = c;
  4539  00104A  0100               	movlb	0	; () banked
  4540  00104C  EE20 F0C8          	lfsr	2,200
  4541  001050  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4542  001052  26D9               	addwf	fsr2l,f,c
  4543  001054  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4544  001056  22DA               	addwfc	fsr2h,f,c
  4545  001058  CFDE F023          	movff	postinc2,??_UART_buff_put
  4546  00105C  CFDD F024          	movff	postdec2,??_UART_buff_put+1
  4547  001060  5023               	movf	??_UART_buff_put,w,c
  4548  001062  0100               	movlb	0	; () banked
  4549  001064  25D3               	addwf	UART_buff_put@_this& (0+255),w,b
  4550  001066  6ED9               	movwf	fsr2l,c
  4551  001068  5024               	movf	??_UART_buff_put+1,w,c
  4552  00106A  0100               	movlb	0	; () banked
  4553  00106C  21D4               	addwfc	(UART_buff_put@_this+1)& (0+255),w,b
  4554  00106E  6EDA               	movwf	fsr2h,c
  4555  001070  C0D5  FFDF         	movff	UART_buff_put@c,indf2
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4559  001074  0100               	movlb	0	; () banked
  4560  001076  EE20 F0C8          	lfsr	2,200
  4561  00107A  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4562  00107C  26D9               	addwf	fsr2l,f,c
  4563  00107E  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4564  001080  22DA               	addwfc	fsr2h,f,c
  4565  001082  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  4566  001086  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  4567  00108A  0E00               	movlw	0
  4568  00108C  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  4569  00108E  0EC8               	movlw	200
  4570  001090  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  4571  001092  ECC7  F00F         	call	_UART_buff_modulo_inc	;wreg free
  4572  001096  0100               	movlb	0	; () banked
  4573  001098  EE20 F0C8          	lfsr	2,200
  4574  00109C  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4575  00109E  26D9               	addwf	fsr2l,f,c
  4576  0010A0  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4577  0010A2  22DA               	addwfc	fsr2h,f,c
  4578  0010A4  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4579  0010A8  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;UART.c: 72: ++_this->count;
  4583  0010AC  0100               	movlb	0	; () banked
  4584  0010AE  EE20 F0CC          	lfsr	2,204
  4585  0010B2  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4586  0010B4  26D9               	addwf	fsr2l,f,c
  4587  0010B6  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4588  0010B8  22DA               	addwfc	fsr2h,f,c
  4589  0010BA  2ADE               	incf	postinc2,f,c
  4590  0010BC  0E00               	movlw	0
  4591  0010BE  22DD               	addwfc	postdec2,f,c
  4592                           
  4593                           ;UART.c: 73: } else {
  4594  0010C0  0012               	return	
  4595  0010C2                     l4172:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;UART.c: 74: _this->buf[_this->head] = c;
  4599  0010C2  0100               	movlb	0	; () banked
  4600  0010C4  EE20 F0C8          	lfsr	2,200
  4601  0010C8  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4602  0010CA  26D9               	addwf	fsr2l,f,c
  4603  0010CC  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4604  0010CE  22DA               	addwfc	fsr2h,f,c
  4605  0010D0  CFDE F023          	movff	postinc2,??_UART_buff_put
  4606  0010D4  CFDD F024          	movff	postdec2,??_UART_buff_put+1
  4607  0010D8  5023               	movf	??_UART_buff_put,w,c
  4608  0010DA  0100               	movlb	0	; () banked
  4609  0010DC  25D3               	addwf	UART_buff_put@_this& (0+255),w,b
  4610  0010DE  6ED9               	movwf	fsr2l,c
  4611  0010E0  5024               	movf	??_UART_buff_put+1,w,c
  4612  0010E2  0100               	movlb	0	; () banked
  4613  0010E4  21D4               	addwfc	(UART_buff_put@_this+1)& (0+255),w,b
  4614  0010E6  6EDA               	movwf	fsr2h,c
  4615  0010E8  C0D5  FFDF         	movff	UART_buff_put@c,indf2
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  4619  0010EC  0100               	movlb	0	; () banked
  4620  0010EE  EE20 F0C8          	lfsr	2,200
  4621  0010F2  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4622  0010F4  26D9               	addwf	fsr2l,f,c
  4623  0010F6  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4624  0010F8  22DA               	addwfc	fsr2h,f,c
  4625  0010FA  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  4626  0010FE  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  4627  001102  0E00               	movlw	0
  4628  001104  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  4629  001106  0EC8               	movlw	200
  4630  001108  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  4631  00110A  ECC7  F00F         	call	_UART_buff_modulo_inc	;wreg free
  4632  00110E  0100               	movlb	0	; () banked
  4633  001110  EE20 F0C8          	lfsr	2,200
  4634  001114  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4635  001116  26D9               	addwf	fsr2l,f,c
  4636  001118  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4637  00111A  22DA               	addwfc	fsr2h,f,c
  4638  00111C  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4639  001120  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4643  001124  0100               	movlb	0	; () banked
  4644  001126  EE20 F0CA          	lfsr	2,202
  4645  00112A  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4646  00112C  26D9               	addwf	fsr2l,f,c
  4647  00112E  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4648  001130  22DA               	addwfc	fsr2h,f,c
  4649  001132  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  4650  001136  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  4651  00113A  0E00               	movlw	0
  4652  00113C  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  4653  00113E  0EC8               	movlw	200
  4654  001140  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  4655  001142  ECC7  F00F         	call	_UART_buff_modulo_inc	;wreg free
  4656  001146  0100               	movlb	0	; () banked
  4657  001148  EE20 F0CA          	lfsr	2,202
  4658  00114C  51D3               	movf	UART_buff_put@_this& (0+255),w,b
  4659  00114E  26D9               	addwf	fsr2l,f,c
  4660  001150  51D4               	movf	(UART_buff_put@_this+1)& (0+255),w,b
  4661  001152  22DA               	addwfc	fsr2h,f,c
  4662  001154  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4663  001158  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4664  00115C  0012               	return	
  4665  00115E                     __end_of_UART_buff_put:
  4666                           	opt stack 0
  4667                           tblptru	equ	0xFF8
  4668                           tblptrh	equ	0xFF7
  4669                           tblptrl	equ	0xFF6
  4670                           tablat	equ	0xFF5
  4671                           prodh	equ	0xFF4
  4672                           prodl	equ	0xFF3
  4673                           intcon	equ	0xFF2
  4674                           intcon2	equ	0xFF1
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           postinc1	equ	0xFE6
  4678                           fsr1h	equ	0xFE2
  4679                           fsr1l	equ	0xFE1
  4680                           indf2	equ	0xFDF
  4681                           postinc2	equ	0xFDE
  4682                           postdec2	equ	0xFDD
  4683                           plusw2	equ	0xFDB
  4684                           fsr2h	equ	0xFDA
  4685                           fsr2l	equ	0xFD9
  4686                           status	equ	0xFD8
  4687                           
  4688 ;; *************** function _UART_buff_get *****************
  4689 ;; Defined at:
  4690 ;;		line 81 in file "UART.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
  4693 ;;		 -> output_buffer(206), input_buffer(206), 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  c               1    2[BANK0 ] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4705 ;;      Params:         2       0       0       0       0       0       0
  4706 ;;      Locals:         0       1       0       0       0       0       0
  4707 ;;      Temps:          0       2       0       0       0       0       0
  4708 ;;      Totals:         2       3       0       0       0       0       0
  4709 ;;Total ram usage:        5 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    7
  4712 ;; This function calls:
  4713 ;;		_UART_buff_modulo_inc
  4714 ;; This function is called by:
  4715 ;;		_Receive_get
  4716 ;;		_Send_put
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text29
  4721  001680                     __ptext29:
  4722                           	opt stack 0
  4723  001680                     _UART_buff_get:
  4724                           	opt stack 19
  4725                           
  4726                           ;UART.c: 82: unsigned char c;
  4727                           ;UART.c: 83: if (_this->count > 0) {
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;incstack = 0
  4731  001680  EE20 F0CC          	lfsr	2,204
  4732  001684  5023               	movf	UART_buff_get@_this,w,c
  4733  001686  26D9               	addwf	fsr2l,f,c
  4734  001688  5024               	movf	UART_buff_get@_this+1,w,c
  4735  00168A  22DA               	addwfc	fsr2h,f,c
  4736  00168C  0E01               	movlw	1
  4737  00168E  BEDB               	btfsc	plusw2,7,c
  4738  001690  D03F               	goto	l4186
  4739  001692  0E01               	movlw	1
  4740  001694  50DB               	movf	plusw2,w,c
  4741  001696  E103               	bnz	u3440
  4742  001698  04DE               	decf	postinc2,w,c
  4743  00169A  A0D8               	btfss	status,0,c
  4744  00169C  D039               	goto	l4186
  4745  00169E                     u3440:
  4746                           
  4747                           ;UART.c: 84: c = _this->buf[_this->tail];
  4748  00169E  EE20 F0CA          	lfsr	2,202
  4749  0016A2  5023               	movf	UART_buff_get@_this,w,c
  4750  0016A4  26D9               	addwf	fsr2l,f,c
  4751  0016A6  5024               	movf	UART_buff_get@_this+1,w,c
  4752  0016A8  22DA               	addwfc	fsr2h,f,c
  4753  0016AA  CFDE F0D3          	movff	postinc2,??_UART_buff_get
  4754  0016AE  CFDD F0D4          	movff	postdec2,??_UART_buff_get+1
  4755  0016B2  0100               	movlb	0	; () banked
  4756  0016B4  51D3               	movf	??_UART_buff_get& (0+255),w,b
  4757  0016B6  2423               	addwf	UART_buff_get@_this,w,c
  4758  0016B8  6ED9               	movwf	fsr2l,c
  4759  0016BA  0100               	movlb	0	; () banked
  4760  0016BC  51D4               	movf	(??_UART_buff_get+1)& (0+255),w,b
  4761  0016BE  2024               	addwfc	UART_buff_get@_this+1,w,c
  4762  0016C0  6EDA               	movwf	fsr2h,c
  4763  0016C2  50DF               	movf	indf2,w,c
  4764  0016C4  0100               	movlb	0	; () banked
  4765  0016C6  6FD5               	movwf	UART_buff_get@c& (0+255),b
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  4769  0016C8  EE20 F0CA          	lfsr	2,202
  4770  0016CC  5023               	movf	UART_buff_get@_this,w,c
  4771  0016CE  26D9               	addwf	fsr2l,f,c
  4772  0016D0  5024               	movf	UART_buff_get@_this+1,w,c
  4773  0016D2  22DA               	addwfc	fsr2h,f,c
  4774  0016D4  CFDE F01D          	movff	postinc2,UART_buff_modulo_inc@value
  4775  0016D8  CFDD F01E          	movff	postdec2,UART_buff_modulo_inc@value+1
  4776  0016DC  0E00               	movlw	0
  4777  0016DE  6E20               	movwf	UART_buff_modulo_inc@modulus+1,c
  4778  0016E0  0EC8               	movlw	200
  4779  0016E2  6E1F               	movwf	UART_buff_modulo_inc@modulus,c
  4780  0016E4  ECC7  F00F         	call	_UART_buff_modulo_inc	;wreg free
  4781  0016E8  EE20 F0CA          	lfsr	2,202
  4782  0016EC  5023               	movf	UART_buff_get@_this,w,c
  4783  0016EE  26D9               	addwf	fsr2l,f,c
  4784  0016F0  5024               	movf	UART_buff_get@_this+1,w,c
  4785  0016F2  22DA               	addwfc	fsr2h,f,c
  4786  0016F4  C01D  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  4787  0016F8  C01E  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  4788                           
  4789                           ;UART.c: 86: --_this->count;
  4790  0016FC  EE20 F0CC          	lfsr	2,204
  4791  001700  5023               	movf	UART_buff_get@_this,w,c
  4792  001702  26D9               	addwf	fsr2l,f,c
  4793  001704  5024               	movf	UART_buff_get@_this+1,w,c
  4794  001706  22DA               	addwfc	fsr2h,f,c
  4795  001708  06DE               	decf	postinc2,f,c
  4796  00170A  0E00               	movlw	0
  4797  00170C  5ADD               	subwfb	postdec2,f,c
  4798                           
  4799                           ;UART.c: 87: } else {
  4800  00170E  D003               	goto	l801
  4801  001710                     l4186:
  4802                           
  4803                           ;UART.c: 88: c = 0;
  4804  001710  0E00               	movlw	0
  4805  001712  0100               	movlb	0	; () banked
  4806  001714  6FD5               	movwf	UART_buff_get@c& (0+255),b
  4807  001716                     l801:
  4808                           
  4809                           ;UART.c: 89: }
  4810                           ;UART.c: 90: return (c);
  4811  001716  0100               	movlb	0	; () banked
  4812  001718  51D5               	movf	UART_buff_get@c& (0+255),w,b
  4813  00171A  0012               	return	
  4814  00171C                     __end_of_UART_buff_get:
  4815                           	opt stack 0
  4816                           tblptru	equ	0xFF8
  4817                           tblptrh	equ	0xFF7
  4818                           tblptrl	equ	0xFF6
  4819                           tablat	equ	0xFF5
  4820                           prodh	equ	0xFF4
  4821                           prodl	equ	0xFF3
  4822                           intcon	equ	0xFF2
  4823                           intcon2	equ	0xFF1
  4824                           postinc0	equ	0xFEE
  4825                           wreg	equ	0xFE8
  4826                           postinc1	equ	0xFE6
  4827                           fsr1h	equ	0xFE2
  4828                           fsr1l	equ	0xFE1
  4829                           indf2	equ	0xFDF
  4830                           postinc2	equ	0xFDE
  4831                           postdec2	equ	0xFDD
  4832                           plusw2	equ	0xFDB
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8
  4836                           
  4837 ;; *************** function _UART_buff_modulo_inc *****************
  4838 ;; Defined at:
  4839 ;;		line 106 in file "UART.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  value           2   28[COMRAM] const unsigned int 
  4842 ;;  modulus         2   30[COMRAM] const unsigned int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  my_value        2   32[COMRAM] unsigned int 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  2   28[COMRAM] unsigned int 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4854 ;;      Params:         4       0       0       0       0       0       0
  4855 ;;      Locals:         2       0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0
  4857 ;;      Totals:         6       0       0       0       0       0       0
  4858 ;;Total ram usage:        6 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    6
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_UART_buff_put
  4865 ;;		_UART_buff_get
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text30
  4870  001F8E                     __ptext30:
  4871                           	opt stack 0
  4872  001F8E                     _UART_buff_modulo_inc:
  4873                           	opt stack 19
  4874                           
  4875                           ;UART.c: 107: unsigned int my_value = value + 1;
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;incstack = 0
  4879  001F8E  0E01               	movlw	1
  4880  001F90  241D               	addwf	UART_buff_modulo_inc@value,w,c
  4881  001F92  6E21               	movwf	UART_buff_modulo_inc@my_value,c
  4882  001F94  0E00               	movlw	0
  4883  001F96  201E               	addwfc	UART_buff_modulo_inc@value+1,w,c
  4884  001F98  6E22               	movwf	UART_buff_modulo_inc@my_value+1,c
  4885                           
  4886                           ;UART.c: 108: if (my_value >= modulus) {
  4887  001F9A  501F               	movf	UART_buff_modulo_inc@modulus,w,c
  4888  001F9C  5C21               	subwf	UART_buff_modulo_inc@my_value,w,c
  4889  001F9E  5020               	movf	UART_buff_modulo_inc@modulus+1,w,c
  4890  001FA0  5822               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  4891  001FA2  A0D8               	btfss	status,0,c
  4892  001FA4  D004               	goto	l4152
  4893                           
  4894                           ;UART.c: 109: my_value = 0;
  4895  001FA6  0E00               	movlw	0
  4896  001FA8  6E22               	movwf	UART_buff_modulo_inc@my_value+1,c
  4897  001FAA  0E00               	movlw	0
  4898  001FAC  6E21               	movwf	UART_buff_modulo_inc@my_value,c
  4899  001FAE                     l4152:
  4900                           
  4901                           ;UART.c: 110: }
  4902                           ;UART.c: 111: return (my_value);
  4903  001FAE  C021  F01D         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  4904  001FB2  C022  F01E         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  4905  001FB6  0012               	return	
  4906  001FB8                     __end_of_UART_buff_modulo_inc:
  4907                           	opt stack 0
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           prodh	equ	0xFF4
  4913                           prodl	equ	0xFF3
  4914                           intcon	equ	0xFF2
  4915                           intcon2	equ	0xFF1
  4916                           postinc0	equ	0xFEE
  4917                           wreg	equ	0xFE8
  4918                           postinc1	equ	0xFE6
  4919                           fsr1h	equ	0xFE2
  4920                           fsr1l	equ	0xFE1
  4921                           indf2	equ	0xFDF
  4922                           postinc2	equ	0xFDE
  4923                           postdec2	equ	0xFDD
  4924                           plusw2	equ	0xFDB
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function ___lwmod *****************
  4930 ;; Defined at:
  4931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  dividend        2    0[BANK0 ] unsigned int 
  4934 ;;  divisor         2    2[BANK0 ] unsigned int 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  counter         1   35[COMRAM] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  2    0[BANK0 ] unsigned int 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4946 ;;      Params:         0       4       0       0       0       0       0
  4947 ;;      Locals:         1       0       0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0
  4949 ;;      Totals:         1       4       0       0       0       0       0
  4950 ;;Total ram usage:        5 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    6
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_printf
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text31
  4961  001B76                     __ptext31:
  4962                           	opt stack 0
  4963  001B76                     ___lwmod:
  4964                           	opt stack 22
  4965                           
  4966                           ;incstack = 0
  4967  001B76  0100               	movlb	0	; () banked
  4968  001B78  51D5               	movf	___lwmod@divisor& (0+255),w,b
  4969  001B7A  0100               	movlb	0	; () banked
  4970  001B7C  11D6               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4971  001B7E  B4D8               	btfsc	status,2,c
  4972  001B80  D023               	goto	l1371
  4973                           
  4974                           ; BSR set to: 0
  4975  001B82  0E01               	movlw	1
  4976  001B84  6E24               	movwf	___lwmod@counter,c
  4977  001B86  D005               	goto	l4340
  4978  001B88                     l4338:
  4979                           
  4980                           ; BSR set to: 0
  4981  001B88  0100               	movlb	0	; () banked
  4982  001B8A  90D8               	bcf	status,0,c
  4983  001B8C  37D5               	rlcf	___lwmod@divisor& (0+255),f,b
  4984  001B8E  37D6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4985  001B90  2A24               	incf	___lwmod@counter,f,c
  4986  001B92                     l4340:
  4987                           
  4988                           ; BSR set to: 0
  4989  001B92  0100               	movlb	0	; () banked
  4990  001B94  AFD6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4991  001B96  D7F8               	goto	l4338
  4992  001B98                     l4342:
  4993                           
  4994                           ; BSR set to: 0
  4995  001B98  0100               	movlb	0	; () banked
  4996  001B9A  51D5               	movf	___lwmod@divisor& (0+255),w,b
  4997  001B9C  0100               	movlb	0	; () banked
  4998  001B9E  5DD3               	subwf	___lwmod@dividend& (0+255),w,b
  4999  001BA0  0100               	movlb	0	; () banked
  5000  001BA2  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5001  001BA4  0100               	movlb	0	; () banked
  5002  001BA6  59D4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5003  001BA8  A0D8               	btfss	status,0,c
  5004  001BAA  D008               	goto	l4346
  5005                           
  5006                           ; BSR set to: 0
  5007  001BAC  0100               	movlb	0	; () banked
  5008  001BAE  51D5               	movf	___lwmod@divisor& (0+255),w,b
  5009  001BB0  0100               	movlb	0	; () banked
  5010  001BB2  5FD3               	subwf	___lwmod@dividend& (0+255),f,b
  5011  001BB4  0100               	movlb	0	; () banked
  5012  001BB6  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5013  001BB8  0100               	movlb	0	; () banked
  5014  001BBA  5BD4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5015  001BBC                     l4346:
  5016                           
  5017                           ; BSR set to: 0
  5018  001BBC  0100               	movlb	0	; () banked
  5019  001BBE  90D8               	bcf	status,0,c
  5020  001BC0  33D6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5021  001BC2  33D5               	rrcf	___lwmod@divisor& (0+255),f,b
  5022                           
  5023                           ; BSR set to: 0
  5024  001BC4  2E24               	decfsz	___lwmod@counter,f,c
  5025  001BC6  D7E8               	goto	l4342
  5026  001BC8                     l1371:
  5027                           
  5028                           ; BSR set to: 0
  5029  001BC8  C0D3  F0D3         	movff	___lwmod@dividend,?___lwmod
  5030  001BCC  C0D4  F0D4         	movff	___lwmod@dividend+1,?___lwmod+1
  5031                           
  5032                           ; BSR set to: 0
  5033  001BD0  0012               	return		;funcret
  5034  001BD2                     __end_of___lwmod:
  5035                           	opt stack 0
  5036                           tblptru	equ	0xFF8
  5037                           tblptrh	equ	0xFF7
  5038                           tblptrl	equ	0xFF6
  5039                           tablat	equ	0xFF5
  5040                           prodh	equ	0xFF4
  5041                           prodl	equ	0xFF3
  5042                           intcon	equ	0xFF2
  5043                           intcon2	equ	0xFF1
  5044                           postinc0	equ	0xFEE
  5045                           wreg	equ	0xFE8
  5046                           postinc1	equ	0xFE6
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           indf2	equ	0xFDF
  5050                           postinc2	equ	0xFDE
  5051                           postdec2	equ	0xFDD
  5052                           plusw2	equ	0xFDB
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function ___lwdiv *****************
  5058 ;; Defined at:
  5059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  dividend        2   28[COMRAM] unsigned int 
  5062 ;;  divisor         2   30[COMRAM] unsigned int 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  quotient        2   33[COMRAM] unsigned int 
  5065 ;;  counter         1   32[COMRAM] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  2   28[COMRAM] unsigned int 
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5075 ;;      Params:         4       0       0       0       0       0       0
  5076 ;;      Locals:         3       0       0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0
  5078 ;;      Totals:         7       0       0       0       0       0       0
  5079 ;;Total ram usage:        7 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    6
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_printf
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text32
  5090  001CD6                     __ptext32:
  5091                           	opt stack 0
  5092  001CD6                     ___lwdiv:
  5093                           	opt stack 22
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;incstack = 0
  5097  001CD6  0E00               	movlw	0
  5098  001CD8  6E23               	movwf	___lwdiv@quotient+1,c
  5099  001CDA  0E00               	movlw	0
  5100  001CDC  6E22               	movwf	___lwdiv@quotient,c
  5101  001CDE  501F               	movf	___lwdiv@divisor,w,c
  5102  001CE0  1020               	iorwf	___lwdiv@divisor+1,w,c
  5103  001CE2  B4D8               	btfsc	status,2,c
  5104  001CE4  D01C               	goto	l1361
  5105  001CE6  0E01               	movlw	1
  5106  001CE8  6E21               	movwf	___lwdiv@counter,c
  5107  001CEA  D004               	goto	l4320
  5108  001CEC                     l4318:
  5109  001CEC  90D8               	bcf	status,0,c
  5110  001CEE  361F               	rlcf	___lwdiv@divisor,f,c
  5111  001CF0  3620               	rlcf	___lwdiv@divisor+1,f,c
  5112  001CF2  2A21               	incf	___lwdiv@counter,f,c
  5113  001CF4                     l4320:
  5114  001CF4  AE20               	btfss	___lwdiv@divisor+1,7,c
  5115  001CF6  D7FA               	goto	l4318
  5116  001CF8                     l4322:
  5117  001CF8  90D8               	bcf	status,0,c
  5118  001CFA  3622               	rlcf	___lwdiv@quotient,f,c
  5119  001CFC  3623               	rlcf	___lwdiv@quotient+1,f,c
  5120  001CFE  501F               	movf	___lwdiv@divisor,w,c
  5121  001D00  5C1D               	subwf	___lwdiv@dividend,w,c
  5122  001D02  5020               	movf	___lwdiv@divisor+1,w,c
  5123  001D04  581E               	subwfb	___lwdiv@dividend+1,w,c
  5124  001D06  A0D8               	btfss	status,0,c
  5125  001D08  D005               	goto	l4330
  5126  001D0A  501F               	movf	___lwdiv@divisor,w,c
  5127  001D0C  5E1D               	subwf	___lwdiv@dividend,f,c
  5128  001D0E  5020               	movf	___lwdiv@divisor+1,w,c
  5129  001D10  5A1E               	subwfb	___lwdiv@dividend+1,f,c
  5130  001D12  8022               	bsf	___lwdiv@quotient,0,c
  5131  001D14                     l4330:
  5132  001D14  90D8               	bcf	status,0,c
  5133  001D16  3220               	rrcf	___lwdiv@divisor+1,f,c
  5134  001D18  321F               	rrcf	___lwdiv@divisor,f,c
  5135  001D1A  2E21               	decfsz	___lwdiv@counter,f,c
  5136  001D1C  D7ED               	goto	l4322
  5137  001D1E                     l1361:
  5138  001D1E  C022  F01D         	movff	___lwdiv@quotient,?___lwdiv
  5139  001D22  C023  F01E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5140  001D26  0012               	return		;funcret
  5141  001D28                     __end_of___lwdiv:
  5142                           	opt stack 0
  5143                           tblptru	equ	0xFF8
  5144                           tblptrh	equ	0xFF7
  5145                           tblptrl	equ	0xFF6
  5146                           tablat	equ	0xFF5
  5147                           prodh	equ	0xFF4
  5148                           prodl	equ	0xFF3
  5149                           intcon	equ	0xFF2
  5150                           intcon2	equ	0xFF1
  5151                           postinc0	equ	0xFEE
  5152                           wreg	equ	0xFE8
  5153                           postinc1	equ	0xFE6
  5154                           fsr1h	equ	0xFE2
  5155                           fsr1l	equ	0xFE1
  5156                           indf2	equ	0xFDF
  5157                           postinc2	equ	0xFDE
  5158                           postdec2	equ	0xFDD
  5159                           plusw2	equ	0xFDB
  5160                           fsr2h	equ	0xFDA
  5161                           fsr2l	equ	0xFD9
  5162                           status	equ	0xFD8
  5163                           
  5164 ;; *************** function ___wmul *****************
  5165 ;; Defined at:
  5166 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  multiplier      2   28[COMRAM] unsigned int 
  5169 ;;  multiplicand    2   30[COMRAM] unsigned int 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  product         2   32[COMRAM] unsigned int 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  2   28[COMRAM] unsigned int 
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, status,0, prodl, prodh
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5181 ;;      Params:         4       0       0       0       0       0       0
  5182 ;;      Locals:         2       0       0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0
  5184 ;;      Totals:         6       0       0       0       0       0       0
  5185 ;;Total ram usage:        6 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:    6
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_FuseSystem
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text33
  5196  002008                     __ptext33:
  5197                           	opt stack 0
  5198  002008                     ___wmul:
  5199                           	opt stack 23
  5200                           
  5201                           ;incstack = 0
  5202  002008  501D               	movf	___wmul@multiplier,w,c
  5203  00200A  021F               	mulwf	___wmul@multiplicand,c
  5204  00200C  CFF3 F021          	movff	prodl,___wmul@product
  5205  002010  CFF4 F022          	movff	prodh,___wmul@product+1
  5206  002014  501D               	movf	___wmul@multiplier,w,c
  5207  002016  0220               	mulwf	___wmul@multiplicand+1,c
  5208  002018  50F3               	movf	prodl,w,c
  5209  00201A  2622               	addwf	___wmul@product+1,f,c
  5210  00201C  501E               	movf	___wmul@multiplier+1,w,c
  5211  00201E  021F               	mulwf	___wmul@multiplicand,c
  5212  002020  50F3               	movf	prodl,w,c
  5213  002022  2622               	addwf	___wmul@product+1,f,c
  5214  002024  C021  F01D         	movff	___wmul@product,?___wmul
  5215  002028  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  5216  00202C  0012               	return	
  5217  00202E                     __end_of___wmul:
  5218                           	opt stack 0
  5219                           tblptru	equ	0xFF8
  5220                           tblptrh	equ	0xFF7
  5221                           tblptrl	equ	0xFF6
  5222                           tablat	equ	0xFF5
  5223                           prodh	equ	0xFF4
  5224                           prodl	equ	0xFF3
  5225                           intcon	equ	0xFF2
  5226                           intcon2	equ	0xFF1
  5227                           postinc0	equ	0xFEE
  5228                           wreg	equ	0xFE8
  5229                           postinc1	equ	0xFE6
  5230                           fsr1h	equ	0xFE2
  5231                           fsr1l	equ	0xFE1
  5232                           indf2	equ	0xFDF
  5233                           postinc2	equ	0xFDE
  5234                           postdec2	equ	0xFDD
  5235                           plusw2	equ	0xFDB
  5236                           fsr2h	equ	0xFDA
  5237                           fsr2l	equ	0xFD9
  5238                           status	equ	0xFD8
  5239                           
  5240 ;; *************** function _EnableSlavePower *****************
  5241 ;; Defined at:
  5242 ;;		line 35 in file "PDU.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  slave           1    wreg     enum E6
  5245 ;;  onof            2   34[COMRAM] int 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  slave           1    4[BANK0 ] enum E6
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5257 ;;      Params:         2       0       0       0       0       0       0
  5258 ;;      Locals:         0       1       0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0
  5260 ;;      Totals:         2       1       0       0       0       0       0
  5261 ;;Total ram usage:        3 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    7
  5264 ;; This function calls:
  5265 ;;		_SetPin595
  5266 ;; This function is called by:
  5267 ;;		_PDUStartup
  5268 ;;		_FuseSystem
  5269 ;;		_main
  5270 ;;		_processPowerRequest
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text34
  5275  0014BC                     __ptext34:
  5276                           	opt stack 0
  5277  0014BC                     _EnableSlavePower:
  5278                           	opt stack 22
  5279                           
  5280                           ;incstack = 0
  5281                           ;EnableSlavePower@slave stored from wreg
  5282  0014BC  0100               	movlb	0	; () banked
  5283  0014BE  6FD7               	movwf	EnableSlavePower@slave& (0+255),b
  5284                           
  5285                           ;PDU.c: 36: switch (slave) {
  5286  0014C0  D05C               	goto	l4458
  5287  0014C2                     l4442:
  5288                           
  5289                           ;PDU.c: 38: SetPin595(2, 6, onof);
  5290  0014C2  0E00               	movlw	0
  5291  0014C4  6E1E               	movwf	SetPin595@Reg+1,c
  5292  0014C6  0E02               	movlw	2
  5293  0014C8  6E1D               	movwf	SetPin595@Reg,c
  5294  0014CA  0E00               	movlw	0
  5295  0014CC  6E20               	movwf	SetPin595@pin+1,c
  5296  0014CE  0E06               	movlw	6
  5297  0014D0  6E1F               	movwf	SetPin595@pin,c
  5298  0014D2  C023  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5299  0014D6  C024  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5300  0014DA  EC21  F00D         	call	_SetPin595	;wreg free
  5301                           
  5302                           ;PDU.c: 39: break;
  5303  0014DE  0012               	return	
  5304  0014E0                     l4444:
  5305                           
  5306                           ;PDU.c: 41: SetPin595(1, 1, onof);
  5307  0014E0  0E00               	movlw	0
  5308  0014E2  6E1E               	movwf	SetPin595@Reg+1,c
  5309  0014E4  0E01               	movlw	1
  5310  0014E6  6E1D               	movwf	SetPin595@Reg,c
  5311  0014E8  0E00               	movlw	0
  5312  0014EA  6E20               	movwf	SetPin595@pin+1,c
  5313  0014EC  0E01               	movlw	1
  5314  0014EE  6E1F               	movwf	SetPin595@pin,c
  5315  0014F0  C023  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5316  0014F4  C024  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5317  0014F8  EC21  F00D         	call	_SetPin595	;wreg free
  5318                           
  5319                           ;PDU.c: 42: break;
  5320  0014FC  0012               	return	
  5321  0014FE                     l4446:
  5322                           
  5323                           ;PDU.c: 44: SetPin595(1, 6, onof);
  5324  0014FE  0E00               	movlw	0
  5325  001500  6E1E               	movwf	SetPin595@Reg+1,c
  5326  001502  0E01               	movlw	1
  5327  001504  6E1D               	movwf	SetPin595@Reg,c
  5328  001506  0E00               	movlw	0
  5329  001508  6E20               	movwf	SetPin595@pin+1,c
  5330  00150A  0E06               	movlw	6
  5331  00150C  6E1F               	movwf	SetPin595@pin,c
  5332  00150E  C023  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5333  001512  C024  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5334  001516  EC21  F00D         	call	_SetPin595	;wreg free
  5335                           
  5336                           ;PDU.c: 45: MCSOn = onof;
  5337  00151A  C023  F03A         	movff	EnableSlavePower@onof,_MCSOn
  5338                           
  5339                           ;PDU.c: 46: break;
  5340  00151E  0012               	return	
  5341  001520                     l4450:
  5342                           
  5343                           ;PDU.c: 48: SetPin595(2, 1, onof);
  5344  001520  0E00               	movlw	0
  5345  001522  6E1E               	movwf	SetPin595@Reg+1,c
  5346  001524  0E02               	movlw	2
  5347  001526  6E1D               	movwf	SetPin595@Reg,c
  5348  001528  0E00               	movlw	0
  5349  00152A  6E20               	movwf	SetPin595@pin+1,c
  5350  00152C  0E01               	movlw	1
  5351  00152E  6E1F               	movwf	SetPin595@pin,c
  5352  001530  C023  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5353  001534  C024  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5354  001538  EC21  F00D         	call	_SetPin595	;wreg free
  5355                           
  5356                           ;PDU.c: 49: break;
  5357  00153C  0012               	return	
  5358  00153E                     l4452:
  5359                           
  5360                           ;PDU.c: 51: SetPin595(3, 6, onof);
  5361  00153E  0E00               	movlw	0
  5362  001540  6E1E               	movwf	SetPin595@Reg+1,c
  5363  001542  0E03               	movlw	3
  5364  001544  6E1D               	movwf	SetPin595@Reg,c
  5365  001546  0E00               	movlw	0
  5366  001548  6E20               	movwf	SetPin595@pin+1,c
  5367  00154A  0E06               	movlw	6
  5368  00154C  6E1F               	movwf	SetPin595@pin,c
  5369  00154E  C023  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5370  001552  C024  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5371  001556  EC21  F00D         	call	_SetPin595	;wreg free
  5372                           
  5373                           ;PDU.c: 52: break;
  5374  00155A  0012               	return	
  5375  00155C                     l4454:
  5376                           
  5377                           ;PDU.c: 54: SetPin595(3, 1, onof);
  5378  00155C  0E00               	movlw	0
  5379  00155E  6E1E               	movwf	SetPin595@Reg+1,c
  5380  001560  0E03               	movlw	3
  5381  001562  6E1D               	movwf	SetPin595@Reg,c
  5382  001564  0E00               	movlw	0
  5383  001566  6E20               	movwf	SetPin595@pin+1,c
  5384  001568  0E01               	movlw	1
  5385  00156A  6E1F               	movwf	SetPin595@pin,c
  5386  00156C  C023  F021         	movff	EnableSlavePower@onof,SetPin595@value
  5387  001570  C024  F022         	movff	EnableSlavePower@onof+1,SetPin595@value+1
  5388  001574  EC21  F00D         	call	_SetPin595	;wreg free
  5389                           
  5390                           ;PDU.c: 56: }
  5391                           
  5392                           ;PDU.c: 55: break;
  5393  001578  0012               	return	
  5394  00157A                     l4458:
  5395  00157A  0100               	movlb	0	; () banked
  5396  00157C  51D7               	movf	EnableSlavePower@slave& (0+255),w,b
  5397                           
  5398                           ; Switch size 1, requested type "space"
  5399                           ; Number of cases is 6, Range of values is 1 to 6
  5400                           ; switch strategies available:
  5401                           ; Name         Instructions Cycles
  5402                           ; simple_byte           19    10 (average)
  5403                           ;	Chosen strategy is simple_byte
  5404  00157E  0A01               	xorlw	1	; case 1
  5405  001580  B4D8               	btfsc	status,2,c
  5406  001582  D7CE               	goto	l4450
  5407  001584  0A03               	xorlw	3	; case 2
  5408  001586  B4D8               	btfsc	status,2,c
  5409  001588  D7BA               	goto	l4446
  5410  00158A  0A01               	xorlw	1	; case 3
  5411  00158C  B4D8               	btfsc	status,2,c
  5412  00158E  D799               	goto	l4442
  5413  001590  0A07               	xorlw	7	; case 4
  5414  001592  B4D8               	btfsc	status,2,c
  5415  001594  D7A5               	goto	l4444
  5416  001596  0A01               	xorlw	1	; case 5
  5417  001598  B4D8               	btfsc	status,2,c
  5418  00159A  D7D1               	goto	l4452
  5419  00159C  0A03               	xorlw	3	; case 6
  5420  00159E  A4D8               	btfss	status,2,c
  5421  0015A0  0012               	return	
  5422  0015A2  D7DC               	goto	l4454
  5423  0015A4                     __end_of_EnableSlavePower:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           intcon	equ	0xFF2
  5432                           intcon2	equ	0xFF1
  5433                           postinc0	equ	0xFEE
  5434                           wreg	equ	0xFE8
  5435                           postinc1	equ	0xFE6
  5436                           fsr1h	equ	0xFE2
  5437                           fsr1l	equ	0xFE1
  5438                           indf2	equ	0xFDF
  5439                           postinc2	equ	0xFDE
  5440                           postdec2	equ	0xFDD
  5441                           plusw2	equ	0xFDB
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function _SetPin595 *****************
  5447 ;; Defined at:
  5448 ;;		line 32 in file "Shift595.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  Reg             2   28[COMRAM] int 
  5451 ;;  pin             2   30[COMRAM] int 
  5452 ;;  value           2   32[COMRAM] int 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5464 ;;      Params:         6       0       0       0       0       0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0
  5466 ;;      Temps:          0       4       0       0       0       0       0
  5467 ;;      Totals:         6       4       0       0       0       0       0
  5468 ;;Total ram usage:       10 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    6
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_EnableSlavePower
  5475 ;;		_main
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text35
  5480  001A42                     __ptext35:
  5481                           	opt stack 0
  5482  001A42                     _SetPin595:
  5483                           	opt stack 24
  5484                           
  5485                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  5486                           
  5487                           ;incstack = 0
  5488  001A42  0EF0               	movlw	240
  5489  001A44  0100               	movlb	0	; () banked
  5490  001A46  6FD3               	movwf	??_SetPin595& (0+255),b
  5491  001A48  0EFF               	movlw	255
  5492  001A4A  0100               	movlb	0	; () banked
  5493  001A4C  6FD4               	movwf	(??_SetPin595+1)& (0+255),b
  5494  001A4E  C01D  F0D5         	movff	SetPin595@Reg,??_SetPin595+2
  5495  001A52  C01E  F0D6         	movff	SetPin595@Reg+1,??_SetPin595+3
  5496  001A56  0100               	movlb	0	; () banked
  5497  001A58  90D8               	bcf	status,0,c
  5498  001A5A  37D5               	rlcf	(??_SetPin595+2)& (0+255),f,b
  5499  001A5C  37D6               	rlcf	(??_SetPin595+3)& (0+255),f,b
  5500  001A5E  0100               	movlb	0	; () banked
  5501  001A60  90D8               	bcf	status,0,c
  5502  001A62  37D5               	rlcf	(??_SetPin595+2)& (0+255),f,b
  5503  001A64  37D6               	rlcf	(??_SetPin595+3)& (0+255),f,b
  5504  001A66  0100               	movlb	0	; () banked
  5505  001A68  90D8               	bcf	status,0,c
  5506  001A6A  37D5               	rlcf	(??_SetPin595+2)& (0+255),f,b
  5507  001A6C  37D6               	rlcf	(??_SetPin595+3)& (0+255),f,b
  5508  001A6E  501F               	movf	SetPin595@pin,w,c
  5509  001A70  0100               	movlb	0	; () banked
  5510  001A72  27D5               	addwf	(??_SetPin595+2)& (0+255),f,b
  5511  001A74  5020               	movf	SetPin595@pin+1,w,c
  5512  001A76  0100               	movlb	0	; () banked
  5513  001A78  23D6               	addwfc	(??_SetPin595+3)& (0+255),f,b
  5514  001A7A  90D8               	bcf	status,0,c
  5515  001A7C  0100               	movlb	0	; () banked
  5516  001A7E  37D5               	rlcf	(??_SetPin595+2)& (0+255),f,b
  5517  001A80  37D6               	rlcf	(??_SetPin595+3)& (0+255),f,b
  5518  001A82  0100               	movlb	0	; () banked
  5519  001A84  51D3               	movf	??_SetPin595& (0+255),w,b
  5520  001A86  0100               	movlb	0	; () banked
  5521  001A88  27D5               	addwf	(??_SetPin595+2)& (0+255),f,b
  5522  001A8A  0100               	movlb	0	; () banked
  5523  001A8C  51D4               	movf	(??_SetPin595+1)& (0+255),w,b
  5524  001A8E  0100               	movlb	0	; () banked
  5525  001A90  23D6               	addwfc	(??_SetPin595+3)& (0+255),f,b
  5526  001A92  0E00               	movlw	low _registers
  5527  001A94  0100               	movlb	0	; () banked
  5528  001A96  25D5               	addwf	(??_SetPin595+2)& (0+255),w,b
  5529  001A98  6ED9               	movwf	fsr2l,c
  5530  001A9A  0E01               	movlw	high _registers
  5531  001A9C  0100               	movlb	0	; () banked
  5532  001A9E  21D6               	addwfc	(??_SetPin595+3)& (0+255),w,b
  5533  001AA0  6EDA               	movwf	fsr2h,c
  5534  001AA2  C021  FFDE         	movff	SetPin595@value,postinc2
  5535  001AA6  C022  FFDD         	movff	SetPin595@value+1,postdec2
  5536                           
  5537                           ; BSR set to: 0
  5538  001AAA  0012               	return		;funcret
  5539  001AAC                     __end_of_SetPin595:
  5540                           	opt stack 0
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           intcon	equ	0xFF2
  5548                           intcon2	equ	0xFF1
  5549                           postinc0	equ	0xFEE
  5550                           wreg	equ	0xFE8
  5551                           postinc1	equ	0xFE6
  5552                           fsr1h	equ	0xFE2
  5553                           fsr1l	equ	0xFE1
  5554                           indf2	equ	0xFDF
  5555                           postinc2	equ	0xFDE
  5556                           postdec2	equ	0xFDD
  5557                           plusw2	equ	0xFDB
  5558                           fsr2h	equ	0xFDA
  5559                           fsr2l	equ	0xFD9
  5560                           status	equ	0xFD8
  5561                           
  5562 ;; *************** function _DATAEE_WriteByte *****************
  5563 ;; Defined at:
  5564 ;;		line 121 in file "mcc_generated_files/memory.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  bAdd            1    wreg     unsigned char 
  5567 ;;  bData           1   28[COMRAM] unsigned char 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  bAdd            1   29[COMRAM] unsigned char 
  5570 ;;  GIEBitValue     1   30[COMRAM] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5580 ;;      Params:         1       0       0       0       0       0       0
  5581 ;;      Locals:         2       0       0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0
  5583 ;;      Totals:         3       0       0       0       0       0       0
  5584 ;;Total ram usage:        3 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    6
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_main
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text36
  5595  001E04                     __ptext36:
  5596                           	opt stack 0
  5597  001E04                     _DATAEE_WriteByte:
  5598                           	opt stack 24
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;incstack = 0
  5602                           ;DATAEE_WriteByte@bAdd stored from wreg
  5603  001E04  6E1E               	movwf	DATAEE_WriteByte@bAdd,c
  5604                           
  5605                           ;memory.c: 123: uint8_t GIEBitValue = INTCONbits.GIE;
  5606  001E06  0E00               	movlw	0
  5607  001E08  BEF2               	btfsc	intcon,7,c	;volatile
  5608  001E0A  0E01               	movlw	1
  5609  001E0C  6E1F               	movwf	DATAEE_WriteByte@GIEBitValue,c
  5610                           
  5611                           ;memory.c: 125: EEADR = (bAdd & 0xFF);
  5612  001E0E  C01E  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
  5613                           
  5614                           ;memory.c: 126: EEDATA = bData;
  5615  001E12  C01D  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
  5616                           
  5617                           ;memory.c: 127: EECON1bits.EEPGD = 0;
  5618  001E16  9EA6               	bcf	4006,7,c	;volatile
  5619                           
  5620                           ;memory.c: 128: EECON1bits.CFGS = 0;
  5621  001E18  9CA6               	bcf	4006,6,c	;volatile
  5622                           
  5623                           ;memory.c: 129: EECON1bits.WREN = 1;
  5624  001E1A  84A6               	bsf	4006,2,c	;volatile
  5625                           
  5626                           ;memory.c: 130: INTCONbits.GIE = 0;
  5627  001E1C  9EF2               	bcf	intcon,7,c	;volatile
  5628                           
  5629                           ;memory.c: 131: EECON2 = 0x55;
  5630  001E1E  0E55               	movlw	85
  5631  001E20  6EA7               	movwf	4007,c	;volatile
  5632                           
  5633                           ;memory.c: 132: EECON2 = 0xAA;
  5634  001E22  0EAA               	movlw	170
  5635  001E24  6EA7               	movwf	4007,c	;volatile
  5636                           
  5637                           ;memory.c: 133: EECON1bits.WR = 1;
  5638  001E26  82A6               	bsf	4006,1,c	;volatile
  5639  001E28                     l168:
  5640  001E28  B2A6               	btfsc	4006,1,c	;volatile
  5641  001E2A  D7FE               	goto	l168
  5642                           
  5643                           ;memory.c: 137: }
  5644                           ;memory.c: 139: EECON1bits.WREN = 0;
  5645  001E2C  94A6               	bcf	4006,2,c	;volatile
  5646                           
  5647                           ;memory.c: 140: INTCONbits.GIE = GIEBitValue;
  5648  001E2E  B01F               	btfsc	DATAEE_WriteByte@GIEBitValue,0,c
  5649  001E30  D002               	bra	u3745
  5650  001E32  9EF2               	bcf	intcon,7,c	;volatile
  5651  001E34  D001               	bra	u3746
  5652  001E36                     u3745:
  5653  001E36  8EF2               	bsf	intcon,7,c	;volatile
  5654  001E38                     u3746:
  5655  001E38  0012               	return		;funcret
  5656  001E3A                     __end_of_DATAEE_WriteByte:
  5657                           	opt stack 0
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           prodh	equ	0xFF4
  5663                           prodl	equ	0xFF3
  5664                           intcon	equ	0xFF2
  5665                           intcon2	equ	0xFF1
  5666                           postinc0	equ	0xFEE
  5667                           wreg	equ	0xFE8
  5668                           postinc1	equ	0xFE6
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           indf2	equ	0xFDF
  5672                           postinc2	equ	0xFDE
  5673                           postdec2	equ	0xFDD
  5674                           plusw2	equ	0xFDB
  5675                           fsr2h	equ	0xFDA
  5676                           fsr2l	equ	0xFD9
  5677                           status	equ	0xFD8
  5678                           
  5679 ;; *************** function _INTERRUPT_InterruptManager *****************
  5680 ;; Defined at:
  5681 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;		None
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;		None
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      void 
  5688 ;; Registers used:
  5689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5695 ;;      Params:         0       0       0       0       0       0       0
  5696 ;;      Locals:         0       0       0       0       0       0       0
  5697 ;;      Temps:         14       0       0       0       0       0       0
  5698 ;;      Totals:        14       0       0       0       0       0       0
  5699 ;;Total ram usage:       14 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    5
  5702 ;; This function calls:
  5703 ;;		_ADC_ISR
  5704 ;;		_EUSART1_Receive_ISR
  5705 ;;		_EUSART1_Transmit_ISR
  5706 ;;		_TMR1_ISR
  5707 ;; This function is called by:
  5708 ;;		Interrupt level 2
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	intcode
  5713  000008                     __pintcode:
  5714                           	opt stack 0
  5715  000008                     _INTERRUPT_InterruptManager:
  5716                           	opt stack 19
  5717                           
  5718                           ;incstack = 0
  5719  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5720  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
  5721  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5722  000012  CFE9 F011          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  5723  000016  CFEA F012          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  5724  00001A  CFE1 F013          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  5725  00001E  CFE2 F014          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  5726  000022  CFD9 F015          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  5727  000026  CFDA F016          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  5728  00002A  CFF3 F017          	movff	prodl,??_INTERRUPT_InterruptManager+8
  5729  00002E  CFF4 F018          	movff	prodh,??_INTERRUPT_InterruptManager+9
  5730  000032  CFF6 F019          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  5731  000036  CFF7 F01A          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  5732  00003A  CFF8 F01B          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  5733  00003E  CFF5 F01C          	movff	tablat,??_INTERRUPT_InterruptManager+13
  5734                           
  5735                           ;interrupt_manager.c: 70: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  5736  000042  BA9D               	btfsc	3997,5,c	;volatile
  5737  000044  AA9E               	btfss	3998,5,c	;volatile
  5738  000046  D003               	goto	i2l65
  5739                           
  5740                           ;interrupt_manager.c: 71: {
  5741                           ;interrupt_manager.c: 72: EUSART1_Receive_ISR();
  5742  000048  EC26  F010         	call	_EUSART1_Receive_ISR	;wreg free
  5743                           
  5744                           ;interrupt_manager.c: 73: }
  5745  00004C  D011               	goto	i2l73
  5746  00004E                     i2l65:
  5747                           
  5748                           ;interrupt_manager.c: 74: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5749  00004E  B89D               	btfsc	3997,4,c	;volatile
  5750  000050  A89E               	btfss	3998,4,c	;volatile
  5751  000052  D003               	goto	i2l67
  5752                           
  5753                           ;interrupt_manager.c: 75: {
  5754                           ;interrupt_manager.c: 76: EUSART1_Transmit_ISR();
  5755  000054  EC51  F00F         	call	_EUSART1_Transmit_ISR	;wreg free
  5756                           
  5757                           ;interrupt_manager.c: 77: }
  5758  000058  D00B               	goto	i2l73
  5759  00005A                     i2l67:
  5760                           
  5761                           ;interrupt_manager.c: 78: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  5762  00005A  BC9D               	btfsc	3997,6,c	;volatile
  5763  00005C  AC9E               	btfss	3998,6,c	;volatile
  5764  00005E  D003               	goto	i2l69
  5765                           
  5766                           ;interrupt_manager.c: 79: {
  5767                           ;interrupt_manager.c: 80: ADC_ISR();
  5768  000060  EC7B  F010         	call	_ADC_ISR	;wreg free
  5769                           
  5770                           ;interrupt_manager.c: 81: }
  5771  000064  D005               	goto	i2l73
  5772  000066                     i2l69:
  5773                           
  5774                           ;interrupt_manager.c: 82: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5775  000066  B09D               	btfsc	3997,0,c	;volatile
  5776  000068  A09E               	btfss	3998,0,c	;volatile
  5777  00006A  D002               	goto	i2l73
  5778                           
  5779                           ;interrupt_manager.c: 83: {
  5780                           ;interrupt_manager.c: 84: TMR1_ISR();
  5781  00006C  EC9A  F00F         	call	_TMR1_ISR	;wreg free
  5782  000070                     i2l73:
  5783  000070  C01C  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  5784  000074  C01B  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  5785  000078  C01A  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  5786  00007C  C019  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  5787  000080  C018  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  5788  000084  C017  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  5789  000088  C016  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  5790  00008C  C015  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  5791  000090  C014  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  5792  000094  C013  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  5793  000098  C012  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  5794  00009C  C011  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  5795  0000A0  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5796  0000A4  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5797  0000A8  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5798  0000AA  0011               	retfie		f
  5799  0000AC                     __end_of_INTERRUPT_InterruptManager:
  5800                           	opt stack 0
  5801                           pclatu	equ	0xFFB
  5802                           pclath	equ	0xFFA
  5803                           tblptru	equ	0xFF8
  5804                           tblptrh	equ	0xFF7
  5805                           tblptrl	equ	0xFF6
  5806                           tablat	equ	0xFF5
  5807                           prodh	equ	0xFF4
  5808                           prodl	equ	0xFF3
  5809                           intcon	equ	0xFF2
  5810                           intcon2	equ	0xFF1
  5811                           postinc0	equ	0xFEE
  5812                           fsr0h	equ	0xFEA
  5813                           fsr0l	equ	0xFE9
  5814                           wreg	equ	0xFE8
  5815                           postinc1	equ	0xFE6
  5816                           fsr1h	equ	0xFE2
  5817                           fsr1l	equ	0xFE1
  5818                           indf2	equ	0xFDF
  5819                           postinc2	equ	0xFDE
  5820                           postdec2	equ	0xFDD
  5821                           plusw2	equ	0xFDB
  5822                           fsr2h	equ	0xFDA
  5823                           fsr2l	equ	0xFD9
  5824                           status	equ	0xFD8
  5825                           
  5826 ;; *************** function _TMR1_ISR *****************
  5827 ;; Defined at:
  5828 ;;		line 161 in file "mcc_generated_files/tmr1.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  2   53[None  ] int 
  5835 ;; Registers used:
  5836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5842 ;;      Params:         0       0       0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0
  5845 ;;      Totals:         0       0       0       0       0       0       0
  5846 ;;Total ram usage:        0 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    4
  5849 ;; This function calls:
  5850 ;;		_ReadCurrent
  5851 ;; This function is called by:
  5852 ;;		_INTERRUPT_InterruptManager
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text38
  5857  001F34                     __ptext38:
  5858                           	opt stack 0
  5859  001F34                     _TMR1_ISR:
  5860                           	opt stack 19
  5861                           
  5862                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  5863                           
  5864                           ;incstack = 0
  5865  001F34  909E               	bcf	3998,0,c	;volatile
  5866                           
  5867                           ;tmr1.c: 168: TMR1H = (timer1ReloadVal >> 8);
  5868  001F36  5036               	movf	_timer1ReloadVal+1,w,c	;volatile
  5869  001F38  6ECF               	movwf	4047,c	;volatile
  5870                           
  5871                           ;tmr1.c: 169: TMR1L = (uint8_t) timer1ReloadVal;
  5872  001F3A  C035  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  5873                           
  5874                           ;tmr1.c: 170: readwhat++;
  5875  001F3E  4A29               	infsnz	_readwhat,f,c
  5876  001F40  2A2A               	incf	_readwhat+1,f,c
  5877                           
  5878                           ;tmr1.c: 171: if(readwhat > 7)
  5879  001F42  BE2A               	btfsc	_readwhat+1,7,c
  5880  001F44  D00A               	goto	i2l3482
  5881  001F46  502A               	movf	_readwhat+1,w,c
  5882  001F48  E104               	bnz	i2u225_40
  5883  001F4A  0E08               	movlw	8
  5884  001F4C  5C29               	subwf	_readwhat,w,c
  5885  001F4E  A0D8               	btfss	status,0,c
  5886  001F50  D004               	goto	i2l3482
  5887  001F52                     i2u225_40:
  5888                           
  5889                           ;tmr1.c: 172: {
  5890                           ;tmr1.c: 173: readwhat = 0;
  5891  001F52  0E00               	movlw	0
  5892  001F54  6E2A               	movwf	_readwhat+1,c
  5893  001F56  0E00               	movlw	0
  5894  001F58  6E29               	movwf	_readwhat,c
  5895  001F5A                     i2l3482:
  5896                           
  5897                           ;tmr1.c: 174: }
  5898                           ;tmr1.c: 175: ReadCurrent(readwhat);
  5899  001F5A  5029               	movf	_readwhat,w,c
  5900  001F5C  EC10  F003         	call	_ReadCurrent
  5901  001F60  0012               	return		;funcret
  5902  001F62                     __end_of_TMR1_ISR:
  5903                           	opt stack 0
  5904                           pclatu	equ	0xFFB
  5905                           pclath	equ	0xFFA
  5906                           tblptru	equ	0xFF8
  5907                           tblptrh	equ	0xFF7
  5908                           tblptrl	equ	0xFF6
  5909                           tablat	equ	0xFF5
  5910                           prodh	equ	0xFF4
  5911                           prodl	equ	0xFF3
  5912                           intcon	equ	0xFF2
  5913                           intcon2	equ	0xFF1
  5914                           postinc0	equ	0xFEE
  5915                           fsr0h	equ	0xFEA
  5916                           fsr0l	equ	0xFE9
  5917                           wreg	equ	0xFE8
  5918                           postinc1	equ	0xFE6
  5919                           fsr1h	equ	0xFE2
  5920                           fsr1l	equ	0xFE1
  5921                           indf2	equ	0xFDF
  5922                           postinc2	equ	0xFDE
  5923                           postdec2	equ	0xFDD
  5924                           plusw2	equ	0xFDB
  5925                           fsr2h	equ	0xFDA
  5926                           fsr2l	equ	0xFD9
  5927                           status	equ	0xFD8
  5928                           
  5929 ;; *************** function _ReadCurrent *****************
  5930 ;; Defined at:
  5931 ;;		line 61 in file "PDU.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  gather          1    wreg     unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  gather          1   13[COMRAM] unsigned char 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5945 ;;      Params:         0       0       0       0       0       0       0
  5946 ;;      Locals:         1       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0
  5948 ;;      Totals:         1       0       0       0       0       0       0
  5949 ;;Total ram usage:        1 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    3
  5952 ;; This function calls:
  5953 ;;		_ADC_GetConversion
  5954 ;;		i2_SetPin595
  5955 ;;		i2_Update
  5956 ;; This function is called by:
  5957 ;;		_TMR1_ISR
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text39
  5962  000620                     __ptext39:
  5963                           	opt stack 0
  5964  000620                     _ReadCurrent:
  5965                           	opt stack 19
  5966                           
  5967                           ;incstack = 0
  5968                           ;ReadCurrent@gather stored from wreg
  5969  000620  6E0E               	movwf	ReadCurrent@gather,c
  5970                           
  5971                           ;PDU.c: 62: if (gather == 1) {
  5972  000622  040E               	decf	ReadCurrent@gather,w,c
  5973  000624  A4D8               	btfss	status,2,c
  5974  000626  D088               	goto	i2l3302
  5975                           
  5976                           ;PDU.c: 64: SetPin595(1, 4, ON);
  5977  000628  0E00               	movlw	0
  5978  00062A  6E02               	movwf	i2SetPin595@Reg+1,c
  5979  00062C  0E01               	movlw	1
  5980  00062E  6E01               	movwf	i2SetPin595@Reg,c
  5981  000630  0E00               	movlw	0
  5982  000632  6E04               	movwf	i2SetPin595@pin+1,c
  5983  000634  0E04               	movlw	4
  5984  000636  6E03               	movwf	i2SetPin595@pin,c
  5985  000638  0E00               	movlw	0
  5986  00063A  6E06               	movwf	i2SetPin595@value+1,c
  5987  00063C  0E01               	movlw	1
  5988  00063E  6E05               	movwf	i2SetPin595@value,c
  5989  000640  EC94  F00E         	call	i2_SetPin595	;wreg free
  5990                           
  5991                           ;PDU.c: 65: SetPin595(1, 3, OFF);
  5992  000644  0E00               	movlw	0
  5993  000646  6E02               	movwf	i2SetPin595@Reg+1,c
  5994  000648  0E01               	movlw	1
  5995  00064A  6E01               	movwf	i2SetPin595@Reg,c
  5996  00064C  0E00               	movlw	0
  5997  00064E  6E04               	movwf	i2SetPin595@pin+1,c
  5998  000650  0E03               	movlw	3
  5999  000652  6E03               	movwf	i2SetPin595@pin,c
  6000  000654  0E00               	movlw	0
  6001  000656  6E06               	movwf	i2SetPin595@value+1,c
  6002  000658  0E00               	movlw	0
  6003  00065A  6E05               	movwf	i2SetPin595@value,c
  6004  00065C  EC94  F00E         	call	i2_SetPin595	;wreg free
  6005                           
  6006                           ;PDU.c: 66: SetPin595(1, 2, OFF);
  6007  000660  0E00               	movlw	0
  6008  000662  6E02               	movwf	i2SetPin595@Reg+1,c
  6009  000664  0E01               	movlw	1
  6010  000666  6E01               	movwf	i2SetPin595@Reg,c
  6011  000668  0E00               	movlw	0
  6012  00066A  6E04               	movwf	i2SetPin595@pin+1,c
  6013  00066C  0E02               	movlw	2
  6014  00066E  6E03               	movwf	i2SetPin595@pin,c
  6015  000670  0E00               	movlw	0
  6016  000672  6E06               	movwf	i2SetPin595@value+1,c
  6017  000674  0E00               	movlw	0
  6018  000676  6E05               	movwf	i2SetPin595@value,c
  6019  000678  EC94  F00E         	call	i2_SetPin595	;wreg free
  6020                           
  6021                           ;PDU.c: 67: SetPin595(2, 4, OFF);
  6022  00067C  0E00               	movlw	0
  6023  00067E  6E02               	movwf	i2SetPin595@Reg+1,c
  6024  000680  0E02               	movlw	2
  6025  000682  6E01               	movwf	i2SetPin595@Reg,c
  6026  000684  0E00               	movlw	0
  6027  000686  6E04               	movwf	i2SetPin595@pin+1,c
  6028  000688  0E04               	movlw	4
  6029  00068A  6E03               	movwf	i2SetPin595@pin,c
  6030  00068C  0E00               	movlw	0
  6031  00068E  6E06               	movwf	i2SetPin595@value+1,c
  6032  000690  0E00               	movlw	0
  6033  000692  6E05               	movwf	i2SetPin595@value,c
  6034  000694  EC94  F00E         	call	i2_SetPin595	;wreg free
  6035                           
  6036                           ;PDU.c: 68: SetPin595(2, 3, OFF);
  6037  000698  0E00               	movlw	0
  6038  00069A  6E02               	movwf	i2SetPin595@Reg+1,c
  6039  00069C  0E02               	movlw	2
  6040  00069E  6E01               	movwf	i2SetPin595@Reg,c
  6041  0006A0  0E00               	movlw	0
  6042  0006A2  6E04               	movwf	i2SetPin595@pin+1,c
  6043  0006A4  0E03               	movlw	3
  6044  0006A6  6E03               	movwf	i2SetPin595@pin,c
  6045  0006A8  0E00               	movlw	0
  6046  0006AA  6E06               	movwf	i2SetPin595@value+1,c
  6047  0006AC  0E00               	movlw	0
  6048  0006AE  6E05               	movwf	i2SetPin595@value,c
  6049  0006B0  EC94  F00E         	call	i2_SetPin595	;wreg free
  6050                           
  6051                           ;PDU.c: 69: SetPin595(2, 2, OFF);
  6052  0006B4  0E00               	movlw	0
  6053  0006B6  6E02               	movwf	i2SetPin595@Reg+1,c
  6054  0006B8  0E02               	movlw	2
  6055  0006BA  6E01               	movwf	i2SetPin595@Reg,c
  6056  0006BC  0E00               	movlw	0
  6057  0006BE  6E04               	movwf	i2SetPin595@pin+1,c
  6058  0006C0  0E02               	movlw	2
  6059  0006C2  6E03               	movwf	i2SetPin595@pin,c
  6060  0006C4  0E00               	movlw	0
  6061  0006C6  6E06               	movwf	i2SetPin595@value+1,c
  6062  0006C8  0E00               	movlw	0
  6063  0006CA  6E05               	movwf	i2SetPin595@value,c
  6064  0006CC  EC94  F00E         	call	i2_SetPin595	;wreg free
  6065                           
  6066                           ;PDU.c: 70: SetPin595(3, 4, OFF);
  6067  0006D0  0E00               	movlw	0
  6068  0006D2  6E02               	movwf	i2SetPin595@Reg+1,c
  6069  0006D4  0E03               	movlw	3
  6070  0006D6  6E01               	movwf	i2SetPin595@Reg,c
  6071  0006D8  0E00               	movlw	0
  6072  0006DA  6E04               	movwf	i2SetPin595@pin+1,c
  6073  0006DC  0E04               	movlw	4
  6074  0006DE  6E03               	movwf	i2SetPin595@pin,c
  6075  0006E0  0E00               	movlw	0
  6076  0006E2  6E06               	movwf	i2SetPin595@value+1,c
  6077  0006E4  0E00               	movlw	0
  6078  0006E6  6E05               	movwf	i2SetPin595@value,c
  6079  0006E8  EC94  F00E         	call	i2_SetPin595	;wreg free
  6080                           
  6081                           ;PDU.c: 71: SetPin595(3, 3, OFF);
  6082  0006EC  0E00               	movlw	0
  6083  0006EE  6E02               	movwf	i2SetPin595@Reg+1,c
  6084  0006F0  0E03               	movlw	3
  6085  0006F2  6E01               	movwf	i2SetPin595@Reg,c
  6086  0006F4  0E00               	movlw	0
  6087  0006F6  6E04               	movwf	i2SetPin595@pin+1,c
  6088  0006F8  0E03               	movlw	3
  6089  0006FA  6E03               	movwf	i2SetPin595@pin,c
  6090  0006FC  0E00               	movlw	0
  6091  0006FE  6E06               	movwf	i2SetPin595@value+1,c
  6092  000700  0E00               	movlw	0
  6093  000702  6E05               	movwf	i2SetPin595@value,c
  6094  000704  EC94  F00E         	call	i2_SetPin595	;wreg free
  6095                           
  6096                           ;PDU.c: 72: SetPin595(3, 2, OFF);
  6097  000708  0E00               	movlw	0
  6098  00070A  6E02               	movwf	i2SetPin595@Reg+1,c
  6099  00070C  0E03               	movlw	3
  6100  00070E  6E01               	movwf	i2SetPin595@Reg,c
  6101  000710  0E00               	movlw	0
  6102  000712  6E04               	movwf	i2SetPin595@pin+1,c
  6103  000714  0E02               	movlw	2
  6104  000716  6E03               	movwf	i2SetPin595@pin,c
  6105  000718  0E00               	movlw	0
  6106  00071A  6E06               	movwf	i2SetPin595@value+1,c
  6107  00071C  0E00               	movlw	0
  6108  00071E  6E05               	movwf	i2SetPin595@value,c
  6109  000720  EC94  F00E         	call	i2_SetPin595	;wreg free
  6110                           
  6111                           ;PDU.c: 73: Update();
  6112  000724  EC76  F010         	call	i2_Update	;wreg free
  6113                           
  6114                           ;PDU.c: 76: CurrentADC[5] = ADC_GetConversion(U10Multisense);
  6115  000728  0E17               	movlw	23
  6116  00072A  EC82  F00F         	call	_ADC_GetConversion
  6117  00072E  C001  F076         	movff	?_ADC_GetConversion,_CurrentADC+10
  6118  000732  C002  F077         	movff	?_ADC_GetConversion+1,_CurrentADC+11
  6119                           
  6120                           ;PDU.c: 77: }
  6121  000736  0012               	return	
  6122  000738                     i2l3302:
  6123                           
  6124                           ;PDU.c: 78: else if(gather == 2){
  6125  000738  0E02               	movlw	2
  6126  00073A  180E               	xorwf	ReadCurrent@gather,w,c
  6127  00073C  A4D8               	btfss	status,2,c
  6128  00073E  D088               	goto	i2l3308
  6129                           
  6130                           ;PDU.c: 80: SetPin595(1, 4, OFF);
  6131  000740  0E00               	movlw	0
  6132  000742  6E02               	movwf	i2SetPin595@Reg+1,c
  6133  000744  0E01               	movlw	1
  6134  000746  6E01               	movwf	i2SetPin595@Reg,c
  6135  000748  0E00               	movlw	0
  6136  00074A  6E04               	movwf	i2SetPin595@pin+1,c
  6137  00074C  0E04               	movlw	4
  6138  00074E  6E03               	movwf	i2SetPin595@pin,c
  6139  000750  0E00               	movlw	0
  6140  000752  6E06               	movwf	i2SetPin595@value+1,c
  6141  000754  0E00               	movlw	0
  6142  000756  6E05               	movwf	i2SetPin595@value,c
  6143  000758  EC94  F00E         	call	i2_SetPin595	;wreg free
  6144                           
  6145                           ;PDU.c: 81: SetPin595(1, 3, OFF);
  6146  00075C  0E00               	movlw	0
  6147  00075E  6E02               	movwf	i2SetPin595@Reg+1,c
  6148  000760  0E01               	movlw	1
  6149  000762  6E01               	movwf	i2SetPin595@Reg,c
  6150  000764  0E00               	movlw	0
  6151  000766  6E04               	movwf	i2SetPin595@pin+1,c
  6152  000768  0E03               	movlw	3
  6153  00076A  6E03               	movwf	i2SetPin595@pin,c
  6154  00076C  0E00               	movlw	0
  6155  00076E  6E06               	movwf	i2SetPin595@value+1,c
  6156  000770  0E00               	movlw	0
  6157  000772  6E05               	movwf	i2SetPin595@value,c
  6158  000774  EC94  F00E         	call	i2_SetPin595	;wreg free
  6159                           
  6160                           ;PDU.c: 82: SetPin595(1, 2, OFF);
  6161  000778  0E00               	movlw	0
  6162  00077A  6E02               	movwf	i2SetPin595@Reg+1,c
  6163  00077C  0E01               	movlw	1
  6164  00077E  6E01               	movwf	i2SetPin595@Reg,c
  6165  000780  0E00               	movlw	0
  6166  000782  6E04               	movwf	i2SetPin595@pin+1,c
  6167  000784  0E02               	movlw	2
  6168  000786  6E03               	movwf	i2SetPin595@pin,c
  6169  000788  0E00               	movlw	0
  6170  00078A  6E06               	movwf	i2SetPin595@value+1,c
  6171  00078C  0E00               	movlw	0
  6172  00078E  6E05               	movwf	i2SetPin595@value,c
  6173  000790  EC94  F00E         	call	i2_SetPin595	;wreg free
  6174                           
  6175                           ;PDU.c: 83: SetPin595(2, 4, ON);
  6176  000794  0E00               	movlw	0
  6177  000796  6E02               	movwf	i2SetPin595@Reg+1,c
  6178  000798  0E02               	movlw	2
  6179  00079A  6E01               	movwf	i2SetPin595@Reg,c
  6180  00079C  0E00               	movlw	0
  6181  00079E  6E04               	movwf	i2SetPin595@pin+1,c
  6182  0007A0  0E04               	movlw	4
  6183  0007A2  6E03               	movwf	i2SetPin595@pin,c
  6184  0007A4  0E00               	movlw	0
  6185  0007A6  6E06               	movwf	i2SetPin595@value+1,c
  6186  0007A8  0E01               	movlw	1
  6187  0007AA  6E05               	movwf	i2SetPin595@value,c
  6188  0007AC  EC94  F00E         	call	i2_SetPin595	;wreg free
  6189                           
  6190                           ;PDU.c: 84: SetPin595(2, 3, OFF);
  6191  0007B0  0E00               	movlw	0
  6192  0007B2  6E02               	movwf	i2SetPin595@Reg+1,c
  6193  0007B4  0E02               	movlw	2
  6194  0007B6  6E01               	movwf	i2SetPin595@Reg,c
  6195  0007B8  0E00               	movlw	0
  6196  0007BA  6E04               	movwf	i2SetPin595@pin+1,c
  6197  0007BC  0E03               	movlw	3
  6198  0007BE  6E03               	movwf	i2SetPin595@pin,c
  6199  0007C0  0E00               	movlw	0
  6200  0007C2  6E06               	movwf	i2SetPin595@value+1,c
  6201  0007C4  0E00               	movlw	0
  6202  0007C6  6E05               	movwf	i2SetPin595@value,c
  6203  0007C8  EC94  F00E         	call	i2_SetPin595	;wreg free
  6204                           
  6205                           ;PDU.c: 85: SetPin595(2, 2, OFF);
  6206  0007CC  0E00               	movlw	0
  6207  0007CE  6E02               	movwf	i2SetPin595@Reg+1,c
  6208  0007D0  0E02               	movlw	2
  6209  0007D2  6E01               	movwf	i2SetPin595@Reg,c
  6210  0007D4  0E00               	movlw	0
  6211  0007D6  6E04               	movwf	i2SetPin595@pin+1,c
  6212  0007D8  0E02               	movlw	2
  6213  0007DA  6E03               	movwf	i2SetPin595@pin,c
  6214  0007DC  0E00               	movlw	0
  6215  0007DE  6E06               	movwf	i2SetPin595@value+1,c
  6216  0007E0  0E00               	movlw	0
  6217  0007E2  6E05               	movwf	i2SetPin595@value,c
  6218  0007E4  EC94  F00E         	call	i2_SetPin595	;wreg free
  6219                           
  6220                           ;PDU.c: 86: SetPin595(3, 4, OFF);
  6221  0007E8  0E00               	movlw	0
  6222  0007EA  6E02               	movwf	i2SetPin595@Reg+1,c
  6223  0007EC  0E03               	movlw	3
  6224  0007EE  6E01               	movwf	i2SetPin595@Reg,c
  6225  0007F0  0E00               	movlw	0
  6226  0007F2  6E04               	movwf	i2SetPin595@pin+1,c
  6227  0007F4  0E04               	movlw	4
  6228  0007F6  6E03               	movwf	i2SetPin595@pin,c
  6229  0007F8  0E00               	movlw	0
  6230  0007FA  6E06               	movwf	i2SetPin595@value+1,c
  6231  0007FC  0E00               	movlw	0
  6232  0007FE  6E05               	movwf	i2SetPin595@value,c
  6233  000800  EC94  F00E         	call	i2_SetPin595	;wreg free
  6234                           
  6235                           ;PDU.c: 87: SetPin595(3, 3, OFF);
  6236  000804  0E00               	movlw	0
  6237  000806  6E02               	movwf	i2SetPin595@Reg+1,c
  6238  000808  0E03               	movlw	3
  6239  00080A  6E01               	movwf	i2SetPin595@Reg,c
  6240  00080C  0E00               	movlw	0
  6241  00080E  6E04               	movwf	i2SetPin595@pin+1,c
  6242  000810  0E03               	movlw	3
  6243  000812  6E03               	movwf	i2SetPin595@pin,c
  6244  000814  0E00               	movlw	0
  6245  000816  6E06               	movwf	i2SetPin595@value+1,c
  6246  000818  0E00               	movlw	0
  6247  00081A  6E05               	movwf	i2SetPin595@value,c
  6248  00081C  EC94  F00E         	call	i2_SetPin595	;wreg free
  6249                           
  6250                           ;PDU.c: 88: SetPin595(3, 2, OFF);
  6251  000820  0E00               	movlw	0
  6252  000822  6E02               	movwf	i2SetPin595@Reg+1,c
  6253  000824  0E03               	movlw	3
  6254  000826  6E01               	movwf	i2SetPin595@Reg,c
  6255  000828  0E00               	movlw	0
  6256  00082A  6E04               	movwf	i2SetPin595@pin+1,c
  6257  00082C  0E02               	movlw	2
  6258  00082E  6E03               	movwf	i2SetPin595@pin,c
  6259  000830  0E00               	movlw	0
  6260  000832  6E06               	movwf	i2SetPin595@value+1,c
  6261  000834  0E00               	movlw	0
  6262  000836  6E05               	movwf	i2SetPin595@value,c
  6263  000838  EC94  F00E         	call	i2_SetPin595	;wreg free
  6264                           
  6265                           ;PDU.c: 89: Update();
  6266  00083C  EC76  F010         	call	i2_Update	;wreg free
  6267                           
  6268                           ;PDU.c: 91: CurrentADC[3] = ADC_GetConversion(U8Multisense);
  6269  000840  0E16               	movlw	22
  6270  000842  EC82  F00F         	call	_ADC_GetConversion
  6271  000846  C001  F072         	movff	?_ADC_GetConversion,_CurrentADC+6
  6272  00084A  C002  F073         	movff	?_ADC_GetConversion+1,_CurrentADC+7
  6273                           
  6274                           ;PDU.c: 93: }
  6275  00084E  0012               	return	
  6276  000850                     i2l3308:
  6277                           
  6278                           ;PDU.c: 94: else if(gather == 3){
  6279  000850  0E03               	movlw	3
  6280  000852  180E               	xorwf	ReadCurrent@gather,w,c
  6281  000854  A4D8               	btfss	status,2,c
  6282  000856  D088               	goto	i2l3314
  6283                           
  6284                           ;PDU.c: 96: SetPin595(1, 4, OFF);
  6285  000858  0E00               	movlw	0
  6286  00085A  6E02               	movwf	i2SetPin595@Reg+1,c
  6287  00085C  0E01               	movlw	1
  6288  00085E  6E01               	movwf	i2SetPin595@Reg,c
  6289  000860  0E00               	movlw	0
  6290  000862  6E04               	movwf	i2SetPin595@pin+1,c
  6291  000864  0E04               	movlw	4
  6292  000866  6E03               	movwf	i2SetPin595@pin,c
  6293  000868  0E00               	movlw	0
  6294  00086A  6E06               	movwf	i2SetPin595@value+1,c
  6295  00086C  0E00               	movlw	0
  6296  00086E  6E05               	movwf	i2SetPin595@value,c
  6297  000870  EC94  F00E         	call	i2_SetPin595	;wreg free
  6298                           
  6299                           ;PDU.c: 97: SetPin595(1, 3, OFF);
  6300  000874  0E00               	movlw	0
  6301  000876  6E02               	movwf	i2SetPin595@Reg+1,c
  6302  000878  0E01               	movlw	1
  6303  00087A  6E01               	movwf	i2SetPin595@Reg,c
  6304  00087C  0E00               	movlw	0
  6305  00087E  6E04               	movwf	i2SetPin595@pin+1,c
  6306  000880  0E03               	movlw	3
  6307  000882  6E03               	movwf	i2SetPin595@pin,c
  6308  000884  0E00               	movlw	0
  6309  000886  6E06               	movwf	i2SetPin595@value+1,c
  6310  000888  0E00               	movlw	0
  6311  00088A  6E05               	movwf	i2SetPin595@value,c
  6312  00088C  EC94  F00E         	call	i2_SetPin595	;wreg free
  6313                           
  6314                           ;PDU.c: 98: SetPin595(1, 2, OFF);
  6315  000890  0E00               	movlw	0
  6316  000892  6E02               	movwf	i2SetPin595@Reg+1,c
  6317  000894  0E01               	movlw	1
  6318  000896  6E01               	movwf	i2SetPin595@Reg,c
  6319  000898  0E00               	movlw	0
  6320  00089A  6E04               	movwf	i2SetPin595@pin+1,c
  6321  00089C  0E02               	movlw	2
  6322  00089E  6E03               	movwf	i2SetPin595@pin,c
  6323  0008A0  0E00               	movlw	0
  6324  0008A2  6E06               	movwf	i2SetPin595@value+1,c
  6325  0008A4  0E00               	movlw	0
  6326  0008A6  6E05               	movwf	i2SetPin595@value,c
  6327  0008A8  EC94  F00E         	call	i2_SetPin595	;wreg free
  6328                           
  6329                           ;PDU.c: 99: SetPin595(2, 4, OFF);
  6330  0008AC  0E00               	movlw	0
  6331  0008AE  6E02               	movwf	i2SetPin595@Reg+1,c
  6332  0008B0  0E02               	movlw	2
  6333  0008B2  6E01               	movwf	i2SetPin595@Reg,c
  6334  0008B4  0E00               	movlw	0
  6335  0008B6  6E04               	movwf	i2SetPin595@pin+1,c
  6336  0008B8  0E04               	movlw	4
  6337  0008BA  6E03               	movwf	i2SetPin595@pin,c
  6338  0008BC  0E00               	movlw	0
  6339  0008BE  6E06               	movwf	i2SetPin595@value+1,c
  6340  0008C0  0E00               	movlw	0
  6341  0008C2  6E05               	movwf	i2SetPin595@value,c
  6342  0008C4  EC94  F00E         	call	i2_SetPin595	;wreg free
  6343                           
  6344                           ;PDU.c: 100: SetPin595(2, 3, OFF);
  6345  0008C8  0E00               	movlw	0
  6346  0008CA  6E02               	movwf	i2SetPin595@Reg+1,c
  6347  0008CC  0E02               	movlw	2
  6348  0008CE  6E01               	movwf	i2SetPin595@Reg,c
  6349  0008D0  0E00               	movlw	0
  6350  0008D2  6E04               	movwf	i2SetPin595@pin+1,c
  6351  0008D4  0E03               	movlw	3
  6352  0008D6  6E03               	movwf	i2SetPin595@pin,c
  6353  0008D8  0E00               	movlw	0
  6354  0008DA  6E06               	movwf	i2SetPin595@value+1,c
  6355  0008DC  0E00               	movlw	0
  6356  0008DE  6E05               	movwf	i2SetPin595@value,c
  6357  0008E0  EC94  F00E         	call	i2_SetPin595	;wreg free
  6358                           
  6359                           ;PDU.c: 101: SetPin595(2, 2, OFF);
  6360  0008E4  0E00               	movlw	0
  6361  0008E6  6E02               	movwf	i2SetPin595@Reg+1,c
  6362  0008E8  0E02               	movlw	2
  6363  0008EA  6E01               	movwf	i2SetPin595@Reg,c
  6364  0008EC  0E00               	movlw	0
  6365  0008EE  6E04               	movwf	i2SetPin595@pin+1,c
  6366  0008F0  0E02               	movlw	2
  6367  0008F2  6E03               	movwf	i2SetPin595@pin,c
  6368  0008F4  0E00               	movlw	0
  6369  0008F6  6E06               	movwf	i2SetPin595@value+1,c
  6370  0008F8  0E00               	movlw	0
  6371  0008FA  6E05               	movwf	i2SetPin595@value,c
  6372  0008FC  EC94  F00E         	call	i2_SetPin595	;wreg free
  6373                           
  6374                           ;PDU.c: 102: SetPin595(3, 4, ON);
  6375  000900  0E00               	movlw	0
  6376  000902  6E02               	movwf	i2SetPin595@Reg+1,c
  6377  000904  0E03               	movlw	3
  6378  000906  6E01               	movwf	i2SetPin595@Reg,c
  6379  000908  0E00               	movlw	0
  6380  00090A  6E04               	movwf	i2SetPin595@pin+1,c
  6381  00090C  0E04               	movlw	4
  6382  00090E  6E03               	movwf	i2SetPin595@pin,c
  6383  000910  0E00               	movlw	0
  6384  000912  6E06               	movwf	i2SetPin595@value+1,c
  6385  000914  0E01               	movlw	1
  6386  000916  6E05               	movwf	i2SetPin595@value,c
  6387  000918  EC94  F00E         	call	i2_SetPin595	;wreg free
  6388                           
  6389                           ;PDU.c: 103: SetPin595(3, 3, OFF);
  6390  00091C  0E00               	movlw	0
  6391  00091E  6E02               	movwf	i2SetPin595@Reg+1,c
  6392  000920  0E03               	movlw	3
  6393  000922  6E01               	movwf	i2SetPin595@Reg,c
  6394  000924  0E00               	movlw	0
  6395  000926  6E04               	movwf	i2SetPin595@pin+1,c
  6396  000928  0E03               	movlw	3
  6397  00092A  6E03               	movwf	i2SetPin595@pin,c
  6398  00092C  0E00               	movlw	0
  6399  00092E  6E06               	movwf	i2SetPin595@value+1,c
  6400  000930  0E00               	movlw	0
  6401  000932  6E05               	movwf	i2SetPin595@value,c
  6402  000934  EC94  F00E         	call	i2_SetPin595	;wreg free
  6403                           
  6404                           ;PDU.c: 104: SetPin595(3, 2, OFF);
  6405  000938  0E00               	movlw	0
  6406  00093A  6E02               	movwf	i2SetPin595@Reg+1,c
  6407  00093C  0E03               	movlw	3
  6408  00093E  6E01               	movwf	i2SetPin595@Reg,c
  6409  000940  0E00               	movlw	0
  6410  000942  6E04               	movwf	i2SetPin595@pin+1,c
  6411  000944  0E02               	movlw	2
  6412  000946  6E03               	movwf	i2SetPin595@pin,c
  6413  000948  0E00               	movlw	0
  6414  00094A  6E06               	movwf	i2SetPin595@value+1,c
  6415  00094C  0E00               	movlw	0
  6416  00094E  6E05               	movwf	i2SetPin595@value,c
  6417  000950  EC94  F00E         	call	i2_SetPin595	;wreg free
  6418                           
  6419                           ;PDU.c: 105: Update();
  6420  000954  EC76  F010         	call	i2_Update	;wreg free
  6421                           
  6422                           ;PDU.c: 106: CurrentADC[1] = ADC_GetConversion(U5Multisense);
  6423  000958  0E10               	movlw	16
  6424  00095A  EC82  F00F         	call	_ADC_GetConversion
  6425  00095E  C001  F06E         	movff	?_ADC_GetConversion,_CurrentADC+2
  6426  000962  C002  F06F         	movff	?_ADC_GetConversion+1,_CurrentADC+3
  6427                           
  6428                           ;PDU.c: 109: }
  6429  000966  0012               	return	
  6430  000968                     i2l3314:
  6431                           
  6432                           ;PDU.c: 110: else if(gather == 4){
  6433  000968  0E04               	movlw	4
  6434  00096A  180E               	xorwf	ReadCurrent@gather,w,c
  6435  00096C  A4D8               	btfss	status,2,c
  6436  00096E  D088               	goto	i2l3320
  6437                           
  6438                           ;PDU.c: 112: SetPin595(1, 4, ON);
  6439  000970  0E00               	movlw	0
  6440  000972  6E02               	movwf	i2SetPin595@Reg+1,c
  6441  000974  0E01               	movlw	1
  6442  000976  6E01               	movwf	i2SetPin595@Reg,c
  6443  000978  0E00               	movlw	0
  6444  00097A  6E04               	movwf	i2SetPin595@pin+1,c
  6445  00097C  0E04               	movlw	4
  6446  00097E  6E03               	movwf	i2SetPin595@pin,c
  6447  000980  0E00               	movlw	0
  6448  000982  6E06               	movwf	i2SetPin595@value+1,c
  6449  000984  0E01               	movlw	1
  6450  000986  6E05               	movwf	i2SetPin595@value,c
  6451  000988  EC94  F00E         	call	i2_SetPin595	;wreg free
  6452                           
  6453                           ;PDU.c: 113: SetPin595(1, 3, ON);
  6454  00098C  0E00               	movlw	0
  6455  00098E  6E02               	movwf	i2SetPin595@Reg+1,c
  6456  000990  0E01               	movlw	1
  6457  000992  6E01               	movwf	i2SetPin595@Reg,c
  6458  000994  0E00               	movlw	0
  6459  000996  6E04               	movwf	i2SetPin595@pin+1,c
  6460  000998  0E03               	movlw	3
  6461  00099A  6E03               	movwf	i2SetPin595@pin,c
  6462  00099C  0E00               	movlw	0
  6463  00099E  6E06               	movwf	i2SetPin595@value+1,c
  6464  0009A0  0E01               	movlw	1
  6465  0009A2  6E05               	movwf	i2SetPin595@value,c
  6466  0009A4  EC94  F00E         	call	i2_SetPin595	;wreg free
  6467                           
  6468                           ;PDU.c: 114: SetPin595(1, 2, OFF);
  6469  0009A8  0E00               	movlw	0
  6470  0009AA  6E02               	movwf	i2SetPin595@Reg+1,c
  6471  0009AC  0E01               	movlw	1
  6472  0009AE  6E01               	movwf	i2SetPin595@Reg,c
  6473  0009B0  0E00               	movlw	0
  6474  0009B2  6E04               	movwf	i2SetPin595@pin+1,c
  6475  0009B4  0E02               	movlw	2
  6476  0009B6  6E03               	movwf	i2SetPin595@pin,c
  6477  0009B8  0E00               	movlw	0
  6478  0009BA  6E06               	movwf	i2SetPin595@value+1,c
  6479  0009BC  0E00               	movlw	0
  6480  0009BE  6E05               	movwf	i2SetPin595@value,c
  6481  0009C0  EC94  F00E         	call	i2_SetPin595	;wreg free
  6482                           
  6483                           ;PDU.c: 115: SetPin595(2, 4, OFF);
  6484  0009C4  0E00               	movlw	0
  6485  0009C6  6E02               	movwf	i2SetPin595@Reg+1,c
  6486  0009C8  0E02               	movlw	2
  6487  0009CA  6E01               	movwf	i2SetPin595@Reg,c
  6488  0009CC  0E00               	movlw	0
  6489  0009CE  6E04               	movwf	i2SetPin595@pin+1,c
  6490  0009D0  0E04               	movlw	4
  6491  0009D2  6E03               	movwf	i2SetPin595@pin,c
  6492  0009D4  0E00               	movlw	0
  6493  0009D6  6E06               	movwf	i2SetPin595@value+1,c
  6494  0009D8  0E00               	movlw	0
  6495  0009DA  6E05               	movwf	i2SetPin595@value,c
  6496  0009DC  EC94  F00E         	call	i2_SetPin595	;wreg free
  6497                           
  6498                           ;PDU.c: 116: SetPin595(2, 3, OFF);
  6499  0009E0  0E00               	movlw	0
  6500  0009E2  6E02               	movwf	i2SetPin595@Reg+1,c
  6501  0009E4  0E02               	movlw	2
  6502  0009E6  6E01               	movwf	i2SetPin595@Reg,c
  6503  0009E8  0E00               	movlw	0
  6504  0009EA  6E04               	movwf	i2SetPin595@pin+1,c
  6505  0009EC  0E03               	movlw	3
  6506  0009EE  6E03               	movwf	i2SetPin595@pin,c
  6507  0009F0  0E00               	movlw	0
  6508  0009F2  6E06               	movwf	i2SetPin595@value+1,c
  6509  0009F4  0E00               	movlw	0
  6510  0009F6  6E05               	movwf	i2SetPin595@value,c
  6511  0009F8  EC94  F00E         	call	i2_SetPin595	;wreg free
  6512                           
  6513                           ;PDU.c: 117: SetPin595(2, 2, OFF);
  6514  0009FC  0E00               	movlw	0
  6515  0009FE  6E02               	movwf	i2SetPin595@Reg+1,c
  6516  000A00  0E02               	movlw	2
  6517  000A02  6E01               	movwf	i2SetPin595@Reg,c
  6518  000A04  0E00               	movlw	0
  6519  000A06  6E04               	movwf	i2SetPin595@pin+1,c
  6520  000A08  0E02               	movlw	2
  6521  000A0A  6E03               	movwf	i2SetPin595@pin,c
  6522  000A0C  0E00               	movlw	0
  6523  000A0E  6E06               	movwf	i2SetPin595@value+1,c
  6524  000A10  0E00               	movlw	0
  6525  000A12  6E05               	movwf	i2SetPin595@value,c
  6526  000A14  EC94  F00E         	call	i2_SetPin595	;wreg free
  6527                           
  6528                           ;PDU.c: 118: SetPin595(3, 4, OFF);
  6529  000A18  0E00               	movlw	0
  6530  000A1A  6E02               	movwf	i2SetPin595@Reg+1,c
  6531  000A1C  0E03               	movlw	3
  6532  000A1E  6E01               	movwf	i2SetPin595@Reg,c
  6533  000A20  0E00               	movlw	0
  6534  000A22  6E04               	movwf	i2SetPin595@pin+1,c
  6535  000A24  0E04               	movlw	4
  6536  000A26  6E03               	movwf	i2SetPin595@pin,c
  6537  000A28  0E00               	movlw	0
  6538  000A2A  6E06               	movwf	i2SetPin595@value+1,c
  6539  000A2C  0E00               	movlw	0
  6540  000A2E  6E05               	movwf	i2SetPin595@value,c
  6541  000A30  EC94  F00E         	call	i2_SetPin595	;wreg free
  6542                           
  6543                           ;PDU.c: 119: SetPin595(3, 3, OFF);
  6544  000A34  0E00               	movlw	0
  6545  000A36  6E02               	movwf	i2SetPin595@Reg+1,c
  6546  000A38  0E03               	movlw	3
  6547  000A3A  6E01               	movwf	i2SetPin595@Reg,c
  6548  000A3C  0E00               	movlw	0
  6549  000A3E  6E04               	movwf	i2SetPin595@pin+1,c
  6550  000A40  0E03               	movlw	3
  6551  000A42  6E03               	movwf	i2SetPin595@pin,c
  6552  000A44  0E00               	movlw	0
  6553  000A46  6E06               	movwf	i2SetPin595@value+1,c
  6554  000A48  0E00               	movlw	0
  6555  000A4A  6E05               	movwf	i2SetPin595@value,c
  6556  000A4C  EC94  F00E         	call	i2_SetPin595	;wreg free
  6557                           
  6558                           ;PDU.c: 120: SetPin595(3, 2, OFF);
  6559  000A50  0E00               	movlw	0
  6560  000A52  6E02               	movwf	i2SetPin595@Reg+1,c
  6561  000A54  0E03               	movlw	3
  6562  000A56  6E01               	movwf	i2SetPin595@Reg,c
  6563  000A58  0E00               	movlw	0
  6564  000A5A  6E04               	movwf	i2SetPin595@pin+1,c
  6565  000A5C  0E02               	movlw	2
  6566  000A5E  6E03               	movwf	i2SetPin595@pin,c
  6567  000A60  0E00               	movlw	0
  6568  000A62  6E06               	movwf	i2SetPin595@value+1,c
  6569  000A64  0E00               	movlw	0
  6570  000A66  6E05               	movwf	i2SetPin595@value,c
  6571  000A68  EC94  F00E         	call	i2_SetPin595	;wreg free
  6572                           
  6573                           ;PDU.c: 121: Update();
  6574  000A6C  EC76  F010         	call	i2_Update	;wreg free
  6575                           
  6576                           ;PDU.c: 124: CurrentADC[4] = ADC_GetConversion(U10Multisense);
  6577  000A70  0E17               	movlw	23
  6578  000A72  EC82  F00F         	call	_ADC_GetConversion
  6579  000A76  C001  F074         	movff	?_ADC_GetConversion,_CurrentADC+8
  6580  000A7A  C002  F075         	movff	?_ADC_GetConversion+1,_CurrentADC+9
  6581                           
  6582                           ;PDU.c: 125: }
  6583  000A7E  0012               	return	
  6584  000A80                     i2l3320:
  6585                           
  6586                           ;PDU.c: 126: else if(gather == 5){
  6587  000A80  0E05               	movlw	5
  6588  000A82  180E               	xorwf	ReadCurrent@gather,w,c
  6589  000A84  A4D8               	btfss	status,2,c
  6590  000A86  D088               	goto	i2l3326
  6591                           
  6592                           ;PDU.c: 128: SetPin595(1, 4, OFF);
  6593  000A88  0E00               	movlw	0
  6594  000A8A  6E02               	movwf	i2SetPin595@Reg+1,c
  6595  000A8C  0E01               	movlw	1
  6596  000A8E  6E01               	movwf	i2SetPin595@Reg,c
  6597  000A90  0E00               	movlw	0
  6598  000A92  6E04               	movwf	i2SetPin595@pin+1,c
  6599  000A94  0E04               	movlw	4
  6600  000A96  6E03               	movwf	i2SetPin595@pin,c
  6601  000A98  0E00               	movlw	0
  6602  000A9A  6E06               	movwf	i2SetPin595@value+1,c
  6603  000A9C  0E00               	movlw	0
  6604  000A9E  6E05               	movwf	i2SetPin595@value,c
  6605  000AA0  EC94  F00E         	call	i2_SetPin595	;wreg free
  6606                           
  6607                           ;PDU.c: 129: SetPin595(1, 3, OFF);
  6608  000AA4  0E00               	movlw	0
  6609  000AA6  6E02               	movwf	i2SetPin595@Reg+1,c
  6610  000AA8  0E01               	movlw	1
  6611  000AAA  6E01               	movwf	i2SetPin595@Reg,c
  6612  000AAC  0E00               	movlw	0
  6613  000AAE  6E04               	movwf	i2SetPin595@pin+1,c
  6614  000AB0  0E03               	movlw	3
  6615  000AB2  6E03               	movwf	i2SetPin595@pin,c
  6616  000AB4  0E00               	movlw	0
  6617  000AB6  6E06               	movwf	i2SetPin595@value+1,c
  6618  000AB8  0E00               	movlw	0
  6619  000ABA  6E05               	movwf	i2SetPin595@value,c
  6620  000ABC  EC94  F00E         	call	i2_SetPin595	;wreg free
  6621                           
  6622                           ;PDU.c: 130: SetPin595(1, 2, OFF);
  6623  000AC0  0E00               	movlw	0
  6624  000AC2  6E02               	movwf	i2SetPin595@Reg+1,c
  6625  000AC4  0E01               	movlw	1
  6626  000AC6  6E01               	movwf	i2SetPin595@Reg,c
  6627  000AC8  0E00               	movlw	0
  6628  000ACA  6E04               	movwf	i2SetPin595@pin+1,c
  6629  000ACC  0E02               	movlw	2
  6630  000ACE  6E03               	movwf	i2SetPin595@pin,c
  6631  000AD0  0E00               	movlw	0
  6632  000AD2  6E06               	movwf	i2SetPin595@value+1,c
  6633  000AD4  0E00               	movlw	0
  6634  000AD6  6E05               	movwf	i2SetPin595@value,c
  6635  000AD8  EC94  F00E         	call	i2_SetPin595	;wreg free
  6636                           
  6637                           ;PDU.c: 131: SetPin595(2, 4, ON);
  6638  000ADC  0E00               	movlw	0
  6639  000ADE  6E02               	movwf	i2SetPin595@Reg+1,c
  6640  000AE0  0E02               	movlw	2
  6641  000AE2  6E01               	movwf	i2SetPin595@Reg,c
  6642  000AE4  0E00               	movlw	0
  6643  000AE6  6E04               	movwf	i2SetPin595@pin+1,c
  6644  000AE8  0E04               	movlw	4
  6645  000AEA  6E03               	movwf	i2SetPin595@pin,c
  6646  000AEC  0E00               	movlw	0
  6647  000AEE  6E06               	movwf	i2SetPin595@value+1,c
  6648  000AF0  0E01               	movlw	1
  6649  000AF2  6E05               	movwf	i2SetPin595@value,c
  6650  000AF4  EC94  F00E         	call	i2_SetPin595	;wreg free
  6651                           
  6652                           ;PDU.c: 132: SetPin595(2, 3, ON);
  6653  000AF8  0E00               	movlw	0
  6654  000AFA  6E02               	movwf	i2SetPin595@Reg+1,c
  6655  000AFC  0E02               	movlw	2
  6656  000AFE  6E01               	movwf	i2SetPin595@Reg,c
  6657  000B00  0E00               	movlw	0
  6658  000B02  6E04               	movwf	i2SetPin595@pin+1,c
  6659  000B04  0E03               	movlw	3
  6660  000B06  6E03               	movwf	i2SetPin595@pin,c
  6661  000B08  0E00               	movlw	0
  6662  000B0A  6E06               	movwf	i2SetPin595@value+1,c
  6663  000B0C  0E01               	movlw	1
  6664  000B0E  6E05               	movwf	i2SetPin595@value,c
  6665  000B10  EC94  F00E         	call	i2_SetPin595	;wreg free
  6666                           
  6667                           ;PDU.c: 133: SetPin595(2, 2, OFF);
  6668  000B14  0E00               	movlw	0
  6669  000B16  6E02               	movwf	i2SetPin595@Reg+1,c
  6670  000B18  0E02               	movlw	2
  6671  000B1A  6E01               	movwf	i2SetPin595@Reg,c
  6672  000B1C  0E00               	movlw	0
  6673  000B1E  6E04               	movwf	i2SetPin595@pin+1,c
  6674  000B20  0E02               	movlw	2
  6675  000B22  6E03               	movwf	i2SetPin595@pin,c
  6676  000B24  0E00               	movlw	0
  6677  000B26  6E06               	movwf	i2SetPin595@value+1,c
  6678  000B28  0E00               	movlw	0
  6679  000B2A  6E05               	movwf	i2SetPin595@value,c
  6680  000B2C  EC94  F00E         	call	i2_SetPin595	;wreg free
  6681                           
  6682                           ;PDU.c: 134: SetPin595(3, 4, OFF);
  6683  000B30  0E00               	movlw	0
  6684  000B32  6E02               	movwf	i2SetPin595@Reg+1,c
  6685  000B34  0E03               	movlw	3
  6686  000B36  6E01               	movwf	i2SetPin595@Reg,c
  6687  000B38  0E00               	movlw	0
  6688  000B3A  6E04               	movwf	i2SetPin595@pin+1,c
  6689  000B3C  0E04               	movlw	4
  6690  000B3E  6E03               	movwf	i2SetPin595@pin,c
  6691  000B40  0E00               	movlw	0
  6692  000B42  6E06               	movwf	i2SetPin595@value+1,c
  6693  000B44  0E00               	movlw	0
  6694  000B46  6E05               	movwf	i2SetPin595@value,c
  6695  000B48  EC94  F00E         	call	i2_SetPin595	;wreg free
  6696                           
  6697                           ;PDU.c: 135: SetPin595(3, 3, OFF);
  6698  000B4C  0E00               	movlw	0
  6699  000B4E  6E02               	movwf	i2SetPin595@Reg+1,c
  6700  000B50  0E03               	movlw	3
  6701  000B52  6E01               	movwf	i2SetPin595@Reg,c
  6702  000B54  0E00               	movlw	0
  6703  000B56  6E04               	movwf	i2SetPin595@pin+1,c
  6704  000B58  0E03               	movlw	3
  6705  000B5A  6E03               	movwf	i2SetPin595@pin,c
  6706  000B5C  0E00               	movlw	0
  6707  000B5E  6E06               	movwf	i2SetPin595@value+1,c
  6708  000B60  0E00               	movlw	0
  6709  000B62  6E05               	movwf	i2SetPin595@value,c
  6710  000B64  EC94  F00E         	call	i2_SetPin595	;wreg free
  6711                           
  6712                           ;PDU.c: 136: SetPin595(3, 2, OFF);
  6713  000B68  0E00               	movlw	0
  6714  000B6A  6E02               	movwf	i2SetPin595@Reg+1,c
  6715  000B6C  0E03               	movlw	3
  6716  000B6E  6E01               	movwf	i2SetPin595@Reg,c
  6717  000B70  0E00               	movlw	0
  6718  000B72  6E04               	movwf	i2SetPin595@pin+1,c
  6719  000B74  0E02               	movlw	2
  6720  000B76  6E03               	movwf	i2SetPin595@pin,c
  6721  000B78  0E00               	movlw	0
  6722  000B7A  6E06               	movwf	i2SetPin595@value+1,c
  6723  000B7C  0E00               	movlw	0
  6724  000B7E  6E05               	movwf	i2SetPin595@value,c
  6725  000B80  EC94  F00E         	call	i2_SetPin595	;wreg free
  6726                           
  6727                           ;PDU.c: 137: Update();
  6728  000B84  EC76  F010         	call	i2_Update	;wreg free
  6729                           
  6730                           ;PDU.c: 139: CurrentADC[4] = ADC_GetConversion(U8Multisense);
  6731  000B88  0E16               	movlw	22
  6732  000B8A  EC82  F00F         	call	_ADC_GetConversion
  6733  000B8E  C001  F074         	movff	?_ADC_GetConversion,_CurrentADC+8
  6734  000B92  C002  F075         	movff	?_ADC_GetConversion+1,_CurrentADC+9
  6735                           
  6736                           ;PDU.c: 141: }
  6737  000B96  0012               	return	
  6738  000B98                     i2l3326:
  6739                           
  6740                           ;PDU.c: 142: else if(gather == 6){
  6741  000B98  0E06               	movlw	6
  6742  000B9A  180E               	xorwf	ReadCurrent@gather,w,c
  6743  000B9C  A4D8               	btfss	status,2,c
  6744  000B9E  0012               	return	
  6745                           
  6746                           ;PDU.c: 144: SetPin595(1, 4, OFF);
  6747  000BA0  0E00               	movlw	0
  6748  000BA2  6E02               	movwf	i2SetPin595@Reg+1,c
  6749  000BA4  0E01               	movlw	1
  6750  000BA6  6E01               	movwf	i2SetPin595@Reg,c
  6751  000BA8  0E00               	movlw	0
  6752  000BAA  6E04               	movwf	i2SetPin595@pin+1,c
  6753  000BAC  0E04               	movlw	4
  6754  000BAE  6E03               	movwf	i2SetPin595@pin,c
  6755  000BB0  0E00               	movlw	0
  6756  000BB2  6E06               	movwf	i2SetPin595@value+1,c
  6757  000BB4  0E00               	movlw	0
  6758  000BB6  6E05               	movwf	i2SetPin595@value,c
  6759  000BB8  EC94  F00E         	call	i2_SetPin595	;wreg free
  6760                           
  6761                           ;PDU.c: 145: SetPin595(1, 3, OFF);
  6762  000BBC  0E00               	movlw	0
  6763  000BBE  6E02               	movwf	i2SetPin595@Reg+1,c
  6764  000BC0  0E01               	movlw	1
  6765  000BC2  6E01               	movwf	i2SetPin595@Reg,c
  6766  000BC4  0E00               	movlw	0
  6767  000BC6  6E04               	movwf	i2SetPin595@pin+1,c
  6768  000BC8  0E03               	movlw	3
  6769  000BCA  6E03               	movwf	i2SetPin595@pin,c
  6770  000BCC  0E00               	movlw	0
  6771  000BCE  6E06               	movwf	i2SetPin595@value+1,c
  6772  000BD0  0E00               	movlw	0
  6773  000BD2  6E05               	movwf	i2SetPin595@value,c
  6774  000BD4  EC94  F00E         	call	i2_SetPin595	;wreg free
  6775                           
  6776                           ;PDU.c: 146: SetPin595(1, 2, OFF);
  6777  000BD8  0E00               	movlw	0
  6778  000BDA  6E02               	movwf	i2SetPin595@Reg+1,c
  6779  000BDC  0E01               	movlw	1
  6780  000BDE  6E01               	movwf	i2SetPin595@Reg,c
  6781  000BE0  0E00               	movlw	0
  6782  000BE2  6E04               	movwf	i2SetPin595@pin+1,c
  6783  000BE4  0E02               	movlw	2
  6784  000BE6  6E03               	movwf	i2SetPin595@pin,c
  6785  000BE8  0E00               	movlw	0
  6786  000BEA  6E06               	movwf	i2SetPin595@value+1,c
  6787  000BEC  0E00               	movlw	0
  6788  000BEE  6E05               	movwf	i2SetPin595@value,c
  6789  000BF0  EC94  F00E         	call	i2_SetPin595	;wreg free
  6790                           
  6791                           ;PDU.c: 147: SetPin595(2, 4, OFF);
  6792  000BF4  0E00               	movlw	0
  6793  000BF6  6E02               	movwf	i2SetPin595@Reg+1,c
  6794  000BF8  0E02               	movlw	2
  6795  000BFA  6E01               	movwf	i2SetPin595@Reg,c
  6796  000BFC  0E00               	movlw	0
  6797  000BFE  6E04               	movwf	i2SetPin595@pin+1,c
  6798  000C00  0E04               	movlw	4
  6799  000C02  6E03               	movwf	i2SetPin595@pin,c
  6800  000C04  0E00               	movlw	0
  6801  000C06  6E06               	movwf	i2SetPin595@value+1,c
  6802  000C08  0E00               	movlw	0
  6803  000C0A  6E05               	movwf	i2SetPin595@value,c
  6804  000C0C  EC94  F00E         	call	i2_SetPin595	;wreg free
  6805                           
  6806                           ;PDU.c: 148: SetPin595(2, 3, OFF);
  6807  000C10  0E00               	movlw	0
  6808  000C12  6E02               	movwf	i2SetPin595@Reg+1,c
  6809  000C14  0E02               	movlw	2
  6810  000C16  6E01               	movwf	i2SetPin595@Reg,c
  6811  000C18  0E00               	movlw	0
  6812  000C1A  6E04               	movwf	i2SetPin595@pin+1,c
  6813  000C1C  0E03               	movlw	3
  6814  000C1E  6E03               	movwf	i2SetPin595@pin,c
  6815  000C20  0E00               	movlw	0
  6816  000C22  6E06               	movwf	i2SetPin595@value+1,c
  6817  000C24  0E00               	movlw	0
  6818  000C26  6E05               	movwf	i2SetPin595@value,c
  6819  000C28  EC94  F00E         	call	i2_SetPin595	;wreg free
  6820                           
  6821                           ;PDU.c: 149: SetPin595(2, 2, OFF);
  6822  000C2C  0E00               	movlw	0
  6823  000C2E  6E02               	movwf	i2SetPin595@Reg+1,c
  6824  000C30  0E02               	movlw	2
  6825  000C32  6E01               	movwf	i2SetPin595@Reg,c
  6826  000C34  0E00               	movlw	0
  6827  000C36  6E04               	movwf	i2SetPin595@pin+1,c
  6828  000C38  0E02               	movlw	2
  6829  000C3A  6E03               	movwf	i2SetPin595@pin,c
  6830  000C3C  0E00               	movlw	0
  6831  000C3E  6E06               	movwf	i2SetPin595@value+1,c
  6832  000C40  0E00               	movlw	0
  6833  000C42  6E05               	movwf	i2SetPin595@value,c
  6834  000C44  EC94  F00E         	call	i2_SetPin595	;wreg free
  6835                           
  6836                           ;PDU.c: 150: SetPin595(3, 4, ON);
  6837  000C48  0E00               	movlw	0
  6838  000C4A  6E02               	movwf	i2SetPin595@Reg+1,c
  6839  000C4C  0E03               	movlw	3
  6840  000C4E  6E01               	movwf	i2SetPin595@Reg,c
  6841  000C50  0E00               	movlw	0
  6842  000C52  6E04               	movwf	i2SetPin595@pin+1,c
  6843  000C54  0E04               	movlw	4
  6844  000C56  6E03               	movwf	i2SetPin595@pin,c
  6845  000C58  0E00               	movlw	0
  6846  000C5A  6E06               	movwf	i2SetPin595@value+1,c
  6847  000C5C  0E01               	movlw	1
  6848  000C5E  6E05               	movwf	i2SetPin595@value,c
  6849  000C60  EC94  F00E         	call	i2_SetPin595	;wreg free
  6850                           
  6851                           ;PDU.c: 151: SetPin595(3, 3, ON);
  6852  000C64  0E00               	movlw	0
  6853  000C66  6E02               	movwf	i2SetPin595@Reg+1,c
  6854  000C68  0E03               	movlw	3
  6855  000C6A  6E01               	movwf	i2SetPin595@Reg,c
  6856  000C6C  0E00               	movlw	0
  6857  000C6E  6E04               	movwf	i2SetPin595@pin+1,c
  6858  000C70  0E03               	movlw	3
  6859  000C72  6E03               	movwf	i2SetPin595@pin,c
  6860  000C74  0E00               	movlw	0
  6861  000C76  6E06               	movwf	i2SetPin595@value+1,c
  6862  000C78  0E01               	movlw	1
  6863  000C7A  6E05               	movwf	i2SetPin595@value,c
  6864  000C7C  EC94  F00E         	call	i2_SetPin595	;wreg free
  6865                           
  6866                           ;PDU.c: 152: SetPin595(3, 2, OFF);
  6867  000C80  0E00               	movlw	0
  6868  000C82  6E02               	movwf	i2SetPin595@Reg+1,c
  6869  000C84  0E03               	movlw	3
  6870  000C86  6E01               	movwf	i2SetPin595@Reg,c
  6871  000C88  0E00               	movlw	0
  6872  000C8A  6E04               	movwf	i2SetPin595@pin+1,c
  6873  000C8C  0E02               	movlw	2
  6874  000C8E  6E03               	movwf	i2SetPin595@pin,c
  6875  000C90  0E00               	movlw	0
  6876  000C92  6E06               	movwf	i2SetPin595@value+1,c
  6877  000C94  0E00               	movlw	0
  6878  000C96  6E05               	movwf	i2SetPin595@value,c
  6879  000C98  EC94  F00E         	call	i2_SetPin595	;wreg free
  6880                           
  6881                           ;PDU.c: 153: Update();
  6882  000C9C  EC76  F010         	call	i2_Update	;wreg free
  6883                           
  6884                           ;PDU.c: 154: CurrentADC[0] = ADC_GetConversion(U5Multisense);
  6885  000CA0  0E10               	movlw	16
  6886  000CA2  EC82  F00F         	call	_ADC_GetConversion
  6887  000CA6  C001  F06C         	movff	?_ADC_GetConversion,_CurrentADC
  6888  000CAA  C002  F06D         	movff	?_ADC_GetConversion+1,_CurrentADC+1
  6889  000CAE  0012               	return	
  6890  000CB0                     __end_of_ReadCurrent:
  6891                           	opt stack 0
  6892                           pclatu	equ	0xFFB
  6893                           pclath	equ	0xFFA
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           prodh	equ	0xFF4
  6899                           prodl	equ	0xFF3
  6900                           intcon	equ	0xFF2
  6901                           intcon2	equ	0xFF1
  6902                           postinc0	equ	0xFEE
  6903                           fsr0h	equ	0xFEA
  6904                           fsr0l	equ	0xFE9
  6905                           wreg	equ	0xFE8
  6906                           postinc1	equ	0xFE6
  6907                           fsr1h	equ	0xFE2
  6908                           fsr1l	equ	0xFE1
  6909                           indf2	equ	0xFDF
  6910                           postinc2	equ	0xFDE
  6911                           postdec2	equ	0xFDD
  6912                           plusw2	equ	0xFDB
  6913                           fsr2h	equ	0xFDA
  6914                           fsr2l	equ	0xFD9
  6915                           status	equ	0xFD8
  6916                           
  6917 ;; *************** function i2_Update *****************
  6918 ;; Defined at:
  6919 ;;		line 215 in file "PDU.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;		None
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  1    wreg      void 
  6926 ;; Registers used:
  6927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6933 ;;      Params:         0       0       0       0       0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0
  6936 ;;      Totals:         0       0       0       0       0       0       0
  6937 ;;Total ram usage:        0 bytes
  6938 ;; Hardware stack levels used:    1
  6939 ;; Hardware stack levels required when called:    2
  6940 ;; This function calls:
  6941 ;;		i2_writeRegisters
  6942 ;; This function is called by:
  6943 ;;		_ReadCurrent
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text40
  6948  0020EC                     __ptext40:
  6949                           	opt stack 0
  6950  0020EC                     i2_Update:
  6951                           	opt stack 19
  6952                           
  6953                           ;PDU.c: 216: writeRegisters();
  6954                           
  6955                           ;incstack = 0
  6956  0020EC  ECA9  F00C         	call	i2_writeRegisters	;wreg free
  6957  0020F0  0012               	return		;funcret
  6958  0020F2                     __end_ofi2_Update:
  6959                           	opt stack 0
  6960                           pclatu	equ	0xFFB
  6961                           pclath	equ	0xFFA
  6962                           tblptru	equ	0xFF8
  6963                           tblptrh	equ	0xFF7
  6964                           tblptrl	equ	0xFF6
  6965                           tablat	equ	0xFF5
  6966                           prodh	equ	0xFF4
  6967                           prodl	equ	0xFF3
  6968                           intcon	equ	0xFF2
  6969                           intcon2	equ	0xFF1
  6970                           postinc0	equ	0xFEE
  6971                           fsr0h	equ	0xFEA
  6972                           fsr0l	equ	0xFE9
  6973                           wreg	equ	0xFE8
  6974                           postinc1	equ	0xFE6
  6975                           fsr1h	equ	0xFE2
  6976                           fsr1l	equ	0xFE1
  6977                           indf2	equ	0xFDF
  6978                           postinc2	equ	0xFDE
  6979                           postdec2	equ	0xFDD
  6980                           plusw2	equ	0xFDB
  6981                           fsr2h	equ	0xFDA
  6982                           fsr2l	equ	0xFD9
  6983                           status	equ	0xFD8
  6984                           
  6985 ;; *************** function i2_writeRegisters *****************
  6986 ;; Defined at:
  6987 ;;		line 50 in file "Shift595.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  writeRegiste    2   11[COMRAM] int 
  6992 ;;  writeRegiste    2    9[COMRAM] int 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7002 ;;      Params:         0       0       0       0       0       0       0
  7003 ;;      Locals:         4       0       0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0
  7005 ;;      Totals:         4       0       0       0       0       0       0
  7006 ;;Total ram usage:        4 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    1
  7009 ;; This function calls:
  7010 ;;		i2_Delay
  7011 ;; This function is called by:
  7012 ;;		i2_Update
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text41
  7017  001952                     __ptext41:
  7018                           	opt stack 0
  7019  001952                     i2_writeRegisters:
  7020                           	opt stack 19
  7021                           
  7022                           ;Shift595.c: 51: int val = 0;
  7023                           
  7024                           ;incstack = 0
  7025  001952  0E00               	movlw	0
  7026  001954  6E0B               	movwf	i2writeRegisters@val+1,c
  7027  001956  0E00               	movlw	0
  7028  001958  6E0A               	movwf	i2writeRegisters@val,c
  7029                           
  7030                           ;Shift595.c: 52: for (int i = 3 * 8 - 1; i >= 0; i--) {
  7031  00195A  0E00               	movlw	0
  7032  00195C  6E0D               	movwf	i2writeRegisters@i+1,c
  7033  00195E  0E17               	movlw	23
  7034  001960  6E0C               	movwf	i2writeRegisters@i,c
  7035  001962                     i2l3044:
  7036  001962  BE0D               	btfsc	i2writeRegisters@i+1,7,c
  7037  001964  D01D               	goto	i2l750
  7038                           
  7039                           ;Shift595.c: 53: do { LATD7 = 0; } while(0);
  7040  001966  9E8C               	bcf	3980,7,c	;volatile
  7041                           
  7042                           ;Shift595.c: 55: val = registers[i];
  7043  001968  90D8               	bcf	status,0,c
  7044  00196A  340C               	rlcf	i2writeRegisters@i,w,c
  7045  00196C  6ED9               	movwf	fsr2l,c
  7046  00196E  340D               	rlcf	i2writeRegisters@i+1,w,c
  7047  001970  6EDA               	movwf	fsr2h,c
  7048  001972  0E00               	movlw	low _registers
  7049  001974  26D9               	addwf	fsr2l,f,c
  7050  001976  0E01               	movlw	high _registers
  7051  001978  22DA               	addwfc	fsr2h,f,c
  7052  00197A  CFDE F00A          	movff	postinc2,i2writeRegisters@val
  7053  00197E  CFDD F00B          	movff	postdec2,i2writeRegisters@val+1
  7054                           
  7055                           ;Shift595.c: 56: if (val == 1) {
  7056  001982  040A               	decf	i2writeRegisters@val,w,c
  7057  001984  100B               	iorwf	i2writeRegisters@val+1,w,c
  7058  001986  A4D8               	btfss	status,2,c
  7059  001988  D002               	goto	i2l3052
  7060                           
  7061                           ;Shift595.c: 57: do { LATD4 = 1; } while(0);
  7062  00198A  888C               	bsf	3980,4,c	;volatile
  7063                           
  7064                           ;Shift595.c: 58: } else if (val == 0) {
  7065  00198C  D004               	goto	i2l748
  7066  00198E                     i2l3052:
  7067  00198E  500A               	movf	i2writeRegisters@val,w,c
  7068  001990  100B               	iorwf	i2writeRegisters@val+1,w,c
  7069  001992  B4D8               	btfsc	status,2,c
  7070                           
  7071                           ;Shift595.c: 59: do { LATD4 = 0; } while(0);
  7072  001994  988C               	bcf	3980,4,c	;volatile
  7073  001996                     i2l748:
  7074  001996  8E8C               	bsf	3980,7,c	;volatile
  7075  001998  060C               	decf	i2writeRegisters@i,f,c
  7076  00199A  A0D8               	btfss	status,0,c
  7077  00199C  060D               	decf	i2writeRegisters@i+1,f,c
  7078  00199E  D7E1               	goto	i2l3044
  7079  0019A0                     i2l750:
  7080  0019A0  9E8C               	bcf	3980,7,c	;volatile
  7081                           
  7082                           ;Shift595.c: 67: Delay(1);
  7083  0019A2  0E01               	movlw	1
  7084  0019A4  6E01               	movwf	i2Delay@wait,c
  7085  0019A6  0E00               	movlw	0
  7086  0019A8  6E02               	movwf	i2Delay@wait+1,c
  7087  0019AA  0E00               	movlw	0
  7088  0019AC  6E03               	movwf	i2Delay@wait+2,c
  7089  0019AE  0E00               	movlw	0
  7090  0019B0  6E04               	movwf	i2Delay@wait+3,c
  7091  0019B2  ECBB  F00E         	call	i2_Delay	;wreg free
  7092                           
  7093                           ;Shift595.c: 68: do { LATD6 = 1; } while(0);
  7094  0019B6  8C8C               	bsf	3980,6,c	;volatile
  7095                           
  7096                           ;Shift595.c: 69: Delay(1);
  7097  0019B8  0E01               	movlw	1
  7098  0019BA  6E01               	movwf	i2Delay@wait,c
  7099  0019BC  0E00               	movlw	0
  7100  0019BE  6E02               	movwf	i2Delay@wait+1,c
  7101  0019C0  0E00               	movlw	0
  7102  0019C2  6E03               	movwf	i2Delay@wait+2,c
  7103  0019C4  0E00               	movlw	0
  7104  0019C6  6E04               	movwf	i2Delay@wait+3,c
  7105  0019C8  ECBB  F00E         	call	i2_Delay	;wreg free
  7106                           
  7107                           ;Shift595.c: 70: do { LATD6 = 0; } while(0);
  7108  0019CC  9C8C               	bcf	3980,6,c	;volatile
  7109  0019CE  0012               	return	
  7110  0019D0                     __end_ofi2_writeRegisters:
  7111                           	opt stack 0
  7112                           pclatu	equ	0xFFB
  7113                           pclath	equ	0xFFA
  7114                           tblptru	equ	0xFF8
  7115                           tblptrh	equ	0xFF7
  7116                           tblptrl	equ	0xFF6
  7117                           tablat	equ	0xFF5
  7118                           prodh	equ	0xFF4
  7119                           prodl	equ	0xFF3
  7120                           intcon	equ	0xFF2
  7121                           intcon2	equ	0xFF1
  7122                           postinc0	equ	0xFEE
  7123                           fsr0h	equ	0xFEA
  7124                           fsr0l	equ	0xFE9
  7125                           wreg	equ	0xFE8
  7126                           postinc1	equ	0xFE6
  7127                           fsr1h	equ	0xFE2
  7128                           fsr1l	equ	0xFE1
  7129                           indf2	equ	0xFDF
  7130                           postinc2	equ	0xFDE
  7131                           postdec2	equ	0xFDD
  7132                           plusw2	equ	0xFDB
  7133                           fsr2h	equ	0xFDA
  7134                           fsr2l	equ	0xFD9
  7135                           status	equ	0xFD8
  7136                           
  7137 ;; *************** function i2_Delay *****************
  7138 ;; Defined at:
  7139 ;;		line 9 in file "Functions.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  wait            4    0[COMRAM] long 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  Delay           4    5[COMRAM] long 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      void 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7153 ;;      Params:         4       0       0       0       0       0       0
  7154 ;;      Locals:         4       0       0       0       0       0       0
  7155 ;;      Temps:          1       0       0       0       0       0       0
  7156 ;;      Totals:         9       0       0       0       0       0       0
  7157 ;;Total ram usage:        9 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		i2_writeRegisters
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text42
  7167  001D76                     __ptext42:
  7168                           	opt stack 0
  7169  001D76                     i2_Delay:
  7170                           	opt stack 19
  7171                           
  7172                           ;Functions.c: 10: long int i = 0;
  7173                           
  7174                           ;incstack = 0
  7175  001D76  0E00               	movlw	0
  7176  001D78  6E06               	movwf	i2Delay@i,c
  7177  001D7A  0E00               	movlw	0
  7178  001D7C  6E07               	movwf	i2Delay@i+1,c
  7179  001D7E  0E00               	movlw	0
  7180  001D80  6E08               	movwf	i2Delay@i+2,c
  7181  001D82  0E00               	movlw	0
  7182  001D84  6E09               	movwf	i2Delay@i+3,c
  7183                           
  7184                           ;Functions.c: 11: for (; wait > i; i++) {
  7185  001D86  D00D               	goto	i2l3000
  7186  001D88                     i2l2996:
  7187                           
  7188                           ;Functions.c: 12: _delay((unsigned long)((1)*(8000000/4000.0)));
  7189  001D88  0E03               	movlw	3
  7190  001D8A  6E05               	movwf	??i2_Delay& (0+255),c
  7191  001D8C  0E98               	movlw	152
  7192  001D8E                     i2u466_47:
  7193  001D8E  2EE8               	decfsz	wreg,f,c
  7194  001D90  D7FE               	goto	i2u466_47
  7195  001D92  2E05               	decfsz	??i2_Delay& (0+255),f,c
  7196  001D94  D7FC               	goto	i2u466_47
  7197  001D96  0E01               	movlw	1
  7198  001D98  2606               	addwf	i2Delay@i,f,c
  7199  001D9A  0E00               	movlw	0
  7200  001D9C  2207               	addwfc	i2Delay@i+1,f,c
  7201  001D9E  2208               	addwfc	i2Delay@i+2,f,c
  7202  001DA0  2209               	addwfc	i2Delay@i+3,f,c
  7203  001DA2                     i2l3000:
  7204  001DA2  5001               	movf	i2Delay@wait,w,c
  7205  001DA4  5C06               	subwf	i2Delay@i,w,c
  7206  001DA6  5002               	movf	i2Delay@wait+1,w,c
  7207  001DA8  5807               	subwfb	i2Delay@i+1,w,c
  7208  001DAA  5003               	movf	i2Delay@wait+2,w,c
  7209  001DAC  5808               	subwfb	i2Delay@i+2,w,c
  7210  001DAE  5009               	movf	i2Delay@i+3,w,c
  7211  001DB0  0A80               	xorlw	128
  7212  001DB2  6E05               	movwf	??i2_Delay& (0+255),c
  7213  001DB4  5004               	movf	i2Delay@wait+3,w,c
  7214  001DB6  0A80               	xorlw	128
  7215  001DB8  5805               	subwfb	??i2_Delay& (0+255),w,c
  7216  001DBA  B0D8               	btfsc	status,0,c
  7217  001DBC  0012               	return	
  7218  001DBE  D7E4               	goto	i2l2996
  7219  001DC0                     __end_ofi2_Delay:
  7220                           	opt stack 0
  7221                           pclatu	equ	0xFFB
  7222                           pclath	equ	0xFFA
  7223                           tblptru	equ	0xFF8
  7224                           tblptrh	equ	0xFF7
  7225                           tblptrl	equ	0xFF6
  7226                           tablat	equ	0xFF5
  7227                           prodh	equ	0xFF4
  7228                           prodl	equ	0xFF3
  7229                           intcon	equ	0xFF2
  7230                           intcon2	equ	0xFF1
  7231                           postinc0	equ	0xFEE
  7232                           fsr0h	equ	0xFEA
  7233                           fsr0l	equ	0xFE9
  7234                           wreg	equ	0xFE8
  7235                           postinc1	equ	0xFE6
  7236                           fsr1h	equ	0xFE2
  7237                           fsr1l	equ	0xFE1
  7238                           indf2	equ	0xFDF
  7239                           postinc2	equ	0xFDE
  7240                           postdec2	equ	0xFDD
  7241                           plusw2	equ	0xFDB
  7242                           fsr2h	equ	0xFDA
  7243                           fsr2l	equ	0xFD9
  7244                           status	equ	0xFD8
  7245                           
  7246 ;; *************** function i2_SetPin595 *****************
  7247 ;; Defined at:
  7248 ;;		line 32 in file "Shift595.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  Reg             2    0[COMRAM] int 
  7251 ;;  pin             2    2[COMRAM] int 
  7252 ;;  value           2    4[COMRAM] int 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      void 
  7257 ;; Registers used:
  7258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7264 ;;      Params:         6       0       0       0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0
  7266 ;;      Temps:          4       0       0       0       0       0       0
  7267 ;;      Totals:        10       0       0       0       0       0       0
  7268 ;;Total ram usage:       10 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; This function calls:
  7271 ;;		Nothing
  7272 ;; This function is called by:
  7273 ;;		_ReadCurrent
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text43
  7278  001D28                     __ptext43:
  7279                           	opt stack 0
  7280  001D28                     i2_SetPin595:
  7281                           	opt stack 21
  7282                           
  7283                           ;Shift595.c: 33: registers[((Reg - 1)*8) + pin] = value;
  7284                           
  7285                           ;incstack = 0
  7286  001D28  0EF0               	movlw	240
  7287  001D2A  6E07               	movwf	??i2_SetPin595& (0+255),c
  7288  001D2C  0EFF               	movlw	255
  7289  001D2E  6E08               	movwf	(??i2_SetPin595+1)& (0+255),c
  7290  001D30  C001  F009         	movff	i2SetPin595@Reg,??i2_SetPin595+2
  7291  001D34  C002  F00A         	movff	i2SetPin595@Reg+1,??i2_SetPin595+3
  7292  001D38  90D8               	bcf	status,0,c
  7293  001D3A  3609               	rlcf	??i2_SetPin595+2,f,c
  7294  001D3C  360A               	rlcf	??i2_SetPin595+3,f,c
  7295  001D3E  90D8               	bcf	status,0,c
  7296  001D40  3609               	rlcf	??i2_SetPin595+2,f,c
  7297  001D42  360A               	rlcf	??i2_SetPin595+3,f,c
  7298  001D44  90D8               	bcf	status,0,c
  7299  001D46  3609               	rlcf	??i2_SetPin595+2,f,c
  7300  001D48  360A               	rlcf	??i2_SetPin595+3,f,c
  7301  001D4A  5003               	movf	i2SetPin595@pin,w,c
  7302  001D4C  2609               	addwf	??i2_SetPin595+2,f,c
  7303  001D4E  5004               	movf	i2SetPin595@pin+1,w,c
  7304  001D50  220A               	addwfc	??i2_SetPin595+3,f,c
  7305  001D52  90D8               	bcf	status,0,c
  7306  001D54  3609               	rlcf	??i2_SetPin595+2,f,c
  7307  001D56  360A               	rlcf	??i2_SetPin595+3,f,c
  7308  001D58  5007               	movf	??i2_SetPin595,w,c
  7309  001D5A  2609               	addwf	??i2_SetPin595+2,f,c
  7310  001D5C  5008               	movf	??i2_SetPin595+1,w,c
  7311  001D5E  220A               	addwfc	??i2_SetPin595+3,f,c
  7312  001D60  0E00               	movlw	low _registers
  7313  001D62  2409               	addwf	??i2_SetPin595+2,w,c
  7314  001D64  6ED9               	movwf	fsr2l,c
  7315  001D66  0E01               	movlw	high _registers
  7316  001D68  200A               	addwfc	??i2_SetPin595+3,w,c
  7317  001D6A  6EDA               	movwf	fsr2h,c
  7318  001D6C  C005  FFDE         	movff	i2SetPin595@value,postinc2
  7319  001D70  C006  FFDD         	movff	i2SetPin595@value+1,postdec2
  7320  001D74  0012               	return		;funcret
  7321  001D76                     __end_ofi2_SetPin595:
  7322                           	opt stack 0
  7323                           pclatu	equ	0xFFB
  7324                           pclath	equ	0xFFA
  7325                           tblptru	equ	0xFF8
  7326                           tblptrh	equ	0xFF7
  7327                           tblptrl	equ	0xFF6
  7328                           tablat	equ	0xFF5
  7329                           prodh	equ	0xFF4
  7330                           prodl	equ	0xFF3
  7331                           intcon	equ	0xFF2
  7332                           intcon2	equ	0xFF1
  7333                           postinc0	equ	0xFEE
  7334                           fsr0h	equ	0xFEA
  7335                           fsr0l	equ	0xFE9
  7336                           wreg	equ	0xFE8
  7337                           postinc1	equ	0xFE6
  7338                           fsr1h	equ	0xFE2
  7339                           fsr1l	equ	0xFE1
  7340                           indf2	equ	0xFDF
  7341                           postinc2	equ	0xFDE
  7342                           postdec2	equ	0xFDD
  7343                           plusw2	equ	0xFDB
  7344                           fsr2h	equ	0xFDA
  7345                           fsr2l	equ	0xFD9
  7346                           status	equ	0xFD8
  7347                           
  7348 ;; *************** function _ADC_GetConversion *****************
  7349 ;; Defined at:
  7350 ;;		line 109 in file "mcc_generated_files/adc.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  channel         1    wreg     enum E7738
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  channel         1    4[COMRAM] enum E7738
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  2    0[COMRAM] unsigned int 
  7357 ;; Registers used:
  7358 ;;		wreg, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7364 ;;      Params:         2       0       0       0       0       0       0
  7365 ;;      Locals:         1       0       0       0       0       0       0
  7366 ;;      Temps:          2       0       0       0       0       0       0
  7367 ;;      Totals:         5       0       0       0       0       0       0
  7368 ;;Total ram usage:        5 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_ReadCurrent
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text44
  7378  001F04                     __ptext44:
  7379                           	opt stack 0
  7380  001F04                     _ADC_GetConversion:
  7381                           	opt stack 21
  7382                           
  7383                           ;incstack = 0
  7384                           ;ADC_GetConversion@channel stored from wreg
  7385  001F04  6E05               	movwf	ADC_GetConversion@channel,c
  7386                           
  7387                           ;adc.c: 112: ADCON0bits.CHS = channel;
  7388  001F06  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  7389  001F0A  4603               	rlncf	??_ADC_GetConversion,f,c
  7390  001F0C  4603               	rlncf	??_ADC_GetConversion,f,c
  7391  001F0E  50C2               	movf	4034,w,c	;volatile
  7392  001F10  1803               	xorwf	??_ADC_GetConversion,w,c
  7393  001F12  0B83               	andlw	-125
  7394  001F14  1803               	xorwf	??_ADC_GetConversion,w,c
  7395  001F16  6EC2               	movwf	4034,c	;volatile
  7396                           
  7397                           ;adc.c: 115: ADCON0bits.ADON = 1;
  7398  001F18  80C2               	bsf	4034,0,c	;volatile
  7399                           
  7400                           ;adc.c: 119: ADCON0bits.GO_nDONE = 1;
  7401  001F1A  82C2               	bsf	4034,1,c	;volatile
  7402  001F1C                     i2l31:
  7403  001F1C  B2C2               	btfsc	4034,1,c	;volatile
  7404  001F1E  D7FE               	goto	i2l31
  7405                           
  7406                           ;adc.c: 124: }
  7407                           ;adc.c: 127: return ((ADRESH << 8) + ADRESL);
  7408  001F20  50C4               	movf	4036,w,c	;volatile
  7409  001F22  6E04               	movwf	(??_ADC_GetConversion+1)& (0+255),c
  7410  001F24  6A03               	clrf	??_ADC_GetConversion& (0+255),c
  7411  001F26  50C3               	movf	4035,w,c	;volatile
  7412  001F28  2403               	addwf	??_ADC_GetConversion,w,c
  7413  001F2A  6E01               	movwf	?_ADC_GetConversion,c
  7414  001F2C  0E00               	movlw	0
  7415  001F2E  2004               	addwfc	??_ADC_GetConversion+1,w,c
  7416  001F30  6E02               	movwf	?_ADC_GetConversion+1,c
  7417  001F32  0012               	return	
  7418  001F34                     __end_of_ADC_GetConversion:
  7419                           	opt stack 0
  7420                           pclatu	equ	0xFFB
  7421                           pclath	equ	0xFFA
  7422                           tblptru	equ	0xFF8
  7423                           tblptrh	equ	0xFF7
  7424                           tblptrl	equ	0xFF6
  7425                           tablat	equ	0xFF5
  7426                           prodh	equ	0xFF4
  7427                           prodl	equ	0xFF3
  7428                           intcon	equ	0xFF2
  7429                           intcon2	equ	0xFF1
  7430                           postinc0	equ	0xFEE
  7431                           fsr0h	equ	0xFEA
  7432                           fsr0l	equ	0xFE9
  7433                           wreg	equ	0xFE8
  7434                           postinc1	equ	0xFE6
  7435                           fsr1h	equ	0xFE2
  7436                           fsr1l	equ	0xFE1
  7437                           indf2	equ	0xFDF
  7438                           postinc2	equ	0xFDE
  7439                           postdec2	equ	0xFDD
  7440                           plusw2	equ	0xFDB
  7441                           fsr2h	equ	0xFDA
  7442                           fsr2l	equ	0xFD9
  7443                           status	equ	0xFD8
  7444                           
  7445 ;; *************** function _EUSART1_Transmit_ISR *****************
  7446 ;; Defined at:
  7447 ;;		line 150 in file "UART.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;		None
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;		None
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7461 ;;      Params:         0       0       0       0       0       0       0
  7462 ;;      Locals:         0       0       0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0
  7464 ;;      Totals:         0       0       0       0       0       0       0
  7465 ;;Total ram usage:        0 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:    2
  7468 ;; This function calls:
  7469 ;;		_UART_buff_size
  7470 ;;		i2_UART_buff_get
  7471 ;; This function is called by:
  7472 ;;		_INTERRUPT_InterruptManager
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text45
  7477  001EA2                     __ptext45:
  7478                           	opt stack 0
  7479  001EA2                     _EUSART1_Transmit_ISR:
  7480                           	opt stack 21
  7481                           
  7482                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
  7483                           
  7484                           ;incstack = 0
  7485  001EA2  0E00               	movlw	low _output_buffer
  7486  001EA4  6E01               	movwf	UART_buff_size@_this,c
  7487  001EA6  0E04               	movlw	high _output_buffer
  7488  001EA8  6E02               	movwf	UART_buff_size@_this+1,c
  7489  001EAA  EC41  F010         	call	_UART_buff_size	;wreg free
  7490  001EAE  BE02               	btfsc	?_UART_buff_size+1,7,c
  7491  001EB0  D00D               	goto	i2l3466
  7492  001EB2  5002               	movf	?_UART_buff_size+1,w,c
  7493  001EB4  E103               	bnz	i2u224_40
  7494  001EB6  0401               	decf	?_UART_buff_size,w,c
  7495  001EB8  A0D8               	btfss	status,0,c
  7496  001EBA  D008               	goto	i2l3466
  7497  001EBC                     i2u224_40:
  7498                           
  7499                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
  7500  001EBC  0E00               	movlw	low _output_buffer
  7501  001EBE  6E07               	movwf	i2UART_buff_get@_this,c
  7502  001EC0  0E04               	movlw	high _output_buffer
  7503  001EC2  6E08               	movwf	i2UART_buff_get@_this+1,c
  7504  001EC4  ECD7  F00B         	call	i2_UART_buff_get	;wreg free
  7505  001EC8  6EAD               	movwf	4013,c	;volatile
  7506                           
  7507                           ;UART.c: 154: } else {
  7508  001ECA  0012               	return	
  7509  001ECC                     i2l3466:
  7510                           
  7511                           ;UART.c: 155: Transmit_stall = 1;
  7512  001ECC  0E01               	movlw	1
  7513  001ECE  6E42               	movwf	_Transmit_stall,c
  7514                           
  7515                           ;UART.c: 156: PIE1bits.TX1IE = 0;
  7516  001ED0  989D               	bcf	3997,4,c	;volatile
  7517  001ED2  0012               	return	
  7518  001ED4                     __end_of_EUSART1_Transmit_ISR:
  7519                           	opt stack 0
  7520                           pclatu	equ	0xFFB
  7521                           pclath	equ	0xFFA
  7522                           tblptru	equ	0xFF8
  7523                           tblptrh	equ	0xFF7
  7524                           tblptrl	equ	0xFF6
  7525                           tablat	equ	0xFF5
  7526                           prodh	equ	0xFF4
  7527                           prodl	equ	0xFF3
  7528                           intcon	equ	0xFF2
  7529                           intcon2	equ	0xFF1
  7530                           postinc0	equ	0xFEE
  7531                           fsr0h	equ	0xFEA
  7532                           fsr0l	equ	0xFE9
  7533                           wreg	equ	0xFE8
  7534                           postinc1	equ	0xFE6
  7535                           fsr1h	equ	0xFE2
  7536                           fsr1l	equ	0xFE1
  7537                           indf2	equ	0xFDF
  7538                           postinc2	equ	0xFDE
  7539                           postdec2	equ	0xFDD
  7540                           plusw2	equ	0xFDB
  7541                           fsr2h	equ	0xFDA
  7542                           fsr2l	equ	0xFD9
  7543                           status	equ	0xFD8
  7544                           
  7545 ;; *************** function i2_UART_buff_get *****************
  7546 ;; Defined at:
  7547 ;;		line 81 in file "UART.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  7550 ;;		 -> output_buffer(206), input_buffer(206), 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      unsigned char 
  7555 ;; Registers used:
  7556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7562 ;;      Params:         2       0       0       0       0       0       0
  7563 ;;      Locals:         1       0       0       0       0       0       0
  7564 ;;      Temps:          2       0       0       0       0       0       0
  7565 ;;      Totals:         5       0       0       0       0       0       0
  7566 ;;Total ram usage:        5 bytes
  7567 ;; Hardware stack levels used:    1
  7568 ;; Hardware stack levels required when called:    1
  7569 ;; This function calls:
  7570 ;;		i2_UART_buff_modulo_inc
  7571 ;; This function is called by:
  7572 ;;		_EUSART1_Transmit_ISR
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text46
  7577  0017AE                     __ptext46:
  7578                           	opt stack 0
  7579  0017AE                     i2_UART_buff_get:
  7580                           	opt stack 21
  7581                           
  7582                           ;UART.c: 82: unsigned char c;
  7583                           ;UART.c: 83: if (_this->count > 0) {
  7584                           
  7585                           ;incstack = 0
  7586  0017AE  EE20 F0CC          	lfsr	2,204
  7587  0017B2  5007               	movf	i2UART_buff_get@_this,w,c
  7588  0017B4  26D9               	addwf	fsr2l,f,c
  7589  0017B6  5008               	movf	i2UART_buff_get@_this+1,w,c
  7590  0017B8  22DA               	addwfc	fsr2h,f,c
  7591  0017BA  0E01               	movlw	1
  7592  0017BC  BEDB               	btfsc	plusw2,7,c
  7593  0017BE  D03C               	goto	i2l3452
  7594  0017C0  0E01               	movlw	1
  7595  0017C2  50DB               	movf	plusw2,w,c
  7596  0017C4  E103               	bnz	i2u222_40
  7597  0017C6  04DE               	decf	postinc2,w,c
  7598  0017C8  A0D8               	btfss	status,0,c
  7599  0017CA  D036               	goto	i2l3452
  7600  0017CC                     i2u222_40:
  7601                           
  7602                           ;UART.c: 84: c = _this->buf[_this->tail];
  7603  0017CC  EE20 F0CA          	lfsr	2,202
  7604  0017D0  5007               	movf	i2UART_buff_get@_this,w,c
  7605  0017D2  26D9               	addwf	fsr2l,f,c
  7606  0017D4  5008               	movf	i2UART_buff_get@_this+1,w,c
  7607  0017D6  22DA               	addwfc	fsr2h,f,c
  7608  0017D8  CFDE F009          	movff	postinc2,??i2_UART_buff_get
  7609  0017DC  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
  7610  0017E0  5009               	movf	??i2_UART_buff_get,w,c
  7611  0017E2  2407               	addwf	i2UART_buff_get@_this,w,c
  7612  0017E4  6ED9               	movwf	fsr2l,c
  7613  0017E6  500A               	movf	??i2_UART_buff_get+1,w,c
  7614  0017E8  2008               	addwfc	i2UART_buff_get@_this+1,w,c
  7615  0017EA  6EDA               	movwf	fsr2h,c
  7616  0017EC  50DF               	movf	indf2,w,c
  7617  0017EE  6E0B               	movwf	i2UART_buff_get@c,c
  7618                           
  7619                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  7620  0017F0  EE20 F0CA          	lfsr	2,202
  7621  0017F4  5007               	movf	i2UART_buff_get@_this,w,c
  7622  0017F6  26D9               	addwf	fsr2l,f,c
  7623  0017F8  5008               	movf	i2UART_buff_get@_this+1,w,c
  7624  0017FA  22DA               	addwfc	fsr2h,f,c
  7625  0017FC  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  7626  001800  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  7627  001804  0E00               	movlw	0
  7628  001806  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  7629  001808  0EC8               	movlw	200
  7630  00180A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  7631  00180C  ECDC  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
  7632  001810  EE20 F0CA          	lfsr	2,202
  7633  001814  5007               	movf	i2UART_buff_get@_this,w,c
  7634  001816  26D9               	addwf	fsr2l,f,c
  7635  001818  5008               	movf	i2UART_buff_get@_this+1,w,c
  7636  00181A  22DA               	addwfc	fsr2h,f,c
  7637  00181C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  7638  001820  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  7639                           
  7640                           ;UART.c: 86: --_this->count;
  7641  001824  EE20 F0CC          	lfsr	2,204
  7642  001828  5007               	movf	i2UART_buff_get@_this,w,c
  7643  00182A  26D9               	addwf	fsr2l,f,c
  7644  00182C  5008               	movf	i2UART_buff_get@_this+1,w,c
  7645  00182E  22DA               	addwfc	fsr2h,f,c
  7646  001830  06DE               	decf	postinc2,f,c
  7647  001832  0E00               	movlw	0
  7648  001834  5ADD               	subwfb	postdec2,f,c
  7649                           
  7650                           ;UART.c: 87: } else {
  7651  001836  D002               	goto	i2l801
  7652  001838                     i2l3452:
  7653                           
  7654                           ;UART.c: 88: c = 0;
  7655  001838  0E00               	movlw	0
  7656  00183A  6E0B               	movwf	i2UART_buff_get@c,c
  7657  00183C                     i2l801:
  7658                           
  7659                           ;UART.c: 89: }
  7660                           ;UART.c: 90: return (c);
  7661  00183C  500B               	movf	i2UART_buff_get@c,w,c
  7662  00183E  0012               	return	
  7663  001840                     __end_ofi2_UART_buff_get:
  7664                           	opt stack 0
  7665                           pclatu	equ	0xFFB
  7666                           pclath	equ	0xFFA
  7667                           tblptru	equ	0xFF8
  7668                           tblptrh	equ	0xFF7
  7669                           tblptrl	equ	0xFF6
  7670                           tablat	equ	0xFF5
  7671                           prodh	equ	0xFF4
  7672                           prodl	equ	0xFF3
  7673                           intcon	equ	0xFF2
  7674                           intcon2	equ	0xFF1
  7675                           postinc0	equ	0xFEE
  7676                           fsr0h	equ	0xFEA
  7677                           fsr0l	equ	0xFE9
  7678                           wreg	equ	0xFE8
  7679                           postinc1	equ	0xFE6
  7680                           fsr1h	equ	0xFE2
  7681                           fsr1l	equ	0xFE1
  7682                           indf2	equ	0xFDF
  7683                           postinc2	equ	0xFDE
  7684                           postdec2	equ	0xFDD
  7685                           plusw2	equ	0xFDB
  7686                           fsr2h	equ	0xFDA
  7687                           fsr2l	equ	0xFD9
  7688                           status	equ	0xFD8
  7689                           
  7690 ;; *************** function _UART_buff_size *****************
  7691 ;; Defined at:
  7692 ;;		line 102 in file "UART.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
  7695 ;;		 -> output_buffer(206), input_buffer(206), 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  2    0[COMRAM] int 
  7700 ;; Registers used:
  7701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7707 ;;      Params:         2       0       0       0       0       0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0
  7710 ;;      Totals:         2       0       0       0       0       0       0
  7711 ;;Total ram usage:        2 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_Receive_available
  7717 ;;		_EUSART1_Transmit_ISR
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text47
  7722  002082                     __ptext47:
  7723                           	opt stack 0
  7724  002082                     _UART_buff_size:
  7725                           	opt stack 22
  7726                           
  7727                           ;UART.c: 103: return (_this->count);
  7728                           
  7729                           ;incstack = 0
  7730  002082  EE20 F0CC          	lfsr	2,204
  7731  002086  5001               	movf	UART_buff_size@_this,w,c
  7732  002088  26D9               	addwf	fsr2l,f,c
  7733  00208A  5002               	movf	UART_buff_size@_this+1,w,c
  7734  00208C  22DA               	addwfc	fsr2h,f,c
  7735  00208E  CFDE F001          	movff	postinc2,?_UART_buff_size
  7736  002092  CFDD F002          	movff	postdec2,?_UART_buff_size+1
  7737  002096  0012               	return	
  7738  002098                     __end_of_UART_buff_size:
  7739                           	opt stack 0
  7740                           pclatu	equ	0xFFB
  7741                           pclath	equ	0xFFA
  7742                           tblptru	equ	0xFF8
  7743                           tblptrh	equ	0xFF7
  7744                           tblptrl	equ	0xFF6
  7745                           tablat	equ	0xFF5
  7746                           prodh	equ	0xFF4
  7747                           prodl	equ	0xFF3
  7748                           intcon	equ	0xFF2
  7749                           intcon2	equ	0xFF1
  7750                           postinc0	equ	0xFEE
  7751                           fsr0h	equ	0xFEA
  7752                           fsr0l	equ	0xFE9
  7753                           wreg	equ	0xFE8
  7754                           postinc1	equ	0xFE6
  7755                           fsr1h	equ	0xFE2
  7756                           fsr1l	equ	0xFE1
  7757                           indf2	equ	0xFDF
  7758                           postinc2	equ	0xFDE
  7759                           postdec2	equ	0xFDD
  7760                           plusw2	equ	0xFDB
  7761                           fsr2h	equ	0xFDA
  7762                           fsr2l	equ	0xFD9
  7763                           status	equ	0xFD8
  7764                           
  7765 ;; *************** function _EUSART1_Receive_ISR *****************
  7766 ;; Defined at:
  7767 ;;		line 139 in file "UART.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;		None
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  data            1   11[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      void 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7781 ;;      Params:         0       0       0       0       0       0       0
  7782 ;;      Locals:         1       0       0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0
  7784 ;;      Totals:         1       0       0       0       0       0       0
  7785 ;;Total ram usage:        1 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:    2
  7788 ;; This function calls:
  7789 ;;		i2_UART_buff_put
  7790 ;; This function is called by:
  7791 ;;		_INTERRUPT_InterruptManager
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text48
  7796  00204C                     __ptext48:
  7797                           	opt stack 0
  7798  00204C                     _EUSART1_Receive_ISR:
  7799                           	opt stack 21
  7800                           
  7801                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
  7802                           
  7803                           ;incstack = 0
  7804  00204C  A2AB               	btfss	4011,1,c	;volatile
  7805  00204E  D002               	goto	i2l832
  7806                           
  7807                           ;UART.c: 143: RC1STAbits.CREN = 0;
  7808  002050  98AB               	bcf	4011,4,c	;volatile
  7809                           
  7810                           ;UART.c: 144: RC1STAbits.CREN = 1;
  7811  002052  88AB               	bsf	4011,4,c	;volatile
  7812  002054                     i2l832:
  7813                           
  7814                           ;UART.c: 145: }
  7815                           ;UART.c: 146: unsigned char data = RCREG1;
  7816  002054  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
  7817                           
  7818                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
  7819  002058  0E00               	movlw	low _input_buffer
  7820  00205A  6E07               	movwf	i2UART_buff_put@_this,c
  7821  00205C  0E03               	movlw	high _input_buffer
  7822  00205E  6E08               	movwf	i2UART_buff_put@_this+1,c
  7823  002060  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
  7824  002064  EC47  F009         	call	i2_UART_buff_put	;wreg free
  7825  002068  0012               	return		;funcret
  7826  00206A                     __end_of_EUSART1_Receive_ISR:
  7827                           	opt stack 0
  7828                           pclatu	equ	0xFFB
  7829                           pclath	equ	0xFFA
  7830                           tblptru	equ	0xFF8
  7831                           tblptrh	equ	0xFF7
  7832                           tblptrl	equ	0xFF6
  7833                           tablat	equ	0xFF5
  7834                           prodh	equ	0xFF4
  7835                           prodl	equ	0xFF3
  7836                           intcon	equ	0xFF2
  7837                           intcon2	equ	0xFF1
  7838                           postinc0	equ	0xFEE
  7839                           fsr0h	equ	0xFEA
  7840                           fsr0l	equ	0xFE9
  7841                           wreg	equ	0xFE8
  7842                           postinc1	equ	0xFE6
  7843                           fsr1h	equ	0xFE2
  7844                           fsr1l	equ	0xFE1
  7845                           indf2	equ	0xFDF
  7846                           postinc2	equ	0xFDE
  7847                           postdec2	equ	0xFDD
  7848                           plusw2	equ	0xFDB
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function i2_UART_buff_put *****************
  7854 ;; Defined at:
  7855 ;;		line 68 in file "UART.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
  7858 ;;		 -> output_buffer(206), input_buffer(206), 
  7859 ;;  c               1    8[COMRAM] const unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7871 ;;      Params:         3       0       0       0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0
  7873 ;;      Temps:          2       0       0       0       0       0       0
  7874 ;;      Totals:         5       0       0       0       0       0       0
  7875 ;;Total ram usage:        5 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    1
  7878 ;; This function calls:
  7879 ;;		i2_UART_buff_modulo_inc
  7880 ;; This function is called by:
  7881 ;;		_EUSART1_Receive_ISR
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text49
  7886  00128E                     __ptext49:
  7887                           	opt stack 0
  7888  00128E                     i2_UART_buff_put:
  7889                           	opt stack 21
  7890                           
  7891                           ;UART.c: 69: if (_this->count < 200) {
  7892                           
  7893                           ;incstack = 0
  7894  00128E  EE20 F0CC          	lfsr	2,204
  7895  001292  5007               	movf	i2UART_buff_put@_this,w,c
  7896  001294  26D9               	addwf	fsr2l,f,c
  7897  001296  5008               	movf	i2UART_buff_put@_this+1,w,c
  7898  001298  22DA               	addwfc	fsr2h,f,c
  7899  00129A  0E01               	movlw	1
  7900  00129C  BEDB               	btfsc	plusw2,7,c
  7901  00129E  D007               	goto	i2l3432
  7902  0012A0  0E01               	movlw	1
  7903  0012A2  50DB               	movf	plusw2,w,c
  7904  0012A4  E13A               	bnz	i2l3438
  7905  0012A6  0EC8               	movlw	200
  7906  0012A8  5CDE               	subwf	postinc2,w,c
  7907  0012AA  B0D8               	btfsc	status,0,c
  7908  0012AC  D036               	goto	i2l3438
  7909  0012AE                     i2l3432:
  7910                           
  7911                           ;UART.c: 70: _this->buf[_this->head] = c;
  7912  0012AE  EE20 F0C8          	lfsr	2,200
  7913  0012B2  5007               	movf	i2UART_buff_put@_this,w,c
  7914  0012B4  26D9               	addwf	fsr2l,f,c
  7915  0012B6  5008               	movf	i2UART_buff_put@_this+1,w,c
  7916  0012B8  22DA               	addwfc	fsr2h,f,c
  7917  0012BA  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  7918  0012BE  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  7919  0012C2  500A               	movf	??i2_UART_buff_put,w,c
  7920  0012C4  2407               	addwf	i2UART_buff_put@_this,w,c
  7921  0012C6  6ED9               	movwf	fsr2l,c
  7922  0012C8  500B               	movf	??i2_UART_buff_put+1,w,c
  7923  0012CA  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  7924  0012CC  6EDA               	movwf	fsr2h,c
  7925  0012CE  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  7926                           
  7927                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  7928  0012D2  EE20 F0C8          	lfsr	2,200
  7929  0012D6  5007               	movf	i2UART_buff_put@_this,w,c
  7930  0012D8  26D9               	addwf	fsr2l,f,c
  7931  0012DA  5008               	movf	i2UART_buff_put@_this+1,w,c
  7932  0012DC  22DA               	addwfc	fsr2h,f,c
  7933  0012DE  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  7934  0012E2  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  7935  0012E6  0E00               	movlw	0
  7936  0012E8  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  7937  0012EA  0EC8               	movlw	200
  7938  0012EC  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  7939  0012EE  ECDC  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
  7940  0012F2  EE20 F0C8          	lfsr	2,200
  7941  0012F6  5007               	movf	i2UART_buff_put@_this,w,c
  7942  0012F8  26D9               	addwf	fsr2l,f,c
  7943  0012FA  5008               	movf	i2UART_buff_put@_this+1,w,c
  7944  0012FC  22DA               	addwfc	fsr2h,f,c
  7945  0012FE  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  7946  001302  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  7947                           
  7948                           ;UART.c: 72: ++_this->count;
  7949  001306  EE20 F0CC          	lfsr	2,204
  7950  00130A  5007               	movf	i2UART_buff_put@_this,w,c
  7951  00130C  26D9               	addwf	fsr2l,f,c
  7952  00130E  5008               	movf	i2UART_buff_put@_this+1,w,c
  7953  001310  22DA               	addwfc	fsr2h,f,c
  7954  001312  2ADE               	incf	postinc2,f,c
  7955  001314  0E00               	movlw	0
  7956  001316  22DD               	addwfc	postdec2,f,c
  7957                           
  7958                           ;UART.c: 73: } else {
  7959  001318  0012               	return	
  7960  00131A                     i2l3438:
  7961                           
  7962                           ;UART.c: 74: _this->buf[_this->head] = c;
  7963  00131A  EE20 F0C8          	lfsr	2,200
  7964  00131E  5007               	movf	i2UART_buff_put@_this,w,c
  7965  001320  26D9               	addwf	fsr2l,f,c
  7966  001322  5008               	movf	i2UART_buff_put@_this+1,w,c
  7967  001324  22DA               	addwfc	fsr2h,f,c
  7968  001326  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
  7969  00132A  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
  7970  00132E  500A               	movf	??i2_UART_buff_put,w,c
  7971  001330  2407               	addwf	i2UART_buff_put@_this,w,c
  7972  001332  6ED9               	movwf	fsr2l,c
  7973  001334  500B               	movf	??i2_UART_buff_put+1,w,c
  7974  001336  2008               	addwfc	i2UART_buff_put@_this+1,w,c
  7975  001338  6EDA               	movwf	fsr2h,c
  7976  00133A  C009  FFDF         	movff	i2UART_buff_put@c,indf2
  7977                           
  7978                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  7979  00133E  EE20 F0C8          	lfsr	2,200
  7980  001342  5007               	movf	i2UART_buff_put@_this,w,c
  7981  001344  26D9               	addwf	fsr2l,f,c
  7982  001346  5008               	movf	i2UART_buff_put@_this+1,w,c
  7983  001348  22DA               	addwfc	fsr2h,f,c
  7984  00134A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  7985  00134E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  7986  001352  0E00               	movlw	0
  7987  001354  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  7988  001356  0EC8               	movlw	200
  7989  001358  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  7990  00135A  ECDC  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
  7991  00135E  EE20 F0C8          	lfsr	2,200
  7992  001362  5007               	movf	i2UART_buff_put@_this,w,c
  7993  001364  26D9               	addwf	fsr2l,f,c
  7994  001366  5008               	movf	i2UART_buff_put@_this+1,w,c
  7995  001368  22DA               	addwfc	fsr2h,f,c
  7996  00136A  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  7997  00136E  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  7998                           
  7999                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  8000  001372  EE20 F0CA          	lfsr	2,202
  8001  001376  5007               	movf	i2UART_buff_put@_this,w,c
  8002  001378  26D9               	addwf	fsr2l,f,c
  8003  00137A  5008               	movf	i2UART_buff_put@_this+1,w,c
  8004  00137C  22DA               	addwfc	fsr2h,f,c
  8005  00137E  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
  8006  001382  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
  8007  001386  0E00               	movlw	0
  8008  001388  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
  8009  00138A  0EC8               	movlw	200
  8010  00138C  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
  8011  00138E  ECDC  F00F         	call	i2_UART_buff_modulo_inc	;wreg free
  8012  001392  EE20 F0CA          	lfsr	2,202
  8013  001396  5007               	movf	i2UART_buff_put@_this,w,c
  8014  001398  26D9               	addwf	fsr2l,f,c
  8015  00139A  5008               	movf	i2UART_buff_put@_this+1,w,c
  8016  00139C  22DA               	addwfc	fsr2h,f,c
  8017  00139E  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
  8018  0013A2  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
  8019  0013A6  0012               	return	
  8020  0013A8                     __end_ofi2_UART_buff_put:
  8021                           	opt stack 0
  8022                           pclatu	equ	0xFFB
  8023                           pclath	equ	0xFFA
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           intcon2	equ	0xFF1
  8032                           postinc0	equ	0xFEE
  8033                           fsr0h	equ	0xFEA
  8034                           fsr0l	equ	0xFE9
  8035                           wreg	equ	0xFE8
  8036                           postinc1	equ	0xFE6
  8037                           fsr1h	equ	0xFE2
  8038                           fsr1l	equ	0xFE1
  8039                           indf2	equ	0xFDF
  8040                           postinc2	equ	0xFDE
  8041                           postdec2	equ	0xFDD
  8042                           plusw2	equ	0xFDB
  8043                           fsr2h	equ	0xFDA
  8044                           fsr2l	equ	0xFD9
  8045                           status	equ	0xFD8
  8046                           
  8047 ;; *************** function i2_UART_buff_modulo_inc *****************
  8048 ;; Defined at:
  8049 ;;		line 106 in file "UART.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  value           2    0[COMRAM] const unsigned int 
  8052 ;;  modulus         2    2[COMRAM] const unsigned int 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  2    0[COMRAM] unsigned int 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8064 ;;      Params:         4       0       0       0       0       0       0
  8065 ;;      Locals:         2       0       0       0       0       0       0
  8066 ;;      Temps:          0       0       0       0       0       0       0
  8067 ;;      Totals:         6       0       0       0       0       0       0
  8068 ;;Total ram usage:        6 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		i2_UART_buff_put
  8074 ;;		i2_UART_buff_get
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text50
  8079  001FB8                     __ptext50:
  8080                           	opt stack 0
  8081  001FB8                     i2_UART_buff_modulo_inc:
  8082                           	opt stack 21
  8083                           
  8084                           ;UART.c: 107: unsigned int my_value = value + 1;
  8085                           
  8086                           ;incstack = 0
  8087  001FB8  0E01               	movlw	1
  8088  001FBA  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
  8089  001FBC  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  8090  001FBE  0E00               	movlw	0
  8091  001FC0  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
  8092  001FC2  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  8093                           
  8094                           ;UART.c: 108: if (my_value >= modulus) {
  8095  001FC4  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
  8096  001FC6  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
  8097  001FC8  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
  8098  001FCA  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
  8099  001FCC  A0D8               	btfss	status,0,c
  8100  001FCE  D004               	goto	i2l3202
  8101                           
  8102                           ;UART.c: 109: my_value = 0;
  8103  001FD0  0E00               	movlw	0
  8104  001FD2  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
  8105  001FD4  0E00               	movlw	0
  8106  001FD6  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
  8107  001FD8                     i2l3202:
  8108                           
  8109                           ;UART.c: 110: }
  8110                           ;UART.c: 111: return (my_value);
  8111  001FD8  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
  8112  001FDC  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
  8113  001FE0  0012               	return	
  8114  001FE2                     __end_ofi2_UART_buff_modulo_inc:
  8115                           	opt stack 0
  8116                           pclatu	equ	0xFFB
  8117                           pclath	equ	0xFFA
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           intcon2	equ	0xFF1
  8126                           postinc0	equ	0xFEE
  8127                           fsr0h	equ	0xFEA
  8128                           fsr0l	equ	0xFE9
  8129                           wreg	equ	0xFE8
  8130                           postinc1	equ	0xFE6
  8131                           fsr1h	equ	0xFE2
  8132                           fsr1l	equ	0xFE1
  8133                           indf2	equ	0xFDF
  8134                           postinc2	equ	0xFDE
  8135                           postdec2	equ	0xFDD
  8136                           plusw2	equ	0xFDB
  8137                           fsr2h	equ	0xFDA
  8138                           fsr2l	equ	0xFD9
  8139                           status	equ	0xFD8
  8140                           
  8141 ;; *************** function _ADC_ISR *****************
  8142 ;; Defined at:
  8143 ;;		line 130 in file "mcc_generated_files/adc.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;		None
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;		None
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  1    wreg      void 
  8150 ;; Registers used:
  8151 ;;		None
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8157 ;;      Params:         0       0       0       0       0       0       0
  8158 ;;      Locals:         0       0       0       0       0       0       0
  8159 ;;      Temps:          0       0       0       0       0       0       0
  8160 ;;      Totals:         0       0       0       0       0       0       0
  8161 ;;Total ram usage:        0 bytes
  8162 ;; Hardware stack levels used:    1
  8163 ;; This function calls:
  8164 ;;		Nothing
  8165 ;; This function is called by:
  8166 ;;		_INTERRUPT_InterruptManager
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text51
  8171  0020F6                     __ptext51:
  8172                           	opt stack 0
  8173  0020F6                     _ADC_ISR:
  8174                           	opt stack 23
  8175                           
  8176                           ;adc.c: 133: PIR1bits.ADIF = 0;
  8177                           
  8178                           ;incstack = 0
  8179  0020F6  9C9E               	bcf	3998,6,c	;volatile
  8180  0020F8  0012               	return		;funcret
  8181  0020FA                     __end_of_ADC_ISR:
  8182                           	opt stack 0
  8183                           pclatu	equ	0xFFB
  8184                           pclath	equ	0xFFA
  8185                           tblptru	equ	0xFF8
  8186                           tblptrh	equ	0xFF7
  8187                           tblptrl	equ	0xFF6
  8188                           tablat	equ	0xFF5
  8189                           prodh	equ	0xFF4
  8190                           prodl	equ	0xFF3
  8191                           intcon	equ	0xFF2
  8192                           intcon2	equ	0xFF1
  8193                           postinc0	equ	0xFEE
  8194                           fsr0h	equ	0xFEA
  8195                           fsr0l	equ	0xFE9
  8196                           wreg	equ	0xFE8
  8197                           postinc1	equ	0xFE6
  8198                           fsr1h	equ	0xFE2
  8199                           fsr1l	equ	0xFE1
  8200                           indf2	equ	0xFDF
  8201                           postinc2	equ	0xFDE
  8202                           postdec2	equ	0xFDD
  8203                           plusw2	equ	0xFDB
  8204                           fsr2h	equ	0xFDA
  8205                           fsr2l	equ	0xFD9
  8206                           status	equ	0xFD8
  8207                           pclatu	equ	0xFFB
  8208                           pclath	equ	0xFFA
  8209                           tblptru	equ	0xFF8
  8210                           tblptrh	equ	0xFF7
  8211                           tblptrl	equ	0xFF6
  8212                           tablat	equ	0xFF5
  8213                           prodh	equ	0xFF4
  8214                           prodl	equ	0xFF3
  8215                           intcon	equ	0xFF2
  8216                           intcon2	equ	0xFF1
  8217                           postinc0	equ	0xFEE
  8218                           fsr0h	equ	0xFEA
  8219                           fsr0l	equ	0xFE9
  8220                           wreg	equ	0xFE8
  8221                           postinc1	equ	0xFE6
  8222                           fsr1h	equ	0xFE2
  8223                           fsr1l	equ	0xFE1
  8224                           indf2	equ	0xFDF
  8225                           postinc2	equ	0xFDE
  8226                           postdec2	equ	0xFDD
  8227                           plusw2	equ	0xFDB
  8228                           fsr2h	equ	0xFDA
  8229                           fsr2l	equ	0xFD9
  8230                           status	equ	0xFD8
  8231                           
  8232                           	psect	text52
  8233  000000                     __ptext52:
  8234                           	opt stack 0
  8235                           pclatu	equ	0xFFB
  8236                           pclath	equ	0xFFA
  8237                           tblptru	equ	0xFF8
  8238                           tblptrh	equ	0xFF7
  8239                           tblptrl	equ	0xFF6
  8240                           tablat	equ	0xFF5
  8241                           prodh	equ	0xFF4
  8242                           prodl	equ	0xFF3
  8243                           intcon	equ	0xFF2
  8244                           intcon2	equ	0xFF1
  8245                           postinc0	equ	0xFEE
  8246                           fsr0h	equ	0xFEA
  8247                           fsr0l	equ	0xFE9
  8248                           wreg	equ	0xFE8
  8249                           postinc1	equ	0xFE6
  8250                           fsr1h	equ	0xFE2
  8251                           fsr1l	equ	0xFE1
  8252                           indf2	equ	0xFDF
  8253                           postinc2	equ	0xFDE
  8254                           postdec2	equ	0xFDD
  8255                           plusw2	equ	0xFDB
  8256                           fsr2h	equ	0xFDA
  8257                           fsr2l	equ	0xFD9
  8258                           status	equ	0xFD8
  8259                           
  8260                           	psect	rparam
  8261  0000                     pclatu	equ	0xFFB
  8262                           pclath	equ	0xFFA
  8263                           tblptru	equ	0xFF8
  8264                           tblptrh	equ	0xFF7
  8265                           tblptrl	equ	0xFF6
  8266                           tablat	equ	0xFF5
  8267                           prodh	equ	0xFF4
  8268                           prodl	equ	0xFF3
  8269                           intcon	equ	0xFF2
  8270                           intcon2	equ	0xFF1
  8271                           postinc0	equ	0xFEE
  8272                           fsr0h	equ	0xFEA
  8273                           fsr0l	equ	0xFE9
  8274                           wreg	equ	0xFE8
  8275                           postinc1	equ	0xFE6
  8276                           fsr1h	equ	0xFE2
  8277                           fsr1l	equ	0xFE1
  8278                           indf2	equ	0xFDF
  8279                           postinc2	equ	0xFDE
  8280                           postdec2	equ	0xFDD
  8281                           plusw2	equ	0xFDB
  8282                           fsr2h	equ	0xFDA
  8283                           fsr2l	equ	0xFD9
  8284                           status	equ	0xFD8
  8285                           
  8286                           	psect	temp
  8287  000043                     btemp:
  8288                           	opt stack 0
  8289  000043                     	ds	1
  8290  0000                     int$flags	set	btemp
  8291                           pclatu	equ	0xFFB
  8292                           pclath	equ	0xFFA
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           intcon	equ	0xFF2
  8300                           intcon2	equ	0xFF1
  8301                           postinc0	equ	0xFEE
  8302                           fsr0h	equ	0xFEA
  8303                           fsr0l	equ	0xFE9
  8304                           wreg	equ	0xFE8
  8305                           postinc1	equ	0xFE6
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           postinc2	equ	0xFDE
  8310                           postdec2	equ	0xFDD
  8311                           plusw2	equ	0xFDB
  8312                           fsr2h	equ	0xFDA
  8313                           fsr2l	equ	0xFD9
  8314                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    10
    Data        1
    BSS         1010
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      66
    BANK0           160     27     142
    BANK1           256      0     254
    BANK2           256      0     200
    BANK3           256      0     206
    BANK4           256      0     206
    BANK5           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[2]), STR_2(CODE[4]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK4[206]), input_buffer(BANK3[206]), ring_buffer(BANK1[206]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> NULL(NULL[0]), ring_buffer(BANK1[206]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK0[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> NULL(NULL[0]), receiveArray(BANK0[40]), 


Critical Paths under _main in COMRAM

    _main->_EnableSlavePower
    _begin->___awdiv
    _UART_buff_init->_memset
    _PotSetpoint->_Delay
    _PDUStartup->_EnableSlavePower
    _StartUp595->_Clear595
    _writeRegisters->_Delay
    _ComputeStorageData->_DATAEE_ReadByte
    _FuseSystem->_EnableSlavePower
    _printf->___lwmod
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _UART_buff_get->_UART_buff_modulo_inc
    ___lwmod->___lwdiv
    _EnableSlavePower->_SetPin595

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_ReadCurrent
    i2_Update->i2_writeRegisters
    i2_writeRegisters->i2_Delay
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->_FuseSystem
    _SYSTEM_Initialize->_begin
    _EUSART1_Initialize->_UART_buff_init
    _PotSetpoint->_Delay
    _Update->_writeRegisters
    _Clear595->_writeRegisters
    _writeRegisters->_Delay
    _FuseSystem->_printf
    _printf->_putch
    _putch->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _EnableSlavePower->_SetPin595

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   62184
                                             24 BANK0      3     3      0
                 _ComputeStorageData
                   _DATAEE_WriteByte
                              _Delay
                   _EnableSlavePower
                         _FuseSystem
                         _PDUStartup
                 _PWM4_LoadDutyValue
                        _PotSetpoint
                  _SYSTEM_Initialize
                          _SetPin595
                             _Update
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2478
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR1_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1463
                                              0 BANK0     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     599
                                             28 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                              0 BANK0      2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     830
                                             28 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PotSetpoint                                         10     8      2    1948
                                             33 COMRAM     2     0      2
                                              4 BANK0      8     8      0
                              _Delay
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     370
                                             28 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PDUStartup                                           0     0      0   16490
                 _ComputeStorageData
                   _EnableSlavePower
                         _StartUp595
                             _Update
 ---------------------------------------------------------------------------------
 (1) _Update                                               0     0      0    1698
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _StartUp595                                           0     0      0    3328
                           _Clear595
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Clear595                                             2     2      0    1797
                                             33 COMRAM     2     2      0
                     _writeRegisters
 ---------------------------------------------------------------------------------
 (2) _writeRegisters                                       4     4      0    1698
                                              4 BANK0      4     4      0
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                9     5      4    1531
                                             28 COMRAM     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _ComputeStorageData                                   4     4      0     161
                                             29 COMRAM     4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      1     1      0      31
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _FuseSystem                                           8     8      0   16135
                                             16 BANK0      8     8      0
                   _EnableSlavePower
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              20    16      4    4124
                                              5 BANK0     11     7      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0    2645
                                              4 BANK0      1     1      0
                           _Send_put
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                              3 BANK0      1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             34 COMRAM     2     2      0
                                              0 BANK0      3     0      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             34 COMRAM     2     0      2
                                              0 BANK0      3     3      0
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             35 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                             28 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EnableSlavePower                                     3     1      2   11303
                                             34 COMRAM     2     0      2
                                              4 BANK0      1     1      0
                          _SetPin595
 ---------------------------------------------------------------------------------
 (1) _SetPin595                                           10     4      6    8976
                                             28 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1    1020
                                             28 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    5955
                                             14 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0    4644
                        _ReadCurrent
 ---------------------------------------------------------------------------------
 (9) _ReadCurrent                                          1     1      0    4644
                                             13 COMRAM     1     1      0
                  _ADC_GetConversion
                        i2_SetPin595
                           i2_Update
 ---------------------------------------------------------------------------------
 (10) i2_Update                                            0     0      0     212
                   i2_writeRegisters
 ---------------------------------------------------------------------------------
 (11) i2_writeRegisters                                    4     4      0     212
                                              9 COMRAM     4     4      0
                            i2_Delay
 ---------------------------------------------------------------------------------
 (12) i2_Delay                                             9     5      4      98
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (10) i2_SetPin595                                        10     4      6    4278
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     630
                     _UART_buff_size
                    i2_UART_buff_get
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (9) _UART_buff_size                                       2     0      2     150
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ComputeStorageData
     _DATAEE_ReadByte
   _DATAEE_WriteByte
   _Delay
   _EnableSlavePower
     _SetPin595
   _FuseSystem
     _EnableSlavePower
       _SetPin595
     ___wmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _Send_put
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
   _PDUStartup
     _ComputeStorageData
       _DATAEE_ReadByte
     _EnableSlavePower
       _SetPin595
     _StartUp595
       _Clear595
         _writeRegisters
           _Delay
       _Delay
     _Update
       _writeRegisters
         _Delay
   _PWM4_LoadDutyValue
   _PotSetpoint
     _Delay
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _begin
       ___awdiv
   _SetPin595
   _Update
     _writeRegisters
       _Delay

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     _UART_buff_size
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
   _TMR1_ISR
     _ReadCurrent
       _ADC_GetConversion
       i2_SetPin595
       i2_Update
         i2_writeRegisters
           i2_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      CE      11       80.5%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C8       8       78.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      FE       6       99.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1B      8E       4       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      42       1       70.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     432       9        0.0%
DATA                 0      0     432      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Oct 05 03:33:59 2016

             i2_UART_buff_modulo_inc 1FB8                         _rx_array_inx 0040  
                       ___awdiv@sign 0022                  ___wmul@multiplicand 001F  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                                l168 1E28                                  l801 1716  
                                l750 177E                                  l921 13FA  
                                l748 1772                                  l924 145E  
                                l687 0E7C                                  l952 120C  
                       __CFG_CPB$OFF 000000                                  _PR2 000FBB  
                       __CFG_CPD$OFF 000000                      _timer1ReloadVal 0035  
                    __end_of_ADC_ISR 20FA                      _PWM4_Initialize 2098  
                                wreg 000FE8        i2UART_buff_modulo_inc@modulus 0003  
                       __CFG_LVP$OFF 000000                                 l1361 1D1E  
                               l1371 1BC8                                 l4200 1730  
                               l4300 1930                                 l4320 1CF4  
                               l4152 1FAE                                 l4208 1766  
                               l4304 193A                                 l4330 1D14  
                               l4322 1CF8                                 l4162 1C5C  
                               l4340 1B92                                 l4172 10C2  
                               l4500 1190                                 l4252 1E42  
                               l4308 1948                                 l4318 1CEC  
                               l4342 1B98                                 l4166 104A  
                               l4502 11B6                                 l4158 1C40  
                               l4262 1E68                                 l4520 1212  
                               l4600 0DCE                                 l4192 1F6C  
                               l4450 1520                                 l4442 14C2  
                               l4346 1BBC                                 l4338 1B88  
                               l4186 1710                                 l4610 0E1E  
                               l4602 0DDE                                 l4290 1910  
                               l4282 18F2                                 l4452 153E  
                               l4444 14E0                                 l4524 1264  
                               l4508 11D6                                 l4604 0DEE  
                               l4196 1F7C                                 l4292 1914  
                               l4276 18E2                                 l4454 155C  
                               l4446 14FE                                 l4526 1270  
                               l4606 0DFE                                 l4614 0E2E  
                               l4608 0E0E                                 l4616 0E68  
                               l4480 15BC                                 l4640 143E  
                               l4288 1908                                 l4458 157A  
                               l4490 116C                                 l4650 1490  
                               l4476 15AC                                 l4494 1180  
                               l4590 0D5E                                 l4582 0CE0  
                               l4486 15D6                                 l4496 1188  
                               l4578 0CCA                                 l4598 0D92  
                               l4986 0FDC                                 STR_1 060B  
                               STR_2 061B                                 STR_3 0619  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 u3440 169E  
                               u3745 1E36                                 u3746 1E38  
                               u3770 0D90                                 i2l31 1F1C  
                               u4657 1C46                                 i2l73 0070  
                               i2l65 004E                                 i2l67 005A  
                               i2l69 0066                                 _TMR2 000FBC  
                               _WPUB 000F61                      __end_ofi2_Delay 1DC0  
                               _data 0084                                 _main 0E7E  
           __end_of_EnableSlavePower 15A4                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               btemp 0043                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 00AC  
                      __CFG_IESO$OFF 000000                    ?i2_writeRegisters 0001  
                       ___param_bank 000010                        ??_ReadCurrent 000E  
                 ??i2_writeRegisters 000A       i2UART_buff_modulo_inc@my_value 0005  
          __size_of_DATAEE_WriteByte 0036       __size_of_OSCILLATOR_Initialize 000E  
      __end_of_OSCILLATOR_Initialize 20CE                                ?_main 0001  
                    __end_of___awdiv 1952                                _EEADR 000FA9  
                              _ANSB3 0079CB                                _ANSB4 0079CC  
                    _TMR1_StartTimer 20F2                                _ANSD7 0079DF  
                    ___awdiv@divisor 001F                                _T1CON 000FCD  
                              _T2CON 000FBA                                _LATB0 007C50  
                              _LATA3 007C4B                                _LATB3 007C53  
                              _LATB4 007C54                                _LATB5 007C55  
                              _LATD4 007C64                                _LATD5 007C65  
                              _LATD6 007C66                                _LATD7 007C67  
                     __CFG_DEBUG$OFF 000000                      __end_of___lwdiv 1D28  
                    __end_of___lwmod 1BD2                          ?_PDUStartup 0001  
                              i2l801 183C                                i2l750 19A0  
                              i2l832 2054                                i2l748 1996  
                              _MCSOn 003A                      ___awdiv@counter 0021  
                 _PWM4_LoadDutyValue 1ED4                                _TMR1H 000FCF  
                              _TMR1L 000FCE                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                              _Delay 1C2C                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                 _EUSART1_Transmit_ISR 1EA2  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                     ??_writeRegisters 0022  
                   __end_of_TMR1_ISR 1F62                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                              _begin 1BD2                      _DATAEE_ReadByte 20AC  
                     __CFG_EBTRB$OFF 000000                      __end_of_dpowers 060B  
                              _group 0025                  ?_PWM4_LoadDutyValue 001D  
                 __CFG_MCLRE$EXTMCLR 000000                                _putch 20CE  
                              main@i 00EC              __end_of_TMR1_Initialize 2008  
                   __end_ofi2_Update 20F2                                tablat 000FF5  
                              plusw2 000FDB                       begin@stuffpeek 00DE  
                              status 000FD8                     __end_of_Clear595 1E6E  
                     __CFG_HFOFST$ON 000000                       __CFG_PBADEN$ON 000000  
               PotSetpoint@new_point 0022                      __initialization 1AAC  
         __end_of_EUSART1_Initialize 1E04                         __end_of_main 1028  
                         _CurrentADC 006C                 ??_PWM4_LoadDutyValue 001F  
            __end_of_PWM4_Initialize 20AC                            ??_ADC_ISR 0001  
        ?_INTERRUPT_InterruptManager 0001                 PotSetpoint@set_point 00D9  
                         _FuseSystem 0CB0                               ??_main 0025  
                __end_of_ReadCurrent 0CB0                        __activetblptr 000002  
                   __end_of_Send_put 1EA2                               ?_Delay 001D  
              ?_EUSART1_Transmit_ISR 0001                               ?_begin 00D3  
                          ??i2_Delay 0005                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                        FuseSystem@i 00E7                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _EEDATA 000FA8  
                             _CCPR2H 000F68                               _CCPR2L 000F67  
                             _EECON2 000FA7                     ___awdiv@dividend 001D  
                             _ANSELA 000F38                               ?_putch 0001  
                             _ANSELB 000F39                               _ANSELC 000F3A  
                             _ANSELD 000F3B                               _ANSELE 000F3C  
                             _T1GCON 000FCC                      i2_UART_buff_get 17AE  
                             _RC1STA 000FAB                               i2l3000 1DA2  
                    i2_UART_buff_put 128E                               i2l3202 1FD8  
                             i2l3052 198E                               i2l3044 1962  
                             Delay@i 00D3                               i2l3302 0738  
                             i2l3320 0A80                               i2l3314 0968  
                             i2l3308 0850                               i2l3326 0B98  
                     __CFG_WDTEN$OFF 000000                               i2l3432 12AE  
                             i2l3452 1838                               i2l3438 131A  
        UART_buff_modulo_inc@modulus 001F                               i2l3466 1ECC  
                             i2l3482 1F5A                               i2l2996 1D88  
                             _TABLAT 000FF5                               _RCREG1 000FAE  
                             _OSCCON 000FD3                               _SPBRG1 000FAF  
                             _TX1STA 000FAC                               _TRISB3 007C9B  
                             _TRISB4 007C9C                               _TRISB5 007C9D  
                             _TXREG1 000FAD                  __size_of_PDUStartup 0054  
                     __CFG_XINST$OFF 000000                        ??_PotSetpoint 00D7  
                       _CCPTMRS1bits 000F48                               _Update 20E6  
                 __size_of_SetPin595 006A                        _output_buffer 0400  
            __end_of_TMR1_StartTimer 20F6                               ___wmul 2008  
                          ??___awdiv 0021                       __CFG_STVREN$ON 000000  
                          ??___lwdiv 0021                            ??___lwmod 0024  
                             _memset 1F62                               clear_0 1AB2  
                             clear_1 1ABE                               clear_2 1ACA  
                             clear_3 1AD6                               clear_4 1AE2  
                             clear_5 1AEE                     ___awdiv@quotient 0023  
                             _printf 115E                               main@UP 00EB  
                             _rx_len 0041              __end_of_DATAEE_ReadByte 20C0  
                       __pdataCOMRAM 0042                        Send_put@_data 00D6  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                         _StartUp595 1B14             ADC_GetConversion@channel 0005  
       __end_of_UART_buff_modulo_inc 1FB8        __size_of_INTERRUPT_Initialize 000A  
                  ReadCurrent@gather 000E                     ?_TMR1_Initialize 0001  
                  _SYSTEM_Initialize 19D0                           __accesstop 0060  
            __end_of__initialization 1B06                         ?i2_SetPin595 0001  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 000001  
            ?i2_UART_buff_modulo_inc 0001                        __end_of_Delay 1C82  
                     __pcstackCOMRAM 0001                  ??_SYSTEM_Initialize 0025  
                        _ReadCurrent 0620                        __end_of_begin 1C2C  
                          ?_TMR1_ISR 0001                     _DATAEE_WriteByte 1E04  
                      __end_of_putch 20DC                     ?_PWM4_Initialize 0001  
                        ?_FuseSystem 0001                            ?i2_Update 0001  
                __end_of_PotSetpoint 14BC          __size_of_ComputeStorageData 00DC  
        PWM4_LoadDutyValue@dutyValue 001D                   UART_buff_get@_this 0023  
                        _Currentcomp 0078                __end_of_UART_buff_get 171C  
             ??_EUSART1_Transmit_ISR 000C                __end_of_UART_buff_put 115E  
                          ?_Clear595 0001                              ??_Delay 0021  
            __end_ofi2_UART_buff_get 1840              __end_ofi2_UART_buff_put 13A8  
        __end_of_EUSART1_Receive_ISR 206A                              ??_begin 0025  
                  __end_of_SetPin595 1AAC            __end_of_SYSTEM_Initialize 1A42  
                            ??_putch 0025                  _addressErrorCounter 0090  
                         __pbssBANK0 0060                           __pbssBANK1 0100  
                         __pbssBANK2 0200                           __pbssBANK3 0300  
                         __pbssBANK4 0400                      __CFG_PLLCFG$OFF 000000  
                        _Receive_get 000000       __end_ofi2_UART_buff_modulo_inc 1FE2  
                  begin@givenAddress 00D6                    ?_EnableSlavePower 0023  
            __size_of_UART_buff_init 001E              __size_of_UART_buff_size 0016  
                          ?_Send_put 0001                   ??_EnableSlavePower 0025  
                 __CFG_CCP2MX$PORTC1 000000                              ?_Update 0001  
                            ?___wmul 001D                     ?_TMR1_StartTimer 0001  
                         ??_TMR1_ISR 000F                   __CFG_CCP3MX$PORTB5 000000  
                            _CCP2CON 000F66                              _ADC_ISR 20F6  
                            ?_memset 001D                           _crc_buffer 00C2  
                            ?_printf 00D8                           ??i2_Update 000E  
            __size_of_ADC_Initialize 0018                     ?_DATAEE_ReadByte 0001  
                       ??_PDUStartup 0025                   UART_buff_put@_this 00D3  
                         ??_Clear595 0022            __size_ofi2_writeRegisters 007E  
        i2UART_buff_modulo_inc@value 0001                              _OSCCON2 000FD2  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8                          ?_StartUp595 0001  
                  _Receive_available 000000         UART_buff_modulo_inc@my_value 0021  
                  __CFG_PRICLKEN$OFF 000000                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                  _receiveArrayAddress 0098  
                            i2_Delay 1D76                           begin@error 00D7  
               DATAEE_WriteByte@bAdd 001E                  __size_of_FuseSystem 01CE  
                            _Current 0060                    _alignErrorCounter 0092  
                    __CFG_PWRTEN$OFF 000000                           ??_Send_put 0025  
                            __Hparam 0000                              __Lparam 0000  
                 __end_of_PDUStartup 1CD6                          _PotSetpoint 13A8  
                          _AKNAKsend 0039                      __size_of_Update 0006  
                            ___awdiv 18CE                 _UART_buff_modulo_inc 1F8E  
                    __size_of___wmul 0026                              ___lwdiv 1CD6  
                            _calc_CS 003B                              ___lwmod 1B76  
                       __psmallconst 0600                              __pcinit 1AAC  
                    __size_of_memset 002C                              __ramtop 0600  
                   i2UART_buff_get@c 000B                              __ptext0 0E7E  
                            __ptext1 19D0                              __ptext2 1BD2  
                            __ptext3 18CE                              __ptext4 1FE2  
                            __ptext5 20F2                              __ptext6 2098  
                            __ptext7 1840                              __ptext8 20C0  
                            __ptext9 20DC                      __size_of_printf 0130  
                   i2UART_buff_put@c 0009                            _T1CONbits 000FCD  
                            _dpowers 0601                _OSCILLATOR_Initialize 20C0  
                          _T2CONbits 000FBA                   _EUSART1_Initialize 1DC0  
                   ?i2_UART_buff_get 0007             ??_PIN_MANAGER_Initialize 001D  
                          Clear595@i 0022                     ?i2_UART_buff_put 0007  
         __size_of_SYSTEM_Initialize 0072                 end_of_initialization 1B06  
                          Delay@wait 001D                  ?_EUSART1_Initialize 0001  
                            memset@c 001F                              memset@n 0021  
                            memset@p 0023                        __Lmediumconst 0000  
               __size_ofi2_SetPin595 004E                              printf@c 00E2  
                            printf@f 00D8                ?_UART_buff_modulo_inc 001D  
                            postdec2 000FDD                  __size_of_StartUp595 0062  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE          __size_of_PWM4_LoadDutyValue 0030  
                   begin@stufftosend 00D8                         SetPin595@Reg 001D  
               ??_EUSART1_Initialize 0025                         SetPin595@pin 001F  
             _dataAdressErrorCounter 0096                           _rx_address 003F  
                          _TRISCbits 000F94                            _TRISDbits 000F95  
                   FuseSystem@i_1562 00E9             __end_of_DATAEE_WriteByte 1E3A  
                       begin@maxSize 00D5                       _UART_buff_init 202E  
                     _UART_buff_size 2082              __size_of_writeRegisters 0092  
                      _moduleAddress 003D                         ?_ReadCurrent 0001  
       __end_of_INTERRUPT_Initialize 20E6                       __end_of_Update 20EC  
                    _crcErrorCounter 0094                       __end_of___wmul 202E  
                      __pidataCOMRAM 20FA                         ??_FuseSystem 00E3  
                  __size_of_TMR1_ISR 002E                       _ADC_Initialize 206A  
             ?_OSCILLATOR_Initialize 0001                       __end_of_memset 1F8E  
                     __end_of_printf 128E                     i2_writeRegisters 1952  
                  __size_ofi2_Update 0006                  start_initialization 1AAC  
    __size_of_PIN_MANAGER_Initialize 008E                EnableSlavePower@slave 00D7  
                  __size_of_Clear595 0034                  i2writeRegisters@val 000A  
                        putch@txData 00D7               __end_of_UART_buff_init 204C  
                     UART_buff_get@c 00D5               __end_of_UART_buff_size 2098  
                          _SetPin595 1A42                       UART_buff_put@c 00D5  
                DATAEE_ReadByte@bAdd 001D                   __end_of_FuseSystem 0E7E  
             ??_UART_buff_modulo_inc 0021             __size_of_TMR1_Initialize 0026  
                           ??_Update 0022                    __size_of_Send_put 0034  
                           ??___wmul 0021               __end_of_ADC_Initialize 2082  
         __end_of_ComputeStorageData 1680                             ?_ADC_ISR 0001  
                           ??_memset 0023                             ??_printf 0025  
          __size_of_EnableSlavePower 00E8                          __pbssCOMRAM 0025  
      __size_of_EUSART1_Transmit_ISR 0032                        __pcstackBANK0 00D3  
                       ??_StartUp595 0024             __size_of_PWM4_Initialize 0014  
                           ?i2_Delay 0001                         _Receive_peek 000000  
                UART_buff_init@_this 00D3                    i2writeRegisters@i 000C  
                    ?_UART_buff_init 00D3                      ?_UART_buff_size 0001  
       __size_of_EUSART1_Receive_ISR 001E                           ?_SetPin595 001D  
             __size_of_UART_buff_get 009C               __size_of_UART_buff_put 0136  
                   ___lwdiv@dividend 001D               _PIN_MANAGER_Initialize 1840  
                       ?_PotSetpoint 0022                            __pintcode 0008  
                           ?___awdiv 001D                   __end_of_StartUp595 1B76  
                           ?___lwdiv 001D                             ?___lwmod 00D3  
                    ?_ADC_Initialize 0001         ??_INTERRUPT_InterruptManager 000F  
               i2UART_buff_get@_this 0007                       i2SetPin595@Reg 0001  
                     i2SetPin595@pin 0003                             _BAUD1CON 000FB8  
                        __smallconst 0600             __size_of_TMR1_StartTimer 0004  
                     __size_of_Delay 0056                       __size_of_begin 005A  
                   ___lwdiv@quotient 0022             __size_of_DATAEE_ReadByte 0014  
                     __size_of_putch 000E                 _INTERRUPT_Initialize 20DC  
                       _receiveArray 009A                       ___wmul@product 0021  
                           _LATCbits 000F8B                       _writeRegisters 171C  
                UART_buff_size@_this 0001                            _registers 0100  
                           _IPR1bits 000F9F                             _PIE1bits 000F9D  
                           i2Delay@i 0006                             i2u222_40 17CC  
__size_of_INTERRUPT_InterruptManager 00A4                             i2u224_40 1EBC  
                           i2u225_40 1F52                             _PIR1bits 000F9E  
                           i2u466_47 1D8E                  begin@stuffavailable 00DC  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                           _TMR1_ISR 1F34                         PotSetpoint@x 00DB  
                       _input_buffer 0300                 __size_of_ReadCurrent 0690  
                          _rx_buffer 0200                    ??_TMR1_Initialize 001D  
                   __size_of_ADC_ISR 0004                             i2_Update 20EC  
                         _ADCON0bits 000FC2                           _ADCON2bits 000FC0  
                  ___wmul@multiplier 001D                 i2UART_buff_put@_this 0007  
                         printf@flag 00DC                     i2SetPin595@value 0005  
                           _Clear595 1E3A                        _UART_buff_get 1680  
                         printf@prec 00E1                        _UART_buff_put 1028  
              DATAEE_WriteByte@bData 001D             ??i2_UART_buff_modulo_inc 0005  
                        _INTCON2bits 000FF1                     __size_ofi2_Delay 004A  
              ?_INTERRUPT_Initialize 0001                    _sendStructAddress 002B  
                  ?_DATAEE_WriteByte 001D               __end_of_writeRegisters 17AE  
                 PotSetpoint@new_pos 00DD                        ??i2_SetPin595 0007  
                        ??_SetPin595 00D3                 EnableSlavePower@onof 0023  
           __size_ofi2_UART_buff_get 0092                    ??_PWM4_Initialize 001D  
           __size_ofi2_UART_buff_put 011A                   ??_DATAEE_WriteByte 001E  
                         _EECON1bits 000FA6             __end_ofi2_writeRegisters 19D0  
                           __Hrparam 0000                             _Send_put 1E6E  
         __end_of_PWM4_LoadDutyValue 1F04                             __Lrparam 0000  
                  _ADC_GetConversion 1F04                   __CFG_BOREN$SBORDIS 000000  
                  __CFG_P2BMX$PORTD2 000000              ??_OSCILLATOR_Initialize 001D  
                 ?_ADC_GetConversion 0001                     __size_of___awdiv 0084  
        __size_of_EUSART1_Initialize 0044                     __size_of___lwdiv 0052  
                   __size_of___lwmod 005C                  begin@stufftoreceive 00DA  
                   _EnableSlavePower 14BC                           _ANSELCbits 000F3A  
                         _ANSELDbits 000F3B                       ?_UART_buff_get 0023  
                     ?_UART_buff_put 00D3                  ??_ADC_GetConversion 0003  
                    ___lwdiv@divisor 001F                      ___lwdiv@counter 0021  
                           __ptext10 1DC0                             __ptext11 202E  
                           __ptext20 171C                             __ptext12 1F62  
                           __ptext21 1C2C                             __ptext13 206A  
                         _T1GCONbits 000FCC                             __ptext30 1F8E  
                           __ptext22 15A4                             __ptext14 13A8  
                           __ptext31 1B76                             __ptext23 20AC  
                           __ptext15 1ED4                             __ptext40 20EC  
                           __ptext32 1CD6                             __ptext24 0CB0  
                           __ptext16 1C82                             __ptext41 1952  
                           __ptext33 2008                             __ptext25 115E  
                           __ptext17 20E6                             __ptext50 1FB8  
                           __ptext42 1D76                             __ptext34 14BC  
                           __ptext26 20CE                             __ptext18 1B14  
                           __ptext51 20F6                             __ptext43 1D28  
                           __ptext35 1A42                             __ptext27 1E6E  
                           __ptext19 1E3A                             __ptext52 0000  
                           __ptext44 1F04                             __ptext36 1E04  
                           __ptext28 1028                             __ptext45 1EA2  
                           __ptext29 1680                             __ptext46 17AE  
                           __ptext38 1F34                             __ptext47 2082  
                           __ptext39 0620                             __ptext48 204C  
                           __ptext49 128E                    ??_TMR1_StartTimer 001D  
                           begin@ptr 00D3                          i2Delay@wait 0001  
        DATAEE_WriteByte@GIEBitValue 001F              EUSART1_Receive_ISR@data 000C  
                    ?_writeRegisters 0001                        _returnAddress 003E  
                      __size_of_main 01AA                             _readwhat 0029  
                     _Transmit_stall 0042                    ??_DATAEE_ReadByte 001D  
          __end_of_ADC_GetConversion 1F34                           _RC1STAbits 000FAB  
                __end_ofi2_SetPin595 1D76                             _prev_pos 0027  
                  writeRegisters@val 00D7                             int$flags 0043  
                       _serial_write 0033   __end_of_INTERRUPT_InterruptManager 00AC  
         _INTERRUPT_InterruptManager 0008                 __size_of_PotSetpoint 0114  
                          printf@val 00DF                  _EUSART1_Receive_ISR 204C  
                         _INTCONbits 000FF2                  ComputeStorageData@i 0020  
          UART_buff_modulo_inc@value 001D                     ??_UART_buff_init 0025  
                   ??_UART_buff_size 0003                   _ComputeStorageData 15A4  
             ??_INTERRUPT_Initialize 001D                             memset@p1 001D  
                   _serial_available 002D      __size_ofi2_UART_buff_modulo_inc 002A  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0001  
                   ___lwmod@dividend 00D3                  ?_ComputeStorageData 0001  
            ?_PIN_MANAGER_Initialize 0001                       SetPin595@value 0021  
       __end_of_EUSART1_Transmit_ISR 1ED4                          _ring_buffer 0130  
                   ??_ADC_Initialize 001D                    ??i2_UART_buff_get 0009  
                        _serial_peek 002F                          _serial_read 0031  
                  ??i2_UART_buff_put 000A                             printf@ap 00DD  
      __size_of_UART_buff_modulo_inc 002A                      ??_UART_buff_get 00D3  
                    ??_UART_buff_put 0023                 ??_ComputeStorageData 001E  
                         _PDUStartup 1C82                      ___lwmod@divisor 00D5  
                    ___lwmod@counter 0024                    __CFG_T3CMX$PORTC0 000000  
                     _maxDataAddress 003C                      writeRegisters@i 00D9  
              ??_EUSART1_Receive_ISR 000C       __end_of_PIN_MANAGER_Initialize 18CE  
      updateComms@previousPowerState 0037                          i2_SetPin595 1D28  
                  __CFG_FOSC$INTIO67 000000           __size_of_ADC_GetConversion 0030  
                    _TMR1_Initialize 1FE2  
