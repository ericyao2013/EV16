

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Aug 29 09:48:05 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112  0000                     
   113                           	psect	idataCOMRAM
   114  0031FE                     __pidataCOMRAM:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _Transmit_stall
   118  0031FE  01                 	db	1
   119                           
   120                           	psect	mediumconst
   121  007BD2                     __pmediumconst:
   122                           	opt stack 0
   123  007BD2  00                 	db	0
   124  007BD3                     _OledFont:
   125                           	opt stack 0
   126  007BD3  00                 	db	0
   127  007BD4  00                 	db	0
   128  007BD5  00                 	db	0
   129  007BD6  00                 	db	0
   130  007BD7  00                 	db	0
   131  007BD8  00                 	db	0
   132  007BD9  00                 	db	0
   133  007BDA  00                 	db	0
   134  007BDB  00                 	db	0
   135  007BDC  00                 	db	0
   136  007BDD  5F                 	db	95
   137  007BDE  00                 	db	0
   138  007BDF  00                 	db	0
   139  007BE0  00                 	db	0
   140  007BE1  00                 	db	0
   141  007BE2  00                 	db	0
   142  007BE3  00                 	db	0
   143  007BE4  00                 	db	0
   144  007BE5  07                 	db	7
   145  007BE6  00                 	db	0
   146  007BE7  07                 	db	7
   147  007BE8  00                 	db	0
   148  007BE9  00                 	db	0
   149  007BEA  00                 	db	0
   150  007BEB  00                 	db	0
   151  007BEC  14                 	db	20
   152  007BED  7F                 	db	127
   153  007BEE  14                 	db	20
   154  007BEF  7F                 	db	127
   155  007BF0  14                 	db	20
   156  007BF1  00                 	db	0
   157  007BF2  00                 	db	0
   158  007BF3  00                 	db	0
   159  007BF4  24                 	db	36
   160  007BF5  2A                 	db	42
   161  007BF6  7F                 	db	127
   162  007BF7  2A                 	db	42
   163  007BF8  12                 	db	18
   164  007BF9  00                 	db	0
   165  007BFA  00                 	db	0
   166  007BFB  00                 	db	0
   167  007BFC  23                 	db	35
   168  007BFD  13                 	db	19
   169  007BFE  08                 	db	8
   170  007BFF  64                 	db	100
   171  007C00  62                 	db	98
   172  007C01  00                 	db	0
   173  007C02  00                 	db	0
   174  007C03  00                 	db	0
   175  007C04  36                 	db	54
   176  007C05  49                 	db	73
   177  007C06  55                 	db	85
   178  007C07  22                 	db	34
   179  007C08  50                 	db	80
   180  007C09  00                 	db	0
   181  007C0A  00                 	db	0
   182  007C0B  00                 	db	0
   183  007C0C  00                 	db	0
   184  007C0D  05                 	db	5
   185  007C0E  03                 	db	3
   186  007C0F  00                 	db	0
   187  007C10  00                 	db	0
   188  007C11  00                 	db	0
   189  007C12  00                 	db	0
   190  007C13  00                 	db	0
   191  007C14  1C                 	db	28
   192  007C15  22                 	db	34
   193  007C16  41                 	db	65
   194  007C17  00                 	db	0
   195  007C18  00                 	db	0
   196  007C19  00                 	db	0
   197  007C1A  00                 	db	0
   198  007C1B  00                 	db	0
   199  007C1C  41                 	db	65
   200  007C1D  22                 	db	34
   201  007C1E  1C                 	db	28
   202  007C1F  00                 	db	0
   203  007C20  00                 	db	0
   204  007C21  00                 	db	0
   205  007C22  00                 	db	0
   206  007C23  00                 	db	0
   207  007C24  08                 	db	8
   208  007C25  2A                 	db	42
   209  007C26  1C                 	db	28
   210  007C27  2A                 	db	42
   211  007C28  08                 	db	8
   212  007C29  00                 	db	0
   213  007C2A  00                 	db	0
   214  007C2B  00                 	db	0
   215  007C2C  08                 	db	8
   216  007C2D  08                 	db	8
   217  007C2E  3E                 	db	62
   218  007C2F  08                 	db	8
   219  007C30  08                 	db	8
   220  007C31  00                 	db	0
   221  007C32  00                 	db	0
   222  007C33  00                 	db	0
   223  007C34  A0                 	db	160
   224  007C35  60                 	db	96
   225  007C36  00                 	db	0
   226  007C37  00                 	db	0
   227  007C38  00                 	db	0
   228  007C39  00                 	db	0
   229  007C3A  00                 	db	0
   230  007C3B  00                 	db	0
   231  007C3C  08                 	db	8
   232  007C3D  08                 	db	8
   233  007C3E  08                 	db	8
   234  007C3F  08                 	db	8
   235  007C40  08                 	db	8
   236  007C41  00                 	db	0
   237  007C42  00                 	db	0
   238  007C43  00                 	db	0
   239  007C44  60                 	db	96
   240  007C45  60                 	db	96
   241  007C46  00                 	db	0
   242  007C47  00                 	db	0
   243  007C48  00                 	db	0
   244  007C49  00                 	db	0
   245  007C4A  00                 	db	0
   246  007C4B  00                 	db	0
   247  007C4C  20                 	db	32
   248  007C4D  10                 	db	16
   249  007C4E  08                 	db	8
   250  007C4F  04                 	db	4
   251  007C50  02                 	db	2
   252  007C51  00                 	db	0
   253  007C52  00                 	db	0
   254  007C53  00                 	db	0
   255  007C54  3E                 	db	62
   256  007C55  51                 	db	81
   257  007C56  49                 	db	73
   258  007C57  45                 	db	69
   259  007C58  3E                 	db	62
   260  007C59  00                 	db	0
   261  007C5A  00                 	db	0
   262  007C5B  00                 	db	0
   263  007C5C  00                 	db	0
   264  007C5D  42                 	db	66
   265  007C5E  7F                 	db	127
   266  007C5F  40                 	db	64
   267  007C60  00                 	db	0
   268  007C61  00                 	db	0
   269  007C62  00                 	db	0
   270  007C63  00                 	db	0
   271  007C64  62                 	db	98
   272  007C65  51                 	db	81
   273  007C66  49                 	db	73
   274  007C67  49                 	db	73
   275  007C68  46                 	db	70
   276  007C69  00                 	db	0
   277  007C6A  00                 	db	0
   278  007C6B  00                 	db	0
   279  007C6C  22                 	db	34
   280  007C6D  41                 	db	65
   281  007C6E  49                 	db	73
   282  007C6F  49                 	db	73
   283  007C70  36                 	db	54
   284  007C71  00                 	db	0
   285  007C72  00                 	db	0
   286  007C73  00                 	db	0
   287  007C74  18                 	db	24
   288  007C75  14                 	db	20
   289  007C76  12                 	db	18
   290  007C77  7F                 	db	127
   291  007C78  10                 	db	16
   292  007C79  00                 	db	0
   293  007C7A  00                 	db	0
   294  007C7B  00                 	db	0
   295  007C7C  27                 	db	39
   296  007C7D  45                 	db	69
   297  007C7E  45                 	db	69
   298  007C7F  45                 	db	69
   299  007C80  39                 	db	57
   300  007C81  00                 	db	0
   301  007C82  00                 	db	0
   302  007C83  00                 	db	0
   303  007C84  3C                 	db	60
   304  007C85  4A                 	db	74
   305  007C86  49                 	db	73
   306  007C87  49                 	db	73
   307  007C88  30                 	db	48
   308  007C89  00                 	db	0
   309  007C8A  00                 	db	0
   310  007C8B  00                 	db	0
   311  007C8C  01                 	db	1
   312  007C8D  71                 	db	113
   313  007C8E  09                 	db	9
   314  007C8F  05                 	db	5
   315  007C90  03                 	db	3
   316  007C91  00                 	db	0
   317  007C92  00                 	db	0
   318  007C93  00                 	db	0
   319  007C94  36                 	db	54
   320  007C95  49                 	db	73
   321  007C96  49                 	db	73
   322  007C97  49                 	db	73
   323  007C98  36                 	db	54
   324  007C99  00                 	db	0
   325  007C9A  00                 	db	0
   326  007C9B  00                 	db	0
   327  007C9C  06                 	db	6
   328  007C9D  49                 	db	73
   329  007C9E  49                 	db	73
   330  007C9F  29                 	db	41
   331  007CA0  1E                 	db	30
   332  007CA1  00                 	db	0
   333  007CA2  00                 	db	0
   334  007CA3  00                 	db	0
   335  007CA4  00                 	db	0
   336  007CA5  36                 	db	54
   337  007CA6  36                 	db	54
   338  007CA7  00                 	db	0
   339  007CA8  00                 	db	0
   340  007CA9  00                 	db	0
   341  007CAA  00                 	db	0
   342  007CAB  00                 	db	0
   343  007CAC  00                 	db	0
   344  007CAD  AC                 	db	172
   345  007CAE  6C                 	db	108
   346  007CAF  00                 	db	0
   347  007CB0  00                 	db	0
   348  007CB1  00                 	db	0
   349  007CB2  00                 	db	0
   350  007CB3  00                 	db	0
   351  007CB4  08                 	db	8
   352  007CB5  14                 	db	20
   353  007CB6  22                 	db	34
   354  007CB7  41                 	db	65
   355  007CB8  00                 	db	0
   356  007CB9  00                 	db	0
   357  007CBA  00                 	db	0
   358  007CBB  00                 	db	0
   359  007CBC  14                 	db	20
   360  007CBD  14                 	db	20
   361  007CBE  14                 	db	20
   362  007CBF  14                 	db	20
   363  007CC0  14                 	db	20
   364  007CC1  00                 	db	0
   365  007CC2  00                 	db	0
   366  007CC3  00                 	db	0
   367  007CC4  41                 	db	65
   368  007CC5  22                 	db	34
   369  007CC6  14                 	db	20
   370  007CC7  08                 	db	8
   371  007CC8  00                 	db	0
   372  007CC9  00                 	db	0
   373  007CCA  00                 	db	0
   374  007CCB  00                 	db	0
   375  007CCC  02                 	db	2
   376  007CCD  01                 	db	1
   377  007CCE  51                 	db	81
   378  007CCF  09                 	db	9
   379  007CD0  06                 	db	6
   380  007CD1  00                 	db	0
   381  007CD2  00                 	db	0
   382  007CD3  00                 	db	0
   383  007CD4  32                 	db	50
   384  007CD5  49                 	db	73
   385  007CD6  79                 	db	121
   386  007CD7  41                 	db	65
   387  007CD8  3E                 	db	62
   388  007CD9  00                 	db	0
   389  007CDA  00                 	db	0
   390  007CDB  00                 	db	0
   391  007CDC  7E                 	db	126
   392  007CDD  09                 	db	9
   393  007CDE  09                 	db	9
   394  007CDF  09                 	db	9
   395  007CE0  7E                 	db	126
   396  007CE1  00                 	db	0
   397  007CE2  00                 	db	0
   398  007CE3  00                 	db	0
   399  007CE4  7F                 	db	127
   400  007CE5  49                 	db	73
   401  007CE6  49                 	db	73
   402  007CE7  49                 	db	73
   403  007CE8  36                 	db	54
   404  007CE9  00                 	db	0
   405  007CEA  00                 	db	0
   406  007CEB  00                 	db	0
   407  007CEC  3E                 	db	62
   408  007CED  41                 	db	65
   409  007CEE  41                 	db	65
   410  007CEF  41                 	db	65
   411  007CF0  22                 	db	34
   412  007CF1  00                 	db	0
   413  007CF2  00                 	db	0
   414  007CF3  00                 	db	0
   415  007CF4  7F                 	db	127
   416  007CF5  41                 	db	65
   417  007CF6  41                 	db	65
   418  007CF7  22                 	db	34
   419  007CF8  1C                 	db	28
   420  007CF9  00                 	db	0
   421  007CFA  00                 	db	0
   422  007CFB  00                 	db	0
   423  007CFC  7F                 	db	127
   424  007CFD  49                 	db	73
   425  007CFE  49                 	db	73
   426  007CFF  49                 	db	73
   427  007D00  41                 	db	65
   428  007D01  00                 	db	0
   429  007D02  00                 	db	0
   430  007D03  00                 	db	0
   431  007D04  7F                 	db	127
   432  007D05  09                 	db	9
   433  007D06  09                 	db	9
   434  007D07  09                 	db	9
   435  007D08  01                 	db	1
   436  007D09  00                 	db	0
   437  007D0A  00                 	db	0
   438  007D0B  00                 	db	0
   439  007D0C  3E                 	db	62
   440  007D0D  41                 	db	65
   441  007D0E  41                 	db	65
   442  007D0F  51                 	db	81
   443  007D10  72                 	db	114
   444  007D11  00                 	db	0
   445  007D12  00                 	db	0
   446  007D13  00                 	db	0
   447  007D14  7F                 	db	127
   448  007D15  08                 	db	8
   449  007D16  08                 	db	8
   450  007D17  08                 	db	8
   451  007D18  7F                 	db	127
   452  007D19  00                 	db	0
   453  007D1A  00                 	db	0
   454  007D1B  00                 	db	0
   455  007D1C  41                 	db	65
   456  007D1D  7F                 	db	127
   457  007D1E  41                 	db	65
   458  007D1F  00                 	db	0
   459  007D20  00                 	db	0
   460  007D21  00                 	db	0
   461  007D22  00                 	db	0
   462  007D23  00                 	db	0
   463  007D24  20                 	db	32
   464  007D25  40                 	db	64
   465  007D26  41                 	db	65
   466  007D27  3F                 	db	63
   467  007D28  01                 	db	1
   468  007D29  00                 	db	0
   469  007D2A  00                 	db	0
   470  007D2B  00                 	db	0
   471  007D2C  7F                 	db	127
   472  007D2D  08                 	db	8
   473  007D2E  14                 	db	20
   474  007D2F  22                 	db	34
   475  007D30  41                 	db	65
   476  007D31  00                 	db	0
   477  007D32  00                 	db	0
   478  007D33  00                 	db	0
   479  007D34  7F                 	db	127
   480  007D35  40                 	db	64
   481  007D36  40                 	db	64
   482  007D37  40                 	db	64
   483  007D38  40                 	db	64
   484  007D39  00                 	db	0
   485  007D3A  00                 	db	0
   486  007D3B  00                 	db	0
   487  007D3C  7F                 	db	127
   488  007D3D  02                 	db	2
   489  007D3E  0C                 	db	12
   490  007D3F  02                 	db	2
   491  007D40  7F                 	db	127
   492  007D41  00                 	db	0
   493  007D42  00                 	db	0
   494  007D43  00                 	db	0
   495  007D44  7F                 	db	127
   496  007D45  04                 	db	4
   497  007D46  08                 	db	8
   498  007D47  10                 	db	16
   499  007D48  7F                 	db	127
   500  007D49  00                 	db	0
   501  007D4A  00                 	db	0
   502  007D4B  00                 	db	0
   503  007D4C  3E                 	db	62
   504  007D4D  41                 	db	65
   505  007D4E  41                 	db	65
   506  007D4F  41                 	db	65
   507  007D50  3E                 	db	62
   508  007D51  00                 	db	0
   509  007D52  00                 	db	0
   510  007D53  00                 	db	0
   511  007D54  7F                 	db	127
   512  007D55  09                 	db	9
   513  007D56  09                 	db	9
   514  007D57  09                 	db	9
   515  007D58  06                 	db	6
   516  007D59  00                 	db	0
   517  007D5A  00                 	db	0
   518  007D5B  00                 	db	0
   519  007D5C  3E                 	db	62
   520  007D5D  41                 	db	65
   521  007D5E  51                 	db	81
   522  007D5F  21                 	db	33
   523  007D60  5E                 	db	94
   524  007D61  00                 	db	0
   525  007D62  00                 	db	0
   526  007D63  00                 	db	0
   527  007D64  7F                 	db	127
   528  007D65  09                 	db	9
   529  007D66  19                 	db	25
   530  007D67  29                 	db	41
   531  007D68  46                 	db	70
   532  007D69  00                 	db	0
   533  007D6A  00                 	db	0
   534  007D6B  00                 	db	0
   535  007D6C  26                 	db	38
   536  007D6D  49                 	db	73
   537  007D6E  49                 	db	73
   538  007D6F  49                 	db	73
   539  007D70  32                 	db	50
   540  007D71  00                 	db	0
   541  007D72  00                 	db	0
   542  007D73  00                 	db	0
   543  007D74  01                 	db	1
   544  007D75  01                 	db	1
   545  007D76  7F                 	db	127
   546  007D77  01                 	db	1
   547  007D78  01                 	db	1
   548  007D79  00                 	db	0
   549  007D7A  00                 	db	0
   550  007D7B  00                 	db	0
   551  007D7C  3F                 	db	63
   552  007D7D  40                 	db	64
   553  007D7E  40                 	db	64
   554  007D7F  40                 	db	64
   555  007D80  3F                 	db	63
   556  007D81  00                 	db	0
   557  007D82  00                 	db	0
   558  007D83  00                 	db	0
   559  007D84  1F                 	db	31
   560  007D85  20                 	db	32
   561  007D86  40                 	db	64
   562  007D87  20                 	db	32
   563  007D88  1F                 	db	31
   564  007D89  00                 	db	0
   565  007D8A  00                 	db	0
   566  007D8B  00                 	db	0
   567  007D8C  3F                 	db	63
   568  007D8D  40                 	db	64
   569  007D8E  38                 	db	56
   570  007D8F  40                 	db	64
   571  007D90  3F                 	db	63
   572  007D91  00                 	db	0
   573  007D92  00                 	db	0
   574  007D93  00                 	db	0
   575  007D94  63                 	db	99
   576  007D95  14                 	db	20
   577  007D96  08                 	db	8
   578  007D97  14                 	db	20
   579  007D98  63                 	db	99
   580  007D99  00                 	db	0
   581  007D9A  00                 	db	0
   582  007D9B  00                 	db	0
   583  007D9C  03                 	db	3
   584  007D9D  04                 	db	4
   585  007D9E  78                 	db	120
   586  007D9F  04                 	db	4
   587  007DA0  03                 	db	3
   588  007DA1  00                 	db	0
   589  007DA2  00                 	db	0
   590  007DA3  00                 	db	0
   591  007DA4  61                 	db	97
   592  007DA5  51                 	db	81
   593  007DA6  49                 	db	73
   594  007DA7  45                 	db	69
   595  007DA8  43                 	db	67
   596  007DA9  00                 	db	0
   597  007DAA  00                 	db	0
   598  007DAB  00                 	db	0
   599  007DAC  7F                 	db	127
   600  007DAD  41                 	db	65
   601  007DAE  41                 	db	65
   602  007DAF  00                 	db	0
   603  007DB0  00                 	db	0
   604  007DB1  00                 	db	0
   605  007DB2  00                 	db	0
   606  007DB3  00                 	db	0
   607  007DB4  02                 	db	2
   608  007DB5  04                 	db	4
   609  007DB6  08                 	db	8
   610  007DB7  10                 	db	16
   611  007DB8  20                 	db	32
   612  007DB9  00                 	db	0
   613  007DBA  00                 	db	0
   614  007DBB  00                 	db	0
   615  007DBC  41                 	db	65
   616  007DBD  41                 	db	65
   617  007DBE  7F                 	db	127
   618  007DBF  00                 	db	0
   619  007DC0  00                 	db	0
   620  007DC1  00                 	db	0
   621  007DC2  00                 	db	0
   622  007DC3  00                 	db	0
   623  007DC4  04                 	db	4
   624  007DC5  02                 	db	2
   625  007DC6  01                 	db	1
   626  007DC7  02                 	db	2
   627  007DC8  04                 	db	4
   628  007DC9  00                 	db	0
   629  007DCA  00                 	db	0
   630  007DCB  00                 	db	0
   631  007DCC  80                 	db	128
   632  007DCD  80                 	db	128
   633  007DCE  80                 	db	128
   634  007DCF  80                 	db	128
   635  007DD0  80                 	db	128
   636  007DD1  00                 	db	0
   637  007DD2  00                 	db	0
   638  007DD3  00                 	db	0
   639  007DD4  01                 	db	1
   640  007DD5  02                 	db	2
   641  007DD6  04                 	db	4
   642  007DD7  00                 	db	0
   643  007DD8  00                 	db	0
   644  007DD9  00                 	db	0
   645  007DDA  00                 	db	0
   646  007DDB  00                 	db	0
   647  007DDC  20                 	db	32
   648  007DDD  54                 	db	84
   649  007DDE  54                 	db	84
   650  007DDF  54                 	db	84
   651  007DE0  78                 	db	120
   652  007DE1  00                 	db	0
   653  007DE2  00                 	db	0
   654  007DE3  00                 	db	0
   655  007DE4  7F                 	db	127
   656  007DE5  48                 	db	72
   657  007DE6  44                 	db	68
   658  007DE7  44                 	db	68
   659  007DE8  38                 	db	56
   660  007DE9  00                 	db	0
   661  007DEA  00                 	db	0
   662  007DEB  00                 	db	0
   663  007DEC  38                 	db	56
   664  007DED  44                 	db	68
   665  007DEE  44                 	db	68
   666  007DEF  28                 	db	40
   667  007DF0  00                 	db	0
   668  007DF1  00                 	db	0
   669  007DF2  00                 	db	0
   670  007DF3  00                 	db	0
   671  007DF4  38                 	db	56
   672  007DF5  44                 	db	68
   673  007DF6  44                 	db	68
   674  007DF7  48                 	db	72
   675  007DF8  7F                 	db	127
   676  007DF9  00                 	db	0
   677  007DFA  00                 	db	0
   678  007DFB  00                 	db	0
   679  007DFC  38                 	db	56
   680  007DFD  54                 	db	84
   681  007DFE  54                 	db	84
   682  007DFF  54                 	db	84
   683  007E00  18                 	db	24
   684  007E01  00                 	db	0
   685  007E02  00                 	db	0
   686  007E03  00                 	db	0
   687  007E04  08                 	db	8
   688  007E05  7E                 	db	126
   689  007E06  09                 	db	9
   690  007E07  02                 	db	2
   691  007E08  00                 	db	0
   692  007E09  00                 	db	0
   693  007E0A  00                 	db	0
   694  007E0B  00                 	db	0
   695  007E0C  18                 	db	24
   696  007E0D  A4                 	db	164
   697  007E0E  A4                 	db	164
   698  007E0F  A4                 	db	164
   699  007E10  7C                 	db	124
   700  007E11  00                 	db	0
   701  007E12  00                 	db	0
   702  007E13  00                 	db	0
   703  007E14  7F                 	db	127
   704  007E15  08                 	db	8
   705  007E16  04                 	db	4
   706  007E17  04                 	db	4
   707  007E18  78                 	db	120
   708  007E19  00                 	db	0
   709  007E1A  00                 	db	0
   710  007E1B  00                 	db	0
   711  007E1C  00                 	db	0
   712  007E1D  7D                 	db	125
   713  007E1E  00                 	db	0
   714  007E1F  00                 	db	0
   715  007E20  00                 	db	0
   716  007E21  00                 	db	0
   717  007E22  00                 	db	0
   718  007E23  00                 	db	0
   719  007E24  80                 	db	128
   720  007E25  84                 	db	132
   721  007E26  7D                 	db	125
   722  007E27  00                 	db	0
   723  007E28  00                 	db	0
   724  007E29  00                 	db	0
   725  007E2A  00                 	db	0
   726  007E2B  00                 	db	0
   727  007E2C  7F                 	db	127
   728  007E2D  10                 	db	16
   729  007E2E  28                 	db	40
   730  007E2F  44                 	db	68
   731  007E30  00                 	db	0
   732  007E31  00                 	db	0
   733  007E32  00                 	db	0
   734  007E33  00                 	db	0
   735  007E34  41                 	db	65
   736  007E35  7F                 	db	127
   737  007E36  40                 	db	64
   738  007E37  00                 	db	0
   739  007E38  00                 	db	0
   740  007E39  00                 	db	0
   741  007E3A  00                 	db	0
   742  007E3B  00                 	db	0
   743  007E3C  7C                 	db	124
   744  007E3D  04                 	db	4
   745  007E3E  18                 	db	24
   746  007E3F  04                 	db	4
   747  007E40  78                 	db	120
   748  007E41  00                 	db	0
   749  007E42  00                 	db	0
   750  007E43  00                 	db	0
   751  007E44  7C                 	db	124
   752  007E45  08                 	db	8
   753  007E46  04                 	db	4
   754  007E47  7C                 	db	124
   755  007E48  00                 	db	0
   756  007E49  00                 	db	0
   757  007E4A  00                 	db	0
   758  007E4B  00                 	db	0
   759  007E4C  38                 	db	56
   760  007E4D  44                 	db	68
   761  007E4E  44                 	db	68
   762  007E4F  38                 	db	56
   763  007E50  00                 	db	0
   764  007E51  00                 	db	0
   765  007E52  00                 	db	0
   766  007E53  00                 	db	0
   767  007E54  FC                 	db	252
   768  007E55  24                 	db	36
   769  007E56  24                 	db	36
   770  007E57  18                 	db	24
   771  007E58  00                 	db	0
   772  007E59  00                 	db	0
   773  007E5A  00                 	db	0
   774  007E5B  00                 	db	0
   775  007E5C  18                 	db	24
   776  007E5D  24                 	db	36
   777  007E5E  24                 	db	36
   778  007E5F  FC                 	db	252
   779  007E60  00                 	db	0
   780  007E61  00                 	db	0
   781  007E62  00                 	db	0
   782  007E63  00                 	db	0
   783  007E64  00                 	db	0
   784  007E65  7C                 	db	124
   785  007E66  08                 	db	8
   786  007E67  04                 	db	4
   787  007E68  00                 	db	0
   788  007E69  00                 	db	0
   789  007E6A  00                 	db	0
   790  007E6B  00                 	db	0
   791  007E6C  48                 	db	72
   792  007E6D  54                 	db	84
   793  007E6E  54                 	db	84
   794  007E6F  24                 	db	36
   795  007E70  00                 	db	0
   796  007E71  00                 	db	0
   797  007E72  00                 	db	0
   798  007E73  00                 	db	0
   799  007E74  04                 	db	4
   800  007E75  7F                 	db	127
   801  007E76  44                 	db	68
   802  007E77  00                 	db	0
   803  007E78  00                 	db	0
   804  007E79  00                 	db	0
   805  007E7A  00                 	db	0
   806  007E7B  00                 	db	0
   807  007E7C  3C                 	db	60
   808  007E7D  40                 	db	64
   809  007E7E  40                 	db	64
   810  007E7F  7C                 	db	124
   811  007E80  00                 	db	0
   812  007E81  00                 	db	0
   813  007E82  00                 	db	0
   814  007E83  00                 	db	0
   815  007E84  1C                 	db	28
   816  007E85  20                 	db	32
   817  007E86  40                 	db	64
   818  007E87  20                 	db	32
   819  007E88  1C                 	db	28
   820  007E89  00                 	db	0
   821  007E8A  00                 	db	0
   822  007E8B  00                 	db	0
   823  007E8C  3C                 	db	60
   824  007E8D  40                 	db	64
   825  007E8E  30                 	db	48
   826  007E8F  40                 	db	64
   827  007E90  3C                 	db	60
   828  007E91  00                 	db	0
   829  007E92  00                 	db	0
   830  007E93  00                 	db	0
   831  007E94  44                 	db	68
   832  007E95  28                 	db	40
   833  007E96  10                 	db	16
   834  007E97  28                 	db	40
   835  007E98  44                 	db	68
   836  007E99  00                 	db	0
   837  007E9A  00                 	db	0
   838  007E9B  00                 	db	0
   839  007E9C  1C                 	db	28
   840  007E9D  A0                 	db	160
   841  007E9E  A0                 	db	160
   842  007E9F  7C                 	db	124
   843  007EA0  00                 	db	0
   844  007EA1  00                 	db	0
   845  007EA2  00                 	db	0
   846  007EA3  00                 	db	0
   847  007EA4  44                 	db	68
   848  007EA5  64                 	db	100
   849  007EA6  54                 	db	84
   850  007EA7  4C                 	db	76
   851  007EA8  44                 	db	68
   852  007EA9  00                 	db	0
   853  007EAA  00                 	db	0
   854  007EAB  00                 	db	0
   855  007EAC  08                 	db	8
   856  007EAD  36                 	db	54
   857  007EAE  41                 	db	65
   858  007EAF  00                 	db	0
   859  007EB0  00                 	db	0
   860  007EB1  00                 	db	0
   861  007EB2  00                 	db	0
   862  007EB3  00                 	db	0
   863  007EB4  00                 	db	0
   864  007EB5  7F                 	db	127
   865  007EB6  00                 	db	0
   866  007EB7  00                 	db	0
   867  007EB8  00                 	db	0
   868  007EB9  00                 	db	0
   869  007EBA  00                 	db	0
   870  007EBB  00                 	db	0
   871  007EBC  41                 	db	65
   872  007EBD  36                 	db	54
   873  007EBE  08                 	db	8
   874  007EBF  00                 	db	0
   875  007EC0  00                 	db	0
   876  007EC1  00                 	db	0
   877  007EC2  00                 	db	0
   878  007EC3  00                 	db	0
   879  007EC4  02                 	db	2
   880  007EC5  01                 	db	1
   881  007EC6  01                 	db	1
   882  007EC7  02                 	db	2
   883  007EC8  01                 	db	1
   884  007EC9  00                 	db	0
   885  007ECA  00                 	db	0
   886  007ECB  00                 	db	0
   887  007ECC  02                 	db	2
   888  007ECD  05                 	db	5
   889  007ECE  05                 	db	5
   890  007ECF  02                 	db	2
   891  007ED0  00                 	db	0
   892  007ED1  00                 	db	0
   893  007ED2  00                 	db	0
   894  007ED3                     __end_of_OledFont:
   895                           	opt stack 0
   896  007ED3                     _picture:
   897                           	opt stack 0
   898  007ED3  00                 	db	0
   899  007ED4  00                 	db	0
   900  007ED5  00                 	db	0
   901  007ED6  00                 	db	0
   902  007ED7  00                 	db	0
   903  007ED8  00                 	db	0
   904  007ED9  00                 	db	0
   905  007EDA  00                 	db	0
   906  007EDB  00                 	db	0
   907  007EDC  00                 	db	0
   908  007EDD  00                 	db	0
   909  007EDE  00                 	db	0
   910  007EDF  00                 	db	0
   911  007EE0  00                 	db	0
   912  007EE1  00                 	db	0
   913  007EE2  00                 	db	0
   914  007EE3  3F                 	db	63
   915  007EE4  80                 	db	128
   916  007EE5  00                 	db	0
   917  007EE6  C0                 	db	192
   918  007EE7  00                 	db	0
   919  007EE8  7F                 	db	127
   920  007EE9  E0                 	db	224
   921  007EEA  00                 	db	0
   922  007EEB  30                 	db	48
   923  007EEC  00                 	db	0
   924  007EED  1F                 	db	31
   925  007EEE  FF                 	db	255
   926  007EEF  F8                 	db	248
   927  007EF0  03                 	db	3
   928  007EF1  FF                 	db	255
   929  007EF2  F8                 	db	248
   930  007EF3  24                 	db	36
   931  007EF4  80                 	db	128
   932  007EF5  00                 	db	0
   933  007EF6  A0                 	db	160
   934  007EF7  00                 	db	0
   935  007EF8  7F                 	db	127
   936  007EF9  E0                 	db	224
   937  007EFA  00                 	db	0
   938  007EFB  78                 	db	120
   939  007EFC  00                 	db	0
   940  007EFD  1F                 	db	31
   941  007EFE  FF                 	db	255
   942  007EFF  F8                 	db	248
   943  007F00  02                 	db	2
   944  007F01  00                 	db	0
   945  007F02  08                 	db	8
   946  007F03  15                 	db	21
   947  007F04  00                 	db	0
   948  007F05  02                 	db	2
   949  007F06  90                 	db	144
   950  007F07  00                 	db	0
   951  007F08  66                 	db	102
   952  007F09  60                 	db	96
   953  007F0A  60                 	db	96
   954  007F0B  FC                 	db	252
   955  007F0C  00                 	db	0
   956  007F0D  17                 	db	23
   957  007F0E  A3                 	db	163
   958  007F0F  18                 	db	24
   959  007F10  0E                 	db	14
   960  007F11  EE                 	db	238
   961  007F12  E8                 	db	232
   962  007F13  0E                 	db	14
   963  007F14  01                 	db	1
   964  007F15  01                 	db	1
   965  007F16  A0                 	db	160
   966  007F17  00                 	db	0
   967  007F18  66                 	db	102
   968  007F19  60                 	db	96
   969  007F1A  61                 	db	97
   970  007F1B  FE                 	db	254
   971  007F1C  00                 	db	0
   972  007F1D  13                 	db	19
   973  007F1E  2D                 	db	45
   974  007F1F  E8                 	db	232
   975  007F20  08                 	db	8
   976  007F21  EE                 	db	238
   977  007F22  E8                 	db	232
   978  007F23  04                 	db	4
   979  007F24  05                 	db	5
   980  007F25  00                 	db	0
   981  007F26  C0                 	db	192
   982  007F27  00                 	db	0
   983  007F28  66                 	db	102
   984  007F29  60                 	db	96
   985  007F2A  60                 	db	96
   986  007F2B  30                 	db	48
   987  007F2C  00                 	db	0
   988  007F2D  14                 	db	20
   989  007F2E  AD                 	db	173
   990  007F2F  E8                 	db	232
   991  007F30  08                 	db	8
   992  007F31  EE                 	db	238
   993  007F32  E8                 	db	232
   994  007F33  04                 	db	4
   995  007F34  15                 	db	21
   996  007F35  01                 	db	1
   997  007F36  A0                 	db	160
   998  007F37  00                 	db	0
   999  007F38  66                 	db	102
  1000  007F39  60                 	db	96
  1001  007F3A  60                 	db	96
  1002  007F3B  30                 	db	48
  1003  007F3C  00                 	db	0
  1004  007F3D  17                 	db	23
  1005  007F3E  AD                 	db	173
  1006  007F3F  98                 	db	152
  1007  007F40  08                 	db	8
  1008  007F41  EE                 	db	238
  1009  007F42  E8                 	db	232
  1010  007F43  04                 	db	4
  1011  007F44  55                 	db	85
  1012  007F45  02                 	db	2
  1013  007F46  90                 	db	144
  1014  007F47  00                 	db	0
  1015  007F48  66                 	db	102
  1016  007F49  60                 	db	96
  1017  007F4A  60                 	db	96
  1018  007F4B  30                 	db	48
  1019  007F4C  00                 	db	0
  1020  007F4D  17                 	db	23
  1021  007F4E  A3                 	db	163
  1022  007F4F  E8                 	db	232
  1023  007F50  08                 	db	8
  1024  007F51  EE                 	db	238
  1025  007F52  E8                 	db	232
  1026  007F53  05                 	db	5
  1027  007F54  55                 	db	85
  1028  007F55  00                 	db	0
  1029  007F56  A0                 	db	160
  1030  007F57  00                 	db	0
  1031  007F58  7F                 	db	127
  1032  007F59  E0                 	db	224
  1033  007F5A  60                 	db	96
  1034  007F5B  30                 	db	48
  1035  007F5C  00                 	db	0
  1036  007F5D  17                 	db	23
  1037  007F5E  AF                 	db	175
  1038  007F5F  E8                 	db	232
  1039  007F60  08                 	db	8
  1040  007F61  EE                 	db	238
  1041  007F62  E8                 	db	232
  1042  007F63  05                 	db	5
  1043  007F64  55                 	db	85
  1044  007F65  00                 	db	0
  1045  007F66  C0                 	db	192
  1046  007F67  00                 	db	0
  1047  007F68  7F                 	db	127
  1048  007F69  E0                 	db	224
  1049  007F6A  60                 	db	96
  1050  007F6B  30                 	db	48
  1051  007F6C  00                 	db	0
  1052  007F6D  17                 	db	23
  1053  007F6E  AF                 	db	175
  1054  007F6F  18                 	db	24
  1055  007F70  0E                 	db	14
  1056  007F71  EE                 	db	238
  1057  007F72  E8                 	db	232
  1058  007F73  00                 	db	0
  1059  007F74  00                 	db	0
  1060  007F75  00                 	db	0
  1061  007F76  00                 	db	0
  1062  007F77  00                 	db	0
  1063  007F78  00                 	db	0
  1064  007F79  03                 	db	3
  1065  007F7A  FC                 	db	252
  1066  007F7B  30                 	db	48
  1067  007F7C  00                 	db	0
  1068  007F7D  1F                 	db	31
  1069  007F7E  FF                 	db	255
  1070  007F7F  F8                 	db	248
  1071  007F80  02                 	db	2
  1072  007F81  00                 	db	0
  1073  007F82  08                 	db	8
  1074  007F83  00                 	db	0
  1075  007F84  00                 	db	0
  1076  007F85  00                 	db	0
  1077  007F86  00                 	db	0
  1078  007F87  00                 	db	0
  1079  007F88  00                 	db	0
  1080  007F89  01                 	db	1
  1081  007F8A  F8                 	db	248
  1082  007F8B  30                 	db	48
  1083  007F8C  00                 	db	0
  1084  007F8D  1F                 	db	31
  1085  007F8E  FF                 	db	255
  1086  007F8F  F8                 	db	248
  1087  007F90  03                 	db	3
  1088  007F91  FF                 	db	255
  1089  007F92  F8                 	db	248
  1090  007F93  00                 	db	0
  1091  007F94  00                 	db	0
  1092  007F95  00                 	db	0
  1093  007F96  00                 	db	0
  1094  007F97  00                 	db	0
  1095  007F98  00                 	db	0
  1096  007F99  00                 	db	0
  1097  007F9A  F0                 	db	240
  1098  007F9B  00                 	db	0
  1099  007F9C  00                 	db	0
  1100  007F9D  00                 	db	0
  1101  007F9E  00                 	db	0
  1102  007F9F  00                 	db	0
  1103  007FA0  00                 	db	0
  1104  007FA1  00                 	db	0
  1105  007FA2  00                 	db	0
  1106  007FA3  00                 	db	0
  1107  007FA4  00                 	db	0
  1108  007FA5  00                 	db	0
  1109  007FA6  00                 	db	0
  1110  007FA7  00                 	db	0
  1111  007FA8  00                 	db	0
  1112  007FA9  00                 	db	0
  1113  007FAA  60                 	db	96
  1114  007FAB  00                 	db	0
  1115  007FAC  00                 	db	0
  1116  007FAD  00                 	db	0
  1117  007FAE  00                 	db	0
  1118  007FAF  00                 	db	0
  1119  007FB0  00                 	db	0
  1120  007FB1  00                 	db	0
  1121  007FB2  00                 	db	0
  1122  007FB3  00                 	db	0
  1123  007FB4  00                 	db	0
  1124  007FB5  00                 	db	0
  1125  007FB6  00                 	db	0
  1126  007FB7  00                 	db	0
  1127  007FB8  00                 	db	0
  1128  007FB9  00                 	db	0
  1129  007FBA  00                 	db	0
  1130  007FBB  00                 	db	0
  1131  007FBC  00                 	db	0
  1132  007FBD  00                 	db	0
  1133  007FBE  00                 	db	0
  1134  007FBF  00                 	db	0
  1135  007FC0  00                 	db	0
  1136  007FC1  00                 	db	0
  1137  007FC2  00                 	db	0
  1138  007FC3  00                 	db	0
  1139  007FC4  00                 	db	0
  1140  007FC5  00                 	db	0
  1141  007FC6  00                 	db	0
  1142  007FC7  00                 	db	0
  1143  007FC8  00                 	db	0
  1144  007FC9  00                 	db	0
  1145  007FCA  00                 	db	0
  1146  007FCB  00                 	db	0
  1147  007FCC  00                 	db	0
  1148  007FCD  00                 	db	0
  1149  007FCE  00                 	db	0
  1150  007FCF  00                 	db	0
  1151  007FD0  00                 	db	0
  1152  007FD1  00                 	db	0
  1153  007FD2  00                 	db	0
  1154  007FD3  39                 	db	57
  1155  007FD4  80                 	db	128
  1156  007FD5  00                 	db	0
  1157  007FD6  00                 	db	0
  1158  007FD7  00                 	db	0
  1159  007FD8  00                 	db	0
  1160  007FD9  00                 	db	0
  1161  007FDA  00                 	db	0
  1162  007FDB  00                 	db	0
  1163  007FDC  00                 	db	0
  1164  007FDD  00                 	db	0
  1165  007FDE  00                 	db	0
  1166  007FDF  00                 	db	0
  1167  007FE0  00                 	db	0
  1168  007FE1  00                 	db	0
  1169  007FE2  00                 	db	0
  1170  007FE3                     __end_of_picture:
  1171                           	opt stack 0
  1172  007FE3                     STR_1:
  1173  007FE3  55                 	db	85	;'U'
  1174  007FE4  6E                 	db	110	;'n'
  1175  007FE5  69                 	db	105	;'i'
  1176  007FE6  76                 	db	118	;'v'
  1177  007FE7  65                 	db	101	;'e'
  1178  007FE8  72                 	db	114	;'r'
  1179  007FE9  73                 	db	115	;'s'
  1180  007FEA  69                 	db	105	;'i'
  1181  007FEB  74                 	db	116	;'t'
  1182  007FEC  79                 	db	121	;'y'
  1183  007FED  00                 	db	0
  1184  007FEE                     STR_4:
  1185  007FEE  5A                 	db	90	;'Z'
  1186  007FEF  49                 	db	73	;'I'
  1187  007FF0  50                 	db	80	;'P'
  1188  007FF1  53                 	db	83	;'S'
  1189  007FF2  2D                 	db	45
  1190  007FF3  45                 	db	69	;'E'
  1191  007FF4  56                 	db	86	;'V'
  1192  007FF5  00                 	db	0
  1193  007FF6                     STR_3:
  1194  007FF6  41                 	db	65	;'A'
  1195  007FF7  6B                 	db	107	;'k'
  1196  007FF8  72                 	db	114	;'r'
  1197  007FF9  6F                 	db	111	;'o'
  1198  007FFA  6E                 	db	110	;'n'
  1199  007FFB  00                 	db	0
  1200  007FFC                     STR_2:
  1201  007FFC  4F                 	db	79	;'O'
  1202  007FFD  46                 	db	70	;'F'
  1203  007FFE  00                 	db	0
  1204                           
  1205                           ; #config settings
  1206  007FFF  00                 	db	0	; dummy byte at the end
  1207  0000                     
  1208                           	psect	nvCOMRAM
  1209  000042                     __pnvCOMRAM:
  1210                           	opt stack 0
  1211  000042                     _timer0ReloadVal16bit:
  1212                           	opt stack 0
  1213  000042                     	ds	2
  1214                           
  1215                           	psect	nvBANK0
  1216  0000FE                     __pnvBANK0:
  1217                           	opt stack 0
  1218  0000FE                     _TMR2_InterruptHandler:
  1219                           	opt stack 0
  1220  0000FE                     	ds	2
  1221  0000                     _ANSELA	set	3896
  1222  0000                     _ANSELAbits	set	3896
  1223  0000                     _ANSELB	set	3897
  1224  0000                     _ANSELC	set	3898
  1225  0000                     _ANSELCbits	set	3898
  1226  0000                     _ANSELD	set	3899
  1227  0000                     _ANSELE	set	3900
  1228  0000                     _ADCON0	set	4034
  1229  0000                     _ADCON0bits	set	4034
  1230  0000                     _ADCON1	set	4033
  1231  0000                     _ADCON2	set	4032
  1232  0000                     _ADRESH	set	4036
  1233  0000                     _ADRESL	set	4035
  1234  0000                     _BAUD1CON	set	4024
  1235  0000                     _INTCON2bits	set	4081
  1236  0000                     _INTCONbits	set	4082
  1237  0000                     _IPR1bits	set	3999
  1238  0000                     _IPR2bits	set	4002
  1239  0000                     _LATA	set	3977
  1240  0000                     _LATB	set	3978
  1241  0000                     _LATC	set	3979
  1242  0000                     _LATCbits	set	3979
  1243  0000                     _LATD	set	3980
  1244  0000                     _LATE	set	3981
  1245  0000                     _OSCCON	set	4051
  1246  0000                     _OSCCON2	set	4050
  1247  0000                     _OSCTUNE	set	3995
  1248  0000                     _PIE1bits	set	3997
  1249  0000                     _PIE2bits	set	4000
  1250  0000                     _PIR1bits	set	3998
  1251  0000                     _PIR2bits	set	4001
  1252  0000                     _PORTAbits	set	3968
  1253  0000                     _PORTBbits	set	3969
  1254  0000                     _PORTDbits	set	3971
  1255  0000                     _PR2	set	4027
  1256  0000                     _RC1STA	set	4011
  1257  0000                     _RC1STAbits	set	4011
  1258  0000                     _RCONbits	set	4048
  1259  0000                     _RCREG1	set	4014
  1260  0000                     _SPBRG1	set	4015
  1261  0000                     _SPBRGH1	set	4016
  1262  0000                     _SSP1ADD	set	4040
  1263  0000                     _SSP1BUF	set	4041
  1264  0000                     _SSP1CON1	set	4038
  1265  0000                     _SSP1CON1bits	set	4038
  1266  0000                     _SSP1CON2bits	set	4037
  1267  0000                     _SSP1CON3	set	4043
  1268  0000                     _SSP1STAT	set	4039
  1269  0000                     _T0CON	set	4053
  1270  0000                     _T0CONbits	set	4053
  1271  0000                     _T2CON	set	4026
  1272  0000                     _T2CONbits	set	4026
  1273  0000                     _TMR0H	set	4055
  1274  0000                     _TMR0L	set	4054
  1275  0000                     _TMR2	set	4028
  1276  0000                     _TRISA	set	3986
  1277  0000                     _TRISAbits	set	3986
  1278  0000                     _TRISB	set	3987
  1279  0000                     _TRISC	set	3988
  1280  0000                     _TRISCbits	set	3988
  1281  0000                     _TRISD	set	3989
  1282  0000                     _TRISE	set	3990
  1283  0000                     _TX1STA	set	4012
  1284  0000                     _TXREG1	set	4013
  1285  0000                     _WPUB	set	3937
  1286  0000                     _LATA3	set	31819
  1287  0000                     _LATA6	set	31822
  1288  0000                     _LATA7	set	31823
  1289  0000                     _LATC1	set	31833
  1290  0000                     _LATE0	set	31848
  1291  0000                     _LATE1	set	31849
  1292  0000                     _LATE2	set	31850
  1293                           
  1294                           	psect	cinit
  1295  002846                     __pcinit:
  1296                           	opt stack 0
  1297  002846                     start_initialization:
  1298                           	opt stack 0
  1299  002846                     __initialization:
  1300                           	opt stack 0
  1301                           
  1302                           ; Clear objects allocated to BANK5 (206 bytes)
  1303  002846  EE05  F000         	lfsr	0,__pbssBANK5
  1304  00284A  0ECE               	movlw	206
  1305  00284C                     clear_0:
  1306  00284C  6AEE               	clrf	postinc0,c
  1307  00284E  06E8               	decf	wreg,f,c
  1308  002850  E1FD               	bnz	clear_0
  1309                           
  1310                           ; Clear objects allocated to BANK4 (206 bytes)
  1311  002852  EE04  F000         	lfsr	0,__pbssBANK4
  1312  002856  0ECE               	movlw	206
  1313  002858                     clear_1:
  1314  002858  6AEE               	clrf	postinc0,c
  1315  00285A  06E8               	decf	wreg,f,c
  1316  00285C  E1FD               	bnz	clear_1
  1317                           
  1318                           ; Clear objects allocated to BANK3 (200 bytes)
  1319  00285E  EE03  F000         	lfsr	0,__pbssBANK3
  1320  002862  0EC8               	movlw	200
  1321  002864                     clear_2:
  1322  002864  6AEE               	clrf	postinc0,c
  1323  002866  06E8               	decf	wreg,f,c
  1324  002868  E1FD               	bnz	clear_2
  1325                           
  1326                           ; Clear objects allocated to BANK2 (206 bytes)
  1327  00286A  EE02  F000         	lfsr	0,__pbssBANK2
  1328  00286E  0ECE               	movlw	206
  1329  002870                     clear_3:
  1330  002870  6AEE               	clrf	postinc0,c
  1331  002872  06E8               	decf	wreg,f,c
  1332  002874  E1FD               	bnz	clear_3
  1333                           
  1334                           ; Clear objects allocated to BANK1 (57 bytes)
  1335  002876  EE01  F000         	lfsr	0,__pbssBANK1
  1336  00287A  0E39               	movlw	57
  1337  00287C                     clear_4:
  1338  00287C  6AEE               	clrf	postinc0,c
  1339  00287E  06E8               	decf	wreg,f,c
  1340  002880  E1FD               	bnz	clear_4
  1341                           
  1342                           ; Clear objects allocated to BANK0 (146 bytes)
  1343  002882  EE00  F060         	lfsr	0,__pbssBANK0
  1344  002886  0E92               	movlw	146
  1345  002888                     clear_5:
  1346  002888  6AEE               	clrf	postinc0,c
  1347  00288A  06E8               	decf	wreg,f,c
  1348  00288C  E1FD               	bnz	clear_5
  1349                           
  1350                           ; Clear objects allocated to COMRAM (23 bytes)
  1351  00288E  EE00  F02B         	lfsr	0,__pbssCOMRAM
  1352  002892  0E17               	movlw	23
  1353  002894                     clear_6:
  1354  002894  6AEE               	clrf	postinc0,c
  1355  002896  06E8               	decf	wreg,f,c
  1356  002898  E1FD               	bnz	clear_6
  1357                           
  1358                           ; Initialize objects allocated to COMRAM (1 bytes)
  1359                           ; load TBLPTR registers with __pidataCOMRAM
  1360  00289A  0EFE               	movlw	low __pidataCOMRAM
  1361  00289C  6EF6               	movwf	tblptrl,c
  1362  00289E  0E31               	movlw	high __pidataCOMRAM
  1363  0028A0  6EF7               	movwf	tblptrh,c
  1364  0028A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1365  0028A4  6EF8               	movwf	tblptru,c
  1366  0028A6  0009               	tblrd		*+	;fetch initializer
  1367  0028A8  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1368  0028AC                     end_of_initialization:
  1369                           	opt stack 0
  1370  0028AC                     __end_of__initialization:
  1371                           	opt stack 0
  1372  0028AC  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1373  0028AE  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1374  0028B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1375  0028B2  6EF8               	movwf	tblptru,c
  1376  0028B4  0100               	movlb	0
  1377  0028B6  EF9F  F010         	goto	_main	;jump to C main() function
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           postinc0	equ	0xFEE
  1383                           wreg	equ	0xFE8
  1384                           
  1385                           	psect	bssCOMRAM
  1386  00002B                     __pbssCOMRAM:
  1387                           	opt stack 0
  1388  00002B                     _group:
  1389                           	opt stack 0
  1390  00002B                     	ds	2
  1391  00002D                     _p_i2c1_trb_current:
  1392                           	opt stack 0
  1393  00002D                     	ds	2
  1394  00002F                     _serial_available:
  1395                           	opt stack 0
  1396  00002F                     	ds	2
  1397  000031                     _serial_read:
  1398                           	opt stack 0
  1399  000031                     	ds	2
  1400  000033                     _serial_write:
  1401                           	opt stack 0
  1402  000033                     	ds	2
  1403  000035                     I2C1_ISR@i2c_10bit_address_restart:
  1404                           	opt stack 0
  1405  000035                     	ds	1
  1406  000036                     _AKNAKsend:
  1407                           	opt stack 0
  1408  000036                     	ds	1
  1409  000037                     _calc_CS:
  1410                           	opt stack 0
  1411  000037                     	ds	1
  1412  000038                     _i2c1_state:
  1413                           	opt stack 0
  1414  000038                     	ds	1
  1415  000039                     _maxDataAddress:
  1416                           	opt stack 0
  1417  000039                     	ds	1
  1418  00003A                     _moduleAddress:
  1419                           	opt stack 0
  1420  00003A                     	ds	1
  1421  00003B                     _returnAddress:
  1422                           	opt stack 0
  1423  00003B                     	ds	1
  1424  00003C                     _rx_address:
  1425                           	opt stack 0
  1426  00003C                     	ds	1
  1427  00003D                     _rx_array_inx:
  1428                           	opt stack 0
  1429  00003D                     	ds	1
  1430  00003E                     _rx_len:
  1431                           	opt stack 0
  1432  00003E                     	ds	1
  1433  00003F                     _time:
  1434                           	opt stack 0
  1435  00003F                     	ds	1
  1436  000040                     I2C1_ISR@i2c_address:
  1437                           	opt stack 0
  1438  000040                     	ds	2
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           
  1446                           	psect	dataCOMRAM
  1447  000044                     __pdataCOMRAM:
  1448                           	opt stack 0
  1449  000044                     _Transmit_stall:
  1450                           	opt stack 0
  1451  000044                     	ds	1
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           postinc0	equ	0xFEE
  1457                           wreg	equ	0xFE8
  1458                           
  1459                           	psect	bssBANK0
  1460  000060                     __pbssBANK0:
  1461                           	opt stack 0
  1462  000060                     _displaybuffer:
  1463                           	opt stack 0
  1464  000060                     	ds	40
  1465  000088                     _LED_array:
  1466                           	opt stack 0
  1467  000088                     	ds	16
  1468  000098                     _LEDNUM_ENAB:
  1469                           	opt stack 0
  1470  000098                     	ds	12
  1471  0000A4                     _LEDState:
  1472                           	opt stack 0
  1473  0000A4                     	ds	12
  1474  0000B0                     _butnarray:
  1475                           	opt stack 0
  1476  0000B0                     	ds	8
  1477  0000B8                     _i2c1_object:
  1478                           	opt stack 0
  1479  0000B8                     	ds	7
  1480  0000BF                     I2C1_ISR@i2c_bytes_left:
  1481                           	opt stack 0
  1482  0000BF                     	ds	2
  1483  0000C1                     I2C1_ISR@pi2c_buf_ptr:
  1484                           	opt stack 0
  1485  0000C1                     	ds	2
  1486  0000C3                     _DataBarGraphA:
  1487                           	opt stack 0
  1488  0000C3                     	ds	2
  1489  0000C5                     _DataBarGraphB:
  1490                           	opt stack 0
  1491  0000C5                     	ds	2
  1492  0000C7                     _addressErrorCounter:
  1493                           	opt stack 0
  1494  0000C7                     	ds	2
  1495  0000C9                     _alignErrorCounter:
  1496                           	opt stack 0
  1497  0000C9                     	ds	2
  1498  0000CB                     _crcErrorCounter:
  1499                           	opt stack 0
  1500  0000CB                     	ds	2
  1501  0000CD                     _dataAdressErrorCounter:
  1502                           	opt stack 0
  1503  0000CD                     	ds	2
  1504  0000CF                     _i:
  1505                           	opt stack 0
  1506  0000CF                     	ds	2
  1507  0000D1                     _i2c1_trb_count:
  1508                           	opt stack 0
  1509  0000D1                     	ds	2
  1510  0000D3                     _k:
  1511                           	opt stack 0
  1512  0000D3                     	ds	2
  1513  0000D5                     _p_i2c1_current:
  1514                           	opt stack 0
  1515  0000D5                     	ds	2
  1516  0000D7                     _receiveArrayAddress:
  1517                           	opt stack 0
  1518  0000D7                     	ds	2
  1519  0000D9                     _sendStructAddress:
  1520                           	opt stack 0
  1521  0000D9                     	ds	2
  1522  0000DB                     _serial_peek:
  1523                           	opt stack 0
  1524  0000DB                     	ds	2
  1525  0000DD                     _timeOut:
  1526                           	opt stack 0
  1527  0000DD                     	ds	2
  1528  0000DF                     handleIndicators@oldIndicators:
  1529                           	opt stack 0
  1530  0000DF                     	ds	2
  1531  0000E1                     I2C1_MasterRead@trBlock:
  1532                           	opt stack 0
  1533  0000E1                     	ds	5
  1534  0000E6                     I2C1_MasterWrite@trBlock:
  1535                           	opt stack 0
  1536  0000E6                     	ds	5
  1537  0000EB                     _i2c1_tr_queue:
  1538                           	opt stack 0
  1539  0000EB                     	ds	5
  1540  0000F0                     _Buff:
  1541                           	opt stack 0
  1542  0000F0                     	ds	2
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           postinc0	equ	0xFEE
  1548                           wreg	equ	0xFE8
  1549                           
  1550                           	psect	bssBANK1
  1551  000100                     __pbssBANK1:
  1552                           	opt stack 0
  1553  000100                     _receiveArray:
  1554                           	opt stack 0
  1555  000100                     	ds	40
  1556  000128                     _crc_buffer:
  1557                           	opt stack 0
  1558  000128                     	ds	17
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           
  1566                           	psect	bssBANK2
  1567  000200                     __pbssBANK2:
  1568                           	opt stack 0
  1569  000200                     _ring_buffer:
  1570                           	opt stack 0
  1571  000200                     	ds	206
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           
  1579                           	psect	bssBANK3
  1580  000300                     __pbssBANK3:
  1581                           	opt stack 0
  1582  000300                     _rx_buffer:
  1583                           	opt stack 0
  1584  000300                     	ds	200
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           
  1592                           	psect	bssBANK4
  1593  000400                     __pbssBANK4:
  1594                           	opt stack 0
  1595  000400                     _input_buffer:
  1596                           	opt stack 0
  1597  000400                     	ds	206
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           
  1605                           	psect	bssBANK5
  1606  000500                     __pbssBANK5:
  1607                           	opt stack 0
  1608  000500                     _output_buffer:
  1609                           	opt stack 0
  1610  000500                     	ds	206
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           
  1618                           	psect	cstackBANK1
  1619  000139                     __pcstackBANK1:
  1620                           	opt stack 0
  1621  000139                     ??_LEDsetBar:
  1622  000139                     ??_receiveData:
  1623  000139                     LEDBsetBrightness@writeBuffer:
  1624                           	opt stack 0
  1625  000139                     LEDblinkRate@writeBuffer:
  1626                           	opt stack 0
  1627  000139                     begin@ptr:
  1628                           	opt stack 0
  1629  000139                     oledPutChar@bytes:
  1630                           	opt stack 0
  1631  000139                     LEDwriteDisplay@writeBuffer:
  1632                           	opt stack 0
  1633                           
  1634                           ; 20 bytes @ 0x0
  1635  000139                     	ds	2
  1636  00013B                     begin@maxSize:
  1637                           	opt stack 0
  1638  00013B                     LEDBsetBrightness@timeOut:
  1639                           	opt stack 0
  1640  00013B                     LEDblinkRate@timeOut:
  1641                           	opt stack 0
  1642                           
  1643                           ; 2 bytes @ 0x2
  1644  00013B                     	ds	1
  1645  00013C                     begin@givenAddress:
  1646                           	opt stack 0
  1647                           
  1648                           ; 1 bytes @ 0x3
  1649  00013C                     	ds	1
  1650  00013D                     LEDBsetBrightness@status:
  1651                           	opt stack 0
  1652  00013D                     LEDblinkRate@status:
  1653                           	opt stack 0
  1654  00013D                     begin@error:
  1655                           	opt stack 0
  1656                           
  1657                           ; 1 bytes @ 0x4
  1658  00013D                     	ds	1
  1659  00013E                     begin@stufftosend:
  1660                           	opt stack 0
  1661  00013E                     LEDbegin@writeBuffer:
  1662                           	opt stack 0
  1663                           
  1664                           ; 3 bytes @ 0x5
  1665  00013E                     	ds	1
  1666  00013F                     receiveData@holder:
  1667                           	opt stack 0
  1668                           
  1669                           ; 3 bytes @ 0x6
  1670  00013F                     	ds	1
  1671  000140                     begin@stufftoreceive:
  1672                           	opt stack 0
  1673                           
  1674                           ; 2 bytes @ 0x7
  1675  000140                     	ds	1
  1676  000141                     LEDbegin@timeOut:
  1677                           	opt stack 0
  1678                           
  1679                           ; 2 bytes @ 0x8
  1680  000141                     	ds	1
  1681  000142                     begin@stuffavailable:
  1682                           	opt stack 0
  1683  000142                     oledPutChar@base:
  1684                           	opt stack 0
  1685  000142                     receiveData@holder_2531:
  1686                           	opt stack 0
  1687                           
  1688                           ; 3 bytes @ 0x9
  1689  000142                     	ds	1
  1690  000143                     LEDbegin@i2c_addr:
  1691                           	opt stack 0
  1692                           
  1693                           ; 1 bytes @ 0xA
  1694  000143                     	ds	1
  1695  000144                     LEDbegin@status:
  1696                           	opt stack 0
  1697  000144                     oledPutChar@ch:
  1698                           	opt stack 0
  1699  000144                     begin@stuffpeek:
  1700                           	opt stack 0
  1701                           
  1702                           ; 2 bytes @ 0xB
  1703  000144                     	ds	1
  1704  000145                     receiveData@crcHolder:
  1705                           	opt stack 0
  1706  000145                     oledPutChar@status:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0xC
  1710  000145                     	ds	1
  1711  000146                     receiveData@crcHolder_2532:
  1712                           	opt stack 0
  1713                           
  1714                           ; 1 bytes @ 0xD
  1715  000146                     	ds	1
  1716  000147                     receiveData@u:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0xE
  1720  000147                     	ds	2
  1721  000149                     receiveData@r:
  1722                           	opt stack 0
  1723                           
  1724                           ; 2 bytes @ 0x10
  1725  000149                     	ds	4
  1726  00014D                     LEDwriteDisplay@i2c_addr:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x14
  1730  00014D                     	ds	1
  1731  00014E                     LEDwriteDisplay@timeOut:
  1732                           	opt stack 0
  1733                           
  1734                           ; 2 bytes @ 0x15
  1735  00014E                     	ds	2
  1736  000150                     LEDwriteDisplay@status:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x17
  1740  000150                     	ds	1
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           
  1748                           	psect	cstackBANK0
  1749  0000F2                     __pcstackBANK0:
  1750                           	opt stack 0
  1751  0000F2                     sendData@whereToSend:
  1752                           	opt stack 0
  1753  0000F2                     CRCcheck@SentCRC:
  1754                           	opt stack 0
  1755  0000F2                     I2C1_MasterWrite@pdata:
  1756                           	opt stack 0
  1757  0000F2                     LEDsetValue@value:
  1758                           	opt stack 0
  1759  0000F2                     handleIndicators@i:
  1760                           	opt stack 0
  1761  0000F2                     ToSend@what:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0x0
  1765  0000F2                     	ds	1
  1766  0000F3                     sendData@CS:
  1767                           	opt stack 0
  1768  0000F3                     CRCcheck@calculatedCRC:
  1769                           	opt stack 0
  1770                           
  1771                           ; 1 bytes @ 0x1
  1772  0000F3                     	ds	1
  1773  0000F4                     I2C1_MasterWrite@length:
  1774                           	opt stack 0
  1775  0000F4                     LEDsetValue@color:
  1776                           	opt stack 0
  1777  0000F4                     sendData@i:
  1778                           	opt stack 0
  1779  0000F4                     CRCcheck@arrayHolder:
  1780                           	opt stack 0
  1781                           
  1782                           ; 3 bytes @ 0x2
  1783  0000F4                     	ds	2
  1784  0000F6                     ??_LEDsetValue:
  1785  0000F6                     I2C1_MasterWrite@address:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0x4
  1789  0000F6                     	ds	1
  1790  0000F7                     LEDsetValue@k:
  1791                           	opt stack 0
  1792  0000F7                     CRCcheck@rt:
  1793                           	opt stack 0
  1794                           
  1795                           ; 2 bytes @ 0x5
  1796  0000F7                     	ds	1
  1797  0000F8                     I2C1_MasterWrite@pflag:
  1798                           	opt stack 0
  1799                           
  1800                           ; 2 bytes @ 0x6
  1801  0000F8                     	ds	2
  1802  0000FA                     oledClear@row:
  1803                           	opt stack 0
  1804  0000FA                     oledPrint@s:
  1805                           	opt stack 0
  1806                           
  1807                           ; 2 bytes @ 0x8
  1808  0000FA                     	ds	2
  1809  0000FC                     oledClear@col:
  1810                           	opt stack 0
  1811                           
  1812                           ; 2 bytes @ 0xA
  1813  0000FC                     	ds	2
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           
  1821                           	psect	cstackCOMRAM
  1822  000001                     __pcstackCOMRAM:
  1823                           	opt stack 0
  1824  000001                     ??_I2C1_Stop:
  1825  000001                     ??_TMR2_CallBack:
  1826  000001                     ?i2_UART_buff_size:
  1827                           	opt stack 0
  1828  000001                     ?i2_UART_buff_modulo_inc:
  1829                           	opt stack 0
  1830  000001                     ReadButtonState@btnnum:
  1831                           	opt stack 0
  1832  000001                     i2UART_buff_size@_this:
  1833                           	opt stack 0
  1834  000001                     i2UART_buff_modulo_inc@value:
  1835                           	opt stack 0
  1836                           
  1837                           ; 2 bytes @ 0x0
  1838  000001                     	ds	2
  1839  000003                     ??_ReadButtonState:
  1840  000003                     I2C1_Stop@completion_code:
  1841                           	opt stack 0
  1842  000003                     TMR2_CallBack@i:
  1843                           	opt stack 0
  1844  000003                     i2UART_buff_modulo_inc@modulus:
  1845                           	opt stack 0
  1846                           
  1847                           ; 2 bytes @ 0x2
  1848  000003                     	ds	1
  1849  000004                     ??_I2C1_ISR:
  1850                           
  1851                           ; 0 bytes @ 0x3
  1852  000004                     	ds	1
  1853  000005                     TMR0_ISR@x:
  1854                           	opt stack 0
  1855  000005                     i2UART_buff_modulo_inc@my_value:
  1856                           	opt stack 0
  1857                           
  1858                           ; 2 bytes @ 0x4
  1859  000005                     	ds	2
  1860  000007                     i2UART_buff_put@_this:
  1861                           	opt stack 0
  1862  000007                     i2UART_buff_get@_this:
  1863                           	opt stack 0
  1864                           
  1865                           ; 2 bytes @ 0x6
  1866  000007                     	ds	2
  1867  000009                     ??i2_UART_buff_get:
  1868  000009                     i2UART_buff_put@c:
  1869                           	opt stack 0
  1870                           
  1871                           ; 1 bytes @ 0x8
  1872  000009                     	ds	1
  1873  00000A                     ??i2_UART_buff_put:
  1874                           
  1875                           ; 0 bytes @ 0x9
  1876  00000A                     	ds	1
  1877  00000B                     i2UART_buff_get@c:
  1878                           	opt stack 0
  1879                           
  1880                           ; 1 bytes @ 0xA
  1881  00000B                     	ds	1
  1882  00000C                     EUSART1_Receive_ISR@data:
  1883                           	opt stack 0
  1884                           
  1885                           ; 1 bytes @ 0xB
  1886  00000C                     	ds	1
  1887  00000D                     ??_INTERRUPT_InterruptManager:
  1888                           
  1889                           ; 0 bytes @ 0xC
  1890  00000D                     	ds	14
  1891  00001B                     ?_GetDataBarGraphA:
  1892                           	opt stack 0
  1893  00001B                     ?_GetDataBarGraphB:
  1894                           	opt stack 0
  1895  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1896                           	opt stack 0
  1897  00001B                     ?_UART_buff_modulo_inc:
  1898                           	opt stack 0
  1899  00001B                     ?_GetTime:
  1900                           	opt stack 0
  1901  00001B                     ?_UART_buff_size:
  1902                           	opt stack 0
  1903  00001B                     ?___awdiv:
  1904                           	opt stack 0
  1905  00001B                     I2C1_MasterTRBInsert@count:
  1906                           	opt stack 0
  1907  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1908                           	opt stack 0
  1909  00001B                     setLED@led:
  1910                           	opt stack 0
  1911  00001B                     Off_Led@led:
  1912                           	opt stack 0
  1913  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1914                           	opt stack 0
  1915  00001B                     GetButtonState@btnnum:
  1916                           	opt stack 0
  1917  00001B                     DataBarGraphs@BGA:
  1918                           	opt stack 0
  1919  00001B                     CRC8@data:
  1920                           	opt stack 0
  1921  00001B                     FastTransfer_buffer_modulo_inc@value:
  1922                           	opt stack 0
  1923  00001B                     crcBufS_put@_this:
  1924                           	opt stack 0
  1925  00001B                     crcBufS_status_put@_this:
  1926                           	opt stack 0
  1927  00001B                     crcBufS_get@_this:
  1928                           	opt stack 0
  1929  00001B                     UART_buff_size@_this:
  1930                           	opt stack 0
  1931  00001B                     UART_buff_modulo_inc@value:
  1932                           	opt stack 0
  1933  00001B                     UART_buff_peek@_this:
  1934                           	opt stack 0
  1935  00001B                     Delay@wait:
  1936                           	opt stack 0
  1937  00001B                     ___awdiv@dividend:
  1938                           	opt stack 0
  1939  00001B                     memmove@d1:
  1940                           	opt stack 0
  1941  00001B                     memset@p1:
  1942                           	opt stack 0
  1943                           
  1944                           ; 2 bytes @ 0x1A
  1945  00001B                     	ds	2
  1946  00001D                     ??_Delay:
  1947  00001D                     ??_setLED:
  1948  00001D                     ??_Off_Led:
  1949  00001D                     ??_GetButtonState:
  1950  00001D                     ??_UART_buff_peek:
  1951  00001D                     ?_Receive_available:
  1952                           	opt stack 0
  1953  00001D                     ?___wmul:
  1954                           	opt stack 0
  1955  00001D                     CRC8@len:
  1956                           	opt stack 0
  1957  00001D                     crcBufS_put@address:
  1958                           	opt stack 0
  1959  00001D                     crcBufS_status_put@time:
  1960                           	opt stack 0
  1961  00001D                     crcBufS_get@time:
  1962                           	opt stack 0
  1963  00001D                     I2C1_MasterTRBInsert@ptrb_list:
  1964                           	opt stack 0
  1965  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1966                           	opt stack 0
  1967  00001D                     DataBarGraphs@BGB:
  1968                           	opt stack 0
  1969  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1970                           	opt stack 0
  1971  00001D                     UART_buff_modulo_inc@modulus:
  1972                           	opt stack 0
  1973  00001D                     ___wmul@multiplier:
  1974                           	opt stack 0
  1975  00001D                     ___awdiv@divisor:
  1976                           	opt stack 0
  1977  00001D                     memmove@s1:
  1978                           	opt stack 0
  1979  00001D                     memset@c:
  1980                           	opt stack 0
  1981                           
  1982                           ; 2 bytes @ 0x1C
  1983  00001D                     	ds	1
  1984  00001E                     CRC8@sum:
  1985                           	opt stack 0
  1986  00001E                     crcBufS_put@oldCRC:
  1987                           	opt stack 0
  1988  00001E                     crcBufS_status_put@status:
  1989                           	opt stack 0
  1990  00001E                     crcBufS_get@space:
  1991                           	opt stack 0
  1992  00001E                     Delay@x:
  1993                           	opt stack 0
  1994                           
  1995                           ; 2 bytes @ 0x1D
  1996  00001E                     	ds	1
  1997  00001F                     ??_crcBufS_get:
  1998  00001F                     ??_crcBufS_status_put:
  1999  00001F                     CRC8@extract:
  2000                           	opt stack 0
  2001  00001F                     crcBufS_put@status:
  2002                           	opt stack 0
  2003  00001F                     ___awdiv@counter:
  2004                           	opt stack 0
  2005  00001F                     I2C1_MasterTRBInsert@pflag:
  2006                           	opt stack 0
  2007  00001F                     I2C1_MasterWriteTRBBuild@length:
  2008                           	opt stack 0
  2009  00001F                     SetLEDOut@lednum:
  2010                           	opt stack 0
  2011  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  2012                           	opt stack 0
  2013  00001F                     UART_buff_modulo_inc@my_value:
  2014                           	opt stack 0
  2015  00001F                     ___wmul@multiplicand:
  2016                           	opt stack 0
  2017  00001F                     memmove@n:
  2018                           	opt stack 0
  2019  00001F                     memset@n:
  2020                           	opt stack 0
  2021                           
  2022                           ; 2 bytes @ 0x1E
  2023  00001F                     	ds	1
  2024  000020                     ??_crcBufS_put:
  2025  000020                     CRC8@tempI:
  2026                           	opt stack 0
  2027  000020                     ___awdiv@sign:
  2028                           	opt stack 0
  2029                           
  2030                           ; 1 bytes @ 0x1F
  2031  000020                     	ds	1
  2032  000021                     ??_memmove:
  2033  000021                     ?_buttonsCollector:
  2034                           	opt stack 0
  2035  000021                     CRC8@crc:
  2036                           	opt stack 0
  2037  000021                     I2C1_MasterWriteTRBBuild@address:
  2038                           	opt stack 0
  2039  000021                     SetLEDOut@state:
  2040                           	opt stack 0
  2041  000021                     FastTransfer_buffer_put@_this:
  2042                           	opt stack 0
  2043  000021                     UART_buff_put@_this:
  2044                           	opt stack 0
  2045  000021                     UART_buff_get@_this:
  2046                           	opt stack 0
  2047  000021                     ___wmul@product:
  2048                           	opt stack 0
  2049  000021                     ___awdiv@quotient:
  2050                           	opt stack 0
  2051  000021                     memset@p:
  2052                           	opt stack 0
  2053                           
  2054                           ; 2 bytes @ 0x20
  2055  000021                     	ds	2
  2056  000023                     ??_I2C1_MasterWriteTRBBuild:
  2057  000023                     ??_buttonsCollector:
  2058  000023                     ??_SetLEDOut:
  2059  000023                     ??_UART_buff_get:
  2060  000023                     FastTransfer_buffer_put@towhere:
  2061                           	opt stack 0
  2062  000023                     UART_buff_put@c:
  2063                           	opt stack 0
  2064  000023                     LEDsetBar@bar:
  2065                           	opt stack 0
  2066  000023                     FastTransfer_buffer_flush@_this:
  2067                           	opt stack 0
  2068  000023                     crcBufS_status_put@wantedTime:
  2069                           	opt stack 0
  2070  000023                     UART_buff_init@_this:
  2071                           	opt stack 0
  2072  000023                     memmove@d:
  2073                           	opt stack 0
  2074                           
  2075                           ; 2 bytes @ 0x22
  2076  000023                     	ds	1
  2077  000024                     ??_UART_buff_put:
  2078  000024                     FastTransfer_buffer_put@towhat:
  2079                           	opt stack 0
  2080                           
  2081                           ; 2 bytes @ 0x23
  2082  000024                     	ds	1
  2083  000025                     UART_buff_get@c:
  2084                           	opt stack 0
  2085  000025                     OLED_command@com:
  2086                           	opt stack 0
  2087  000025                     LEDBsetBrightness@b:
  2088                           	opt stack 0
  2089  000025                     LEDblinkRate@b:
  2090                           	opt stack 0
  2091  000025                     LEDsetBar@color:
  2092                           	opt stack 0
  2093  000025                     handleIndicators@receivedIndicators:
  2094                           	opt stack 0
  2095  000025                     FastTransfer_buffer_flush@clearBuffer:
  2096                           	opt stack 0
  2097  000025                     crcBufS_get@wantedTime:
  2098                           	opt stack 0
  2099  000025                     memmove@s:
  2100                           	opt stack 0
  2101                           
  2102                           ; 2 bytes @ 0x24
  2103  000025                     	ds	1
  2104  000026                     ??_FastTransfer_buffer_put:
  2105  000026                     Send_put@_data:
  2106                           	opt stack 0
  2107  000026                     OLED_command@status:
  2108                           	opt stack 0
  2109  000026                     buttonsCollector@sendVal:
  2110                           	opt stack 0
  2111                           
  2112                           ; 2 bytes @ 0x25
  2113  000026                     	ds	1
  2114  000027                     ??_handleIndicators:
  2115  000027                     ??_sendData:
  2116  000027                     ??_oledPutChar:
  2117  000027                     LEDBsetBrightness@i2c_addr:
  2118                           	opt stack 0
  2119  000027                     LEDblinkRate@i2c_addr:
  2120                           	opt stack 0
  2121  000027                     oledGotoYX@Column:
  2122                           	opt stack 0
  2123  000027                     LEDsetBar@c:
  2124                           	opt stack 0
  2125                           
  2126                           ; 2 bytes @ 0x26
  2127  000027                     	ds	1
  2128  000028                     ??_oledGotoYX:
  2129  000028                     buttonsCollector@i:
  2130                           	opt stack 0
  2131                           
  2132                           ; 2 bytes @ 0x27
  2133  000028                     	ds	1
  2134  000029                     oledGotoYX@Row:
  2135                           	opt stack 0
  2136  000029                     LEDsetBar@a:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x28
  2140  000029                     	ds	1
  2141  00002A                     ToSend@where:
  2142                           	opt stack 0
  2143                           
  2144                           ; 1 bytes @ 0x29
  2145  00002A                     	ds	1
  2146  00002B                     tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           
  2153                           ; 0 bytes @ 0x2A
  2154 ;;
  2155 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2156 ;;
  2157 ;; *************** function _main *****************
  2158 ;; Defined at:
  2159 ;;		line 35 in file "main.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2173 ;;      Params:         0       0       0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0
  2176 ;;      Totals:         0       0       0       0       0       0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels required when called:   10
  2179 ;; This function calls:
  2180 ;;		_ClearTime
  2181 ;;		_GetDataBarGraphA
  2182 ;;		_GetDataBarGraphB
  2183 ;;		_GetTime
  2184 ;;		_LEDbegin
  2185 ;;		_LEDsetValue
  2186 ;;		_LEDwriteDisplay
  2187 ;;		_SYSTEM_Initialize
  2188 ;;		_Setupdisplay
  2189 ;;		_Splash
  2190 ;;		___wmul
  2191 ;;		_updateComms
  2192 ;; This function is called by:
  2193 ;;		Startup code after reset
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text0
  2198  00213E                     __ptext0:
  2199                           	opt stack 0
  2200  00213E                     _main:
  2201                           	opt stack 21
  2202                           
  2203                           ;main.c: 37: SYSTEM_Initialize();
  2204                           
  2205                           ;incstack = 0
  2206  00213E  EC5D  F014         	call	_SYSTEM_Initialize	;wreg free
  2207                           
  2208                           ;main.c: 56: (INTCONbits.GIE = 1);
  2209  002142  8EF2               	bsf	intcon,7,c	;volatile
  2210                           
  2211                           ;main.c: 59: (INTCONbits.PEIE = 1);
  2212  002144  8CF2               	bsf	intcon,6,c	;volatile
  2213                           
  2214                           ;main.c: 67: LEDbegin(0x70);
  2215  002146  0E70               	movlw	112
  2216  002148  EC9A  F011         	call	_LEDbegin
  2217                           
  2218                           ;main.c: 68: LEDbegin(0x71);
  2219  00214C  0E71               	movlw	113
  2220  00214E  EC9A  F011         	call	_LEDbegin
  2221                           
  2222                           ;main.c: 69: Setupdisplay();
  2223  002152  ECD8  F018         	call	_Setupdisplay	;wreg free
  2224                           
  2225                           ;main.c: 70: Splash();
  2226  002156  ECCF  F014         	call	_Splash	;wreg free
  2227                           
  2228                           ;main.c: 72: do { LATA3 = 1; } while(0);
  2229  00215A  8689               	bsf	3977,3,c	;volatile
  2230  00215C                     l7158:
  2231                           
  2232                           ;main.c: 74: updateComms();
  2233  00215C  EC13  F017         	call	_updateComms	;wreg free
  2234                           
  2235                           ;main.c: 76: if (GetTime() > 2) {
  2236  002160  ECEC  F018         	call	_GetTime	;wreg free
  2237  002164  BE1C               	btfsc	?_GetTime+1,7,c
  2238  002166  D7FA               	goto	l7158
  2239  002168  501C               	movf	?_GetTime+1,w,c
  2240  00216A  E104               	bnz	u8270
  2241  00216C  0E03               	movlw	3
  2242  00216E  5C1B               	subwf	?_GetTime,w,c
  2243  002170  A0D8               	btfss	status,0,c
  2244  002172  D7F4               	goto	l7158
  2245  002174                     u8270:
  2246                           
  2247                           ;main.c: 77: LEDsetValue((GetDataBarGraphA())*(24 / 100), 1);
  2248  002174  ECE7  F018         	call	_GetDataBarGraphA	;wreg free
  2249  002178  C01B  F01D         	movff	?_GetDataBarGraphA,___wmul@multiplier
  2250  00217C  C01C  F01E         	movff	?_GetDataBarGraphA+1,___wmul@multiplier+1
  2251  002180  0E00               	movlw	0
  2252  002182  6E20               	movwf	___wmul@multiplicand+1,c
  2253  002184  0E00               	movlw	0
  2254  002186  6E1F               	movwf	___wmul@multiplicand,c
  2255  002188  EC13  F018         	call	___wmul	;wreg free
  2256  00218C  C01D  F0F2         	movff	?___wmul,LEDsetValue@value
  2257  002190  C01E  F0F3         	movff	?___wmul+1,LEDsetValue@value+1
  2258  002194  0E00               	movlw	0
  2259  002196  0100               	movlb	0	; () banked
  2260  002198  6FF5               	movwf	(LEDsetValue@color+1)& (0+255),b
  2261  00219A  0E01               	movlw	1
  2262  00219C  6FF4               	movwf	LEDsetValue@color& (0+255),b
  2263  00219E  EC48  F011         	call	_LEDsetValue	;wreg free
  2264                           
  2265                           ;main.c: 78: LEDwriteDisplay(0x70);
  2266  0021A2  0E70               	movlw	112
  2267  0021A4  ECD2  F00A         	call	_LEDwriteDisplay
  2268                           
  2269                           ;main.c: 79: LEDsetValue((GetDataBarGraphB())*(24 / 100), 1);
  2270  0021A8  ECE2  F018         	call	_GetDataBarGraphB	;wreg free
  2271  0021AC  C01B  F01D         	movff	?_GetDataBarGraphB,___wmul@multiplier
  2272  0021B0  C01C  F01E         	movff	?_GetDataBarGraphB+1,___wmul@multiplier+1
  2273  0021B4  0E00               	movlw	0
  2274  0021B6  6E20               	movwf	___wmul@multiplicand+1,c
  2275  0021B8  0E00               	movlw	0
  2276  0021BA  6E1F               	movwf	___wmul@multiplicand,c
  2277  0021BC  EC13  F018         	call	___wmul	;wreg free
  2278  0021C0  C01D  F0F2         	movff	?___wmul,LEDsetValue@value
  2279  0021C4  C01E  F0F3         	movff	?___wmul+1,LEDsetValue@value+1
  2280  0021C8  0E00               	movlw	0
  2281  0021CA  0100               	movlb	0	; () banked
  2282  0021CC  6FF5               	movwf	(LEDsetValue@color+1)& (0+255),b
  2283  0021CE  0E01               	movlw	1
  2284  0021D0  6FF4               	movwf	LEDsetValue@color& (0+255),b
  2285  0021D2  EC48  F011         	call	_LEDsetValue	;wreg free
  2286                           
  2287                           ;main.c: 80: LEDwriteDisplay(0x71);
  2288  0021D6  0E71               	movlw	113
  2289  0021D8  ECD2  F00A         	call	_LEDwriteDisplay
  2290                           
  2291                           ;main.c: 81: do { LATA3 = ~LATA3; } while(0);
  2292  0021DC  B689               	btfsc	3977,3,c	;volatile
  2293  0021DE  D002               	goto	u8280
  2294  0021E0  8689               	bsf	3977,3,c	;volatile
  2295  0021E2  D001               	goto	l7170
  2296  0021E4                     u8280:
  2297  0021E4  9689               	bcf	3977,3,c	;volatile
  2298  0021E6                     l7170:
  2299                           
  2300                           ;main.c: 82: ClearTime();
  2301  0021E6  ECF4  F018         	call	_ClearTime	;wreg free
  2302  0021EA  D7B8               	goto	l7158
  2303  0021EC                     __end_of_main:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           intcon	equ	0xFF2
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           status	equ	0xFD8
  2313                           
  2314 ;; *************** function _updateComms *****************
  2315 ;; Defined at:
  2316 ;;		line 12 in file "Communications.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;		None               void
  2323 ;; Registers used:
  2324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2330 ;;      Params:         0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    9
  2337 ;; This function calls:
  2338 ;;		_DataBarGraphs
  2339 ;;		_handleIndicators
  2340 ;;		_receiveData
  2341 ;;		_respondECU
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text1
  2348  002E26                     __ptext1:
  2349                           	opt stack 0
  2350  002E26                     _updateComms:
  2351                           	opt stack 21
  2352                           
  2353                           ;Communications.c: 14: if (receiveData()) {
  2354                           
  2355                           ;incstack = 0
  2356  002E26  EC6A  F000         	call	_receiveData	;wreg free
  2357  002E2A  0900               	iorlw	0
  2358  002E2C  B4D8               	btfsc	status,2,c
  2359  002E2E  0012               	return	
  2360                           
  2361                           ;Communications.c: 17: respondECU();
  2362  002E30  EC71  F016         	call	_respondECU	;wreg free
  2363                           
  2364                           ;Communications.c: 18: handleIndicators(receiveArray[2]);
  2365  002E34  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  2366  002E38  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  2367  002E3C  EC5F  F013         	call	_handleIndicators	;wreg free
  2368                           
  2369                           ;Communications.c: 19: DataBarGraphs(receiveArray[3], receiveArray[4]);
  2370  002E40  C106  F01B         	movff	_receiveArray+6,DataBarGraphs@BGA	;volatile
  2371  002E44  C107  F01C         	movff	_receiveArray+7,DataBarGraphs@BGA+1	;volatile
  2372  002E48  C108  F01D         	movff	_receiveArray+8,DataBarGraphs@BGB	;volatile
  2373  002E4C  C109  F01E         	movff	_receiveArray+9,DataBarGraphs@BGB+1	;volatile
  2374  002E50  ECB1  F018         	call	_DataBarGraphs	;wreg free
  2375                           
  2376                           ;Communications.c: 20: receiveArray[0] = 0;
  2377  002E54  0E00               	movlw	0
  2378  002E56  0101               	movlb	1	; () banked
  2379  002E58  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  2380  002E5A  0E00               	movlw	0
  2381  002E5C  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  2382  002E5E  0012               	return	
  2383  002E60                     __end_of_updateComms:
  2384                           	opt stack 0
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           intcon	equ	0xFF2
  2390                           postinc0	equ	0xFEE
  2391                           wreg	equ	0xFE8
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function _respondECU *****************
  2395 ;; Defined at:
  2396 ;;		line 26 in file "Communications.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;		None               void
  2403 ;; Registers used:
  2404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2410 ;;      Params:         0       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    8
  2417 ;; This function calls:
  2418 ;;		_Delay
  2419 ;;		_ToSend
  2420 ;;		_buttonsCollector
  2421 ;;		_sendData
  2422 ;; This function is called by:
  2423 ;;		_updateComms
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text2
  2428  002CE2                     __ptext2:
  2429                           	opt stack 0
  2430  002CE2                     _respondECU:
  2431                           	opt stack 21
  2432                           
  2433                           ;Communications.c: 27: LATCbits.LATC5 = 1;
  2434                           
  2435                           ;incstack = 0
  2436  002CE2  8A8B               	bsf	3979,5,c	;volatile
  2437                           
  2438                           ;Communications.c: 28: ToSend(0, 3);
  2439  002CE4  0E00               	movlw	0
  2440  002CE6  0100               	movlb	0	; () banked
  2441  002CE8  6FF3               	movwf	(ToSend@what+1)& (0+255),b
  2442  002CEA  0E03               	movlw	3
  2443  002CEC  6FF2               	movwf	ToSend@what& (0+255),b
  2444  002CEE  0E00               	movlw	0
  2445  002CF0  EC76  F018         	call	_ToSend
  2446                           
  2447                           ;Communications.c: 29: ToSend(8, buttonsCollector());
  2448  002CF4  EC97  F014         	call	_buttonsCollector	;wreg free
  2449  002CF8  C021  F0F2         	movff	?_buttonsCollector,ToSend@what
  2450  002CFC  C022  F0F3         	movff	?_buttonsCollector+1,ToSend@what+1
  2451  002D00  0E08               	movlw	8
  2452  002D02  EC76  F018         	call	_ToSend
  2453                           
  2454                           ;Communications.c: 30: Delay(9);
  2455  002D06  0E00               	movlw	0
  2456  002D08  6E1C               	movwf	Delay@wait+1,c
  2457  002D0A  0E09               	movlw	9
  2458  002D0C  6E1B               	movwf	Delay@wait,c
  2459  002D0E  EC4C  F017         	call	_Delay	;wreg free
  2460                           
  2461                           ;Communications.c: 31: sendData(1);
  2462  002D12  0E01               	movlw	1
  2463  002D14  EC77  F00B         	call	_sendData
  2464                           
  2465                           ;Communications.c: 32: Delay(3);
  2466  002D18  0E00               	movlw	0
  2467  002D1A  6E1C               	movwf	Delay@wait+1,c
  2468  002D1C  0E03               	movlw	3
  2469  002D1E  6E1B               	movwf	Delay@wait,c
  2470  002D20  EC4C  F017         	call	_Delay	;wreg free
  2471                           
  2472                           ;Communications.c: 33: LATCbits.LATC5 = 0;
  2473  002D24  9A8B               	bcf	3979,5,c	;volatile
  2474  002D26  0012               	return		;funcret
  2475  002D28                     __end_of_respondECU:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           intcon	equ	0xFF2
  2482                           postinc0	equ	0xFEE
  2483                           wreg	equ	0xFE8
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _sendData *****************
  2487 ;; Defined at:
  2488 ;;		line 54 in file "FastTransfer.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  whereToSend     1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  2493 ;;  i               2    2[BANK0 ] int 
  2494 ;;  CS              1    1[BANK0 ] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;		None               void
  2497 ;; Registers used:
  2498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2504 ;;      Params:         0       0       0       0       0       0       0
  2505 ;;      Locals:         0       4       0       0       0       0       0
  2506 ;;      Temps:          1       0       0       0       0       0       0
  2507 ;;      Totals:         1       4       0       0       0       0       0
  2508 ;;Total ram usage:        5 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    7
  2511 ;; This function calls:
  2512 ;;		Absolute function
  2513 ;;		_CRC8
  2514 ;;		_FastTransfer_buffer_flush
  2515 ;;		_Send_put
  2516 ;;		_crcBufS_put
  2517 ;; This function is called by:
  2518 ;;		_respondECU
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text3
  2523  0016EE                     __ptext3:
  2524                           	opt stack 0
  2525  0016EE                     _sendData:
  2526                           	opt stack 21
  2527                           
  2528                           ;incstack = 0
  2529                           ;sendData@whereToSend stored from wreg
  2530  0016EE  0100               	movlb	0	; () banked
  2531  0016F0  6FF2               	movwf	sendData@whereToSend& (0+255),b
  2532                           
  2533                           ;FastTransfer.c: 57: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2534  0016F2  C0D9  F01B         	movff	_sendStructAddress,CRC8@data
  2535  0016F6  C0DA  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2536  0016FA  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2537  0016FE  EC4C  F016         	call	_CRC8	;wreg free
  2538  001702  0100               	movlb	0	; () banked
  2539  001704  6FF3               	movwf	sendData@CS& (0+255),b
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;FastTransfer.c: 59: serial_write(0x06);
  2543  001706  D801               	call	u6498
  2544  001708  D00B               	goto	l6302
  2545  00170A                     u6498:
  2546  00170A  0005               	push	
  2547  00170C  6EFA               	movwf	pclath,c
  2548  00170E  5033               	movf	_serial_write,w,c
  2549  001710  6EFD               	movwf	tosl,c
  2550  001712  5034               	movf	_serial_write+1,w,c
  2551  001714  6EFE               	movwf	tosh,c
  2552  001716  50F8               	movf	tblptru,w,c
  2553  001718  6EFF               	movwf	tosu,c
  2554  00171A  50FA               	movf	pclath,w,c
  2555  00171C  0E06               	movlw	6
  2556  00171E  0012               	return		;indir
  2557  001720                     l6302:
  2558                           
  2559                           ;FastTransfer.c: 60: serial_write(0x85);
  2560  001720  D801               	call	u6508
  2561  001722  D00B               	goto	l6304
  2562  001724                     u6508:
  2563  001724  0005               	push	
  2564  001726  6EFA               	movwf	pclath,c
  2565  001728  5033               	movf	_serial_write,w,c
  2566  00172A  6EFD               	movwf	tosl,c
  2567  00172C  5034               	movf	_serial_write+1,w,c
  2568  00172E  6EFE               	movwf	tosh,c
  2569  001730  50F8               	movf	tblptru,w,c
  2570  001732  6EFF               	movwf	tosu,c
  2571  001734  50FA               	movf	pclath,w,c
  2572  001736  0E85               	movlw	133
  2573  001738  0012               	return		;indir
  2574  00173A                     l6304:
  2575                           
  2576                           ;FastTransfer.c: 61: serial_write(whereToSend);
  2577  00173A  D801               	call	u6518
  2578  00173C  D00C               	goto	l6306
  2579  00173E                     u6518:
  2580  00173E  0005               	push	
  2581  001740  6EFA               	movwf	pclath,c
  2582  001742  5033               	movf	_serial_write,w,c
  2583  001744  6EFD               	movwf	tosl,c
  2584  001746  5034               	movf	_serial_write+1,w,c
  2585  001748  6EFE               	movwf	tosh,c
  2586  00174A  50F8               	movf	tblptru,w,c
  2587  00174C  6EFF               	movwf	tosu,c
  2588  00174E  50FA               	movf	pclath,w,c
  2589  001750  0100               	movlb	0	; () banked
  2590  001752  51F2               	movf	sendData@whereToSend& (0+255),w,b
  2591  001754  0012               	return		;indir
  2592  001756                     l6306:
  2593                           
  2594                           ;FastTransfer.c: 62: serial_write(moduleAddress);
  2595  001756  D801               	call	u6528
  2596  001758  D00B               	goto	l6308
  2597  00175A                     u6528:
  2598  00175A  0005               	push	
  2599  00175C  6EFA               	movwf	pclath,c
  2600  00175E  5033               	movf	_serial_write,w,c
  2601  001760  6EFD               	movwf	tosl,c
  2602  001762  5034               	movf	_serial_write+1,w,c
  2603  001764  6EFE               	movwf	tosh,c
  2604  001766  50F8               	movf	tblptru,w,c
  2605  001768  6EFF               	movwf	tosu,c
  2606  00176A  50FA               	movf	pclath,w,c
  2607  00176C  503A               	movf	_moduleAddress,w,c
  2608  00176E  0012               	return		;indir
  2609  001770                     l6308:
  2610                           
  2611                           ;FastTransfer.c: 63: serial_write(ring_buffer.count);
  2612  001770  D801               	call	u6538
  2613  001772  D00C               	goto	l6310
  2614  001774                     u6538:
  2615  001774  0005               	push	
  2616  001776  6EFA               	movwf	pclath,c
  2617  001778  5033               	movf	_serial_write,w,c
  2618  00177A  6EFD               	movwf	tosl,c
  2619  00177C  5034               	movf	_serial_write+1,w,c
  2620  00177E  6EFE               	movwf	tosh,c
  2621  001780  50F8               	movf	tblptru,w,c
  2622  001782  6EFF               	movwf	tosu,c
  2623  001784  50FA               	movf	pclath,w,c
  2624  001786  0102               	movlb	2	; () banked
  2625  001788  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2626  00178A  0012               	return		;indir
  2627  00178C                     l6310:
  2628                           
  2629                           ;FastTransfer.c: 67: int i;
  2630                           ;FastTransfer.c: 68: for (i = 0; i < ring_buffer.count; i++) {
  2631  00178C  0E00               	movlw	0
  2632  00178E  0100               	movlb	0	; () banked
  2633  001790  6FF5               	movwf	(sendData@i+1)& (0+255),b
  2634  001792  0E00               	movlw	0
  2635  001794  6FF4               	movwf	sendData@i& (0+255),b
  2636  001796  D01A               	goto	l6316
  2637  001798                     l6312:
  2638                           
  2639                           ;FastTransfer.c: 69: serial_write(*(sendStructAddress + i));
  2640  001798  D801               	call	u6548
  2641  00179A  D015               	goto	l6314
  2642  00179C                     u6548:
  2643  00179C  0005               	push	
  2644  00179E  6EFA               	movwf	pclath,c
  2645  0017A0  5033               	movf	_serial_write,w,c
  2646  0017A2  6EFD               	movwf	tosl,c
  2647  0017A4  5034               	movf	_serial_write+1,w,c
  2648  0017A6  6EFE               	movwf	tosh,c
  2649  0017A8  50F8               	movf	tblptru,w,c
  2650  0017AA  6EFF               	movwf	tosu,c
  2651  0017AC  50FA               	movf	pclath,w,c
  2652  0017AE  0100               	movlb	0	; () banked
  2653  0017B0  51F4               	movf	sendData@i& (0+255),w,b
  2654  0017B2  0100               	movlb	0	; () banked
  2655  0017B4  25D9               	addwf	_sendStructAddress& (0+255),w,b
  2656  0017B6  6ED9               	movwf	fsr2l,c
  2657  0017B8  0100               	movlb	0	; () banked
  2658  0017BA  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2659  0017BC  0100               	movlb	0	; () banked
  2660  0017BE  21DA               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2661  0017C0  6EDA               	movwf	fsr2h,c
  2662  0017C2  50DF               	movf	indf2,w,c
  2663  0017C4  0012               	return		;indir
  2664  0017C6                     l6314:
  2665  0017C6  0100               	movlb	0	; () banked
  2666  0017C8  4BF4               	infsnz	sendData@i& (0+255),f,b
  2667  0017CA  2BF5               	incf	(sendData@i+1)& (0+255),f,b
  2668  0017CC                     l6316:
  2669                           
  2670                           ; BSR set to: 0
  2671  0017CC  0102               	movlb	2	; () banked
  2672  0017CE  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2673  0017D0  0100               	movlb	0	; () banked
  2674  0017D2  5DF4               	subwf	sendData@i& (0+255),w,b
  2675  0017D4  0100               	movlb	0	; () banked
  2676  0017D6  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2677  0017D8  0A80               	xorlw	128
  2678  0017DA  6E27               	movwf	??_sendData& (0+255),c
  2679  0017DC  0102               	movlb	2	; () banked
  2680  0017DE  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2681  0017E0  0A80               	xorlw	128
  2682  0017E2  5827               	subwfb	??_sendData& (0+255),w,c
  2683  0017E4  A0D8               	btfss	status,0,c
  2684  0017E6  D7D8               	goto	l6312
  2685                           
  2686                           ; BSR set to: 2
  2687                           ;FastTransfer.c: 70: }
  2688                           ;FastTransfer.c: 73: serial_write(CS);
  2689                           
  2690                           ; BSR set to: 2
  2691  0017E8  D801               	call	u6568
  2692  0017EA  D00C               	goto	l6320
  2693  0017EC                     u6568:
  2694  0017EC  0005               	push	
  2695  0017EE  6EFA               	movwf	pclath,c
  2696  0017F0  5033               	movf	_serial_write,w,c
  2697  0017F2  6EFD               	movwf	tosl,c
  2698  0017F4  5034               	movf	_serial_write+1,w,c
  2699  0017F6  6EFE               	movwf	tosh,c
  2700  0017F8  50F8               	movf	tblptru,w,c
  2701  0017FA  6EFF               	movwf	tosu,c
  2702  0017FC  50FA               	movf	pclath,w,c
  2703  0017FE  0100               	movlb	0	; () banked
  2704  001800  51F3               	movf	sendData@CS& (0+255),w,b
  2705  001802  0012               	return		;indir
  2706  001804                     l6320:
  2707                           
  2708                           ;FastTransfer.c: 76: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2709  001804  0E28               	movlw	low _crc_buffer
  2710  001806  6E1B               	movwf	crcBufS_put@_this,c
  2711  001808  0E01               	movlw	high _crc_buffer
  2712  00180A  6E1C               	movwf	crcBufS_put@_this+1,c
  2713  00180C  C0F2  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2714  001810  C0F3  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2715  001814  0E00               	movlw	0
  2716  001816  6E1F               	movwf	crcBufS_put@status,c
  2717  001818  ECA8  F00E         	call	_crcBufS_put
  2718                           
  2719                           ;FastTransfer.c: 79: FastTransfer_buffer_flush(&ring_buffer, 1);
  2720  00181C  0E00               	movlw	low _ring_buffer
  2721  00181E  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2722  001820  0E02               	movlw	high _ring_buffer
  2723  001822  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2724  001824  0E00               	movlw	0
  2725  001826  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2726  001828  0E01               	movlw	1
  2727  00182A  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2728  00182C  EC6B  F015         	call	_FastTransfer_buffer_flush	;wreg free
  2729  001830  0012               	return		;funcret
  2730  001832                     __end_of_sendData:
  2731                           	opt stack 0
  2732                           tosu	equ	0xFFF
  2733                           tosh	equ	0xFFE
  2734                           tosl	equ	0xFFD
  2735                           pclath	equ	0xFFA
  2736                           tblptru	equ	0xFF8
  2737                           tblptrh	equ	0xFF7
  2738                           tblptrl	equ	0xFF6
  2739                           tablat	equ	0xFF5
  2740                           intcon	equ	0xFF2
  2741                           postinc0	equ	0xFEE
  2742                           wreg	equ	0xFE8
  2743                           indf2	equ	0xFDF
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _crcBufS_put *****************
  2749 ;; Defined at:
  2750 ;;		line 326 in file "FastTransfer.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2753 ;;		 -> crc_buffer(17), 
  2754 ;;  address         1   28[COMRAM] unsigned char 
  2755 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2756 ;;  status          1   30[COMRAM] unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;		None               void
  2761 ;; Registers used:
  2762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2768 ;;      Params:         5       0       0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0
  2770 ;;      Temps:          2       0       0       0       0       0       0
  2771 ;;      Totals:         7       0       0       0       0       0       0
  2772 ;;Total ram usage:        7 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    4
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_sendData
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text4
  2783  001D50                     __ptext4:
  2784                           	opt stack 0
  2785  001D50                     _crcBufS_put:
  2786                           	opt stack 23
  2787                           
  2788                           ;FastTransfer.c: 327: _this->buf[_this->head] = address;
  2789                           
  2790                           ;incstack = 0
  2791  001D50  EE20 F00F          	lfsr	2,15
  2792  001D54  501B               	movf	crcBufS_put@_this,w,c
  2793  001D56  26D9               	addwf	fsr2l,f,c
  2794  001D58  501C               	movf	crcBufS_put@_this+1,w,c
  2795  001D5A  22DA               	addwfc	fsr2h,f,c
  2796  001D5C  CFDE F020          	movff	postinc2,??_crcBufS_put
  2797  001D60  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2798  001D64  5020               	movf	??_crcBufS_put,w,c
  2799  001D66  241B               	addwf	crcBufS_put@_this,w,c
  2800  001D68  6ED9               	movwf	fsr2l,c
  2801  001D6A  5021               	movf	??_crcBufS_put+1,w,c
  2802  001D6C  201C               	addwfc	crcBufS_put@_this+1,w,c
  2803  001D6E  6EDA               	movwf	fsr2h,c
  2804  001D70  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2805                           
  2806                           ;FastTransfer.c: 328: _this->head++;
  2807  001D74  EE20 F00F          	lfsr	2,15
  2808  001D78  501B               	movf	crcBufS_put@_this,w,c
  2809  001D7A  26D9               	addwf	fsr2l,f,c
  2810  001D7C  501C               	movf	crcBufS_put@_this+1,w,c
  2811  001D7E  22DA               	addwfc	fsr2h,f,c
  2812  001D80  2ADE               	incf	postinc2,f,c
  2813  001D82  0E00               	movlw	0
  2814  001D84  22DD               	addwfc	postdec2,f,c
  2815                           
  2816                           ;FastTransfer.c: 329: _this->buf[_this->head] = oldCRC;
  2817  001D86  EE20 F00F          	lfsr	2,15
  2818  001D8A  501B               	movf	crcBufS_put@_this,w,c
  2819  001D8C  26D9               	addwf	fsr2l,f,c
  2820  001D8E  501C               	movf	crcBufS_put@_this+1,w,c
  2821  001D90  22DA               	addwfc	fsr2h,f,c
  2822  001D92  CFDE F020          	movff	postinc2,??_crcBufS_put
  2823  001D96  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2824  001D9A  5020               	movf	??_crcBufS_put,w,c
  2825  001D9C  241B               	addwf	crcBufS_put@_this,w,c
  2826  001D9E  6ED9               	movwf	fsr2l,c
  2827  001DA0  5021               	movf	??_crcBufS_put+1,w,c
  2828  001DA2  201C               	addwfc	crcBufS_put@_this+1,w,c
  2829  001DA4  6EDA               	movwf	fsr2h,c
  2830  001DA6  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2831                           
  2832                           ;FastTransfer.c: 330: _this->head++;
  2833  001DAA  EE20 F00F          	lfsr	2,15
  2834  001DAE  501B               	movf	crcBufS_put@_this,w,c
  2835  001DB0  26D9               	addwf	fsr2l,f,c
  2836  001DB2  501C               	movf	crcBufS_put@_this+1,w,c
  2837  001DB4  22DA               	addwfc	fsr2h,f,c
  2838  001DB6  2ADE               	incf	postinc2,f,c
  2839  001DB8  0E00               	movlw	0
  2840  001DBA  22DD               	addwfc	postdec2,f,c
  2841                           
  2842                           ;FastTransfer.c: 331: _this->buf[_this->head] = status;
  2843  001DBC  EE20 F00F          	lfsr	2,15
  2844  001DC0  501B               	movf	crcBufS_put@_this,w,c
  2845  001DC2  26D9               	addwf	fsr2l,f,c
  2846  001DC4  501C               	movf	crcBufS_put@_this+1,w,c
  2847  001DC6  22DA               	addwfc	fsr2h,f,c
  2848  001DC8  CFDE F020          	movff	postinc2,??_crcBufS_put
  2849  001DCC  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2850  001DD0  5020               	movf	??_crcBufS_put,w,c
  2851  001DD2  241B               	addwf	crcBufS_put@_this,w,c
  2852  001DD4  6ED9               	movwf	fsr2l,c
  2853  001DD6  5021               	movf	??_crcBufS_put+1,w,c
  2854  001DD8  201C               	addwfc	crcBufS_put@_this+1,w,c
  2855  001DDA  6EDA               	movwf	fsr2h,c
  2856  001DDC  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2857                           
  2858                           ;FastTransfer.c: 332: _this->head++;
  2859  001DE0  EE20 F00F          	lfsr	2,15
  2860  001DE4  501B               	movf	crcBufS_put@_this,w,c
  2861  001DE6  26D9               	addwf	fsr2l,f,c
  2862  001DE8  501C               	movf	crcBufS_put@_this+1,w,c
  2863  001DEA  22DA               	addwfc	fsr2h,f,c
  2864  001DEC  2ADE               	incf	postinc2,f,c
  2865  001DEE  0E00               	movlw	0
  2866  001DF0  22DD               	addwfc	postdec2,f,c
  2867                           
  2868                           ;FastTransfer.c: 333: if (_this->head >= (5 * 3)) {
  2869  001DF2  EE20 F00F          	lfsr	2,15
  2870  001DF6  501B               	movf	crcBufS_put@_this,w,c
  2871  001DF8  26D9               	addwf	fsr2l,f,c
  2872  001DFA  501C               	movf	crcBufS_put@_this+1,w,c
  2873  001DFC  22DA               	addwfc	fsr2h,f,c
  2874  001DFE  0E01               	movlw	1
  2875  001E00  BEDB               	btfsc	plusw2,7,c
  2876  001E02  0012               	return	
  2877  001E04  0E01               	movlw	1
  2878  001E06  50DB               	movf	plusw2,w,c
  2879  001E08  E104               	bnz	u6130
  2880  001E0A  0E0F               	movlw	15
  2881  001E0C  5CDE               	subwf	postinc2,w,c
  2882  001E0E  A0D8               	btfss	status,0,c
  2883  001E10  0012               	return	
  2884  001E12                     u6130:
  2885                           
  2886                           ;FastTransfer.c: 334: _this->head = 0;
  2887  001E12  EE20 F00F          	lfsr	2,15
  2888  001E16  501B               	movf	crcBufS_put@_this,w,c
  2889  001E18  26D9               	addwf	fsr2l,f,c
  2890  001E1A  501C               	movf	crcBufS_put@_this+1,w,c
  2891  001E1C  22DA               	addwfc	fsr2h,f,c
  2892  001E1E  0E00               	movlw	0
  2893  001E20  6EDE               	movwf	postinc2,c
  2894  001E22  0E00               	movlw	0
  2895  001E24  6EDD               	movwf	postdec2,c
  2896  001E26  0012               	return	
  2897  001E28                     __end_of_crcBufS_put:
  2898                           	opt stack 0
  2899                           tosu	equ	0xFFF
  2900                           tosh	equ	0xFFE
  2901                           tosl	equ	0xFFD
  2902                           pclath	equ	0xFFA
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           intcon	equ	0xFF2
  2908                           postinc0	equ	0xFEE
  2909                           wreg	equ	0xFE8
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           plusw2	equ	0xFDB
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _FastTransfer_buffer_flush *****************
  2919 ;; Defined at:
  2920 ;;		line 266 in file "FastTransfer.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  2923 ;;		 -> ring_buffer(206), 
  2924 ;;  clearBuffer     2   36[COMRAM] const int 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;		None               void
  2929 ;; Registers used:
  2930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2936 ;;      Params:         4       0       0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0
  2939 ;;      Totals:         4       0       0       0       0       0       0
  2940 ;;Total ram usage:        4 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    5
  2943 ;; This function calls:
  2944 ;;		_memset
  2945 ;; This function is called by:
  2946 ;;		_sendData
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text5
  2951  002AD6                     __ptext5:
  2952                           	opt stack 0
  2953  002AD6                     _FastTransfer_buffer_flush:
  2954                           	opt stack 22
  2955                           
  2956                           ;FastTransfer.c: 267: _this->count = 0;
  2957                           
  2958                           ;incstack = 0
  2959  002AD6  EE20 F0CC          	lfsr	2,204
  2960  002ADA  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2961  002ADC  26D9               	addwf	fsr2l,f,c
  2962  002ADE  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2963  002AE0  22DA               	addwfc	fsr2h,f,c
  2964  002AE2  0E00               	movlw	0
  2965  002AE4  6EDE               	movwf	postinc2,c
  2966  002AE6  0E00               	movlw	0
  2967  002AE8  6EDD               	movwf	postdec2,c
  2968                           
  2969                           ;FastTransfer.c: 268: _this->head = 0;
  2970  002AEA  EE20 F0C8          	lfsr	2,200
  2971  002AEE  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2972  002AF0  26D9               	addwf	fsr2l,f,c
  2973  002AF2  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2974  002AF4  22DA               	addwfc	fsr2h,f,c
  2975  002AF6  0E00               	movlw	0
  2976  002AF8  6EDE               	movwf	postinc2,c
  2977  002AFA  0E00               	movlw	0
  2978  002AFC  6EDD               	movwf	postdec2,c
  2979                           
  2980                           ;FastTransfer.c: 269: _this->tail = 0;
  2981  002AFE  EE20 F0CA          	lfsr	2,202
  2982  002B02  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2983  002B04  26D9               	addwf	fsr2l,f,c
  2984  002B06  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2985  002B08  22DA               	addwfc	fsr2h,f,c
  2986  002B0A  0E00               	movlw	0
  2987  002B0C  6EDE               	movwf	postinc2,c
  2988  002B0E  0E00               	movlw	0
  2989  002B10  6EDD               	movwf	postdec2,c
  2990                           
  2991                           ;FastTransfer.c: 270: if (clearBuffer) {
  2992  002B12  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  2993  002B14  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  2994  002B16  B4D8               	btfsc	status,2,c
  2995  002B18  0012               	return	
  2996                           
  2997                           ;FastTransfer.c: 271: memset(_this->buf, 0, sizeof (_this->buf));
  2998  002B1A  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  2999  002B1E  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  3000  002B22  0E00               	movlw	0
  3001  002B24  6E1E               	movwf	memset@c+1,c
  3002  002B26  0E00               	movlw	0
  3003  002B28  6E1D               	movwf	memset@c,c
  3004  002B2A  0E00               	movlw	0
  3005  002B2C  6E20               	movwf	memset@n+1,c
  3006  002B2E  0EC8               	movlw	200
  3007  002B30  6E1F               	movwf	memset@n,c
  3008  002B32  EC96  F017         	call	_memset	;wreg free
  3009  002B36  0012               	return	
  3010  002B38                     __end_of_FastTransfer_buffer_flush:
  3011                           	opt stack 0
  3012                           tosu	equ	0xFFF
  3013                           tosh	equ	0xFFE
  3014                           tosl	equ	0xFFD
  3015                           pclath	equ	0xFFA
  3016                           tblptru	equ	0xFF8
  3017                           tblptrh	equ	0xFF7
  3018                           tblptrl	equ	0xFF6
  3019                           tablat	equ	0xFF5
  3020                           intcon	equ	0xFF2
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           indf2	equ	0xFDF
  3024                           postinc2	equ	0xFDE
  3025                           postdec2	equ	0xFDD
  3026                           plusw2	equ	0xFDB
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function _buttonsCollector *****************
  3032 ;; Defined at:
  3033 ;;		line 61 in file "Communications.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  i               2   39[COMRAM] int 
  3038 ;;  sendVal         2   37[COMRAM] unsigned int 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  2   32[COMRAM] unsigned int 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3048 ;;      Params:         2       0       0       0       0       0       0
  3049 ;;      Locals:         4       0       0       0       0       0       0
  3050 ;;      Temps:          3       0       0       0       0       0       0
  3051 ;;      Totals:         9       0       0       0       0       0       0
  3052 ;;Total ram usage:        9 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    5
  3055 ;; This function calls:
  3056 ;;		_GetButtonState
  3057 ;; This function is called by:
  3058 ;;		_respondECU
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text6
  3063  00292E                     __ptext6:
  3064                           	opt stack 0
  3065  00292E                     _buttonsCollector:
  3066                           	opt stack 23
  3067                           
  3068                           ;Communications.c: 62: unsigned int sendVal = 0;
  3069                           
  3070                           ;incstack = 0
  3071  00292E  0E00               	movlw	0
  3072  002930  6E27               	movwf	buttonsCollector@sendVal+1,c
  3073  002932  0E00               	movlw	0
  3074  002934  6E26               	movwf	buttonsCollector@sendVal,c
  3075                           
  3076                           ;Communications.c: 63: int i = 0;
  3077  002936  0E00               	movlw	0
  3078  002938  6E29               	movwf	buttonsCollector@i+1,c
  3079  00293A  0E00               	movlw	0
  3080  00293C  6E28               	movwf	buttonsCollector@i,c
  3081                           
  3082                           ;Communications.c: 64: for (i = 0; i < 8; i++) {
  3083  00293E  0E00               	movlw	0
  3084  002940  6E29               	movwf	buttonsCollector@i+1,c
  3085  002942  0E00               	movlw	0
  3086  002944  6E28               	movwf	buttonsCollector@i,c
  3087  002946  BE29               	btfsc	buttonsCollector@i+1,7,c
  3088  002948  D006               	goto	l4436
  3089  00294A  5029               	movf	buttonsCollector@i+1,w,c
  3090  00294C  E123               	bnz	l939
  3091  00294E  0E08               	movlw	8
  3092  002950  5C28               	subwf	buttonsCollector@i,w,c
  3093  002952  B0D8               	btfsc	status,0,c
  3094  002954  D01F               	goto	l939
  3095  002956                     l4436:
  3096                           
  3097                           ;Communications.c: 65: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  3098  002956  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  3099  00295A  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  3100  00295E  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  3101  002962  ECEB  F017         	call	_GetButtonState	;wreg free
  3102  002966  0B01               	andlw	1
  3103  002968  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  3104  00296A  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  3105  00296C  2A23               	incf	??_buttonsCollector,f,c
  3106  00296E  D003               	goto	u3534
  3107  002970                     u3535:
  3108  002970  90D8               	bcf	status,0,c
  3109  002972  3624               	rlcf	??_buttonsCollector+1,f,c
  3110  002974  3625               	rlcf	??_buttonsCollector+2,f,c
  3111  002976                     u3534:
  3112  002976  2E23               	decfsz	??_buttonsCollector,f,c
  3113  002978  D7FB               	goto	u3535
  3114  00297A  5026               	movf	buttonsCollector@sendVal,w,c
  3115  00297C  1024               	iorwf	??_buttonsCollector+1,w,c
  3116  00297E  6E26               	movwf	buttonsCollector@sendVal,c
  3117  002980  5027               	movf	buttonsCollector@sendVal+1,w,c
  3118  002982  1025               	iorwf	??_buttonsCollector+2,w,c
  3119  002984  6E27               	movwf	buttonsCollector@sendVal+1,c
  3120  002986  4A28               	infsnz	buttonsCollector@i,f,c
  3121  002988  2A29               	incf	buttonsCollector@i+1,f,c
  3122  00298A  BE29               	btfsc	buttonsCollector@i+1,7,c
  3123  00298C  D7E4               	goto	l4436
  3124  00298E  5029               	movf	buttonsCollector@i+1,w,c
  3125  002990  E101               	bnz	u3540
  3126  002992  D7DD               	goto	L1
  3127  002994                     u3540:
  3128  002994                     l939:
  3129                           
  3130                           ;Communications.c: 66: }
  3131                           ;Communications.c: 67: return sendVal;
  3132  002994  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  3133  002998  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  3134  00299C  0012               	return		;funcret
  3135  00299E                     __end_of_buttonsCollector:
  3136                           	opt stack 0
  3137                           tosu	equ	0xFFF
  3138                           tosh	equ	0xFFE
  3139                           tosl	equ	0xFFD
  3140                           pclath	equ	0xFFA
  3141                           tblptru	equ	0xFF8
  3142                           tblptrh	equ	0xFF7
  3143                           tblptrl	equ	0xFF6
  3144                           tablat	equ	0xFF5
  3145                           intcon	equ	0xFF2
  3146                           postinc0	equ	0xFEE
  3147                           wreg	equ	0xFE8
  3148                           indf2	equ	0xFDF
  3149                           postinc2	equ	0xFDE
  3150                           postdec2	equ	0xFDD
  3151                           plusw2	equ	0xFDB
  3152                           fsr2h	equ	0xFDA
  3153                           fsr2l	equ	0xFD9
  3154                           status	equ	0xFD8
  3155                           
  3156 ;; *************** function _GetButtonState *****************
  3157 ;; Defined at:
  3158 ;;		line 184 in file "IO.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  btnnum          2   26[COMRAM] int 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      unsigned char 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3172 ;;      Params:         2       0       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0
  3174 ;;      Temps:          4       0       0       0       0       0       0
  3175 ;;      Totals:         6       0       0       0       0       0       0
  3176 ;;Total ram usage:        6 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    4
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_buttonsCollector
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text7
  3187  002FD6                     __ptext7:
  3188                           	opt stack 0
  3189  002FD6                     _GetButtonState:
  3190                           	opt stack 23
  3191                           
  3192                           ;IO.c: 185: return butnarray[btnnum - 1];
  3193                           
  3194                           ;incstack = 0
  3195  002FD6  0EFF               	movlw	255
  3196  002FD8  6E1D               	movwf	??_GetButtonState& (0+255),c
  3197  002FDA  0EFF               	movlw	255
  3198  002FDC  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  3199  002FDE  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  3200  002FE2  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  3201  002FE6  501D               	movf	??_GetButtonState,w,c
  3202  002FE8  261F               	addwf	??_GetButtonState+2,f,c
  3203  002FEA  501E               	movf	??_GetButtonState+1,w,c
  3204  002FEC  2220               	addwfc	??_GetButtonState+3,f,c
  3205  002FEE  0EB0               	movlw	low _butnarray
  3206  002FF0  241F               	addwf	??_GetButtonState+2,w,c
  3207  002FF2  6ED9               	movwf	fsr2l,c
  3208  002FF4  0E00               	movlw	high _butnarray
  3209  002FF6  2020               	addwfc	??_GetButtonState+3,w,c
  3210  002FF8  6EDA               	movwf	fsr2h,c
  3211  002FFA  50DF               	movf	indf2,w,c
  3212  002FFC  0012               	return	
  3213  002FFE                     __end_of_GetButtonState:
  3214                           	opt stack 0
  3215                           tosu	equ	0xFFF
  3216                           tosh	equ	0xFFE
  3217                           tosl	equ	0xFFD
  3218                           pclath	equ	0xFFA
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           intcon	equ	0xFF2
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           indf2	equ	0xFDF
  3227                           postinc2	equ	0xFDE
  3228                           postdec2	equ	0xFDD
  3229                           plusw2	equ	0xFDB
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function _ToSend *****************
  3235 ;; Defined at:
  3236 ;;		line 221 in file "FastTransfer.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  where           1    wreg     unsigned char 
  3239 ;;  what            2    0[BANK0 ] unsigned int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  where           1   41[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;		None               void
  3244 ;; Registers used:
  3245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3251 ;;      Params:         0       2       0       0       0       0       0
  3252 ;;      Locals:         1       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0
  3254 ;;      Totals:         1       2       0       0       0       0       0
  3255 ;;Total ram usage:        3 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    6
  3258 ;; This function calls:
  3259 ;;		_FastTransfer_buffer_put
  3260 ;; This function is called by:
  3261 ;;		_respondECU
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text8
  3266  0030EC                     __ptext8:
  3267                           	opt stack 0
  3268  0030EC                     _ToSend:
  3269                           	opt stack 22
  3270                           
  3271                           ;incstack = 0
  3272                           ;ToSend@where stored from wreg
  3273  0030EC  6E2A               	movwf	ToSend@where,c
  3274                           
  3275                           ;FastTransfer.c: 222: FastTransfer_buffer_put(&ring_buffer, where, what);
  3276  0030EE  0E00               	movlw	low _ring_buffer
  3277  0030F0  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3278  0030F2  0E02               	movlw	high _ring_buffer
  3279  0030F4  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3280  0030F6  C02A  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3281  0030FA  C0F2  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3282  0030FE  C0F3  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3283  003102  EC6F  F009         	call	_FastTransfer_buffer_put	;wreg free
  3284  003106  0012               	return		;funcret
  3285  003108                     __end_of_ToSend:
  3286                           	opt stack 0
  3287                           tosu	equ	0xFFF
  3288                           tosh	equ	0xFFE
  3289                           tosl	equ	0xFFD
  3290                           pclath	equ	0xFFA
  3291                           tblptru	equ	0xFF8
  3292                           tblptrh	equ	0xFF7
  3293                           tblptrl	equ	0xFF6
  3294                           tablat	equ	0xFF5
  3295                           intcon	equ	0xFF2
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf2	equ	0xFDF
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           plusw2	equ	0xFDB
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _FastTransfer_buffer_put *****************
  3307 ;; Defined at:
  3308 ;;		line 228 in file "FastTransfer.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3311 ;;		 -> ring_buffer(206), 
  3312 ;;  towhere         1   34[COMRAM] unsigned char 
  3313 ;;  towhat          2   35[COMRAM] unsigned int 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3325 ;;      Params:         5       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0
  3327 ;;      Temps:          2       0       0       0       0       0       0
  3328 ;;      Totals:         7       0       0       0       0       0       0
  3329 ;;Total ram usage:        7 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    5
  3332 ;; This function calls:
  3333 ;;		_FastTransfer_buffer_modulo_inc
  3334 ;; This function is called by:
  3335 ;;		_ToSend
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text9
  3340  0012DE                     __ptext9:
  3341                           	opt stack 0
  3342  0012DE                     _FastTransfer_buffer_put:
  3343                           	opt stack 22
  3344                           
  3345                           ;FastTransfer.c: 230: group.integer = towhat;
  3346                           
  3347                           ;incstack = 0
  3348  0012DE  C024  F02B         	movff	FastTransfer_buffer_put@towhat,_group
  3349  0012E2  C025  F02C         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3350                           
  3351                           ;FastTransfer.c: 232: if (_this->count < (200 - 3)) {
  3352  0012E6  EE20 F0CC          	lfsr	2,204
  3353  0012EA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3354  0012EC  26D9               	addwf	fsr2l,f,c
  3355  0012EE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3356  0012F0  22DA               	addwfc	fsr2h,f,c
  3357  0012F2  0E01               	movlw	1
  3358  0012F4  BEDB               	btfsc	plusw2,7,c
  3359  0012F6  D007               	goto	l4156
  3360  0012F8  0E01               	movlw	1
  3361  0012FA  50DB               	movf	plusw2,w,c
  3362  0012FC  E103               	bnz	u3171
  3363  0012FE  0EC5               	movlw	197
  3364  001300  5CDE               	subwf	postinc2,w,c
  3365  001302  B0D8               	btfsc	status,0,c
  3366  001304                     u3171:
  3367  001304  0012               	return	
  3368  001306                     l4156:
  3369                           
  3370                           ;FastTransfer.c: 233: _this->buf[_this->head] = towhere;
  3371  001306  EE20 F0C8          	lfsr	2,200
  3372  00130A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3373  00130C  26D9               	addwf	fsr2l,f,c
  3374  00130E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3375  001310  22DA               	addwfc	fsr2h,f,c
  3376  001312  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3377  001316  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3378  00131A  5026               	movf	??_FastTransfer_buffer_put,w,c
  3379  00131C  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3380  00131E  6ED9               	movwf	fsr2l,c
  3381  001320  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3382  001322  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3383  001324  6EDA               	movwf	fsr2h,c
  3384  001326  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3385                           
  3386                           ;FastTransfer.c: 234: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3387  00132A  EE20 F0C8          	lfsr	2,200
  3388  00132E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3389  001330  26D9               	addwf	fsr2l,f,c
  3390  001332  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3391  001334  22DA               	addwfc	fsr2h,f,c
  3392  001336  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3393  00133A  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3394  00133E  0E00               	movlw	0
  3395  001340  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3396  001342  0EC8               	movlw	200
  3397  001344  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3398  001346  ECAC  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3399  00134A  EE20 F0C8          	lfsr	2,200
  3400  00134E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3401  001350  26D9               	addwf	fsr2l,f,c
  3402  001352  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3403  001354  22DA               	addwfc	fsr2h,f,c
  3404  001356  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3405  00135A  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3406                           
  3407                           ;FastTransfer.c: 235: ++_this->count;
  3408  00135E  EE20 F0CC          	lfsr	2,204
  3409  001362  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3410  001364  26D9               	addwf	fsr2l,f,c
  3411  001366  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3412  001368  22DA               	addwfc	fsr2h,f,c
  3413  00136A  2ADE               	incf	postinc2,f,c
  3414  00136C  0E00               	movlw	0
  3415  00136E  22DD               	addwfc	postdec2,f,c
  3416                           
  3417                           ;FastTransfer.c: 236: _this->buf[_this->head] = group.parts[0];
  3418  001370  EE20 F0C8          	lfsr	2,200
  3419  001374  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3420  001376  26D9               	addwf	fsr2l,f,c
  3421  001378  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3422  00137A  22DA               	addwfc	fsr2h,f,c
  3423  00137C  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3424  001380  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3425  001384  5026               	movf	??_FastTransfer_buffer_put,w,c
  3426  001386  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3427  001388  6ED9               	movwf	fsr2l,c
  3428  00138A  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3429  00138C  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3430  00138E  6EDA               	movwf	fsr2h,c
  3431  001390  C02B  FFDF         	movff	_group,indf2
  3432                           
  3433                           ;FastTransfer.c: 237: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3434  001394  EE20 F0C8          	lfsr	2,200
  3435  001398  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3436  00139A  26D9               	addwf	fsr2l,f,c
  3437  00139C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3438  00139E  22DA               	addwfc	fsr2h,f,c
  3439  0013A0  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3440  0013A4  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3441  0013A8  0E00               	movlw	0
  3442  0013AA  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3443  0013AC  0EC8               	movlw	200
  3444  0013AE  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3445  0013B0  ECAC  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3446  0013B4  EE20 F0C8          	lfsr	2,200
  3447  0013B8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3448  0013BA  26D9               	addwf	fsr2l,f,c
  3449  0013BC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3450  0013BE  22DA               	addwfc	fsr2h,f,c
  3451  0013C0  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3452  0013C4  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3453                           
  3454                           ;FastTransfer.c: 238: ++_this->count;
  3455  0013C8  EE20 F0CC          	lfsr	2,204
  3456  0013CC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3457  0013CE  26D9               	addwf	fsr2l,f,c
  3458  0013D0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3459  0013D2  22DA               	addwfc	fsr2h,f,c
  3460  0013D4  2ADE               	incf	postinc2,f,c
  3461  0013D6  0E00               	movlw	0
  3462  0013D8  22DD               	addwfc	postdec2,f,c
  3463                           
  3464                           ;FastTransfer.c: 239: _this->buf[_this->head] = group.parts[1];
  3465  0013DA  EE20 F0C8          	lfsr	2,200
  3466  0013DE  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3467  0013E0  26D9               	addwf	fsr2l,f,c
  3468  0013E2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3469  0013E4  22DA               	addwfc	fsr2h,f,c
  3470  0013E6  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3471  0013EA  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3472  0013EE  5026               	movf	??_FastTransfer_buffer_put,w,c
  3473  0013F0  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3474  0013F2  6ED9               	movwf	fsr2l,c
  3475  0013F4  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3476  0013F6  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3477  0013F8  6EDA               	movwf	fsr2h,c
  3478  0013FA  C02C  FFDF         	movff	_group+1,indf2
  3479                           
  3480                           ;FastTransfer.c: 240: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3481  0013FE  EE20 F0C8          	lfsr	2,200
  3482  001402  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3483  001404  26D9               	addwf	fsr2l,f,c
  3484  001406  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3485  001408  22DA               	addwfc	fsr2h,f,c
  3486  00140A  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3487  00140E  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3488  001412  0E00               	movlw	0
  3489  001414  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3490  001416  0EC8               	movlw	200
  3491  001418  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3492  00141A  ECAC  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3493  00141E  EE20 F0C8          	lfsr	2,200
  3494  001422  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3495  001424  26D9               	addwf	fsr2l,f,c
  3496  001426  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3497  001428  22DA               	addwfc	fsr2h,f,c
  3498  00142A  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3499  00142E  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3500                           
  3501                           ;FastTransfer.c: 241: ++_this->count;
  3502  001432  EE20 F0CC          	lfsr	2,204
  3503  001436  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3504  001438  26D9               	addwf	fsr2l,f,c
  3505  00143A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3506  00143C  22DA               	addwfc	fsr2h,f,c
  3507  00143E  2ADE               	incf	postinc2,f,c
  3508  001440  0E00               	movlw	0
  3509  001442  22DD               	addwfc	postdec2,f,c
  3510  001444  0012               	return	
  3511  001446                     __end_of_FastTransfer_buffer_put:
  3512                           	opt stack 0
  3513                           tosu	equ	0xFFF
  3514                           tosh	equ	0xFFE
  3515                           tosl	equ	0xFFD
  3516                           pclath	equ	0xFFA
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           intcon	equ	0xFF2
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           indf2	equ	0xFDF
  3525                           postinc2	equ	0xFDE
  3526                           postdec2	equ	0xFDD
  3527                           plusw2	equ	0xFDB
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3533 ;; Defined at:
  3534 ;;		line 278 in file "FastTransfer.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  value           2   26[COMRAM] const unsigned int 
  3537 ;;  modulus         2   28[COMRAM] const unsigned int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  my_value        2   30[COMRAM] unsigned int 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2   26[COMRAM] unsigned int 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         4       0       0       0       0       0       0
  3550 ;;      Locals:         2       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0
  3552 ;;      Totals:         6       0       0       0       0       0       0
  3553 ;;Total ram usage:        6 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    4
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_FastTransfer_buffer_put
  3560 ;;		_FastTransfer_buffer_get
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text10
  3565  002F58                     __ptext10:
  3566                           	opt stack 0
  3567  002F58                     _FastTransfer_buffer_modulo_inc:
  3568                           	opt stack 22
  3569                           
  3570                           ;FastTransfer.c: 279: unsigned int my_value = value + 1;
  3571                           
  3572                           ;incstack = 0
  3573  002F58  0E01               	movlw	1
  3574  002F5A  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3575  002F5C  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3576  002F5E  0E00               	movlw	0
  3577  002F60  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3578  002F62  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3579                           
  3580                           ;FastTransfer.c: 280: if (my_value >= modulus) {
  3581  002F64  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3582  002F66  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3583  002F68  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3584  002F6A  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3585  002F6C  A0D8               	btfss	status,0,c
  3586  002F6E  D004               	goto	l4016
  3587                           
  3588                           ;FastTransfer.c: 281: my_value = 0;
  3589  002F70  0E00               	movlw	0
  3590  002F72  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3591  002F74  0E00               	movlw	0
  3592  002F76  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3593  002F78                     l4016:
  3594                           
  3595                           ;FastTransfer.c: 282: }
  3596                           ;FastTransfer.c: 283: return (my_value);
  3597  002F78  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3598  002F7C  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3599  002F80  0012               	return	
  3600  002F82                     __end_of_FastTransfer_buffer_modulo_inc:
  3601                           	opt stack 0
  3602                           tosu	equ	0xFFF
  3603                           tosh	equ	0xFFE
  3604                           tosl	equ	0xFFD
  3605                           pclath	equ	0xFFA
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           intcon	equ	0xFF2
  3611                           postinc0	equ	0xFEE
  3612                           wreg	equ	0xFE8
  3613                           indf2	equ	0xFDF
  3614                           postinc2	equ	0xFDE
  3615                           postdec2	equ	0xFDD
  3616                           plusw2	equ	0xFDB
  3617                           fsr2h	equ	0xFDA
  3618                           fsr2l	equ	0xFD9
  3619                           status	equ	0xFD8
  3620                           
  3621 ;; *************** function _Delay *****************
  3622 ;; Defined at:
  3623 ;;		line 6 in file "Function.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  wait            2   26[COMRAM] int 
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;  x               2   29[COMRAM] int 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;		None               void
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3637 ;;      Params:         2       0       0       0       0       0       0
  3638 ;;      Locals:         2       0       0       0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0       0       0
  3640 ;;      Totals:         5       0       0       0       0       0       0
  3641 ;;Total ram usage:        5 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; Hardware stack levels required when called:    4
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_respondECU
  3648 ;;		_TestBarGraph
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text11
  3653  002E98                     __ptext11:
  3654                           	opt stack 0
  3655  002E98                     _Delay:
  3656                           	opt stack 24
  3657                           
  3658                           ;Function.c: 7: int x;
  3659                           ;Function.c: 8: for (x = 0; x < wait; x++) {
  3660                           
  3661                           ;incstack = 0
  3662  002E98  0E00               	movlw	0
  3663  002E9A  6E1F               	movwf	Delay@x+1,c
  3664  002E9C  0E00               	movlw	0
  3665  002E9E  6E1E               	movwf	Delay@x,c
  3666  002EA0  D00A               	goto	l1334
  3667  002EA2                     l4444:
  3668                           
  3669                           ;Function.c: 9: _delay((unsigned long)((1)*(16000000/4000.0)));
  3670  002EA2  0E06               	movlw	6
  3671  002EA4  6E1D               	movwf	??_Delay& (0+255),c
  3672  002EA6  0E30               	movlw	48
  3673  002EA8                     u8477:
  3674  002EA8  2EE8               	decfsz	wreg,f,c
  3675  002EAA  D7FE               	goto	u8477
  3676  002EAC  2E1D               	decfsz	??_Delay& (0+255),f,c
  3677  002EAE  D7FC               	goto	u8477
  3678  002EB0  D000               	nop2	
  3679  002EB2  4A1E               	infsnz	Delay@x,f,c
  3680  002EB4  2A1F               	incf	Delay@x+1,f,c
  3681  002EB6                     l1334:
  3682  002EB6  501B               	movf	Delay@wait,w,c
  3683  002EB8  5C1E               	subwf	Delay@x,w,c
  3684  002EBA  501F               	movf	Delay@x+1,w,c
  3685  002EBC  0A80               	xorlw	128
  3686  002EBE  6E1D               	movwf	??_Delay& (0+255),c
  3687  002EC0  501C               	movf	Delay@wait+1,w,c
  3688  002EC2  0A80               	xorlw	128
  3689  002EC4  581D               	subwfb	??_Delay& (0+255),w,c
  3690  002EC6  B0D8               	btfsc	status,0,c
  3691  002EC8  0012               	return	
  3692  002ECA  D7EB               	goto	l4444
  3693  002ECC                     __end_of_Delay:
  3694                           	opt stack 0
  3695                           tosu	equ	0xFFF
  3696                           tosh	equ	0xFFE
  3697                           tosl	equ	0xFFD
  3698                           pclath	equ	0xFFA
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           indf2	equ	0xFDF
  3707                           postinc2	equ	0xFDE
  3708                           postdec2	equ	0xFDD
  3709                           plusw2	equ	0xFDB
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8
  3713                           
  3714 ;; *************** function _receiveData *****************
  3715 ;; Defined at:
  3716 ;;		line 83 in file "FastTransfer.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  holder          3    9[BANK1 ] unsigned char [3]
  3721 ;;  crcHolder       1   13[BANK1 ] unsigned char 
  3722 ;;  holder          3    6[BANK1 ] unsigned char [3]
  3723 ;;  crcHolder       1   12[BANK1 ] unsigned char 
  3724 ;;  u               2   14[BANK1 ] int 
  3725 ;;  r               2   16[BANK1 ] int 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      unsigned char 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3735 ;;      Params:         0       0       0       0       0       0       0
  3736 ;;      Locals:         0       0      12       0       0       0       0
  3737 ;;      Temps:          0       0       6       0       0       0       0
  3738 ;;      Totals:         0       0      18       0       0       0       0
  3739 ;;Total ram usage:       18 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    8
  3742 ;; This function calls:
  3743 ;;		Absolute function
  3744 ;;		_CRC8
  3745 ;;		_CRCcheck
  3746 ;;		_Receive_available
  3747 ;;		_Receive_get
  3748 ;;		_Receive_peek
  3749 ;;		_Send_put
  3750 ;; This function is called by:
  3751 ;;		_updateComms
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text12
  3756  0000D4                     __ptext12:
  3757                           	opt stack 0
  3758  0000D4                     _receiveData:
  3759                           	opt stack 21
  3760                           
  3761                           ;FastTransfer.c: 86: if (rx_len == 0) {
  3762                           
  3763                           ;incstack = 0
  3764  0000D4  503E               	movf	_rx_len,w,c
  3765  0000D6  A4D8               	btfss	status,2,c
  3766  0000D8  D0AC               	goto	l6622
  3767                           
  3768                           ;FastTransfer.c: 88: if (serial_available() > 4) {
  3769  0000DA  D801               	call	u7148
  3770  0000DC  D00A               	goto	u7149
  3771  0000DE                     u7148:
  3772  0000DE  0005               	push	
  3773  0000E0  6EFA               	movwf	pclath,c
  3774  0000E2  502F               	movf	_serial_available,w,c
  3775  0000E4  6EFD               	movwf	tosl,c
  3776  0000E6  5030               	movf	_serial_available+1,w,c
  3777  0000E8  6EFE               	movwf	tosh,c
  3778  0000EA  50F8               	movf	tblptru,w,c
  3779  0000EC  6EFF               	movwf	tosu,c
  3780  0000EE  50FA               	movf	pclath,w,c
  3781  0000F0  0012               	return		;indir
  3782  0000F2                     u7149:
  3783  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  3784  0000F4  D09E               	goto	l6622
  3785  0000F6  501E               	movf	?_Receive_available+1,w,c
  3786  0000F8  E11E               	bnz	l6598
  3787  0000FA  0E05               	movlw	5
  3788  0000FC  5C1D               	subwf	?_Receive_available,w,c
  3789  0000FE  B0D8               	btfsc	status,0,c
  3790  000100  D01A               	goto	l6598
  3791  000102  D097               	goto	l6622
  3792  000104                     l6590:
  3793                           
  3794                           ;FastTransfer.c: 95: alignErrorCounter++;
  3795  000104  0100               	movlb	0	; () banked
  3796  000106  4BC9               	infsnz	_alignErrorCounter& (0+255),f,b
  3797  000108  2BCA               	incf	(_alignErrorCounter+1)& (0+255),f,b
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;FastTransfer.c: 96: if (serial_available() < 5)
  3801  00010A  D801               	call	u7168
  3802  00010C  D00A               	goto	u7169
  3803  00010E                     u7168:
  3804  00010E  0005               	push	
  3805  000110  6EFA               	movwf	pclath,c
  3806  000112  502F               	movf	_serial_available,w,c
  3807  000114  6EFD               	movwf	tosl,c
  3808  000116  5030               	movf	_serial_available+1,w,c
  3809  000118  6EFE               	movwf	tosh,c
  3810  00011A  50F8               	movf	tblptru,w,c
  3811  00011C  6EFF               	movwf	tosu,c
  3812  00011E  50FA               	movf	pclath,w,c
  3813  000120  0012               	return		;indir
  3814  000122                     u7169:
  3815  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  3816  000124  D006               	goto	l6594
  3817  000126  501E               	movf	?_Receive_available+1,w,c
  3818  000128  E106               	bnz	l6598
  3819  00012A  0E05               	movlw	5
  3820  00012C  5C1D               	subwf	?_Receive_available,w,c
  3821  00012E  B0D8               	btfsc	status,0,c
  3822  000130  D002               	goto	l6598
  3823  000132                     l6594:
  3824                           
  3825                           ;FastTransfer.c: 97: return 0;
  3826  000132  0E00               	movlw	0
  3827  000134  0012               	return	
  3828  000136                     l6598:
  3829  000136  D801               	call	u7188
  3830  000138  D00A               	goto	u7189
  3831  00013A                     u7188:
  3832  00013A  0005               	push	
  3833  00013C  6EFA               	movwf	pclath,c
  3834  00013E  5031               	movf	_serial_read,w,c
  3835  000140  6EFD               	movwf	tosl,c
  3836  000142  5032               	movf	_serial_read+1,w,c
  3837  000144  6EFE               	movwf	tosh,c
  3838  000146  50F8               	movf	tblptru,w,c
  3839  000148  6EFF               	movwf	tosu,c
  3840  00014A  50FA               	movf	pclath,w,c
  3841  00014C  0012               	return		;indir
  3842  00014E                     u7189:
  3843  00014E  0A06               	xorlw	6
  3844  000150  A4D8               	btfss	status,2,c
  3845  000152  D7D8               	goto	l6590
  3846                           
  3847                           ;FastTransfer.c: 98: }
  3848                           ;FastTransfer.c: 99: if (serial_read() == 0x85) {
  3849  000154  D801               	call	u7208
  3850  000156  D00A               	goto	u7209
  3851  000158                     u7208:
  3852  000158  0005               	push	
  3853  00015A  6EFA               	movwf	pclath,c
  3854  00015C  5031               	movf	_serial_read,w,c
  3855  00015E  6EFD               	movwf	tosl,c
  3856  000160  5032               	movf	_serial_read+1,w,c
  3857  000162  6EFE               	movwf	tosh,c
  3858  000164  50F8               	movf	tblptru,w,c
  3859  000166  6EFF               	movwf	tosu,c
  3860  000168  50FA               	movf	pclath,w,c
  3861  00016A  0012               	return		;indir
  3862  00016C                     u7209:
  3863  00016C  0A85               	xorlw	133
  3864  00016E  A4D8               	btfss	status,2,c
  3865  000170  D060               	goto	l6622
  3866                           
  3867                           ;FastTransfer.c: 101: rx_address = serial_read();
  3868  000172  D801               	call	u7228
  3869  000174  D00A               	goto	u7229
  3870  000176                     u7228:
  3871  000176  0005               	push	
  3872  000178  6EFA               	movwf	pclath,c
  3873  00017A  5031               	movf	_serial_read,w,c
  3874  00017C  6EFD               	movwf	tosl,c
  3875  00017E  5032               	movf	_serial_read+1,w,c
  3876  000180  6EFE               	movwf	tosh,c
  3877  000182  50F8               	movf	tblptru,w,c
  3878  000184  6EFF               	movwf	tosu,c
  3879  000186  50FA               	movf	pclath,w,c
  3880  000188  0012               	return		;indir
  3881  00018A                     u7229:
  3882  00018A  6E3C               	movwf	_rx_address,c
  3883                           
  3884                           ;FastTransfer.c: 102: returnAddress = serial_read();
  3885  00018C  D801               	call	u7238
  3886  00018E  D00A               	goto	u7239
  3887  000190                     u7238:
  3888  000190  0005               	push	
  3889  000192  6EFA               	movwf	pclath,c
  3890  000194  5031               	movf	_serial_read,w,c
  3891  000196  6EFD               	movwf	tosl,c
  3892  000198  5032               	movf	_serial_read+1,w,c
  3893  00019A  6EFE               	movwf	tosh,c
  3894  00019C  50F8               	movf	tblptru,w,c
  3895  00019E  6EFF               	movwf	tosu,c
  3896  0001A0  50FA               	movf	pclath,w,c
  3897  0001A2  0012               	return		;indir
  3898  0001A4                     u7239:
  3899  0001A4  6E3B               	movwf	_returnAddress,c
  3900                           
  3901                           ;FastTransfer.c: 103: rx_len = serial_read();
  3902  0001A6  D801               	call	u7248
  3903  0001A8  D00A               	goto	u7249
  3904  0001AA                     u7248:
  3905  0001AA  0005               	push	
  3906  0001AC  6EFA               	movwf	pclath,c
  3907  0001AE  5031               	movf	_serial_read,w,c
  3908  0001B0  6EFD               	movwf	tosl,c
  3909  0001B2  5032               	movf	_serial_read+1,w,c
  3910  0001B4  6EFE               	movwf	tosh,c
  3911  0001B6  50F8               	movf	tblptru,w,c
  3912  0001B8  6EFF               	movwf	tosu,c
  3913  0001BA  50FA               	movf	pclath,w,c
  3914  0001BC  0012               	return		;indir
  3915  0001BE                     u7249:
  3916  0001BE  6E3E               	movwf	_rx_len,c
  3917                           
  3918                           ;FastTransfer.c: 106: if (rx_address != moduleAddress) {
  3919  0001C0  503A               	movf	_moduleAddress,w,c
  3920  0001C2  183C               	xorwf	_rx_address,w,c
  3921  0001C4  B4D8               	btfsc	status,2,c
  3922  0001C6  D035               	goto	l6622
  3923                           
  3924                           ;FastTransfer.c: 107: addressErrorCounter++;
  3925  0001C8  0100               	movlb	0	; () banked
  3926  0001CA  4BC7               	infsnz	_addressErrorCounter& (0+255),f,b
  3927  0001CC  2BC8               	incf	(_addressErrorCounter+1)& (0+255),f,b
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;FastTransfer.c: 110: int u;
  3931                           ;FastTransfer.c: 111: for (u = 0; u <= (rx_len + 1); u++) {
  3932  0001CE  0E00               	movlw	0
  3933  0001D0  0101               	movlb	1	; () banked
  3934  0001D2  6F48               	movwf	(receiveData@u+1)& (0+255),b
  3935  0001D4  0E00               	movlw	0
  3936  0001D6  6F47               	movwf	receiveData@u& (0+255),b
  3937  0001D8  D00F               	goto	l6614
  3938  0001DA                     l6610:
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;FastTransfer.c: 112: serial_read();
  3942  0001DA  D801               	call	u7268
  3943  0001DC  D00A               	goto	l6612
  3944  0001DE                     u7268:
  3945  0001DE  0005               	push	
  3946  0001E0  6EFA               	movwf	pclath,c
  3947  0001E2  5031               	movf	_serial_read,w,c
  3948  0001E4  6EFD               	movwf	tosl,c
  3949  0001E6  5032               	movf	_serial_read+1,w,c
  3950  0001E8  6EFE               	movwf	tosh,c
  3951  0001EA  50F8               	movf	tblptru,w,c
  3952  0001EC  6EFF               	movwf	tosu,c
  3953  0001EE  50FA               	movf	pclath,w,c
  3954  0001F0  0012               	return		;indir
  3955  0001F2                     l6612:
  3956  0001F2  0101               	movlb	1	; () banked
  3957  0001F4  4B47               	infsnz	receiveData@u& (0+255),f,b
  3958  0001F6  2B48               	incf	(receiveData@u+1)& (0+255),f,b
  3959  0001F8                     l6614:
  3960                           
  3961                           ; BSR set to: 1
  3962  0001F8  503E               	movf	_rx_len,w,c
  3963  0001FA  0101               	movlb	1	; () banked
  3964  0001FC  6F39               	movwf	??_receiveData& (0+255),b
  3965  0001FE  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3966  000200  0E01               	movlw	1
  3967  000202  0101               	movlb	1	; () banked
  3968  000204  2739               	addwf	??_receiveData& (0+255),f,b
  3969  000206  0E00               	movlw	0
  3970  000208  233A               	addwfc	(??_receiveData+1)& (0+255),f,b
  3971  00020A  0101               	movlb	1	; () banked
  3972  00020C  5147               	movf	receiveData@u& (0+255),w,b
  3973  00020E  0101               	movlb	1	; () banked
  3974  000210  5D39               	subwf	??_receiveData& (0+255),w,b
  3975  000212  0101               	movlb	1	; () banked
  3976  000214  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3977  000216  0A80               	xorlw	128
  3978  000218  0101               	movlb	1	; () banked
  3979  00021A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3980  00021C  0101               	movlb	1	; () banked
  3981  00021E  5148               	movf	(receiveData@u+1)& (0+255),w,b
  3982  000220  0A80               	xorlw	128
  3983  000222  0101               	movlb	1	; () banked
  3984  000224  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  3985  000226  B0D8               	btfsc	status,0,c
  3986  000228  D7D8               	goto	l6610
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;FastTransfer.c: 113: }
  3990                           ;FastTransfer.c: 114: rx_len = 0;
  3991                           
  3992                           ; BSR set to: 1
  3993  00022A  0E00               	movlw	0
  3994  00022C  6E3E               	movwf	_rx_len,c
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;FastTransfer.c: 115: return 0;
  3998  00022E  0E00               	movlw	0
  3999                           
  4000                           ; BSR set to: 1
  4001  000230  0012               	return	
  4002  000232                     l6622:
  4003                           
  4004                           ;FastTransfer.c: 116: }
  4005                           ;FastTransfer.c: 118: }
  4006                           ;FastTransfer.c: 119: }
  4007                           ;FastTransfer.c: 120: }
  4008                           ;FastTransfer.c: 123: if (rx_len != 0) {
  4009  000232  503E               	movf	_rx_len,w,c
  4010  000234  B4D8               	btfsc	status,2,c
  4011  000236  D2A6               	goto	l6746
  4012                           
  4013                           ;FastTransfer.c: 127: if (rx_array_inx == 0) {
  4014  000238  503D               	movf	_rx_array_inx,w,c
  4015  00023A  A4D8               	btfss	status,2,c
  4016  00023C  D044               	goto	l6646
  4017  00023E                     l6628:
  4018  00023E  D801               	call	u7308
  4019  000240  D00A               	goto	u7309
  4020  000242                     u7308:
  4021  000242  0005               	push	
  4022  000244  6EFA               	movwf	pclath,c
  4023  000246  502F               	movf	_serial_available,w,c
  4024  000248  6EFD               	movwf	tosl,c
  4025  00024A  5030               	movf	_serial_available+1,w,c
  4026  00024C  6EFE               	movwf	tosh,c
  4027  00024E  50F8               	movf	tblptru,w,c
  4028  000250  6EFF               	movwf	tosu,c
  4029  000252  50FA               	movf	pclath,w,c
  4030  000254  0012               	return		;indir
  4031  000256                     u7309:
  4032  000256  BE1E               	btfsc	?_Receive_available+1,7,c
  4033  000258  D7F2               	goto	l6628
  4034  00025A  501E               	movf	?_Receive_available+1,w,c
  4035  00025C  E103               	bnz	l6630
  4036  00025E  041D               	decf	?_Receive_available,w,c
  4037  000260  A0D8               	btfss	status,0,c
  4038  000262  D7ED               	goto	l6628
  4039  000264                     l6630:
  4040                           
  4041                           ;FastTransfer.c: 129: if (255 == serial_peek()) {
  4042  000264  D801               	call	u7328
  4043  000266  D00B               	goto	u7329
  4044  000268                     u7328:
  4045  000268  0005               	push	
  4046  00026A  0100               	movlb	0	; () banked
  4047  00026C  6EFA               	movwf	pclath,c
  4048  00026E  51DB               	movf	_serial_peek& (0+255),w,b
  4049  000270  6EFD               	movwf	tosl,c
  4050  000272  51DC               	movf	(_serial_peek+1)& (0+255),w,b
  4051  000274  6EFE               	movwf	tosh,c
  4052  000276  50F8               	movf	tblptru,w,c
  4053  000278  6EFF               	movwf	tosu,c
  4054  00027A  50FA               	movf	pclath,w,c
  4055  00027C  0012               	return		;indir
  4056  00027E                     u7329:
  4057  00027E  0AFF               	xorlw	255
  4058  000280  A4D8               	btfss	status,2,c
  4059  000282  D021               	goto	l6646
  4060                           
  4061                           ;FastTransfer.c: 130: CRCcheck();
  4062  000284  EC23  F00A         	call	_CRCcheck	;wreg free
  4063                           
  4064                           ;FastTransfer.c: 131: rx_len = 0;
  4065  000288  0E00               	movlw	0
  4066  00028A  6E3E               	movwf	_rx_len,c
  4067                           
  4068                           ;FastTransfer.c: 132: rx_array_inx = 0;
  4069  00028C  0E00               	movlw	0
  4070  00028E  6E3D               	movwf	_rx_array_inx,c
  4071                           
  4072                           ;FastTransfer.c: 133: return 0;
  4073  000290  0E00               	movlw	0
  4074  000292  0012               	return	
  4075  000294                     l6642:
  4076                           
  4077                           ;FastTransfer.c: 139: rx_buffer[rx_array_inx++] = serial_read();
  4078  000294  D801               	call	u7348
  4079  000296  D00A               	goto	u7349
  4080  000298                     u7348:
  4081  000298  0005               	push	
  4082  00029A  6EFA               	movwf	pclath,c
  4083  00029C  5031               	movf	_serial_read,w,c
  4084  00029E  6EFD               	movwf	tosl,c
  4085  0002A0  5032               	movf	_serial_read+1,w,c
  4086  0002A2  6EFE               	movwf	tosh,c
  4087  0002A4  50F8               	movf	tblptru,w,c
  4088  0002A6  6EFF               	movwf	tosu,c
  4089  0002A8  50FA               	movf	pclath,w,c
  4090  0002AA  0012               	return		;indir
  4091  0002AC                     u7349:
  4092  0002AC  0101               	movlb	1	; () banked
  4093  0002AE  6F39               	movwf	??_receiveData& (0+255),b
  4094  0002B0  503D               	movf	_rx_array_inx,w,c
  4095  0002B2  0D01               	mullw	1
  4096  0002B4  0E00               	movlw	low _rx_buffer
  4097  0002B6  24F3               	addwf	prodl,w,c
  4098  0002B8  6ED9               	movwf	fsr2l,c
  4099  0002BA  0E03               	movlw	high _rx_buffer
  4100  0002BC  20F4               	addwfc	prodh,w,c
  4101  0002BE  6EDA               	movwf	fsr2h,c
  4102  0002C0  C139  FFDF         	movff	??_receiveData,indf2
  4103                           
  4104                           ; BSR set to: 1
  4105  0002C4  2A3D               	incf	_rx_array_inx,f,c
  4106  0002C6                     l6646:
  4107  0002C6  D801               	call	u7358
  4108  0002C8  D00A               	goto	u7359
  4109  0002CA                     u7358:
  4110  0002CA  0005               	push	
  4111  0002CC  6EFA               	movwf	pclath,c
  4112  0002CE  502F               	movf	_serial_available,w,c
  4113  0002D0  6EFD               	movwf	tosl,c
  4114  0002D2  5030               	movf	_serial_available+1,w,c
  4115  0002D4  6EFE               	movwf	tosh,c
  4116  0002D6  50F8               	movf	tblptru,w,c
  4117  0002D8  6EFF               	movwf	tosu,c
  4118  0002DA  50FA               	movf	pclath,w,c
  4119  0002DC  0012               	return		;indir
  4120  0002DE                     u7359:
  4121  0002DE  501D               	movf	?_Receive_available,w,c
  4122  0002E0  101E               	iorwf	?_Receive_available+1,w,c
  4123  0002E2  B4D8               	btfsc	status,2,c
  4124  0002E4  D004               	goto	l6650
  4125  0002E6  503D               	movf	_rx_array_inx,w,c
  4126  0002E8  5C3E               	subwf	_rx_len,w,c
  4127  0002EA  B0D8               	btfsc	status,0,c
  4128  0002EC  D7D3               	goto	l6642
  4129  0002EE                     l6650:
  4130                           
  4131                           ;FastTransfer.c: 140: }
  4132                           ;FastTransfer.c: 142: if (rx_len == (rx_array_inx - 1)) {
  4133  0002EE  503E               	movf	_rx_len,w,c
  4134  0002F0  0101               	movlb	1	; () banked
  4135  0002F2  6F39               	movwf	??_receiveData& (0+255),b
  4136  0002F4  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4137  0002F6  0EFF               	movlw	255
  4138  0002F8  0101               	movlb	1	; () banked
  4139  0002FA  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4140  0002FC  0EFF               	movlw	255
  4141  0002FE  0101               	movlb	1	; () banked
  4142  000300  6F3C               	movwf	(??_receiveData+3)& (0+255),b
  4143  000302  503D               	movf	_rx_array_inx,w,c
  4144  000304  0101               	movlb	1	; () banked
  4145  000306  6F3D               	movwf	(??_receiveData+4)& (0+255),b
  4146  000308  6B3E               	clrf	(??_receiveData+5)& (0+255),b
  4147  00030A  0101               	movlb	1	; () banked
  4148  00030C  513B               	movf	(??_receiveData+2)& (0+255),w,b
  4149  00030E  0101               	movlb	1	; () banked
  4150  000310  273D               	addwf	(??_receiveData+4)& (0+255),f,b
  4151  000312  0101               	movlb	1	; () banked
  4152  000314  513C               	movf	(??_receiveData+3)& (0+255),w,b
  4153  000316  0101               	movlb	1	; () banked
  4154  000318  233E               	addwfc	(??_receiveData+5)& (0+255),f,b
  4155  00031A  0101               	movlb	1	; () banked
  4156  00031C  5139               	movf	??_receiveData& (0+255),w,b
  4157  00031E  0101               	movlb	1	; () banked
  4158  000320  193D               	xorwf	(??_receiveData+4)& (0+255),w,b
  4159  000322  E105               	bnz	u7381
  4160  000324  0101               	movlb	1	; () banked
  4161  000326  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4162  000328  0101               	movlb	1	; () banked
  4163  00032A  193E               	xorwf	(??_receiveData+5)& (0+255),w,b
  4164  00032C  A4D8               	btfss	status,2,c
  4165  00032E                     u7381:
  4166  00032E  D22A               	goto	l6746
  4167                           
  4168                           ; BSR set to: 1
  4169                           ;FastTransfer.c: 145: calc_CS = CRC8(rx_buffer, rx_len);
  4170  000330  0E00               	movlw	low _rx_buffer
  4171  000332  6E1B               	movwf	CRC8@data,c
  4172  000334  0E03               	movlw	high _rx_buffer
  4173  000336  6E1C               	movwf	CRC8@data+1,c
  4174  000338  C03E  F01D         	movff	_rx_len,CRC8@len
  4175  00033C  EC4C  F016         	call	_CRC8	;wreg free
  4176  000340  6E37               	movwf	_calc_CS,c
  4177                           
  4178                           ;FastTransfer.c: 149: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  4179  000342  0EFF               	movlw	255
  4180  000344  0101               	movlb	1	; () banked
  4181  000346  6F39               	movwf	??_receiveData& (0+255),b
  4182  000348  0EFF               	movlw	255
  4183  00034A  0101               	movlb	1	; () banked
  4184  00034C  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4185  00034E  503D               	movf	_rx_array_inx,w,c
  4186  000350  0101               	movlb	1	; () banked
  4187  000352  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4188  000354  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4189  000356  0101               	movlb	1	; () banked
  4190  000358  5139               	movf	??_receiveData& (0+255),w,b
  4191  00035A  0101               	movlb	1	; () banked
  4192  00035C  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4193  00035E  0101               	movlb	1	; () banked
  4194  000360  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4195  000362  0101               	movlb	1	; () banked
  4196  000364  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4197  000366  0E00               	movlw	low _rx_buffer
  4198  000368  0101               	movlb	1	; () banked
  4199  00036A  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4200  00036C  6ED9               	movwf	fsr2l,c
  4201  00036E  0E03               	movlw	high _rx_buffer
  4202  000370  0101               	movlb	1	; () banked
  4203  000372  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4204  000374  6EDA               	movwf	fsr2h,c
  4205  000376  5037               	movf	_calc_CS,w,c
  4206  000378  18DE               	xorwf	postinc2,w,c
  4207  00037A  A4D8               	btfss	status,2,c
  4208  00037C  D13B               	goto	l6708
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;FastTransfer.c: 152: int r;
  4212                           ;FastTransfer.c: 153: for (r = 0; r < rx_len; r = r + 3) {
  4213  00037E  0E00               	movlw	0
  4214  000380  0101               	movlb	1	; () banked
  4215  000382  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4216  000384  0E00               	movlw	0
  4217  000386  6F49               	movwf	receiveData@r& (0+255),b
  4218  000388  D05C               	goto	l6668
  4219  00038A                     l6658:
  4220                           
  4221                           ; BSR set to: 1
  4222                           ;FastTransfer.c: 154: if (rx_buffer[r] < maxDataAddress) {
  4223  00038A  0E00               	movlw	low _rx_buffer
  4224  00038C  0101               	movlb	1	; () banked
  4225  00038E  2549               	addwf	receiveData@r& (0+255),w,b
  4226  000390  6ED9               	movwf	fsr2l,c
  4227  000392  0E03               	movlw	high _rx_buffer
  4228  000394  0101               	movlb	1	; () banked
  4229  000396  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4230  000398  6EDA               	movwf	fsr2h,c
  4231  00039A  5039               	movf	_maxDataAddress,w,c
  4232  00039C  5CDE               	subwf	postinc2,w,c
  4233  00039E  B0D8               	btfsc	status,0,c
  4234  0003A0  D043               	goto	l6664
  4235                           
  4236                           ; BSR set to: 1
  4237                           ;FastTransfer.c: 155: group.parts[0] = rx_buffer[r + 1];
  4238  0003A2  0E01               	movlw	1
  4239  0003A4  0101               	movlb	1	; () banked
  4240  0003A6  2549               	addwf	receiveData@r& (0+255),w,b
  4241  0003A8  0101               	movlb	1	; () banked
  4242  0003AA  6F39               	movwf	??_receiveData& (0+255),b
  4243  0003AC  0E00               	movlw	0
  4244  0003AE  0101               	movlb	1	; () banked
  4245  0003B0  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4246  0003B2  0101               	movlb	1	; () banked
  4247  0003B4  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4248  0003B6  0E00               	movlw	low _rx_buffer
  4249  0003B8  0101               	movlb	1	; () banked
  4250  0003BA  2539               	addwf	??_receiveData& (0+255),w,b
  4251  0003BC  6ED9               	movwf	fsr2l,c
  4252  0003BE  0E03               	movlw	high _rx_buffer
  4253  0003C0  0101               	movlb	1	; () banked
  4254  0003C2  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4255  0003C4  6EDA               	movwf	fsr2h,c
  4256  0003C6  50DF               	movf	indf2,w,c
  4257  0003C8  6E2B               	movwf	_group,c
  4258                           
  4259                           ;FastTransfer.c: 156: group.parts[1] = rx_buffer[r + 2];
  4260  0003CA  0E02               	movlw	2
  4261  0003CC  0101               	movlb	1	; () banked
  4262  0003CE  2549               	addwf	receiveData@r& (0+255),w,b
  4263  0003D0  0101               	movlb	1	; () banked
  4264  0003D2  6F39               	movwf	??_receiveData& (0+255),b
  4265  0003D4  0E00               	movlw	0
  4266  0003D6  0101               	movlb	1	; () banked
  4267  0003D8  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4268  0003DA  0101               	movlb	1	; () banked
  4269  0003DC  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4270  0003DE  0E00               	movlw	low _rx_buffer
  4271  0003E0  0101               	movlb	1	; () banked
  4272  0003E2  2539               	addwf	??_receiveData& (0+255),w,b
  4273  0003E4  6ED9               	movwf	fsr2l,c
  4274  0003E6  0E03               	movlw	high _rx_buffer
  4275  0003E8  0101               	movlb	1	; () banked
  4276  0003EA  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4277  0003EC  6EDA               	movwf	fsr2h,c
  4278  0003EE  50DF               	movf	indf2,w,c
  4279  0003F0  6E2C               	movwf	_group+1,c
  4280                           
  4281                           ; BSR set to: 1
  4282                           ;FastTransfer.c: 157: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4283  0003F2  0E00               	movlw	low _rx_buffer
  4284  0003F4  0101               	movlb	1	; () banked
  4285  0003F6  2549               	addwf	receiveData@r& (0+255),w,b
  4286  0003F8  6ED9               	movwf	fsr2l,c
  4287  0003FA  0E03               	movlw	high _rx_buffer
  4288  0003FC  0101               	movlb	1	; () banked
  4289  0003FE  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4290  000400  6EDA               	movwf	fsr2h,c
  4291  000402  50DF               	movf	indf2,w,c
  4292  000404  0101               	movlb	1	; () banked
  4293  000406  6F39               	movwf	??_receiveData& (0+255),b
  4294  000408  0101               	movlb	1	; () banked
  4295  00040A  5139               	movf	??_receiveData& (0+255),w,b
  4296  00040C  0D02               	mullw	2
  4297  00040E  50F3               	movf	prodl,w,c
  4298  000410  0100               	movlb	0	; () banked
  4299  000412  25D7               	addwf	_receiveArrayAddress& (0+255),w,b
  4300  000414  6ED9               	movwf	fsr2l,c
  4301  000416  50F4               	movf	prodh,w,c
  4302  000418  0100               	movlb	0	; () banked
  4303  00041A  21D8               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4304  00041C  6EDA               	movwf	fsr2h,c
  4305  00041E  C02B  FFDE         	movff	_group,postinc2
  4306  000422  C02C  FFDD         	movff	_group+1,postdec2
  4307                           
  4308                           ;FastTransfer.c: 158: } else {
  4309  000426  D003               	goto	l6666
  4310  000428                     l6664:
  4311                           
  4312                           ;FastTransfer.c: 159: dataAdressErrorCounter++;
  4313  000428  0100               	movlb	0	; () banked
  4314  00042A  4BCD               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4315  00042C  2BCE               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4316  00042E                     l6666:
  4317                           
  4318                           ; BSR set to: 0
  4319  00042E  0E03               	movlw	3
  4320  000430  0101               	movlb	1	; () banked
  4321  000432  2549               	addwf	receiveData@r& (0+255),w,b
  4322  000434  0101               	movlb	1	; () banked
  4323  000436  6F49               	movwf	receiveData@r& (0+255),b
  4324  000438  0E00               	movlw	0
  4325  00043A  0101               	movlb	1	; () banked
  4326  00043C  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4327  00043E  0101               	movlb	1	; () banked
  4328  000440  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4329  000442                     l6668:
  4330                           
  4331                           ; BSR set to: 1
  4332  000442  503E               	movf	_rx_len,w,c
  4333  000444  0101               	movlb	1	; () banked
  4334  000446  6F39               	movwf	??_receiveData& (0+255),b
  4335  000448  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4336  00044A  0101               	movlb	1	; () banked
  4337  00044C  5139               	movf	??_receiveData& (0+255),w,b
  4338  00044E  0101               	movlb	1	; () banked
  4339  000450  5D49               	subwf	receiveData@r& (0+255),w,b
  4340  000452  0101               	movlb	1	; () banked
  4341  000454  514A               	movf	(receiveData@r+1)& (0+255),w,b
  4342  000456  0A80               	xorlw	128
  4343  000458  0101               	movlb	1	; () banked
  4344  00045A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4345  00045C  0101               	movlb	1	; () banked
  4346  00045E  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4347  000460  0A80               	xorlw	128
  4348  000462  0101               	movlb	1	; () banked
  4349  000464  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  4350  000466  A0D8               	btfss	status,0,c
  4351  000468  D790               	goto	l6658
  4352                           
  4353                           ; BSR set to: 1
  4354                           ;FastTransfer.c: 160: }
  4355                           ;FastTransfer.c: 161: }
  4356                           ;FastTransfer.c: 164: if (AKNAKsend) {
  4357                           
  4358                           ; BSR set to: 1
  4359  00046A  5036               	movf	_AKNAKsend,w,c
  4360  00046C  B4D8               	btfsc	status,2,c
  4361  00046E  D0BC               	goto	l6698
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;FastTransfer.c: 165: unsigned char holder[3];
  4365                           ;FastTransfer.c: 166: holder[0] = 255;
  4366  000470  0101               	movlb	1	; () banked
  4367  000472  693F               	setf	receiveData@holder& (0+255),b
  4368                           
  4369                           ; BSR set to: 1
  4370                           ;FastTransfer.c: 167: holder[1] = 1;
  4371  000474  0E01               	movlw	1
  4372  000476  0101               	movlb	1	; () banked
  4373  000478  6F40               	movwf	(receiveData@holder+1)& (0+255),b
  4374                           
  4375                           ; BSR set to: 1
  4376                           ;FastTransfer.c: 168: holder[2] = rx_buffer[rx_array_inx - 1];
  4377  00047A  0EFF               	movlw	255
  4378  00047C  0101               	movlb	1	; () banked
  4379  00047E  6F39               	movwf	??_receiveData& (0+255),b
  4380  000480  0EFF               	movlw	255
  4381  000482  0101               	movlb	1	; () banked
  4382  000484  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4383  000486  503D               	movf	_rx_array_inx,w,c
  4384  000488  0101               	movlb	1	; () banked
  4385  00048A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4386  00048C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4387  00048E  0101               	movlb	1	; () banked
  4388  000490  5139               	movf	??_receiveData& (0+255),w,b
  4389  000492  0101               	movlb	1	; () banked
  4390  000494  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4391  000496  0101               	movlb	1	; () banked
  4392  000498  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4393  00049A  0101               	movlb	1	; () banked
  4394  00049C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4395  00049E  0E00               	movlw	low _rx_buffer
  4396  0004A0  0101               	movlb	1	; () banked
  4397  0004A2  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4398  0004A4  6ED9               	movwf	fsr2l,c
  4399  0004A6  0E03               	movlw	high _rx_buffer
  4400  0004A8  0101               	movlb	1	; () banked
  4401  0004AA  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4402  0004AC  6EDA               	movwf	fsr2h,c
  4403  0004AE  50DF               	movf	indf2,w,c
  4404  0004B0  0101               	movlb	1	; () banked
  4405  0004B2  6F41               	movwf	(receiveData@holder+2)& (0+255),b
  4406                           
  4407                           ; BSR set to: 1
  4408                           ;FastTransfer.c: 169: unsigned char crcHolder = CRC8(holder, 3);
  4409  0004B4  0E3F               	movlw	low receiveData@holder
  4410  0004B6  6E1B               	movwf	CRC8@data,c
  4411  0004B8  0E01               	movlw	high receiveData@holder
  4412  0004BA  6E1C               	movwf	CRC8@data+1,c
  4413  0004BC  0E03               	movlw	3
  4414  0004BE  6E1D               	movwf	CRC8@len,c
  4415  0004C0  EC4C  F016         	call	_CRC8	;wreg free
  4416  0004C4  0101               	movlb	1	; () banked
  4417  0004C6  6F45               	movwf	receiveData@crcHolder& (0+255),b
  4418                           
  4419                           ; BSR set to: 1
  4420                           ;FastTransfer.c: 170: serial_write(0x06);
  4421  0004C8  D801               	call	u7438
  4422  0004CA  D00B               	goto	l6682
  4423  0004CC                     u7438:
  4424  0004CC  0005               	push	
  4425  0004CE  6EFA               	movwf	pclath,c
  4426  0004D0  5033               	movf	_serial_write,w,c
  4427  0004D2  6EFD               	movwf	tosl,c
  4428  0004D4  5034               	movf	_serial_write+1,w,c
  4429  0004D6  6EFE               	movwf	tosh,c
  4430  0004D8  50F8               	movf	tblptru,w,c
  4431  0004DA  6EFF               	movwf	tosu,c
  4432  0004DC  50FA               	movf	pclath,w,c
  4433  0004DE  0E06               	movlw	6
  4434  0004E0  0012               	return		;indir
  4435  0004E2                     l6682:
  4436                           
  4437                           ;FastTransfer.c: 171: serial_write(0x85);
  4438  0004E2  D801               	call	u7448
  4439  0004E4  D00B               	goto	l6684
  4440  0004E6                     u7448:
  4441  0004E6  0005               	push	
  4442  0004E8  6EFA               	movwf	pclath,c
  4443  0004EA  5033               	movf	_serial_write,w,c
  4444  0004EC  6EFD               	movwf	tosl,c
  4445  0004EE  5034               	movf	_serial_write+1,w,c
  4446  0004F0  6EFE               	movwf	tosh,c
  4447  0004F2  50F8               	movf	tblptru,w,c
  4448  0004F4  6EFF               	movwf	tosu,c
  4449  0004F6  50FA               	movf	pclath,w,c
  4450  0004F8  0E85               	movlw	133
  4451  0004FA  0012               	return		;indir
  4452  0004FC                     l6684:
  4453                           
  4454                           ;FastTransfer.c: 172: serial_write(returnAddress);
  4455  0004FC  D801               	call	u7458
  4456  0004FE  D00B               	goto	l6686
  4457  000500                     u7458:
  4458  000500  0005               	push	
  4459  000502  6EFA               	movwf	pclath,c
  4460  000504  5033               	movf	_serial_write,w,c
  4461  000506  6EFD               	movwf	tosl,c
  4462  000508  5034               	movf	_serial_write+1,w,c
  4463  00050A  6EFE               	movwf	tosh,c
  4464  00050C  50F8               	movf	tblptru,w,c
  4465  00050E  6EFF               	movwf	tosu,c
  4466  000510  50FA               	movf	pclath,w,c
  4467  000512  503B               	movf	_returnAddress,w,c
  4468  000514  0012               	return		;indir
  4469  000516                     l6686:
  4470                           
  4471                           ;FastTransfer.c: 173: serial_write(moduleAddress);
  4472  000516  D801               	call	u7468
  4473  000518  D00B               	goto	l6688
  4474  00051A                     u7468:
  4475  00051A  0005               	push	
  4476  00051C  6EFA               	movwf	pclath,c
  4477  00051E  5033               	movf	_serial_write,w,c
  4478  000520  6EFD               	movwf	tosl,c
  4479  000522  5034               	movf	_serial_write+1,w,c
  4480  000524  6EFE               	movwf	tosh,c
  4481  000526  50F8               	movf	tblptru,w,c
  4482  000528  6EFF               	movwf	tosu,c
  4483  00052A  50FA               	movf	pclath,w,c
  4484  00052C  503A               	movf	_moduleAddress,w,c
  4485  00052E  0012               	return		;indir
  4486  000530                     l6688:
  4487                           
  4488                           ;FastTransfer.c: 174: serial_write(3);
  4489  000530  D801               	call	u7478
  4490  000532  D00B               	goto	l6690
  4491  000534                     u7478:
  4492  000534  0005               	push	
  4493  000536  6EFA               	movwf	pclath,c
  4494  000538  5033               	movf	_serial_write,w,c
  4495  00053A  6EFD               	movwf	tosl,c
  4496  00053C  5034               	movf	_serial_write+1,w,c
  4497  00053E  6EFE               	movwf	tosh,c
  4498  000540  50F8               	movf	tblptru,w,c
  4499  000542  6EFF               	movwf	tosu,c
  4500  000544  50FA               	movf	pclath,w,c
  4501  000546  0E03               	movlw	3
  4502  000548  0012               	return		;indir
  4503  00054A                     l6690:
  4504                           
  4505                           ;FastTransfer.c: 175: serial_write(255);
  4506  00054A  D801               	call	u7488
  4507  00054C  D00B               	goto	l6692
  4508  00054E                     u7488:
  4509  00054E  0005               	push	
  4510  000550  6EFA               	movwf	pclath,c
  4511  000552  5033               	movf	_serial_write,w,c
  4512  000554  6EFD               	movwf	tosl,c
  4513  000556  5034               	movf	_serial_write+1,w,c
  4514  000558  6EFE               	movwf	tosh,c
  4515  00055A  50F8               	movf	tblptru,w,c
  4516  00055C  6EFF               	movwf	tosu,c
  4517  00055E  50FA               	movf	pclath,w,c
  4518  000560  0EFF               	movlw	255
  4519  000562  0012               	return		;indir
  4520  000564                     l6692:
  4521                           
  4522                           ;FastTransfer.c: 176: serial_write(1);
  4523  000564  D801               	call	u7498
  4524  000566  D00B               	goto	l6694
  4525  000568                     u7498:
  4526  000568  0005               	push	
  4527  00056A  6EFA               	movwf	pclath,c
  4528  00056C  5033               	movf	_serial_write,w,c
  4529  00056E  6EFD               	movwf	tosl,c
  4530  000570  5034               	movf	_serial_write+1,w,c
  4531  000572  6EFE               	movwf	tosh,c
  4532  000574  50F8               	movf	tblptru,w,c
  4533  000576  6EFF               	movwf	tosu,c
  4534  000578  50FA               	movf	pclath,w,c
  4535  00057A  0E01               	movlw	1
  4536  00057C  0012               	return		;indir
  4537  00057E                     l6694:
  4538                           
  4539                           ;FastTransfer.c: 177: serial_write(rx_buffer[rx_array_inx - 1]);
  4540  00057E  D801               	call	u7508
  4541  000580  D025               	goto	l6696
  4542  000582                     u7508:
  4543  000582  0005               	push	
  4544  000584  6EFA               	movwf	pclath,c
  4545  000586  5033               	movf	_serial_write,w,c
  4546  000588  6EFD               	movwf	tosl,c
  4547  00058A  5034               	movf	_serial_write+1,w,c
  4548  00058C  6EFE               	movwf	tosh,c
  4549  00058E  50F8               	movf	tblptru,w,c
  4550  000590  6EFF               	movwf	tosu,c
  4551  000592  50FA               	movf	pclath,w,c
  4552  000594  0EFF               	movlw	255
  4553  000596  0101               	movlb	1	; () banked
  4554  000598  6F39               	movwf	??_receiveData& (0+255),b
  4555  00059A  0EFF               	movlw	255
  4556  00059C  0101               	movlb	1	; () banked
  4557  00059E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4558  0005A0  503D               	movf	_rx_array_inx,w,c
  4559  0005A2  0101               	movlb	1	; () banked
  4560  0005A4  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4561  0005A6  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4562  0005A8  0101               	movlb	1	; () banked
  4563  0005AA  5139               	movf	??_receiveData& (0+255),w,b
  4564  0005AC  0101               	movlb	1	; () banked
  4565  0005AE  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4566  0005B0  0101               	movlb	1	; () banked
  4567  0005B2  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4568  0005B4  0101               	movlb	1	; () banked
  4569  0005B6  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4570  0005B8  0E00               	movlw	low _rx_buffer
  4571  0005BA  0101               	movlb	1	; () banked
  4572  0005BC  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4573  0005BE  6ED9               	movwf	fsr2l,c
  4574  0005C0  0E03               	movlw	high _rx_buffer
  4575  0005C2  0101               	movlb	1	; () banked
  4576  0005C4  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4577  0005C6  6EDA               	movwf	fsr2h,c
  4578  0005C8  50DF               	movf	indf2,w,c
  4579  0005CA  0012               	return		;indir
  4580  0005CC                     l6696:
  4581                           
  4582                           ;FastTransfer.c: 178: serial_write(crcHolder);
  4583  0005CC  D801               	call	u7518
  4584  0005CE  D00C               	goto	l6698
  4585  0005D0                     u7518:
  4586  0005D0  0005               	push	
  4587  0005D2  6EFA               	movwf	pclath,c
  4588  0005D4  5033               	movf	_serial_write,w,c
  4589  0005D6  6EFD               	movwf	tosl,c
  4590  0005D8  5034               	movf	_serial_write+1,w,c
  4591  0005DA  6EFE               	movwf	tosh,c
  4592  0005DC  50F8               	movf	tblptru,w,c
  4593  0005DE  6EFF               	movwf	tosu,c
  4594  0005E0  50FA               	movf	pclath,w,c
  4595  0005E2  0101               	movlb	1	; () banked
  4596  0005E4  5145               	movf	receiveData@crcHolder& (0+255),w,b
  4597  0005E6  0012               	return		;indir
  4598  0005E8                     l6698:
  4599                           
  4600                           ;FastTransfer.c: 179: }
  4601                           ;FastTransfer.c: 183: rx_len = 0;
  4602  0005E8  0E00               	movlw	0
  4603  0005EA  6E3E               	movwf	_rx_len,c
  4604                           
  4605                           ;FastTransfer.c: 184: rx_array_inx = 0;
  4606  0005EC  0E00               	movlw	0
  4607  0005EE  6E3D               	movwf	_rx_array_inx,c
  4608                           
  4609                           ;FastTransfer.c: 185: return 1;
  4610  0005F0  0E01               	movlw	1
  4611  0005F2  0012               	return	
  4612  0005F4                     l6708:
  4613                           
  4614                           ;FastTransfer.c: 187: crcErrorCounter++;
  4615  0005F4  0100               	movlb	0	; () banked
  4616  0005F6  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  4617  0005F8  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;FastTransfer.c: 189: if (AKNAKsend) {
  4621  0005FA  5036               	movf	_AKNAKsend,w,c
  4622  0005FC  B4D8               	btfsc	status,2,c
  4623  0005FE  D0BC               	goto	l6738
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;FastTransfer.c: 190: unsigned char holder[3];
  4627                           ;FastTransfer.c: 191: holder[0] = 255;
  4628  000600  0101               	movlb	1	; () banked
  4629  000602  6942               	setf	receiveData@holder_2531& (0+255),b
  4630                           
  4631                           ; BSR set to: 1
  4632                           ;FastTransfer.c: 192: holder[1] = 2;
  4633  000604  0E02               	movlw	2
  4634  000606  0101               	movlb	1	; () banked
  4635  000608  6F43               	movwf	(receiveData@holder_2531+1)& (0+255),b
  4636                           
  4637                           ; BSR set to: 1
  4638                           ;FastTransfer.c: 193: holder[2] = rx_buffer[rx_array_inx - 1];
  4639  00060A  0EFF               	movlw	255
  4640  00060C  0101               	movlb	1	; () banked
  4641  00060E  6F39               	movwf	??_receiveData& (0+255),b
  4642  000610  0EFF               	movlw	255
  4643  000612  0101               	movlb	1	; () banked
  4644  000614  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4645  000616  503D               	movf	_rx_array_inx,w,c
  4646  000618  0101               	movlb	1	; () banked
  4647  00061A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4648  00061C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4649  00061E  0101               	movlb	1	; () banked
  4650  000620  5139               	movf	??_receiveData& (0+255),w,b
  4651  000622  0101               	movlb	1	; () banked
  4652  000624  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4653  000626  0101               	movlb	1	; () banked
  4654  000628  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4655  00062A  0101               	movlb	1	; () banked
  4656  00062C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4657  00062E  0E00               	movlw	low _rx_buffer
  4658  000630  0101               	movlb	1	; () banked
  4659  000632  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4660  000634  6ED9               	movwf	fsr2l,c
  4661  000636  0E03               	movlw	high _rx_buffer
  4662  000638  0101               	movlb	1	; () banked
  4663  00063A  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4664  00063C  6EDA               	movwf	fsr2h,c
  4665  00063E  50DF               	movf	indf2,w,c
  4666  000640  0101               	movlb	1	; () banked
  4667  000642  6F44               	movwf	(receiveData@holder_2531+2)& (0+255),b
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;FastTransfer.c: 194: unsigned char crcHolder = CRC8(holder, 3);
  4671  000644  0E42               	movlw	low receiveData@holder_2531
  4672  000646  6E1B               	movwf	CRC8@data,c
  4673  000648  0E01               	movlw	high receiveData@holder_2531
  4674  00064A  6E1C               	movwf	CRC8@data+1,c
  4675  00064C  0E03               	movlw	3
  4676  00064E  6E1D               	movwf	CRC8@len,c
  4677  000650  EC4C  F016         	call	_CRC8
  4678  000654  0101               	movlb	1	; () banked
  4679  000656  6F46               	movwf	receiveData@crcHolder_2532& (0+255),b
  4680                           
  4681                           ; BSR set to: 1
  4682                           ;FastTransfer.c: 195: serial_write(0x06);
  4683  000658  D801               	call	u7538
  4684  00065A  D00B               	goto	l6722
  4685  00065C                     u7538:
  4686  00065C  0005               	push	
  4687  00065E  6EFA               	movwf	pclath,c
  4688  000660  5033               	movf	_serial_write,w,c
  4689  000662  6EFD               	movwf	tosl,c
  4690  000664  5034               	movf	_serial_write+1,w,c
  4691  000666  6EFE               	movwf	tosh,c
  4692  000668  50F8               	movf	tblptru,w,c
  4693  00066A  6EFF               	movwf	tosu,c
  4694  00066C  50FA               	movf	pclath,w,c
  4695  00066E  0E06               	movlw	6
  4696  000670  0012               	return		;indir
  4697  000672                     l6722:
  4698                           
  4699                           ;FastTransfer.c: 196: serial_write(0x85);
  4700  000672  D801               	call	u7548
  4701  000674  D00B               	goto	l6724
  4702  000676                     u7548:
  4703  000676  0005               	push	
  4704  000678  6EFA               	movwf	pclath,c
  4705  00067A  5033               	movf	_serial_write,w,c
  4706  00067C  6EFD               	movwf	tosl,c
  4707  00067E  5034               	movf	_serial_write+1,w,c
  4708  000680  6EFE               	movwf	tosh,c
  4709  000682  50F8               	movf	tblptru,w,c
  4710  000684  6EFF               	movwf	tosu,c
  4711  000686  50FA               	movf	pclath,w,c
  4712  000688  0E85               	movlw	133
  4713  00068A  0012               	return		;indir
  4714  00068C                     l6724:
  4715                           
  4716                           ;FastTransfer.c: 197: serial_write(returnAddress);
  4717  00068C  D801               	call	u7558
  4718  00068E  D00B               	goto	l6726
  4719  000690                     u7558:
  4720  000690  0005               	push	
  4721  000692  6EFA               	movwf	pclath,c
  4722  000694  5033               	movf	_serial_write,w,c
  4723  000696  6EFD               	movwf	tosl,c
  4724  000698  5034               	movf	_serial_write+1,w,c
  4725  00069A  6EFE               	movwf	tosh,c
  4726  00069C  50F8               	movf	tblptru,w,c
  4727  00069E  6EFF               	movwf	tosu,c
  4728  0006A0  50FA               	movf	pclath,w,c
  4729  0006A2  503B               	movf	_returnAddress,w,c
  4730  0006A4  0012               	return		;indir
  4731  0006A6                     l6726:
  4732                           
  4733                           ;FastTransfer.c: 198: serial_write(moduleAddress);
  4734  0006A6  D801               	call	u7568
  4735  0006A8  D00B               	goto	l6728
  4736  0006AA                     u7568:
  4737  0006AA  0005               	push	
  4738  0006AC  6EFA               	movwf	pclath,c
  4739  0006AE  5033               	movf	_serial_write,w,c
  4740  0006B0  6EFD               	movwf	tosl,c
  4741  0006B2  5034               	movf	_serial_write+1,w,c
  4742  0006B4  6EFE               	movwf	tosh,c
  4743  0006B6  50F8               	movf	tblptru,w,c
  4744  0006B8  6EFF               	movwf	tosu,c
  4745  0006BA  50FA               	movf	pclath,w,c
  4746  0006BC  503A               	movf	_moduleAddress,w,c
  4747  0006BE  0012               	return		;indir
  4748  0006C0                     l6728:
  4749                           
  4750                           ;FastTransfer.c: 199: serial_write(3);
  4751  0006C0  D801               	call	u7578
  4752  0006C2  D00B               	goto	l6730
  4753  0006C4                     u7578:
  4754  0006C4  0005               	push	
  4755  0006C6  6EFA               	movwf	pclath,c
  4756  0006C8  5033               	movf	_serial_write,w,c
  4757  0006CA  6EFD               	movwf	tosl,c
  4758  0006CC  5034               	movf	_serial_write+1,w,c
  4759  0006CE  6EFE               	movwf	tosh,c
  4760  0006D0  50F8               	movf	tblptru,w,c
  4761  0006D2  6EFF               	movwf	tosu,c
  4762  0006D4  50FA               	movf	pclath,w,c
  4763  0006D6  0E03               	movlw	3
  4764  0006D8  0012               	return		;indir
  4765  0006DA                     l6730:
  4766                           
  4767                           ;FastTransfer.c: 200: serial_write(255);
  4768  0006DA  D801               	call	u7588
  4769  0006DC  D00B               	goto	l6732
  4770  0006DE                     u7588:
  4771  0006DE  0005               	push	
  4772  0006E0  6EFA               	movwf	pclath,c
  4773  0006E2  5033               	movf	_serial_write,w,c
  4774  0006E4  6EFD               	movwf	tosl,c
  4775  0006E6  5034               	movf	_serial_write+1,w,c
  4776  0006E8  6EFE               	movwf	tosh,c
  4777  0006EA  50F8               	movf	tblptru,w,c
  4778  0006EC  6EFF               	movwf	tosu,c
  4779  0006EE  50FA               	movf	pclath,w,c
  4780  0006F0  0EFF               	movlw	255
  4781  0006F2  0012               	return		;indir
  4782  0006F4                     l6732:
  4783                           
  4784                           ;FastTransfer.c: 201: serial_write(2);
  4785  0006F4  D801               	call	u7598
  4786  0006F6  D00B               	goto	l6734
  4787  0006F8                     u7598:
  4788  0006F8  0005               	push	
  4789  0006FA  6EFA               	movwf	pclath,c
  4790  0006FC  5033               	movf	_serial_write,w,c
  4791  0006FE  6EFD               	movwf	tosl,c
  4792  000700  5034               	movf	_serial_write+1,w,c
  4793  000702  6EFE               	movwf	tosh,c
  4794  000704  50F8               	movf	tblptru,w,c
  4795  000706  6EFF               	movwf	tosu,c
  4796  000708  50FA               	movf	pclath,w,c
  4797  00070A  0E02               	movlw	2
  4798  00070C  0012               	return		;indir
  4799  00070E                     l6734:
  4800                           
  4801                           ;FastTransfer.c: 202: serial_write(rx_buffer[rx_array_inx - 1]);
  4802  00070E  D801               	call	u7608
  4803  000710  D025               	goto	l6736
  4804  000712                     u7608:
  4805  000712  0005               	push	
  4806  000714  6EFA               	movwf	pclath,c
  4807  000716  5033               	movf	_serial_write,w,c
  4808  000718  6EFD               	movwf	tosl,c
  4809  00071A  5034               	movf	_serial_write+1,w,c
  4810  00071C  6EFE               	movwf	tosh,c
  4811  00071E  50F8               	movf	tblptru,w,c
  4812  000720  6EFF               	movwf	tosu,c
  4813  000722  50FA               	movf	pclath,w,c
  4814  000724  0EFF               	movlw	255
  4815  000726  0101               	movlb	1	; () banked
  4816  000728  6F39               	movwf	??_receiveData& (0+255),b
  4817  00072A  0EFF               	movlw	255
  4818  00072C  0101               	movlb	1	; () banked
  4819  00072E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4820  000730  503D               	movf	_rx_array_inx,w,c
  4821  000732  0101               	movlb	1	; () banked
  4822  000734  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4823  000736  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4824  000738  0101               	movlb	1	; () banked
  4825  00073A  5139               	movf	??_receiveData& (0+255),w,b
  4826  00073C  0101               	movlb	1	; () banked
  4827  00073E  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4828  000740  0101               	movlb	1	; () banked
  4829  000742  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4830  000744  0101               	movlb	1	; () banked
  4831  000746  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4832  000748  0E00               	movlw	low _rx_buffer
  4833  00074A  0101               	movlb	1	; () banked
  4834  00074C  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4835  00074E  6ED9               	movwf	fsr2l,c
  4836  000750  0E03               	movlw	high _rx_buffer
  4837  000752  0101               	movlb	1	; () banked
  4838  000754  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4839  000756  6EDA               	movwf	fsr2h,c
  4840  000758  50DF               	movf	indf2,w,c
  4841  00075A  0012               	return		;indir
  4842  00075C                     l6736:
  4843                           
  4844                           ;FastTransfer.c: 203: serial_write(crcHolder);
  4845  00075C  D801               	call	u7618
  4846  00075E  D00C               	goto	l6738
  4847  000760                     u7618:
  4848  000760  0005               	push	
  4849  000762  6EFA               	movwf	pclath,c
  4850  000764  5033               	movf	_serial_write,w,c
  4851  000766  6EFD               	movwf	tosl,c
  4852  000768  5034               	movf	_serial_write+1,w,c
  4853  00076A  6EFE               	movwf	tosh,c
  4854  00076C  50F8               	movf	tblptru,w,c
  4855  00076E  6EFF               	movwf	tosu,c
  4856  000770  50FA               	movf	pclath,w,c
  4857  000772  0101               	movlb	1	; () banked
  4858  000774  5146               	movf	receiveData@crcHolder_2532& (0+255),w,b
  4859  000776  0012               	return		;indir
  4860  000778                     l6738:
  4861                           
  4862                           ;FastTransfer.c: 204: }
  4863                           ;FastTransfer.c: 207: rx_len = 0;
  4864  000778  0E00               	movlw	0
  4865  00077A  6E3E               	movwf	_rx_len,c
  4866                           
  4867                           ;FastTransfer.c: 208: rx_array_inx = 0;
  4868  00077C  0E00               	movlw	0
  4869  00077E  6E3D               	movwf	_rx_array_inx,c
  4870                           
  4871                           ;FastTransfer.c: 209: return 0;
  4872  000780  0E00               	movlw	0
  4873  000782  0012               	return	
  4874  000784                     l6746:
  4875                           
  4876                           ;FastTransfer.c: 210: }
  4877                           ;FastTransfer.c: 211: }
  4878                           ;FastTransfer.c: 212: }
  4879                           ;FastTransfer.c: 215: return 0;
  4880  000784  0E00               	movlw	0
  4881  000786  0012               	return	
  4882  000788                     __end_of_receiveData:
  4883                           	opt stack 0
  4884                           tosu	equ	0xFFF
  4885                           tosh	equ	0xFFE
  4886                           tosl	equ	0xFFD
  4887                           pclath	equ	0xFFA
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           intcon	equ	0xFF2
  4895                           postinc0	equ	0xFEE
  4896                           wreg	equ	0xFE8
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           plusw2	equ	0xFDB
  4901                           fsr2h	equ	0xFDA
  4902                           fsr2l	equ	0xFD9
  4903                           status	equ	0xFD8
  4904                           
  4905 ;; *************** function _Send_put *****************
  4906 ;; Defined at:
  4907 ;;		line 130 in file "UART.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  _data           1    wreg     unsigned char 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  _data           1   37[COMRAM] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;		None               void
  4914 ;; Registers used:
  4915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4921 ;;      Params:         0       0       0       0       0       0       0
  4922 ;;      Locals:         1       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0
  4924 ;;      Totals:         1       0       0       0       0       0       0
  4925 ;;Total ram usage:        1 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    6
  4928 ;; This function calls:
  4929 ;;		_UART_buff_get
  4930 ;;		_UART_buff_put
  4931 ;; This function is called by:
  4932 ;;		_SYSTEM_Initialize
  4933 ;;		_putch
  4934 ;;		_sendData
  4935 ;;		_receiveData
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text13
  4940  002EFE                     __ptext13:
  4941                           	opt stack 0
  4942  002EFE                     _Send_put:
  4943                           	opt stack 21
  4944                           
  4945                           ;incstack = 0
  4946                           ;Send_put@_data stored from wreg
  4947  002EFE  6E26               	movwf	Send_put@_data,c
  4948                           
  4949                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4950  002F00  0E00               	movlw	low _output_buffer
  4951  002F02  6E21               	movwf	UART_buff_put@_this,c
  4952  002F04  0E05               	movlw	high _output_buffer
  4953  002F06  6E22               	movwf	UART_buff_put@_this+1,c
  4954  002F08  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4955  002F0C  EC19  F00C         	call	_UART_buff_put
  4956                           
  4957                           ;UART.c: 132: if (Transmit_stall == 1) {
  4958  002F10  0444               	decf	_Transmit_stall,w,c
  4959  002F12  A4D8               	btfss	status,2,c
  4960  002F14  0012               	return	
  4961                           
  4962                           ;UART.c: 133: Transmit_stall = 0;
  4963  002F16  0E00               	movlw	0
  4964  002F18  6E44               	movwf	_Transmit_stall,c
  4965                           
  4966                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4967  002F1A  0E00               	movlw	low _output_buffer
  4968  002F1C  6E21               	movwf	UART_buff_get@_this,c
  4969  002F1E  0E05               	movlw	high _output_buffer
  4970  002F20  6E22               	movwf	UART_buff_get@_this+1,c
  4971  002F22  EC87  F012         	call	_UART_buff_get	;wreg free
  4972  002F26  6EAD               	movwf	4013,c	;volatile
  4973                           
  4974                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4975  002F28  889D               	bsf	3997,4,c	;volatile
  4976  002F2A  0012               	return	
  4977  002F2C                     __end_of_Send_put:
  4978                           	opt stack 0
  4979                           tosu	equ	0xFFF
  4980                           tosh	equ	0xFFE
  4981                           tosl	equ	0xFFD
  4982                           pclath	equ	0xFFA
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           prodh	equ	0xFF4
  4988                           prodl	equ	0xFF3
  4989                           intcon	equ	0xFF2
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           indf2	equ	0xFDF
  4993                           postinc2	equ	0xFDE
  4994                           postdec2	equ	0xFDD
  4995                           plusw2	equ	0xFDB
  4996                           fsr2h	equ	0xFDA
  4997                           fsr2l	equ	0xFD9
  4998                           status	equ	0xFD8
  4999                           
  5000 ;; *************** function _UART_buff_put *****************
  5001 ;; Defined at:
  5002 ;;		line 68 in file "UART.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5005 ;;		 -> output_buffer(206), input_buffer(206), 
  5006 ;;  c               1   34[COMRAM] const unsigned char 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;		None               void
  5011 ;; Registers used:
  5012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5018 ;;      Params:         3       0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0
  5020 ;;      Temps:          2       0       0       0       0       0       0
  5021 ;;      Totals:         5       0       0       0       0       0       0
  5022 ;;Total ram usage:        5 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    5
  5025 ;; This function calls:
  5026 ;;		_UART_buff_modulo_inc
  5027 ;; This function is called by:
  5028 ;;		_Send_put
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text14
  5033  001832                     __ptext14:
  5034                           	opt stack 0
  5035  001832                     _UART_buff_put:
  5036                           	opt stack 21
  5037                           
  5038                           ;UART.c: 69: if (_this->count < 200) {
  5039                           
  5040                           ;incstack = 0
  5041  001832  EE20 F0CC          	lfsr	2,204
  5042  001836  5021               	movf	UART_buff_put@_this,w,c
  5043  001838  26D9               	addwf	fsr2l,f,c
  5044  00183A  5022               	movf	UART_buff_put@_this+1,w,c
  5045  00183C  22DA               	addwfc	fsr2h,f,c
  5046  00183E  0E01               	movlw	1
  5047  001840  BEDB               	btfsc	plusw2,7,c
  5048  001842  D007               	goto	l5926
  5049  001844  0E01               	movlw	1
  5050  001846  50DB               	movf	plusw2,w,c
  5051  001848  E13A               	bnz	l5932
  5052  00184A  0EC8               	movlw	200
  5053  00184C  5CDE               	subwf	postinc2,w,c
  5054  00184E  B0D8               	btfsc	status,0,c
  5055  001850  D036               	goto	l5932
  5056  001852                     l5926:
  5057                           
  5058                           ;UART.c: 70: _this->buf[_this->head] = c;
  5059  001852  EE20 F0C8          	lfsr	2,200
  5060  001856  5021               	movf	UART_buff_put@_this,w,c
  5061  001858  26D9               	addwf	fsr2l,f,c
  5062  00185A  5022               	movf	UART_buff_put@_this+1,w,c
  5063  00185C  22DA               	addwfc	fsr2h,f,c
  5064  00185E  CFDE F024          	movff	postinc2,??_UART_buff_put
  5065  001862  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5066  001866  5024               	movf	??_UART_buff_put,w,c
  5067  001868  2421               	addwf	UART_buff_put@_this,w,c
  5068  00186A  6ED9               	movwf	fsr2l,c
  5069  00186C  5025               	movf	??_UART_buff_put+1,w,c
  5070  00186E  2022               	addwfc	UART_buff_put@_this+1,w,c
  5071  001870  6EDA               	movwf	fsr2h,c
  5072  001872  C023  FFDF         	movff	UART_buff_put@c,indf2
  5073                           
  5074                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5075  001876  EE20 F0C8          	lfsr	2,200
  5076  00187A  5021               	movf	UART_buff_put@_this,w,c
  5077  00187C  26D9               	addwf	fsr2l,f,c
  5078  00187E  5022               	movf	UART_buff_put@_this+1,w,c
  5079  001880  22DA               	addwfc	fsr2h,f,c
  5080  001882  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5081  001886  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5082  00188A  0E00               	movlw	0
  5083  00188C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5084  00188E  0EC8               	movlw	200
  5085  001890  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5086  001892  ECC1  F017         	call	_UART_buff_modulo_inc	;wreg free
  5087  001896  EE20 F0C8          	lfsr	2,200
  5088  00189A  5021               	movf	UART_buff_put@_this,w,c
  5089  00189C  26D9               	addwf	fsr2l,f,c
  5090  00189E  5022               	movf	UART_buff_put@_this+1,w,c
  5091  0018A0  22DA               	addwfc	fsr2h,f,c
  5092  0018A2  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5093  0018A6  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5094                           
  5095                           ;UART.c: 72: ++_this->count;
  5096  0018AA  EE20 F0CC          	lfsr	2,204
  5097  0018AE  5021               	movf	UART_buff_put@_this,w,c
  5098  0018B0  26D9               	addwf	fsr2l,f,c
  5099  0018B2  5022               	movf	UART_buff_put@_this+1,w,c
  5100  0018B4  22DA               	addwfc	fsr2h,f,c
  5101  0018B6  2ADE               	incf	postinc2,f,c
  5102  0018B8  0E00               	movlw	0
  5103  0018BA  22DD               	addwfc	postdec2,f,c
  5104                           
  5105                           ;UART.c: 73: } else {
  5106  0018BC  0012               	return	
  5107  0018BE                     l5932:
  5108                           
  5109                           ;UART.c: 74: _this->buf[_this->head] = c;
  5110  0018BE  EE20 F0C8          	lfsr	2,200
  5111  0018C2  5021               	movf	UART_buff_put@_this,w,c
  5112  0018C4  26D9               	addwf	fsr2l,f,c
  5113  0018C6  5022               	movf	UART_buff_put@_this+1,w,c
  5114  0018C8  22DA               	addwfc	fsr2h,f,c
  5115  0018CA  CFDE F024          	movff	postinc2,??_UART_buff_put
  5116  0018CE  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5117  0018D2  5024               	movf	??_UART_buff_put,w,c
  5118  0018D4  2421               	addwf	UART_buff_put@_this,w,c
  5119  0018D6  6ED9               	movwf	fsr2l,c
  5120  0018D8  5025               	movf	??_UART_buff_put+1,w,c
  5121  0018DA  2022               	addwfc	UART_buff_put@_this+1,w,c
  5122  0018DC  6EDA               	movwf	fsr2h,c
  5123  0018DE  C023  FFDF         	movff	UART_buff_put@c,indf2
  5124                           
  5125                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5126  0018E2  EE20 F0C8          	lfsr	2,200
  5127  0018E6  5021               	movf	UART_buff_put@_this,w,c
  5128  0018E8  26D9               	addwf	fsr2l,f,c
  5129  0018EA  5022               	movf	UART_buff_put@_this+1,w,c
  5130  0018EC  22DA               	addwfc	fsr2h,f,c
  5131  0018EE  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5132  0018F2  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5133  0018F6  0E00               	movlw	0
  5134  0018F8  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5135  0018FA  0EC8               	movlw	200
  5136  0018FC  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5137  0018FE  ECC1  F017         	call	_UART_buff_modulo_inc	;wreg free
  5138  001902  EE20 F0C8          	lfsr	2,200
  5139  001906  5021               	movf	UART_buff_put@_this,w,c
  5140  001908  26D9               	addwf	fsr2l,f,c
  5141  00190A  5022               	movf	UART_buff_put@_this+1,w,c
  5142  00190C  22DA               	addwfc	fsr2h,f,c
  5143  00190E  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5144  001912  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5145                           
  5146                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5147  001916  EE20 F0CA          	lfsr	2,202
  5148  00191A  5021               	movf	UART_buff_put@_this,w,c
  5149  00191C  26D9               	addwf	fsr2l,f,c
  5150  00191E  5022               	movf	UART_buff_put@_this+1,w,c
  5151  001920  22DA               	addwfc	fsr2h,f,c
  5152  001922  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5153  001926  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5154  00192A  0E00               	movlw	0
  5155  00192C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5156  00192E  0EC8               	movlw	200
  5157  001930  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5158  001932  ECC1  F017         	call	_UART_buff_modulo_inc	;wreg free
  5159  001936  EE20 F0CA          	lfsr	2,202
  5160  00193A  5021               	movf	UART_buff_put@_this,w,c
  5161  00193C  26D9               	addwf	fsr2l,f,c
  5162  00193E  5022               	movf	UART_buff_put@_this+1,w,c
  5163  001940  22DA               	addwfc	fsr2h,f,c
  5164  001942  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5165  001946  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5166  00194A  0012               	return	
  5167  00194C                     __end_of_UART_buff_put:
  5168                           	opt stack 0
  5169                           tosu	equ	0xFFF
  5170                           tosh	equ	0xFFE
  5171                           tosl	equ	0xFFD
  5172                           pclath	equ	0xFFA
  5173                           tblptru	equ	0xFF8
  5174                           tblptrh	equ	0xFF7
  5175                           tblptrl	equ	0xFF6
  5176                           tablat	equ	0xFF5
  5177                           prodh	equ	0xFF4
  5178                           prodl	equ	0xFF3
  5179                           intcon	equ	0xFF2
  5180                           postinc0	equ	0xFEE
  5181                           wreg	equ	0xFE8
  5182                           indf2	equ	0xFDF
  5183                           postinc2	equ	0xFDE
  5184                           postdec2	equ	0xFDD
  5185                           plusw2	equ	0xFDB
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _Receive_peek *****************
  5191 ;; Defined at:
  5192 ;;		line 118 in file "UART.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      unsigned char 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5206 ;;      Params:         0       0       0       0       0       0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    5
  5213 ;; This function calls:
  5214 ;;		_UART_buff_peek
  5215 ;; This function is called by:
  5216 ;;		_SYSTEM_Initialize
  5217 ;;		_receiveData
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text15
  5222  003186                     __ptext15:
  5223                           	opt stack 0
  5224  003186                     _Receive_peek:
  5225                           	opt stack 23
  5226                           
  5227                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  5228                           
  5229                           ;incstack = 0
  5230  003186  0E00               	movlw	low _input_buffer
  5231  003188  6E1B               	movwf	UART_buff_peek@_this,c
  5232  00318A  0E04               	movlw	high _input_buffer
  5233  00318C  6E1C               	movwf	UART_buff_peek@_this+1,c
  5234  00318E  EC26  F018         	call	_UART_buff_peek	;wreg free
  5235  003192  0012               	return	
  5236  003194                     __end_of_Receive_peek:
  5237                           	opt stack 0
  5238                           tosu	equ	0xFFF
  5239                           tosh	equ	0xFFE
  5240                           tosl	equ	0xFFD
  5241                           pclath	equ	0xFFA
  5242                           tblptru	equ	0xFF8
  5243                           tblptrh	equ	0xFF7
  5244                           tblptrl	equ	0xFF6
  5245                           tablat	equ	0xFF5
  5246                           prodh	equ	0xFF4
  5247                           prodl	equ	0xFF3
  5248                           intcon	equ	0xFF2
  5249                           postinc0	equ	0xFEE
  5250                           wreg	equ	0xFE8
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           plusw2	equ	0xFDB
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _UART_buff_peek *****************
  5260 ;; Defined at:
  5261 ;;		line 114 in file "UART.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5264 ;;		 -> input_buffer(206), 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      unsigned char 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5276 ;;      Params:         2       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0
  5278 ;;      Temps:          2       0       0       0       0       0       0
  5279 ;;      Totals:         4       0       0       0       0       0       0
  5280 ;;Total ram usage:        4 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    4
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_Receive_peek
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text16
  5291  00304C                     __ptext16:
  5292                           	opt stack 0
  5293  00304C                     _UART_buff_peek:
  5294                           	opt stack 23
  5295                           
  5296                           ;UART.c: 115: return _this->buf[_this->tail];
  5297                           
  5298                           ;incstack = 0
  5299  00304C  EE20 F0CA          	lfsr	2,202
  5300  003050  501B               	movf	UART_buff_peek@_this,w,c
  5301  003052  26D9               	addwf	fsr2l,f,c
  5302  003054  501C               	movf	UART_buff_peek@_this+1,w,c
  5303  003056  22DA               	addwfc	fsr2h,f,c
  5304  003058  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  5305  00305C  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  5306  003060  501D               	movf	??_UART_buff_peek,w,c
  5307  003062  241B               	addwf	UART_buff_peek@_this,w,c
  5308  003064  6ED9               	movwf	fsr2l,c
  5309  003066  501E               	movf	??_UART_buff_peek+1,w,c
  5310  003068  201C               	addwfc	UART_buff_peek@_this+1,w,c
  5311  00306A  6EDA               	movwf	fsr2h,c
  5312  00306C  50DF               	movf	indf2,w,c
  5313  00306E  0012               	return	
  5314  003070                     __end_of_UART_buff_peek:
  5315                           	opt stack 0
  5316                           tosu	equ	0xFFF
  5317                           tosh	equ	0xFFE
  5318                           tosl	equ	0xFFD
  5319                           pclath	equ	0xFFA
  5320                           tblptru	equ	0xFF8
  5321                           tblptrh	equ	0xFF7
  5322                           tblptrl	equ	0xFF6
  5323                           tablat	equ	0xFF5
  5324                           prodh	equ	0xFF4
  5325                           prodl	equ	0xFF3
  5326                           intcon	equ	0xFF2
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           postdec2	equ	0xFDD
  5332                           plusw2	equ	0xFDB
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _CRCcheck *****************
  5338 ;; Defined at:
  5339 ;;		line 378 in file "FastTransfer.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  rt              2    5[BANK0 ] int 
  5344 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  5345 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  5346 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;		None               void
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5356 ;;      Params:         0       0       0       0       0       0       0
  5357 ;;      Locals:         0       7       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0
  5359 ;;      Totals:         0       7       0       0       0       0       0
  5360 ;;Total ram usage:        7 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    7
  5363 ;; This function calls:
  5364 ;;		Absolute function
  5365 ;;		_CRC8
  5366 ;;		_Receive_available
  5367 ;;		_Receive_get
  5368 ;;		_crcBufS_get
  5369 ;;		_crcBufS_status_put
  5370 ;; This function is called by:
  5371 ;;		_receiveData
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text17
  5376  001446                     __ptext17:
  5377                           	opt stack 0
  5378  001446                     _CRCcheck:
  5379                           	opt stack 21
  5380  001446                     l6326:
  5381  001446  D801               	call	u6578
  5382  001448  D00A               	goto	u6579
  5383  00144A                     u6578:
  5384  00144A  0005               	push	
  5385  00144C  6EFA               	movwf	pclath,c
  5386  00144E  502F               	movf	_serial_available,w,c
  5387  001450  6EFD               	movwf	tosl,c
  5388  001452  5030               	movf	_serial_available+1,w,c
  5389  001454  6EFE               	movwf	tosh,c
  5390  001456  50F8               	movf	tblptru,w,c
  5391  001458  6EFF               	movwf	tosu,c
  5392  00145A  50FA               	movf	pclath,w,c
  5393  00145C  0012               	return		;indir
  5394  00145E                     u6579:
  5395  00145E  BE1E               	btfsc	?_Receive_available+1,7,c
  5396  001460  D7F2               	goto	l6326
  5397  001462  501E               	movf	?_Receive_available+1,w,c
  5398  001464  E104               	bnz	l6328
  5399  001466  0E04               	movlw	4
  5400  001468  5C1D               	subwf	?_Receive_available,w,c
  5401  00146A  A0D8               	btfss	status,0,c
  5402  00146C  D7EC               	goto	l6326
  5403  00146E                     l6328:
  5404                           
  5405                           ;FastTransfer.c: 382: unsigned char arrayHolder[3];
  5406                           ;FastTransfer.c: 383: arrayHolder[0] = serial_read();
  5407  00146E  D801               	call	u6598
  5408  001470  D00A               	goto	u6599
  5409  001472                     u6598:
  5410  001472  0005               	push	
  5411  001474  6EFA               	movwf	pclath,c
  5412  001476  5031               	movf	_serial_read,w,c
  5413  001478  6EFD               	movwf	tosl,c
  5414  00147A  5032               	movf	_serial_read+1,w,c
  5415  00147C  6EFE               	movwf	tosh,c
  5416  00147E  50F8               	movf	tblptru,w,c
  5417  001480  6EFF               	movwf	tosu,c
  5418  001482  50FA               	movf	pclath,w,c
  5419  001484  0012               	return		;indir
  5420  001486                     u6599:
  5421  001486  0100               	movlb	0	; () banked
  5422  001488  6FF4               	movwf	CRCcheck@arrayHolder& (0+255),b
  5423                           
  5424                           ;FastTransfer.c: 384: arrayHolder[1] = serial_read();
  5425  00148A  D801               	call	u6608
  5426  00148C  D00A               	goto	u6609
  5427  00148E                     u6608:
  5428  00148E  0005               	push	
  5429  001490  6EFA               	movwf	pclath,c
  5430  001492  5031               	movf	_serial_read,w,c
  5431  001494  6EFD               	movwf	tosl,c
  5432  001496  5032               	movf	_serial_read+1,w,c
  5433  001498  6EFE               	movwf	tosh,c
  5434  00149A  50F8               	movf	tblptru,w,c
  5435  00149C  6EFF               	movwf	tosu,c
  5436  00149E  50FA               	movf	pclath,w,c
  5437  0014A0  0012               	return		;indir
  5438  0014A2                     u6609:
  5439  0014A2  0100               	movlb	0	; () banked
  5440  0014A4  6FF5               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  5441                           
  5442                           ;FastTransfer.c: 385: arrayHolder[2] = serial_read();
  5443  0014A6  D801               	call	u6618
  5444  0014A8  D00A               	goto	u6619
  5445  0014AA                     u6618:
  5446  0014AA  0005               	push	
  5447  0014AC  6EFA               	movwf	pclath,c
  5448  0014AE  5031               	movf	_serial_read,w,c
  5449  0014B0  6EFD               	movwf	tosl,c
  5450  0014B2  5032               	movf	_serial_read+1,w,c
  5451  0014B4  6EFE               	movwf	tosh,c
  5452  0014B6  50F8               	movf	tblptru,w,c
  5453  0014B8  6EFF               	movwf	tosu,c
  5454  0014BA  50FA               	movf	pclath,w,c
  5455  0014BC  0012               	return		;indir
  5456  0014BE                     u6619:
  5457  0014BE  0100               	movlb	0	; () banked
  5458  0014C0  6FF6               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  5459                           
  5460                           ;FastTransfer.c: 386: unsigned char SentCRC = serial_read();
  5461  0014C2  D801               	call	u6628
  5462  0014C4  D00A               	goto	u6629
  5463  0014C6                     u6628:
  5464  0014C6  0005               	push	
  5465  0014C8  6EFA               	movwf	pclath,c
  5466  0014CA  5031               	movf	_serial_read,w,c
  5467  0014CC  6EFD               	movwf	tosl,c
  5468  0014CE  5032               	movf	_serial_read+1,w,c
  5469  0014D0  6EFE               	movwf	tosh,c
  5470  0014D2  50F8               	movf	tblptru,w,c
  5471  0014D4  6EFF               	movwf	tosu,c
  5472  0014D6  50FA               	movf	pclath,w,c
  5473  0014D8  0012               	return		;indir
  5474  0014DA                     u6629:
  5475  0014DA  0100               	movlb	0	; () banked
  5476  0014DC  6FF2               	movwf	CRCcheck@SentCRC& (0+255),b
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;FastTransfer.c: 387: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  5480  0014DE  0EF4               	movlw	low CRCcheck@arrayHolder
  5481  0014E0  6E1B               	movwf	CRC8@data,c
  5482  0014E2  0E00               	movlw	high CRCcheck@arrayHolder
  5483  0014E4  6E1C               	movwf	CRC8@data+1,c
  5484  0014E6  0E03               	movlw	3
  5485  0014E8  6E1D               	movwf	CRC8@len,c
  5486  0014EA  EC4C  F016         	call	_CRC8	;wreg free
  5487  0014EE  0100               	movlb	0	; () banked
  5488  0014F0  6FF3               	movwf	CRCcheck@calculatedCRC& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;FastTransfer.c: 390: if (SentCRC == calculatedCRC) {
  5492  0014F2  0100               	movlb	0	; () banked
  5493  0014F4  51F3               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  5494  0014F6  0100               	movlb	0	; () banked
  5495  0014F8  19F2               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  5496  0014FA  A4D8               	btfss	status,2,c
  5497  0014FC  D04E               	goto	l6358
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;FastTransfer.c: 392: int rt;
  5501                           ;FastTransfer.c: 393: for (rt = 0; rt < 5; rt++) {
  5502  0014FE  0E00               	movlw	0
  5503  001500  0100               	movlb	0	; () banked
  5504  001502  6FF8               	movwf	(CRCcheck@rt+1)& (0+255),b
  5505  001504  0E00               	movlw	0
  5506  001506  6FF7               	movwf	CRCcheck@rt& (0+255),b
  5507  001508                     l6336:
  5508                           
  5509                           ; BSR set to: 0
  5510  001508  0100               	movlb	0	; () banked
  5511  00150A  BFF8               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  5512  00150C  D008               	goto	l6340
  5513  00150E  0100               	movlb	0	; () banked
  5514  001510  51F8               	movf	(CRCcheck@rt+1)& (0+255),w,b
  5515  001512  E147               	bnz	l1124
  5516  001514  0E05               	movlw	5
  5517  001516  0100               	movlb	0	; () banked
  5518  001518  5DF7               	subwf	CRCcheck@rt& (0+255),w,b
  5519  00151A  B0D8               	btfsc	status,0,c
  5520  00151C  0012               	return	
  5521  00151E                     l6340:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;FastTransfer.c: 394: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  5525  00151E  0E28               	movlw	low _crc_buffer
  5526  001520  6E1B               	movwf	crcBufS_get@_this,c
  5527  001522  0E01               	movlw	high _crc_buffer
  5528  001524  6E1C               	movwf	crcBufS_get@_this+1,c
  5529  001526  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5530  00152A  0E00               	movlw	0
  5531  00152C  6E1E               	movwf	crcBufS_get@space,c
  5532  00152E  EC37  F00E         	call	_crcBufS_get	;wreg free
  5533  001532  183B               	xorwf	_returnAddress,w,c
  5534  001534  A4D8               	btfss	status,2,c
  5535  001536  D02D               	goto	l6354
  5536                           
  5537                           ;FastTransfer.c: 395: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  5538  001538  0E28               	movlw	low _crc_buffer
  5539  00153A  6E1B               	movwf	crcBufS_get@_this,c
  5540  00153C  0E01               	movlw	high _crc_buffer
  5541  00153E  6E1C               	movwf	crcBufS_get@_this+1,c
  5542  001540  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5543  001544  0E01               	movlw	1
  5544  001546  6E1E               	movwf	crcBufS_get@space,c
  5545  001548  EC37  F00E         	call	_crcBufS_get	;wreg free
  5546  00154C  0100               	movlb	0	; () banked
  5547  00154E  19F6               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  5548  001550  A4D8               	btfss	status,2,c
  5549  001552  D01F               	goto	l6354
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;FastTransfer.c: 396: if (arrayHolder[1] == 1) {
  5553  001554  0100               	movlb	0	; () banked
  5554  001556  05F5               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5555  001558  A4D8               	btfss	status,2,c
  5556  00155A  D00B               	goto	l6350
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;FastTransfer.c: 397: crcBufS_status_put(&crc_buffer, rt, 1);
  5560  00155C  0E28               	movlw	low _crc_buffer
  5561  00155E  6E1B               	movwf	crcBufS_status_put@_this,c
  5562  001560  0E01               	movlw	high _crc_buffer
  5563  001562  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5564  001564  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5565  001568  0E01               	movlw	1
  5566  00156A  6E1E               	movwf	crcBufS_status_put@status,c
  5567  00156C  EC14  F00F         	call	_crcBufS_status_put	;wreg free
  5568                           
  5569                           ;FastTransfer.c: 398: break;
  5570  001570  0012               	return	
  5571  001572                     l6350:
  5572  001572  0E02               	movlw	2
  5573  001574  0100               	movlb	0	; () banked
  5574  001576  19F5               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5575  001578  A4D8               	btfss	status,2,c
  5576  00157A  D00B               	goto	l6354
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;FastTransfer.c: 400: crcBufS_status_put(&crc_buffer, rt, 2);
  5580  00157C  0E28               	movlw	low _crc_buffer
  5581  00157E  6E1B               	movwf	crcBufS_status_put@_this,c
  5582  001580  0E01               	movlw	high _crc_buffer
  5583  001582  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5584  001584  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5585  001588  0E02               	movlw	2
  5586  00158A  6E1E               	movwf	crcBufS_status_put@status,c
  5587  00158C  EC14  F00F         	call	_crcBufS_status_put	;wreg free
  5588                           
  5589                           ;FastTransfer.c: 401: break;
  5590  001590  0012               	return	
  5591  001592                     l6354:
  5592  001592  0100               	movlb	0	; () banked
  5593  001594  4BF7               	infsnz	CRCcheck@rt& (0+255),f,b
  5594  001596  2BF8               	incf	(CRCcheck@rt+1)& (0+255),f,b
  5595  001598  D7B7               	goto	l6336
  5596  00159A                     l6358:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;FastTransfer.c: 407: crcErrorCounter++;
  5600  00159A  0100               	movlb	0	; () banked
  5601  00159C  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  5602  00159E  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  5603  0015A0  0012               	return	
  5604  0015A2                     l1124:
  5605  0015A2  0012               	return		;funcret
  5606  0015A4                     __end_of_CRCcheck:
  5607                           	opt stack 0
  5608                           tosu	equ	0xFFF
  5609                           tosh	equ	0xFFE
  5610                           tosl	equ	0xFFD
  5611                           pclath	equ	0xFFA
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           postinc0	equ	0xFEE
  5620                           wreg	equ	0xFE8
  5621                           indf2	equ	0xFDF
  5622                           postinc2	equ	0xFDE
  5623                           postdec2	equ	0xFDD
  5624                           plusw2	equ	0xFDB
  5625                           fsr2h	equ	0xFDA
  5626                           fsr2l	equ	0xFD9
  5627                           status	equ	0xFD8
  5628                           
  5629 ;; *************** function _crcBufS_status_put *****************
  5630 ;; Defined at:
  5631 ;;		line 341 in file "FastTransfer.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5634 ;;		 -> crc_buffer(17), 
  5635 ;;  time            1   28[COMRAM] unsigned char 
  5636 ;;  status          1   29[COMRAM] unsigned char 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  wantedTime      2   34[COMRAM] int 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;		None               void
  5641 ;; Registers used:
  5642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5648 ;;      Params:         4       0       0       0       0       0       0
  5649 ;;      Locals:         2       0       0       0       0       0       0
  5650 ;;      Temps:          4       0       0       0       0       0       0
  5651 ;;      Totals:        10       0       0       0       0       0       0
  5652 ;;Total ram usage:       10 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    4
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_CRCcheck
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text18
  5663  001E28                     __ptext18:
  5664                           	opt stack 0
  5665  001E28                     _crcBufS_status_put:
  5666                           	opt stack 23
  5667                           
  5668                           ;FastTransfer.c: 342: if (time >= 5) {
  5669                           
  5670                           ;incstack = 0
  5671  001E28  0E04               	movlw	4
  5672  001E2A  641D               	cpfsgt	crcBufS_status_put@time,c
  5673  001E2C  D002               	goto	l6072
  5674                           
  5675                           ;FastTransfer.c: 343: time = 5 - 1;
  5676  001E2E  0E04               	movlw	4
  5677  001E30  6E1D               	movwf	crcBufS_status_put@time,c
  5678  001E32                     l6072:
  5679                           
  5680                           ;FastTransfer.c: 344: }
  5681                           ;FastTransfer.c: 345: time = time + 1;
  5682  001E32  281D               	incf	crcBufS_status_put@time,w,c
  5683  001E34  6E1D               	movwf	crcBufS_status_put@time,c
  5684                           
  5685                           ;FastTransfer.c: 346: int wantedTime = time * 3;
  5686  001E36  501D               	movf	crcBufS_status_put@time,w,c
  5687  001E38  0D03               	mullw	3
  5688  001E3A  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  5689  001E3E  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  5690                           
  5691                           ;FastTransfer.c: 347: if (wantedTime > _this->head) {
  5692  001E42  EE20 F00F          	lfsr	2,15
  5693  001E46  501B               	movf	crcBufS_status_put@_this,w,c
  5694  001E48  26D9               	addwf	fsr2l,f,c
  5695  001E4A  501C               	movf	crcBufS_status_put@_this+1,w,c
  5696  001E4C  22DA               	addwfc	fsr2h,f,c
  5697  001E4E  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5698  001E50  5CDE               	subwf	postinc2,w,c
  5699  001E52  50DE               	movf	postinc2,w,c
  5700  001E54  0A80               	xorlw	128
  5701  001E56  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  5702  001E58  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5703  001E5A  0A80               	xorlw	128
  5704  001E5C  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  5705  001E5E  B0D8               	btfsc	status,0,c
  5706  001E60  D02B               	goto	l6080
  5707                           
  5708                           ;FastTransfer.c: 348: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5709  001E62  EE20 F00F          	lfsr	2,15
  5710  001E66  501B               	movf	crcBufS_status_put@_this,w,c
  5711  001E68  26D9               	addwf	fsr2l,f,c
  5712  001E6A  501C               	movf	crcBufS_status_put@_this+1,w,c
  5713  001E6C  22DA               	addwfc	fsr2h,f,c
  5714  001E6E  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5715  001E72  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5716  001E76  1E1F               	comf	??_crcBufS_status_put,f,c
  5717  001E78  1E20               	comf	??_crcBufS_status_put+1,f,c
  5718  001E7A  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5719  001E7C  2A20               	incf	??_crcBufS_status_put+1,f,c
  5720  001E7E  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5721  001E80  261F               	addwf	??_crcBufS_status_put,f,c
  5722  001E82  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5723  001E84  2220               	addwfc	??_crcBufS_status_put+1,f,c
  5724  001E86  1E1F               	comf	??_crcBufS_status_put,f,c
  5725  001E88  1E20               	comf	??_crcBufS_status_put+1,f,c
  5726  001E8A  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5727  001E8C  2A20               	incf	??_crcBufS_status_put+1,f,c
  5728  001E8E  0E0F               	movlw	15
  5729  001E90  241F               	addwf	??_crcBufS_status_put,w,c
  5730  001E92  6E23               	movwf	crcBufS_status_put@wantedTime,c
  5731  001E94  0E00               	movlw	0
  5732  001E96  2020               	addwfc	??_crcBufS_status_put+1,w,c
  5733  001E98  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  5734                           
  5735                           ;FastTransfer.c: 349: _this->buf[(wantedTime + 2)] = status;
  5736  001E9A  0E02               	movlw	2
  5737  001E9C  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  5738  001E9E  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  5739  001EA0  0E00               	movlw	0
  5740  001EA2  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  5741  001EA4  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  5742  001EA6  501F               	movf	??_crcBufS_status_put,w,c
  5743  001EA8  241B               	addwf	crcBufS_status_put@_this,w,c
  5744  001EAA  6ED9               	movwf	fsr2l,c
  5745  001EAC  5020               	movf	??_crcBufS_status_put+1,w,c
  5746  001EAE  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5747  001EB0  6EDA               	movwf	fsr2h,c
  5748  001EB2  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5749                           
  5750                           ;FastTransfer.c: 350: } else {
  5751  001EB6  0012               	return	
  5752  001EB8                     l6080:
  5753                           
  5754                           ;FastTransfer.c: 351: _this->buf[(_this->head - wantedTime) + 2] = status;
  5755  001EB8  EE20 F00F          	lfsr	2,15
  5756  001EBC  501B               	movf	crcBufS_status_put@_this,w,c
  5757  001EBE  26D9               	addwf	fsr2l,f,c
  5758  001EC0  501C               	movf	crcBufS_status_put@_this+1,w,c
  5759  001EC2  22DA               	addwfc	fsr2h,f,c
  5760  001EC4  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5761  001EC8  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5762  001ECC  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  5763  001ED0  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  5764  001ED4  1E21               	comf	??_crcBufS_status_put+2,f,c
  5765  001ED6  1E22               	comf	??_crcBufS_status_put+3,f,c
  5766  001ED8  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  5767  001EDA  2A22               	incf	??_crcBufS_status_put+3,f,c
  5768  001EDC  501F               	movf	??_crcBufS_status_put,w,c
  5769  001EDE  2621               	addwf	??_crcBufS_status_put+2,f,c
  5770  001EE0  5020               	movf	??_crcBufS_status_put+1,w,c
  5771  001EE2  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5772  001EE4  0E02               	movlw	2
  5773  001EE6  2621               	addwf	??_crcBufS_status_put+2,f,c
  5774  001EE8  0E00               	movlw	0
  5775  001EEA  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5776  001EEC  5021               	movf	??_crcBufS_status_put+2,w,c
  5777  001EEE  241B               	addwf	crcBufS_status_put@_this,w,c
  5778  001EF0  6ED9               	movwf	fsr2l,c
  5779  001EF2  5022               	movf	??_crcBufS_status_put+3,w,c
  5780  001EF4  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5781  001EF6  6EDA               	movwf	fsr2h,c
  5782  001EF8  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5783  001EFC  0012               	return	
  5784  001EFE                     __end_of_crcBufS_status_put:
  5785                           	opt stack 0
  5786                           tosu	equ	0xFFF
  5787                           tosh	equ	0xFFE
  5788                           tosl	equ	0xFFD
  5789                           pclath	equ	0xFFA
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           postinc0	equ	0xFEE
  5798                           wreg	equ	0xFE8
  5799                           indf2	equ	0xFDF
  5800                           postinc2	equ	0xFDE
  5801                           postdec2	equ	0xFDD
  5802                           plusw2	equ	0xFDB
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _crcBufS_get *****************
  5808 ;; Defined at:
  5809 ;;		line 358 in file "FastTransfer.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5812 ;;		 -> crc_buffer(17), 
  5813 ;;  time            1   28[COMRAM] unsigned char 
  5814 ;;  space           1   29[COMRAM] unsigned char 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  wantedTime      2   36[COMRAM] int 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      unsigned char 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5826 ;;      Params:         4       0       0       0       0       0       0
  5827 ;;      Locals:         2       0       0       0       0       0       0
  5828 ;;      Temps:          6       0       0       0       0       0       0
  5829 ;;      Totals:        12       0       0       0       0       0       0
  5830 ;;Total ram usage:       12 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    4
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_CRCcheck
  5837 ;;		_AKNAK
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text19
  5842  001C6E                     __ptext19:
  5843                           	opt stack 0
  5844  001C6E                     _crcBufS_get:
  5845                           	opt stack 23
  5846                           
  5847                           ;FastTransfer.c: 359: if (time >= 5) {
  5848                           
  5849                           ;incstack = 0
  5850  001C6E  0E04               	movlw	4
  5851  001C70  641D               	cpfsgt	crcBufS_get@time,c
  5852  001C72  D002               	goto	l6048
  5853                           
  5854                           ;FastTransfer.c: 360: time = 5 - 1;
  5855  001C74  0E04               	movlw	4
  5856  001C76  6E1D               	movwf	crcBufS_get@time,c
  5857  001C78                     l6048:
  5858                           
  5859                           ;FastTransfer.c: 361: }
  5860                           ;FastTransfer.c: 362: if (space >= 3) {
  5861  001C78  0E02               	movlw	2
  5862  001C7A  641E               	cpfsgt	crcBufS_get@space,c
  5863  001C7C  D002               	goto	l6052
  5864                           
  5865                           ;FastTransfer.c: 363: space = 3 - 1;
  5866  001C7E  0E02               	movlw	2
  5867  001C80  6E1E               	movwf	crcBufS_get@space,c
  5868  001C82                     l6052:
  5869                           
  5870                           ;FastTransfer.c: 364: }
  5871                           ;FastTransfer.c: 365: time = time + 1;
  5872  001C82  281D               	incf	crcBufS_get@time,w,c
  5873  001C84  6E1D               	movwf	crcBufS_get@time,c
  5874                           
  5875                           ;FastTransfer.c: 366: int wantedTime = time * 3;
  5876  001C86  501D               	movf	crcBufS_get@time,w,c
  5877  001C88  0D03               	mullw	3
  5878  001C8A  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  5879  001C8E  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  5880                           
  5881                           ;FastTransfer.c: 367: if (wantedTime > _this->head) {
  5882  001C92  EE20 F00F          	lfsr	2,15
  5883  001C96  501B               	movf	crcBufS_get@_this,w,c
  5884  001C98  26D9               	addwf	fsr2l,f,c
  5885  001C9A  501C               	movf	crcBufS_get@_this+1,w,c
  5886  001C9C  22DA               	addwfc	fsr2h,f,c
  5887  001C9E  5025               	movf	crcBufS_get@wantedTime,w,c
  5888  001CA0  5CDE               	subwf	postinc2,w,c
  5889  001CA2  50DE               	movf	postinc2,w,c
  5890  001CA4  0A80               	xorlw	128
  5891  001CA6  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  5892  001CA8  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5893  001CAA  0A80               	xorlw	128
  5894  001CAC  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  5895  001CAE  B0D8               	btfsc	status,0,c
  5896  001CB0  D02A               	goto	l6064
  5897                           
  5898                           ;FastTransfer.c: 368: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5899  001CB2  EE20 F00F          	lfsr	2,15
  5900  001CB6  501B               	movf	crcBufS_get@_this,w,c
  5901  001CB8  26D9               	addwf	fsr2l,f,c
  5902  001CBA  501C               	movf	crcBufS_get@_this+1,w,c
  5903  001CBC  22DA               	addwfc	fsr2h,f,c
  5904  001CBE  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5905  001CC2  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5906  001CC6  1E1F               	comf	??_crcBufS_get,f,c
  5907  001CC8  1E20               	comf	??_crcBufS_get+1,f,c
  5908  001CCA  4A1F               	infsnz	??_crcBufS_get,f,c
  5909  001CCC  2A20               	incf	??_crcBufS_get+1,f,c
  5910  001CCE  5025               	movf	crcBufS_get@wantedTime,w,c
  5911  001CD0  261F               	addwf	??_crcBufS_get,f,c
  5912  001CD2  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5913  001CD4  2220               	addwfc	??_crcBufS_get+1,f,c
  5914  001CD6  1E1F               	comf	??_crcBufS_get,f,c
  5915  001CD8  1E20               	comf	??_crcBufS_get+1,f,c
  5916  001CDA  4A1F               	infsnz	??_crcBufS_get,f,c
  5917  001CDC  2A20               	incf	??_crcBufS_get+1,f,c
  5918  001CDE  0E0F               	movlw	15
  5919  001CE0  241F               	addwf	??_crcBufS_get,w,c
  5920  001CE2  6E25               	movwf	crcBufS_get@wantedTime,c
  5921  001CE4  0E00               	movlw	0
  5922  001CE6  2020               	addwfc	??_crcBufS_get+1,w,c
  5923  001CE8  6E26               	movwf	crcBufS_get@wantedTime+1,c
  5924                           
  5925                           ;FastTransfer.c: 369: return (_this->buf[(wantedTime + space)]);
  5926  001CEA  501E               	movf	crcBufS_get@space,w,c
  5927  001CEC  2425               	addwf	crcBufS_get@wantedTime,w,c
  5928  001CEE  6E1F               	movwf	??_crcBufS_get& (0+255),c
  5929  001CF0  0E00               	movlw	0
  5930  001CF2  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  5931  001CF4  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  5932  001CF6  501F               	movf	??_crcBufS_get,w,c
  5933  001CF8  241B               	addwf	crcBufS_get@_this,w,c
  5934  001CFA  6ED9               	movwf	fsr2l,c
  5935  001CFC  5020               	movf	??_crcBufS_get+1,w,c
  5936  001CFE  201C               	addwfc	crcBufS_get@_this+1,w,c
  5937  001D00  6EDA               	movwf	fsr2h,c
  5938  001D02  50DF               	movf	indf2,w,c
  5939                           
  5940                           ;FastTransfer.c: 370: } else {
  5941  001D04  0012               	return	
  5942  001D06                     l6064:
  5943                           
  5944                           ;FastTransfer.c: 371: return (_this->buf[(_this->head - wantedTime) + space]);
  5945  001D06  EE20 F00F          	lfsr	2,15
  5946  001D0A  501B               	movf	crcBufS_get@_this,w,c
  5947  001D0C  26D9               	addwf	fsr2l,f,c
  5948  001D0E  501C               	movf	crcBufS_get@_this+1,w,c
  5949  001D10  22DA               	addwfc	fsr2h,f,c
  5950  001D12  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5951  001D16  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5952  001D1A  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  5953  001D1E  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  5954  001D22  1E21               	comf	??_crcBufS_get+2,f,c
  5955  001D24  1E22               	comf	??_crcBufS_get+3,f,c
  5956  001D26  4A21               	infsnz	??_crcBufS_get+2,f,c
  5957  001D28  2A22               	incf	??_crcBufS_get+3,f,c
  5958  001D2A  501E               	movf	crcBufS_get@space,w,c
  5959  001D2C  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  5960  001D2E  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  5961  001D30  5021               	movf	??_crcBufS_get+2,w,c
  5962  001D32  2623               	addwf	??_crcBufS_get+4,f,c
  5963  001D34  5022               	movf	??_crcBufS_get+3,w,c
  5964  001D36  2224               	addwfc	??_crcBufS_get+5,f,c
  5965  001D38  501F               	movf	??_crcBufS_get,w,c
  5966  001D3A  2623               	addwf	??_crcBufS_get+4,f,c
  5967  001D3C  5020               	movf	??_crcBufS_get+1,w,c
  5968  001D3E  2224               	addwfc	??_crcBufS_get+5,f,c
  5969  001D40  5023               	movf	??_crcBufS_get+4,w,c
  5970  001D42  241B               	addwf	crcBufS_get@_this,w,c
  5971  001D44  6ED9               	movwf	fsr2l,c
  5972  001D46  5024               	movf	??_crcBufS_get+5,w,c
  5973  001D48  201C               	addwfc	crcBufS_get@_this+1,w,c
  5974  001D4A  6EDA               	movwf	fsr2h,c
  5975  001D4C  50DF               	movf	indf2,w,c
  5976  001D4E  0012               	return	
  5977  001D50                     __end_of_crcBufS_get:
  5978                           	opt stack 0
  5979                           tosu	equ	0xFFF
  5980                           tosh	equ	0xFFE
  5981                           tosl	equ	0xFFD
  5982                           pclath	equ	0xFFA
  5983                           tblptru	equ	0xFF8
  5984                           tblptrh	equ	0xFF7
  5985                           tblptrl	equ	0xFF6
  5986                           tablat	equ	0xFF5
  5987                           prodh	equ	0xFF4
  5988                           prodl	equ	0xFF3
  5989                           intcon	equ	0xFF2
  5990                           postinc0	equ	0xFEE
  5991                           wreg	equ	0xFE8
  5992                           indf2	equ	0xFDF
  5993                           postinc2	equ	0xFDE
  5994                           postdec2	equ	0xFDD
  5995                           plusw2	equ	0xFDB
  5996                           fsr2h	equ	0xFDA
  5997                           fsr2l	equ	0xFD9
  5998                           status	equ	0xFD8
  5999                           
  6000 ;; *************** function _Receive_get *****************
  6001 ;; Defined at:
  6002 ;;		line 126 in file "UART.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;		None
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      unsigned char 
  6009 ;; Registers used:
  6010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6016 ;;      Params:         0       0       0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0
  6019 ;;      Totals:         0       0       0       0       0       0       0
  6020 ;;Total ram usage:        0 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    6
  6023 ;; This function calls:
  6024 ;;		_UART_buff_get
  6025 ;; This function is called by:
  6026 ;;		_SYSTEM_Initialize
  6027 ;;		_getch
  6028 ;;		_CRCcheck
  6029 ;;		_receiveData
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text20
  6034  003194                     __ptext20:
  6035                           	opt stack 0
  6036  003194                     _Receive_get:
  6037                           	opt stack 22
  6038                           
  6039                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  6040                           
  6041                           ;incstack = 0
  6042  003194  0E00               	movlw	low _input_buffer
  6043  003196  6E21               	movwf	UART_buff_get@_this,c
  6044  003198  0E04               	movlw	high _input_buffer
  6045  00319A  6E22               	movwf	UART_buff_get@_this+1,c
  6046  00319C  EC87  F012         	call	_UART_buff_get	;wreg free
  6047  0031A0  0012               	return	
  6048  0031A2                     __end_of_Receive_get:
  6049                           	opt stack 0
  6050                           tosu	equ	0xFFF
  6051                           tosh	equ	0xFFE
  6052                           tosl	equ	0xFFD
  6053                           pclath	equ	0xFFA
  6054                           tblptru	equ	0xFF8
  6055                           tblptrh	equ	0xFF7
  6056                           tblptrl	equ	0xFF6
  6057                           tablat	equ	0xFF5
  6058                           prodh	equ	0xFF4
  6059                           prodl	equ	0xFF3
  6060                           intcon	equ	0xFF2
  6061                           postinc0	equ	0xFEE
  6062                           wreg	equ	0xFE8
  6063                           indf2	equ	0xFDF
  6064                           postinc2	equ	0xFDE
  6065                           postdec2	equ	0xFDD
  6066                           plusw2	equ	0xFDB
  6067                           fsr2h	equ	0xFDA
  6068                           fsr2l	equ	0xFD9
  6069                           status	equ	0xFD8
  6070                           
  6071 ;; *************** function _UART_buff_get *****************
  6072 ;; Defined at:
  6073 ;;		line 81 in file "UART.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  6076 ;;		 -> output_buffer(206), input_buffer(206), 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  c               1   36[COMRAM] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      unsigned char 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6088 ;;      Params:         2       0       0       0       0       0       0
  6089 ;;      Locals:         1       0       0       0       0       0       0
  6090 ;;      Temps:          2       0       0       0       0       0       0
  6091 ;;      Totals:         5       0       0       0       0       0       0
  6092 ;;Total ram usage:        5 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    5
  6095 ;; This function calls:
  6096 ;;		_UART_buff_modulo_inc
  6097 ;; This function is called by:
  6098 ;;		_Receive_get
  6099 ;;		_Send_put
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text21
  6104  00250E                     __ptext21:
  6105                           	opt stack 0
  6106  00250E                     _UART_buff_get:
  6107                           	opt stack 21
  6108                           
  6109                           ;UART.c: 82: unsigned char c;
  6110                           ;UART.c: 83: if (_this->count > 0) {
  6111                           
  6112                           ;incstack = 0
  6113  00250E  EE20 F0CC          	lfsr	2,204
  6114  002512  5021               	movf	UART_buff_get@_this,w,c
  6115  002514  26D9               	addwf	fsr2l,f,c
  6116  002516  5022               	movf	UART_buff_get@_this+1,w,c
  6117  002518  22DA               	addwfc	fsr2h,f,c
  6118  00251A  0E01               	movlw	1
  6119  00251C  BEDB               	btfsc	plusw2,7,c
  6120  00251E  D03C               	goto	l5946
  6121  002520  0E01               	movlw	1
  6122  002522  50DB               	movf	plusw2,w,c
  6123  002524  E103               	bnz	u6090
  6124  002526  04DE               	decf	postinc2,w,c
  6125  002528  A0D8               	btfss	status,0,c
  6126  00252A  D036               	goto	l5946
  6127  00252C                     u6090:
  6128                           
  6129                           ;UART.c: 84: c = _this->buf[_this->tail];
  6130  00252C  EE20 F0CA          	lfsr	2,202
  6131  002530  5021               	movf	UART_buff_get@_this,w,c
  6132  002532  26D9               	addwf	fsr2l,f,c
  6133  002534  5022               	movf	UART_buff_get@_this+1,w,c
  6134  002536  22DA               	addwfc	fsr2h,f,c
  6135  002538  CFDE F023          	movff	postinc2,??_UART_buff_get
  6136  00253C  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  6137  002540  5023               	movf	??_UART_buff_get,w,c
  6138  002542  2421               	addwf	UART_buff_get@_this,w,c
  6139  002544  6ED9               	movwf	fsr2l,c
  6140  002546  5024               	movf	??_UART_buff_get+1,w,c
  6141  002548  2022               	addwfc	UART_buff_get@_this+1,w,c
  6142  00254A  6EDA               	movwf	fsr2h,c
  6143  00254C  50DF               	movf	indf2,w,c
  6144  00254E  6E25               	movwf	UART_buff_get@c,c
  6145                           
  6146                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  6147  002550  EE20 F0CA          	lfsr	2,202
  6148  002554  5021               	movf	UART_buff_get@_this,w,c
  6149  002556  26D9               	addwf	fsr2l,f,c
  6150  002558  5022               	movf	UART_buff_get@_this+1,w,c
  6151  00255A  22DA               	addwfc	fsr2h,f,c
  6152  00255C  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  6153  002560  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  6154  002564  0E00               	movlw	0
  6155  002566  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  6156  002568  0EC8               	movlw	200
  6157  00256A  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  6158  00256C  ECC1  F017         	call	_UART_buff_modulo_inc	;wreg free
  6159  002570  EE20 F0CA          	lfsr	2,202
  6160  002574  5021               	movf	UART_buff_get@_this,w,c
  6161  002576  26D9               	addwf	fsr2l,f,c
  6162  002578  5022               	movf	UART_buff_get@_this+1,w,c
  6163  00257A  22DA               	addwfc	fsr2h,f,c
  6164  00257C  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  6165  002580  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  6166                           
  6167                           ;UART.c: 86: --_this->count;
  6168  002584  EE20 F0CC          	lfsr	2,204
  6169  002588  5021               	movf	UART_buff_get@_this,w,c
  6170  00258A  26D9               	addwf	fsr2l,f,c
  6171  00258C  5022               	movf	UART_buff_get@_this+1,w,c
  6172  00258E  22DA               	addwfc	fsr2h,f,c
  6173  002590  06DE               	decf	postinc2,f,c
  6174  002592  0E00               	movlw	0
  6175  002594  5ADD               	subwfb	postdec2,f,c
  6176                           
  6177                           ;UART.c: 87: } else {
  6178  002596  D002               	goto	l1169
  6179  002598                     l5946:
  6180                           
  6181                           ;UART.c: 88: c = 0;
  6182  002598  0E00               	movlw	0
  6183  00259A  6E25               	movwf	UART_buff_get@c,c
  6184  00259C                     l1169:
  6185                           
  6186                           ;UART.c: 89: }
  6187                           ;UART.c: 90: return (c);
  6188  00259C  5025               	movf	UART_buff_get@c,w,c
  6189  00259E  0012               	return	
  6190  0025A0                     __end_of_UART_buff_get:
  6191                           	opt stack 0
  6192                           tosu	equ	0xFFF
  6193                           tosh	equ	0xFFE
  6194                           tosl	equ	0xFFD
  6195                           pclath	equ	0xFFA
  6196                           tblptru	equ	0xFF8
  6197                           tblptrh	equ	0xFF7
  6198                           tblptrl	equ	0xFF6
  6199                           tablat	equ	0xFF5
  6200                           prodh	equ	0xFF4
  6201                           prodl	equ	0xFF3
  6202                           intcon	equ	0xFF2
  6203                           postinc0	equ	0xFEE
  6204                           wreg	equ	0xFE8
  6205                           indf2	equ	0xFDF
  6206                           postinc2	equ	0xFDE
  6207                           postdec2	equ	0xFDD
  6208                           plusw2	equ	0xFDB
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _UART_buff_modulo_inc *****************
  6214 ;; Defined at:
  6215 ;;		line 106 in file "UART.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  value           2   26[COMRAM] const unsigned int 
  6218 ;;  modulus         2   28[COMRAM] const unsigned int 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  my_value        2   30[COMRAM] unsigned int 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  2   26[COMRAM] unsigned int 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6230 ;;      Params:         4       0       0       0       0       0       0
  6231 ;;      Locals:         2       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0
  6233 ;;      Totals:         6       0       0       0       0       0       0
  6234 ;;Total ram usage:        6 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    4
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_UART_buff_put
  6241 ;;		_UART_buff_get
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           	psect	text22
  6246  002F82                     __ptext22:
  6247                           	opt stack 0
  6248  002F82                     _UART_buff_modulo_inc:
  6249                           	opt stack 21
  6250                           
  6251                           ;UART.c: 107: unsigned int my_value = value + 1;
  6252                           
  6253                           ;incstack = 0
  6254  002F82  0E01               	movlw	1
  6255  002F84  241B               	addwf	UART_buff_modulo_inc@value,w,c
  6256  002F86  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6257  002F88  0E00               	movlw	0
  6258  002F8A  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  6259  002F8C  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6260                           
  6261                           ;UART.c: 108: if (my_value >= modulus) {
  6262  002F8E  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  6263  002F90  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  6264  002F92  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  6265  002F94  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  6266  002F96  A0D8               	btfss	status,0,c
  6267  002F98  D004               	goto	l5906
  6268                           
  6269                           ;UART.c: 109: my_value = 0;
  6270  002F9A  0E00               	movlw	0
  6271  002F9C  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6272  002F9E  0E00               	movlw	0
  6273  002FA0  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6274  002FA2                     l5906:
  6275                           
  6276                           ;UART.c: 110: }
  6277                           ;UART.c: 111: return (my_value);
  6278  002FA2  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  6279  002FA6  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  6280  002FAA  0012               	return	
  6281  002FAC                     __end_of_UART_buff_modulo_inc:
  6282                           	opt stack 0
  6283                           tosu	equ	0xFFF
  6284                           tosh	equ	0xFFE
  6285                           tosl	equ	0xFFD
  6286                           pclath	equ	0xFFA
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           prodh	equ	0xFF4
  6292                           prodl	equ	0xFF3
  6293                           intcon	equ	0xFF2
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           indf2	equ	0xFDF
  6297                           postinc2	equ	0xFDE
  6298                           postdec2	equ	0xFDD
  6299                           plusw2	equ	0xFDB
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function _Receive_available *****************
  6305 ;; Defined at:
  6306 ;;		line 122 in file "UART.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  2   28[COMRAM] int 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6320 ;;      Params:         2       0       0       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0
  6323 ;;      Totals:         2       0       0       0       0       0       0
  6324 ;;Total ram usage:        2 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    5
  6327 ;; This function calls:
  6328 ;;		_UART_buff_size
  6329 ;; This function is called by:
  6330 ;;		_SYSTEM_Initialize
  6331 ;;		_CRCcheck
  6332 ;;		_receiveData
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text23
  6337  003120                     __ptext23:
  6338                           	opt stack 0
  6339  003120                     _Receive_available:
  6340                           	opt stack 23
  6341                           
  6342                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  6343                           
  6344                           ;incstack = 0
  6345  003120  0E00               	movlw	low _input_buffer
  6346  003122  6E1B               	movwf	UART_buff_size@_this,c
  6347  003124  0E04               	movlw	high _input_buffer
  6348  003126  6E1C               	movwf	UART_buff_size@_this+1,c
  6349  003128  EC9B  F018         	call	_UART_buff_size	;wreg free
  6350  00312C  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  6351  003130  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  6352  003134  0012               	return	
  6353  003136                     __end_of_Receive_available:
  6354                           	opt stack 0
  6355                           tosu	equ	0xFFF
  6356                           tosh	equ	0xFFE
  6357                           tosl	equ	0xFFD
  6358                           pclath	equ	0xFFA
  6359                           tblptru	equ	0xFF8
  6360                           tblptrh	equ	0xFF7
  6361                           tblptrl	equ	0xFF6
  6362                           tablat	equ	0xFF5
  6363                           prodh	equ	0xFF4
  6364                           prodl	equ	0xFF3
  6365                           intcon	equ	0xFF2
  6366                           postinc0	equ	0xFEE
  6367                           wreg	equ	0xFE8
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           plusw2	equ	0xFDB
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8
  6375                           
  6376 ;; *************** function _UART_buff_size *****************
  6377 ;; Defined at:
  6378 ;;		line 102 in file "UART.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  6381 ;;		 -> output_buffer(206), input_buffer(206), 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;		None
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  2   26[COMRAM] int 
  6386 ;; Registers used:
  6387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6393 ;;      Params:         2       0       0       0       0       0       0
  6394 ;;      Locals:         0       0       0       0       0       0       0
  6395 ;;      Temps:          0       0       0       0       0       0       0
  6396 ;;      Totals:         2       0       0       0       0       0       0
  6397 ;;Total ram usage:        2 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; Hardware stack levels required when called:    4
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_Receive_available
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text24
  6408  003136                     __ptext24:
  6409                           	opt stack 0
  6410  003136                     _UART_buff_size:
  6411                           	opt stack 23
  6412                           
  6413                           ;UART.c: 103: return (_this->count);
  6414                           
  6415                           ;incstack = 0
  6416  003136  EE20 F0CC          	lfsr	2,204
  6417  00313A  501B               	movf	UART_buff_size@_this,w,c
  6418  00313C  26D9               	addwf	fsr2l,f,c
  6419  00313E  501C               	movf	UART_buff_size@_this+1,w,c
  6420  003140  22DA               	addwfc	fsr2h,f,c
  6421  003142  CFDE F01B          	movff	postinc2,?_UART_buff_size
  6422  003146  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  6423  00314A  0012               	return	
  6424  00314C                     __end_of_UART_buff_size:
  6425                           	opt stack 0
  6426                           tosu	equ	0xFFF
  6427                           tosh	equ	0xFFE
  6428                           tosl	equ	0xFFD
  6429                           pclath	equ	0xFFA
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           intcon	equ	0xFF2
  6437                           postinc0	equ	0xFEE
  6438                           wreg	equ	0xFE8
  6439                           indf2	equ	0xFDF
  6440                           postinc2	equ	0xFDE
  6441                           postdec2	equ	0xFDD
  6442                           plusw2	equ	0xFDB
  6443                           fsr2h	equ	0xFDA
  6444                           fsr2l	equ	0xFD9
  6445                           status	equ	0xFD8
  6446                           
  6447 ;; *************** function _CRC8 *****************
  6448 ;; Defined at:
  6449 ;;		line 35 in file "FastTransfer.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;  data            2   26[COMRAM] PTR const unsigned char 
  6452 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2531(3), receiveData@holder(3), rx_buffer(200), 
  6453 ;;		 -> ring_buffer(206), NULL(0), 
  6454 ;;  len             1   28[COMRAM] unsigned char 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  sum             1   29[COMRAM] unsigned char 
  6457 ;;  tempI           1   31[COMRAM] unsigned char 
  6458 ;;  extract         1   30[COMRAM] unsigned char 
  6459 ;;  crc             1   32[COMRAM] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      unsigned char 
  6462 ;; Registers used:
  6463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6469 ;;      Params:         3       0       0       0       0       0       0
  6470 ;;      Locals:         4       0       0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0
  6472 ;;      Totals:         7       0       0       0       0       0       0
  6473 ;;Total ram usage:        7 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    4
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_sendData
  6480 ;;		_receiveData
  6481 ;;		_CRCcheck
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text25
  6486  002C98                     __ptext25:
  6487                           	opt stack 0
  6488  002C98                     _CRC8:
  6489                           	opt stack 23
  6490                           
  6491                           ;FastTransfer.c: 36: unsigned char crc = 0x00;
  6492                           
  6493                           ;incstack = 0
  6494  002C98  0E00               	movlw	0
  6495  002C9A  6E21               	movwf	CRC8@crc,c
  6496                           
  6497                           ;FastTransfer.c: 37: while (len--) {
  6498  002C9C  D01C               	goto	l6028
  6499  002C9E                     l6012:
  6500                           
  6501                           ;FastTransfer.c: 38: unsigned char extract = *data++;
  6502  002C9E  C01B  FFD9         	movff	CRC8@data,fsr2l
  6503  002CA2  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  6504  002CA6  50DF               	movf	indf2,w,c
  6505  002CA8  6E1F               	movwf	CRC8@extract,c
  6506  002CAA  4A1B               	infsnz	CRC8@data,f,c
  6507  002CAC  2A1C               	incf	CRC8@data+1,f,c
  6508                           
  6509                           ;FastTransfer.c: 39: unsigned char tempI;
  6510                           ;FastTransfer.c: 40: for (tempI = 8; tempI; tempI--) {
  6511  002CAE  0E08               	movlw	8
  6512  002CB0  6E20               	movwf	CRC8@tempI,c
  6513  002CB2  D00E               	goto	l6026
  6514  002CB4                     l6018:
  6515                           
  6516                           ;FastTransfer.c: 41: unsigned char sum = (crc ^ extract) & 0x01;
  6517  002CB4  5021               	movf	CRC8@crc,w,c
  6518  002CB6  181F               	xorwf	CRC8@extract,w,c
  6519  002CB8  0B01               	andlw	1
  6520  002CBA  6E1E               	movwf	CRC8@sum,c
  6521                           
  6522                           ;FastTransfer.c: 42: crc >>= 1;
  6523  002CBC  90D8               	bcf	status,0,c
  6524  002CBE  3221               	rrcf	CRC8@crc,f,c
  6525                           
  6526                           ;FastTransfer.c: 43: if (sum) {
  6527  002CC0  501E               	movf	CRC8@sum,w,c
  6528  002CC2  B4D8               	btfsc	status,2,c
  6529  002CC4  D002               	goto	l1010
  6530                           
  6531                           ;FastTransfer.c: 44: crc ^= 0x8C;
  6532  002CC6  0E8C               	movlw	140
  6533  002CC8  1A21               	xorwf	CRC8@crc,f,c
  6534  002CCA                     l1010:
  6535                           
  6536                           ;FastTransfer.c: 45: }
  6537                           ;FastTransfer.c: 46: extract >>= 1;
  6538  002CCA  90D8               	bcf	status,0,c
  6539  002CCC  321F               	rrcf	CRC8@extract,f,c
  6540  002CCE  0620               	decf	CRC8@tempI,f,c
  6541  002CD0                     l6026:
  6542  002CD0  5020               	movf	CRC8@tempI,w,c
  6543  002CD2  A4D8               	btfss	status,2,c
  6544  002CD4  D7EF               	goto	l6018
  6545  002CD6                     l6028:
  6546  002CD6  061D               	decf	CRC8@len,f,c
  6547  002CD8  281D               	incf	CRC8@len,w,c
  6548  002CDA  A4D8               	btfss	status,2,c
  6549  002CDC  D7E0               	goto	l6012
  6550                           
  6551                           ;FastTransfer.c: 47: }
  6552                           ;FastTransfer.c: 48: }
  6553                           ;FastTransfer.c: 49: return crc;
  6554  002CDE  5021               	movf	CRC8@crc,w,c
  6555  002CE0  0012               	return	
  6556  002CE2                     __end_of_CRC8:
  6557                           	opt stack 0
  6558                           tosu	equ	0xFFF
  6559                           tosh	equ	0xFFE
  6560                           tosl	equ	0xFFD
  6561                           pclath	equ	0xFFA
  6562                           tblptru	equ	0xFF8
  6563                           tblptrh	equ	0xFF7
  6564                           tblptrl	equ	0xFF6
  6565                           tablat	equ	0xFF5
  6566                           prodh	equ	0xFF4
  6567                           prodl	equ	0xFF3
  6568                           intcon	equ	0xFF2
  6569                           postinc0	equ	0xFEE
  6570                           wreg	equ	0xFE8
  6571                           indf2	equ	0xFDF
  6572                           postinc2	equ	0xFDE
  6573                           postdec2	equ	0xFDD
  6574                           plusw2	equ	0xFDB
  6575                           fsr2h	equ	0xFDA
  6576                           fsr2l	equ	0xFD9
  6577                           status	equ	0xFD8
  6578                           
  6579 ;; *************** function _handleIndicators *****************
  6580 ;; Defined at:
  6581 ;;		line 36 in file "Communications.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  receivedIndi    2   36[COMRAM] int 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  i               2    0[BANK0 ] int 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;		None               void
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6595 ;;      Params:         2       0       0       0       0       0       0
  6596 ;;      Locals:         0       2       0       0       0       0       0
  6597 ;;      Temps:          3       0       0       0       0       0       0
  6598 ;;      Totals:         5       2       0       0       0       0       0
  6599 ;;Total ram usage:        7 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    6
  6602 ;; This function calls:
  6603 ;;		_SetLEDOut
  6604 ;; This function is called by:
  6605 ;;		_updateComms
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text26
  6610  0026BE                     __ptext26:
  6611                           	opt stack 0
  6612  0026BE                     _handleIndicators:
  6613                           	opt stack 23
  6614                           
  6615                           ;Communications.c: 37: static int oldIndicators = 0;
  6616                           ;Communications.c: 38: if (receivedIndicators != oldIndicators) {
  6617                           
  6618                           ;incstack = 0
  6619  0026BE  0100               	movlb	0	; () banked
  6620  0026C0  51DF               	movf	handleIndicators@oldIndicators& (0+255),w,b
  6621  0026C2  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  6622  0026C4  E105               	bnz	u7620
  6623  0026C6  0100               	movlb	0	; () banked
  6624  0026C8  51E0               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  6625  0026CA  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  6626  0026CC  B4D8               	btfsc	status,2,c
  6627  0026CE  0012               	return	
  6628  0026D0                     u7620:
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;Communications.c: 39: int i = 0;
  6632  0026D0  0E00               	movlw	0
  6633  0026D2  0100               	movlb	0	; () banked
  6634  0026D4  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  6635  0026D6  0E00               	movlw	0
  6636  0026D8  6FF2               	movwf	handleIndicators@i& (0+255),b
  6637                           
  6638                           ;Communications.c: 40: for (i = 0; i < 6; i++) {
  6639  0026DA  0E00               	movlw	0
  6640  0026DC  0100               	movlb	0	; () banked
  6641  0026DE  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  6642  0026E0  0E00               	movlw	0
  6643  0026E2  6FF2               	movwf	handleIndicators@i& (0+255),b
  6644                           
  6645                           ; BSR set to: 0
  6646  0026E4  0100               	movlb	0	; () banked
  6647  0026E6  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  6648  0026E8  D008               	goto	l6770
  6649  0026EA  0100               	movlb	0	; () banked
  6650  0026EC  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  6651  0026EE  E126               	bnz	l925
  6652  0026F0  0E06               	movlw	6
  6653  0026F2  0100               	movlb	0	; () banked
  6654  0026F4  5DF2               	subwf	handleIndicators@i& (0+255),w,b
  6655  0026F6  B0D8               	btfsc	status,0,c
  6656  0026F8  D021               	goto	l925
  6657  0026FA                     l6770:
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;Communications.c: 41: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  6661  0026FA  C0F2  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  6662  0026FE  C0F3  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  6663  002702  C0F2  F027         	movff	handleIndicators@i,??_handleIndicators
  6664  002706  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  6665  00270A  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  6666  00270E  2A27               	incf	??_handleIndicators,f,c
  6667  002710  D003               	goto	u7644
  6668  002712                     u7645:
  6669  002712  3429               	rlcf	??_handleIndicators+2,w,c
  6670  002714  3229               	rrcf	??_handleIndicators+2,f,c
  6671  002716  3228               	rrcf	??_handleIndicators+1,f,c
  6672  002718                     u7644:
  6673  002718  2E27               	decfsz	??_handleIndicators,f,c
  6674  00271A  D7FB               	goto	u7645
  6675  00271C  0E01               	movlw	1
  6676  00271E  1428               	andwf	??_handleIndicators+1,w,c
  6677  002720  6E21               	movwf	SetLEDOut@state,c
  6678  002722  6A22               	clrf	SetLEDOut@state+1,c
  6679  002724  EC37  F007         	call	_SetLEDOut	;wreg free
  6680  002728  0100               	movlb	0	; () banked
  6681  00272A  4BF2               	infsnz	handleIndicators@i& (0+255),f,b
  6682  00272C  2BF3               	incf	(handleIndicators@i+1)& (0+255),f,b
  6683                           
  6684                           ; BSR set to: 0
  6685  00272E  0100               	movlb	0	; () banked
  6686  002730  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  6687  002732  D7E3               	goto	l6770
  6688  002734  0100               	movlb	0	; () banked
  6689  002736  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  6690  002738  E101               	bnz	u7650
  6691  00273A  D7DA               	goto	L2
  6692  00273C                     u7650:
  6693  00273C                     l925:
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;Communications.c: 42: }
  6697                           ;Communications.c: 43: oldIndicators = receivedIndicators;
  6698  00273C  C025  F0DF         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  6699  002740  C026  F0E0         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  6700  002744  0012               	return	
  6701  002746                     __end_of_handleIndicators:
  6702                           	opt stack 0
  6703                           tosu	equ	0xFFF
  6704                           tosh	equ	0xFFE
  6705                           tosl	equ	0xFFD
  6706                           pclath	equ	0xFFA
  6707                           tblptru	equ	0xFF8
  6708                           tblptrh	equ	0xFF7
  6709                           tblptrl	equ	0xFF6
  6710                           tablat	equ	0xFF5
  6711                           prodh	equ	0xFF4
  6712                           prodl	equ	0xFF3
  6713                           intcon	equ	0xFF2
  6714                           postinc0	equ	0xFEE
  6715                           wreg	equ	0xFE8
  6716                           indf2	equ	0xFDF
  6717                           postinc2	equ	0xFDE
  6718                           postdec2	equ	0xFDD
  6719                           plusw2	equ	0xFDB
  6720                           fsr2h	equ	0xFDA
  6721                           fsr2l	equ	0xFD9
  6722                           status	equ	0xFD8
  6723                           
  6724 ;; *************** function _SetLEDOut *****************
  6725 ;; Defined at:
  6726 ;;		line 25 in file "IO.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  lednum          2   30[COMRAM] int 
  6729 ;;  state           2   32[COMRAM] int 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;		None               void
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6741 ;;      Params:         4       0       0       0       0       0       0
  6742 ;;      Locals:         0       0       0       0       0       0       0
  6743 ;;      Temps:          2       0       0       0       0       0       0
  6744 ;;      Totals:         6       0       0       0       0       0       0
  6745 ;;Total ram usage:        6 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    5
  6748 ;; This function calls:
  6749 ;;		_Off_Led
  6750 ;;		_setLED
  6751 ;; This function is called by:
  6752 ;;		_handleIndicators
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text27
  6757  000E6E                     __ptext27:
  6758                           	opt stack 0
  6759  000E6E                     _SetLEDOut:
  6760                           	opt stack 23
  6761                           
  6762                           ;IO.c: 26: switch (lednum) {
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;incstack = 0
  6766  000E6E  D138               	goto	l6290
  6767  000E70                     l6156:
  6768                           
  6769                           ;IO.c: 28: if (state == 1) {
  6770  000E70  0421               	decf	SetLEDOut@state,w,c
  6771  000E72  1022               	iorwf	SetLEDOut@state+1,w,c
  6772  000E74  A4D8               	btfss	status,2,c
  6773  000E76  D00D               	goto	l6164
  6774                           
  6775                           ;IO.c: 29: Off_Led(0);
  6776  000E78  0E00               	movlw	0
  6777  000E7A  6E1C               	movwf	Off_Led@led+1,c
  6778  000E7C  0E00               	movlw	0
  6779  000E7E  6E1B               	movwf	Off_Led@led,c
  6780  000E80  EC7F  F00F         	call	_Off_Led	;wreg free
  6781                           
  6782                           ;IO.c: 30: do { LATC1 = 1; } while(0);
  6783  000E84  828B               	bsf	3979,1,c	;volatile
  6784                           
  6785                           ;IO.c: 31: LED_array[0] = 1;
  6786  000E86  0E00               	movlw	0
  6787  000E88  0100               	movlb	0	; () banked
  6788  000E8A  6F89               	movwf	(_LED_array+1)& (0+255),b
  6789  000E8C  0E01               	movlw	1
  6790  000E8E  6F88               	movwf	_LED_array& (0+255),b
  6791                           
  6792                           ;IO.c: 32: } else if (state == 0) {
  6793  000E90  0012               	return	
  6794  000E92                     l6164:
  6795  000E92  5021               	movf	SetLEDOut@state,w,c
  6796  000E94  1022               	iorwf	SetLEDOut@state+1,w,c
  6797  000E96  A4D8               	btfss	status,2,c
  6798  000E98  D00D               	goto	l6172
  6799                           
  6800                           ;IO.c: 33: Off_Led(0);
  6801  000E9A  0E00               	movlw	0
  6802  000E9C  6E1C               	movwf	Off_Led@led+1,c
  6803  000E9E  0E00               	movlw	0
  6804  000EA0  6E1B               	movwf	Off_Led@led,c
  6805  000EA2  EC7F  F00F         	call	_Off_Led	;wreg free
  6806                           
  6807                           ;IO.c: 34: do { LATC1 = 0; } while(0);
  6808  000EA6  928B               	bcf	3979,1,c	;volatile
  6809                           
  6810                           ;IO.c: 35: LED_array[0] = 0;
  6811  000EA8  0E00               	movlw	0
  6812  000EAA  0100               	movlb	0	; () banked
  6813  000EAC  6F89               	movwf	(_LED_array+1)& (0+255),b
  6814  000EAE  0E00               	movlw	0
  6815  000EB0  6F88               	movwf	_LED_array& (0+255),b
  6816                           
  6817                           ;IO.c: 36: }
  6818  000EB2  0012               	return	
  6819  000EB4                     l6172:
  6820                           
  6821                           ;IO.c: 37: else if (state == 2) {
  6822  000EB4  0E02               	movlw	2
  6823  000EB6  1821               	xorwf	SetLEDOut@state,w,c
  6824  000EB8  1022               	iorwf	SetLEDOut@state+1,w,c
  6825  000EBA  A4D8               	btfss	status,2,c
  6826  000EBC  0012               	return	
  6827                           
  6828                           ;IO.c: 39: do { LATC1 = 0; } while(0);
  6829  000EBE  928B               	bcf	3979,1,c	;volatile
  6830                           
  6831                           ;IO.c: 40: setLED(0);
  6832  000EC0  0E00               	movlw	0
  6833  000EC2  6E1C               	movwf	setLED@led+1,c
  6834  000EC4  0E00               	movlw	0
  6835  000EC6  6E1B               	movwf	setLED@led,c
  6836  000EC8  ECE4  F00F         	call	_setLED	;wreg free
  6837                           
  6838                           ;IO.c: 41: LED_array[0] = 2;
  6839  000ECC  0E00               	movlw	0
  6840  000ECE  0100               	movlb	0	; () banked
  6841  000ED0  6F89               	movwf	(_LED_array+1)& (0+255),b
  6842  000ED2  0E02               	movlw	2
  6843  000ED4  6F88               	movwf	_LED_array& (0+255),b
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;IO.c: 43: }
  6847                           ;IO.c: 44: break;
  6848                           
  6849                           ; BSR set to: 0
  6850                           
  6851                           ; BSR set to: 0
  6852  000ED6  0012               	return	
  6853  000ED8                     l6178:
  6854                           
  6855                           ;IO.c: 47: if (state == 1) {
  6856  000ED8  0421               	decf	SetLEDOut@state,w,c
  6857  000EDA  1022               	iorwf	SetLEDOut@state+1,w,c
  6858  000EDC  A4D8               	btfss	status,2,c
  6859  000EDE  D00D               	goto	l6186
  6860                           
  6861                           ;IO.c: 48: Off_Led(1);
  6862  000EE0  0E00               	movlw	0
  6863  000EE2  6E1C               	movwf	Off_Led@led+1,c
  6864  000EE4  0E01               	movlw	1
  6865  000EE6  6E1B               	movwf	Off_Led@led,c
  6866  000EE8  EC7F  F00F         	call	_Off_Led	;wreg free
  6867                           
  6868                           ;IO.c: 49: do { LATA6 = 1; } while(0);
  6869  000EEC  8C89               	bsf	3977,6,c	;volatile
  6870                           
  6871                           ;IO.c: 50: LED_array[1] = 1;
  6872  000EEE  0E00               	movlw	0
  6873  000EF0  0100               	movlb	0	; () banked
  6874  000EF2  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6875  000EF4  0E01               	movlw	1
  6876  000EF6  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6877                           
  6878                           ;IO.c: 51: } else if (state == 0) {
  6879  000EF8  0012               	return	
  6880  000EFA                     l6186:
  6881  000EFA  5021               	movf	SetLEDOut@state,w,c
  6882  000EFC  1022               	iorwf	SetLEDOut@state+1,w,c
  6883  000EFE  A4D8               	btfss	status,2,c
  6884  000F00  D00D               	goto	l6194
  6885                           
  6886                           ;IO.c: 52: Off_Led(1);
  6887  000F02  0E00               	movlw	0
  6888  000F04  6E1C               	movwf	Off_Led@led+1,c
  6889  000F06  0E01               	movlw	1
  6890  000F08  6E1B               	movwf	Off_Led@led,c
  6891  000F0A  EC7F  F00F         	call	_Off_Led	;wreg free
  6892                           
  6893                           ;IO.c: 53: do { LATA6 = 0; } while(0);
  6894  000F0E  9C89               	bcf	3977,6,c	;volatile
  6895                           
  6896                           ;IO.c: 54: LED_array[1] = 0;
  6897  000F10  0E00               	movlw	0
  6898  000F12  0100               	movlb	0	; () banked
  6899  000F14  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6900  000F16  0E00               	movlw	0
  6901  000F18  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6902                           
  6903                           ;IO.c: 55: } else if (state == 2) {
  6904  000F1A  0012               	return	
  6905  000F1C                     l6194:
  6906  000F1C  0E02               	movlw	2
  6907  000F1E  1821               	xorwf	SetLEDOut@state,w,c
  6908  000F20  1022               	iorwf	SetLEDOut@state+1,w,c
  6909  000F22  A4D8               	btfss	status,2,c
  6910  000F24  0012               	return	
  6911                           
  6912                           ;IO.c: 57: do { LATA6 = 0; } while(0);
  6913  000F26  9C89               	bcf	3977,6,c	;volatile
  6914                           
  6915                           ;IO.c: 58: setLED(1);
  6916  000F28  0E00               	movlw	0
  6917  000F2A  6E1C               	movwf	setLED@led+1,c
  6918  000F2C  0E01               	movlw	1
  6919  000F2E  6E1B               	movwf	setLED@led,c
  6920  000F30  ECE4  F00F         	call	_setLED	;wreg free
  6921                           
  6922                           ;IO.c: 59: LED_array[1] = 2;
  6923  000F34  0E00               	movlw	0
  6924  000F36  0100               	movlb	0	; () banked
  6925  000F38  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6926  000F3A  0E02               	movlw	2
  6927  000F3C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;IO.c: 61: }
  6931                           ;IO.c: 62: break;
  6932                           
  6933                           ; BSR set to: 0
  6934                           
  6935                           ; BSR set to: 0
  6936  000F3E  0012               	return	
  6937  000F40                     l6200:
  6938                           
  6939                           ;IO.c: 64: if (state == 1) {
  6940  000F40  0421               	decf	SetLEDOut@state,w,c
  6941  000F42  1022               	iorwf	SetLEDOut@state+1,w,c
  6942  000F44  A4D8               	btfss	status,2,c
  6943  000F46  D00D               	goto	l6208
  6944                           
  6945                           ;IO.c: 65: Off_Led(2);
  6946  000F48  0E00               	movlw	0
  6947  000F4A  6E1C               	movwf	Off_Led@led+1,c
  6948  000F4C  0E02               	movlw	2
  6949  000F4E  6E1B               	movwf	Off_Led@led,c
  6950  000F50  EC7F  F00F         	call	_Off_Led	;wreg free
  6951                           
  6952                           ;IO.c: 66: do { LATA7 = 1; } while(0);
  6953  000F54  8E89               	bsf	3977,7,c	;volatile
  6954                           
  6955                           ;IO.c: 67: LED_array[2] = 1;
  6956  000F56  0E00               	movlw	0
  6957  000F58  0100               	movlb	0	; () banked
  6958  000F5A  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6959  000F5C  0E01               	movlw	1
  6960  000F5E  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6961                           
  6962                           ;IO.c: 68: } else if (state == 0) {
  6963  000F60  0012               	return	
  6964  000F62                     l6208:
  6965  000F62  5021               	movf	SetLEDOut@state,w,c
  6966  000F64  1022               	iorwf	SetLEDOut@state+1,w,c
  6967  000F66  A4D8               	btfss	status,2,c
  6968  000F68  D00D               	goto	l6216
  6969                           
  6970                           ;IO.c: 69: Off_Led(2);
  6971  000F6A  0E00               	movlw	0
  6972  000F6C  6E1C               	movwf	Off_Led@led+1,c
  6973  000F6E  0E02               	movlw	2
  6974  000F70  6E1B               	movwf	Off_Led@led,c
  6975  000F72  EC7F  F00F         	call	_Off_Led	;wreg free
  6976                           
  6977                           ;IO.c: 70: do { LATA7 = 0; } while(0);
  6978  000F76  9E89               	bcf	3977,7,c	;volatile
  6979                           
  6980                           ;IO.c: 71: LED_array[2] = 0;
  6981  000F78  0E00               	movlw	0
  6982  000F7A  0100               	movlb	0	; () banked
  6983  000F7C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6984  000F7E  0E00               	movlw	0
  6985  000F80  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6986                           
  6987                           ;IO.c: 72: } else if (state == 2) {
  6988  000F82  0012               	return	
  6989  000F84                     l6216:
  6990  000F84  0E02               	movlw	2
  6991  000F86  1821               	xorwf	SetLEDOut@state,w,c
  6992  000F88  1022               	iorwf	SetLEDOut@state+1,w,c
  6993  000F8A  A4D8               	btfss	status,2,c
  6994  000F8C  0012               	return	
  6995                           
  6996                           ;IO.c: 74: do { LATA7 = 0; } while(0);
  6997  000F8E  9E89               	bcf	3977,7,c	;volatile
  6998                           
  6999                           ;IO.c: 75: setLED(2);
  7000  000F90  0E00               	movlw	0
  7001  000F92  6E1C               	movwf	setLED@led+1,c
  7002  000F94  0E02               	movlw	2
  7003  000F96  6E1B               	movwf	setLED@led,c
  7004  000F98  ECE4  F00F         	call	_setLED	;wreg free
  7005                           
  7006                           ;IO.c: 77: LED_array[2] = 2;
  7007  000F9C  0E00               	movlw	0
  7008  000F9E  0100               	movlb	0	; () banked
  7009  000FA0  6F8D               	movwf	(_LED_array+5)& (0+255),b
  7010  000FA2  0E02               	movlw	2
  7011  000FA4  6F8C               	movwf	(_LED_array+4)& (0+255),b
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;IO.c: 79: }
  7015                           ;IO.c: 82: break;
  7016                           
  7017                           ; BSR set to: 0
  7018                           
  7019                           ; BSR set to: 0
  7020  000FA6  0012               	return	
  7021  000FA8                     l6222:
  7022                           
  7023                           ;IO.c: 85: if (state == 1) {
  7024  000FA8  0421               	decf	SetLEDOut@state,w,c
  7025  000FAA  1022               	iorwf	SetLEDOut@state+1,w,c
  7026  000FAC  A4D8               	btfss	status,2,c
  7027  000FAE  D00D               	goto	l6230
  7028                           
  7029                           ;IO.c: 86: Off_Led(3);
  7030  000FB0  0E00               	movlw	0
  7031  000FB2  6E1C               	movwf	Off_Led@led+1,c
  7032  000FB4  0E03               	movlw	3
  7033  000FB6  6E1B               	movwf	Off_Led@led,c
  7034  000FB8  EC7F  F00F         	call	_Off_Led	;wreg free
  7035                           
  7036                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  7037  000FBC  848D               	bsf	3981,2,c	;volatile
  7038                           
  7039                           ;IO.c: 88: LED_array[3] = 1;
  7040  000FBE  0E00               	movlw	0
  7041  000FC0  0100               	movlb	0	; () banked
  7042  000FC2  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7043  000FC4  0E01               	movlw	1
  7044  000FC6  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7045                           
  7046                           ;IO.c: 89: } else if (state == 0) {
  7047  000FC8  0012               	return	
  7048  000FCA                     l6230:
  7049  000FCA  5021               	movf	SetLEDOut@state,w,c
  7050  000FCC  1022               	iorwf	SetLEDOut@state+1,w,c
  7051  000FCE  A4D8               	btfss	status,2,c
  7052  000FD0  D00D               	goto	l6238
  7053                           
  7054                           ;IO.c: 90: Off_Led(3);
  7055  000FD2  0E00               	movlw	0
  7056  000FD4  6E1C               	movwf	Off_Led@led+1,c
  7057  000FD6  0E03               	movlw	3
  7058  000FD8  6E1B               	movwf	Off_Led@led,c
  7059  000FDA  EC7F  F00F         	call	_Off_Led	;wreg free
  7060                           
  7061                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  7062  000FDE  948D               	bcf	3981,2,c	;volatile
  7063                           
  7064                           ;IO.c: 92: LED_array[3] = 0;
  7065  000FE0  0E00               	movlw	0
  7066  000FE2  0100               	movlb	0	; () banked
  7067  000FE4  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7068  000FE6  0E00               	movlw	0
  7069  000FE8  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7070                           
  7071                           ;IO.c: 93: }
  7072  000FEA  0012               	return	
  7073  000FEC                     l6238:
  7074                           
  7075                           ;IO.c: 94: else if (state == 2) {
  7076  000FEC  0E02               	movlw	2
  7077  000FEE  1821               	xorwf	SetLEDOut@state,w,c
  7078  000FF0  1022               	iorwf	SetLEDOut@state+1,w,c
  7079  000FF2  A4D8               	btfss	status,2,c
  7080  000FF4  0012               	return	
  7081                           
  7082                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  7083  000FF6  948D               	bcf	3981,2,c	;volatile
  7084                           
  7085                           ;IO.c: 96: setLED(3);
  7086  000FF8  0E00               	movlw	0
  7087  000FFA  6E1C               	movwf	setLED@led+1,c
  7088  000FFC  0E03               	movlw	3
  7089  000FFE  6E1B               	movwf	setLED@led,c
  7090  001000  ECE4  F00F         	call	_setLED	;wreg free
  7091                           
  7092                           ;IO.c: 97: LED_array[3] = 2;
  7093  001004  0E00               	movlw	0
  7094  001006  0100               	movlb	0	; () banked
  7095  001008  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7096  00100A  0E02               	movlw	2
  7097  00100C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;IO.c: 99: }
  7101                           ;IO.c: 101: break;
  7102                           
  7103                           ; BSR set to: 0
  7104                           
  7105                           ; BSR set to: 0
  7106  00100E  0012               	return	
  7107  001010                     l6244:
  7108                           
  7109                           ;IO.c: 103: if (state == 1) {
  7110  001010  0421               	decf	SetLEDOut@state,w,c
  7111  001012  1022               	iorwf	SetLEDOut@state+1,w,c
  7112  001014  A4D8               	btfss	status,2,c
  7113  001016  D00D               	goto	l6252
  7114                           
  7115                           ;IO.c: 104: Off_Led(4);
  7116  001018  0E00               	movlw	0
  7117  00101A  6E1C               	movwf	Off_Led@led+1,c
  7118  00101C  0E04               	movlw	4
  7119  00101E  6E1B               	movwf	Off_Led@led,c
  7120  001020  EC7F  F00F         	call	_Off_Led	;wreg free
  7121                           
  7122                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  7123  001024  828D               	bsf	3981,1,c	;volatile
  7124                           
  7125                           ;IO.c: 106: LED_array[4] = 1;
  7126  001026  0E00               	movlw	0
  7127  001028  0100               	movlb	0	; () banked
  7128  00102A  6F91               	movwf	(_LED_array+9)& (0+255),b
  7129  00102C  0E01               	movlw	1
  7130  00102E  6F90               	movwf	(_LED_array+8)& (0+255),b
  7131                           
  7132                           ;IO.c: 107: } else if (state == 0) {
  7133  001030  0012               	return	
  7134  001032                     l6252:
  7135  001032  5021               	movf	SetLEDOut@state,w,c
  7136  001034  1022               	iorwf	SetLEDOut@state+1,w,c
  7137  001036  A4D8               	btfss	status,2,c
  7138  001038  D00D               	goto	l6260
  7139                           
  7140                           ;IO.c: 108: Off_Led(4);
  7141  00103A  0E00               	movlw	0
  7142  00103C  6E1C               	movwf	Off_Led@led+1,c
  7143  00103E  0E04               	movlw	4
  7144  001040  6E1B               	movwf	Off_Led@led,c
  7145  001042  EC7F  F00F         	call	_Off_Led	;wreg free
  7146                           
  7147                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  7148  001046  928D               	bcf	3981,1,c	;volatile
  7149                           
  7150                           ;IO.c: 110: LED_array[4] = 0;
  7151  001048  0E00               	movlw	0
  7152  00104A  0100               	movlb	0	; () banked
  7153  00104C  6F91               	movwf	(_LED_array+9)& (0+255),b
  7154  00104E  0E00               	movlw	0
  7155  001050  6F90               	movwf	(_LED_array+8)& (0+255),b
  7156                           
  7157                           ;IO.c: 111: }
  7158  001052  0012               	return	
  7159  001054                     l6260:
  7160                           
  7161                           ;IO.c: 112: else if (state == 2) {
  7162  001054  0E02               	movlw	2
  7163  001056  1821               	xorwf	SetLEDOut@state,w,c
  7164  001058  1022               	iorwf	SetLEDOut@state+1,w,c
  7165  00105A  A4D8               	btfss	status,2,c
  7166  00105C  0012               	return	
  7167                           
  7168                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  7169  00105E  928D               	bcf	3981,1,c	;volatile
  7170                           
  7171                           ;IO.c: 114: setLED(4);
  7172  001060  0E00               	movlw	0
  7173  001062  6E1C               	movwf	setLED@led+1,c
  7174  001064  0E04               	movlw	4
  7175  001066  6E1B               	movwf	setLED@led,c
  7176  001068  ECE4  F00F         	call	_setLED	;wreg free
  7177                           
  7178                           ;IO.c: 115: LED_array[4] = 2;
  7179  00106C  0E00               	movlw	0
  7180  00106E  0100               	movlb	0	; () banked
  7181  001070  6F91               	movwf	(_LED_array+9)& (0+255),b
  7182  001072  0E02               	movlw	2
  7183  001074  6F90               	movwf	(_LED_array+8)& (0+255),b
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;IO.c: 116: }
  7187                           ;IO.c: 118: break;
  7188                           
  7189                           ; BSR set to: 0
  7190                           
  7191                           ; BSR set to: 0
  7192  001076  0012               	return	
  7193  001078                     l6266:
  7194                           
  7195                           ;IO.c: 120: if (state == 1) {
  7196  001078  0421               	decf	SetLEDOut@state,w,c
  7197  00107A  1022               	iorwf	SetLEDOut@state+1,w,c
  7198  00107C  A4D8               	btfss	status,2,c
  7199  00107E  D00D               	goto	l6274
  7200                           
  7201                           ;IO.c: 121: Off_Led(5);
  7202  001080  0E00               	movlw	0
  7203  001082  6E1C               	movwf	Off_Led@led+1,c
  7204  001084  0E05               	movlw	5
  7205  001086  6E1B               	movwf	Off_Led@led,c
  7206  001088  EC7F  F00F         	call	_Off_Led	;wreg free
  7207                           
  7208                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  7209  00108C  808D               	bsf	3981,0,c	;volatile
  7210                           
  7211                           ;IO.c: 123: LED_array[5] = 1;
  7212  00108E  0E00               	movlw	0
  7213  001090  0100               	movlb	0	; () banked
  7214  001092  6F93               	movwf	(_LED_array+11)& (0+255),b
  7215  001094  0E01               	movlw	1
  7216  001096  6F92               	movwf	(_LED_array+10)& (0+255),b
  7217                           
  7218                           ;IO.c: 124: } else if (state == 0) {
  7219  001098  0012               	return	
  7220  00109A                     l6274:
  7221  00109A  5021               	movf	SetLEDOut@state,w,c
  7222  00109C  1022               	iorwf	SetLEDOut@state+1,w,c
  7223  00109E  A4D8               	btfss	status,2,c
  7224  0010A0  D00D               	goto	l6282
  7225                           
  7226                           ;IO.c: 125: Off_Led(5);
  7227  0010A2  0E00               	movlw	0
  7228  0010A4  6E1C               	movwf	Off_Led@led+1,c
  7229  0010A6  0E05               	movlw	5
  7230  0010A8  6E1B               	movwf	Off_Led@led,c
  7231  0010AA  EC7F  F00F         	call	_Off_Led	;wreg free
  7232                           
  7233                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  7234  0010AE  908D               	bcf	3981,0,c	;volatile
  7235                           
  7236                           ;IO.c: 127: LED_array[5] = 0;
  7237  0010B0  0E00               	movlw	0
  7238  0010B2  0100               	movlb	0	; () banked
  7239  0010B4  6F93               	movwf	(_LED_array+11)& (0+255),b
  7240  0010B6  0E00               	movlw	0
  7241  0010B8  6F92               	movwf	(_LED_array+10)& (0+255),b
  7242                           
  7243                           ;IO.c: 128: }
  7244  0010BA  0012               	return	
  7245  0010BC                     l6282:
  7246                           
  7247                           ;IO.c: 129: else if (state == 2) {
  7248  0010BC  0E02               	movlw	2
  7249  0010BE  1821               	xorwf	SetLEDOut@state,w,c
  7250  0010C0  1022               	iorwf	SetLEDOut@state+1,w,c
  7251  0010C2  A4D8               	btfss	status,2,c
  7252  0010C4  0012               	return	
  7253                           
  7254                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  7255  0010C6  908D               	bcf	3981,0,c	;volatile
  7256                           
  7257                           ;IO.c: 131: setLED(5);
  7258  0010C8  0E00               	movlw	0
  7259  0010CA  6E1C               	movwf	setLED@led+1,c
  7260  0010CC  0E05               	movlw	5
  7261  0010CE  6E1B               	movwf	setLED@led,c
  7262  0010D0  ECE4  F00F         	call	_setLED	;wreg free
  7263                           
  7264                           ;IO.c: 132: LED_array[5] = 2;
  7265  0010D4  0E00               	movlw	0
  7266  0010D6  0100               	movlb	0	; () banked
  7267  0010D8  6F93               	movwf	(_LED_array+11)& (0+255),b
  7268  0010DA  0E02               	movlw	2
  7269  0010DC  6F92               	movwf	(_LED_array+10)& (0+255),b
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;IO.c: 138: }
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;IO.c: 134: }
  7276                           ;IO.c: 137: break;
  7277                           
  7278                           ; BSR set to: 0
  7279                           
  7280                           ; BSR set to: 0
  7281  0010DE  0012               	return	
  7282  0010E0                     l6290:
  7283  0010E0  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  7284  0010E4  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  7285                           
  7286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7287                           ; Switch size 1, requested type "space"
  7288                           ; Number of cases is 1, Range of values is 0 to 0
  7289                           ; switch strategies available:
  7290                           ; Name         Instructions Cycles
  7291                           ; simple_byte            4     3 (average)
  7292                           ;	Chosen strategy is simple_byte
  7293  0010E8  5024               	movf	??_SetLEDOut+1,w,c
  7294  0010EA  0A00               	xorlw	0	; case 0
  7295  0010EC  A4D8               	btfss	status,2,c
  7296  0010EE  0012               	return	
  7297                           
  7298                           ; Switch size 1, requested type "space"
  7299                           ; Number of cases is 6, Range of values is 0 to 5
  7300                           ; switch strategies available:
  7301                           ; Name         Instructions Cycles
  7302                           ; simple_byte           19    10 (average)
  7303                           ;	Chosen strategy is simple_byte
  7304  0010F0  5023               	movf	??_SetLEDOut,w,c
  7305  0010F2  0A00               	xorlw	0	; case 0
  7306  0010F4  B4D8               	btfsc	status,2,c
  7307  0010F6  D6BC               	goto	l6156
  7308  0010F8  0A01               	xorlw	1	; case 1
  7309  0010FA  B4D8               	btfsc	status,2,c
  7310  0010FC  D6ED               	goto	l6178
  7311  0010FE  0A03               	xorlw	3	; case 2
  7312  001100  B4D8               	btfsc	status,2,c
  7313  001102  D71E               	goto	l6200
  7314  001104  0A01               	xorlw	1	; case 3
  7315  001106  B4D8               	btfsc	status,2,c
  7316  001108  D74F               	goto	l6222
  7317  00110A  0A07               	xorlw	7	; case 4
  7318  00110C  B4D8               	btfsc	status,2,c
  7319  00110E  D780               	goto	l6244
  7320  001110  0A01               	xorlw	1	; case 5
  7321  001112  A4D8               	btfss	status,2,c
  7322  001114  0012               	return	
  7323  001116  D7B0               	goto	l6266
  7324  001118                     __end_of_SetLEDOut:
  7325                           	opt stack 0
  7326                           tosu	equ	0xFFF
  7327                           tosh	equ	0xFFE
  7328                           tosl	equ	0xFFD
  7329                           pclath	equ	0xFFA
  7330                           tblptru	equ	0xFF8
  7331                           tblptrh	equ	0xFF7
  7332                           tblptrl	equ	0xFF6
  7333                           tablat	equ	0xFF5
  7334                           prodh	equ	0xFF4
  7335                           prodl	equ	0xFF3
  7336                           intcon	equ	0xFF2
  7337                           postinc0	equ	0xFEE
  7338                           wreg	equ	0xFE8
  7339                           indf2	equ	0xFDF
  7340                           postinc2	equ	0xFDE
  7341                           postdec2	equ	0xFDD
  7342                           plusw2	equ	0xFDB
  7343                           fsr2h	equ	0xFDA
  7344                           fsr2l	equ	0xFD9
  7345                           status	equ	0xFD8
  7346                           
  7347 ;; *************** function _setLED *****************
  7348 ;; Defined at:
  7349 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  led             2   26[COMRAM] int 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;		None               void
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7363 ;;      Params:         2       0       0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0
  7365 ;;      Temps:          2       0       0       0       0       0       0
  7366 ;;      Totals:         4       0       0       0       0       0       0
  7367 ;;Total ram usage:        4 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    4
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_SetLEDOut
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text28
  7378  001FC8                     __ptext28:
  7379                           	opt stack 0
  7380  001FC8                     _setLED:
  7381                           	opt stack 23
  7382                           
  7383                           ;tmr2.c: 203: switch (led){
  7384                           
  7385                           ;incstack = 0
  7386  001FC8  D042               	goto	l5970
  7387  001FCA                     l5956:
  7388                           
  7389                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  7390  001FCA  0E00               	movlw	0
  7391  001FCC  0100               	movlb	0	; () banked
  7392  001FCE  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7393  001FD0  0E01               	movlw	1
  7394  001FD2  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7395                           
  7396                           ;tmr2.c: 206: LEDState[0]=0;
  7397  001FD4  0E00               	movlw	0
  7398  001FD6  0100               	movlb	0	; () banked
  7399  001FD8  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7400  001FDA  0E00               	movlw	0
  7401  001FDC  6FA4               	movwf	_LEDState& (0+255),b
  7402                           
  7403                           ;tmr2.c: 207: break;
  7404  001FDE  0012               	return	
  7405  001FE0                     l5958:
  7406                           
  7407                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  7408  001FE0  0E00               	movlw	0
  7409  001FE2  0100               	movlb	0	; () banked
  7410  001FE4  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7411  001FE6  0E01               	movlw	1
  7412  001FE8  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7413                           
  7414                           ;tmr2.c: 210: LEDState[1]=0;
  7415  001FEA  0E00               	movlw	0
  7416  001FEC  0100               	movlb	0	; () banked
  7417  001FEE  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7418  001FF0  0E00               	movlw	0
  7419  001FF2  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7420                           
  7421                           ;tmr2.c: 211: break;
  7422  001FF4  0012               	return	
  7423  001FF6                     l5960:
  7424                           
  7425                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  7426  001FF6  0E00               	movlw	0
  7427  001FF8  0100               	movlb	0	; () banked
  7428  001FFA  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7429  001FFC  0E01               	movlw	1
  7430  001FFE  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7431                           
  7432                           ;tmr2.c: 214: LEDState[2]=0;
  7433  002000  0E00               	movlw	0
  7434  002002  0100               	movlb	0	; () banked
  7435  002004  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7436  002006  0E00               	movlw	0
  7437  002008  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7438                           
  7439                           ;tmr2.c: 215: break;
  7440  00200A  0012               	return	
  7441  00200C                     l5962:
  7442                           
  7443                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  7444  00200C  0E00               	movlw	0
  7445  00200E  0100               	movlb	0	; () banked
  7446  002010  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7447  002012  0E01               	movlw	1
  7448  002014  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7449                           
  7450                           ;tmr2.c: 218: LEDState[3]=0;
  7451  002016  0E00               	movlw	0
  7452  002018  0100               	movlb	0	; () banked
  7453  00201A  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7454  00201C  0E00               	movlw	0
  7455  00201E  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7456                           
  7457                           ;tmr2.c: 219: break;
  7458  002020  0012               	return	
  7459  002022                     l5964:
  7460                           
  7461                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  7462  002022  0E00               	movlw	0
  7463  002024  0100               	movlb	0	; () banked
  7464  002026  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7465  002028  0E01               	movlw	1
  7466  00202A  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7467                           
  7468                           ;tmr2.c: 222: LEDState[4]=0;
  7469  00202C  0E00               	movlw	0
  7470  00202E  0100               	movlb	0	; () banked
  7471  002030  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7472  002032  0E00               	movlw	0
  7473  002034  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7474                           
  7475                           ;tmr2.c: 223: break;
  7476  002036  0012               	return	
  7477  002038                     l5966:
  7478                           
  7479                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  7480  002038  0E00               	movlw	0
  7481  00203A  0100               	movlb	0	; () banked
  7482  00203C  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7483  00203E  0E01               	movlw	1
  7484  002040  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7485                           
  7486                           ;tmr2.c: 226: LEDState[5]=0;
  7487  002042  0E00               	movlw	0
  7488  002044  0100               	movlb	0	; () banked
  7489  002046  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7490  002048  0E00               	movlw	0
  7491  00204A  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;tmr2.c: 228: }
  7495                           
  7496                           ;tmr2.c: 227: break;
  7497  00204C  0012               	return	
  7498  00204E                     l5970:
  7499  00204E  C01B  F01D         	movff	setLED@led,??_setLED
  7500  002052  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  7501                           
  7502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7503                           ; Switch size 1, requested type "space"
  7504                           ; Number of cases is 1, Range of values is 0 to 0
  7505                           ; switch strategies available:
  7506                           ; Name         Instructions Cycles
  7507                           ; simple_byte            4     3 (average)
  7508                           ;	Chosen strategy is simple_byte
  7509  002056  501E               	movf	??_setLED+1,w,c
  7510  002058  0A00               	xorlw	0	; case 0
  7511  00205A  A4D8               	btfss	status,2,c
  7512  00205C  0012               	return	
  7513                           
  7514                           ; Switch size 1, requested type "space"
  7515                           ; Number of cases is 6, Range of values is 0 to 5
  7516                           ; switch strategies available:
  7517                           ; Name         Instructions Cycles
  7518                           ; simple_byte           19    10 (average)
  7519                           ;	Chosen strategy is simple_byte
  7520  00205E  501D               	movf	??_setLED,w,c
  7521  002060  0A00               	xorlw	0	; case 0
  7522  002062  B4D8               	btfsc	status,2,c
  7523  002064  D7B2               	goto	l5956
  7524  002066  0A01               	xorlw	1	; case 1
  7525  002068  B4D8               	btfsc	status,2,c
  7526  00206A  D7BA               	goto	l5958
  7527  00206C  0A03               	xorlw	3	; case 2
  7528  00206E  B4D8               	btfsc	status,2,c
  7529  002070  D7C2               	goto	l5960
  7530  002072  0A01               	xorlw	1	; case 3
  7531  002074  B4D8               	btfsc	status,2,c
  7532  002076  D7CA               	goto	l5962
  7533  002078  0A07               	xorlw	7	; case 4
  7534  00207A  B4D8               	btfsc	status,2,c
  7535  00207C  D7D2               	goto	l5964
  7536  00207E  0A01               	xorlw	1	; case 5
  7537  002080  A4D8               	btfss	status,2,c
  7538  002082  0012               	return	
  7539  002084  D7D9               	goto	l5966
  7540  002086                     __end_of_setLED:
  7541                           	opt stack 0
  7542                           tosu	equ	0xFFF
  7543                           tosh	equ	0xFFE
  7544                           tosl	equ	0xFFD
  7545                           pclath	equ	0xFFA
  7546                           tblptru	equ	0xFF8
  7547                           tblptrh	equ	0xFF7
  7548                           tblptrl	equ	0xFF6
  7549                           tablat	equ	0xFF5
  7550                           prodh	equ	0xFF4
  7551                           prodl	equ	0xFF3
  7552                           intcon	equ	0xFF2
  7553                           postinc0	equ	0xFEE
  7554                           wreg	equ	0xFE8
  7555                           indf2	equ	0xFDF
  7556                           postinc2	equ	0xFDE
  7557                           postdec2	equ	0xFDD
  7558                           plusw2	equ	0xFDB
  7559                           fsr2h	equ	0xFDA
  7560                           fsr2l	equ	0xFD9
  7561                           status	equ	0xFD8
  7562                           
  7563 ;; *************** function _Off_Led *****************
  7564 ;; Defined at:
  7565 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  led             2   26[COMRAM] int 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;		None               void
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7579 ;;      Params:         2       0       0       0       0       0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0
  7581 ;;      Temps:          2       0       0       0       0       0       0
  7582 ;;      Totals:         4       0       0       0       0       0       0
  7583 ;;Total ram usage:        4 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    4
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_SetLEDOut
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text29
  7594  001EFE                     __ptext29:
  7595                           	opt stack 0
  7596  001EFE                     _Off_Led:
  7597                           	opt stack 23
  7598                           
  7599                           ;tmr2.c: 231: switch (led){
  7600                           
  7601                           ;incstack = 0
  7602  001EFE  D048               	goto	l6004
  7603  001F00                     l5978:
  7604                           
  7605                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  7606  001F00  0E00               	movlw	0
  7607  001F02  0100               	movlb	0	; () banked
  7608  001F04  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7609  001F06  0E00               	movlw	0
  7610  001F08  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7611                           
  7612                           ;tmr2.c: 234: LEDState[0]=0;
  7613  001F0A  0E00               	movlw	0
  7614  001F0C  0100               	movlb	0	; () banked
  7615  001F0E  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7616  001F10  0E00               	movlw	0
  7617  001F12  6FA4               	movwf	_LEDState& (0+255),b
  7618                           
  7619                           ; BSR set to: 0
  7620                           
  7621                           ; BSR set to: 0
  7622                           
  7623                           ;tmr2.c: 235: do { LATC1 = 0; } while(0);
  7624  001F14  928B               	bcf	3979,1,c	;volatile
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;tmr2.c: 236: break;
  7628  001F16  0012               	return	
  7629  001F18                     l5982:
  7630                           
  7631                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  7632  001F18  0E00               	movlw	0
  7633  001F1A  0100               	movlb	0	; () banked
  7634  001F1C  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7635  001F1E  0E00               	movlw	0
  7636  001F20  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7637                           
  7638                           ;tmr2.c: 239: LEDState[1]=0;
  7639  001F22  0E00               	movlw	0
  7640  001F24  0100               	movlb	0	; () banked
  7641  001F26  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7642  001F28  0E00               	movlw	0
  7643  001F2A  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7644                           
  7645                           ; BSR set to: 0
  7646                           
  7647                           ; BSR set to: 0
  7648                           
  7649                           ;tmr2.c: 240: do { LATA6 = 0; } while(0);
  7650  001F2C  9C89               	bcf	3977,6,c	;volatile
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;tmr2.c: 241: break;
  7654  001F2E  0012               	return	
  7655  001F30                     l5986:
  7656                           
  7657                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  7658  001F30  0E00               	movlw	0
  7659  001F32  0100               	movlb	0	; () banked
  7660  001F34  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7661  001F36  0E00               	movlw	0
  7662  001F38  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7663                           
  7664                           ;tmr2.c: 244: LEDState[2]=0;
  7665  001F3A  0E00               	movlw	0
  7666  001F3C  0100               	movlb	0	; () banked
  7667  001F3E  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7668  001F40  0E00               	movlw	0
  7669  001F42  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7670                           
  7671                           ; BSR set to: 0
  7672                           
  7673                           ; BSR set to: 0
  7674                           
  7675                           ;tmr2.c: 245: do { LATA7 = 0; } while(0);
  7676  001F44  9E89               	bcf	3977,7,c	;volatile
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;tmr2.c: 246: break;
  7680  001F46  0012               	return	
  7681  001F48                     l5990:
  7682                           
  7683                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  7684  001F48  0E00               	movlw	0
  7685  001F4A  0100               	movlb	0	; () banked
  7686  001F4C  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7687  001F4E  0E00               	movlw	0
  7688  001F50  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7689                           
  7690                           ;tmr2.c: 249: LEDState[3]=0;
  7691  001F52  0E00               	movlw	0
  7692  001F54  0100               	movlb	0	; () banked
  7693  001F56  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7694  001F58  0E00               	movlw	0
  7695  001F5A  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7696                           
  7697                           ; BSR set to: 0
  7698                           
  7699                           ; BSR set to: 0
  7700                           
  7701                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  7702  001F5C  948D               	bcf	3981,2,c	;volatile
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;tmr2.c: 251: break;
  7706  001F5E  0012               	return	
  7707  001F60                     l5994:
  7708                           
  7709                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  7710  001F60  0E00               	movlw	0
  7711  001F62  0100               	movlb	0	; () banked
  7712  001F64  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7713  001F66  0E00               	movlw	0
  7714  001F68  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7715                           
  7716                           ;tmr2.c: 254: LEDState[4]=0;
  7717  001F6A  0E00               	movlw	0
  7718  001F6C  0100               	movlb	0	; () banked
  7719  001F6E  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7720  001F70  0E00               	movlw	0
  7721  001F72  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7722                           
  7723                           ; BSR set to: 0
  7724                           
  7725                           ; BSR set to: 0
  7726                           
  7727                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  7728  001F74  928D               	bcf	3981,1,c	;volatile
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;tmr2.c: 256: break;
  7732  001F76  0012               	return	
  7733  001F78                     l5998:
  7734                           
  7735                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  7736  001F78  0E00               	movlw	0
  7737  001F7A  0100               	movlb	0	; () banked
  7738  001F7C  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7739  001F7E  0E00               	movlw	0
  7740  001F80  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7741                           
  7742                           ;tmr2.c: 259: LEDState[5]=0;
  7743  001F82  0E00               	movlw	0
  7744  001F84  0100               	movlb	0	; () banked
  7745  001F86  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7746  001F88  0E00               	movlw	0
  7747  001F8A  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7748                           
  7749                           ; BSR set to: 0
  7750                           
  7751                           ; BSR set to: 0
  7752                           
  7753                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  7754  001F8C  908D               	bcf	3981,0,c	;volatile
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;tmr2.c: 262: }
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;tmr2.c: 261: break;
  7761  001F8E  0012               	return	
  7762  001F90                     l6004:
  7763  001F90  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  7764  001F94  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  7765                           
  7766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7767                           ; Switch size 1, requested type "space"
  7768                           ; Number of cases is 1, Range of values is 0 to 0
  7769                           ; switch strategies available:
  7770                           ; Name         Instructions Cycles
  7771                           ; simple_byte            4     3 (average)
  7772                           ;	Chosen strategy is simple_byte
  7773  001F98  501E               	movf	??_Off_Led+1,w,c
  7774  001F9A  0A00               	xorlw	0	; case 0
  7775  001F9C  A4D8               	btfss	status,2,c
  7776  001F9E  0012               	return	
  7777                           
  7778                           ; Switch size 1, requested type "space"
  7779                           ; Number of cases is 6, Range of values is 0 to 5
  7780                           ; switch strategies available:
  7781                           ; Name         Instructions Cycles
  7782                           ; simple_byte           19    10 (average)
  7783                           ;	Chosen strategy is simple_byte
  7784  001FA0  501D               	movf	??_Off_Led,w,c
  7785  001FA2  0A00               	xorlw	0	; case 0
  7786  001FA4  B4D8               	btfsc	status,2,c
  7787  001FA6  D7AC               	goto	l5978
  7788  001FA8  0A01               	xorlw	1	; case 1
  7789  001FAA  B4D8               	btfsc	status,2,c
  7790  001FAC  D7B5               	goto	l5982
  7791  001FAE  0A03               	xorlw	3	; case 2
  7792  001FB0  B4D8               	btfsc	status,2,c
  7793  001FB2  D7BE               	goto	l5986
  7794  001FB4  0A01               	xorlw	1	; case 3
  7795  001FB6  B4D8               	btfsc	status,2,c
  7796  001FB8  D7C7               	goto	l5990
  7797  001FBA  0A07               	xorlw	7	; case 4
  7798  001FBC  B4D8               	btfsc	status,2,c
  7799  001FBE  D7D0               	goto	l5994
  7800  001FC0  0A01               	xorlw	1	; case 5
  7801  001FC2  A4D8               	btfss	status,2,c
  7802  001FC4  0012               	return	
  7803  001FC6  D7D8               	goto	l5998
  7804  001FC8                     __end_of_Off_Led:
  7805                           	opt stack 0
  7806                           tosu	equ	0xFFF
  7807                           tosh	equ	0xFFE
  7808                           tosl	equ	0xFFD
  7809                           pclath	equ	0xFFA
  7810                           tblptru	equ	0xFF8
  7811                           tblptrh	equ	0xFF7
  7812                           tblptrl	equ	0xFF6
  7813                           tablat	equ	0xFF5
  7814                           prodh	equ	0xFF4
  7815                           prodl	equ	0xFF3
  7816                           intcon	equ	0xFF2
  7817                           postinc0	equ	0xFEE
  7818                           wreg	equ	0xFE8
  7819                           indf2	equ	0xFDF
  7820                           postinc2	equ	0xFDE
  7821                           postdec2	equ	0xFDD
  7822                           plusw2	equ	0xFDB
  7823                           fsr2h	equ	0xFDA
  7824                           fsr2l	equ	0xFD9
  7825                           status	equ	0xFD8
  7826                           
  7827 ;; *************** function _DataBarGraphs *****************
  7828 ;; Defined at:
  7829 ;;		line 48 in file "Communications.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  BGA             2   26[COMRAM] int 
  7832 ;;  BGB             2   28[COMRAM] int 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;		None               void
  7837 ;; Registers used:
  7838 ;;		None
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7844 ;;      Params:         4       0       0       0       0       0       0
  7845 ;;      Locals:         0       0       0       0       0       0       0
  7846 ;;      Temps:          0       0       0       0       0       0       0
  7847 ;;      Totals:         4       0       0       0       0       0       0
  7848 ;;Total ram usage:        4 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    4
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_updateComms
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text30
  7859  003162                     __ptext30:
  7860                           	opt stack 0
  7861  003162                     _DataBarGraphs:
  7862                           	opt stack 25
  7863                           
  7864                           ;Communications.c: 49: DataBarGraphA = BGA;
  7865                           
  7866                           ;incstack = 0
  7867  003162  C01B  F0C3         	movff	DataBarGraphs@BGA,_DataBarGraphA
  7868  003166  C01C  F0C4         	movff	DataBarGraphs@BGA+1,_DataBarGraphA+1
  7869                           
  7870                           ;Communications.c: 50: DataBarGraphB = BGB;
  7871  00316A  C01D  F0C5         	movff	DataBarGraphs@BGB,_DataBarGraphB
  7872  00316E  C01E  F0C6         	movff	DataBarGraphs@BGB+1,_DataBarGraphB+1
  7873  003172  0012               	return		;funcret
  7874  003174                     __end_of_DataBarGraphs:
  7875                           	opt stack 0
  7876                           tosu	equ	0xFFF
  7877                           tosh	equ	0xFFE
  7878                           tosl	equ	0xFFD
  7879                           pclath	equ	0xFFA
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           postinc0	equ	0xFEE
  7888                           wreg	equ	0xFE8
  7889                           indf2	equ	0xFDF
  7890                           postinc2	equ	0xFDE
  7891                           postdec2	equ	0xFDD
  7892                           plusw2	equ	0xFDB
  7893                           fsr2h	equ	0xFDA
  7894                           fsr2l	equ	0xFD9
  7895                           status	equ	0xFD8
  7896                           
  7897 ;; *************** function ___wmul *****************
  7898 ;; Defined at:
  7899 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  multiplier      2   28[COMRAM] unsigned int 
  7902 ;;  multiplicand    2   30[COMRAM] unsigned int 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  product         2   32[COMRAM] unsigned int 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  2   28[COMRAM] unsigned int 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0, prodl, prodh
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7914 ;;      Params:         4       0       0       0       0       0       0
  7915 ;;      Locals:         2       0       0       0       0       0       0
  7916 ;;      Temps:          0       0       0       0       0       0       0
  7917 ;;      Totals:         6       0       0       0       0       0       0
  7918 ;;Total ram usage:        6 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    4
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_main
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text31
  7929  003026                     __ptext31:
  7930                           	opt stack 0
  7931  003026                     ___wmul:
  7932                           	opt stack 26
  7933                           
  7934                           ;incstack = 0
  7935  003026  501D               	movf	___wmul@multiplier,w,c
  7936  003028  021F               	mulwf	___wmul@multiplicand,c
  7937  00302A  CFF3 F021          	movff	prodl,___wmul@product
  7938  00302E  CFF4 F022          	movff	prodh,___wmul@product+1
  7939  003032  501D               	movf	___wmul@multiplier,w,c
  7940  003034  0220               	mulwf	___wmul@multiplicand+1,c
  7941  003036  50F3               	movf	prodl,w,c
  7942  003038  2622               	addwf	___wmul@product+1,f,c
  7943  00303A  501E               	movf	___wmul@multiplier+1,w,c
  7944  00303C  021F               	mulwf	___wmul@multiplicand,c
  7945  00303E  50F3               	movf	prodl,w,c
  7946  003040  2622               	addwf	___wmul@product+1,f,c
  7947  003042  C021  F01D         	movff	___wmul@product,?___wmul
  7948  003046  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  7949  00304A  0012               	return	
  7950  00304C                     __end_of___wmul:
  7951                           	opt stack 0
  7952                           tosu	equ	0xFFF
  7953                           tosh	equ	0xFFE
  7954                           tosl	equ	0xFFD
  7955                           pclath	equ	0xFFA
  7956                           tblptru	equ	0xFF8
  7957                           tblptrh	equ	0xFF7
  7958                           tblptrl	equ	0xFF6
  7959                           tablat	equ	0xFF5
  7960                           prodh	equ	0xFF4
  7961                           prodl	equ	0xFF3
  7962                           intcon	equ	0xFF2
  7963                           postinc0	equ	0xFEE
  7964                           wreg	equ	0xFE8
  7965                           indf2	equ	0xFDF
  7966                           postinc2	equ	0xFDE
  7967                           postdec2	equ	0xFDD
  7968                           plusw2	equ	0xFDB
  7969                           fsr2h	equ	0xFDA
  7970                           fsr2l	equ	0xFD9
  7971                           status	equ	0xFD8
  7972                           
  7973 ;; *************** function _Splash *****************
  7974 ;; Defined at:
  7975 ;;		line 35 in file "Display.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;		None
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;		None
  7980 ;; Return value:  Size  Location     Type
  7981 ;;		None               void
  7982 ;; Registers used:
  7983 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7989 ;;      Params:         0       0       0       0       0       0       0
  7990 ;;      Locals:         0       0       0       0       0       0       0
  7991 ;;      Temps:          0       0       0       0       0       0       0
  7992 ;;      Totals:         0       0       0       0       0       0       0
  7993 ;;Total ram usage:        0 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; Hardware stack levels required when called:    8
  7996 ;; This function calls:
  7997 ;;		_oledGotoYX
  7998 ;;		_oledPrint
  7999 ;; This function is called by:
  8000 ;;		_main
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text32
  8005  00299E                     __ptext32:
  8006                           	opt stack 0
  8007  00299E                     _Splash:
  8008                           	opt stack 22
  8009                           
  8010                           ;Display.c: 36: oledGotoYX(2,3);
  8011                           
  8012                           ;incstack = 0
  8013  00299E  0E03               	movlw	3
  8014  0029A0  6E27               	movwf	oledGotoYX@Column,c
  8015  0029A2  0E02               	movlw	2
  8016  0029A4  EC39  F015         	call	_oledGotoYX
  8017                           
  8018                           ;Display.c: 37: oledPrint("University");
  8019  0029A8  0EE3               	movlw	low STR_1
  8020  0029AA  0100               	movlb	0	; () banked
  8021  0029AC  6FFA               	movwf	oledPrint@s& (0+255),b
  8022  0029AE  0E7F               	movlw	high STR_1
  8023  0029B0  0100               	movlb	0	; () banked
  8024  0029B2  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8025  0029B4  EC22  F016         	call	_oledPrint	;wreg free
  8026                           
  8027                           ;Display.c: 38: oledGotoYX(3,3);
  8028  0029B8  0E03               	movlw	3
  8029  0029BA  6E27               	movwf	oledGotoYX@Column,c
  8030  0029BC  0E03               	movlw	3
  8031  0029BE  EC39  F015         	call	_oledGotoYX
  8032                           
  8033                           ;Display.c: 39: oledPrint("OF");
  8034  0029C2  0EFC               	movlw	low STR_2
  8035  0029C4  0100               	movlb	0	; () banked
  8036  0029C6  6FFA               	movwf	oledPrint@s& (0+255),b
  8037  0029C8  0E7F               	movlw	high STR_2
  8038  0029CA  0100               	movlb	0	; () banked
  8039  0029CC  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8040  0029CE  EC22  F016         	call	_oledPrint	;wreg free
  8041                           
  8042                           ;Display.c: 40: oledGotoYX(4,3);
  8043  0029D2  0E03               	movlw	3
  8044  0029D4  6E27               	movwf	oledGotoYX@Column,c
  8045  0029D6  0E04               	movlw	4
  8046  0029D8  EC39  F015         	call	_oledGotoYX
  8047                           
  8048                           ;Display.c: 41: oledPrint("Akron");
  8049  0029DC  0EF6               	movlw	low STR_3
  8050  0029DE  0100               	movlb	0	; () banked
  8051  0029E0  6FFA               	movwf	oledPrint@s& (0+255),b
  8052  0029E2  0E7F               	movlw	high STR_3
  8053  0029E4  0100               	movlb	0	; () banked
  8054  0029E6  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8055  0029E8  EC22  F016         	call	_oledPrint	;wreg free
  8056                           
  8057                           ;Display.c: 42: oledGotoYX(5,3);
  8058  0029EC  0E03               	movlw	3
  8059  0029EE  6E27               	movwf	oledGotoYX@Column,c
  8060  0029F0  0E05               	movlw	5
  8061  0029F2  EC39  F015         	call	_oledGotoYX
  8062                           
  8063                           ;Display.c: 43: oledPrint("ZIPS-EV");
  8064  0029F6  0EEE               	movlw	low STR_4
  8065  0029F8  0100               	movlb	0	; () banked
  8066  0029FA  6FFA               	movwf	oledPrint@s& (0+255),b
  8067  0029FC  0E7F               	movlw	high STR_4
  8068  0029FE  0100               	movlb	0	; () banked
  8069  002A00  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8070  002A02  EC22  F016         	call	_oledPrint	;wreg free
  8071  002A06  0012               	return		;funcret
  8072  002A08                     __end_of_Splash:
  8073                           	opt stack 0
  8074                           tosu	equ	0xFFF
  8075                           tosh	equ	0xFFE
  8076                           tosl	equ	0xFFD
  8077                           pclath	equ	0xFFA
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           prodh	equ	0xFF4
  8083                           prodl	equ	0xFF3
  8084                           intcon	equ	0xFF2
  8085                           postinc0	equ	0xFEE
  8086                           wreg	equ	0xFE8
  8087                           indf2	equ	0xFDF
  8088                           postinc2	equ	0xFDE
  8089                           postdec2	equ	0xFDD
  8090                           plusw2	equ	0xFDB
  8091                           fsr2h	equ	0xFDA
  8092                           fsr2l	equ	0xFD9
  8093                           status	equ	0xFD8
  8094                           
  8095 ;; *************** function _oledPrint *****************
  8096 ;; Defined at:
  8097 ;;		line 222 in file "OLED_Display.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  8100 ;;		 -> STR_4(8), STR_3(6), STR_2(3), STR_1(11), 
  8101 ;;		 -> SetData@s(20), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;		None               void
  8106 ;; Registers used:
  8107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8113 ;;      Params:         0       2       0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0
  8116 ;;      Totals:         0       2       0       0       0       0       0
  8117 ;;Total ram usage:        2 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    7
  8120 ;; This function calls:
  8121 ;;		_oledPutChar
  8122 ;; This function is called by:
  8123 ;;		_Splash
  8124 ;;		_SetData
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text33
  8129  002C44                     __ptext33:
  8130                           	opt stack 0
  8131  002C44                     _oledPrint:
  8132                           	opt stack 22
  8133                           
  8134                           ;OLED_Display.c: 224: while (*s) oledPutChar( *s++);
  8135                           
  8136                           ;incstack = 0
  8137  002C44  D015               	goto	l6808
  8138  002C46                     l6804:
  8139  002C46  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8140  002C4A  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8141  002C4E  6AF8               	clrf	tblptru,c
  8142  002C50  0E05               	movlw	(high __ramtop+-1)
  8143  002C52  64F7               	cpfsgt	tblptrh,c
  8144  002C54  D003               	bra	u7707
  8145  002C56  0008               	tblrd		*
  8146  002C58  50F5               	movf	tablat,w,c
  8147  002C5A  D005               	bra	u7700
  8148  002C5C                     u7707:
  8149  002C5C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8150  002C60  CFF7 FFEA          	movff	tblptrh,fsr0h
  8151  002C64  50EF               	movf	indf0,w,c
  8152  002C66                     u7700:
  8153  002C66  ECBE  F00D         	call	_oledPutChar
  8154  002C6A  0100               	movlb	0	; () banked
  8155  002C6C  4BFA               	infsnz	oledPrint@s& (0+255),f,b
  8156  002C6E  2BFB               	incf	(oledPrint@s+1)& (0+255),f,b
  8157  002C70                     l6808:
  8158  002C70  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8159  002C74  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8160  002C78  6AF8               	clrf	tblptru,c
  8161  002C7A  0E05               	movlw	(high __ramtop+-1)
  8162  002C7C  64F7               	cpfsgt	tblptrh,c
  8163  002C7E  D003               	bra	u7717
  8164  002C80  0008               	tblrd		*
  8165  002C82  50F5               	movf	tablat,w,c
  8166  002C84  D005               	bra	u7710
  8167  002C86                     u7717:
  8168  002C86  CFF6 FFE9          	movff	tblptrl,fsr0l
  8169  002C8A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8170  002C8E  50EF               	movf	indf0,w,c
  8171  002C90                     u7710:
  8172  002C90  0900               	iorlw	0
  8173  002C92  B4D8               	btfsc	status,2,c
  8174  002C94  0012               	return	
  8175  002C96  D7D7               	goto	l6804
  8176  002C98                     __end_of_oledPrint:
  8177                           	opt stack 0
  8178                           tosu	equ	0xFFF
  8179                           tosh	equ	0xFFE
  8180                           tosl	equ	0xFFD
  8181                           pclath	equ	0xFFA
  8182                           tblptru	equ	0xFF8
  8183                           tblptrh	equ	0xFF7
  8184                           tblptrl	equ	0xFF6
  8185                           tablat	equ	0xFF5
  8186                           prodh	equ	0xFF4
  8187                           prodl	equ	0xFF3
  8188                           intcon	equ	0xFF2
  8189                           indf0	equ	0xFEF
  8190                           postinc0	equ	0xFEE
  8191                           fsr0h	equ	0xFEA
  8192                           fsr0l	equ	0xFE9
  8193                           wreg	equ	0xFE8
  8194                           indf2	equ	0xFDF
  8195                           postinc2	equ	0xFDE
  8196                           postdec2	equ	0xFDD
  8197                           plusw2	equ	0xFDB
  8198                           fsr2h	equ	0xFDA
  8199                           fsr2l	equ	0xFD9
  8200                           status	equ	0xFD8
  8201                           
  8202 ;; *************** function _Setupdisplay *****************
  8203 ;; Defined at:
  8204 ;;		line 30 in file "Display.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;		None               void
  8211 ;; Registers used:
  8212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8218 ;;      Params:         0       0       0       0       0       0       0
  8219 ;;      Locals:         0       0       0       0       0       0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0
  8221 ;;      Totals:         0       0       0       0       0       0       0
  8222 ;;Total ram usage:        0 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    9
  8225 ;; This function calls:
  8226 ;;		_OLED_init
  8227 ;;		_oledClear
  8228 ;; This function is called by:
  8229 ;;		_main
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text34
  8234  0031B0                     __ptext34:
  8235                           	opt stack 0
  8236  0031B0                     _Setupdisplay:
  8237                           	opt stack 21
  8238                           
  8239                           ;Display.c: 31: OLED_init();
  8240                           
  8241                           ;incstack = 0
  8242  0031B0  EC19  F013         	call	_OLED_init	;wreg free
  8243                           
  8244                           ;Display.c: 32: oledClear();
  8245  0031B4  ECCB  F015         	call	_oledClear	;wreg free
  8246  0031B8  0012               	return		;funcret
  8247  0031BA                     __end_of_Setupdisplay:
  8248                           	opt stack 0
  8249                           tosu	equ	0xFFF
  8250                           tosh	equ	0xFFE
  8251                           tosl	equ	0xFFD
  8252                           pclath	equ	0xFFA
  8253                           tblptru	equ	0xFF8
  8254                           tblptrh	equ	0xFF7
  8255                           tblptrl	equ	0xFF6
  8256                           tablat	equ	0xFF5
  8257                           prodh	equ	0xFF4
  8258                           prodl	equ	0xFF3
  8259                           intcon	equ	0xFF2
  8260                           indf0	equ	0xFEF
  8261                           postinc0	equ	0xFEE
  8262                           fsr0h	equ	0xFEA
  8263                           fsr0l	equ	0xFE9
  8264                           wreg	equ	0xFE8
  8265                           indf2	equ	0xFDF
  8266                           postinc2	equ	0xFDE
  8267                           postdec2	equ	0xFDD
  8268                           plusw2	equ	0xFDB
  8269                           fsr2h	equ	0xFDA
  8270                           fsr2l	equ	0xFD9
  8271                           status	equ	0xFD8
  8272                           
  8273 ;; *************** function _oledClear *****************
  8274 ;; Defined at:
  8275 ;;		line 212 in file "OLED_Display.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;		None
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  col             2   10[BANK0 ] unsigned int 
  8280 ;;  row             2    8[BANK0 ] unsigned int 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;		None               void
  8283 ;; Registers used:
  8284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8290 ;;      Params:         0       0       0       0       0       0       0
  8291 ;;      Locals:         0       4       0       0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0
  8293 ;;      Totals:         0       4       0       0       0       0       0
  8294 ;;Total ram usage:        4 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    8
  8297 ;; This function calls:
  8298 ;;		_oledGotoYX
  8299 ;;		_oledPutChar
  8300 ;; This function is called by:
  8301 ;;		_Setupdisplay
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text35
  8306  002B96                     __ptext35:
  8307                           	opt stack 0
  8308  002B96                     _oledClear:
  8309                           	opt stack 21
  8310                           
  8311                           ;OLED_Display.c: 214: for ( uint16_t row = 0; row < 8; row++ ) {
  8312                           
  8313                           ;incstack = 0
  8314  002B96  0E00               	movlw	0
  8315  002B98  0100               	movlb	0	; () banked
  8316  002B9A  6FFB               	movwf	(oledClear@row+1)& (0+255),b
  8317  002B9C  0E00               	movlw	0
  8318  002B9E  6FFA               	movwf	oledClear@row& (0+255),b
  8319  002BA0                     l6780:
  8320                           
  8321                           ; BSR set to: 0
  8322  002BA0  0100               	movlb	0	; () banked
  8323  002BA2  51FB               	movf	(oledClear@row+1)& (0+255),w,b
  8324  002BA4  E123               	bnz	l1266
  8325  002BA6  0E08               	movlw	8
  8326  002BA8  0100               	movlb	0	; () banked
  8327  002BAA  5DFA               	subwf	oledClear@row& (0+255),w,b
  8328  002BAC  B0D8               	btfsc	status,0,c
  8329  002BAE  0012               	return	
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;OLED_Display.c: 215: for ( uint16_t col = 0; col < 16; col++ ) {
  8333                           
  8334                           ; BSR set to: 0
  8335                           
  8336                           ; BSR set to: 0
  8337  002BB0  0E00               	movlw	0
  8338  002BB2  0100               	movlb	0	; () banked
  8339  002BB4  6FFD               	movwf	(oledClear@col+1)& (0+255),b
  8340  002BB6  0E00               	movlw	0
  8341  002BB8  6FFC               	movwf	oledClear@col& (0+255),b
  8342  002BBA                     l6786:
  8343                           
  8344                           ; BSR set to: 0
  8345  002BBA  0100               	movlb	0	; () banked
  8346  002BBC  51FD               	movf	(oledClear@col+1)& (0+255),w,b
  8347  002BBE  E112               	bnz	l6798
  8348  002BC0  0E10               	movlw	16
  8349  002BC2  0100               	movlb	0	; () banked
  8350  002BC4  5DFC               	subwf	oledClear@col& (0+255),w,b
  8351  002BC6  B0D8               	btfsc	status,0,c
  8352  002BC8  D00D               	goto	l6798
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;OLED_Display.c: 216: oledGotoYX( row, col );
  8356                           
  8357                           ; BSR set to: 0
  8358                           
  8359                           ; BSR set to: 0
  8360  002BCA  C0FC  F027         	movff	oledClear@col,oledGotoYX@Column
  8361  002BCE  0100               	movlb	0	; () banked
  8362  002BD0  51FA               	movf	oledClear@row& (0+255),w,b
  8363  002BD2  EC39  F015         	call	_oledGotoYX
  8364                           
  8365                           ;OLED_Display.c: 217: oledPutChar( ' ' );
  8366  002BD6  0E20               	movlw	32
  8367  002BD8  ECBE  F00D         	call	_oledPutChar
  8368  002BDC  0100               	movlb	0	; () banked
  8369  002BDE  4BFC               	infsnz	oledClear@col& (0+255),f,b
  8370  002BE0  2BFD               	incf	(oledClear@col+1)& (0+255),f,b
  8371  002BE2  D7EB               	goto	l6786
  8372  002BE4                     l6798:
  8373                           
  8374                           ; BSR set to: 0
  8375  002BE4  0100               	movlb	0	; () banked
  8376  002BE6  4BFA               	infsnz	oledClear@row& (0+255),f,b
  8377  002BE8  2BFB               	incf	(oledClear@row+1)& (0+255),f,b
  8378  002BEA  D7DA               	goto	l6780
  8379  002BEC                     l1266:
  8380                           
  8381                           ; BSR set to: 0
  8382  002BEC  0012               	return		;funcret
  8383  002BEE                     __end_of_oledClear:
  8384                           	opt stack 0
  8385                           tosu	equ	0xFFF
  8386                           tosh	equ	0xFFE
  8387                           tosl	equ	0xFFD
  8388                           pclath	equ	0xFFA
  8389                           tblptru	equ	0xFF8
  8390                           tblptrh	equ	0xFF7
  8391                           tblptrl	equ	0xFF6
  8392                           tablat	equ	0xFF5
  8393                           prodh	equ	0xFF4
  8394                           prodl	equ	0xFF3
  8395                           intcon	equ	0xFF2
  8396                           indf0	equ	0xFEF
  8397                           postinc0	equ	0xFEE
  8398                           fsr0h	equ	0xFEA
  8399                           fsr0l	equ	0xFE9
  8400                           wreg	equ	0xFE8
  8401                           indf2	equ	0xFDF
  8402                           postinc2	equ	0xFDE
  8403                           postdec2	equ	0xFDD
  8404                           plusw2	equ	0xFDB
  8405                           fsr2h	equ	0xFDA
  8406                           fsr2l	equ	0xFD9
  8407                           status	equ	0xFD8
  8408                           
  8409 ;; *************** function _oledPutChar *****************
  8410 ;; Defined at:
  8411 ;;		line 178 in file "OLED_Display.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  ch              1    wreg     unsigned char 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;  ch              1   11[BANK1 ] unsigned char 
  8416 ;;  bytes           9    0[BANK1 ] unsigned char [9]
  8417 ;;  base            2    9[BANK1 ] PTR const unsigned char 
  8418 ;;		 -> OledFont(768), 
  8419 ;;  status          1   12[BANK1 ] enum E8975
  8420 ;; Return value:  Size  Location     Type
  8421 ;;		None               void
  8422 ;; Registers used:
  8423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8429 ;;      Params:         0       0       0       0       0       0       0
  8430 ;;      Locals:         0       0      13       0       0       0       0
  8431 ;;      Temps:          4       0       0       0       0       0       0
  8432 ;;      Totals:         4       0      13       0       0       0       0
  8433 ;;Total ram usage:       17 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    6
  8436 ;; This function calls:
  8437 ;;		_I2C1_MasterWrite
  8438 ;;		_memmove
  8439 ;; This function is called by:
  8440 ;;		_oledClear
  8441 ;;		_oledPrint
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text36
  8446  001B7C                     __ptext36:
  8447                           	opt stack 0
  8448  001B7C                     _oledPutChar:
  8449                           	opt stack 22
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;incstack = 0
  8453                           ;oledPutChar@ch stored from wreg
  8454  001B7C  0101               	movlb	1	; () banked
  8455  001B7E  6F44               	movwf	oledPutChar@ch& (0+255),b
  8456                           
  8457                           ;OLED_Display.c: 179: if ( ( ch < 32 ) || ( ch > 127 ) )
  8458  001B80  0E1F               	movlw	31
  8459  001B82  0101               	movlb	1	; () banked
  8460  001B84  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8461  001B86  D004               	goto	l6380
  8462                           
  8463                           ; BSR set to: 1
  8464  001B88  0E7F               	movlw	127
  8465  001B8A  0101               	movlb	1	; () banked
  8466  001B8C  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8467  001B8E  D003               	goto	l6382
  8468  001B90                     l6380:
  8469                           
  8470                           ; BSR set to: 1
  8471                           ;OLED_Display.c: 180: ch = ' ';
  8472  001B90  0E20               	movlw	32
  8473  001B92  0101               	movlb	1	; () banked
  8474  001B94  6F44               	movwf	oledPutChar@ch& (0+255),b
  8475  001B96                     l6382:
  8476                           
  8477                           ; BSR set to: 1
  8478                           ;OLED_Display.c: 182: const uint8_t *base = &OledFont[ch - 32][0];
  8479  001B96  0E00               	movlw	0
  8480  001B98  6E27               	movwf	??_oledPutChar& (0+255),c
  8481  001B9A  0EFF               	movlw	255
  8482  001B9C  6E28               	movwf	(??_oledPutChar+1)& (0+255),c
  8483  001B9E  0101               	movlb	1	; () banked
  8484  001BA0  5144               	movf	oledPutChar@ch& (0+255),w,b
  8485  001BA2  6E29               	movwf	(??_oledPutChar+2)& (0+255),c
  8486  001BA4  6A2A               	clrf	(??_oledPutChar+3)& (0+255),c
  8487  001BA6  90D8               	bcf	status,0,c
  8488  001BA8  3629               	rlcf	??_oledPutChar+2,f,c
  8489  001BAA  362A               	rlcf	??_oledPutChar+3,f,c
  8490  001BAC  90D8               	bcf	status,0,c
  8491  001BAE  3629               	rlcf	??_oledPutChar+2,f,c
  8492  001BB0  362A               	rlcf	??_oledPutChar+3,f,c
  8493  001BB2  90D8               	bcf	status,0,c
  8494  001BB4  3629               	rlcf	??_oledPutChar+2,f,c
  8495  001BB6  362A               	rlcf	??_oledPutChar+3,f,c
  8496  001BB8  5027               	movf	??_oledPutChar,w,c
  8497  001BBA  2629               	addwf	??_oledPutChar+2,f,c
  8498  001BBC  5028               	movf	??_oledPutChar+1,w,c
  8499  001BBE  222A               	addwfc	??_oledPutChar+3,f,c
  8500  001BC0  0ED3               	movlw	low _OledFont
  8501  001BC2  2429               	addwf	??_oledPutChar+2,w,c
  8502  001BC4  0101               	movlb	1	; () banked
  8503  001BC6  6F42               	movwf	oledPutChar@base& (0+255),b
  8504  001BC8  0E7B               	movlw	high _OledFont
  8505  001BCA  202A               	addwfc	??_oledPutChar+3,w,c
  8506  001BCC  0101               	movlb	1	; () banked
  8507  001BCE  6F43               	movwf	(oledPutChar@base+1)& (0+255),b
  8508                           
  8509                           ; BSR set to: 1
  8510                           ;OLED_Display.c: 184: uint8_t bytes[9];
  8511                           ;OLED_Display.c: 185: bytes[0] = 0x40;
  8512  001BD0  0E40               	movlw	64
  8513  001BD2  0101               	movlb	1	; () banked
  8514  001BD4  6F39               	movwf	oledPutChar@bytes& (0+255),b
  8515                           
  8516                           ; BSR set to: 1
  8517                           ;OLED_Display.c: 186: memmove( bytes + 1, base, 8 );
  8518  001BD6  0E3A               	movlw	low (oledPutChar@bytes+1)
  8519  001BD8  6E1B               	movwf	memmove@d1,c
  8520  001BDA  0E01               	movlw	high (oledPutChar@bytes+1)
  8521  001BDC  6E1C               	movwf	memmove@d1+1,c
  8522  001BDE  C142  F01D         	movff	oledPutChar@base,memmove@s1
  8523  001BE2  C143  F01E         	movff	oledPutChar@base+1,memmove@s1+1
  8524  001BE6  0E00               	movlw	0
  8525  001BE8  6E20               	movwf	memmove@n+1,c
  8526  001BEA  0E08               	movlw	8
  8527  001BEC  6E1F               	movwf	memmove@n,c
  8528  001BEE  ECF6  F010         	call	_memmove	;wreg free
  8529                           
  8530                           ;OLED_Display.c: 188: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8531  001BF2  0E02               	movlw	2
  8532  001BF4  0101               	movlb	1	; () banked
  8533  001BF6  6F45               	movwf	oledPutChar@status& (0+255),b
  8534                           
  8535                           ; BSR set to: 1
  8536                           ;OLED_Display.c: 190: timeOut = 0;
  8537  001BF8  0E00               	movlw	0
  8538  001BFA  0100               	movlb	0	; () banked
  8539  001BFC  6FDE               	movwf	(_timeOut+1)& (0+255),b
  8540  001BFE  0E00               	movlw	0
  8541  001C00  6FDD               	movwf	_timeOut& (0+255),b
  8542                           
  8543                           ;OLED_Display.c: 191: while (status != I2C1_MESSAGE_FAIL) {
  8544  001C02  D030               	goto	l6412
  8545  001C04                     l6392:
  8546                           
  8547                           ;OLED_Display.c: 193: I2C1_MasterWrite(bytes,
  8548                           ;OLED_Display.c: 194: 9,
  8549                           ;OLED_Display.c: 195: 0x3C,
  8550                           ;OLED_Display.c: 196: &status);
  8551  001C04  0E39               	movlw	low oledPutChar@bytes
  8552  001C06  0100               	movlb	0	; () banked
  8553  001C08  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8554  001C0A  0E01               	movlw	high oledPutChar@bytes
  8555  001C0C  0100               	movlb	0	; () banked
  8556  001C0E  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8557  001C10  0E00               	movlw	0
  8558  001C12  0100               	movlb	0	; () banked
  8559  001C14  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8560  001C16  0E09               	movlw	9
  8561  001C18  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  8562  001C1A  0E00               	movlw	0
  8563  001C1C  0100               	movlb	0	; () banked
  8564  001C1E  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  8565  001C20  0E3C               	movlw	60
  8566  001C22  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  8567  001C24  0E45               	movlw	low oledPutChar@status
  8568  001C26  0100               	movlb	0	; () banked
  8569  001C28  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8570  001C2A  0E01               	movlw	high oledPutChar@status
  8571  001C2C  0100               	movlb	0	; () banked
  8572  001C2E  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8573  001C30  ECF7  F015         	call	_I2C1_MasterWrite	;wreg free
  8574  001C34                     l6394:
  8575  001C34  0E02               	movlw	2
  8576  001C36  0101               	movlb	1	; () banked
  8577  001C38  1945               	xorwf	oledPutChar@status& (0+255),w,b
  8578  001C3A  B4D8               	btfsc	status,2,c
  8579  001C3C  D7FB               	goto	l6394
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;OLED_Display.c: 201: if (status == I2C1_MESSAGE_COMPLETE)
  8583                           
  8584                           ; BSR set to: 1
  8585  001C3E  0101               	movlb	1	; () banked
  8586  001C40  5145               	movf	oledPutChar@status& (0+255),w,b
  8587  001C42  0101               	movlb	1	; () banked
  8588  001C44  B4D8               	btfsc	status,2,c
  8589  001C46  0012               	return	
  8590                           
  8591                           ; BSR set to: 1
  8592                           ;OLED_Display.c: 203: if (timeOut == 100)
  8593                           
  8594                           ; BSR set to: 1
  8595                           
  8596                           ; BSR set to: 1
  8597                           ;OLED_Display.c: 202: break;
  8598  001C48  0E64               	movlw	100
  8599  001C4A  0100               	movlb	0	; () banked
  8600  001C4C  19DD               	xorwf	_timeOut& (0+255),w,b
  8601  001C4E  0100               	movlb	0	; () banked
  8602  001C50  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  8603  001C52  B4D8               	btfsc	status,2,c
  8604  001C54  0012               	return	
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;OLED_Display.c: 205: if (status == I2C1_MESSAGE_FAIL)
  8608                           
  8609                           ; BSR set to: 0
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;OLED_Display.c: 204: break;
  8613  001C56  0101               	movlb	1	; () banked
  8614  001C58  0545               	decf	oledPutChar@status& (0+255),w,b
  8615  001C5A  B4D8               	btfsc	status,2,c
  8616  001C5C  0012               	return	
  8617                           
  8618                           ; BSR set to: 1
  8619                           ;OLED_Display.c: 207: else
  8620                           ;OLED_Display.c: 208: timeOut++;
  8621                           
  8622                           ; BSR set to: 1
  8623                           
  8624                           ; BSR set to: 1
  8625                           
  8626                           ; BSR set to: 1
  8627                           ;OLED_Display.c: 206: break;
  8628  001C5E  0100               	movlb	0	; () banked
  8629  001C60  4BDD               	infsnz	_timeOut& (0+255),f,b
  8630  001C62  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  8631  001C64                     l6412:
  8632  001C64  0101               	movlb	1	; () banked
  8633  001C66  0545               	decf	oledPutChar@status& (0+255),w,b
  8634  001C68  B4D8               	btfsc	status,2,c
  8635  001C6A  0012               	return	
  8636  001C6C  D7CB               	goto	l6392
  8637  001C6E                     __end_of_oledPutChar:
  8638                           	opt stack 0
  8639                           tosu	equ	0xFFF
  8640                           tosh	equ	0xFFE
  8641                           tosl	equ	0xFFD
  8642                           pclath	equ	0xFFA
  8643                           tblptru	equ	0xFF8
  8644                           tblptrh	equ	0xFF7
  8645                           tblptrl	equ	0xFF6
  8646                           tablat	equ	0xFF5
  8647                           prodh	equ	0xFF4
  8648                           prodl	equ	0xFF3
  8649                           intcon	equ	0xFF2
  8650                           indf0	equ	0xFEF
  8651                           postinc0	equ	0xFEE
  8652                           fsr0h	equ	0xFEA
  8653                           fsr0l	equ	0xFE9
  8654                           wreg	equ	0xFE8
  8655                           indf2	equ	0xFDF
  8656                           postinc2	equ	0xFDE
  8657                           postdec2	equ	0xFDD
  8658                           plusw2	equ	0xFDB
  8659                           fsr2h	equ	0xFDA
  8660                           fsr2l	equ	0xFD9
  8661                           status	equ	0xFD8
  8662                           
  8663 ;; *************** function _memmove *****************
  8664 ;; Defined at:
  8665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memmove.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  d1              2   26[COMRAM] PTR void 
  8668 ;;		 -> oledPutChar@bytes(9), 
  8669 ;;  s1              2   28[COMRAM] PTR const void 
  8670 ;;		 -> OledFont(768), 
  8671 ;;  n               2   30[COMRAM] unsigned int 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  s               2   36[COMRAM] PTR const unsigned char 
  8674 ;;		 -> OledFont(768), 
  8675 ;;  d               2   34[COMRAM] PTR unsigned char 
  8676 ;;		 -> oledPutChar@bytes(9), 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  2   26[COMRAM] PTR void 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8686 ;;      Params:         6       0       0       0       0       0       0
  8687 ;;      Locals:         4       0       0       0       0       0       0
  8688 ;;      Temps:          2       0       0       0       0       0       0
  8689 ;;      Totals:        12       0       0       0       0       0       0
  8690 ;;Total ram usage:       12 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    4
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_oledPutChar
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text37
  8701  0021EC                     __ptext37:
  8702                           	opt stack 0
  8703  0021EC                     _memmove:
  8704                           	opt stack 23
  8705                           
  8706                           ;incstack = 0
  8707  0021EC  C01D  F025         	movff	memmove@s1,memmove@s
  8708  0021F0  C01E  F026         	movff	memmove@s1+1,memmove@s+1
  8709  0021F4  C01B  F023         	movff	memmove@d1,memmove@d
  8710  0021F8  C01C  F024         	movff	memmove@d1+1,memmove@d+1
  8711  0021FC  5023               	movf	memmove@d,w,c
  8712  0021FE  5C25               	subwf	memmove@s,w,c
  8713  002200  5024               	movf	memmove@d+1,w,c
  8714  002202  5826               	subwfb	memmove@s+1,w,c
  8715  002204  B0D8               	btfsc	status,0,c
  8716  002206  D02D               	goto	l6144
  8717  002208  501F               	movf	memmove@n,w,c
  8718  00220A  2425               	addwf	memmove@s,w,c
  8719  00220C  6E21               	movwf	??_memmove& (0+255),c
  8720  00220E  5020               	movf	memmove@n+1,w,c
  8721  002210  2026               	addwfc	memmove@s+1,w,c
  8722  002212  6E22               	movwf	(??_memmove+1)& (0+255),c
  8723  002214  5021               	movf	??_memmove,w,c
  8724  002216  5C23               	subwf	memmove@d,w,c
  8725  002218  5022               	movf	??_memmove+1,w,c
  8726  00221A  5824               	subwfb	memmove@d+1,w,c
  8727  00221C  B0D8               	btfsc	status,0,c
  8728  00221E  D021               	goto	l6144
  8729  002220  501F               	movf	memmove@n,w,c
  8730  002222  2625               	addwf	memmove@s,f,c
  8731  002224  5020               	movf	memmove@n+1,w,c
  8732  002226  2226               	addwfc	memmove@s+1,f,c
  8733  002228  501F               	movf	memmove@n,w,c
  8734  00222A  2623               	addwf	memmove@d,f,c
  8735  00222C  5020               	movf	memmove@n+1,w,c
  8736  00222E  2224               	addwfc	memmove@d+1,f,c
  8737  002230                     l6140:
  8738  002230  0625               	decf	memmove@s,f,c
  8739  002232  A0D8               	btfss	status,0,c
  8740  002234  0626               	decf	memmove@s+1,f,c
  8741  002236  C025  FFF6         	movff	memmove@s,tblptrl
  8742  00223A  C026  FFF7         	movff	memmove@s+1,tblptrh
  8743  00223E                     	if	0	;tblptru may be non-zero
  8744  00223E                     	endif
  8745  00223E                     	if	0	;tblptru may be non-zero
  8746  00223E                     	endif
  8747  00223E  0623               	decf	memmove@d,f,c
  8748  002240  A0D8               	btfss	status,0,c
  8749  002242  0624               	decf	memmove@d+1,f,c
  8750  002244  C023  FFD9         	movff	memmove@d,fsr2l
  8751  002248  C024  FFDA         	movff	memmove@d+1,fsr2h
  8752  00224C  0008               	tblrd		*
  8753  00224E  CFF5 FFDF          	movff	tablat,indf2
  8754  002252  061F               	decf	memmove@n,f,c
  8755  002254  A0D8               	btfss	status,0,c
  8756  002256  0620               	decf	memmove@n+1,f,c
  8757  002258  501F               	movf	memmove@n,w,c
  8758  00225A  1020               	iorwf	memmove@n+1,w,c
  8759  00225C  B4D8               	btfsc	status,2,c
  8760  00225E  0012               	return	
  8761  002260  D7E7               	goto	l6140
  8762  002262                     l6144:
  8763  002262  501F               	movf	memmove@n,w,c
  8764  002264  1020               	iorwf	memmove@n+1,w,c
  8765  002266  B4D8               	btfsc	status,2,c
  8766  002268  0012               	return	
  8767  00226A  C025  FFF6         	movff	memmove@s,tblptrl
  8768  00226E  C026  FFF7         	movff	memmove@s+1,tblptrh
  8769  002272                     	if	0	;tblptru may be non-zero
  8770  002272                     	endif
  8771  002272                     	if	0	;tblptru may be non-zero
  8772  002272                     	endif
  8773  002272  C023  FFD9         	movff	memmove@d,fsr2l
  8774  002276  C024  FFDA         	movff	memmove@d+1,fsr2h
  8775  00227A  0008               	tblrd		*
  8776  00227C  CFF5 FFDF          	movff	tablat,indf2
  8777  002280  4A25               	infsnz	memmove@s,f,c
  8778  002282  2A26               	incf	memmove@s+1,f,c
  8779  002284  4A23               	infsnz	memmove@d,f,c
  8780  002286  2A24               	incf	memmove@d+1,f,c
  8781  002288  061F               	decf	memmove@n,f,c
  8782  00228A  A0D8               	btfss	status,0,c
  8783  00228C  0620               	decf	memmove@n+1,f,c
  8784  00228E  D7E9               	goto	l6144
  8785  002290                     __end_of_memmove:
  8786                           	opt stack 0
  8787                           tosu	equ	0xFFF
  8788                           tosh	equ	0xFFE
  8789                           tosl	equ	0xFFD
  8790                           pclath	equ	0xFFA
  8791                           tblptru	equ	0xFF8
  8792                           tblptrh	equ	0xFF7
  8793                           tblptrl	equ	0xFF6
  8794                           tablat	equ	0xFF5
  8795                           prodh	equ	0xFF4
  8796                           prodl	equ	0xFF3
  8797                           intcon	equ	0xFF2
  8798                           indf0	equ	0xFEF
  8799                           postinc0	equ	0xFEE
  8800                           fsr0h	equ	0xFEA
  8801                           fsr0l	equ	0xFE9
  8802                           wreg	equ	0xFE8
  8803                           indf2	equ	0xFDF
  8804                           postinc2	equ	0xFDE
  8805                           postdec2	equ	0xFDD
  8806                           plusw2	equ	0xFDB
  8807                           fsr2h	equ	0xFDA
  8808                           fsr2l	equ	0xFD9
  8809                           status	equ	0xFD8
  8810                           
  8811 ;; *************** function _oledGotoYX *****************
  8812 ;; Defined at:
  8813 ;;		line 39 in file "OLED_Display.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  Row             1    wreg     unsigned char 
  8816 ;;  Column          1   38[COMRAM] unsigned char 
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;  Row             1   40[COMRAM] unsigned char 
  8819 ;; Return value:  Size  Location     Type
  8820 ;;		None               void
  8821 ;; Registers used:
  8822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8828 ;;      Params:         1       0       0       0       0       0       0
  8829 ;;      Locals:         1       0       0       0       0       0       0
  8830 ;;      Temps:          1       0       0       0       0       0       0
  8831 ;;      Totals:         3       0       0       0       0       0       0
  8832 ;;Total ram usage:        3 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    7
  8835 ;; This function calls:
  8836 ;;		_OLED_command
  8837 ;; This function is called by:
  8838 ;;		_oledClear
  8839 ;;		_Splash
  8840 ;;		_SetData
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text38
  8845  002A72                     __ptext38:
  8846                           	opt stack 0
  8847  002A72                     _oledGotoYX:
  8848                           	opt stack 22
  8849                           
  8850                           ;incstack = 0
  8851                           ;oledGotoYX@Row stored from wreg
  8852  002A72  6E29               	movwf	oledGotoYX@Row,c
  8853                           
  8854                           ;OLED_Display.c: 41: OLED_command( 0xB0 + Row);
  8855  002A74  5029               	movf	oledGotoYX@Row,w,c
  8856  002A76  0FB0               	addlw	176
  8857  002A78  ECE5  F013         	call	_OLED_command
  8858                           
  8859                           ;OLED_Display.c: 42: OLED_command( 0xB0 + Row);
  8860  002A7C  5029               	movf	oledGotoYX@Row,w,c
  8861  002A7E  0FB0               	addlw	176
  8862  002A80  ECE5  F013         	call	_OLED_command
  8863                           
  8864                           ;OLED_Display.c: 43: OLED_command( 0x00 + (8*Column & 0x0F) );
  8865  002A84  5027               	movf	oledGotoYX@Column,w,c
  8866  002A86  0D08               	mullw	8
  8867  002A88  50F3               	movf	prodl,w,c
  8868  002A8A  0B0F               	andlw	15
  8869  002A8C  ECE5  F013         	call	_OLED_command
  8870                           
  8871                           ;OLED_Display.c: 44: OLED_command( 0x00 + (8*Column & 0x0F) );
  8872  002A90  5027               	movf	oledGotoYX@Column,w,c
  8873  002A92  0D08               	mullw	8
  8874  002A94  50F3               	movf	prodl,w,c
  8875  002A96  0B0F               	andlw	15
  8876  002A98  ECE5  F013         	call	_OLED_command
  8877                           
  8878                           ;OLED_Display.c: 45: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8879  002A9C  5027               	movf	oledGotoYX@Column,w,c
  8880  002A9E  0D08               	mullw	8
  8881  002AA0  0E04               	movlw	4
  8882  002AA2  6E28               	movwf	??_oledGotoYX& (0+255),c
  8883  002AA4                     u6705:
  8884  002AA4  34F4               	rlcf	prodh,w,c
  8885  002AA6  32F4               	rrcf	prodh,f,c
  8886  002AA8  32F3               	rrcf	prodl,f,c
  8887  002AAA  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8888  002AAC  D7FB               	goto	u6705
  8889  002AAE  50F3               	movf	prodl,w,c
  8890  002AB0  0B0F               	andlw	15
  8891  002AB2  0F10               	addlw	16
  8892  002AB4  ECE5  F013         	call	_OLED_command
  8893                           
  8894                           ;OLED_Display.c: 46: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8895  002AB8  5027               	movf	oledGotoYX@Column,w,c
  8896  002ABA  0D08               	mullw	8
  8897  002ABC  0E04               	movlw	4
  8898  002ABE  6E28               	movwf	??_oledGotoYX& (0+255),c
  8899  002AC0                     u6715:
  8900  002AC0  34F4               	rlcf	prodh,w,c
  8901  002AC2  32F4               	rrcf	prodh,f,c
  8902  002AC4  32F3               	rrcf	prodl,f,c
  8903  002AC6  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8904  002AC8  D7FB               	goto	u6715
  8905  002ACA  50F3               	movf	prodl,w,c
  8906  002ACC  0B0F               	andlw	15
  8907  002ACE  0F10               	addlw	16
  8908  002AD0  ECE5  F013         	call	_OLED_command
  8909  002AD4  0012               	return		;funcret
  8910  002AD6                     __end_of_oledGotoYX:
  8911                           	opt stack 0
  8912                           tosu	equ	0xFFF
  8913                           tosh	equ	0xFFE
  8914                           tosl	equ	0xFFD
  8915                           pclath	equ	0xFFA
  8916                           tblptru	equ	0xFF8
  8917                           tblptrh	equ	0xFF7
  8918                           tblptrl	equ	0xFF6
  8919                           tablat	equ	0xFF5
  8920                           prodh	equ	0xFF4
  8921                           prodl	equ	0xFF3
  8922                           intcon	equ	0xFF2
  8923                           indf0	equ	0xFEF
  8924                           postinc0	equ	0xFEE
  8925                           fsr0h	equ	0xFEA
  8926                           fsr0l	equ	0xFE9
  8927                           wreg	equ	0xFE8
  8928                           indf2	equ	0xFDF
  8929                           postinc2	equ	0xFDE
  8930                           postdec2	equ	0xFDD
  8931                           plusw2	equ	0xFDB
  8932                           fsr2h	equ	0xFDA
  8933                           fsr2l	equ	0xFD9
  8934                           status	equ	0xFD8
  8935                           
  8936 ;; *************** function _OLED_init *****************
  8937 ;; Defined at:
  8938 ;;		line 146 in file "OLED_Display.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;		None               void
  8945 ;; Registers used:
  8946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8952 ;;      Params:         0       0       0       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0       0       0
  8955 ;;      Totals:         0       0       0       0       0       0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; Hardware stack levels required when called:    7
  8959 ;; This function calls:
  8960 ;;		_OLED_command
  8961 ;; This function is called by:
  8962 ;;		_Setupdisplay
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text39
  8967  002632                     __ptext39:
  8968                           	opt stack 0
  8969  002632                     _OLED_init:
  8970                           	opt stack 22
  8971                           
  8972                           ;OLED_Display.c: 148: OLED_command (0xae);
  8973                           
  8974                           ;incstack = 0
  8975  002632  0EAE               	movlw	174
  8976  002634  ECE5  F013         	call	_OLED_command
  8977                           
  8978                           ;OLED_Display.c: 149: OLED_command (0xa8);
  8979  002638  0EA8               	movlw	168
  8980  00263A  ECE5  F013         	call	_OLED_command
  8981                           
  8982                           ;OLED_Display.c: 150: OLED_command (0x3f);
  8983  00263E  0E3F               	movlw	63
  8984  002640  ECE5  F013         	call	_OLED_command
  8985                           
  8986                           ;OLED_Display.c: 151: OLED_command (0xd3);
  8987  002644  0ED3               	movlw	211
  8988  002646  ECE5  F013         	call	_OLED_command
  8989                           
  8990                           ;OLED_Display.c: 152: OLED_command (0x00);
  8991  00264A  0E00               	movlw	0
  8992  00264C  ECE5  F013         	call	_OLED_command
  8993                           
  8994                           ;OLED_Display.c: 153: OLED_command (0x40);
  8995  002650  0E40               	movlw	64
  8996  002652  ECE5  F013         	call	_OLED_command
  8997                           
  8998                           ;OLED_Display.c: 155: OLED_command (0xa0);
  8999  002656  0EA0               	movlw	160
  9000  002658  ECE5  F013         	call	_OLED_command
  9001                           
  9002                           ;OLED_Display.c: 156: OLED_command (0xa1);
  9003  00265C  0EA1               	movlw	161
  9004  00265E  ECE5  F013         	call	_OLED_command
  9005                           
  9006                           ;OLED_Display.c: 157: OLED_command (0xc0);
  9007  002662  0EC0               	movlw	192
  9008  002664  ECE5  F013         	call	_OLED_command
  9009                           
  9010                           ;OLED_Display.c: 159: OLED_command (0xc8);
  9011  002668  0EC8               	movlw	200
  9012  00266A  ECE5  F013         	call	_OLED_command
  9013                           
  9014                           ;OLED_Display.c: 160: OLED_command (0xda);
  9015  00266E  0EDA               	movlw	218
  9016  002670  ECE5  F013         	call	_OLED_command
  9017                           
  9018                           ;OLED_Display.c: 161: OLED_command (0x12);
  9019  002674  0E12               	movlw	18
  9020  002676  ECE5  F013         	call	_OLED_command
  9021                           
  9022                           ;OLED_Display.c: 162: OLED_command (0x81);
  9023  00267A  0E81               	movlw	129
  9024  00267C  ECE5  F013         	call	_OLED_command
  9025                           
  9026                           ;OLED_Display.c: 163: OLED_command (0xfF);
  9027  002680  0EFF               	movlw	255
  9028  002682  ECE5  F013         	call	_OLED_command
  9029                           
  9030                           ;OLED_Display.c: 164: OLED_command (0xa4);
  9031  002686  0EA4               	movlw	164
  9032  002688  ECE5  F013         	call	_OLED_command
  9033                           
  9034                           ;OLED_Display.c: 165: OLED_command (0xa6);
  9035  00268C  0EA6               	movlw	166
  9036  00268E  ECE5  F013         	call	_OLED_command
  9037                           
  9038                           ;OLED_Display.c: 166: OLED_command (0xd5);
  9039  002692  0ED5               	movlw	213
  9040  002694  ECE5  F013         	call	_OLED_command
  9041                           
  9042                           ;OLED_Display.c: 167: OLED_command (0x80);
  9043  002698  0E80               	movlw	128
  9044  00269A  ECE5  F013         	call	_OLED_command
  9045                           
  9046                           ;OLED_Display.c: 168: OLED_command (0x8d);
  9047  00269E  0E8D               	movlw	141
  9048  0026A0  ECE5  F013         	call	_OLED_command
  9049                           
  9050                           ;OLED_Display.c: 169: OLED_command (0x14);
  9051  0026A4  0E14               	movlw	20
  9052  0026A6  ECE5  F013         	call	_OLED_command
  9053                           
  9054                           ;OLED_Display.c: 170: OLED_command (0xAF);
  9055  0026AA  0EAF               	movlw	175
  9056  0026AC  ECE5  F013         	call	_OLED_command
  9057                           
  9058                           ;OLED_Display.c: 171: OLED_command (0x20);
  9059  0026B0  0E20               	movlw	32
  9060  0026B2  ECE5  F013         	call	_OLED_command
  9061                           
  9062                           ;OLED_Display.c: 172: OLED_command (0x00);
  9063  0026B6  0E00               	movlw	0
  9064  0026B8  ECE5  F013         	call	_OLED_command
  9065  0026BC  0012               	return		;funcret
  9066  0026BE                     __end_of_OLED_init:
  9067                           	opt stack 0
  9068                           tosu	equ	0xFFF
  9069                           tosh	equ	0xFFE
  9070                           tosl	equ	0xFFD
  9071                           pclath	equ	0xFFA
  9072                           tblptru	equ	0xFF8
  9073                           tblptrh	equ	0xFF7
  9074                           tblptrl	equ	0xFF6
  9075                           tablat	equ	0xFF5
  9076                           prodh	equ	0xFF4
  9077                           prodl	equ	0xFF3
  9078                           intcon	equ	0xFF2
  9079                           indf0	equ	0xFEF
  9080                           postinc0	equ	0xFEE
  9081                           fsr0h	equ	0xFEA
  9082                           fsr0l	equ	0xFE9
  9083                           wreg	equ	0xFE8
  9084                           indf2	equ	0xFDF
  9085                           postinc2	equ	0xFDE
  9086                           postdec2	equ	0xFDD
  9087                           plusw2	equ	0xFDB
  9088                           fsr2h	equ	0xFDA
  9089                           fsr2l	equ	0xFD9
  9090                           status	equ	0xFD8
  9091                           
  9092 ;; *************** function _OLED_command *****************
  9093 ;; Defined at:
  9094 ;;		line 10 in file "OLED_Display.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  com             1    wreg     unsigned char 
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  com             1   36[COMRAM] unsigned char 
  9099 ;;  status          1   37[COMRAM] enum E8975
  9100 ;; Return value:  Size  Location     Type
  9101 ;;		None               void
  9102 ;; Registers used:
  9103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9109 ;;      Params:         0       0       0       0       0       0       0
  9110 ;;      Locals:         2       0       0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0
  9112 ;;      Totals:         2       0       0       0       0       0       0
  9113 ;;Total ram usage:        2 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:    6
  9116 ;; This function calls:
  9117 ;;		_I2C1_MasterWrite
  9118 ;; This function is called by:
  9119 ;;		_oledGotoYX
  9120 ;;		_OLED_init
  9121 ;;		_Display
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text40
  9126  0027CA                     __ptext40:
  9127                           	opt stack 0
  9128  0027CA                     _OLED_command:
  9129                           	opt stack 22
  9130                           
  9131                           ;incstack = 0
  9132                           ;OLED_command@com stored from wreg
  9133  0027CA  6E25               	movwf	OLED_command@com,c
  9134                           
  9135                           ;OLED_Display.c: 12: Buff[0] = 0x80;
  9136  0027CC  0E80               	movlw	128
  9137  0027CE  0100               	movlb	0	; () banked
  9138  0027D0  6FF0               	movwf	_Buff& (0+255),b
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;OLED_Display.c: 14: Buff[1] = com;
  9142  0027D2  C025  F0F1         	movff	OLED_command@com,_Buff+1
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;OLED_Display.c: 15: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9146  0027D6  0E02               	movlw	2
  9147  0027D8  6E26               	movwf	OLED_command@status,c
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;OLED_Display.c: 17: timeOut = 0;
  9151  0027DA  0E00               	movlw	0
  9152  0027DC  0100               	movlb	0	; () banked
  9153  0027DE  6FDE               	movwf	(_timeOut+1)& (0+255),b
  9154  0027E0  0E00               	movlw	0
  9155  0027E2  6FDD               	movwf	_timeOut& (0+255),b
  9156                           
  9157                           ;OLED_Display.c: 18: while (status != I2C1_MESSAGE_FAIL) {
  9158  0027E4  D02C               	goto	l6132
  9159  0027E6                     l6112:
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;OLED_Display.c: 20: I2C1_MasterWrite(Buff,
  9163                           ;OLED_Display.c: 21: 2,
  9164                           ;OLED_Display.c: 22: 0x3C,
  9165                           ;OLED_Display.c: 23: &status);
  9166  0027E6  0EF0               	movlw	low _Buff
  9167  0027E8  0100               	movlb	0	; () banked
  9168  0027EA  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  9169  0027EC  0E00               	movlw	high _Buff
  9170  0027EE  0100               	movlb	0	; () banked
  9171  0027F0  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  9172  0027F2  0E00               	movlw	0
  9173  0027F4  0100               	movlb	0	; () banked
  9174  0027F6  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  9175  0027F8  0E02               	movlw	2
  9176  0027FA  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  9177  0027FC  0E00               	movlw	0
  9178  0027FE  0100               	movlb	0	; () banked
  9179  002800  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  9180  002802  0E3C               	movlw	60
  9181  002804  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  9182  002806  0E26               	movlw	low OLED_command@status
  9183  002808  0100               	movlb	0	; () banked
  9184  00280A  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  9185  00280C  0E00               	movlw	high OLED_command@status
  9186  00280E  0100               	movlb	0	; () banked
  9187  002810  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  9188  002812  ECF7  F015         	call	_I2C1_MasterWrite	;wreg free
  9189  002816                     l6114:
  9190  002816  0E02               	movlw	2
  9191  002818  1826               	xorwf	OLED_command@status,w,c
  9192  00281A  B4D8               	btfsc	status,2,c
  9193  00281C  D7FC               	goto	l6114
  9194                           
  9195                           ;OLED_Display.c: 28: if (status == I2C1_MESSAGE_COMPLETE)
  9196  00281E  5026               	movf	OLED_command@status,w,c
  9197  002820  B4D8               	btfsc	status,2,c
  9198  002822  0012               	return	
  9199                           
  9200                           ;OLED_Display.c: 30: if (timeOut == 100)
  9201                           
  9202                           ;OLED_Display.c: 29: break;
  9203  002824  0E64               	movlw	100
  9204  002826  0100               	movlb	0	; () banked
  9205  002828  19DD               	xorwf	_timeOut& (0+255),w,b
  9206  00282A  0100               	movlb	0	; () banked
  9207  00282C  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  9208  00282E  B4D8               	btfsc	status,2,c
  9209  002830  0012               	return	
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;OLED_Display.c: 32: if (status == I2C1_MESSAGE_FAIL)
  9213                           
  9214                           ; BSR set to: 0
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;OLED_Display.c: 31: break;
  9218  002832  0426               	decf	OLED_command@status,w,c
  9219  002834  B4D8               	btfsc	status,2,c
  9220  002836  0012               	return	
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;OLED_Display.c: 34: else
  9224                           ;OLED_Display.c: 35: timeOut++;
  9225                           
  9226                           ; BSR set to: 0
  9227                           
  9228                           ; BSR set to: 0
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;OLED_Display.c: 33: break;
  9232  002838  0100               	movlb	0	; () banked
  9233  00283A  4BDD               	infsnz	_timeOut& (0+255),f,b
  9234  00283C  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  9235  00283E                     l6132:
  9236                           
  9237                           ; BSR set to: 0
  9238  00283E  0426               	decf	OLED_command@status,w,c
  9239  002840  B4D8               	btfsc	status,2,c
  9240  002842  0012               	return	
  9241  002844  D7D0               	goto	l6112
  9242  002846                     __end_of_OLED_command:
  9243                           	opt stack 0
  9244                           tosu	equ	0xFFF
  9245                           tosh	equ	0xFFE
  9246                           tosl	equ	0xFFD
  9247                           pclath	equ	0xFFA
  9248                           tblptru	equ	0xFF8
  9249                           tblptrh	equ	0xFF7
  9250                           tblptrl	equ	0xFF6
  9251                           tablat	equ	0xFF5
  9252                           prodh	equ	0xFF4
  9253                           prodl	equ	0xFF3
  9254                           intcon	equ	0xFF2
  9255                           indf0	equ	0xFEF
  9256                           postinc0	equ	0xFEE
  9257                           fsr0h	equ	0xFEA
  9258                           fsr0l	equ	0xFE9
  9259                           wreg	equ	0xFE8
  9260                           indf2	equ	0xFDF
  9261                           postinc2	equ	0xFDE
  9262                           postdec2	equ	0xFDD
  9263                           plusw2	equ	0xFDB
  9264                           fsr2h	equ	0xFDA
  9265                           fsr2l	equ	0xFD9
  9266                           status	equ	0xFD8
  9267                           
  9268 ;; *************** function _SYSTEM_Initialize *****************
  9269 ;; Defined at:
  9270 ;;		line 112 in file "mcc_generated_files/mcc.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;		None
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;		None
  9275 ;; Return value:  Size  Location     Type
  9276 ;;		None               void
  9277 ;; Registers used:
  9278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9284 ;;      Params:         0       0       0       0       0       0       0
  9285 ;;      Locals:         0       0       0       0       0       0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0
  9287 ;;      Totals:         0       0       0       0       0       0       0
  9288 ;;Total ram usage:        0 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:    7
  9291 ;; This function calls:
  9292 ;;		_ADC_Initialize
  9293 ;;		_EUSART1_Initialize
  9294 ;;		_I2C1_Initialize
  9295 ;;		_INTERRUPT_Initialize
  9296 ;;		_OSCILLATOR_Initialize
  9297 ;;		_PIN_MANAGER_Initialize
  9298 ;;		_TMR0_Initialize
  9299 ;;		_TMR2_Initialize
  9300 ;;		_begin
  9301 ;; This function is called by:
  9302 ;;		_main
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text41
  9307  0028BA                     __ptext41:
  9308                           	opt stack 0
  9309  0028BA                     _SYSTEM_Initialize:
  9310                           	opt stack 23
  9311                           
  9312                           ;mcc.c: 114: OSCILLATOR_Initialize();
  9313                           
  9314                           ;incstack = 0
  9315  0028BA  ECD1  F018         	call	_OSCILLATOR_Initialize	;wreg free
  9316                           
  9317                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9318  0028BE  EC04  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  9319                           
  9320                           ;mcc.c: 116: INTERRUPT_Initialize();
  9321  0028C2  ECBA  F018         	call	_INTERRUPT_Initialize	;wreg free
  9322                           
  9323                           ;mcc.c: 117: ADC_Initialize();
  9324  0028C6  EC84  F018         	call	_ADC_Initialize	;wreg free
  9325                           
  9326                           ;mcc.c: 118: TMR0_Initialize();
  9327  0028CA  EC49  F018         	call	_TMR0_Initialize	;wreg free
  9328                           
  9329                           ;mcc.c: 119: TMR2_Initialize();
  9330  0028CE  EC38  F018         	call	_TMR2_Initialize	;wreg free
  9331                           
  9332                           ;mcc.c: 120: EUSART1_Initialize();
  9333  0028D2  ECF5  F016         	call	_EUSART1_Initialize	;wreg free
  9334                           
  9335                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  9336  0028D6  0E00               	movlw	low _receiveArray
  9337  0028D8  0101               	movlb	1	; () banked
  9338  0028DA  6F39               	movwf	begin@ptr& (0+255),b
  9339  0028DC  0E01               	movlw	high _receiveArray
  9340  0028DE  0101               	movlb	1	; () banked
  9341  0028E0  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  9342  0028E2  0E28               	movlw	40
  9343  0028E4  0101               	movlb	1	; () banked
  9344  0028E6  6F3B               	movwf	begin@maxSize& (0+255),b
  9345  0028E8  0E03               	movlw	3
  9346  0028EA  0101               	movlb	1	; () banked
  9347  0028EC  6F3C               	movwf	begin@givenAddress& (0+255),b
  9348  0028EE  0E00               	movlw	0
  9349  0028F0  0101               	movlb	1	; () banked
  9350  0028F2  6F3D               	movwf	begin@error& (0+255),b
  9351  0028F4  0EFE               	movlw	low _Send_put
  9352  0028F6  0101               	movlb	1	; () banked
  9353  0028F8  6F3E               	movwf	begin@stufftosend& (0+255),b
  9354  0028FA  0E2E               	movlw	high _Send_put
  9355  0028FC  0101               	movlb	1	; () banked
  9356  0028FE  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  9357  002900  0E94               	movlw	low _Receive_get
  9358  002902  0101               	movlb	1	; () banked
  9359  002904  6F40               	movwf	begin@stufftoreceive& (0+255),b
  9360  002906  0E31               	movlw	high _Receive_get
  9361  002908  0101               	movlb	1	; () banked
  9362  00290A  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  9363  00290C  0E20               	movlw	low _Receive_available
  9364  00290E  0101               	movlb	1	; () banked
  9365  002910  6F42               	movwf	begin@stuffavailable& (0+255),b
  9366  002912  0E31               	movlw	high _Receive_available
  9367  002914  0101               	movlb	1	; () banked
  9368  002916  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  9369  002918  0E86               	movlw	low _Receive_peek
  9370  00291A  0101               	movlb	1	; () banked
  9371  00291C  6F44               	movwf	begin@stuffpeek& (0+255),b
  9372  00291E  0E31               	movlw	high _Receive_peek
  9373  002920  0101               	movlb	1	; () banked
  9374  002922  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  9375  002924  EC9C  F015         	call	_begin	;wreg free
  9376                           
  9377                           ;mcc.c: 122: I2C1_Initialize();
  9378  002928  ECD7  F016         	call	_I2C1_Initialize	;wreg free
  9379  00292C  0012               	return		;funcret
  9380  00292E                     __end_of_SYSTEM_Initialize:
  9381                           	opt stack 0
  9382                           tosu	equ	0xFFF
  9383                           tosh	equ	0xFFE
  9384                           tosl	equ	0xFFD
  9385                           pclath	equ	0xFFA
  9386                           tblptru	equ	0xFF8
  9387                           tblptrh	equ	0xFF7
  9388                           tblptrl	equ	0xFF6
  9389                           tablat	equ	0xFF5
  9390                           prodh	equ	0xFF4
  9391                           prodl	equ	0xFF3
  9392                           intcon	equ	0xFF2
  9393                           indf0	equ	0xFEF
  9394                           postinc0	equ	0xFEE
  9395                           fsr0h	equ	0xFEA
  9396                           fsr0l	equ	0xFE9
  9397                           wreg	equ	0xFE8
  9398                           indf2	equ	0xFDF
  9399                           postinc2	equ	0xFDE
  9400                           postdec2	equ	0xFDD
  9401                           plusw2	equ	0xFDB
  9402                           fsr2h	equ	0xFDA
  9403                           fsr2l	equ	0xFD9
  9404                           status	equ	0xFD8
  9405                           
  9406 ;; *************** function _begin *****************
  9407 ;; Defined at:
  9408 ;;		line 19 in file "FastTransfer.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  9411 ;;		 -> receiveArray(40), 
  9412 ;;  maxSize         1    2[BANK1 ] unsigned char 
  9413 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  9414 ;;  error           1    4[BANK1 ] unsigned char 
  9415 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  9416 ;;		 -> Send_put(0), 
  9417 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  9418 ;;		 -> Receive_get(1), 
  9419 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  9420 ;;		 -> Receive_available(2), 
  9421 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  9422 ;;		 -> Receive_peek(1), 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;		None               void
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9434 ;;      Params:         0       0      13       0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0
  9437 ;;      Totals:         0       0      13       0       0       0       0
  9438 ;;Total ram usage:       13 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    5
  9441 ;; This function calls:
  9442 ;;		___awdiv
  9443 ;; This function is called by:
  9444 ;;		_SYSTEM_Initialize
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text42
  9449  002B38                     __ptext42:
  9450                           	opt stack 0
  9451  002B38                     _begin:
  9452                           	opt stack 24
  9453                           
  9454                           ;FastTransfer.c: 20: receiveArrayAddress = ptr;
  9455                           
  9456                           ;incstack = 0
  9457  002B38  C139  F0D7         	movff	begin@ptr,_receiveArrayAddress
  9458  002B3C  C13A  F0D8         	movff	begin@ptr+1,_receiveArrayAddress+1
  9459                           
  9460                           ;FastTransfer.c: 21: moduleAddress = givenAddress;
  9461  002B40  C13C  F03A         	movff	begin@givenAddress,_moduleAddress
  9462                           
  9463                           ;FastTransfer.c: 22: serial_write = stufftosend;
  9464  002B44  C13E  F033         	movff	begin@stufftosend,_serial_write
  9465  002B48  C13F  F034         	movff	begin@stufftosend+1,_serial_write+1
  9466                           
  9467                           ;FastTransfer.c: 23: serial_available = stuffavailable;
  9468  002B4C  C142  F02F         	movff	begin@stuffavailable,_serial_available
  9469  002B50  C143  F030         	movff	begin@stuffavailable+1,_serial_available+1
  9470                           
  9471                           ;FastTransfer.c: 24: serial_peek = stuffpeek;
  9472  002B54  C144  F0DB         	movff	begin@stuffpeek,_serial_peek
  9473  002B58  C145  F0DC         	movff	begin@stuffpeek+1,_serial_peek+1
  9474                           
  9475                           ;FastTransfer.c: 25: serial_read = stufftoreceive;
  9476  002B5C  C140  F031         	movff	begin@stufftoreceive,_serial_read
  9477  002B60  C141  F032         	movff	begin@stufftoreceive+1,_serial_read+1
  9478                           
  9479                           ;FastTransfer.c: 26: maxDataAddress = maxSize / 2;
  9480  002B64  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  9481  002B68  6A1C               	clrf	___awdiv@dividend+1,c
  9482  002B6A  0E00               	movlw	0
  9483  002B6C  6E1E               	movwf	___awdiv@divisor+1,c
  9484  002B6E  0E02               	movlw	2
  9485  002B70  6E1D               	movwf	___awdiv@divisor,c
  9486  002B72  ECA3  F013         	call	___awdiv	;wreg free
  9487  002B76  501B               	movf	?___awdiv,w,c
  9488  002B78  6E39               	movwf	_maxDataAddress,c
  9489                           
  9490                           ;FastTransfer.c: 27: sendStructAddress = (unsigned char*) & ring_buffer;
  9491  002B7A  0E00               	movlw	low _ring_buffer
  9492  002B7C  0100               	movlb	0	; () banked
  9493  002B7E  6FD9               	movwf	_sendStructAddress& (0+255),b
  9494  002B80  0E02               	movlw	high _ring_buffer
  9495  002B82  0100               	movlb	0	; () banked
  9496  002B84  6FDA               	movwf	(_sendStructAddress+1)& (0+255),b
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;FastTransfer.c: 28: AKNAKsend = error;
  9500  002B86  C13D  F036         	movff	begin@error,_AKNAKsend
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;FastTransfer.c: 29: alignErrorCounter = 0;
  9504  002B8A  0E00               	movlw	0
  9505  002B8C  0100               	movlb	0	; () banked
  9506  002B8E  6FCA               	movwf	(_alignErrorCounter+1)& (0+255),b
  9507  002B90  0E00               	movlw	0
  9508  002B92  6FC9               	movwf	_alignErrorCounter& (0+255),b
  9509                           
  9510                           ; BSR set to: 0
  9511  002B94  0012               	return		;funcret
  9512  002B96                     __end_of_begin:
  9513                           	opt stack 0
  9514                           tosu	equ	0xFFF
  9515                           tosh	equ	0xFFE
  9516                           tosl	equ	0xFFD
  9517                           pclath	equ	0xFFA
  9518                           tblptru	equ	0xFF8
  9519                           tblptrh	equ	0xFF7
  9520                           tblptrl	equ	0xFF6
  9521                           tablat	equ	0xFF5
  9522                           prodh	equ	0xFF4
  9523                           prodl	equ	0xFF3
  9524                           intcon	equ	0xFF2
  9525                           indf0	equ	0xFEF
  9526                           postinc0	equ	0xFEE
  9527                           fsr0h	equ	0xFEA
  9528                           fsr0l	equ	0xFE9
  9529                           wreg	equ	0xFE8
  9530                           indf2	equ	0xFDF
  9531                           postinc2	equ	0xFDE
  9532                           postdec2	equ	0xFDD
  9533                           plusw2	equ	0xFDB
  9534                           fsr2h	equ	0xFDA
  9535                           fsr2l	equ	0xFD9
  9536                           status	equ	0xFD8
  9537                           
  9538 ;; *************** function _TMR2_Initialize *****************
  9539 ;; Defined at:
  9540 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;		None
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;		None
  9545 ;; Return value:  Size  Location     Type
  9546 ;;		None               void
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0, cstack
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9554 ;;      Params:         0       0       0       0       0       0       0
  9555 ;;      Locals:         0       0       0       0       0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0
  9557 ;;      Totals:         0       0       0       0       0       0       0
  9558 ;;Total ram usage:        0 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    5
  9561 ;; This function calls:
  9562 ;;		_TMR2_SetInterruptHandler
  9563 ;;		_TMR2_StartTimer
  9564 ;; This function is called by:
  9565 ;;		_SYSTEM_Initialize
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text43
  9570  003070                     __ptext43:
  9571                           	opt stack 0
  9572  003070                     _TMR2_Initialize:
  9573                           	opt stack 24
  9574                           
  9575                           ;tmr2.c: 67: T2CON = 0x7E;
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;incstack = 0
  9579  003070  0E7E               	movlw	126
  9580  003072  6EBA               	movwf	4026,c	;volatile
  9581                           
  9582                           ;tmr2.c: 70: PR2 = 0x30;
  9583  003074  0E30               	movlw	48
  9584  003076  6EBB               	movwf	4027,c	;volatile
  9585                           
  9586                           ;tmr2.c: 73: TMR2 = 0x00;
  9587  003078  0E00               	movlw	0
  9588  00307A  6EBC               	movwf	4028,c	;volatile
  9589                           
  9590                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  9591  00307C  929E               	bcf	3998,1,c	;volatile
  9592                           
  9593                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  9594  00307E  829D               	bsf	3997,1,c	;volatile
  9595                           
  9596                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  9597  003080  0EFA               	movlw	low _TMR2_DefaultInterruptHandler
  9598  003082  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  9599  003084  0E31               	movlw	high _TMR2_DefaultInterruptHandler
  9600  003086  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  9601  003088  ECDD  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  9602                           
  9603                           ;tmr2.c: 85: TMR2_StartTimer();
  9604  00308C  ECF7  F018         	call	_TMR2_StartTimer	;wreg free
  9605  003090  0012               	return		;funcret
  9606  003092                     __end_of_TMR2_Initialize:
  9607                           	opt stack 0
  9608                           tosu	equ	0xFFF
  9609                           tosh	equ	0xFFE
  9610                           tosl	equ	0xFFD
  9611                           pclath	equ	0xFFA
  9612                           tblptru	equ	0xFF8
  9613                           tblptrh	equ	0xFF7
  9614                           tblptrl	equ	0xFF6
  9615                           tablat	equ	0xFF5
  9616                           prodh	equ	0xFF4
  9617                           prodl	equ	0xFF3
  9618                           intcon	equ	0xFF2
  9619                           indf0	equ	0xFEF
  9620                           postinc0	equ	0xFEE
  9621                           fsr0h	equ	0xFEA
  9622                           fsr0l	equ	0xFE9
  9623                           wreg	equ	0xFE8
  9624                           indf2	equ	0xFDF
  9625                           postinc2	equ	0xFDE
  9626                           postdec2	equ	0xFDD
  9627                           plusw2	equ	0xFDB
  9628                           fsr2h	equ	0xFDA
  9629                           fsr2l	equ	0xFD9
  9630                           status	equ	0xFD8
  9631                           
  9632 ;; *************** function _TMR2_StartTimer *****************
  9633 ;; Defined at:
  9634 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;		None
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;		None               void
  9641 ;; Registers used:
  9642 ;;		None
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9648 ;;      Params:         0       0       0       0       0       0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0
  9651 ;;      Totals:         0       0       0       0       0       0       0
  9652 ;;Total ram usage:        0 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    4
  9655 ;; This function calls:
  9656 ;;		Nothing
  9657 ;; This function is called by:
  9658 ;;		_TMR2_Initialize
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text44
  9663  0031EE                     __ptext44:
  9664                           	opt stack 0
  9665  0031EE                     _TMR2_StartTimer:
  9666                           	opt stack 24
  9667                           
  9668                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  9669                           
  9670                           ;incstack = 0
  9671  0031EE  84BA               	bsf	4026,2,c	;volatile
  9672  0031F0  0012               	return		;funcret
  9673  0031F2                     __end_of_TMR2_StartTimer:
  9674                           	opt stack 0
  9675                           tosu	equ	0xFFF
  9676                           tosh	equ	0xFFE
  9677                           tosl	equ	0xFFD
  9678                           pclath	equ	0xFFA
  9679                           tblptru	equ	0xFF8
  9680                           tblptrh	equ	0xFF7
  9681                           tblptrl	equ	0xFF6
  9682                           tablat	equ	0xFF5
  9683                           prodh	equ	0xFF4
  9684                           prodl	equ	0xFF3
  9685                           intcon	equ	0xFF2
  9686                           indf0	equ	0xFEF
  9687                           postinc0	equ	0xFEE
  9688                           fsr0h	equ	0xFEA
  9689                           fsr0l	equ	0xFE9
  9690                           wreg	equ	0xFE8
  9691                           indf2	equ	0xFDF
  9692                           postinc2	equ	0xFDE
  9693                           postdec2	equ	0xFDD
  9694                           plusw2	equ	0xFDB
  9695                           fsr2h	equ	0xFDA
  9696                           fsr2l	equ	0xFD9
  9697                           status	equ	0xFD8
  9698                           
  9699 ;; *************** function _TMR2_SetInterruptHandler *****************
  9700 ;; Defined at:
  9701 ;;		line 291 in file "mcc_generated_files/tmr2.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  InterruptHan    2   26[COMRAM] PTR void 
  9704 ;;		 -> TMR2_DefaultInterruptHandler(0), 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;		None               void
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9716 ;;      Params:         2       0       0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0
  9719 ;;      Totals:         2       0       0       0       0       0       0
  9720 ;;Total ram usage:        2 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    4
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_TMR2_Initialize
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text45
  9731  0031BA                     __ptext45:
  9732                           	opt stack 0
  9733  0031BA                     _TMR2_SetInterruptHandler:
  9734                           	opt stack 24
  9735                           
  9736                           ;tmr2.c: 292: TMR2_InterruptHandler = InterruptHandler;
  9737                           
  9738                           ;incstack = 0
  9739  0031BA  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9740  0031BE  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9741  0031C2  0012               	return		;funcret
  9742  0031C4                     __end_of_TMR2_SetInterruptHandler:
  9743                           	opt stack 0
  9744                           tosu	equ	0xFFF
  9745                           tosh	equ	0xFFE
  9746                           tosl	equ	0xFFD
  9747                           pclath	equ	0xFFA
  9748                           tblptru	equ	0xFF8
  9749                           tblptrh	equ	0xFF7
  9750                           tblptrl	equ	0xFF6
  9751                           tablat	equ	0xFF5
  9752                           prodh	equ	0xFF4
  9753                           prodl	equ	0xFF3
  9754                           intcon	equ	0xFF2
  9755                           indf0	equ	0xFEF
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           indf2	equ	0xFDF
  9761                           postinc2	equ	0xFDE
  9762                           postdec2	equ	0xFDD
  9763                           plusw2	equ	0xFDB
  9764                           fsr2h	equ	0xFDA
  9765                           fsr2l	equ	0xFD9
  9766                           status	equ	0xFD8
  9767                           
  9768 ;; *************** function _TMR0_Initialize *****************
  9769 ;; Defined at:
  9770 ;;		line 23 in file "mcc_generated_files/tmr0.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;		None
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;		None               void
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9784 ;;      Params:         0       0       0       0       0       0       0
  9785 ;;      Locals:         0       0       0       0       0       0       0
  9786 ;;      Temps:          0       0       0       0       0       0       0
  9787 ;;      Totals:         0       0       0       0       0       0       0
  9788 ;;Total ram usage:        0 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:    5
  9791 ;; This function calls:
  9792 ;;		_TMR0_StartTimer
  9793 ;; This function is called by:
  9794 ;;		_SYSTEM_Initialize
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text46
  9799  003092                     __ptext46:
  9800                           	opt stack 0
  9801  003092                     _TMR0_Initialize:
  9802                           	opt stack 24
  9803                           
  9804                           ;tmr0.c: 27: T0CON = 0x94;
  9805                           
  9806                           ;incstack = 0
  9807  003092  0E94               	movlw	148
  9808  003094  6ED5               	movwf	4053,c	;volatile
  9809                           
  9810                           ;tmr0.c: 30: TMR0H = 0xCF;
  9811  003096  0ECF               	movlw	207
  9812  003098  6ED7               	movwf	4055,c	;volatile
  9813                           
  9814                           ;tmr0.c: 33: TMR0L = 0x2C;
  9815  00309A  0E2C               	movlw	44
  9816  00309C  6ED6               	movwf	4054,c	;volatile
  9817                           
  9818                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  9819  00309E  0ECF               	movlw	207
  9820  0030A0  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  9821  0030A2  0E2C               	movlw	44
  9822  0030A4  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  9823                           
  9824                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  9825  0030A6  94F2               	bcf	intcon,2,c	;volatile
  9826                           
  9827                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  9828  0030A8  8AF2               	bsf	intcon,5,c	;volatile
  9829                           
  9830                           ;tmr0.c: 45: TMR0_StartTimer();
  9831  0030AA  ECF9  F018         	call	_TMR0_StartTimer	;wreg free
  9832  0030AE  0012               	return		;funcret
  9833  0030B0                     __end_of_TMR0_Initialize:
  9834                           	opt stack 0
  9835                           tosu	equ	0xFFF
  9836                           tosh	equ	0xFFE
  9837                           tosl	equ	0xFFD
  9838                           pclath	equ	0xFFA
  9839                           tblptru	equ	0xFF8
  9840                           tblptrh	equ	0xFF7
  9841                           tblptrl	equ	0xFF6
  9842                           tablat	equ	0xFF5
  9843                           prodh	equ	0xFF4
  9844                           prodl	equ	0xFF3
  9845                           intcon	equ	0xFF2
  9846                           indf0	equ	0xFEF
  9847                           postinc0	equ	0xFEE
  9848                           fsr0h	equ	0xFEA
  9849                           fsr0l	equ	0xFE9
  9850                           wreg	equ	0xFE8
  9851                           indf2	equ	0xFDF
  9852                           postinc2	equ	0xFDE
  9853                           postdec2	equ	0xFDD
  9854                           plusw2	equ	0xFDB
  9855                           fsr2h	equ	0xFDA
  9856                           fsr2l	equ	0xFD9
  9857                           status	equ	0xFD8
  9858                           
  9859 ;; *************** function _TMR0_StartTimer *****************
  9860 ;; Defined at:
  9861 ;;		line 48 in file "mcc_generated_files/tmr0.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;		None
  9866 ;; Return value:  Size  Location     Type
  9867 ;;		None               void
  9868 ;; Registers used:
  9869 ;;		None
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9875 ;;      Params:         0       0       0       0       0       0       0
  9876 ;;      Locals:         0       0       0       0       0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0
  9878 ;;      Totals:         0       0       0       0       0       0       0
  9879 ;;Total ram usage:        0 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; Hardware stack levels required when called:    4
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_TMR0_Initialize
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text47
  9890  0031F2                     __ptext47:
  9891                           	opt stack 0
  9892  0031F2                     _TMR0_StartTimer:
  9893                           	opt stack 24
  9894                           
  9895                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
  9896                           
  9897                           ;incstack = 0
  9898  0031F2  8ED5               	bsf	4053,7,c	;volatile
  9899  0031F4  0012               	return		;funcret
  9900  0031F6                     __end_of_TMR0_StartTimer:
  9901                           	opt stack 0
  9902                           tosu	equ	0xFFF
  9903                           tosh	equ	0xFFE
  9904                           tosl	equ	0xFFD
  9905                           pclath	equ	0xFFA
  9906                           tblptru	equ	0xFF8
  9907                           tblptrh	equ	0xFF7
  9908                           tblptrl	equ	0xFF6
  9909                           tablat	equ	0xFF5
  9910                           prodh	equ	0xFF4
  9911                           prodl	equ	0xFF3
  9912                           intcon	equ	0xFF2
  9913                           indf0	equ	0xFEF
  9914                           postinc0	equ	0xFEE
  9915                           fsr0h	equ	0xFEA
  9916                           fsr0l	equ	0xFE9
  9917                           wreg	equ	0xFE8
  9918                           indf2	equ	0xFDF
  9919                           postinc2	equ	0xFDE
  9920                           postdec2	equ	0xFDD
  9921                           plusw2	equ	0xFDB
  9922                           fsr2h	equ	0xFDA
  9923                           fsr2l	equ	0xFD9
  9924                           status	equ	0xFD8
  9925                           
  9926 ;; *************** function _PIN_MANAGER_Initialize *****************
  9927 ;; Defined at:
  9928 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;		None
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;		None               void
  9935 ;; Registers used:
  9936 ;;		wreg, status,2
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9942 ;;      Params:         0       0       0       0       0       0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0
  9945 ;;      Totals:         0       0       0       0       0       0       0
  9946 ;;Total ram usage:        0 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; Hardware stack levels required when called:    4
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_SYSTEM_Initialize
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text48
  9957  002A08                     __ptext48:
  9958                           	opt stack 0
  9959  002A08                     _PIN_MANAGER_Initialize:
  9960                           	opt stack 25
  9961                           
  9962                           ;pin_manager.c: 52: LATA = 0x00;
  9963                           
  9964                           ;incstack = 0
  9965  002A08  0E00               	movlw	0
  9966  002A0A  6E89               	movwf	3977,c	;volatile
  9967                           
  9968                           ;pin_manager.c: 53: TRISA = 0xF7;
  9969  002A0C  0EF7               	movlw	247
  9970  002A0E  6E92               	movwf	3986,c	;volatile
  9971                           
  9972                           ;pin_manager.c: 54: ANSELA = 0x20;
  9973  002A10  0E20               	movlw	32
  9974  002A12  010F               	movlb	15	; () banked
  9975  002A14  6F38               	movwf	56,b	;volatile
  9976                           
  9977                           ;pin_manager.c: 56: LATB = 0x00;
  9978  002A16  0E00               	movlw	0
  9979  002A18  6E8A               	movwf	3978,c	;volatile
  9980                           
  9981                           ;pin_manager.c: 57: TRISB = 0xD7;
  9982  002A1A  0ED7               	movlw	215
  9983  002A1C  6E93               	movwf	3987,c	;volatile
  9984                           
  9985                           ;pin_manager.c: 58: ANSELB = 0x00;
  9986  002A1E  0E00               	movlw	0
  9987  002A20  010F               	movlb	15	; () banked
  9988  002A22  6F39               	movwf	57,b	;volatile
  9989                           
  9990                           ;pin_manager.c: 59: WPUB = 0x00;
  9991  002A24  0E00               	movlw	0
  9992  002A26  6E61               	movwf	3937,c	;volatile
  9993                           
  9994                           ;pin_manager.c: 61: LATC = 0x18;
  9995  002A28  0E18               	movlw	24
  9996  002A2A  6E8B               	movwf	3979,c	;volatile
  9997                           
  9998                           ;pin_manager.c: 62: TRISC = 0xDF;
  9999  002A2C  0EDF               	movlw	223
 10000  002A2E  6E94               	movwf	3988,c	;volatile
 10001                           
 10002                           ;pin_manager.c: 65: LATD = 0x00;
 10003  002A30  0E00               	movlw	0
 10004  002A32  6E8C               	movwf	3980,c	;volatile
 10005                           
 10006                           ;pin_manager.c: 66: TRISD = 0xFD;
 10007  002A34  0EFD               	movlw	253
 10008  002A36  6E95               	movwf	3989,c	;volatile
 10009                           
 10010                           ;pin_manager.c: 67: ANSELD = 0xDD;
 10011  002A38  0EDD               	movlw	221
 10012  002A3A  010F               	movlb	15	; () banked
 10013  002A3C  6F3B               	movwf	59,b	;volatile
 10014                           
 10015                           ;pin_manager.c: 69: LATE = 0x00;
 10016  002A3E  0E00               	movlw	0
 10017  002A40  6E8D               	movwf	3981,c	;volatile
 10018                           
 10019                           ;pin_manager.c: 70: TRISE = 0x00;
 10020  002A42  0E00               	movlw	0
 10021  002A44  6E96               	movwf	3990,c	;volatile
 10022                           
 10023                           ;pin_manager.c: 71: ANSELE = 0x00;
 10024  002A46  0E00               	movlw	0
 10025  002A48  010F               	movlb	15	; () banked
 10026  002A4A  6F3C               	movwf	60,b	;volatile
 10027                           
 10028                           ;pin_manager.c: 73: ANSELC = 0xE4;
 10029  002A4C  0EE4               	movlw	228
 10030  002A4E  010F               	movlb	15	; () banked
 10031  002A50  6F3A               	movwf	58,b	;volatile
 10032                           
 10033                           ; BSR set to: 15
 10034                           ;pin_manager.c: 76: TRISCbits.RC5 = 0;
 10035  002A52  9A94               	bcf	3988,5,c	;volatile
 10036                           
 10037                           ; BSR set to: 15
 10038                           ;pin_manager.c: 77: ANSELCbits.ANSC5 = 0;
 10039  002A54  010F               	movlb	15	; () banked
 10040  002A56  9B3A               	bcf	58,5,b	;volatile
 10041                           
 10042                           ; BSR set to: 15
 10043                           ;pin_manager.c: 78: LATCbits.LATC5 = 0;
 10044  002A58  9A8B               	bcf	3979,5,c	;volatile
 10045                           
 10046                           ; BSR set to: 15
 10047                           ;pin_manager.c: 80: TRISCbits.TRISC5=0;
 10048  002A5A  9A94               	bcf	3988,5,c	;volatile
 10049                           
 10050                           ; BSR set to: 15
 10051                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 0x01;
 10052  002A5C  8EF1               	bsf	intcon2,7,c	;volatile
 10053                           
 10054                           ; BSR set to: 15
 10055                           ;pin_manager.c: 84: TRISAbits.RA3 = 0;
 10056  002A5E  9692               	bcf	3986,3,c	;volatile
 10057                           
 10058                           ; BSR set to: 15
 10059                           ;pin_manager.c: 85: ANSELAbits.ANSA3 = 0;
 10060  002A60  010F               	movlb	15	; () banked
 10061  002A62  9738               	bcf	56,3,b	;volatile
 10062                           
 10063                           ; BSR set to: 15
 10064                           ;pin_manager.c: 88: TRISCbits.RC6 = 0;
 10065  002A64  9C94               	bcf	3988,6,c	;volatile
 10066                           
 10067                           ; BSR set to: 15
 10068                           ;pin_manager.c: 89: TRISCbits.RC7 = 1;
 10069  002A66  8E94               	bsf	3988,7,c	;volatile
 10070                           
 10071                           ; BSR set to: 15
 10072                           ;pin_manager.c: 90: ANSELCbits.ANSC6 = 0;
 10073  002A68  010F               	movlb	15	; () banked
 10074  002A6A  9D3A               	bcf	58,6,b	;volatile
 10075                           
 10076                           ; BSR set to: 15
 10077                           ;pin_manager.c: 91: ANSELCbits.ANSC7 = 0;
 10078  002A6C  010F               	movlb	15	; () banked
 10079  002A6E  9F3A               	bcf	58,7,b	;volatile
 10080                           
 10081                           ; BSR set to: 15
 10082  002A70  0012               	return		;funcret
 10083  002A72                     __end_of_PIN_MANAGER_Initialize:
 10084                           	opt stack 0
 10085                           tosu	equ	0xFFF
 10086                           tosh	equ	0xFFE
 10087                           tosl	equ	0xFFD
 10088                           pclath	equ	0xFFA
 10089                           tblptru	equ	0xFF8
 10090                           tblptrh	equ	0xFF7
 10091                           tblptrl	equ	0xFF6
 10092                           tablat	equ	0xFF5
 10093                           prodh	equ	0xFF4
 10094                           prodl	equ	0xFF3
 10095                           intcon	equ	0xFF2
 10096                           intcon2	equ	0xFF1
 10097                           indf0	equ	0xFEF
 10098                           postinc0	equ	0xFEE
 10099                           fsr0h	equ	0xFEA
 10100                           fsr0l	equ	0xFE9
 10101                           wreg	equ	0xFE8
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           postdec2	equ	0xFDD
 10105                           plusw2	equ	0xFDB
 10106                           fsr2h	equ	0xFDA
 10107                           fsr2l	equ	0xFD9
 10108                           status	equ	0xFD8
 10109                           
 10110 ;; *************** function _OSCILLATOR_Initialize *****************
 10111 ;; Defined at:
 10112 ;;		line 125 in file "mcc_generated_files/mcc.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;		None               void
 10119 ;; Registers used:
 10120 ;;		wreg, status,2
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10126 ;;      Params:         0       0       0       0       0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0
 10129 ;;      Totals:         0       0       0       0       0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    4
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_SYSTEM_Initialize
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text49
 10141  0031A2                     __ptext49:
 10142                           	opt stack 0
 10143  0031A2                     _OSCILLATOR_Initialize:
 10144                           	opt stack 25
 10145                           
 10146                           ;mcc.c: 128: OSCCON = 0x72;
 10147                           
 10148                           ; BSR set to: 15
 10149                           ;incstack = 0
 10150  0031A2  0E72               	movlw	114
 10151  0031A4  6ED3               	movwf	4051,c	;volatile
 10152                           
 10153                           ;mcc.c: 130: OSCCON2 = 0x04;
 10154  0031A6  0E04               	movlw	4
 10155  0031A8  6ED2               	movwf	4050,c	;volatile
 10156                           
 10157                           ;mcc.c: 132: OSCTUNE = 0x00;
 10158  0031AA  0E00               	movlw	0
 10159  0031AC  6E9B               	movwf	3995,c	;volatile
 10160  0031AE  0012               	return		;funcret
 10161  0031B0                     __end_of_OSCILLATOR_Initialize:
 10162                           	opt stack 0
 10163                           tosu	equ	0xFFF
 10164                           tosh	equ	0xFFE
 10165                           tosl	equ	0xFFD
 10166                           pclath	equ	0xFFA
 10167                           tblptru	equ	0xFF8
 10168                           tblptrh	equ	0xFF7
 10169                           tblptrl	equ	0xFF6
 10170                           tablat	equ	0xFF5
 10171                           prodh	equ	0xFF4
 10172                           prodl	equ	0xFF3
 10173                           intcon	equ	0xFF2
 10174                           intcon2	equ	0xFF1
 10175                           indf0	equ	0xFEF
 10176                           postinc0	equ	0xFEE
 10177                           fsr0h	equ	0xFEA
 10178                           fsr0l	equ	0xFE9
 10179                           wreg	equ	0xFE8
 10180                           indf2	equ	0xFDF
 10181                           postinc2	equ	0xFDE
 10182                           postdec2	equ	0xFDD
 10183                           plusw2	equ	0xFDB
 10184                           fsr2h	equ	0xFDA
 10185                           fsr2l	equ	0xFD9
 10186                           status	equ	0xFD8
 10187                           
 10188 ;; *************** function _INTERRUPT_Initialize *****************
 10189 ;; Defined at:
 10190 ;;		line 8 in file "mcc_generated_files/interrupt_manager.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;		None
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;		None               void
 10197 ;; Registers used:
 10198 ;;		None
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10204 ;;      Params:         0       0       0       0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0
 10207 ;;      Totals:         0       0       0       0       0       0       0
 10208 ;;Total ram usage:        0 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:    4
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_SYSTEM_Initialize
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text50
 10219  003174                     __ptext50:
 10220                           	opt stack 0
 10221  003174                     _INTERRUPT_Initialize:
 10222                           	opt stack 25
 10223                           
 10224                           ;interrupt_manager.c: 11: RCONbits.IPEN = 0;
 10225                           
 10226                           ;incstack = 0
 10227  003174  9ED0               	bcf	4048,7,c	;volatile
 10228                           
 10229                           ;interrupt_manager.c: 16: IPR1bits.RC1IP = 0;
 10230  003176  9A9F               	bcf	3999,5,c	;volatile
 10231                           
 10232                           ;interrupt_manager.c: 18: IPR1bits.TX1IP = 0;
 10233  003178  989F               	bcf	3999,4,c	;volatile
 10234                           
 10235                           ;interrupt_manager.c: 20: INTCON2bits.TMR0IP = 0;
 10236  00317A  94F1               	bcf	intcon2,2,c	;volatile
 10237                           
 10238                           ;interrupt_manager.c: 22: IPR1bits.ADIP = 0;
 10239  00317C  9C9F               	bcf	3999,6,c	;volatile
 10240                           
 10241                           ;interrupt_manager.c: 24: IPR1bits.SSP1IP = 0;
 10242  00317E  969F               	bcf	3999,3,c	;volatile
 10243                           
 10244                           ;interrupt_manager.c: 26: IPR2bits.BCL1IP = 0;
 10245  003180  96A2               	bcf	4002,3,c	;volatile
 10246                           
 10247                           ;interrupt_manager.c: 27: IPR1bits.TMR2IP=0;
 10248  003182  929F               	bcf	3999,1,c	;volatile
 10249  003184  0012               	return		;funcret
 10250  003186                     __end_of_INTERRUPT_Initialize:
 10251                           	opt stack 0
 10252                           tosu	equ	0xFFF
 10253                           tosh	equ	0xFFE
 10254                           tosl	equ	0xFFD
 10255                           pclath	equ	0xFFA
 10256                           tblptru	equ	0xFF8
 10257                           tblptrh	equ	0xFF7
 10258                           tblptrl	equ	0xFF6
 10259                           tablat	equ	0xFF5
 10260                           prodh	equ	0xFF4
 10261                           prodl	equ	0xFF3
 10262                           intcon	equ	0xFF2
 10263                           intcon2	equ	0xFF1
 10264                           indf0	equ	0xFEF
 10265                           postinc0	equ	0xFEE
 10266                           fsr0h	equ	0xFEA
 10267                           fsr0l	equ	0xFE9
 10268                           wreg	equ	0xFE8
 10269                           indf2	equ	0xFDF
 10270                           postinc2	equ	0xFDE
 10271                           postdec2	equ	0xFDD
 10272                           plusw2	equ	0xFDB
 10273                           fsr2h	equ	0xFDA
 10274                           fsr2l	equ	0xFD9
 10275                           status	equ	0xFD8
 10276                           
 10277 ;; *************** function _I2C1_Initialize *****************
 10278 ;; Defined at:
 10279 ;;		line 151 in file "mcc_generated_files/i2c1.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;		None
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;		None               void
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10293 ;;      Params:         0       0       0       0       0       0       0
 10294 ;;      Locals:         0       0       0       0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0       0       0
 10296 ;;      Totals:         0       0       0       0       0       0       0
 10297 ;;Total ram usage:        0 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    4
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_SYSTEM_Initialize
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           	psect	text51
 10308  002DAE                     __ptext51:
 10309                           	opt stack 0
 10310  002DAE                     _I2C1_Initialize:
 10311                           	opt stack 25
 10312                           
 10313                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
 10314                           
 10315                           ;incstack = 0
 10316  002DAE  0EEB               	movlw	low _i2c1_tr_queue
 10317  002DB0  0100               	movlb	0	; () banked
 10318  002DB2  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 10319  002DB4  0E00               	movlw	high _i2c1_tr_queue
 10320  002DB6  0100               	movlb	0	; () banked
 10321  002DB8  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 10322                           
 10323                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
 10324  002DBA  0EEB               	movlw	low _i2c1_tr_queue
 10325  002DBC  0100               	movlb	0	; () banked
 10326  002DBE  6FB8               	movwf	_i2c1_object& (0+255),b
 10327  002DC0  0E00               	movlw	high _i2c1_tr_queue
 10328  002DC2  0100               	movlb	0	; () banked
 10329  002DC4  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
 10333  002DC6  0100               	movlb	0	; () banked
 10334  002DC8  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
 10338  002DCA  0100               	movlb	0	; () banked
 10339  002DCC  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
 10343  002DCE  0E00               	movlw	0
 10344  002DD0  0100               	movlb	0	; () banked
 10345  002DD2  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;i2c1.c: 161: SSP1STAT = 0x80;
 10349  002DD4  0E80               	movlw	128
 10350  002DD6  6EC7               	movwf	4039,c	;volatile
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;i2c1.c: 163: SSP1CON1 = 0x28;
 10354  002DD8  0E28               	movlw	40
 10355  002DDA  6EC6               	movwf	4038,c	;volatile
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;i2c1.c: 165: SSP1CON3 = 0x00;
 10359  002DDC  0E00               	movlw	0
 10360  002DDE  6ECB               	movwf	4043,c	;volatile
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;i2c1.c: 167: SSP1ADD = 0x03;
 10364  002DE0  0E03               	movlw	3
 10365  002DE2  6EC8               	movwf	4040,c	;volatile
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
 10369  002DE4  969E               	bcf	3998,3,c	;volatile
 10370                           
 10371                           ; BSR set to: 0
 10372                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
 10373  002DE6  869D               	bsf	3997,3,c	;volatile
 10374                           
 10375                           ; BSR set to: 0
 10376  002DE8  0012               	return		;funcret
 10377  002DEA                     __end_of_I2C1_Initialize:
 10378                           	opt stack 0
 10379                           tosu	equ	0xFFF
 10380                           tosh	equ	0xFFE
 10381                           tosl	equ	0xFFD
 10382                           pclath	equ	0xFFA
 10383                           tblptru	equ	0xFF8
 10384                           tblptrh	equ	0xFF7
 10385                           tblptrl	equ	0xFF6
 10386                           tablat	equ	0xFF5
 10387                           prodh	equ	0xFF4
 10388                           prodl	equ	0xFF3
 10389                           intcon	equ	0xFF2
 10390                           intcon2	equ	0xFF1
 10391                           indf0	equ	0xFEF
 10392                           postinc0	equ	0xFEE
 10393                           fsr0h	equ	0xFEA
 10394                           fsr0l	equ	0xFE9
 10395                           wreg	equ	0xFE8
 10396                           indf2	equ	0xFDF
 10397                           postinc2	equ	0xFDE
 10398                           postdec2	equ	0xFDD
 10399                           plusw2	equ	0xFDB
 10400                           fsr2h	equ	0xFDA
 10401                           fsr2l	equ	0xFD9
 10402                           status	equ	0xFD8
 10403                           
 10404 ;; *************** function _EUSART1_Initialize *****************
 10405 ;; Defined at:
 10406 ;;		line 21 in file "UART.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;		None
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;		None               void
 10413 ;; Registers used:
 10414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10420 ;;      Params:         0       0       0       0       0       0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0
 10423 ;;      Totals:         0       0       0       0       0       0       0
 10424 ;;Total ram usage:        0 bytes
 10425 ;; Hardware stack levels used:    1
 10426 ;; Hardware stack levels required when called:    6
 10427 ;; This function calls:
 10428 ;;		_UART_buff_init
 10429 ;; This function is called by:
 10430 ;;		_SYSTEM_Initialize
 10431 ;; This function uses a non-reentrant model
 10432 ;;
 10433                           
 10434                           	psect	text52
 10435  002DEA                     __ptext52:
 10436                           	opt stack 0
 10437  002DEA                     _EUSART1_Initialize:
 10438                           	opt stack 23
 10439                           
 10440                           ;UART.c: 23: PIE1bits.RC1IE = 0;
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;incstack = 0
 10444  002DEA  9A9D               	bcf	3997,5,c	;volatile
 10445                           
 10446                           ;UART.c: 24: PIE1bits.TX1IE = 0;
 10447  002DEC  989D               	bcf	3997,4,c	;volatile
 10448                           
 10449                           ;UART.c: 29: BAUD1CON = 0x48;
 10450  002DEE  0E48               	movlw	72
 10451  002DF0  6EB8               	movwf	4024,c	;volatile
 10452                           
 10453                           ;UART.c: 32: RC1STA = 0x98;
 10454  002DF2  0E98               	movlw	152
 10455  002DF4  6EAB               	movwf	4011,c	;volatile
 10456                           
 10457                           ;UART.c: 35: TX1STA = 0x26;
 10458  002DF6  0E26               	movlw	38
 10459  002DF8  6EAC               	movwf	4012,c	;volatile
 10460                           
 10461                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
 10462  002DFA  0E67               	movlw	103
 10463  002DFC  6EAF               	movwf	4015,c	;volatile
 10464                           
 10465                           ;UART.c: 41: SPBRGH1 = 0x00;
 10466  002DFE  0E00               	movlw	0
 10467  002E00  6EB0               	movwf	4016,c	;volatile
 10468                           
 10469                           ;UART.c: 44: TXREG1 = 0x00;
 10470  002E02  0E00               	movlw	0
 10471  002E04  6EAD               	movwf	4013,c	;volatile
 10472                           
 10473                           ;UART.c: 47: RCREG1 = 0x00;
 10474  002E06  0E00               	movlw	0
 10475  002E08  6EAE               	movwf	4014,c	;volatile
 10476                           
 10477                           ;UART.c: 49: UART_buff_init(&input_buffer);
 10478  002E0A  0E00               	movlw	low _input_buffer
 10479  002E0C  6E23               	movwf	UART_buff_init@_this,c
 10480  002E0E  0E04               	movlw	high _input_buffer
 10481  002E10  6E24               	movwf	UART_buff_init@_this+1,c
 10482  002E12  EC58  F018         	call	_UART_buff_init	;wreg free
 10483                           
 10484                           ;UART.c: 50: UART_buff_init(&output_buffer);
 10485  002E16  0E00               	movlw	low _output_buffer
 10486  002E18  6E23               	movwf	UART_buff_init@_this,c
 10487  002E1A  0E05               	movlw	high _output_buffer
 10488  002E1C  6E24               	movwf	UART_buff_init@_this+1,c
 10489  002E1E  EC58  F018         	call	_UART_buff_init	;wreg free
 10490                           
 10491                           ;UART.c: 52: PIE1bits.RC1IE = 1;
 10492  002E22  8A9D               	bsf	3997,5,c	;volatile
 10493  002E24  0012               	return		;funcret
 10494  002E26                     __end_of_EUSART1_Initialize:
 10495                           	opt stack 0
 10496                           tosu	equ	0xFFF
 10497                           tosh	equ	0xFFE
 10498                           tosl	equ	0xFFD
 10499                           pclath	equ	0xFFA
 10500                           tblptru	equ	0xFF8
 10501                           tblptrh	equ	0xFF7
 10502                           tblptrl	equ	0xFF6
 10503                           tablat	equ	0xFF5
 10504                           prodh	equ	0xFF4
 10505                           prodl	equ	0xFF3
 10506                           intcon	equ	0xFF2
 10507                           intcon2	equ	0xFF1
 10508                           indf0	equ	0xFEF
 10509                           postinc0	equ	0xFEE
 10510                           fsr0h	equ	0xFEA
 10511                           fsr0l	equ	0xFE9
 10512                           wreg	equ	0xFE8
 10513                           indf2	equ	0xFDF
 10514                           postinc2	equ	0xFDE
 10515                           postdec2	equ	0xFDD
 10516                           plusw2	equ	0xFDB
 10517                           fsr2h	equ	0xFDA
 10518                           fsr2l	equ	0xFD9
 10519                           status	equ	0xFD8
 10520                           
 10521 ;; *************** function _UART_buff_init *****************
 10522 ;; Defined at:
 10523 ;;		line 56 in file "UART.c"
 10524 ;; Parameters:    Size  Location     Type
 10525 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
 10526 ;;		 -> output_buffer(206), input_buffer(206), 
 10527 ;; Auto vars:     Size  Location     Type
 10528 ;;		None
 10529 ;; Return value:  Size  Location     Type
 10530 ;;		None               void
 10531 ;; Registers used:
 10532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10538 ;;      Params:         2       0       0       0       0       0       0
 10539 ;;      Locals:         0       0       0       0       0       0       0
 10540 ;;      Temps:          0       0       0       0       0       0       0
 10541 ;;      Totals:         2       0       0       0       0       0       0
 10542 ;;Total ram usage:        2 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:    5
 10545 ;; This function calls:
 10546 ;;		_memset
 10547 ;; This function is called by:
 10548 ;;		_EUSART1_Initialize
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552                           	psect	text53
 10553  0030B0                     __ptext53:
 10554                           	opt stack 0
 10555  0030B0                     _UART_buff_init:
 10556                           	opt stack 23
 10557                           
 10558                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
 10559                           
 10560                           ;incstack = 0
 10561  0030B0  C023  F01B         	movff	UART_buff_init@_this,memset@p1
 10562  0030B4  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
 10563  0030B8  0E00               	movlw	0
 10564  0030BA  6E1E               	movwf	memset@c+1,c
 10565  0030BC  0E00               	movlw	0
 10566  0030BE  6E1D               	movwf	memset@c,c
 10567  0030C0  0E00               	movlw	0
 10568  0030C2  6E20               	movwf	memset@n+1,c
 10569  0030C4  0ECE               	movlw	206
 10570  0030C6  6E1F               	movwf	memset@n,c
 10571  0030C8  EC96  F017         	call	_memset	;wreg free
 10572  0030CC  0012               	return		;funcret
 10573  0030CE                     __end_of_UART_buff_init:
 10574                           	opt stack 0
 10575                           tosu	equ	0xFFF
 10576                           tosh	equ	0xFFE
 10577                           tosl	equ	0xFFD
 10578                           pclath	equ	0xFFA
 10579                           tblptru	equ	0xFF8
 10580                           tblptrh	equ	0xFF7
 10581                           tblptrl	equ	0xFF6
 10582                           tablat	equ	0xFF5
 10583                           prodh	equ	0xFF4
 10584                           prodl	equ	0xFF3
 10585                           intcon	equ	0xFF2
 10586                           intcon2	equ	0xFF1
 10587                           indf0	equ	0xFEF
 10588                           postinc0	equ	0xFEE
 10589                           fsr0h	equ	0xFEA
 10590                           fsr0l	equ	0xFE9
 10591                           wreg	equ	0xFE8
 10592                           indf2	equ	0xFDF
 10593                           postinc2	equ	0xFDE
 10594                           postdec2	equ	0xFDD
 10595                           plusw2	equ	0xFDB
 10596                           fsr2h	equ	0xFDA
 10597                           fsr2l	equ	0xFD9
 10598                           status	equ	0xFD8
 10599                           
 10600 ;; *************** function _memset *****************
 10601 ;; Defined at:
 10602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  p1              2   26[COMRAM] PTR void 
 10605 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10606 ;;  c               2   28[COMRAM] int 
 10607 ;;  n               2   30[COMRAM] unsigned int 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;  p               2   32[COMRAM] PTR unsigned char 
 10610 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  2   26[COMRAM] PTR void 
 10613 ;; Registers used:
 10614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10620 ;;      Params:         6       0       0       0       0       0       0
 10621 ;;      Locals:         2       0       0       0       0       0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0
 10623 ;;      Totals:         8       0       0       0       0       0       0
 10624 ;;Total ram usage:        8 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:    4
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_FastTransfer_buffer_flush
 10631 ;;		_UART_buff_init
 10632 ;;		_UART_buff_flush
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text54
 10637  002F2C                     __ptext54:
 10638                           	opt stack 0
 10639  002F2C                     _memset:
 10640                           	opt stack 22
 10641                           
 10642                           ;incstack = 0
 10643  002F2C  C01B  F021         	movff	memset@p1,memset@p
 10644  002F30  C01C  F022         	movff	memset@p1+1,memset@p+1
 10645  002F34  D008               	goto	l5922
 10646  002F36                     l5918:
 10647  002F36  C021  FFD9         	movff	memset@p,fsr2l
 10648  002F3A  C022  FFDA         	movff	memset@p+1,fsr2h
 10649  002F3E  C01D  FFDF         	movff	memset@c,indf2
 10650  002F42  4A21               	infsnz	memset@p,f,c
 10651  002F44  2A22               	incf	memset@p+1,f,c
 10652  002F46                     l5922:
 10653  002F46  061F               	decf	memset@n,f,c
 10654  002F48  A0D8               	btfss	status,0,c
 10655  002F4A  0620               	decf	memset@n+1,f,c
 10656  002F4C  281F               	incf	memset@n,w,c
 10657  002F4E  E1F3               	bnz	l5918
 10658  002F50  2820               	incf	memset@n+1,w,c
 10659  002F52  B4D8               	btfsc	status,2,c
 10660  002F54  0012               	return	
 10661  002F56  D7EF               	goto	l5918
 10662  002F58                     __end_of_memset:
 10663                           	opt stack 0
 10664                           tosu	equ	0xFFF
 10665                           tosh	equ	0xFFE
 10666                           tosl	equ	0xFFD
 10667                           pclath	equ	0xFFA
 10668                           tblptru	equ	0xFF8
 10669                           tblptrh	equ	0xFF7
 10670                           tblptrl	equ	0xFF6
 10671                           tablat	equ	0xFF5
 10672                           prodh	equ	0xFF4
 10673                           prodl	equ	0xFF3
 10674                           intcon	equ	0xFF2
 10675                           intcon2	equ	0xFF1
 10676                           indf0	equ	0xFEF
 10677                           postinc0	equ	0xFEE
 10678                           fsr0h	equ	0xFEA
 10679                           fsr0l	equ	0xFE9
 10680                           wreg	equ	0xFE8
 10681                           indf2	equ	0xFDF
 10682                           postinc2	equ	0xFDE
 10683                           postdec2	equ	0xFDD
 10684                           plusw2	equ	0xFDB
 10685                           fsr2h	equ	0xFDA
 10686                           fsr2l	equ	0xFD9
 10687                           status	equ	0xFD8
 10688                           
 10689 ;; *************** function _ADC_Initialize *****************
 10690 ;; Defined at:
 10691 ;;		line 59 in file "mcc_generated_files/adc.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;		None
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;		None
 10696 ;; Return value:  Size  Location     Type
 10697 ;;		None               void
 10698 ;; Registers used:
 10699 ;;		wreg, status,2
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10705 ;;      Params:         0       0       0       0       0       0       0
 10706 ;;      Locals:         0       0       0       0       0       0       0
 10707 ;;      Temps:          0       0       0       0       0       0       0
 10708 ;;      Totals:         0       0       0       0       0       0       0
 10709 ;;Total ram usage:        0 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    4
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_SYSTEM_Initialize
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text55
 10720  003108                     __ptext55:
 10721                           	opt stack 0
 10722  003108                     _ADC_Initialize:
 10723                           	opt stack 25
 10724                           
 10725                           ;adc.c: 64: ADCON0 = 0x01;
 10726                           
 10727                           ;incstack = 0
 10728  003108  0E01               	movlw	1
 10729  00310A  6EC2               	movwf	4034,c	;volatile
 10730                           
 10731                           ;adc.c: 67: ADCON1 = 0x80;
 10732  00310C  0E80               	movlw	128
 10733  00310E  6EC1               	movwf	4033,c	;volatile
 10734                           
 10735                           ;adc.c: 70: ADCON2 = 0x05;
 10736  003110  0E05               	movlw	5
 10737  003112  6EC0               	movwf	4032,c	;volatile
 10738                           
 10739                           ;adc.c: 73: ADRESL = 0x00;
 10740  003114  0E00               	movlw	0
 10741  003116  6EC3               	movwf	4035,c	;volatile
 10742                           
 10743                           ;adc.c: 76: ADRESH = 0x00;
 10744  003118  0E00               	movlw	0
 10745  00311A  6EC4               	movwf	4036,c	;volatile
 10746                           
 10747                           ;adc.c: 79: PIE1bits.ADIE = 1;
 10748  00311C  8C9D               	bsf	3997,6,c	;volatile
 10749  00311E  0012               	return		;funcret
 10750  003120                     __end_of_ADC_Initialize:
 10751                           	opt stack 0
 10752                           tosu	equ	0xFFF
 10753                           tosh	equ	0xFFE
 10754                           tosl	equ	0xFFD
 10755                           pclath	equ	0xFFA
 10756                           tblptru	equ	0xFF8
 10757                           tblptrh	equ	0xFF7
 10758                           tblptrl	equ	0xFF6
 10759                           tablat	equ	0xFF5
 10760                           prodh	equ	0xFF4
 10761                           prodl	equ	0xFF3
 10762                           intcon	equ	0xFF2
 10763                           intcon2	equ	0xFF1
 10764                           indf0	equ	0xFEF
 10765                           postinc0	equ	0xFEE
 10766                           fsr0h	equ	0xFEA
 10767                           fsr0l	equ	0xFE9
 10768                           wreg	equ	0xFE8
 10769                           indf2	equ	0xFDF
 10770                           postinc2	equ	0xFDE
 10771                           postdec2	equ	0xFDD
 10772                           plusw2	equ	0xFDB
 10773                           fsr2h	equ	0xFDA
 10774                           fsr2l	equ	0xFD9
 10775                           status	equ	0xFD8
 10776                           
 10777 ;; *************** function _LEDwriteDisplay *****************
 10778 ;; Defined at:
 10779 ;;		line 116 in file "LED_BarGraph.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  i2c_addr        1    wreg     unsigned char 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
 10784 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
 10785 ;;  timeOut         2   21[BANK1 ] unsigned int 
 10786 ;;  status          1   23[BANK1 ] enum E8814
 10787 ;; Return value:  Size  Location     Type
 10788 ;;		None               void
 10789 ;; Registers used:
 10790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10796 ;;      Params:         0       0       0       0       0       0       0
 10797 ;;      Locals:         0       0      24       0       0       0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0
 10799 ;;      Totals:         0       0      24       0       0       0       0
 10800 ;;Total ram usage:       24 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    6
 10803 ;; This function calls:
 10804 ;;		_I2C1_MasterWrite
 10805 ;; This function is called by:
 10806 ;;		_main
 10807 ;;		_TestBarGraph
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text56
 10812  0015A4                     __ptext56:
 10813                           	opt stack 0
 10814  0015A4                     _LEDwriteDisplay:
 10815                           	opt stack 24
 10816                           
 10817                           ;incstack = 0
 10818                           ;LEDwriteDisplay@i2c_addr stored from wreg
 10819  0015A4  0101               	movlb	1	; () banked
 10820  0015A6  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
 10821                           
 10822                           ;LED_BarGraph.c: 117: uint8_t writeBuffer[20];
 10823                           ;LED_BarGraph.c: 118: uint16_t timeOut;
 10824                           ;LED_BarGraph.c: 119: writeBuffer[0] = 0x00;
 10825  0015A8  0E00               	movlw	0
 10826  0015AA  0101               	movlb	1	; () banked
 10827  0015AC  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10828                           
 10829                           ;LED_BarGraph.c: 120: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10830  0015AE  0E02               	movlw	2
 10831  0015B0  0101               	movlb	1	; () banked
 10832  0015B2  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10833                           
 10834                           ;LED_BarGraph.c: 122: timeOut = 0;
 10835  0015B4  0E00               	movlw	0
 10836  0015B6  0101               	movlb	1	; () banked
 10837  0015B8  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10838  0015BA  0E00               	movlw	0
 10839  0015BC  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10840                           
 10841                           ;LED_BarGraph.c: 123: while (status != I2C1_MESSAGE_FAIL) {
 10842  0015BE  D02F               	goto	l7050
 10843  0015C0                     l7030:
 10844                           
 10845                           ; BSR set to: 1
 10846                           ;LED_BarGraph.c: 125: I2C1_MasterWrite(&writeBuffer,
 10847                           ;LED_BarGraph.c: 126: 1,
 10848                           ;LED_BarGraph.c: 127: i2c_addr,
 10849                           ;LED_BarGraph.c: 128: &status);
 10850  0015C0  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10851  0015C2  0100               	movlb	0	; () banked
 10852  0015C4  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10853  0015C6  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10854  0015C8  0100               	movlb	0	; () banked
 10855  0015CA  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10856  0015CC  0E00               	movlw	0
 10857  0015CE  0100               	movlb	0	; () banked
 10858  0015D0  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10859  0015D2  0E01               	movlw	1
 10860  0015D4  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10861  0015D6  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10862  0015DA  0100               	movlb	0	; () banked
 10863  0015DC  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10864  0015DE  0E50               	movlw	low LEDwriteDisplay@status
 10865  0015E0  0100               	movlb	0	; () banked
 10866  0015E2  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10867  0015E4  0E01               	movlw	high LEDwriteDisplay@status
 10868  0015E6  0100               	movlb	0	; () banked
 10869  0015E8  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10870  0015EA  ECF7  F015         	call	_I2C1_MasterWrite	;wreg free
 10871  0015EE                     l7032:
 10872  0015EE  0E02               	movlw	2
 10873  0015F0  0101               	movlb	1	; () banked
 10874  0015F2  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10875  0015F4  B4D8               	btfsc	status,2,c
 10876  0015F6  D7FB               	goto	l7032
 10877                           
 10878                           ; BSR set to: 1
 10879                           ;LED_BarGraph.c: 133: if (status == I2C1_MESSAGE_COMPLETE)
 10880                           
 10881                           ; BSR set to: 1
 10882  0015F8  0101               	movlb	1	; () banked
 10883  0015FA  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10884  0015FC  0101               	movlb	1	; () banked
 10885  0015FE  B4D8               	btfsc	status,2,c
 10886  001600  D012               	goto	l7052
 10887                           
 10888                           ; BSR set to: 1
 10889                           ;LED_BarGraph.c: 135: if (timeOut == 100)
 10890                           
 10891                           ; BSR set to: 1
 10892                           
 10893                           ; BSR set to: 1
 10894                           ;LED_BarGraph.c: 134: break;
 10895  001602  0E64               	movlw	100
 10896  001604  0101               	movlb	1	; () banked
 10897  001606  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10898  001608  0101               	movlb	1	; () banked
 10899  00160A  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10900  00160C  B4D8               	btfsc	status,2,c
 10901  00160E  D00B               	goto	l7052
 10902                           
 10903                           ; BSR set to: 1
 10904                           ;LED_BarGraph.c: 137: if (status == I2C1_MESSAGE_FAIL)
 10905                           
 10906                           ; BSR set to: 1
 10907                           
 10908                           ; BSR set to: 1
 10909                           ;LED_BarGraph.c: 136: break;
 10910  001610  0101               	movlb	1	; () banked
 10911  001612  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10912  001614  B4D8               	btfsc	status,2,c
 10913  001616  D007               	goto	l7052
 10914                           
 10915                           ; BSR set to: 1
 10916                           ;LED_BarGraph.c: 139: else
 10917                           ;LED_BarGraph.c: 140: timeOut++;
 10918                           
 10919                           ; BSR set to: 1
 10920                           
 10921                           ; BSR set to: 1
 10922                           
 10923                           ; BSR set to: 1
 10924                           ;LED_BarGraph.c: 138: break;
 10925  001618  0101               	movlb	1	; () banked
 10926  00161A  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10927  00161C  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10928  00161E                     l7050:
 10929                           
 10930                           ; BSR set to: 1
 10931  00161E  0101               	movlb	1	; () banked
 10932  001620  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10933  001622  A4D8               	btfss	status,2,c
 10934  001624  D7CD               	goto	l7030
 10935  001626                     l7052:
 10936                           
 10937                           ; BSR set to: 1
 10938                           ;LED_BarGraph.c: 141: }
 10939                           ;LED_BarGraph.c: 142: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10940  001626  0E02               	movlw	2
 10941  001628  0101               	movlb	1	; () banked
 10942  00162A  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10943                           
 10944                           ;LED_BarGraph.c: 147: writeBuffer[0] = 0;
 10945  00162C  0E00               	movlw	0
 10946  00162E  0101               	movlb	1	; () banked
 10947  001630  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10948                           
 10949                           ; BSR set to: 1
 10950                           ;LED_BarGraph.c: 148: writeBuffer[1] = displaybuffer[0] & 0xFF;
 10951  001632  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
 10952                           
 10953                           ; BSR set to: 1
 10954                           ;LED_BarGraph.c: 149: writeBuffer[2] = displaybuffer[0] >> 8;
 10955  001636  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
 10956                           
 10957                           ; BSR set to: 1
 10958                           ;LED_BarGraph.c: 150: writeBuffer[3] = displaybuffer[1] & 0xFF;
 10959  00163A  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
 10960                           
 10961                           ; BSR set to: 1
 10962                           ;LED_BarGraph.c: 151: writeBuffer[4] = displaybuffer[1] >> 8;
 10963  00163E  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
 10964                           
 10965                           ; BSR set to: 1
 10966                           ;LED_BarGraph.c: 152: writeBuffer[5] = displaybuffer[2] & 0xFF;
 10967  001642  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
 10968                           
 10969                           ; BSR set to: 1
 10970                           ;LED_BarGraph.c: 153: writeBuffer[6] = displaybuffer[2] >> 8;
 10971  001646  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
 10972                           
 10973                           ; BSR set to: 1
 10974                           ;LED_BarGraph.c: 154: writeBuffer[7] = displaybuffer[3] & 0xFF;
 10975  00164A  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
 10976                           
 10977                           ; BSR set to: 1
 10978                           ;LED_BarGraph.c: 155: writeBuffer[8] = displaybuffer[3] >> 8;
 10979  00164E  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
 10980                           
 10981                           ; BSR set to: 1
 10982                           ;LED_BarGraph.c: 156: writeBuffer[9] = displaybuffer[4] & 0xFF;
 10983  001652  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
 10984                           
 10985                           ; BSR set to: 1
 10986                           ;LED_BarGraph.c: 157: writeBuffer[10] = displaybuffer[4] >> 8;
 10987  001656  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
 10988                           
 10989                           ; BSR set to: 1
 10990                           ;LED_BarGraph.c: 158: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10991  00165A  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10992                           
 10993                           ; BSR set to: 1
 10994                           ;LED_BarGraph.c: 159: writeBuffer[12] = displaybuffer[5] >> 8;
 10995  00165E  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10996                           
 10997                           ; BSR set to: 1
 10998                           ;LED_BarGraph.c: 160: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10999  001662  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 11000                           
 11001                           ; BSR set to: 1
 11002                           ;LED_BarGraph.c: 161: writeBuffer[14] = displaybuffer[6] >> 8;
 11003  001666  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 11004                           
 11005                           ; BSR set to: 1
 11006                           ;LED_BarGraph.c: 162: writeBuffer[15] = displaybuffer[7] & 0xFF;
 11007  00166A  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 11008                           
 11009                           ; BSR set to: 1
 11010                           ;LED_BarGraph.c: 163: writeBuffer[16] = displaybuffer[7] >> 8;
 11011  00166E  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 11012                           
 11013                           ; BSR set to: 1
 11014                           ;LED_BarGraph.c: 164: writeBuffer[17] = displaybuffer[8] & 0xFF;
 11015  001672  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 11016                           
 11017                           ; BSR set to: 1
 11018                           ;LED_BarGraph.c: 165: writeBuffer[18] = displaybuffer[8] >> 8;
 11019  001676  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 11020                           
 11021                           ;LED_BarGraph.c: 167: timeOut = 0;
 11022  00167A  0E00               	movlw	0
 11023  00167C  0101               	movlb	1	; () banked
 11024  00167E  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 11025  001680  0E00               	movlw	0
 11026  001682  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 11027                           
 11028                           ;LED_BarGraph.c: 168: while (status != I2C1_MESSAGE_FAIL) {
 11029  001684  D02F               	goto	l7110
 11030  001686                     l7090:
 11031                           
 11032                           ; BSR set to: 1
 11033                           ;LED_BarGraph.c: 170: I2C1_MasterWrite(&writeBuffer,
 11034                           ;LED_BarGraph.c: 171: 17,
 11035                           ;LED_BarGraph.c: 172: i2c_addr,
 11036                           ;LED_BarGraph.c: 173: &status);
 11037  001686  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 11038  001688  0100               	movlb	0	; () banked
 11039  00168A  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 11040  00168C  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 11041  00168E  0100               	movlb	0	; () banked
 11042  001690  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 11043  001692  0E00               	movlw	0
 11044  001694  0100               	movlb	0	; () banked
 11045  001696  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 11046  001698  0E11               	movlw	17
 11047  00169A  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 11048  00169C  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 11049  0016A0  0100               	movlb	0	; () banked
 11050  0016A2  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 11051  0016A4  0E50               	movlw	low LEDwriteDisplay@status
 11052  0016A6  0100               	movlb	0	; () banked
 11053  0016A8  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 11054  0016AA  0E01               	movlw	high LEDwriteDisplay@status
 11055  0016AC  0100               	movlb	0	; () banked
 11056  0016AE  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 11057  0016B0  ECF7  F015         	call	_I2C1_MasterWrite	;wreg free
 11058  0016B4                     l7092:
 11059  0016B4  0E02               	movlw	2
 11060  0016B6  0101               	movlb	1	; () banked
 11061  0016B8  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 11062  0016BA  B4D8               	btfsc	status,2,c
 11063  0016BC  D7FB               	goto	l7092
 11064                           
 11065                           ; BSR set to: 1
 11066                           ;LED_BarGraph.c: 178: if (status == I2C1_MESSAGE_COMPLETE)
 11067                           
 11068                           ; BSR set to: 1
 11069  0016BE  0101               	movlb	1	; () banked
 11070  0016C0  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 11071  0016C2  0101               	movlb	1	; () banked
 11072  0016C4  B4D8               	btfsc	status,2,c
 11073  0016C6  0012               	return	
 11074                           
 11075                           ; BSR set to: 1
 11076                           ;LED_BarGraph.c: 180: if (timeOut == 100)
 11077                           
 11078                           ; BSR set to: 1
 11079                           
 11080                           ; BSR set to: 1
 11081                           ;LED_BarGraph.c: 179: break;
 11082  0016C8  0E64               	movlw	100
 11083  0016CA  0101               	movlb	1	; () banked
 11084  0016CC  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 11085  0016CE  0101               	movlb	1	; () banked
 11086  0016D0  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 11087  0016D2  B4D8               	btfsc	status,2,c
 11088  0016D4  0012               	return	
 11089                           
 11090                           ; BSR set to: 1
 11091                           ;LED_BarGraph.c: 182: if (status == I2C1_MESSAGE_FAIL)
 11092                           
 11093                           ; BSR set to: 1
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;LED_BarGraph.c: 181: break;
 11097  0016D6  0101               	movlb	1	; () banked
 11098  0016D8  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 11099  0016DA  B4D8               	btfsc	status,2,c
 11100  0016DC  0012               	return	
 11101                           
 11102                           ; BSR set to: 1
 11103                           ;LED_BarGraph.c: 184: else
 11104                           ;LED_BarGraph.c: 185: timeOut++;
 11105                           
 11106                           ; BSR set to: 1
 11107                           
 11108                           ; BSR set to: 1
 11109                           
 11110                           ; BSR set to: 1
 11111                           ;LED_BarGraph.c: 183: break;
 11112  0016DE  0101               	movlb	1	; () banked
 11113  0016E0  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 11114  0016E2  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 11115  0016E4                     l7110:
 11116                           
 11117                           ; BSR set to: 1
 11118  0016E4  0101               	movlb	1	; () banked
 11119  0016E6  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 11120  0016E8  B4D8               	btfsc	status,2,c
 11121  0016EA  0012               	return	
 11122  0016EC  D7CC               	goto	l7090
 11123  0016EE                     __end_of_LEDwriteDisplay:
 11124                           	opt stack 0
 11125                           tosu	equ	0xFFF
 11126                           tosh	equ	0xFFE
 11127                           tosl	equ	0xFFD
 11128                           pclath	equ	0xFFA
 11129                           tblptru	equ	0xFF8
 11130                           tblptrh	equ	0xFF7
 11131                           tblptrl	equ	0xFF6
 11132                           tablat	equ	0xFF5
 11133                           prodh	equ	0xFF4
 11134                           prodl	equ	0xFF3
 11135                           intcon	equ	0xFF2
 11136                           intcon2	equ	0xFF1
 11137                           indf0	equ	0xFEF
 11138                           postinc0	equ	0xFEE
 11139                           fsr0h	equ	0xFEA
 11140                           fsr0l	equ	0xFE9
 11141                           wreg	equ	0xFE8
 11142                           indf2	equ	0xFDF
 11143                           postinc2	equ	0xFDE
 11144                           postdec2	equ	0xFDD
 11145                           plusw2	equ	0xFDB
 11146                           fsr2h	equ	0xFDA
 11147                           fsr2l	equ	0xFD9
 11148                           status	equ	0xFD8
 11149                           
 11150 ;; *************** function _LEDsetValue *****************
 11151 ;; Defined at:
 11152 ;;		line 11 in file "LED_BarGraph.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  value           2    0[BANK0 ] int 
 11155 ;;  color           2    2[BANK0 ] int 
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;  k               2    5[BANK0 ] int 
 11158 ;; Return value:  Size  Location     Type
 11159 ;;		None               void
 11160 ;; Registers used:
 11161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11167 ;;      Params:         0       4       0       0       0       0       0
 11168 ;;      Locals:         0       2       0       0       0       0       0
 11169 ;;      Temps:          0       1       0       0       0       0       0
 11170 ;;      Totals:         0       7       0       0       0       0       0
 11171 ;;Total ram usage:        7 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:    6
 11174 ;; This function calls:
 11175 ;;		_LEDsetBar
 11176 ;; This function is called by:
 11177 ;;		_main
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text57
 11182  002290                     __ptext57:
 11183                           	opt stack 0
 11184  002290                     _LEDsetValue:
 11185                           	opt stack 24
 11186                           
 11187                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 11188                           
 11189                           ; BSR set to: 1
 11190                           ;incstack = 0
 11191  002290  0100               	movlb	0	; () banked
 11192  002292  BFF3               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 11193  002294  D00D               	goto	l7010
 11194  002296  0100               	movlb	0	; () banked
 11195  002298  51F3               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11196  00229A  E105               	bnz	u7970
 11197  00229C  0E19               	movlw	25
 11198  00229E  0100               	movlb	0	; () banked
 11199  0022A0  5DF2               	subwf	LEDsetValue@value& (0+255),w,b
 11200  0022A2  A0D8               	btfss	status,0,c
 11201  0022A4  D005               	goto	l7010
 11202  0022A6                     u7970:
 11203                           
 11204                           ; BSR set to: 0
 11205  0022A6  0E00               	movlw	0
 11206  0022A8  0100               	movlb	0	; () banked
 11207  0022AA  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
 11208  0022AC  0E18               	movlw	24
 11209  0022AE  6FF2               	movwf	LEDsetValue@value& (0+255),b
 11210  0022B0                     l7010:
 11211                           
 11212                           ; BSR set to: 0
 11213                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 11214  0022B0  0100               	movlb	0	; () banked
 11215  0022B2  AFF3               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 11216  0022B4  D005               	goto	l617
 11217                           
 11218                           ; BSR set to: 0
 11219  0022B6  0E00               	movlw	0
 11220  0022B8  0100               	movlb	0	; () banked
 11221  0022BA  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
 11222  0022BC  0E00               	movlw	0
 11223  0022BE  6FF2               	movwf	LEDsetValue@value& (0+255),b
 11224  0022C0                     l617:
 11225                           
 11226                           ; BSR set to: 0
 11227                           ;LED_BarGraph.c: 14: int k;
 11228                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 11229  0022C0  0E00               	movlw	0
 11230  0022C2  0100               	movlb	0	; () banked
 11231  0022C4  6FF8               	movwf	(LEDsetValue@k+1)& (0+255),b
 11232  0022C6  0E00               	movlw	0
 11233  0022C8  6FF7               	movwf	LEDsetValue@k& (0+255),b
 11234  0022CA                     l7014:
 11235                           
 11236                           ; BSR set to: 0
 11237  0022CA  0100               	movlb	0	; () banked
 11238  0022CC  BFF8               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 11239  0022CE  D008               	goto	l7018
 11240  0022D0  0100               	movlb	0	; () banked
 11241  0022D2  51F8               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11242  0022D4  E12E               	bnz	l622
 11243  0022D6  0E18               	movlw	24
 11244  0022D8  0100               	movlb	0	; () banked
 11245  0022DA  5DF7               	subwf	LEDsetValue@k& (0+255),w,b
 11246  0022DC  B0D8               	btfsc	status,0,c
 11247  0022DE  0012               	return	
 11248  0022E0                     l7018:
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;LED_BarGraph.c: 16: if (k < value){
 11252  0022E0  0100               	movlb	0	; () banked
 11253  0022E2  51F2               	movf	LEDsetValue@value& (0+255),w,b
 11254  0022E4  0100               	movlb	0	; () banked
 11255  0022E6  5DF7               	subwf	LEDsetValue@k& (0+255),w,b
 11256  0022E8  0100               	movlb	0	; () banked
 11257  0022EA  51F8               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11258  0022EC  0A80               	xorlw	128
 11259  0022EE  0100               	movlb	0	; () banked
 11260  0022F0  6FF6               	movwf	??_LEDsetValue& (0+255),b
 11261  0022F2  0100               	movlb	0	; () banked
 11262  0022F4  51F3               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11263  0022F6  0A80               	xorlw	128
 11264  0022F8  0100               	movlb	0	; () banked
 11265  0022FA  59F6               	subwfb	??_LEDsetValue& (0+255),w,b
 11266  0022FC  B0D8               	btfsc	status,0,c
 11267  0022FE  D00B               	goto	l7022
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;LED_BarGraph.c: 18: LEDsetBar(k, color);}
 11271  002300  C0F7  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11272  002304  C0F8  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11273  002308  C0F4  F025         	movff	LEDsetValue@color,LEDsetBar@color
 11274  00230C  C0F5  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 11275  002310  ECC4  F003         	call	_LEDsetBar	;wreg free
 11276  002314  D00A               	goto	l7024
 11277  002316                     l7022:
 11278                           
 11279                           ;LED_BarGraph.c: 19: else LEDsetBar(k, 0);
 11280  002316  C0F7  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11281  00231A  C0F8  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11282  00231E  0E00               	movlw	0
 11283  002320  6E26               	movwf	LEDsetBar@color+1,c
 11284  002322  0E00               	movlw	0
 11285  002324  6E25               	movwf	LEDsetBar@color,c
 11286  002326  ECC4  F003         	call	_LEDsetBar	;wreg free
 11287  00232A                     l7024:
 11288  00232A  0100               	movlb	0	; () banked
 11289  00232C  4BF7               	infsnz	LEDsetValue@k& (0+255),f,b
 11290  00232E  2BF8               	incf	(LEDsetValue@k+1)& (0+255),f,b
 11291  002330  D7CC               	goto	l7014
 11292  002332                     l622:
 11293                           
 11294                           ; BSR set to: 0
 11295  002332  0012               	return		;funcret
 11296  002334                     __end_of_LEDsetValue:
 11297                           	opt stack 0
 11298                           tosu	equ	0xFFF
 11299                           tosh	equ	0xFFE
 11300                           tosl	equ	0xFFD
 11301                           pclath	equ	0xFFA
 11302                           tblptru	equ	0xFF8
 11303                           tblptrh	equ	0xFF7
 11304                           tblptrl	equ	0xFF6
 11305                           tablat	equ	0xFF5
 11306                           prodh	equ	0xFF4
 11307                           prodl	equ	0xFF3
 11308                           intcon	equ	0xFF2
 11309                           intcon2	equ	0xFF1
 11310                           indf0	equ	0xFEF
 11311                           postinc0	equ	0xFEE
 11312                           fsr0h	equ	0xFEA
 11313                           fsr0l	equ	0xFE9
 11314                           wreg	equ	0xFE8
 11315                           indf2	equ	0xFDF
 11316                           postinc2	equ	0xFDE
 11317                           postdec2	equ	0xFDD
 11318                           plusw2	equ	0xFDB
 11319                           fsr2h	equ	0xFDA
 11320                           fsr2l	equ	0xFD9
 11321                           status	equ	0xFD8
 11322                           
 11323 ;; *************** function _LEDsetBar *****************
 11324 ;; Defined at:
 11325 ;;		line 195 in file "LED_BarGraph.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  bar             2   34[COMRAM] int 
 11328 ;;  color           2   36[COMRAM] int 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  a               2   40[COMRAM] unsigned int 
 11331 ;;  c               2   38[COMRAM] unsigned int 
 11332 ;; Return value:  Size  Location     Type
 11333 ;;		None               void
 11334 ;; Registers used:
 11335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11336 ;; Tracked objects:
 11337 ;;		On entry : 0/0
 11338 ;;		On exit  : 0/0
 11339 ;;		Unchanged: 0/0
 11340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11341 ;;      Params:         4       0       0       0       0       0       0
 11342 ;;      Locals:         4       0       0       0       0       0       0
 11343 ;;      Temps:          0       0      16       0       0       0       0
 11344 ;;      Totals:         8       0      16       0       0       0       0
 11345 ;;Total ram usage:       24 bytes
 11346 ;; Hardware stack levels used:    1
 11347 ;; Hardware stack levels required when called:    5
 11348 ;; This function calls:
 11349 ;;		___awdiv
 11350 ;; This function is called by:
 11351 ;;		_LEDsetValue
 11352 ;;		_TestBarGraph
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text58
 11357  000788                     __ptext58:
 11358                           	opt stack 0
 11359  000788                     _LEDsetBar:
 11360                           	opt stack 24
 11361                           
 11362                           ;LED_BarGraph.c: 196: uint16_t a, c;
 11363                           ;LED_BarGraph.c: 198: if (bar < 12)
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;incstack = 0
 11367  000788  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11368  00078A  D006               	goto	l6496
 11369  00078C  5024               	movf	LEDsetBar@bar+1,w,c
 11370  00078E  E10F               	bnz	l6498
 11371  000790  0E0C               	movlw	12
 11372  000792  5C23               	subwf	LEDsetBar@bar,w,c
 11373  000794  B0D8               	btfsc	status,0,c
 11374  000796  D00B               	goto	l6498
 11375  000798                     l6496:
 11376                           
 11377                           ;LED_BarGraph.c: 199: c = bar / 4;
 11378  000798  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 11379  00079C  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 11380  0007A0  0E00               	movlw	0
 11381  0007A2  6E1E               	movwf	___awdiv@divisor+1,c
 11382  0007A4  0E04               	movlw	4
 11383  0007A6  6E1D               	movwf	___awdiv@divisor,c
 11384  0007A8  ECA3  F013         	call	___awdiv	;wreg free
 11385  0007AC  D00C               	goto	L3
 11386  0007AE                     l6498:
 11387                           
 11388                           ;LED_BarGraph.c: 200: else
 11389                           ;LED_BarGraph.c: 201: c = (bar - 12) / 4;
 11390  0007AE  0EF4               	movlw	244
 11391  0007B0  2423               	addwf	LEDsetBar@bar,w,c
 11392  0007B2  6E1B               	movwf	___awdiv@dividend,c
 11393  0007B4  0EFF               	movlw	255
 11394  0007B6  2024               	addwfc	LEDsetBar@bar+1,w,c
 11395  0007B8  6E1C               	movwf	___awdiv@dividend+1,c
 11396  0007BA  0E00               	movlw	0
 11397  0007BC  6E1E               	movwf	___awdiv@divisor+1,c
 11398  0007BE  0E04               	movlw	4
 11399  0007C0  6E1D               	movwf	___awdiv@divisor,c
 11400  0007C2  ECA3  F013         	call	___awdiv	;wreg free
 11401  0007C6                     L3:
 11402  0007C6  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 11403  0007CA  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 11404                           
 11405                           ;LED_BarGraph.c: 203: a = bar % 4;
 11406  0007CE  0E03               	movlw	3
 11407  0007D0  1423               	andwf	LEDsetBar@bar,w,c
 11408  0007D2  6E29               	movwf	LEDsetBar@a,c
 11409  0007D4  6A2A               	clrf	LEDsetBar@a+1,c
 11410                           
 11411                           ;LED_BarGraph.c: 204: if (bar >= 12)
 11412  0007D6  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11413  0007D8  D00A               	goto	l696
 11414  0007DA  5024               	movf	LEDsetBar@bar+1,w,c
 11415  0007DC  E104               	bnz	u6880
 11416  0007DE  0E0C               	movlw	12
 11417  0007E0  5C23               	subwf	LEDsetBar@bar,w,c
 11418  0007E2  A0D8               	btfss	status,0,c
 11419  0007E4  D004               	goto	l696
 11420  0007E6                     u6880:
 11421                           
 11422                           ;LED_BarGraph.c: 205: a += 4;
 11423  0007E6  0E04               	movlw	4
 11424  0007E8  2629               	addwf	LEDsetBar@a,f,c
 11425  0007EA  0E00               	movlw	0
 11426  0007EC  222A               	addwfc	LEDsetBar@a+1,f,c
 11427  0007EE                     l696:
 11428                           
 11429                           ;LED_BarGraph.c: 208: if (color == 1) {
 11430  0007EE  0425               	decf	LEDsetBar@color,w,c
 11431  0007F0  1026               	iorwf	LEDsetBar@color+1,w,c
 11432  0007F2  A4D8               	btfss	status,2,c
 11433  0007F4  D07D               	goto	l6508
 11434                           
 11435                           ;LED_BarGraph.c: 210: displaybuffer[c] |= (1<<(a));
 11436  0007F6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11437  0007FA  0E01               	movlw	1
 11438  0007FC  0101               	movlb	1	; () banked
 11439  0007FE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11440  000800  0E00               	movlw	0
 11441  000802  0101               	movlb	1	; () banked
 11442  000804  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11443  000806  0101               	movlb	1	; () banked
 11444  000808  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11445  00080A  D004               	goto	u6904
 11446  00080C                     u6905:
 11447  00080C  90D8               	bcf	status,0,c
 11448  00080E  0101               	movlb	1	; () banked
 11449  000810  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11450  000812  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11451  000814                     u6904:
 11452  000814  0101               	movlb	1	; () banked
 11453  000816  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11454  000818  D7F9               	goto	u6905
 11455  00081A  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11456  00081E  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11457  000822  0E00               	movlw	0
 11458  000824  0101               	movlb	1	; () banked
 11459  000826  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11460  000828  0EFF               	movlw	255
 11461  00082A  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11462  00082C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11463  00082E  0E60               	movlw	low _displaybuffer
 11464  000830  0101               	movlb	1	; () banked
 11465  000832  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11466  000834  0E00               	movlw	high _displaybuffer
 11467  000836  0101               	movlb	1	; () banked
 11468  000838  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11469  00083A  90D8               	bcf	status,0,c
 11470  00083C  3427               	rlcf	LEDsetBar@c,w,c
 11471  00083E  6ED9               	movwf	fsr2l,c
 11472  000840  3428               	rlcf	LEDsetBar@c+1,w,c
 11473  000842  6EDA               	movwf	fsr2h,c
 11474  000844  90D8               	bcf	status,0,c
 11475  000846  36D9               	rlcf	fsr2l,f,c
 11476  000848  36DA               	rlcf	fsr2h,f,c
 11477  00084A  0101               	movlb	1	; () banked
 11478  00084C  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11479  00084E  26D9               	addwf	fsr2l,f,c
 11480  000850  0101               	movlb	1	; () banked
 11481  000852  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11482  000854  22DA               	addwfc	fsr2h,f,c
 11483  000856  0101               	movlb	1	; () banked
 11484  000858  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11485  00085A  12DE               	iorwf	postinc2,f,c
 11486  00085C  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11487  00085E  12DE               	iorwf	postinc2,f,c
 11488  000860  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11489  000862  12DE               	iorwf	postinc2,f,c
 11490  000864  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11491  000866  12DE               	iorwf	postinc2,f,c
 11492                           
 11493                           ;LED_BarGraph.c: 212: displaybuffer[c] &= ~(1<<(a + 8));
 11494  000868  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11495  00086C  0E08               	movlw	8
 11496  00086E  0101               	movlb	1	; () banked
 11497  000870  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11498  000872  0E01               	movlw	1
 11499  000874  0101               	movlb	1	; () banked
 11500  000876  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11501  000878  0E00               	movlw	0
 11502  00087A  0101               	movlb	1	; () banked
 11503  00087C  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11504  00087E  0101               	movlb	1	; () banked
 11505  000880  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11506  000882  D004               	goto	u6914
 11507  000884                     u6915:
 11508  000884  90D8               	bcf	status,0,c
 11509  000886  0101               	movlb	1	; () banked
 11510  000888  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11511  00088A  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11512  00088C                     u6914:
 11513  00088C  0101               	movlb	1	; () banked
 11514  00088E  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11515  000890  D7F9               	goto	u6915
 11516  000892  0101               	movlb	1	; () banked
 11517  000894  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11518  000896  0101               	movlb	1	; () banked
 11519  000898  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11520  00089A  0101               	movlb	1	; () banked
 11521  00089C  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11522  00089E  0101               	movlb	1	; () banked
 11523  0008A0  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11524  0008A2  0101               	movlb	1	; () banked
 11525  0008A4  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11526  0008A6  0101               	movlb	1	; () banked
 11527  0008A8  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11528  0008AA  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11529  0008AC  0101               	movlb	1	; () banked
 11530  0008AE  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11531  0008B0  0101               	movlb	1	; () banked
 11532  0008B2  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11533  0008B4  0E60               	movlw	low _displaybuffer
 11534  0008B6  0101               	movlb	1	; () banked
 11535  0008B8  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11536  0008BA  0E00               	movlw	high _displaybuffer
 11537  0008BC  0101               	movlb	1	; () banked
 11538  0008BE  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11539  0008C0  90D8               	bcf	status,0,c
 11540  0008C2  3427               	rlcf	LEDsetBar@c,w,c
 11541  0008C4  6ED9               	movwf	fsr2l,c
 11542  0008C6  3428               	rlcf	LEDsetBar@c+1,w,c
 11543  0008C8  6EDA               	movwf	fsr2h,c
 11544  0008CA  90D8               	bcf	status,0,c
 11545  0008CC  36D9               	rlcf	fsr2l,f,c
 11546  0008CE  36DA               	rlcf	fsr2h,f,c
 11547  0008D0  0101               	movlb	1	; () banked
 11548  0008D2  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11549  0008D4  26D9               	addwf	fsr2l,f,c
 11550  0008D6  0101               	movlb	1	; () banked
 11551  0008D8  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11552  0008DA  22DA               	addwfc	fsr2h,f,c
 11553  0008DC  0101               	movlb	1	; () banked
 11554  0008DE  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11555  0008E0  16DE               	andwf	postinc2,f,c
 11556  0008E2  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11557  0008E4  16DE               	andwf	postinc2,f,c
 11558  0008E6  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11559  0008E8  16DE               	andwf	postinc2,f,c
 11560  0008EA  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11561  0008EC  16DE               	andwf	postinc2,f,c
 11562                           
 11563                           ;LED_BarGraph.c: 213: } else if (color == 2) {
 11564  0008EE  0012               	return	
 11565  0008F0                     l6508:
 11566  0008F0  0E02               	movlw	2
 11567  0008F2  1825               	xorwf	LEDsetBar@color,w,c
 11568  0008F4  1026               	iorwf	LEDsetBar@color+1,w,c
 11569  0008F6  A4D8               	btfss	status,2,c
 11570  0008F8  D05A               	goto	l6512
 11571                           
 11572                           ;LED_BarGraph.c: 215: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 11573  0008FA  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11574  0008FE  0E08               	movlw	8
 11575  000900  0101               	movlb	1	; () banked
 11576  000902  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11577  000904  0E01               	movlw	1
 11578  000906  0101               	movlb	1	; () banked
 11579  000908  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11580  00090A  0E00               	movlw	0
 11581  00090C  0101               	movlb	1	; () banked
 11582  00090E  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11583  000910  0101               	movlb	1	; () banked
 11584  000912  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11585  000914  D004               	goto	u6934
 11586  000916                     u6935:
 11587  000916  90D8               	bcf	status,0,c
 11588  000918  0101               	movlb	1	; () banked
 11589  00091A  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11590  00091C  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11591  00091E                     u6934:
 11592  00091E  0101               	movlb	1	; () banked
 11593  000920  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11594  000922  D7F9               	goto	u6935
 11595  000924  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 11596  000928  0E01               	movlw	1
 11597  00092A  0101               	movlb	1	; () banked
 11598  00092C  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11599  00092E  0E00               	movlw	0
 11600  000930  0101               	movlb	1	; () banked
 11601  000932  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11602  000934  0101               	movlb	1	; () banked
 11603  000936  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 11604  000938  D004               	goto	u6944
 11605  00093A                     u6945:
 11606  00093A  90D8               	bcf	status,0,c
 11607  00093C  0101               	movlb	1	; () banked
 11608  00093E  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 11609  000940  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 11610  000942                     u6944:
 11611  000942  0101               	movlb	1	; () banked
 11612  000944  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 11613  000946  D7F9               	goto	u6945
 11614  000948  0101               	movlb	1	; () banked
 11615  00094A  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 11616  00094C  0101               	movlb	1	; () banked
 11617  00094E  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 11618  000950  0101               	movlb	1	; () banked
 11619  000952  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11620  000954  0101               	movlb	1	; () banked
 11621  000956  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 11622  000958  0101               	movlb	1	; () banked
 11623  00095A  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 11624  00095C  0101               	movlb	1	; () banked
 11625  00095E  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11626  000960  0101               	movlb	1	; () banked
 11627  000962  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 11628  000964  0101               	movlb	1	; () banked
 11629  000966  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 11630  000968  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 11631  00096A  0101               	movlb	1	; () banked
 11632  00096C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11633  00096E  0101               	movlb	1	; () banked
 11634  000970  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11635  000972  0E60               	movlw	low _displaybuffer
 11636  000974  0101               	movlb	1	; () banked
 11637  000976  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11638  000978  0E00               	movlw	high _displaybuffer
 11639  00097A  0101               	movlb	1	; () banked
 11640  00097C  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11641  00097E  90D8               	bcf	status,0,c
 11642  000980  3427               	rlcf	LEDsetBar@c,w,c
 11643  000982  6ED9               	movwf	fsr2l,c
 11644  000984  3428               	rlcf	LEDsetBar@c+1,w,c
 11645  000986  6EDA               	movwf	fsr2h,c
 11646  000988  90D8               	bcf	status,0,c
 11647  00098A  36D9               	rlcf	fsr2l,f,c
 11648  00098C  36DA               	rlcf	fsr2h,f,c
 11649  00098E  0101               	movlb	1	; () banked
 11650  000990  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11651  000992  26D9               	addwf	fsr2l,f,c
 11652  000994  0101               	movlb	1	; () banked
 11653  000996  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11654  000998  22DA               	addwfc	fsr2h,f,c
 11655  00099A  0101               	movlb	1	; () banked
 11656  00099C  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11657  00099E  12DE               	iorwf	postinc2,f,c
 11658  0009A0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11659  0009A2  12DE               	iorwf	postinc2,f,c
 11660  0009A4  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11661  0009A6  12DE               	iorwf	postinc2,f,c
 11662  0009A8  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 11663  0009AA  12DE               	iorwf	postinc2,f,c
 11664                           
 11665                           ;LED_BarGraph.c: 216: } else if (color == 0) {
 11666  0009AC  0012               	return	
 11667  0009AE                     l6512:
 11668  0009AE  5025               	movf	LEDsetBar@color,w,c
 11669  0009B0  1026               	iorwf	LEDsetBar@color+1,w,c
 11670  0009B2  A4D8               	btfss	status,2,c
 11671  0009B4  D06A               	goto	l6516
 11672                           
 11673                           ;LED_BarGraph.c: 218: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 11674  0009B6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11675  0009BA  0E08               	movlw	8
 11676  0009BC  0101               	movlb	1	; () banked
 11677  0009BE  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11678  0009C0  0E01               	movlw	1
 11679  0009C2  0101               	movlb	1	; () banked
 11680  0009C4  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11681  0009C6  0E00               	movlw	0
 11682  0009C8  0101               	movlb	1	; () banked
 11683  0009CA  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11684  0009CC  0101               	movlb	1	; () banked
 11685  0009CE  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11686  0009D0  D004               	goto	u6964
 11687  0009D2                     u6965:
 11688  0009D2  90D8               	bcf	status,0,c
 11689  0009D4  0101               	movlb	1	; () banked
 11690  0009D6  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11691  0009D8  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11692  0009DA                     u6964:
 11693  0009DA  0101               	movlb	1	; () banked
 11694  0009DC  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11695  0009DE  D7F9               	goto	u6965
 11696  0009E0  0101               	movlb	1	; () banked
 11697  0009E2  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11698  0009E4  0101               	movlb	1	; () banked
 11699  0009E6  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11700  0009E8  0101               	movlb	1	; () banked
 11701  0009EA  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11702  0009EC  0101               	movlb	1	; () banked
 11703  0009EE  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11704  0009F0  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 11705  0009F4  0E01               	movlw	1
 11706  0009F6  0101               	movlb	1	; () banked
 11707  0009F8  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11708  0009FA  0E00               	movlw	0
 11709  0009FC  0101               	movlb	1	; () banked
 11710  0009FE  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11711  000A00  0101               	movlb	1	; () banked
 11712  000A02  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 11713  000A04  D004               	goto	u6974
 11714  000A06                     u6975:
 11715  000A06  90D8               	bcf	status,0,c
 11716  000A08  0101               	movlb	1	; () banked
 11717  000A0A  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 11718  000A0C  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 11719  000A0E                     u6974:
 11720  000A0E  0101               	movlb	1	; () banked
 11721  000A10  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 11722  000A12  D7F9               	goto	u6975
 11723  000A14  0101               	movlb	1	; () banked
 11724  000A16  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 11725  000A18  0101               	movlb	1	; () banked
 11726  000A1A  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11727  000A1C  0101               	movlb	1	; () banked
 11728  000A1E  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 11729  000A20  0101               	movlb	1	; () banked
 11730  000A22  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11731  000A24  0101               	movlb	1	; () banked
 11732  000A26  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11733  000A28  0101               	movlb	1	; () banked
 11734  000A2A  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 11735  000A2C  0101               	movlb	1	; () banked
 11736  000A2E  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11737  000A30  0101               	movlb	1	; () banked
 11738  000A32  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11739  000A34  0101               	movlb	1	; () banked
 11740  000A36  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 11741  000A38  0101               	movlb	1	; () banked
 11742  000A3A  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11743  000A3C  0101               	movlb	1	; () banked
 11744  000A3E  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 11745  000A40  0101               	movlb	1	; () banked
 11746  000A42  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 11747  000A44  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 11748  000A46  0101               	movlb	1	; () banked
 11749  000A48  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11750  000A4A  0101               	movlb	1	; () banked
 11751  000A4C  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 11752  000A4E  0E60               	movlw	low _displaybuffer
 11753  000A50  0101               	movlb	1	; () banked
 11754  000A52  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 11755  000A54  0E00               	movlw	high _displaybuffer
 11756  000A56  0101               	movlb	1	; () banked
 11757  000A58  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 11758  000A5A  90D8               	bcf	status,0,c
 11759  000A5C  3427               	rlcf	LEDsetBar@c,w,c
 11760  000A5E  6ED9               	movwf	fsr2l,c
 11761  000A60  3428               	rlcf	LEDsetBar@c+1,w,c
 11762  000A62  6EDA               	movwf	fsr2h,c
 11763  000A64  90D8               	bcf	status,0,c
 11764  000A66  36D9               	rlcf	fsr2l,f,c
 11765  000A68  36DA               	rlcf	fsr2h,f,c
 11766  000A6A  0101               	movlb	1	; () banked
 11767  000A6C  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 11768  000A6E  26D9               	addwf	fsr2l,f,c
 11769  000A70  0101               	movlb	1	; () banked
 11770  000A72  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 11771  000A74  22DA               	addwfc	fsr2h,f,c
 11772  000A76  0101               	movlb	1	; () banked
 11773  000A78  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11774  000A7A  16DE               	andwf	postinc2,f,c
 11775  000A7C  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11776  000A7E  16DE               	andwf	postinc2,f,c
 11777  000A80  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11778  000A82  16DE               	andwf	postinc2,f,c
 11779  000A84  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 11780  000A86  16DE               	andwf	postinc2,f,c
 11781                           
 11782                           ;LED_BarGraph.c: 219: } else if (color == 3) {
 11783  000A88  0012               	return	
 11784  000A8A                     l6516:
 11785  000A8A  0E03               	movlw	3
 11786  000A8C  1825               	xorwf	LEDsetBar@color,w,c
 11787  000A8E  1026               	iorwf	LEDsetBar@color+1,w,c
 11788  000A90  A4D8               	btfss	status,2,c
 11789  000A92  0012               	return	
 11790                           
 11791                           ;LED_BarGraph.c: 221: displaybuffer[c] |= (1<<(a + 8));
 11792  000A94  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11793  000A98  0E08               	movlw	8
 11794  000A9A  0101               	movlb	1	; () banked
 11795  000A9C  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11796  000A9E  0E01               	movlw	1
 11797  000AA0  0101               	movlb	1	; () banked
 11798  000AA2  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11799  000AA4  0E00               	movlw	0
 11800  000AA6  0101               	movlb	1	; () banked
 11801  000AA8  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11802  000AAA  0101               	movlb	1	; () banked
 11803  000AAC  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11804  000AAE  D004               	goto	u6994
 11805  000AB0                     u6995:
 11806  000AB0  90D8               	bcf	status,0,c
 11807  000AB2  0101               	movlb	1	; () banked
 11808  000AB4  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11809  000AB6  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11810  000AB8                     u6994:
 11811  000AB8  0101               	movlb	1	; () banked
 11812  000ABA  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11813  000ABC  D7F9               	goto	u6995
 11814  000ABE  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11815  000AC2  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11816  000AC6  0E00               	movlw	0
 11817  000AC8  0101               	movlb	1	; () banked
 11818  000ACA  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11819  000ACC  0EFF               	movlw	255
 11820  000ACE  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11821  000AD0  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11822  000AD2  0E60               	movlw	low _displaybuffer
 11823  000AD4  0101               	movlb	1	; () banked
 11824  000AD6  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11825  000AD8  0E00               	movlw	high _displaybuffer
 11826  000ADA  0101               	movlb	1	; () banked
 11827  000ADC  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11828  000ADE  90D8               	bcf	status,0,c
 11829  000AE0  3427               	rlcf	LEDsetBar@c,w,c
 11830  000AE2  6ED9               	movwf	fsr2l,c
 11831  000AE4  3428               	rlcf	LEDsetBar@c+1,w,c
 11832  000AE6  6EDA               	movwf	fsr2h,c
 11833  000AE8  90D8               	bcf	status,0,c
 11834  000AEA  36D9               	rlcf	fsr2l,f,c
 11835  000AEC  36DA               	rlcf	fsr2h,f,c
 11836  000AEE  0101               	movlb	1	; () banked
 11837  000AF0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11838  000AF2  26D9               	addwf	fsr2l,f,c
 11839  000AF4  0101               	movlb	1	; () banked
 11840  000AF6  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11841  000AF8  22DA               	addwfc	fsr2h,f,c
 11842  000AFA  0101               	movlb	1	; () banked
 11843  000AFC  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11844  000AFE  12DE               	iorwf	postinc2,f,c
 11845  000B00  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11846  000B02  12DE               	iorwf	postinc2,f,c
 11847  000B04  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11848  000B06  12DE               	iorwf	postinc2,f,c
 11849  000B08  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11850  000B0A  12DE               	iorwf	postinc2,f,c
 11851                           
 11852                           ;LED_BarGraph.c: 223: displaybuffer[c] &= ~(1<<(a));
 11853  000B0C  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11854  000B10  0E01               	movlw	1
 11855  000B12  0101               	movlb	1	; () banked
 11856  000B14  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11857  000B16  0E00               	movlw	0
 11858  000B18  0101               	movlb	1	; () banked
 11859  000B1A  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11860  000B1C  0101               	movlb	1	; () banked
 11861  000B1E  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11862  000B20  D004               	goto	u7004
 11863  000B22                     u7005:
 11864  000B22  90D8               	bcf	status,0,c
 11865  000B24  0101               	movlb	1	; () banked
 11866  000B26  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11867  000B28  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11868  000B2A                     u7004:
 11869  000B2A  0101               	movlb	1	; () banked
 11870  000B2C  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11871  000B2E  D7F9               	goto	u7005
 11872  000B30  0101               	movlb	1	; () banked
 11873  000B32  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11874  000B34  0101               	movlb	1	; () banked
 11875  000B36  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11876  000B38  0101               	movlb	1	; () banked
 11877  000B3A  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11878  000B3C  0101               	movlb	1	; () banked
 11879  000B3E  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11880  000B40  0101               	movlb	1	; () banked
 11881  000B42  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11882  000B44  0101               	movlb	1	; () banked
 11883  000B46  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11884  000B48  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11885  000B4A  0101               	movlb	1	; () banked
 11886  000B4C  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11887  000B4E  0101               	movlb	1	; () banked
 11888  000B50  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11889  000B52  0E60               	movlw	low _displaybuffer
 11890  000B54  0101               	movlb	1	; () banked
 11891  000B56  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11892  000B58  0E00               	movlw	high _displaybuffer
 11893  000B5A  0101               	movlb	1	; () banked
 11894  000B5C  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11895  000B5E  90D8               	bcf	status,0,c
 11896  000B60  3427               	rlcf	LEDsetBar@c,w,c
 11897  000B62  6ED9               	movwf	fsr2l,c
 11898  000B64  3428               	rlcf	LEDsetBar@c+1,w,c
 11899  000B66  6EDA               	movwf	fsr2h,c
 11900  000B68  90D8               	bcf	status,0,c
 11901  000B6A  36D9               	rlcf	fsr2l,f,c
 11902  000B6C  36DA               	rlcf	fsr2h,f,c
 11903  000B6E  0101               	movlb	1	; () banked
 11904  000B70  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11905  000B72  26D9               	addwf	fsr2l,f,c
 11906  000B74  0101               	movlb	1	; () banked
 11907  000B76  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11908  000B78  22DA               	addwfc	fsr2h,f,c
 11909  000B7A  0101               	movlb	1	; () banked
 11910  000B7C  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11911  000B7E  16DE               	andwf	postinc2,f,c
 11912  000B80  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11913  000B82  16DE               	andwf	postinc2,f,c
 11914  000B84  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11915  000B86  16DE               	andwf	postinc2,f,c
 11916  000B88  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11917  000B8A  16DE               	andwf	postinc2,f,c
 11918                           
 11919                           ; BSR set to: 1
 11920                           
 11921                           ; BSR set to: 1
 11922                           
 11923                           ; BSR set to: 1
 11924  000B8C  0012               	return	
 11925  000B8E                     __end_of_LEDsetBar:
 11926                           	opt stack 0
 11927                           tosu	equ	0xFFF
 11928                           tosh	equ	0xFFE
 11929                           tosl	equ	0xFFD
 11930                           pclath	equ	0xFFA
 11931                           tblptru	equ	0xFF8
 11932                           tblptrh	equ	0xFF7
 11933                           tblptrl	equ	0xFF6
 11934                           tablat	equ	0xFF5
 11935                           prodh	equ	0xFF4
 11936                           prodl	equ	0xFF3
 11937                           intcon	equ	0xFF2
 11938                           intcon2	equ	0xFF1
 11939                           indf0	equ	0xFEF
 11940                           postinc0	equ	0xFEE
 11941                           fsr0h	equ	0xFEA
 11942                           fsr0l	equ	0xFE9
 11943                           wreg	equ	0xFE8
 11944                           indf2	equ	0xFDF
 11945                           postinc2	equ	0xFDE
 11946                           postdec2	equ	0xFDD
 11947                           plusw2	equ	0xFDB
 11948                           fsr2h	equ	0xFDA
 11949                           fsr2l	equ	0xFD9
 11950                           status	equ	0xFD8
 11951                           
 11952 ;; *************** function ___awdiv *****************
 11953 ;; Defined at:
 11954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;  dividend        2   26[COMRAM] int 
 11957 ;;  divisor         2   28[COMRAM] int 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  quotient        2   32[COMRAM] int 
 11960 ;;  sign            1   31[COMRAM] unsigned char 
 11961 ;;  counter         1   30[COMRAM] unsigned char 
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  2   26[COMRAM] int 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11971 ;;      Params:         4       0       0       0       0       0       0
 11972 ;;      Locals:         4       0       0       0       0       0       0
 11973 ;;      Temps:          0       0       0       0       0       0       0
 11974 ;;      Totals:         8       0       0       0       0       0       0
 11975 ;;Total ram usage:        8 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    4
 11978 ;; This function calls:
 11979 ;;		Nothing
 11980 ;; This function is called by:
 11981 ;;		_LEDsetBar
 11982 ;;		_begin
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986                           	psect	text59
 11987  002746                     __ptext59:
 11988                           	opt stack 0
 11989  002746                     ___awdiv:
 11990                           	opt stack 24
 11991                           
 11992                           ;incstack = 0
 11993  002746  0E00               	movlw	0
 11994  002748  6E20               	movwf	___awdiv@sign,c
 11995  00274A  AE1E               	btfss	___awdiv@divisor+1,7,c
 11996  00274C  D006               	goto	l6422
 11997  00274E  6C1D               	negf	___awdiv@divisor,c
 11998  002750  1E1E               	comf	___awdiv@divisor+1,f,c
 11999  002752  B0D8               	btfsc	status,0,c
 12000  002754  2A1E               	incf	___awdiv@divisor+1,f,c
 12001  002756  0E01               	movlw	1
 12002  002758  6E20               	movwf	___awdiv@sign,c
 12003  00275A                     l6422:
 12004  00275A  AE1C               	btfss	___awdiv@dividend+1,7,c
 12005  00275C  D006               	goto	l6428
 12006  00275E  6C1B               	negf	___awdiv@dividend,c
 12007  002760  1E1C               	comf	___awdiv@dividend+1,f,c
 12008  002762  B0D8               	btfsc	status,0,c
 12009  002764  2A1C               	incf	___awdiv@dividend+1,f,c
 12010  002766  0E01               	movlw	1
 12011  002768  1A20               	xorwf	___awdiv@sign,f,c
 12012  00276A                     l6428:
 12013  00276A  0E00               	movlw	0
 12014  00276C  6E22               	movwf	___awdiv@quotient+1,c
 12015  00276E  0E00               	movlw	0
 12016  002770  6E21               	movwf	___awdiv@quotient,c
 12017  002772  501D               	movf	___awdiv@divisor,w,c
 12018  002774  101E               	iorwf	___awdiv@divisor+1,w,c
 12019  002776  B4D8               	btfsc	status,2,c
 12020  002778  D01C               	goto	l6450
 12021  00277A  0E01               	movlw	1
 12022  00277C  6E1F               	movwf	___awdiv@counter,c
 12023  00277E  D004               	goto	l6436
 12024  002780                     l6434:
 12025  002780  90D8               	bcf	status,0,c
 12026  002782  361D               	rlcf	___awdiv@divisor,f,c
 12027  002784  361E               	rlcf	___awdiv@divisor+1,f,c
 12028  002786  2A1F               	incf	___awdiv@counter,f,c
 12029  002788                     l6436:
 12030  002788  AE1E               	btfss	___awdiv@divisor+1,7,c
 12031  00278A  D7FA               	goto	l6434
 12032  00278C                     l6438:
 12033  00278C  90D8               	bcf	status,0,c
 12034  00278E  3621               	rlcf	___awdiv@quotient,f,c
 12035  002790  3622               	rlcf	___awdiv@quotient+1,f,c
 12036  002792  501D               	movf	___awdiv@divisor,w,c
 12037  002794  5C1B               	subwf	___awdiv@dividend,w,c
 12038  002796  501E               	movf	___awdiv@divisor+1,w,c
 12039  002798  581C               	subwfb	___awdiv@dividend+1,w,c
 12040  00279A  A0D8               	btfss	status,0,c
 12041  00279C  D005               	goto	l6446
 12042  00279E  501D               	movf	___awdiv@divisor,w,c
 12043  0027A0  5E1B               	subwf	___awdiv@dividend,f,c
 12044  0027A2  501E               	movf	___awdiv@divisor+1,w,c
 12045  0027A4  5A1C               	subwfb	___awdiv@dividend+1,f,c
 12046  0027A6  8021               	bsf	___awdiv@quotient,0,c
 12047  0027A8                     l6446:
 12048  0027A8  90D8               	bcf	status,0,c
 12049  0027AA  321E               	rrcf	___awdiv@divisor+1,f,c
 12050  0027AC  321D               	rrcf	___awdiv@divisor,f,c
 12051  0027AE  2E1F               	decfsz	___awdiv@counter,f,c
 12052  0027B0  D7ED               	goto	l6438
 12053  0027B2                     l6450:
 12054  0027B2  5020               	movf	___awdiv@sign,w,c
 12055  0027B4  B4D8               	btfsc	status,2,c
 12056  0027B6  D004               	goto	l6454
 12057  0027B8  6C21               	negf	___awdiv@quotient,c
 12058  0027BA  1E22               	comf	___awdiv@quotient+1,f,c
 12059  0027BC  B0D8               	btfsc	status,0,c
 12060  0027BE  2A22               	incf	___awdiv@quotient+1,f,c
 12061  0027C0                     l6454:
 12062  0027C0  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 12063  0027C4  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 12064  0027C8  0012               	return	
 12065  0027CA                     __end_of___awdiv:
 12066                           	opt stack 0
 12067                           tosu	equ	0xFFF
 12068                           tosh	equ	0xFFE
 12069                           tosl	equ	0xFFD
 12070                           pclath	equ	0xFFA
 12071                           tblptru	equ	0xFF8
 12072                           tblptrh	equ	0xFF7
 12073                           tblptrl	equ	0xFF6
 12074                           tablat	equ	0xFF5
 12075                           prodh	equ	0xFF4
 12076                           prodl	equ	0xFF3
 12077                           intcon	equ	0xFF2
 12078                           intcon2	equ	0xFF1
 12079                           indf0	equ	0xFEF
 12080                           postinc0	equ	0xFEE
 12081                           fsr0h	equ	0xFEA
 12082                           fsr0l	equ	0xFE9
 12083                           wreg	equ	0xFE8
 12084                           indf2	equ	0xFDF
 12085                           postinc2	equ	0xFDE
 12086                           postdec2	equ	0xFDD
 12087                           plusw2	equ	0xFDB
 12088                           fsr2h	equ	0xFDA
 12089                           fsr2l	equ	0xFD9
 12090                           status	equ	0xFD8
 12091                           
 12092 ;; *************** function _LEDbegin *****************
 12093 ;; Defined at:
 12094 ;;		line 85 in file "LED_BarGraph.c"
 12095 ;; Parameters:    Size  Location     Type
 12096 ;;  i2c_addr        1    wreg     unsigned char 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;  i2c_addr        1   10[BANK1 ] unsigned char 
 12099 ;;  writeBuffer     3    5[BANK1 ] unsigned char [3]
 12100 ;;  timeOut         2    8[BANK1 ] unsigned int 
 12101 ;;  status          1   11[BANK1 ] enum E8814
 12102 ;; Return value:  Size  Location     Type
 12103 ;;		None               void
 12104 ;; Registers used:
 12105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12111 ;;      Params:         0       0       0       0       0       0       0
 12112 ;;      Locals:         0       0       7       0       0       0       0
 12113 ;;      Temps:          0       0       0       0       0       0       0
 12114 ;;      Totals:         0       0       7       0       0       0       0
 12115 ;;Total ram usage:        7 bytes
 12116 ;; Hardware stack levels used:    1
 12117 ;; Hardware stack levels required when called:    7
 12118 ;; This function calls:
 12119 ;;		_I2C1_MasterWrite
 12120 ;;		_LEDBsetBrightness
 12121 ;;		_LEDblinkRate
 12122 ;; This function is called by:
 12123 ;;		_main
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text60
 12128  002334                     __ptext60:
 12129                           	opt stack 0
 12130  002334                     _LEDbegin:
 12131                           	opt stack 23
 12132                           
 12133                           ;incstack = 0
 12134                           ;LEDbegin@i2c_addr stored from wreg
 12135  002334  0101               	movlb	1	; () banked
 12136  002336  6F43               	movwf	LEDbegin@i2c_addr& (0+255),b
 12137                           
 12138                           ;LED_BarGraph.c: 86: uint8_t writeBuffer[3];
 12139                           ;LED_BarGraph.c: 87: uint16_t timeOut;
 12140                           ;LED_BarGraph.c: 88: writeBuffer[0] = 0x21;
 12141  002338  0E21               	movlw	33
 12142  00233A  0101               	movlb	1	; () banked
 12143  00233C  6F3E               	movwf	LEDbegin@writeBuffer& (0+255),b
 12144                           
 12145                           ;LED_BarGraph.c: 89: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12146  00233E  0E02               	movlw	2
 12147  002340  0101               	movlb	1	; () banked
 12148  002342  6F44               	movwf	LEDbegin@status& (0+255),b
 12149                           
 12150                           ;LED_BarGraph.c: 91: timeOut = 0;
 12151  002344  0E00               	movlw	0
 12152  002346  0101               	movlb	1	; () banked
 12153  002348  6F42               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 12154  00234A  0E00               	movlw	0
 12155  00234C  6F41               	movwf	LEDbegin@timeOut& (0+255),b
 12156                           
 12157                           ;LED_BarGraph.c: 92: while (status != I2C1_MESSAGE_FAIL) {
 12158  00234E  D02F               	goto	l6976
 12159  002350                     l6956:
 12160                           
 12161                           ; BSR set to: 1
 12162                           ;LED_BarGraph.c: 94: I2C1_MasterWrite(&writeBuffer,
 12163                           ;LED_BarGraph.c: 95: 1,
 12164                           ;LED_BarGraph.c: 96: i2c_addr,
 12165                           ;LED_BarGraph.c: 97: &status);
 12166  002350  0E3E               	movlw	low LEDbegin@writeBuffer
 12167  002352  0100               	movlb	0	; () banked
 12168  002354  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12169  002356  0E01               	movlw	high LEDbegin@writeBuffer
 12170  002358  0100               	movlb	0	; () banked
 12171  00235A  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12172  00235C  0E00               	movlw	0
 12173  00235E  0100               	movlb	0	; () banked
 12174  002360  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12175  002362  0E01               	movlw	1
 12176  002364  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12177  002366  C143  F0F6         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 12178  00236A  0100               	movlb	0	; () banked
 12179  00236C  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12180  00236E  0E44               	movlw	low LEDbegin@status
 12181  002370  0100               	movlb	0	; () banked
 12182  002372  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12183  002374  0E01               	movlw	high LEDbegin@status
 12184  002376  0100               	movlb	0	; () banked
 12185  002378  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12186  00237A  ECF7  F015         	call	_I2C1_MasterWrite	;wreg free
 12187  00237E                     l6958:
 12188  00237E  0E02               	movlw	2
 12189  002380  0101               	movlb	1	; () banked
 12190  002382  1944               	xorwf	LEDbegin@status& (0+255),w,b
 12191  002384  B4D8               	btfsc	status,2,c
 12192  002386  D7FB               	goto	l6958
 12193                           
 12194                           ; BSR set to: 1
 12195                           ;LED_BarGraph.c: 102: if (status == I2C1_MESSAGE_COMPLETE)
 12196                           
 12197                           ; BSR set to: 1
 12198  002388  0101               	movlb	1	; () banked
 12199  00238A  5144               	movf	LEDbegin@status& (0+255),w,b
 12200  00238C  0101               	movlb	1	; () banked
 12201  00238E  B4D8               	btfsc	status,2,c
 12202  002390  D012               	goto	l6978
 12203                           
 12204                           ; BSR set to: 1
 12205                           ;LED_BarGraph.c: 104: if (timeOut == 100)
 12206                           
 12207                           ; BSR set to: 1
 12208                           
 12209                           ; BSR set to: 1
 12210                           ;LED_BarGraph.c: 103: break;
 12211  002392  0E64               	movlw	100
 12212  002394  0101               	movlb	1	; () banked
 12213  002396  1941               	xorwf	LEDbegin@timeOut& (0+255),w,b
 12214  002398  0101               	movlb	1	; () banked
 12215  00239A  1142               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 12216  00239C  B4D8               	btfsc	status,2,c
 12217  00239E  D00B               	goto	l6978
 12218                           
 12219                           ; BSR set to: 1
 12220                           ;LED_BarGraph.c: 106: if (status == I2C1_MESSAGE_FAIL)
 12221                           
 12222                           ; BSR set to: 1
 12223                           
 12224                           ; BSR set to: 1
 12225                           ;LED_BarGraph.c: 105: break;
 12226  0023A0  0101               	movlb	1	; () banked
 12227  0023A2  0544               	decf	LEDbegin@status& (0+255),w,b
 12228  0023A4  B4D8               	btfsc	status,2,c
 12229  0023A6  D007               	goto	l6978
 12230                           
 12231                           ; BSR set to: 1
 12232                           ;LED_BarGraph.c: 108: else
 12233                           ;LED_BarGraph.c: 109: timeOut++;
 12234                           
 12235                           ; BSR set to: 1
 12236                           
 12237                           ; BSR set to: 1
 12238                           
 12239                           ; BSR set to: 1
 12240                           ;LED_BarGraph.c: 107: break;
 12241  0023A8  0101               	movlb	1	; () banked
 12242  0023AA  4B41               	infsnz	LEDbegin@timeOut& (0+255),f,b
 12243  0023AC  2B42               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 12244  0023AE                     l6976:
 12245                           
 12246                           ; BSR set to: 1
 12247  0023AE  0101               	movlb	1	; () banked
 12248  0023B0  0544               	decf	LEDbegin@status& (0+255),w,b
 12249  0023B2  A4D8               	btfss	status,2,c
 12250  0023B4  D7CD               	goto	l6956
 12251  0023B6                     l6978:
 12252                           
 12253                           ; BSR set to: 1
 12254                           ;LED_BarGraph.c: 110: }
 12255                           ;LED_BarGraph.c: 112: LEDblinkRate(0, i2c_addr);
 12256  0023B6  0E00               	movlw	0
 12257  0023B8  6E26               	movwf	LEDblinkRate@b+1,c
 12258  0023BA  0E00               	movlw	0
 12259  0023BC  6E25               	movwf	LEDblinkRate@b,c
 12260  0023BE  C143  F027         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 12261  0023C2  ECEC  F011         	call	_LEDblinkRate	;wreg free
 12262                           
 12263                           ;LED_BarGraph.c: 113: LEDBsetBrightness(15, i2c_addr);
 12264  0023C6  0E00               	movlw	0
 12265  0023C8  6E26               	movwf	LEDBsetBrightness@b+1,c
 12266  0023CA  0E0F               	movlw	15
 12267  0023CC  6E25               	movwf	LEDBsetBrightness@b,c
 12268  0023CE  C143  F027         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 12269  0023D2  EC3A  F012         	call	_LEDBsetBrightness	;wreg free
 12270  0023D6  0012               	return		;funcret
 12271  0023D8                     __end_of_LEDbegin:
 12272                           	opt stack 0
 12273                           tosu	equ	0xFFF
 12274                           tosh	equ	0xFFE
 12275                           tosl	equ	0xFFD
 12276                           pclath	equ	0xFFA
 12277                           tblptru	equ	0xFF8
 12278                           tblptrh	equ	0xFF7
 12279                           tblptrl	equ	0xFF6
 12280                           tablat	equ	0xFF5
 12281                           prodh	equ	0xFF4
 12282                           prodl	equ	0xFF3
 12283                           intcon	equ	0xFF2
 12284                           intcon2	equ	0xFF1
 12285                           indf0	equ	0xFEF
 12286                           postinc0	equ	0xFEE
 12287                           fsr0h	equ	0xFEA
 12288                           fsr0l	equ	0xFE9
 12289                           wreg	equ	0xFE8
 12290                           indf2	equ	0xFDF
 12291                           postinc2	equ	0xFDE
 12292                           postdec2	equ	0xFDD
 12293                           plusw2	equ	0xFDB
 12294                           fsr2h	equ	0xFDA
 12295                           fsr2l	equ	0xFD9
 12296                           status	equ	0xFD8
 12297                           
 12298 ;; *************** function _LEDblinkRate *****************
 12299 ;; Defined at:
 12300 ;;		line 55 in file "LED_BarGraph.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;  b               2   36[COMRAM] int 
 12303 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12306 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12307 ;;  status          1    4[BANK1 ] enum E8814
 12308 ;; Return value:  Size  Location     Type
 12309 ;;		None               void
 12310 ;; Registers used:
 12311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12317 ;;      Params:         3       0       0       0       0       0       0
 12318 ;;      Locals:         0       0       5       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0
 12320 ;;      Totals:         3       0       5       0       0       0       0
 12321 ;;Total ram usage:        8 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:    6
 12324 ;; This function calls:
 12325 ;;		_I2C1_MasterWrite
 12326 ;; This function is called by:
 12327 ;;		_LEDbegin
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text61
 12332  0023D8                     __ptext61:
 12333                           	opt stack 0
 12334  0023D8                     _LEDblinkRate:
 12335                           	opt stack 23
 12336                           
 12337                           ;LED_BarGraph.c: 56: if (b > 3) b = 0;
 12338                           
 12339                           ;incstack = 0
 12340  0023D8  BE26               	btfsc	LEDblinkRate@b+1,7,c
 12341  0023DA  D00A               	goto	l6556
 12342  0023DC  5026               	movf	LEDblinkRate@b+1,w,c
 12343  0023DE  E104               	bnz	u7070
 12344  0023E0  0E04               	movlw	4
 12345  0023E2  5C25               	subwf	LEDblinkRate@b,w,c
 12346  0023E4  A0D8               	btfss	status,0,c
 12347  0023E6  D004               	goto	l6556
 12348  0023E8                     u7070:
 12349  0023E8  0E00               	movlw	0
 12350  0023EA  6E26               	movwf	LEDblinkRate@b+1,c
 12351  0023EC  0E00               	movlw	0
 12352  0023EE  6E25               	movwf	LEDblinkRate@b,c
 12353  0023F0                     l6556:
 12354                           
 12355                           ;LED_BarGraph.c: 57: uint8_t writeBuffer[2];
 12356                           ;LED_BarGraph.c: 58: uint16_t timeOut;
 12357                           ;LED_BarGraph.c: 59: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 12358  0023F0  5025               	movf	LEDblinkRate@b,w,c
 12359  0023F2  2425               	addwf	LEDblinkRate@b,w,c
 12360  0023F4  0981               	iorlw	129
 12361  0023F6  0101               	movlb	1	; () banked
 12362  0023F8  6F39               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 12363                           
 12364                           ; BSR set to: 1
 12365                           ;LED_BarGraph.c: 60: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12366  0023FA  0E02               	movlw	2
 12367  0023FC  0101               	movlb	1	; () banked
 12368  0023FE  6F3D               	movwf	LEDblinkRate@status& (0+255),b
 12369                           
 12370                           ; BSR set to: 1
 12371                           ;LED_BarGraph.c: 62: timeOut = 0;
 12372  002400  0E00               	movlw	0
 12373  002402  0101               	movlb	1	; () banked
 12374  002404  6F3C               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 12375  002406  0E00               	movlw	0
 12376  002408  6F3B               	movwf	LEDblinkRate@timeOut& (0+255),b
 12377                           
 12378                           ;LED_BarGraph.c: 63: while (status != I2C1_MESSAGE_FAIL) {
 12379  00240A  D02F               	goto	l6582
 12380  00240C                     l6562:
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;LED_BarGraph.c: 65: I2C1_MasterWrite(&writeBuffer,
 12384                           ;LED_BarGraph.c: 66: 1,
 12385                           ;LED_BarGraph.c: 67: i2c_addr,
 12386                           ;LED_BarGraph.c: 68: &status);
 12387  00240C  0E39               	movlw	low LEDblinkRate@writeBuffer
 12388  00240E  0100               	movlb	0	; () banked
 12389  002410  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12390  002412  0E01               	movlw	high LEDblinkRate@writeBuffer
 12391  002414  0100               	movlb	0	; () banked
 12392  002416  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12393  002418  0E00               	movlw	0
 12394  00241A  0100               	movlb	0	; () banked
 12395  00241C  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12396  00241E  0E01               	movlw	1
 12397  002420  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12398  002422  C027  F0F6         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 12399  002426  0100               	movlb	0	; () banked
 12400  002428  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12401  00242A  0E3D               	movlw	low LEDblinkRate@status
 12402  00242C  0100               	movlb	0	; () banked
 12403  00242E  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12404  002430  0E01               	movlw	high LEDblinkRate@status
 12405  002432  0100               	movlb	0	; () banked
 12406  002434  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12407  002436  ECF7  F015         	call	_I2C1_MasterWrite	;wreg free
 12408  00243A                     l6564:
 12409  00243A  0E02               	movlw	2
 12410  00243C  0101               	movlb	1	; () banked
 12411  00243E  193D               	xorwf	LEDblinkRate@status& (0+255),w,b
 12412  002440  B4D8               	btfsc	status,2,c
 12413  002442  D7FB               	goto	l6564
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;LED_BarGraph.c: 73: if (status == I2C1_MESSAGE_COMPLETE)
 12417                           
 12418                           ; BSR set to: 1
 12419  002444  0101               	movlb	1	; () banked
 12420  002446  513D               	movf	LEDblinkRate@status& (0+255),w,b
 12421  002448  0101               	movlb	1	; () banked
 12422  00244A  B4D8               	btfsc	status,2,c
 12423  00244C  0012               	return	
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;LED_BarGraph.c: 75: if (timeOut == 100)
 12427                           
 12428                           ; BSR set to: 1
 12429                           
 12430                           ; BSR set to: 1
 12431                           ;LED_BarGraph.c: 74: break;
 12432  00244E  0E64               	movlw	100
 12433  002450  0101               	movlb	1	; () banked
 12434  002452  193B               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 12435  002454  0101               	movlb	1	; () banked
 12436  002456  113C               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 12437  002458  B4D8               	btfsc	status,2,c
 12438  00245A  0012               	return	
 12439                           
 12440                           ; BSR set to: 1
 12441                           ;LED_BarGraph.c: 77: if (status == I2C1_MESSAGE_FAIL)
 12442                           
 12443                           ; BSR set to: 1
 12444                           
 12445                           ; BSR set to: 1
 12446                           ;LED_BarGraph.c: 76: break;
 12447  00245C  0101               	movlb	1	; () banked
 12448  00245E  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12449  002460  B4D8               	btfsc	status,2,c
 12450  002462  0012               	return	
 12451                           
 12452                           ; BSR set to: 1
 12453                           ;LED_BarGraph.c: 79: else
 12454                           ;LED_BarGraph.c: 80: timeOut++;
 12455                           
 12456                           ; BSR set to: 1
 12457                           
 12458                           ; BSR set to: 1
 12459                           
 12460                           ; BSR set to: 1
 12461                           ;LED_BarGraph.c: 78: break;
 12462  002464  0101               	movlb	1	; () banked
 12463  002466  4B3B               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 12464  002468  2B3C               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 12465  00246A                     l6582:
 12466                           
 12467                           ; BSR set to: 1
 12468  00246A  0101               	movlb	1	; () banked
 12469  00246C  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12470  00246E  B4D8               	btfsc	status,2,c
 12471  002470  0012               	return	
 12472  002472  D7CC               	goto	l6562
 12473  002474                     __end_of_LEDblinkRate:
 12474                           	opt stack 0
 12475                           tosu	equ	0xFFF
 12476                           tosh	equ	0xFFE
 12477                           tosl	equ	0xFFD
 12478                           pclath	equ	0xFFA
 12479                           tblptru	equ	0xFF8
 12480                           tblptrh	equ	0xFF7
 12481                           tblptrl	equ	0xFF6
 12482                           tablat	equ	0xFF5
 12483                           prodh	equ	0xFF4
 12484                           prodl	equ	0xFF3
 12485                           intcon	equ	0xFF2
 12486                           intcon2	equ	0xFF1
 12487                           indf0	equ	0xFEF
 12488                           postinc0	equ	0xFEE
 12489                           fsr0h	equ	0xFEA
 12490                           fsr0l	equ	0xFE9
 12491                           wreg	equ	0xFE8
 12492                           indf2	equ	0xFDF
 12493                           postinc2	equ	0xFDE
 12494                           postdec2	equ	0xFDD
 12495                           plusw2	equ	0xFDB
 12496                           fsr2h	equ	0xFDA
 12497                           fsr2l	equ	0xFD9
 12498                           status	equ	0xFD8
 12499                           
 12500 ;; *************** function _LEDBsetBrightness *****************
 12501 ;; Defined at:
 12502 ;;		line 25 in file "LED_BarGraph.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  b               2   36[COMRAM] int 
 12505 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12508 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12509 ;;  status          1    4[BANK1 ] enum E8814
 12510 ;; Return value:  Size  Location     Type
 12511 ;;		None               void
 12512 ;; Registers used:
 12513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12519 ;;      Params:         3       0       0       0       0       0       0
 12520 ;;      Locals:         0       0       5       0       0       0       0
 12521 ;;      Temps:          0       0       0       0       0       0       0
 12522 ;;      Totals:         3       0       5       0       0       0       0
 12523 ;;Total ram usage:        8 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; Hardware stack levels required when called:    6
 12526 ;; This function calls:
 12527 ;;		_I2C1_MasterWrite
 12528 ;; This function is called by:
 12529 ;;		_LEDbegin
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text62
 12534  002474                     __ptext62:
 12535                           	opt stack 0
 12536  002474                     _LEDBsetBrightness:
 12537                           	opt stack 23
 12538                           
 12539                           ;LED_BarGraph.c: 26: if (b > 15) b = 15;
 12540                           
 12541                           ; BSR set to: 1
 12542                           ;incstack = 0
 12543  002474  BE26               	btfsc	LEDBsetBrightness@b+1,7,c
 12544  002476  D00A               	goto	l6524
 12545  002478  5026               	movf	LEDBsetBrightness@b+1,w,c
 12546  00247A  E104               	bnz	u7010
 12547  00247C  0E10               	movlw	16
 12548  00247E  5C25               	subwf	LEDBsetBrightness@b,w,c
 12549  002480  A0D8               	btfss	status,0,c
 12550  002482  D004               	goto	l6524
 12551  002484                     u7010:
 12552  002484  0E00               	movlw	0
 12553  002486  6E26               	movwf	LEDBsetBrightness@b+1,c
 12554  002488  0E0F               	movlw	15
 12555  00248A  6E25               	movwf	LEDBsetBrightness@b,c
 12556  00248C                     l6524:
 12557                           
 12558                           ;LED_BarGraph.c: 27: uint8_t writeBuffer[2];
 12559                           ;LED_BarGraph.c: 28: uint16_t timeOut;
 12560                           ;LED_BarGraph.c: 29: writeBuffer[0] = (0xE0 | b);
 12561  00248C  5025               	movf	LEDBsetBrightness@b,w,c
 12562  00248E  09E0               	iorlw	224
 12563  002490  0101               	movlb	1	; () banked
 12564  002492  6F39               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 12565                           
 12566                           ; BSR set to: 1
 12567                           ;LED_BarGraph.c: 30: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12568  002494  0E02               	movlw	2
 12569  002496  0101               	movlb	1	; () banked
 12570  002498  6F3D               	movwf	LEDBsetBrightness@status& (0+255),b
 12571                           
 12572                           ; BSR set to: 1
 12573                           ;LED_BarGraph.c: 32: timeOut = 0;
 12574  00249A  0E00               	movlw	0
 12575  00249C  0101               	movlb	1	; () banked
 12576  00249E  6F3C               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 12577  0024A0  0E00               	movlw	0
 12578  0024A2  6F3B               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 12579                           
 12580                           ;LED_BarGraph.c: 33: while (status != I2C1_MESSAGE_FAIL) {
 12581  0024A4  D02F               	goto	l6550
 12582  0024A6                     l6530:
 12583                           
 12584                           ; BSR set to: 1
 12585                           ;LED_BarGraph.c: 35: I2C1_MasterWrite(&writeBuffer,
 12586                           ;LED_BarGraph.c: 36: 1,
 12587                           ;LED_BarGraph.c: 37: i2c_addr,
 12588                           ;LED_BarGraph.c: 38: &status);
 12589  0024A6  0E39               	movlw	low LEDBsetBrightness@writeBuffer
 12590  0024A8  0100               	movlb	0	; () banked
 12591  0024AA  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12592  0024AC  0E01               	movlw	high LEDBsetBrightness@writeBuffer
 12593  0024AE  0100               	movlb	0	; () banked
 12594  0024B0  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12595  0024B2  0E00               	movlw	0
 12596  0024B4  0100               	movlb	0	; () banked
 12597  0024B6  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12598  0024B8  0E01               	movlw	1
 12599  0024BA  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12600  0024BC  C027  F0F6         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 12601  0024C0  0100               	movlb	0	; () banked
 12602  0024C2  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12603  0024C4  0E3D               	movlw	low LEDBsetBrightness@status
 12604  0024C6  0100               	movlb	0	; () banked
 12605  0024C8  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12606  0024CA  0E01               	movlw	high LEDBsetBrightness@status
 12607  0024CC  0100               	movlb	0	; () banked
 12608  0024CE  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12609  0024D0  ECF7  F015         	call	_I2C1_MasterWrite	;wreg free
 12610  0024D4                     l6532:
 12611  0024D4  0E02               	movlw	2
 12612  0024D6  0101               	movlb	1	; () banked
 12613  0024D8  193D               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 12614  0024DA  B4D8               	btfsc	status,2,c
 12615  0024DC  D7FB               	goto	l6532
 12616                           
 12617                           ; BSR set to: 1
 12618                           ;LED_BarGraph.c: 43: if (status == I2C1_MESSAGE_COMPLETE)
 12619                           
 12620                           ; BSR set to: 1
 12621  0024DE  0101               	movlb	1	; () banked
 12622  0024E0  513D               	movf	LEDBsetBrightness@status& (0+255),w,b
 12623  0024E2  0101               	movlb	1	; () banked
 12624  0024E4  B4D8               	btfsc	status,2,c
 12625  0024E6  0012               	return	
 12626                           
 12627                           ; BSR set to: 1
 12628                           ;LED_BarGraph.c: 45: if (timeOut == 100)
 12629                           
 12630                           ; BSR set to: 1
 12631                           
 12632                           ; BSR set to: 1
 12633                           ;LED_BarGraph.c: 44: break;
 12634  0024E8  0E64               	movlw	100
 12635  0024EA  0101               	movlb	1	; () banked
 12636  0024EC  193B               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 12637  0024EE  0101               	movlb	1	; () banked
 12638  0024F0  113C               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 12639  0024F2  B4D8               	btfsc	status,2,c
 12640  0024F4  0012               	return	
 12641                           
 12642                           ; BSR set to: 1
 12643                           ;LED_BarGraph.c: 47: if (status == I2C1_MESSAGE_FAIL)
 12644                           
 12645                           ; BSR set to: 1
 12646                           
 12647                           ; BSR set to: 1
 12648                           ;LED_BarGraph.c: 46: break;
 12649  0024F6  0101               	movlb	1	; () banked
 12650  0024F8  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12651  0024FA  B4D8               	btfsc	status,2,c
 12652  0024FC  0012               	return	
 12653                           
 12654                           ; BSR set to: 1
 12655                           ;LED_BarGraph.c: 49: else
 12656                           ;LED_BarGraph.c: 50: timeOut++;
 12657                           
 12658                           ; BSR set to: 1
 12659                           
 12660                           ; BSR set to: 1
 12661                           
 12662                           ; BSR set to: 1
 12663                           ;LED_BarGraph.c: 48: break;
 12664  0024FE  0101               	movlb	1	; () banked
 12665  002500  4B3B               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 12666  002502  2B3C               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 12667  002504                     l6550:
 12668                           
 12669                           ; BSR set to: 1
 12670  002504  0101               	movlb	1	; () banked
 12671  002506  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12672  002508  B4D8               	btfsc	status,2,c
 12673  00250A  0012               	return	
 12674  00250C  D7CC               	goto	l6530
 12675  00250E                     __end_of_LEDBsetBrightness:
 12676                           	opt stack 0
 12677                           tosu	equ	0xFFF
 12678                           tosh	equ	0xFFE
 12679                           tosl	equ	0xFFD
 12680                           pclath	equ	0xFFA
 12681                           tblptru	equ	0xFF8
 12682                           tblptrh	equ	0xFF7
 12683                           tblptrl	equ	0xFF6
 12684                           tablat	equ	0xFF5
 12685                           prodh	equ	0xFF4
 12686                           prodl	equ	0xFF3
 12687                           intcon	equ	0xFF2
 12688                           intcon2	equ	0xFF1
 12689                           indf0	equ	0xFEF
 12690                           postinc0	equ	0xFEE
 12691                           fsr0h	equ	0xFEA
 12692                           fsr0l	equ	0xFE9
 12693                           wreg	equ	0xFE8
 12694                           indf2	equ	0xFDF
 12695                           postinc2	equ	0xFDE
 12696                           postdec2	equ	0xFDD
 12697                           plusw2	equ	0xFDB
 12698                           fsr2h	equ	0xFDA
 12699                           fsr2l	equ	0xFD9
 12700                           status	equ	0xFD8
 12701                           
 12702 ;; *************** function _I2C1_MasterWrite *****************
 12703 ;; Defined at:
 12704 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 12707 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12708 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12709 ;;  length          2    2[BANK0 ] int 
 12710 ;;  address         2    4[BANK0 ] unsigned int 
 12711 ;;  pflag           2    6[BANK0 ] PTR enum E8795
 12712 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12713 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;		None
 12716 ;; Return value:  Size  Location     Type
 12717 ;;		None               void
 12718 ;; Registers used:
 12719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12725 ;;      Params:         0       8       0       0       0       0       0
 12726 ;;      Locals:         0       0       0       0       0       0       0
 12727 ;;      Temps:          0       0       0       0       0       0       0
 12728 ;;      Totals:         0       8       0       0       0       0       0
 12729 ;;Total ram usage:        8 bytes
 12730 ;; Hardware stack levels used:    1
 12731 ;; Hardware stack levels required when called:    5
 12732 ;; This function calls:
 12733 ;;		_I2C1_MasterTRBInsert
 12734 ;;		_I2C1_MasterWriteTRBBuild
 12735 ;; This function is called by:
 12736 ;;		_LEDBsetBrightness
 12737 ;;		_LEDblinkRate
 12738 ;;		_LEDbegin
 12739 ;;		_LEDwriteDisplay
 12740 ;;		_OLED_command
 12741 ;;		_oledPutChar
 12742 ;;		_Display
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           	psect	text63
 12747  002BEE                     __ptext63:
 12748                           	opt stack 0
 12749  002BEE                     _I2C1_MasterWrite:
 12750                           	opt stack 22
 12751                           
 12752                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 12753                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 12754                           
 12755                           ; BSR set to: 1
 12756                           ;incstack = 0
 12757  002BEE  0100               	movlb	0	; () banked
 12758  002BF0  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12759  002BF2  D021               	goto	l5914
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;i2c1.c: 561: {
 12763                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 12764  002BF4  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12765  002BF6  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 12766  002BF8  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12767  002BFA  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 12768  002BFC  C0F2  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 12769  002C00  C0F3  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 12770  002C04  C0F4  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 12771  002C08  C0F5  F020         	movff	I2C1_MasterWrite@length+1,I2C1_MasterWriteTRBBuild@length+1
 12772  002C0C  C0F6  F021         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 12773  002C10  C0F7  F022         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 12774  002C14  EC94  F016         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 12775                           
 12776                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12777  002C18  0E00               	movlw	0
 12778  002C1A  6E1C               	movwf	I2C1_MasterTRBInsert@count+1,c
 12779  002C1C  0E01               	movlw	1
 12780  002C1E  6E1B               	movwf	I2C1_MasterTRBInsert@count,c
 12781  002C20  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12782  002C22  6E1D               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 12783  002C24  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12784  002C26  6E1E               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 12785  002C28  C0F8  F01F         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 12786  002C2C  C0F9  F020         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 12787  002C30  EC43  F010         	call	_I2C1_MasterTRBInsert	;wreg free
 12788                           
 12789                           ;i2c1.c: 564: }
 12790  002C34  0012               	return	
 12791  002C36                     l5914:
 12792                           
 12793                           ;i2c1.c: 565: else
 12794                           ;i2c1.c: 566: {
 12795                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 12796  002C36  C0F8  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 12797  002C3A  C0F9  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 12798  002C3E  0E01               	movlw	1
 12799  002C40  6EDF               	movwf	indf2,c
 12800  002C42  0012               	return	
 12801  002C44                     __end_of_I2C1_MasterWrite:
 12802                           	opt stack 0
 12803                           tosu	equ	0xFFF
 12804                           tosh	equ	0xFFE
 12805                           tosl	equ	0xFFD
 12806                           pclath	equ	0xFFA
 12807                           tblptru	equ	0xFF8
 12808                           tblptrh	equ	0xFF7
 12809                           tblptrl	equ	0xFF6
 12810                           tablat	equ	0xFF5
 12811                           prodh	equ	0xFF4
 12812                           prodl	equ	0xFF3
 12813                           intcon	equ	0xFF2
 12814                           intcon2	equ	0xFF1
 12815                           indf0	equ	0xFEF
 12816                           postinc0	equ	0xFEE
 12817                           fsr0h	equ	0xFEA
 12818                           fsr0l	equ	0xFE9
 12819                           wreg	equ	0xFE8
 12820                           indf2	equ	0xFDF
 12821                           postinc2	equ	0xFDE
 12822                           postdec2	equ	0xFDD
 12823                           plusw2	equ	0xFDB
 12824                           fsr2h	equ	0xFDA
 12825                           fsr2l	equ	0xFD9
 12826                           status	equ	0xFD8
 12827                           
 12828 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 12829 ;; Defined at:
 12830 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;  ptrb            2   26[COMRAM] PTR struct .
 12833 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 12834 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 12835 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12836 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12837 ;;  length          2   30[COMRAM] int 
 12838 ;;  address         2   32[COMRAM] unsigned int 
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;		None
 12841 ;; Return value:  Size  Location     Type
 12842 ;;		None               void
 12843 ;; Registers used:
 12844 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12845 ;; Tracked objects:
 12846 ;;		On entry : 0/0
 12847 ;;		On exit  : 0/0
 12848 ;;		Unchanged: 0/0
 12849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12850 ;;      Params:         8       0       0       0       0       0       0
 12851 ;;      Locals:         0       0       0       0       0       0       0
 12852 ;;      Temps:          2       0       0       0       0       0       0
 12853 ;;      Totals:        10       0       0       0       0       0       0
 12854 ;;Total ram usage:       10 bytes
 12855 ;; Hardware stack levels used:    1
 12856 ;; Hardware stack levels required when called:    4
 12857 ;; This function calls:
 12858 ;;		Nothing
 12859 ;; This function is called by:
 12860 ;;		_I2C1_MasterWrite
 12861 ;; This function uses a non-reentrant model
 12862 ;;
 12863                           
 12864                           	psect	text64
 12865  002D28                     __ptext64:
 12866                           	opt stack 0
 12867  002D28                     _I2C1_MasterWriteTRBBuild:
 12868                           	opt stack 22
 12869                           
 12870                           ;i2c1.c: 666: ptrb->address = address << 1;
 12871                           
 12872                           ;incstack = 0
 12873  002D28  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 12874  002D2C  C022  F024         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 12875  002D30  90D8               	bcf	status,0,c
 12876  002D32  3623               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 12877  002D34  3624               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 12878  002D36  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 12879  002D3A  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 12880  002D3E  C023  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 12881  002D42  C024  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 12882                           
 12883                           ;i2c1.c: 667: ptrb->length = length;
 12884  002D46  EE20 F002          	lfsr	2,2
 12885  002D4A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12886  002D4C  26D9               	addwf	fsr2l,f,c
 12887  002D4E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12888  002D50  22DA               	addwfc	fsr2h,f,c
 12889  002D52  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 12890                           
 12891                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 12892  002D56  EE20 F003          	lfsr	2,3
 12893  002D5A  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12894  002D5C  26D9               	addwf	fsr2l,f,c
 12895  002D5E  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12896  002D60  22DA               	addwfc	fsr2h,f,c
 12897  002D62  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 12898  002D66  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 12899  002D6A  0012               	return		;funcret
 12900  002D6C                     __end_of_I2C1_MasterWriteTRBBuild:
 12901                           	opt stack 0
 12902                           tosu	equ	0xFFF
 12903                           tosh	equ	0xFFE
 12904                           tosl	equ	0xFFD
 12905                           pclath	equ	0xFFA
 12906                           tblptru	equ	0xFF8
 12907                           tblptrh	equ	0xFF7
 12908                           tblptrl	equ	0xFF6
 12909                           tablat	equ	0xFF5
 12910                           prodh	equ	0xFF4
 12911                           prodl	equ	0xFF3
 12912                           intcon	equ	0xFF2
 12913                           intcon2	equ	0xFF1
 12914                           indf0	equ	0xFEF
 12915                           postinc0	equ	0xFEE
 12916                           fsr0h	equ	0xFEA
 12917                           fsr0l	equ	0xFE9
 12918                           wreg	equ	0xFE8
 12919                           indf2	equ	0xFDF
 12920                           postinc2	equ	0xFDE
 12921                           postdec2	equ	0xFDD
 12922                           plusw2	equ	0xFDB
 12923                           fsr2h	equ	0xFDA
 12924                           fsr2l	equ	0xFD9
 12925                           status	equ	0xFD8
 12926                           
 12927 ;; *************** function _I2C1_MasterTRBInsert *****************
 12928 ;; Defined at:
 12929 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;  count           2   26[COMRAM] int 
 12932 ;;  ptrb_list       2   28[COMRAM] PTR struct .
 12933 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 12934 ;;  pflag           2   30[COMRAM] PTR enum E8795
 12935 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12936 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12937 ;; Auto vars:     Size  Location     Type
 12938 ;;		None
 12939 ;; Return value:  Size  Location     Type
 12940 ;;		None               void
 12941 ;; Registers used:
 12942 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12943 ;; Tracked objects:
 12944 ;;		On entry : 0/0
 12945 ;;		On exit  : 0/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12948 ;;      Params:         6       0       0       0       0       0       0
 12949 ;;      Locals:         0       0       0       0       0       0       0
 12950 ;;      Temps:          1       0       0       0       0       0       0
 12951 ;;      Totals:         7       0       0       0       0       0       0
 12952 ;;Total ram usage:        7 bytes
 12953 ;; Hardware stack levels used:    1
 12954 ;; Hardware stack levels required when called:    4
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_I2C1_MasterWrite
 12959 ;;		_I2C1_MasterRead
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           	psect	text65
 12964  002086                     __ptext65:
 12965                           	opt stack 0
 12966  002086                     _I2C1_MasterTRBInsert:
 12967                           	opt stack 22
 12968                           
 12969                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 12970                           
 12971                           ;incstack = 0
 12972  002086  0100               	movlb	0	; () banked
 12973  002088  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12974  00208A  D046               	goto	l5894
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;i2c1.c: 602: {
 12978                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 12979  00208C  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12980  002090  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12981  002094  0E02               	movlw	2
 12982  002096  6EDF               	movwf	indf2,c
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 12986  002098  0100               	movlb	0	; () banked
 12987  00209A  EE20 F001          	lfsr	2,1
 12988  00209E  51B8               	movf	_i2c1_object& (0+255),w,b
 12989  0020A0  26D9               	addwf	fsr2l,f,c
 12990  0020A2  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12991  0020A4  22DA               	addwfc	fsr2h,f,c
 12992  0020A6  C01D  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 12993  0020AA  C01E  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 12997  0020AE  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 12998  0020B2  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 12999  0020B6  C01B  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 13003  0020BA  0100               	movlb	0	; () banked
 13004  0020BC  EE20 F003          	lfsr	2,3
 13005  0020C0  51B8               	movf	_i2c1_object& (0+255),w,b
 13006  0020C2  26D9               	addwf	fsr2l,f,c
 13007  0020C4  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 13008  0020C6  22DA               	addwfc	fsr2h,f,c
 13009  0020C8  C01F  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 13010  0020CC  C020  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 13014  0020D0  0E05               	movlw	5
 13015  0020D2  0100               	movlb	0	; () banked
 13016  0020D4  27B8               	addwf	_i2c1_object& (0+255),f,b
 13017  0020D6  0E00               	movlw	0
 13018  0020D8  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 13022  0020DA  0EF0               	movlw	low (_i2c1_tr_queue+5)
 13023  0020DC  0100               	movlb	0	; () banked
 13024  0020DE  19B8               	xorwf	_i2c1_object& (0+255),w,b
 13025  0020E0  E10B               	bnz	l5890
 13026  0020E2  0E00               	movlw	high (_i2c1_tr_queue+5)
 13027  0020E4  0100               	movlb	0	; () banked
 13028  0020E6  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 13029  0020E8  A4D8               	btfss	status,2,c
 13030  0020EA  D006               	goto	l5890
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;i2c1.c: 612: {
 13034                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 13035  0020EC  0EEB               	movlw	low _i2c1_tr_queue
 13036  0020EE  0100               	movlb	0	; () banked
 13037  0020F0  6FB8               	movwf	_i2c1_object& (0+255),b
 13038  0020F2  0E00               	movlw	high _i2c1_tr_queue
 13039  0020F4  0100               	movlb	0	; () banked
 13040  0020F6  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 13041  0020F8                     l5890:
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;i2c1.c: 615: }
 13045                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 13046  0020F8  0100               	movlb	0	; () banked
 13047  0020FA  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 13048                           
 13049                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 13050  0020FC  0100               	movlb	0	; () banked
 13051  0020FE  51B8               	movf	_i2c1_object& (0+255),w,b
 13052  002100  0100               	movlb	0	; () banked
 13053  002102  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13054  002104  E10F               	bnz	l5896
 13055  002106  0100               	movlb	0	; () banked
 13056  002108  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 13057  00210A  0100               	movlb	0	; () banked
 13058  00210C  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13059  00210E  A4D8               	btfss	status,2,c
 13060  002110  D009               	goto	l5896
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;i2c1.c: 623: {
 13064                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 13065  002112  0100               	movlb	0	; () banked
 13066  002114  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 13067                           
 13068                           ; BSR set to: 0
 13069                           ;i2c1.c: 626: }
 13070                           ;i2c1.c: 628: }
 13071  002116  D006               	goto	l5896
 13072  002118                     l5894:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;i2c1.c: 629: else
 13076                           ;i2c1.c: 630: {
 13077                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 13078  002118  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 13079  00211C  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 13080  002120  0E01               	movlw	1
 13081  002122  6EDF               	movwf	indf2,c
 13082  002124                     l5896:
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;i2c1.c: 632: }
 13086                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 13087  002124  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 13088  002128  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 13089  00212C  0E02               	movlw	2
 13090  00212E  18DE               	xorwf	postinc2,w,c
 13091  002130  A4D8               	btfss	status,2,c
 13092  002132  0012               	return	
 13093  002134                     l5900:
 13094  002134  5038               	movf	_i2c1_state,w,c
 13095  002136  A4D8               	btfss	status,2,c
 13096  002138  D7FD               	goto	l5900
 13097                           
 13098                           ;i2c1.c: 638: {
 13099                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 13100  00213A  869E               	bsf	3998,3,c	;volatile
 13101  00213C  0012               	return	
 13102  00213E                     __end_of_I2C1_MasterTRBInsert:
 13103                           	opt stack 0
 13104                           tosu	equ	0xFFF
 13105                           tosh	equ	0xFFE
 13106                           tosl	equ	0xFFD
 13107                           pclath	equ	0xFFA
 13108                           tblptru	equ	0xFF8
 13109                           tblptrh	equ	0xFF7
 13110                           tblptrl	equ	0xFF6
 13111                           tablat	equ	0xFF5
 13112                           prodh	equ	0xFF4
 13113                           prodl	equ	0xFF3
 13114                           intcon	equ	0xFF2
 13115                           intcon2	equ	0xFF1
 13116                           indf0	equ	0xFEF
 13117                           postinc0	equ	0xFEE
 13118                           fsr0h	equ	0xFEA
 13119                           fsr0l	equ	0xFE9
 13120                           wreg	equ	0xFE8
 13121                           indf2	equ	0xFDF
 13122                           postinc2	equ	0xFDE
 13123                           postdec2	equ	0xFDD
 13124                           plusw2	equ	0xFDB
 13125                           fsr2h	equ	0xFDA
 13126                           fsr2l	equ	0xFD9
 13127                           status	equ	0xFD8
 13128                           
 13129 ;; *************** function _GetTime *****************
 13130 ;; Defined at:
 13131 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 13132 ;; Parameters:    Size  Location     Type
 13133 ;;		None
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;		None
 13136 ;; Return value:  Size  Location     Type
 13137 ;;                  2   26[COMRAM] int 
 13138 ;; Registers used:
 13139 ;;		None
 13140 ;; Tracked objects:
 13141 ;;		On entry : 0/0
 13142 ;;		On exit  : 0/0
 13143 ;;		Unchanged: 0/0
 13144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13145 ;;      Params:         2       0       0       0       0       0       0
 13146 ;;      Locals:         0       0       0       0       0       0       0
 13147 ;;      Temps:          0       0       0       0       0       0       0
 13148 ;;      Totals:         2       0       0       0       0       0       0
 13149 ;;Total ram usage:        2 bytes
 13150 ;; Hardware stack levels used:    1
 13151 ;; Hardware stack levels required when called:    4
 13152 ;; This function calls:
 13153 ;;		Nothing
 13154 ;; This function is called by:
 13155 ;;		_main
 13156 ;; This function uses a non-reentrant model
 13157 ;;
 13158                           
 13159                           	psect	text66
 13160  0031D8                     __ptext66:
 13161                           	opt stack 0
 13162  0031D8                     _GetTime:
 13163                           	opt stack 26
 13164                           
 13165                           ;tmr0.c: 98: return time;
 13166                           
 13167                           ;incstack = 0
 13168  0031D8  C03F  F01B         	movff	_time,?_GetTime	;volatile
 13169  0031DC  6A1C               	clrf	?_GetTime+1,c
 13170  0031DE  0012               	return		;funcret
 13171  0031E0                     __end_of_GetTime:
 13172                           	opt stack 0
 13173                           tosu	equ	0xFFF
 13174                           tosh	equ	0xFFE
 13175                           tosl	equ	0xFFD
 13176                           pclath	equ	0xFFA
 13177                           tblptru	equ	0xFF8
 13178                           tblptrh	equ	0xFF7
 13179                           tblptrl	equ	0xFF6
 13180                           tablat	equ	0xFF5
 13181                           prodh	equ	0xFF4
 13182                           prodl	equ	0xFF3
 13183                           intcon	equ	0xFF2
 13184                           intcon2	equ	0xFF1
 13185                           indf0	equ	0xFEF
 13186                           postinc0	equ	0xFEE
 13187                           fsr0h	equ	0xFEA
 13188                           fsr0l	equ	0xFE9
 13189                           wreg	equ	0xFE8
 13190                           indf2	equ	0xFDF
 13191                           postinc2	equ	0xFDE
 13192                           postdec2	equ	0xFDD
 13193                           plusw2	equ	0xFDB
 13194                           fsr2h	equ	0xFDA
 13195                           fsr2l	equ	0xFD9
 13196                           status	equ	0xFD8
 13197                           
 13198 ;; *************** function _GetDataBarGraphB *****************
 13199 ;; Defined at:
 13200 ;;		line 57 in file "Communications.c"
 13201 ;; Parameters:    Size  Location     Type
 13202 ;;		None
 13203 ;; Auto vars:     Size  Location     Type
 13204 ;;		None
 13205 ;; Return value:  Size  Location     Type
 13206 ;;                  2   26[COMRAM] unsigned int 
 13207 ;; Registers used:
 13208 ;;		None
 13209 ;; Tracked objects:
 13210 ;;		On entry : 0/0
 13211 ;;		On exit  : 0/0
 13212 ;;		Unchanged: 0/0
 13213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13214 ;;      Params:         2       0       0       0       0       0       0
 13215 ;;      Locals:         0       0       0       0       0       0       0
 13216 ;;      Temps:          0       0       0       0       0       0       0
 13217 ;;      Totals:         2       0       0       0       0       0       0
 13218 ;;Total ram usage:        2 bytes
 13219 ;; Hardware stack levels used:    1
 13220 ;; Hardware stack levels required when called:    4
 13221 ;; This function calls:
 13222 ;;		Nothing
 13223 ;; This function is called by:
 13224 ;;		_main
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228                           	psect	text67
 13229  0031C4                     __ptext67:
 13230                           	opt stack 0
 13231  0031C4                     _GetDataBarGraphB:
 13232                           	opt stack 26
 13233                           
 13234                           ;Communications.c: 58: return DataBarGraphA;
 13235                           
 13236                           ;incstack = 0
 13237  0031C4  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphB
 13238  0031C8  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphB+1
 13239  0031CC  0012               	return		;funcret
 13240  0031CE                     __end_of_GetDataBarGraphB:
 13241                           	opt stack 0
 13242                           tosu	equ	0xFFF
 13243                           tosh	equ	0xFFE
 13244                           tosl	equ	0xFFD
 13245                           pclath	equ	0xFFA
 13246                           tblptru	equ	0xFF8
 13247                           tblptrh	equ	0xFF7
 13248                           tblptrl	equ	0xFF6
 13249                           tablat	equ	0xFF5
 13250                           prodh	equ	0xFF4
 13251                           prodl	equ	0xFF3
 13252                           intcon	equ	0xFF2
 13253                           intcon2	equ	0xFF1
 13254                           indf0	equ	0xFEF
 13255                           postinc0	equ	0xFEE
 13256                           fsr0h	equ	0xFEA
 13257                           fsr0l	equ	0xFE9
 13258                           wreg	equ	0xFE8
 13259                           indf2	equ	0xFDF
 13260                           postinc2	equ	0xFDE
 13261                           postdec2	equ	0xFDD
 13262                           plusw2	equ	0xFDB
 13263                           fsr2h	equ	0xFDA
 13264                           fsr2l	equ	0xFD9
 13265                           status	equ	0xFD8
 13266                           
 13267 ;; *************** function _GetDataBarGraphA *****************
 13268 ;; Defined at:
 13269 ;;		line 53 in file "Communications.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;		None
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;		None
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  2   26[COMRAM] unsigned int 
 13276 ;; Registers used:
 13277 ;;		None
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13283 ;;      Params:         2       0       0       0       0       0       0
 13284 ;;      Locals:         0       0       0       0       0       0       0
 13285 ;;      Temps:          0       0       0       0       0       0       0
 13286 ;;      Totals:         2       0       0       0       0       0       0
 13287 ;;Total ram usage:        2 bytes
 13288 ;; Hardware stack levels used:    1
 13289 ;; Hardware stack levels required when called:    4
 13290 ;; This function calls:
 13291 ;;		Nothing
 13292 ;; This function is called by:
 13293 ;;		_main
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297                           	psect	text68
 13298  0031CE                     __ptext68:
 13299                           	opt stack 0
 13300  0031CE                     _GetDataBarGraphA:
 13301                           	opt stack 26
 13302                           
 13303                           ;Communications.c: 54: return DataBarGraphA;
 13304                           
 13305                           ;incstack = 0
 13306  0031CE  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphA
 13307  0031D2  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphA+1
 13308  0031D6  0012               	return		;funcret
 13309  0031D8                     __end_of_GetDataBarGraphA:
 13310                           	opt stack 0
 13311                           tosu	equ	0xFFF
 13312                           tosh	equ	0xFFE
 13313                           tosl	equ	0xFFD
 13314                           pclath	equ	0xFFA
 13315                           tblptru	equ	0xFF8
 13316                           tblptrh	equ	0xFF7
 13317                           tblptrl	equ	0xFF6
 13318                           tablat	equ	0xFF5
 13319                           prodh	equ	0xFF4
 13320                           prodl	equ	0xFF3
 13321                           intcon	equ	0xFF2
 13322                           intcon2	equ	0xFF1
 13323                           indf0	equ	0xFEF
 13324                           postinc0	equ	0xFEE
 13325                           fsr0h	equ	0xFEA
 13326                           fsr0l	equ	0xFE9
 13327                           wreg	equ	0xFE8
 13328                           indf2	equ	0xFDF
 13329                           postinc2	equ	0xFDE
 13330                           postdec2	equ	0xFDD
 13331                           plusw2	equ	0xFDB
 13332                           fsr2h	equ	0xFDA
 13333                           fsr2l	equ	0xFD9
 13334                           status	equ	0xFD8
 13335                           
 13336 ;; *************** function _ClearTime *****************
 13337 ;; Defined at:
 13338 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 13339 ;; Parameters:    Size  Location     Type
 13340 ;;		None
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;		None
 13343 ;; Return value:  Size  Location     Type
 13344 ;;		None               void
 13345 ;; Registers used:
 13346 ;;		wreg, status,2
 13347 ;; Tracked objects:
 13348 ;;		On entry : 0/0
 13349 ;;		On exit  : 0/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13352 ;;      Params:         0       0       0       0       0       0       0
 13353 ;;      Locals:         0       0       0       0       0       0       0
 13354 ;;      Temps:          0       0       0       0       0       0       0
 13355 ;;      Totals:         0       0       0       0       0       0       0
 13356 ;;Total ram usage:        0 bytes
 13357 ;; Hardware stack levels used:    1
 13358 ;; Hardware stack levels required when called:    4
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_main
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           	psect	text69
 13367  0031E8                     __ptext69:
 13368                           	opt stack 0
 13369  0031E8                     _ClearTime:
 13370                           	opt stack 26
 13371                           
 13372                           ;tmr0.c: 103: time = 0;
 13373                           
 13374                           ;incstack = 0
 13375  0031E8  0E00               	movlw	0
 13376  0031EA  6E3F               	movwf	_time,c	;volatile
 13377  0031EC  0012               	return		;funcret
 13378  0031EE                     __end_of_ClearTime:
 13379                           	opt stack 0
 13380                           tosu	equ	0xFFF
 13381                           tosh	equ	0xFFE
 13382                           tosl	equ	0xFFD
 13383                           pclath	equ	0xFFA
 13384                           tblptru	equ	0xFF8
 13385                           tblptrh	equ	0xFF7
 13386                           tblptrl	equ	0xFF6
 13387                           tablat	equ	0xFF5
 13388                           prodh	equ	0xFF4
 13389                           prodl	equ	0xFF3
 13390                           intcon	equ	0xFF2
 13391                           intcon2	equ	0xFF1
 13392                           indf0	equ	0xFEF
 13393                           postinc0	equ	0xFEE
 13394                           fsr0h	equ	0xFEA
 13395                           fsr0l	equ	0xFE9
 13396                           wreg	equ	0xFE8
 13397                           indf2	equ	0xFDF
 13398                           postinc2	equ	0xFDE
 13399                           postdec2	equ	0xFDD
 13400                           plusw2	equ	0xFDB
 13401                           fsr2h	equ	0xFDA
 13402                           fsr2l	equ	0xFD9
 13403                           status	equ	0xFD8
 13404                           
 13405 ;; *************** function _INTERRUPT_InterruptManager *****************
 13406 ;; Defined at:
 13407 ;;		line 31 in file "mcc_generated_files/interrupt_manager.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;		None
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;		None               void
 13414 ;; Registers used:
 13415 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13421 ;;      Params:         0       0       0       0       0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0
 13423 ;;      Temps:         14       0       0       0       0       0       0
 13424 ;;      Totals:        14       0       0       0       0       0       0
 13425 ;;Total ram usage:       14 bytes
 13426 ;; Hardware stack levels used:    1
 13427 ;; Hardware stack levels required when called:    3
 13428 ;; This function calls:
 13429 ;;		_ADC_ISR
 13430 ;;		_EUSART1_Receive_ISR
 13431 ;;		_EUSART1_Transmit_ISR
 13432 ;;		_I2C1_BusCollisionISR
 13433 ;;		_I2C1_ISR
 13434 ;;		_TMR0_ISR
 13435 ;;		_TMR2_ISR
 13436 ;; This function is called by:
 13437 ;;		Interrupt level 2
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441                           	psect	intcode
 13442  000008                     __pintcode:
 13443                           	opt stack 0
 13444  000008                     _INTERRUPT_InterruptManager:
 13445                           	opt stack 21
 13446                           
 13447                           ;incstack = 0
 13448  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13449  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 13450  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13451  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13452  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13453  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13454  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13455  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13456  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13457  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13458  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13459  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 13460  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 13461  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 13462  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 13463                           
 13464                           ;interrupt_manager.c: 34: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 13465  000042  BA9D               	btfsc	3997,5,c	;volatile
 13466  000044  AA9E               	btfss	3998,5,c	;volatile
 13467  000046  D003               	goto	i2l277
 13468                           
 13469                           ;interrupt_manager.c: 35: {
 13470                           ;interrupt_manager.c: 36: EUSART1_Receive_ISR();
 13471  000048  EC67  F018         	call	_EUSART1_Receive_ISR	;wreg free
 13472                           
 13473                           ;interrupt_manager.c: 37: }
 13474  00004C  D023               	goto	i2l291
 13475  00004E                     i2l277:
 13476                           
 13477                           ;interrupt_manager.c: 38: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13478  00004E  B89D               	btfsc	3997,4,c	;volatile
 13479  000050  A89E               	btfss	3998,4,c	;volatile
 13480  000052  D003               	goto	i2l279
 13481                           
 13482                           ;interrupt_manager.c: 39: {
 13483                           ;interrupt_manager.c: 40: EUSART1_Transmit_ISR();
 13484  000054  EC66  F017         	call	_EUSART1_Transmit_ISR	;wreg free
 13485                           
 13486                           ;interrupt_manager.c: 41: }
 13487  000058  D01D               	goto	i2l291
 13488  00005A                     i2l279:
 13489                           
 13490                           ;interrupt_manager.c: 42: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 13491  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 13492  00005C  A4F2               	btfss	intcon,2,c	;volatile
 13493  00005E  D003               	goto	i2l281
 13494                           
 13495                           ;interrupt_manager.c: 43: {
 13496                           ;interrupt_manager.c: 44: TMR0_ISR();
 13497  000060  EC30  F017         	call	_TMR0_ISR	;wreg free
 13498                           
 13499                           ;interrupt_manager.c: 45: }
 13500  000064  D017               	goto	i2l291
 13501  000066                     i2l281:
 13502                           
 13503                           ;interrupt_manager.c: 46: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 13504  000066  B29D               	btfsc	3997,1,c	;volatile
 13505  000068  A29E               	btfss	3998,1,c	;volatile
 13506  00006A  D003               	goto	i2l283
 13507                           
 13508                           ;interrupt_manager.c: 47: {
 13509                           ;interrupt_manager.c: 48: TMR2_ISR();
 13510  00006C  ECF0  F018         	call	_TMR2_ISR	;wreg free
 13511                           
 13512                           ;interrupt_manager.c: 49: }
 13513  000070  D011               	goto	i2l291
 13514  000072                     i2l283:
 13515                           
 13516                           ;interrupt_manager.c: 50: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 13517  000072  BC9D               	btfsc	3997,6,c	;volatile
 13518  000074  AC9E               	btfss	3998,6,c	;volatile
 13519  000076  D003               	goto	i2l285
 13520                           
 13521                           ;interrupt_manager.c: 51: {
 13522                           ;interrupt_manager.c: 52: ADC_ISR();
 13523  000078  ECFB  F018         	call	_ADC_ISR	;wreg free
 13524                           
 13525                           ;interrupt_manager.c: 53: }
 13526  00007C  D00B               	goto	i2l291
 13527  00007E                     i2l285:
 13528                           
 13529                           ;interrupt_manager.c: 54: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 13530  00007E  B69D               	btfsc	3997,3,c	;volatile
 13531  000080  A69E               	btfss	3998,3,c	;volatile
 13532  000082  D003               	goto	i2l287
 13533                           
 13534                           ;interrupt_manager.c: 55: {
 13535                           ;interrupt_manager.c: 56: I2C1_ISR();
 13536  000084  ECC7  F005         	call	_I2C1_ISR	;wreg free
 13537                           
 13538                           ;interrupt_manager.c: 57: }
 13539  000088  D005               	goto	i2l291
 13540  00008A                     i2l287:
 13541                           
 13542                           ;interrupt_manager.c: 58: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 13543  00008A  B6A0               	btfsc	4000,3,c	;volatile
 13544  00008C  A6A1               	btfss	4001,3,c	;volatile
 13545  00008E  D002               	goto	i2l291
 13546                           
 13547                           ;interrupt_manager.c: 59: {
 13548                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
 13549  000090  ECFE  F018         	call	_I2C1_BusCollisionISR	;wreg free
 13550  000094                     i2l291:
 13551  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 13552  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 13553  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 13554  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 13555  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 13556  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 13557  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 13558  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 13559  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 13560  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 13561  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 13562  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 13563  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13564  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13565  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13566  0000CE  0011               	retfie		f
 13567  0000D0                     __end_of_INTERRUPT_InterruptManager:
 13568                           	opt stack 0
 13569                           tosu	equ	0xFFF
 13570                           tosh	equ	0xFFE
 13571                           tosl	equ	0xFFD
 13572                           pclatu	equ	0xFFB
 13573                           pclath	equ	0xFFA
 13574                           tblptru	equ	0xFF8
 13575                           tblptrh	equ	0xFF7
 13576                           tblptrl	equ	0xFF6
 13577                           tablat	equ	0xFF5
 13578                           prodh	equ	0xFF4
 13579                           prodl	equ	0xFF3
 13580                           intcon	equ	0xFF2
 13581                           intcon2	equ	0xFF1
 13582                           indf0	equ	0xFEF
 13583                           postinc0	equ	0xFEE
 13584                           fsr0h	equ	0xFEA
 13585                           fsr0l	equ	0xFE9
 13586                           wreg	equ	0xFE8
 13587                           fsr1h	equ	0xFE2
 13588                           fsr1l	equ	0xFE1
 13589                           indf2	equ	0xFDF
 13590                           postinc2	equ	0xFDE
 13591                           postdec2	equ	0xFDD
 13592                           plusw2	equ	0xFDB
 13593                           fsr2h	equ	0xFDA
 13594                           fsr2l	equ	0xFD9
 13595                           status	equ	0xFD8
 13596                           
 13597 ;; *************** function _TMR2_ISR *****************
 13598 ;; Defined at:
 13599 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 13600 ;; Parameters:    Size  Location     Type
 13601 ;;		None
 13602 ;; Auto vars:     Size  Location     Type
 13603 ;;		None
 13604 ;; Return value:  Size  Location     Type
 13605 ;;		None               void
 13606 ;; Registers used:
 13607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13608 ;; Tracked objects:
 13609 ;;		On entry : 0/0
 13610 ;;		On exit  : 0/0
 13611 ;;		Unchanged: 0/0
 13612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13613 ;;      Params:         0       0       0       0       0       0       0
 13614 ;;      Locals:         0       0       0       0       0       0       0
 13615 ;;      Temps:          0       0       0       0       0       0       0
 13616 ;;      Totals:         0       0       0       0       0       0       0
 13617 ;;Total ram usage:        0 bytes
 13618 ;; Hardware stack levels used:    1
 13619 ;; Hardware stack levels required when called:    2
 13620 ;; This function calls:
 13621 ;;		_TMR2_CallBack
 13622 ;; This function is called by:
 13623 ;;		_INTERRUPT_InterruptManager
 13624 ;; This function uses a non-reentrant model
 13625 ;;
 13626                           
 13627                           	psect	text71
 13628  0031E0                     __ptext71:
 13629                           	opt stack 0
 13630  0031E0                     _TMR2_ISR:
 13631                           	opt stack 21
 13632                           
 13633                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 13634                           
 13635                           ;incstack = 0
 13636  0031E0  929E               	bcf	3998,1,c	;volatile
 13637                           
 13638                           ;tmr2.c: 128: TMR2_CallBack();
 13639  0031E2  EC8C  F008         	call	_TMR2_CallBack	;wreg free
 13640  0031E6  0012               	return		;funcret
 13641  0031E8                     __end_of_TMR2_ISR:
 13642                           	opt stack 0
 13643                           tosu	equ	0xFFF
 13644                           tosh	equ	0xFFE
 13645                           tosl	equ	0xFFD
 13646                           pclatu	equ	0xFFB
 13647                           pclath	equ	0xFFA
 13648                           tblptru	equ	0xFF8
 13649                           tblptrh	equ	0xFF7
 13650                           tblptrl	equ	0xFF6
 13651                           tablat	equ	0xFF5
 13652                           prodh	equ	0xFF4
 13653                           prodl	equ	0xFF3
 13654                           intcon	equ	0xFF2
 13655                           intcon2	equ	0xFF1
 13656                           indf0	equ	0xFEF
 13657                           postinc0	equ	0xFEE
 13658                           fsr0h	equ	0xFEA
 13659                           fsr0l	equ	0xFE9
 13660                           wreg	equ	0xFE8
 13661                           fsr1h	equ	0xFE2
 13662                           fsr1l	equ	0xFE1
 13663                           indf2	equ	0xFDF
 13664                           postinc2	equ	0xFDE
 13665                           postdec2	equ	0xFDD
 13666                           plusw2	equ	0xFDB
 13667                           fsr2h	equ	0xFDA
 13668                           fsr2l	equ	0xFD9
 13669                           status	equ	0xFD8
 13670                           
 13671 ;; *************** function _TMR2_CallBack *****************
 13672 ;; Defined at:
 13673 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;		None
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;  i               2    2[COMRAM] int 
 13678 ;; Return value:  Size  Location     Type
 13679 ;;		None               void
 13680 ;; Registers used:
 13681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13687 ;;      Params:         0       0       0       0       0       0       0
 13688 ;;      Locals:         2       0       0       0       0       0       0
 13689 ;;      Temps:          2       0       0       0       0       0       0
 13690 ;;      Totals:         4       0       0       0       0       0       0
 13691 ;;Total ram usage:        4 bytes
 13692 ;; Hardware stack levels used:    1
 13693 ;; Hardware stack levels required when called:    1
 13694 ;; This function calls:
 13695 ;;		Absolute function
 13696 ;;		_TMR2_DefaultInterruptHandler
 13697 ;; This function is called by:
 13698 ;;		_TMR2_ISR
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           	psect	text72
 13703  001118                     __ptext72:
 13704                           	opt stack 0
 13705  001118                     _TMR2_CallBack:
 13706                           	opt stack 21
 13707                           
 13708                           ;tmr2.c: 133: int i = 0;
 13709                           
 13710                           ;incstack = 0
 13711  001118  0E00               	movlw	0
 13712  00111A  6E04               	movwf	TMR2_CallBack@i+1,c
 13713  00111C  0E00               	movlw	0
 13714  00111E  6E03               	movwf	TMR2_CallBack@i,c
 13715                           
 13716                           ;tmr2.c: 134: while (i <= 5) {
 13717  001120  D0C3               	goto	i2l456
 13718  001122                     i2l4750:
 13719                           
 13720                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 13721  001122  90D8               	bcf	status,0,c
 13722  001124  3403               	rlcf	TMR2_CallBack@i,w,c
 13723  001126  6ED9               	movwf	fsr2l,c
 13724  001128  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13725  00112A  6EDA               	movwf	fsr2h,c
 13726  00112C  0E98               	movlw	low _LEDNUM_ENAB
 13727  00112E  26D9               	addwf	fsr2l,f,c
 13728  001130  0E00               	movlw	high _LEDNUM_ENAB
 13729  001132  22DA               	addwfc	fsr2h,f,c
 13730  001134  04DE               	decf	postinc2,w,c
 13731  001136  10DE               	iorwf	postinc2,w,c
 13732  001138  B4D8               	btfsc	status,2,c
 13733  00113A  D098               	goto	i2l4768
 13734  00113C  D0AF               	goto	i2l4770
 13735  00113E                     i2l463:
 13736  00113E  B28B               	btfsc	3979,1,c	;volatile
 13737  001140  D002               	goto	i2u404_40
 13738  001142  828B               	bsf	3979,1,c	;volatile
 13739  001144  D03B               	goto	i2l4758
 13740  001146                     i2u404_40:
 13741  001146  928B               	bcf	3979,1,c	;volatile
 13742                           
 13743                           ;tmr2.c: 142: break;
 13744  001148  D039               	goto	i2l4758
 13745  00114A                     i2l467:
 13746  00114A  BC89               	btfsc	3977,6,c	;volatile
 13747  00114C  D002               	goto	i2u406_40
 13748  00114E  8C89               	bsf	3977,6,c	;volatile
 13749  001150  D035               	goto	i2l4758
 13750  001152                     i2u406_40:
 13751  001152  9C89               	bcf	3977,6,c	;volatile
 13752                           
 13753                           ;tmr2.c: 145: break;
 13754  001154  D033               	goto	i2l4758
 13755  001156                     i2l470:
 13756  001156  BE89               	btfsc	3977,7,c	;volatile
 13757  001158  D002               	goto	i2u408_40
 13758  00115A  8E89               	bsf	3977,7,c	;volatile
 13759  00115C  D02F               	goto	i2l4758
 13760  00115E                     i2u408_40:
 13761  00115E  9E89               	bcf	3977,7,c	;volatile
 13762                           
 13763                           ;tmr2.c: 148: break;
 13764  001160  D02D               	goto	i2l4758
 13765  001162                     i2l473:
 13766  001162  B48D               	btfsc	3981,2,c	;volatile
 13767  001164  D002               	goto	i2u410_40
 13768  001166  848D               	bsf	3981,2,c	;volatile
 13769  001168  D029               	goto	i2l4758
 13770  00116A                     i2u410_40:
 13771  00116A  948D               	bcf	3981,2,c	;volatile
 13772                           
 13773                           ;tmr2.c: 151: break;
 13774  00116C  D027               	goto	i2l4758
 13775  00116E                     i2l476:
 13776  00116E  B28D               	btfsc	3981,1,c	;volatile
 13777  001170  D002               	goto	i2u412_40
 13778  001172  828D               	bsf	3981,1,c	;volatile
 13779  001174  D023               	goto	i2l4758
 13780  001176                     i2u412_40:
 13781  001176  928D               	bcf	3981,1,c	;volatile
 13782                           
 13783                           ;tmr2.c: 154: break;
 13784  001178  D021               	goto	i2l4758
 13785  00117A                     i2l479:
 13786  00117A  B08D               	btfsc	3981,0,c	;volatile
 13787  00117C  D002               	goto	i2u414_40
 13788  00117E  808D               	bsf	3981,0,c	;volatile
 13789  001180  D01D               	goto	i2l4758
 13790  001182                     i2u414_40:
 13791  001182  908D               	bcf	3981,0,c	;volatile
 13792                           
 13793                           ;tmr2.c: 158: }
 13794                           
 13795                           ;tmr2.c: 157: break;
 13796  001184  D01B               	goto	i2l4758
 13797  001186                     i2l4756:
 13798  001186  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13799  00118A  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13800                           
 13801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13802                           ; Switch size 1, requested type "space"
 13803                           ; Number of cases is 1, Range of values is 0 to 0
 13804                           ; switch strategies available:
 13805                           ; Name         Instructions Cycles
 13806                           ; simple_byte            4     3 (average)
 13807                           ;	Chosen strategy is simple_byte
 13808  00118E  5002               	movf	??_TMR2_CallBack+1,w,c
 13809  001190  0A00               	xorlw	0	; case 0
 13810  001192  A4D8               	btfss	status,2,c
 13811  001194  D013               	goto	i2l4758
 13812                           
 13813                           ; Switch size 1, requested type "space"
 13814                           ; Number of cases is 6, Range of values is 0 to 5
 13815                           ; switch strategies available:
 13816                           ; Name         Instructions Cycles
 13817                           ; simple_byte           19    10 (average)
 13818                           ;	Chosen strategy is simple_byte
 13819  001196  5001               	movf	??_TMR2_CallBack,w,c
 13820  001198  0A00               	xorlw	0	; case 0
 13821  00119A  B4D8               	btfsc	status,2,c
 13822  00119C  D7D0               	goto	i2l463
 13823  00119E  0A01               	xorlw	1	; case 1
 13824  0011A0  B4D8               	btfsc	status,2,c
 13825  0011A2  D7D3               	goto	i2l467
 13826  0011A4  0A03               	xorlw	3	; case 2
 13827  0011A6  B4D8               	btfsc	status,2,c
 13828  0011A8  D7D6               	goto	i2l470
 13829  0011AA  0A01               	xorlw	1	; case 3
 13830  0011AC  B4D8               	btfsc	status,2,c
 13831  0011AE  D7D9               	goto	i2l473
 13832  0011B0  0A07               	xorlw	7	; case 4
 13833  0011B2  B4D8               	btfsc	status,2,c
 13834  0011B4  D7DC               	goto	i2l476
 13835  0011B6  0A01               	xorlw	1	; case 5
 13836  0011B8  B4D8               	btfsc	status,2,c
 13837  0011BA  D7DF               	goto	i2l479
 13838  0011BC                     i2l4758:
 13839                           
 13840                           ;tmr2.c: 159: LEDState[i] = 1;
 13841  0011BC  90D8               	bcf	status,0,c
 13842  0011BE  3403               	rlcf	TMR2_CallBack@i,w,c
 13843  0011C0  6ED9               	movwf	fsr2l,c
 13844  0011C2  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13845  0011C4  6EDA               	movwf	fsr2h,c
 13846  0011C6  0EA4               	movlw	low _LEDState
 13847  0011C8  26D9               	addwf	fsr2l,f,c
 13848  0011CA  0E00               	movlw	high _LEDState
 13849  0011CC  22DA               	addwfc	fsr2h,f,c
 13850  0011CE  0E01               	movlw	1
 13851  0011D0  D049               	goto	L4
 13852  0011D2                     i2l485:
 13853  0011D2  B28B               	btfsc	3979,1,c	;volatile
 13854  0011D4  D002               	goto	i2u416_40
 13855  0011D6  828B               	bsf	3979,1,c	;volatile
 13856  0011D8  D03B               	goto	i2l4764
 13857  0011DA                     i2u416_40:
 13858  0011DA  928B               	bcf	3979,1,c	;volatile
 13859                           
 13860                           ;tmr2.c: 165: break;
 13861  0011DC  D039               	goto	i2l4764
 13862  0011DE                     i2l489:
 13863  0011DE  BC89               	btfsc	3977,6,c	;volatile
 13864  0011E0  D002               	goto	i2u418_40
 13865  0011E2  8C89               	bsf	3977,6,c	;volatile
 13866  0011E4  D035               	goto	i2l4764
 13867  0011E6                     i2u418_40:
 13868  0011E6  9C89               	bcf	3977,6,c	;volatile
 13869                           
 13870                           ;tmr2.c: 168: break;
 13871  0011E8  D033               	goto	i2l4764
 13872  0011EA                     i2l492:
 13873  0011EA  BE89               	btfsc	3977,7,c	;volatile
 13874  0011EC  D002               	goto	i2u420_40
 13875  0011EE  8E89               	bsf	3977,7,c	;volatile
 13876  0011F0  D02F               	goto	i2l4764
 13877  0011F2                     i2u420_40:
 13878  0011F2  9E89               	bcf	3977,7,c	;volatile
 13879                           
 13880                           ;tmr2.c: 171: break;
 13881  0011F4  D02D               	goto	i2l4764
 13882  0011F6                     i2l495:
 13883  0011F6  B48D               	btfsc	3981,2,c	;volatile
 13884  0011F8  D002               	goto	i2u422_40
 13885  0011FA  848D               	bsf	3981,2,c	;volatile
 13886  0011FC  D029               	goto	i2l4764
 13887  0011FE                     i2u422_40:
 13888  0011FE  948D               	bcf	3981,2,c	;volatile
 13889                           
 13890                           ;tmr2.c: 174: break;
 13891  001200  D027               	goto	i2l4764
 13892  001202                     i2l498:
 13893  001202  B28D               	btfsc	3981,1,c	;volatile
 13894  001204  D002               	goto	i2u424_40
 13895  001206  828D               	bsf	3981,1,c	;volatile
 13896  001208  D023               	goto	i2l4764
 13897  00120A                     i2u424_40:
 13898  00120A  928D               	bcf	3981,1,c	;volatile
 13899                           
 13900                           ;tmr2.c: 177: break;
 13901  00120C  D021               	goto	i2l4764
 13902  00120E                     i2l501:
 13903  00120E  B08D               	btfsc	3981,0,c	;volatile
 13904  001210  D002               	goto	i2u426_40
 13905  001212  808D               	bsf	3981,0,c	;volatile
 13906  001214  D01D               	goto	i2l4764
 13907  001216                     i2u426_40:
 13908  001216  908D               	bcf	3981,0,c	;volatile
 13909                           
 13910                           ;tmr2.c: 181: }
 13911                           
 13912                           ;tmr2.c: 180: break;
 13913  001218  D01B               	goto	i2l4764
 13914  00121A                     i2l4762:
 13915  00121A  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13916  00121E  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13917                           
 13918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13919                           ; Switch size 1, requested type "space"
 13920                           ; Number of cases is 1, Range of values is 0 to 0
 13921                           ; switch strategies available:
 13922                           ; Name         Instructions Cycles
 13923                           ; simple_byte            4     3 (average)
 13924                           ;	Chosen strategy is simple_byte
 13925  001222  5002               	movf	??_TMR2_CallBack+1,w,c
 13926  001224  0A00               	xorlw	0	; case 0
 13927  001226  A4D8               	btfss	status,2,c
 13928  001228  D013               	goto	i2l4764
 13929                           
 13930                           ; Switch size 1, requested type "space"
 13931                           ; Number of cases is 6, Range of values is 0 to 5
 13932                           ; switch strategies available:
 13933                           ; Name         Instructions Cycles
 13934                           ; simple_byte           19    10 (average)
 13935                           ;	Chosen strategy is simple_byte
 13936  00122A  5001               	movf	??_TMR2_CallBack,w,c
 13937  00122C  0A00               	xorlw	0	; case 0
 13938  00122E  B4D8               	btfsc	status,2,c
 13939  001230  D7D0               	goto	i2l485
 13940  001232  0A01               	xorlw	1	; case 1
 13941  001234  B4D8               	btfsc	status,2,c
 13942  001236  D7D3               	goto	i2l489
 13943  001238  0A03               	xorlw	3	; case 2
 13944  00123A  B4D8               	btfsc	status,2,c
 13945  00123C  D7D6               	goto	i2l492
 13946  00123E  0A01               	xorlw	1	; case 3
 13947  001240  B4D8               	btfsc	status,2,c
 13948  001242  D7D9               	goto	i2l495
 13949  001244  0A07               	xorlw	7	; case 4
 13950  001246  B4D8               	btfsc	status,2,c
 13951  001248  D7DC               	goto	i2l498
 13952  00124A  0A01               	xorlw	1	; case 5
 13953  00124C  B4D8               	btfsc	status,2,c
 13954  00124E  D7DF               	goto	i2l501
 13955  001250                     i2l4764:
 13956                           
 13957                           ;tmr2.c: 182: LEDState[i] = 0;
 13958  001250  90D8               	bcf	status,0,c
 13959  001252  3403               	rlcf	TMR2_CallBack@i,w,c
 13960  001254  6ED9               	movwf	fsr2l,c
 13961  001256  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13962  001258  6EDA               	movwf	fsr2h,c
 13963  00125A  0EA4               	movlw	low _LEDState
 13964  00125C  26D9               	addwf	fsr2l,f,c
 13965  00125E  0E00               	movlw	high _LEDState
 13966  001260  22DA               	addwfc	fsr2h,f,c
 13967  001262  0E00               	movlw	0
 13968  001264                     L4:
 13969  001264  6EDE               	movwf	postinc2,c
 13970  001266  0E00               	movlw	0
 13971  001268  6EDD               	movwf	postdec2,c
 13972                           
 13973                           ;tmr2.c: 184: }
 13974                           
 13975                           ;tmr2.c: 183: break;
 13976  00126A  D018               	goto	i2l4770
 13977  00126C                     i2l4768:
 13978  00126C  90D8               	bcf	status,0,c
 13979  00126E  3403               	rlcf	TMR2_CallBack@i,w,c
 13980  001270  6ED9               	movwf	fsr2l,c
 13981  001272  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13982  001274  6EDA               	movwf	fsr2h,c
 13983  001276  0EA4               	movlw	low _LEDState
 13984  001278  26D9               	addwf	fsr2l,f,c
 13985  00127A  0E00               	movlw	high _LEDState
 13986  00127C  22DA               	addwfc	fsr2h,f,c
 13987  00127E  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 13988  001282  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 13989                           
 13990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13991                           ; Switch size 1, requested type "space"
 13992                           ; Number of cases is 1, Range of values is 0 to 0
 13993                           ; switch strategies available:
 13994                           ; Name         Instructions Cycles
 13995                           ; simple_byte            4     3 (average)
 13996                           ;	Chosen strategy is simple_byte
 13997  001286  5002               	movf	??_TMR2_CallBack+1,w,c
 13998  001288  0A00               	xorlw	0	; case 0
 13999  00128A  A4D8               	btfss	status,2,c
 14000  00128C  D007               	goto	i2l4770
 14001                           
 14002                           ; Switch size 1, requested type "space"
 14003                           ; Number of cases is 2, Range of values is 0 to 1
 14004                           ; switch strategies available:
 14005                           ; Name         Instructions Cycles
 14006                           ; simple_byte            7     4 (average)
 14007                           ;	Chosen strategy is simple_byte
 14008  00128E  5001               	movf	??_TMR2_CallBack,w,c
 14009  001290  0A00               	xorlw	0	; case 0
 14010  001292  B4D8               	btfsc	status,2,c
 14011  001294  D778               	goto	i2l4756
 14012  001296  0A01               	xorlw	1	; case 1
 14013  001298  B4D8               	btfsc	status,2,c
 14014  00129A  D7BF               	goto	i2l4762
 14015  00129C                     i2l4770:
 14016                           
 14017                           ;tmr2.c: 185: }
 14018                           ;tmr2.c: 186: i = i + 1;
 14019  00129C  0E01               	movlw	1
 14020  00129E  2403               	addwf	TMR2_CallBack@i,w,c
 14021  0012A0  6E03               	movwf	TMR2_CallBack@i,c
 14022  0012A2  0E00               	movlw	0
 14023  0012A4  2004               	addwfc	TMR2_CallBack@i+1,w,c
 14024  0012A6  6E04               	movwf	TMR2_CallBack@i+1,c
 14025  0012A8                     i2l456:
 14026  0012A8  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 14027  0012AA  D73B               	goto	i2l4750
 14028  0012AC  5004               	movf	TMR2_CallBack@i+1,w,c
 14029  0012AE  E104               	bnz	i2l4772
 14030  0012B0  0E06               	movlw	6
 14031  0012B2  5C03               	subwf	TMR2_CallBack@i,w,c
 14032  0012B4  A0D8               	btfss	status,0,c
 14033  0012B6  D735               	goto	i2l4750
 14034  0012B8                     i2l4772:
 14035                           
 14036                           ;tmr2.c: 187: }
 14037                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 14038  0012B8  0100               	movlb	0	; () banked
 14039  0012BA  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14040  0012BC  0100               	movlb	0	; () banked
 14041  0012BE  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14042  0012C0  B4D8               	btfsc	status,2,c
 14043  0012C2  0012               	return	
 14044                           
 14045                           ; BSR set to: 0
 14046                           ;tmr2.c: 192: {
 14047                           ;tmr2.c: 193: TMR2_InterruptHandler();
 14048  0012C4  D801               	call	i2u430_48
 14049  0012C6  0012               	return	
 14050  0012C8                     i2u430_48:
 14051  0012C8  0005               	push	
 14052  0012CA  0100               	movlb	0	; () banked
 14053  0012CC  6EFA               	movwf	pclath,c
 14054  0012CE  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14055  0012D0  6EFD               	movwf	tosl,c
 14056  0012D2  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14057  0012D4  6EFE               	movwf	tosh,c
 14058  0012D6  50F8               	movf	tblptru,w,c
 14059  0012D8  6EFF               	movwf	tosu,c
 14060  0012DA  50FA               	movf	pclath,w,c
 14061  0012DC  0012               	return		;indir
 14062  0012DE                     __end_of_TMR2_CallBack:
 14063                           	opt stack 0
 14064                           tosu	equ	0xFFF
 14065                           tosh	equ	0xFFE
 14066                           tosl	equ	0xFFD
 14067                           pclatu	equ	0xFFB
 14068                           pclath	equ	0xFFA
 14069                           tblptru	equ	0xFF8
 14070                           tblptrh	equ	0xFF7
 14071                           tblptrl	equ	0xFF6
 14072                           tablat	equ	0xFF5
 14073                           prodh	equ	0xFF4
 14074                           prodl	equ	0xFF3
 14075                           intcon	equ	0xFF2
 14076                           intcon2	equ	0xFF1
 14077                           indf0	equ	0xFEF
 14078                           postinc0	equ	0xFEE
 14079                           fsr0h	equ	0xFEA
 14080                           fsr0l	equ	0xFE9
 14081                           wreg	equ	0xFE8
 14082                           fsr1h	equ	0xFE2
 14083                           fsr1l	equ	0xFE1
 14084                           indf2	equ	0xFDF
 14085                           postinc2	equ	0xFDE
 14086                           postdec2	equ	0xFDD
 14087                           plusw2	equ	0xFDB
 14088                           fsr2h	equ	0xFDA
 14089                           fsr2l	equ	0xFD9
 14090                           status	equ	0xFD8
 14091                           
 14092 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 14093 ;; Defined at:
 14094 ;;		line 295 in file "mcc_generated_files/tmr2.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;		None
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;		None
 14099 ;; Return value:  Size  Location     Type
 14100 ;;		None               void
 14101 ;; Registers used:
 14102 ;;		None
 14103 ;; Tracked objects:
 14104 ;;		On entry : 0/0
 14105 ;;		On exit  : 0/0
 14106 ;;		Unchanged: 0/0
 14107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14108 ;;      Params:         0       0       0       0       0       0       0
 14109 ;;      Locals:         0       0       0       0       0       0       0
 14110 ;;      Temps:          0       0       0       0       0       0       0
 14111 ;;      Totals:         0       0       0       0       0       0       0
 14112 ;;Total ram usage:        0 bytes
 14113 ;; Hardware stack levels used:    1
 14114 ;; This function calls:
 14115 ;;		Nothing
 14116 ;; This function is called by:
 14117 ;;		_TMR2_Initialize
 14118 ;;		_TMR2_CallBack
 14119 ;; This function uses a non-reentrant model
 14120 ;;
 14121                           
 14122                           	psect	text73
 14123  0031FA                     __ptext73:
 14124                           	opt stack 0
 14125  0031FA                     _TMR2_DefaultInterruptHandler:
 14126                           	opt stack 21
 14127                           
 14128                           ;incstack = 0
 14129  0031FA  0012               	return		;funcret
 14130  0031FC                     __end_of_TMR2_DefaultInterruptHandler:
 14131                           	opt stack 0
 14132                           tosu	equ	0xFFF
 14133                           tosh	equ	0xFFE
 14134                           tosl	equ	0xFFD
 14135                           pclatu	equ	0xFFB
 14136                           pclath	equ	0xFFA
 14137                           tblptru	equ	0xFF8
 14138                           tblptrh	equ	0xFF7
 14139                           tblptrl	equ	0xFF6
 14140                           tablat	equ	0xFF5
 14141                           prodh	equ	0xFF4
 14142                           prodl	equ	0xFF3
 14143                           intcon	equ	0xFF2
 14144                           intcon2	equ	0xFF1
 14145                           indf0	equ	0xFEF
 14146                           postinc0	equ	0xFEE
 14147                           fsr0h	equ	0xFEA
 14148                           fsr0l	equ	0xFE9
 14149                           wreg	equ	0xFE8
 14150                           fsr1h	equ	0xFE2
 14151                           fsr1l	equ	0xFE1
 14152                           indf2	equ	0xFDF
 14153                           postinc2	equ	0xFDE
 14154                           postdec2	equ	0xFDD
 14155                           plusw2	equ	0xFDB
 14156                           fsr2h	equ	0xFDA
 14157                           fsr2l	equ	0xFD9
 14158                           status	equ	0xFD8
 14159                           
 14160 ;; *************** function _TMR0_ISR *****************
 14161 ;; Defined at:
 14162 ;;		line 82 in file "mcc_generated_files/tmr0.c"
 14163 ;; Parameters:    Size  Location     Type
 14164 ;;		None
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  x               2    4[COMRAM] int 
 14167 ;; Return value:  Size  Location     Type
 14168 ;;		None               void
 14169 ;; Registers used:
 14170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14171 ;; Tracked objects:
 14172 ;;		On entry : 0/0
 14173 ;;		On exit  : 0/0
 14174 ;;		Unchanged: 0/0
 14175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14176 ;;      Params:         0       0       0       0       0       0       0
 14177 ;;      Locals:         2       0       0       0       0       0       0
 14178 ;;      Temps:          0       0       0       0       0       0       0
 14179 ;;      Totals:         2       0       0       0       0       0       0
 14180 ;;Total ram usage:        2 bytes
 14181 ;; Hardware stack levels used:    1
 14182 ;; Hardware stack levels required when called:    1
 14183 ;; This function calls:
 14184 ;;		_ReadButtonState
 14185 ;; This function is called by:
 14186 ;;		_INTERRUPT_InterruptManager
 14187 ;; This function uses a non-reentrant model
 14188 ;;
 14189                           
 14190                           	psect	text74
 14191  002E60                     __ptext74:
 14192                           	opt stack 0
 14193  002E60                     _TMR0_ISR:
 14194                           	opt stack 22
 14195                           
 14196                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 14197                           
 14198                           ;incstack = 0
 14199  002E60  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 14200  002E62  6ED7               	movwf	4055,c	;volatile
 14201                           
 14202                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 14203  002E64  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 14204                           
 14205                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 14206  002E68  0E00               	movlw	0
 14207  002E6A  6E06               	movwf	TMR0_ISR@x+1,c
 14208  002E6C  0E00               	movlw	0
 14209  002E6E  6E05               	movwf	TMR0_ISR@x,c
 14210  002E70                     i2l5282:
 14211  002E70  BE06               	btfsc	TMR0_ISR@x+1,7,c
 14212  002E72  D006               	goto	i2l5286
 14213  002E74  5006               	movf	TMR0_ISR@x+1,w,c
 14214  002E76  E10D               	bnz	i2l5292
 14215  002E78  0E08               	movlw	8
 14216  002E7A  5C05               	subwf	TMR0_ISR@x,w,c
 14217  002E7C  B0D8               	btfsc	status,0,c
 14218  002E7E  D009               	goto	i2l5292
 14219  002E80                     i2l5286:
 14220                           
 14221                           ;tmr0.c: 89: ReadButtonState(x);
 14222  002E80  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 14223  002E84  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 14224  002E88  EC33  F00D         	call	_ReadButtonState	;wreg free
 14225  002E8C  4A05               	infsnz	TMR0_ISR@x,f,c
 14226  002E8E  2A06               	incf	TMR0_ISR@x+1,f,c
 14227  002E90  D7EF               	goto	i2l5282
 14228  002E92                     i2l5292:
 14229                           
 14230                           ;tmr0.c: 90: }
 14231                           ;tmr0.c: 91: time++;
 14232  002E92  2A3F               	incf	_time,f,c	;volatile
 14233                           
 14234                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
 14235  002E94  94F2               	bcf	intcon,2,c	;volatile
 14236  002E96  0012               	return		;funcret
 14237  002E98                     __end_of_TMR0_ISR:
 14238                           	opt stack 0
 14239                           tosu	equ	0xFFF
 14240                           tosh	equ	0xFFE
 14241                           tosl	equ	0xFFD
 14242                           pclatu	equ	0xFFB
 14243                           pclath	equ	0xFFA
 14244                           tblptru	equ	0xFF8
 14245                           tblptrh	equ	0xFF7
 14246                           tblptrl	equ	0xFF6
 14247                           tablat	equ	0xFF5
 14248                           prodh	equ	0xFF4
 14249                           prodl	equ	0xFF3
 14250                           intcon	equ	0xFF2
 14251                           intcon2	equ	0xFF1
 14252                           indf0	equ	0xFEF
 14253                           postinc0	equ	0xFEE
 14254                           fsr0h	equ	0xFEA
 14255                           fsr0l	equ	0xFE9
 14256                           wreg	equ	0xFE8
 14257                           fsr1h	equ	0xFE2
 14258                           fsr1l	equ	0xFE1
 14259                           indf2	equ	0xFDF
 14260                           postinc2	equ	0xFDE
 14261                           postdec2	equ	0xFDD
 14262                           plusw2	equ	0xFDB
 14263                           fsr2h	equ	0xFDA
 14264                           fsr2l	equ	0xFD9
 14265                           status	equ	0xFD8
 14266                           
 14267 ;; *************** function _ReadButtonState *****************
 14268 ;; Defined at:
 14269 ;;		line 154 in file "IO.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;  btnnum          2    0[COMRAM] int 
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;		None               void
 14276 ;; Registers used:
 14277 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14283 ;;      Params:         2       0       0       0       0       0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0
 14285 ;;      Temps:          2       0       0       0       0       0       0
 14286 ;;      Totals:         4       0       0       0       0       0       0
 14287 ;;Total ram usage:        4 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; This function calls:
 14290 ;;		Nothing
 14291 ;; This function is called by:
 14292 ;;		_TMR0_ISR
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           	psect	text75
 14297  001A66                     __ptext75:
 14298                           	opt stack 0
 14299  001A66                     _ReadButtonState:
 14300                           	opt stack 22
 14301                           
 14302                           ;IO.c: 155: switch (btnnum) {
 14303                           
 14304                           ;incstack = 0
 14305  001A66  D068               	goto	i2l4742
 14306  001A68                     i2l4724:
 14307                           
 14308                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 14309  001A68  0EB0               	movlw	low _butnarray
 14310  001A6A  2401               	addwf	ReadButtonState@btnnum,w,c
 14311  001A6C  6ED9               	movwf	fsr2l,c
 14312  001A6E  0E00               	movlw	high _butnarray
 14313  001A70  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14314  001A72  6EDA               	movwf	fsr2h,c
 14315  001A74  AA83               	btfss	3971,5,c	;volatile
 14316  001A76  D002               	goto	i2u395_40
 14317  001A78  0E01               	movlw	1
 14318  001A7A  D001               	goto	i2u395_46
 14319  001A7C                     i2u395_40:
 14320  001A7C  0E00               	movlw	0
 14321  001A7E                     i2u395_46:
 14322  001A7E  6EDF               	movwf	indf2,c
 14323                           
 14324                           ;IO.c: 158: break;
 14325  001A80  0012               	return	
 14326  001A82                     i2l4726:
 14327                           
 14328                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 14329  001A82  0EB0               	movlw	low _butnarray
 14330  001A84  2401               	addwf	ReadButtonState@btnnum,w,c
 14331  001A86  6ED9               	movwf	fsr2l,c
 14332  001A88  0E00               	movlw	high _butnarray
 14333  001A8A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14334  001A8C  6EDA               	movwf	fsr2h,c
 14335  001A8E  A081               	btfss	3969,0,c	;volatile
 14336  001A90  D002               	goto	i2u396_40
 14337  001A92  0E01               	movlw	1
 14338  001A94  D001               	goto	i2u396_46
 14339  001A96                     i2u396_40:
 14340  001A96  0E00               	movlw	0
 14341  001A98                     i2u396_46:
 14342  001A98  6EDF               	movwf	indf2,c
 14343                           
 14344                           ;IO.c: 161: break;
 14345  001A9A  0012               	return	
 14346  001A9C                     i2l4728:
 14347                           
 14348                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 14349  001A9C  0EB0               	movlw	low _butnarray
 14350  001A9E  2401               	addwf	ReadButtonState@btnnum,w,c
 14351  001AA0  6ED9               	movwf	fsr2l,c
 14352  001AA2  0E00               	movlw	high _butnarray
 14353  001AA4  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14354  001AA6  6EDA               	movwf	fsr2h,c
 14355  001AA8  A281               	btfss	3969,1,c	;volatile
 14356  001AAA  D002               	goto	i2u397_40
 14357  001AAC  0E01               	movlw	1
 14358  001AAE  D001               	goto	i2u397_46
 14359  001AB0                     i2u397_40:
 14360  001AB0  0E00               	movlw	0
 14361  001AB2                     i2u397_46:
 14362  001AB2  6EDF               	movwf	indf2,c
 14363                           
 14364                           ;IO.c: 164: break;
 14365  001AB4  0012               	return	
 14366  001AB6                     i2l4730:
 14367                           
 14368                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 14369  001AB6  0EB0               	movlw	low _butnarray
 14370  001AB8  2401               	addwf	ReadButtonState@btnnum,w,c
 14371  001ABA  6ED9               	movwf	fsr2l,c
 14372  001ABC  0E00               	movlw	high _butnarray
 14373  001ABE  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14374  001AC0  6EDA               	movwf	fsr2h,c
 14375  001AC2  A481               	btfss	3969,2,c	;volatile
 14376  001AC4  D002               	goto	i2u398_40
 14377  001AC6  0E01               	movlw	1
 14378  001AC8  D001               	goto	i2u398_46
 14379  001ACA                     i2u398_40:
 14380  001ACA  0E00               	movlw	0
 14381  001ACC                     i2u398_46:
 14382  001ACC  6EDF               	movwf	indf2,c
 14383                           
 14384                           ;IO.c: 167: break;
 14385  001ACE  0012               	return	
 14386  001AD0                     i2l4732:
 14387                           
 14388                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 14389  001AD0  0EB0               	movlw	low _butnarray
 14390  001AD2  2401               	addwf	ReadButtonState@btnnum,w,c
 14391  001AD4  6ED9               	movwf	fsr2l,c
 14392  001AD6  0E00               	movlw	high _butnarray
 14393  001AD8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14394  001ADA  6EDA               	movwf	fsr2h,c
 14395  001ADC  A881               	btfss	3969,4,c	;volatile
 14396  001ADE  D002               	goto	i2u399_40
 14397  001AE0  0E01               	movlw	1
 14398  001AE2  D001               	goto	i2u399_46
 14399  001AE4                     i2u399_40:
 14400  001AE4  0E00               	movlw	0
 14401  001AE6                     i2u399_46:
 14402  001AE6  6EDF               	movwf	indf2,c
 14403                           
 14404                           ;IO.c: 170: break;
 14405  001AE8  0012               	return	
 14406  001AEA                     i2l4734:
 14407                           
 14408                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 14409  001AEA  0EB0               	movlw	low _butnarray
 14410  001AEC  2401               	addwf	ReadButtonState@btnnum,w,c
 14411  001AEE  6ED9               	movwf	fsr2l,c
 14412  001AF0  0E00               	movlw	high _butnarray
 14413  001AF2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14414  001AF4  6EDA               	movwf	fsr2h,c
 14415  001AF6  A080               	btfss	3968,0,c	;volatile
 14416  001AF8  D002               	goto	i2u400_40
 14417  001AFA  0E01               	movlw	1
 14418  001AFC  D001               	goto	i2u400_46
 14419  001AFE                     i2u400_40:
 14420  001AFE  0E00               	movlw	0
 14421  001B00                     i2u400_46:
 14422  001B00  6EDF               	movwf	indf2,c
 14423                           
 14424                           ;IO.c: 173: break;
 14425  001B02  0012               	return	
 14426  001B04                     i2l4736:
 14427                           
 14428                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 14429  001B04  0EB0               	movlw	low _butnarray
 14430  001B06  2401               	addwf	ReadButtonState@btnnum,w,c
 14431  001B08  6ED9               	movwf	fsr2l,c
 14432  001B0A  0E00               	movlw	high _butnarray
 14433  001B0C  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14434  001B0E  6EDA               	movwf	fsr2h,c
 14435  001B10  A280               	btfss	3968,1,c	;volatile
 14436  001B12  D002               	goto	i2u401_40
 14437  001B14  0E01               	movlw	1
 14438  001B16  D001               	goto	i2u401_46
 14439  001B18                     i2u401_40:
 14440  001B18  0E00               	movlw	0
 14441  001B1A                     i2u401_46:
 14442  001B1A  6EDF               	movwf	indf2,c
 14443                           
 14444                           ;IO.c: 176: break;
 14445  001B1C  0012               	return	
 14446  001B1E                     i2l4738:
 14447                           
 14448                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 14449  001B1E  0EB0               	movlw	low _butnarray
 14450  001B20  2401               	addwf	ReadButtonState@btnnum,w,c
 14451  001B22  6ED9               	movwf	fsr2l,c
 14452  001B24  0E00               	movlw	high _butnarray
 14453  001B26  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14454  001B28  6EDA               	movwf	fsr2h,c
 14455  001B2A  A480               	btfss	3968,2,c	;volatile
 14456  001B2C  D002               	goto	i2u402_40
 14457  001B2E  0E01               	movlw	1
 14458  001B30  D001               	goto	i2u402_46
 14459  001B32                     i2u402_40:
 14460  001B32  0E00               	movlw	0
 14461  001B34                     i2u402_46:
 14462  001B34  6EDF               	movwf	indf2,c
 14463                           
 14464                           ;IO.c: 181: }
 14465                           
 14466                           ;IO.c: 179: break;
 14467  001B36  0012               	return	
 14468  001B38                     i2l4742:
 14469  001B38  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 14470  001B3C  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 14471                           
 14472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14473                           ; Switch size 1, requested type "space"
 14474                           ; Number of cases is 1, Range of values is 0 to 0
 14475                           ; switch strategies available:
 14476                           ; Name         Instructions Cycles
 14477                           ; simple_byte            4     3 (average)
 14478                           ;	Chosen strategy is simple_byte
 14479  001B40  5004               	movf	??_ReadButtonState+1,w,c
 14480  001B42  0A00               	xorlw	0	; case 0
 14481  001B44  A4D8               	btfss	status,2,c
 14482  001B46  0012               	return	
 14483                           
 14484                           ; Switch size 1, requested type "space"
 14485                           ; Number of cases is 8, Range of values is 0 to 7
 14486                           ; switch strategies available:
 14487                           ; Name         Instructions Cycles
 14488                           ; simple_byte           25    13 (average)
 14489                           ;	Chosen strategy is simple_byte
 14490  001B48  5003               	movf	??_ReadButtonState,w,c
 14491  001B4A  0A00               	xorlw	0	; case 0
 14492  001B4C  B4D8               	btfsc	status,2,c
 14493  001B4E  D78C               	goto	i2l4724
 14494  001B50  0A01               	xorlw	1	; case 1
 14495  001B52  B4D8               	btfsc	status,2,c
 14496  001B54  D796               	goto	i2l4726
 14497  001B56  0A03               	xorlw	3	; case 2
 14498  001B58  B4D8               	btfsc	status,2,c
 14499  001B5A  D7A0               	goto	i2l4728
 14500  001B5C  0A01               	xorlw	1	; case 3
 14501  001B5E  B4D8               	btfsc	status,2,c
 14502  001B60  D7AA               	goto	i2l4730
 14503  001B62  0A07               	xorlw	7	; case 4
 14504  001B64  B4D8               	btfsc	status,2,c
 14505  001B66  D7B4               	goto	i2l4732
 14506  001B68  0A01               	xorlw	1	; case 5
 14507  001B6A  B4D8               	btfsc	status,2,c
 14508  001B6C  D7BE               	goto	i2l4734
 14509  001B6E  0A03               	xorlw	3	; case 6
 14510  001B70  B4D8               	btfsc	status,2,c
 14511  001B72  D7C8               	goto	i2l4736
 14512  001B74  0A01               	xorlw	1	; case 7
 14513  001B76  A4D8               	btfss	status,2,c
 14514  001B78  0012               	return	
 14515  001B7A  D7D1               	goto	i2l4738
 14516  001B7C                     __end_of_ReadButtonState:
 14517                           	opt stack 0
 14518                           tosu	equ	0xFFF
 14519                           tosh	equ	0xFFE
 14520                           tosl	equ	0xFFD
 14521                           pclatu	equ	0xFFB
 14522                           pclath	equ	0xFFA
 14523                           tblptru	equ	0xFF8
 14524                           tblptrh	equ	0xFF7
 14525                           tblptrl	equ	0xFF6
 14526                           tablat	equ	0xFF5
 14527                           prodh	equ	0xFF4
 14528                           prodl	equ	0xFF3
 14529                           intcon	equ	0xFF2
 14530                           intcon2	equ	0xFF1
 14531                           indf0	equ	0xFEF
 14532                           postinc0	equ	0xFEE
 14533                           fsr0h	equ	0xFEA
 14534                           fsr0l	equ	0xFE9
 14535                           wreg	equ	0xFE8
 14536                           fsr1h	equ	0xFE2
 14537                           fsr1l	equ	0xFE1
 14538                           indf2	equ	0xFDF
 14539                           postinc2	equ	0xFDE
 14540                           postdec2	equ	0xFDD
 14541                           plusw2	equ	0xFDB
 14542                           fsr2h	equ	0xFDA
 14543                           fsr2l	equ	0xFD9
 14544                           status	equ	0xFD8
 14545                           
 14546 ;; *************** function _I2C1_ISR *****************
 14547 ;; Defined at:
 14548 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;		None
 14551 ;; Auto vars:     Size  Location     Type
 14552 ;;		None
 14553 ;; Return value:  Size  Location     Type
 14554 ;;		None               void
 14555 ;; Registers used:
 14556 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14562 ;;      Params:         0       0       0       0       0       0       0
 14563 ;;      Locals:         0       0       0       0       0       0       0
 14564 ;;      Temps:          2       0       0       0       0       0       0
 14565 ;;      Totals:         2       0       0       0       0       0       0
 14566 ;;Total ram usage:        2 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; Hardware stack levels required when called:    1
 14569 ;; This function calls:
 14570 ;;		_I2C1_FunctionComplete
 14571 ;;		_I2C1_Stop
 14572 ;; This function is called by:
 14573 ;;		_INTERRUPT_InterruptManager
 14574 ;; This function uses a non-reentrant model
 14575 ;;
 14576                           
 14577                           	psect	text76
 14578  000B8E                     __ptext76:
 14579                           	opt stack 0
 14580  000B8E                     _I2C1_ISR:
 14581                           	opt stack 22
 14582                           
 14583                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 14584                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 14585                           ;i2c1.c: 191: static int i2c_bytes_left = 0;
 14586                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 14587                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 14588                           
 14589                           ;incstack = 0
 14590  000B8E  969E               	bcf	3998,3,c	;volatile
 14591                           
 14592                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 14593  000B90  AEC6               	btfss	4038,7,c	;volatile
 14594  000B92  D14A               	goto	i2l6936
 14595                           
 14596                           ;i2c1.c: 199: {
 14597                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 14598  000B94  9EC6               	bcf	4038,7,c	;volatile
 14599                           
 14600                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 14601  000B96  0E00               	movlw	0
 14602  000B98  6E38               	movwf	_i2c1_state,c
 14603                           
 14604                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 14605  000B9A  0100               	movlb	0	; () banked
 14606  000B9C  EE20 F003          	lfsr	2,3
 14607  000BA0  51D5               	movf	_p_i2c1_current& (0+255),w,b
 14608  000BA2  26D9               	addwf	fsr2l,f,c
 14609  000BA4  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14610  000BA6  22DA               	addwfc	fsr2h,f,c
 14611  000BA8  CFDE F004          	movff	postinc2,??_I2C1_ISR
 14612  000BAC  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 14613  000BB0  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 14614  000BB4  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 14615  000BB8  0E01               	movlw	1
 14616  000BBA  6EDF               	movwf	indf2,c
 14617                           
 14618                           ; BSR set to: 0
 14619                           ;i2c1.c: 206: p_i2c1_current = (0);
 14620  000BBC  0E00               	movlw	0
 14621  000BBE  0100               	movlb	0	; () banked
 14622  000BC0  6FD5               	movwf	_p_i2c1_current& (0+255),b
 14623  000BC2  0E00               	movlw	0
 14624  000BC4  0100               	movlb	0	; () banked
 14625  000BC6  6FD6               	movwf	(_p_i2c1_current+1)& (0+255),b
 14626                           
 14627                           ; BSR set to: 0
 14628                           ;i2c1.c: 208: return;
 14629  000BC8  0012               	return	
 14630  000BCA                     i2l60:
 14631                           
 14632                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 14633  000BCA  0100               	movlb	0	; () banked
 14634  000BCC  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 14635  000BCE  0012               	return	
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;i2c1.c: 217: {
 14639                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 14640  000BD0  C0BA  F0D5         	movff	_i2c1_object+2,_p_i2c1_current
 14641  000BD4  C0BB  F0D6         	movff	_i2c1_object+3,_p_i2c1_current+1
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 14645  000BD8  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 14646  000BDC  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 14647  000BE0  50DF               	movf	indf2,w,c
 14648  000BE2  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14649  000BE4  5004               	movf	??_I2C1_ISR,w,c
 14650  000BE6  0100               	movlb	0	; () banked
 14651  000BE8  6FD1               	movwf	_i2c1_trb_count& (0+255),b
 14652  000BEA  6BD2               	clrf	(_i2c1_trb_count+1)& (0+255),b
 14653                           
 14654                           ; BSR set to: 0
 14655                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 14656  000BEC  0100               	movlb	0	; () banked
 14657  000BEE  EE20 F001          	lfsr	2,1
 14658  000BF2  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 14659  000BF4  26D9               	addwf	fsr2l,f,c
 14660  000BF6  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 14661  000BF8  22DA               	addwfc	fsr2h,f,c
 14662  000BFA  CFDE F02D          	movff	postinc2,_p_i2c1_trb_current
 14663  000BFE  CFDD F02E          	movff	postdec2,_p_i2c1_trb_current+1
 14664                           
 14665                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 14666  000C02  0E05               	movlw	5
 14667  000C04  0100               	movlb	0	; () banked
 14668  000C06  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 14669  000C08  0E00               	movlw	0
 14670  000C0A  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 14671                           
 14672                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 14673  000C0C  0EF0               	movlw	low (_i2c1_tr_queue+5)
 14674  000C0E  0100               	movlb	0	; () banked
 14675  000C10  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14676  000C12  E10B               	bnz	i2l6830
 14677  000C14  0E00               	movlw	high (_i2c1_tr_queue+5)
 14678  000C16  0100               	movlb	0	; () banked
 14679  000C18  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14680  000C1A  A4D8               	btfss	status,2,c
 14681  000C1C  D006               	goto	i2l6830
 14682                           
 14683                           ; BSR set to: 0
 14684                           ;i2c1.c: 227: {
 14685                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 14686  000C1E  0EEB               	movlw	low _i2c1_tr_queue
 14687  000C20  0100               	movlb	0	; () banked
 14688  000C22  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 14689  000C24  0E00               	movlw	high _i2c1_tr_queue
 14690  000C26  0100               	movlb	0	; () banked
 14691  000C28  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 14692  000C2A                     i2l6830:
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;i2c1.c: 230: }
 14696                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 14697  000C2A  0100               	movlb	0	; () banked
 14698  000C2C  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 14699                           
 14700                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 14701  000C2E  0100               	movlb	0	; () banked
 14702  000C30  51B8               	movf	_i2c1_object& (0+255),w,b
 14703  000C32  0100               	movlb	0	; () banked
 14704  000C34  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14705  000C36  E108               	bnz	i2l63
 14706  000C38  0100               	movlb	0	; () banked
 14707  000C3A  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 14708  000C3C  0100               	movlb	0	; () banked
 14709  000C3E  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14710  000C40  A4D8               	btfss	status,2,c
 14711  000C42  D002               	goto	i2l63
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;i2c1.c: 238: {
 14715                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 14716  000C44  0100               	movlb	0	; () banked
 14717  000C46  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 14718  000C48                     i2l63:
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;i2c1.c: 241: }
 14722                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 14723  000C48  80C5               	bsf	4037,0,c	;volatile
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 14727  000C4A  0E02               	movlw	2
 14728  000C4C  6E38               	movwf	_i2c1_state,c
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;i2c1.c: 248: }
 14732                           ;i2c1.c: 250: break;
 14733  000C4E  0012               	return	
 14734  000C50                     i2l65:
 14735                           
 14736                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 14737  000C50  82C5               	bsf	4037,1,c	;volatile
 14738                           
 14739                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 14740  000C52  0E02               	movlw	2
 14741  000C54  6E38               	movwf	_i2c1_state,c
 14742                           
 14743                           ;i2c1.c: 262: break;
 14744  000C56  0012               	return	
 14745  000C58                     i2l66:
 14746                           
 14747                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 14748  000C58  ACC5               	btfss	4037,6,c	;volatile
 14749  000C5A  D006               	goto	i2l6842
 14750                           
 14751                           ;i2c1.c: 267: {
 14752                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 14753  000C5C  0100               	movlb	0	; () banked
 14754  000C5E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14758  000C60  0E04               	movlw	4
 14759  000C62  ECB6  F016         	call	_I2C1_Stop
 14760                           
 14761                           ;i2c1.c: 270: }
 14762  000C66  0012               	return	
 14763  000C68                     i2l6842:
 14764                           
 14765                           ;i2c1.c: 271: else
 14766                           ;i2c1.c: 272: {
 14767                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 14768  000C68  90D8               	bcf	status,0,c
 14769  000C6A  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 14770  000C6C  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14771  000C6E  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 14772  000C70  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14773  000C72  5004               	movf	??_I2C1_ISR,w,c
 14774  000C74  6EC9               	movwf	4041,c	;volatile
 14775                           
 14776                           ;i2c1.c: 277: if(i2c_address & 0x01)
 14777  000C76  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14778  000C78  D003               	goto	i2l6848
 14779                           
 14780                           ;i2c1.c: 278: {
 14781                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 14782  000C7A  0E0B               	movlw	11
 14783  000C7C  6E38               	movwf	_i2c1_state,c
 14784                           
 14785                           ;i2c1.c: 282: }
 14786  000C7E  0012               	return	
 14787  000C80                     i2l6848:
 14788                           
 14789                           ;i2c1.c: 283: else
 14790                           ;i2c1.c: 284: {
 14791                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 14792  000C80  0E03               	movlw	3
 14793  000C82  6E38               	movwf	_i2c1_state,c
 14794                           
 14795                           ;i2c1.c: 287: }
 14796                           ;i2c1.c: 288: }
 14797                           ;i2c1.c: 290: break;
 14798  000C84  0012               	return	
 14799  000C86                     i2l71:
 14800                           
 14801                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 14802  000C86  ACC5               	btfss	4037,6,c	;volatile
 14803  000C88  D006               	goto	i2l72
 14804                           
 14805                           ;i2c1.c: 295: {
 14806                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 14807  000C8A  0100               	movlb	0	; () banked
 14808  000C8C  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14809                           
 14810                           ; BSR set to: 0
 14811                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14812  000C8E  0E04               	movlw	4
 14813  000C90  ECB6  F016         	call	_I2C1_Stop
 14814                           
 14815                           ;i2c1.c: 298: }
 14816  000C94  0012               	return	
 14817  000C96                     i2l72:
 14818                           
 14819                           ;i2c1.c: 299: else
 14820                           ;i2c1.c: 300: {
 14821                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 14822  000C96  82C5               	bsf	4037,1,c	;volatile
 14823                           
 14824                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 14825  000C98  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 14826  000C9C  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 14827  000CA0  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 14828  000CA4  6A05               	clrf	??_I2C1_ISR+1,c
 14829  000CA6  0E06               	movlw	6
 14830  000CA8  1604               	andwf	??_I2C1_ISR,f,c
 14831  000CAA  0E00               	movlw	0
 14832  000CAC  1605               	andwf	??_I2C1_ISR+1,f,c
 14833  000CAE  0EF0               	movlw	240
 14834  000CB0  1004               	iorwf	??_I2C1_ISR,w,c
 14835  000CB2  6E40               	movwf	I2C1_ISR@i2c_address,c
 14836  000CB4  5005               	movf	??_I2C1_ISR+1,w,c
 14837  000CB6  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 14838                           
 14839                           ;i2c1.c: 310: i2c_address |= 0x0001;
 14840  000CB8  8040               	bsf	I2C1_ISR@i2c_address,0,c
 14841                           
 14842                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 14843  000CBA  0E01               	movlw	1
 14844  000CBC  6E35               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 14845                           
 14846                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 14847  000CBE  0E02               	movlw	2
 14848  000CC0  6E38               	movwf	_i2c1_state,c
 14849                           
 14850                           ;i2c1.c: 317: }
 14851                           ;i2c1.c: 319: break;
 14852  000CC2  0012               	return	
 14853  000CC4                     i2l6862:
 14854                           
 14855                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 14856  000CC4  0435               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 14857  000CC6  B4D8               	btfsc	status,2,c
 14858  000CC8  D01E               	goto	i2l76
 14859                           
 14860                           ;i2c1.c: 335: {
 14861                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 14862  000CCA  C02D  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 14863  000CCE  C02E  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 14864  000CD2  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 14865  000CD6  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 14866                           
 14867                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 14868  000CDA  EE20 F003          	lfsr	2,3
 14869  000CDE  502D               	movf	_p_i2c1_trb_current,w,c
 14870  000CE0  26D9               	addwf	fsr2l,f,c
 14871  000CE2  502E               	movf	_p_i2c1_trb_current+1,w,c
 14872  000CE4  22DA               	addwfc	fsr2h,f,c
 14873  000CE6  CFDE F0C1          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 14874  000CEA  CFDD F0C2          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 14875                           
 14876                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 14877  000CEE  EE20 F002          	lfsr	2,2
 14878  000CF2  502D               	movf	_p_i2c1_trb_current,w,c
 14879  000CF4  26D9               	addwf	fsr2l,f,c
 14880  000CF6  502E               	movf	_p_i2c1_trb_current+1,w,c
 14881  000CF8  22DA               	addwfc	fsr2h,f,c
 14882  000CFA  50DF               	movf	indf2,w,c
 14883  000CFC  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14884  000CFE  5004               	movf	??_I2C1_ISR,w,c
 14885  000D00  0100               	movlb	0	; () banked
 14886  000D02  6FBF               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 14887  000D04  6BC0               	clrf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),b
 14888  000D06                     i2l76:
 14889                           
 14890                           ;i2c1.c: 362: else
 14891                           ;i2c1.c: 363: {
 14892                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 14893  000D06  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 14894                           
 14895                           ;i2c1.c: 366: if(i2c_address & 0x01)
 14896  000D0A  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14897  000D0C  D003               	goto	i2l6882
 14898                           
 14899                           ;i2c1.c: 367: {
 14900                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 14901  000D0E  0E05               	movlw	5
 14902  000D10  6E38               	movwf	_i2c1_state,c
 14903                           
 14904                           ;i2c1.c: 370: }
 14905  000D12  0012               	return	
 14906  000D14                     i2l6882:
 14907                           
 14908                           ;i2c1.c: 371: else
 14909                           ;i2c1.c: 372: {
 14910                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 14911  000D14  0E03               	movlw	3
 14912  000D16  6E38               	movwf	_i2c1_state,c
 14913                           
 14914                           ;i2c1.c: 375: }
 14915                           ;i2c1.c: 376: }
 14916                           ;i2c1.c: 377: break;
 14917  000D18  0012               	return	
 14918  000D1A                     i2l82:
 14919                           
 14920                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 14921  000D1A  ACC5               	btfss	4037,6,c	;volatile
 14922  000D1C  D007               	goto	i2l6890
 14923                           
 14924                           ;i2c1.c: 383: {
 14925                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 14926  000D1E  0100               	movlb	0	; () banked
 14927  000D20  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 14931  000D22  9CC5               	bcf	4037,6,c	;volatile
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 14935  000D24  0E05               	movlw	5
 14936  000D26  ECB6  F016         	call	_I2C1_Stop
 14937                           
 14938                           ;i2c1.c: 393: }
 14939  000D2A  0012               	return	
 14940  000D2C                     i2l6890:
 14941                           
 14942                           ;i2c1.c: 394: else
 14943                           ;i2c1.c: 395: {
 14944                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 14945  000D2C  0100               	movlb	0	; () banked
 14946  000D2E  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14947  000D30  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14948  000D32  0100               	movlb	0	; () banked
 14949  000D34  51C0               	movf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14950  000D36  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14951  000D38  0E01               	movlw	1
 14952  000D3A  0100               	movlb	0	; () banked
 14953  000D3C  5FBF               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14954  000D3E  0E00               	movlw	0
 14955  000D40  0100               	movlb	0	; () banked
 14956  000D42  5BC0               	subwfb	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14957  000D44  5004               	movf	??_I2C1_ISR,w,c
 14958  000D46  1005               	iorwf	??_I2C1_ISR+1,w,c
 14959  000D48  A4D8               	btfss	status,2,c
 14960  000D4A  D016               	goto	i2l6898
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;i2c1.c: 398: {
 14964                           ;i2c1.c: 402: p_i2c1_trb_current++;
 14965  000D4C  0E05               	movlw	5
 14966  000D4E  262D               	addwf	_p_i2c1_trb_current,f,c
 14967  000D50  0E00               	movlw	0
 14968  000D52  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 14969                           
 14970                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 14971  000D54  0100               	movlb	0	; () banked
 14972  000D56  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 14973  000D58  A0D8               	btfss	status,0,c
 14974  000D5A  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 14975  000D5C  0100               	movlb	0	; () banked
 14976  000D5E  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 14977  000D60  0100               	movlb	0	; () banked
 14978  000D62  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 14979  000D64  A4D8               	btfss	status,2,c
 14980  000D66  D004               	goto	i2l86
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;i2c1.c: 406: {
 14984                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14985  000D68  0E00               	movlw	0
 14986  000D6A  ECB6  F016         	call	_I2C1_Stop
 14987                           
 14988                           ;i2c1.c: 408: }
 14989  000D6E  0012               	return	
 14990  000D70                     i2l86:
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;i2c1.c: 409: else
 14994                           ;i2c1.c: 410: {
 14995                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 14996  000D70  82C5               	bsf	4037,1,c	;volatile
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 15000  000D72  0E02               	movlw	2
 15001  000D74  6E38               	movwf	_i2c1_state,c
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;i2c1.c: 422: }
 15005                           ;i2c1.c: 423: }
 15006  000D76  0012               	return	
 15007  000D78                     i2l6898:
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;i2c1.c: 424: else
 15011                           ;i2c1.c: 425: {
 15012                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 15013  000D78  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 15014  000D7C  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 15015  000D80  6AF8               	clrf	tblptru,c
 15016  000D82  0E05               	movlw	(high __ramtop+-1)
 15017  000D84  64F7               	cpfsgt	tblptrh,c
 15018  000D86  D003               	bra	i2u787_47
 15019  000D88  0008               	tblrd		*
 15020  000D8A  50F5               	movf	tablat,w,c
 15021  000D8C  D005               	bra	i2u787_40
 15022  000D8E                     i2u787_47:
 15023  000D8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 15024  000D92  CFF7 FFEA          	movff	tblptrh,fsr0h
 15025  000D96  50EF               	movf	indf0,w,c
 15026  000D98                     i2u787_40:
 15027  000D98  6EC9               	movwf	4041,c	;volatile
 15028  000D9A  0100               	movlb	0	; () banked
 15029  000D9C  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 15030  000D9E  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;i2c1.c: 428: }
 15034                           ;i2c1.c: 429: }
 15035                           ;i2c1.c: 430: break;
 15036                           
 15037                           ; BSR set to: 0
 15038  000DA0  0012               	return	
 15039  000DA2                     i2l89:
 15040                           
 15041                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 15042  000DA2  ACC5               	btfss	4037,6,c	;volatile
 15043  000DA4  D007               	goto	i2l90
 15044                           
 15045                           ;i2c1.c: 436: {
 15046                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 15047  000DA6  0100               	movlb	0	; () banked
 15048  000DA8  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 15052  000DAA  0E04               	movlw	4
 15053  000DAC  ECB6  F016         	call	_I2C1_Stop
 15054                           
 15055                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 15056  000DB0  9CC5               	bcf	4037,6,c	;volatile
 15057                           
 15058                           ;i2c1.c: 446: }
 15059  000DB2  0012               	return	
 15060  000DB4                     i2l90:
 15061                           
 15062                           ;i2c1.c: 447: else
 15063                           ;i2c1.c: 448: {
 15064                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 15065  000DB4  86C5               	bsf	4037,3,c	;volatile
 15066                           
 15067                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 15068  000DB6  0E08               	movlw	8
 15069  000DB8  6E38               	movwf	_i2c1_state,c
 15070                           
 15071                           ;i2c1.c: 451: }
 15072                           ;i2c1.c: 452: break;
 15073  000DBA  0012               	return	
 15074  000DBC                     i2l6910:
 15075                           
 15076                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 15077  000DBC  0E08               	movlw	8
 15078  000DBE  6E38               	movwf	_i2c1_state,c
 15079                           
 15080                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 15081  000DC0  86C5               	bsf	4037,3,c	;volatile
 15082                           
 15083                           ;i2c1.c: 464: break;
 15084  000DC2  0012               	return	
 15085  000DC4                     i2l6914:
 15086                           
 15087                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 15088  000DC4  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 15089  000DC8  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 15090  000DCC  6AF8               	clrf	tblptru,c
 15091  000DCE  0E05               	movlw	(high __ramtop+-1)
 15092  000DD0  64F7               	cpfsgt	tblptrh,c
 15093  000DD2  D004               	bra	i2u789_47
 15094  000DD4  CFC9 FFF5          	movff	4041,tablat	;volatile
 15095  000DD8  000C               	tblwt		*
 15096  000DDA  D006               	bra	i2u789_40
 15097  000DDC                     i2u789_47:
 15098  000DDC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15099  000DE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15100  000DE4  CFC9 FFEF          	movff	4041,indf0	;volatile
 15101  000DE8                     i2u789_40:
 15102  000DE8  0100               	movlb	0	; () banked
 15103  000DEA  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 15104  000DEC  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;i2c1.c: 472: if(--i2c_bytes_left)
 15108  000DEE  0100               	movlb	0	; () banked
 15109  000DF0  07BF               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 15110  000DF2  A0D8               	btfss	status,0,c
 15111  000DF4  07C0               	decf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 15112  000DF6  0100               	movlb	0	; () banked
 15113  000DF8  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 15114  000DFA  0100               	movlb	0	; () banked
 15115  000DFC  11C0               	iorwf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 15116  000DFE  B4D8               	btfsc	status,2,c
 15117  000E00  D004               	goto	i2l94
 15118                           
 15119                           ; BSR set to: 0
 15120                           ;i2c1.c: 473: {
 15121                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 15122  000E02  9AC5               	bcf	4037,5,c	;volatile
 15123                           
 15124                           ; BSR set to: 0
 15125                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 15126  000E04  0E06               	movlw	6
 15127  000E06  6E38               	movwf	_i2c1_state,c
 15128                           
 15129                           ;i2c1.c: 483: }
 15130  000E08  D003               	goto	i2l6926
 15131  000E0A                     i2l94:
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;i2c1.c: 484: else
 15135                           ;i2c1.c: 485: {
 15136                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 15137  000E0A  8AC5               	bsf	4037,5,c	;volatile
 15138                           
 15139                           ; BSR set to: 0
 15140                           ;i2c1.c: 491: I2C1_FunctionComplete();
 15141  000E0C  ECFF  F017         	call	_I2C1_FunctionComplete	;wreg free
 15142  000E10                     i2l6926:
 15143                           
 15144                           ;i2c1.c: 492: }
 15145                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 15146  000E10  88C5               	bsf	4037,4,c	;volatile
 15147                           
 15148                           ;i2c1.c: 496: break;
 15149  000E12  0012               	return	
 15150  000E14                     i2l6928:
 15151                           
 15152                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 15153                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15154  000E14  0E00               	movlw	0
 15155  000E16  ECB6  F016         	call	_I2C1_Stop
 15156                           
 15157                           ;i2c1.c: 503: break;
 15158  000E1A  0012               	return	
 15159  000E1C                     i2l6930:
 15160                           
 15161                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 15162  000E1C  0100               	movlb	0	; () banked
 15163  000E1E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 15167  000E20  0E06               	movlw	6
 15168  000E22  ECB6  F016         	call	_I2C1_Stop
 15169                           
 15170                           ;i2c1.c: 513: }
 15171                           
 15172                           ;i2c1.c: 511: break;
 15173  000E26  0012               	return	
 15174  000E28                     i2l6936:
 15175  000E28  5038               	movf	_i2c1_state,w,c
 15176                           
 15177                           ; Switch size 1, requested type "space"
 15178                           ; Number of cases is 11, Range of values is 0 to 11
 15179                           ; switch strategies available:
 15180                           ; Name         Instructions Cycles
 15181                           ; simple_byte           34    18 (average)
 15182                           ;	Chosen strategy is simple_byte
 15183  000E2A  0A00               	xorlw	0	; case 0
 15184  000E2C  B4D8               	btfsc	status,2,c
 15185  000E2E  D6CD               	goto	i2l60
 15186  000E30  0A01               	xorlw	1	; case 1
 15187  000E32  B4D8               	btfsc	status,2,c
 15188  000E34  D70D               	goto	i2l65
 15189  000E36  0A03               	xorlw	3	; case 2
 15190  000E38  B4D8               	btfsc	status,2,c
 15191  000E3A  D744               	goto	i2l6862
 15192  000E3C  0A01               	xorlw	1	; case 3
 15193  000E3E  B4D8               	btfsc	status,2,c
 15194  000E40  D76C               	goto	i2l82
 15195  000E42  0A07               	xorlw	7	; case 4
 15196  000E44  B4D8               	btfsc	status,2,c
 15197  000E46  D7E6               	goto	i2l6928
 15198  000E48  0A01               	xorlw	1	; case 5
 15199  000E4A  B4D8               	btfsc	status,2,c
 15200  000E4C  D7AA               	goto	i2l89
 15201  000E4E  0A03               	xorlw	3	; case 6
 15202  000E50  B4D8               	btfsc	status,2,c
 15203  000E52  D7B4               	goto	i2l6910
 15204  000E54  0A01               	xorlw	1	; case 7
 15205  000E56  B4D8               	btfsc	status,2,c
 15206  000E58  D7DD               	goto	i2l6928
 15207  000E5A  0A0F               	xorlw	15	; case 8
 15208  000E5C  B4D8               	btfsc	status,2,c
 15209  000E5E  D7B2               	goto	i2l6914
 15210  000E60  0A02               	xorlw	2	; case 10
 15211  000E62  B4D8               	btfsc	status,2,c
 15212  000E64  D6F9               	goto	i2l66
 15213  000E66  0A01               	xorlw	1	; case 11
 15214  000E68  B4D8               	btfsc	status,2,c
 15215  000E6A  D70D               	goto	i2l71
 15216  000E6C  D7D7               	goto	i2l6930
 15217  000E6E                     __end_of_I2C1_ISR:
 15218                           	opt stack 0
 15219                           tosu	equ	0xFFF
 15220                           tosh	equ	0xFFE
 15221                           tosl	equ	0xFFD
 15222                           pclatu	equ	0xFFB
 15223                           pclath	equ	0xFFA
 15224                           tblptru	equ	0xFF8
 15225                           tblptrh	equ	0xFF7
 15226                           tblptrl	equ	0xFF6
 15227                           tablat	equ	0xFF5
 15228                           prodh	equ	0xFF4
 15229                           prodl	equ	0xFF3
 15230                           intcon	equ	0xFF2
 15231                           intcon2	equ	0xFF1
 15232                           indf0	equ	0xFEF
 15233                           postinc0	equ	0xFEE
 15234                           fsr0h	equ	0xFEA
 15235                           fsr0l	equ	0xFE9
 15236                           wreg	equ	0xFE8
 15237                           fsr1h	equ	0xFE2
 15238                           fsr1l	equ	0xFE1
 15239                           indf2	equ	0xFDF
 15240                           postinc2	equ	0xFDE
 15241                           postdec2	equ	0xFDD
 15242                           plusw2	equ	0xFDB
 15243                           fsr2h	equ	0xFDA
 15244                           fsr2l	equ	0xFD9
 15245                           status	equ	0xFD8
 15246                           
 15247 ;; *************** function _I2C1_Stop *****************
 15248 ;; Defined at:
 15249 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 15250 ;; Parameters:    Size  Location     Type
 15251 ;;  completion_c    1    wreg     enum E8795
 15252 ;; Auto vars:     Size  Location     Type
 15253 ;;  completion_c    1    2[COMRAM] enum E8795
 15254 ;; Return value:  Size  Location     Type
 15255 ;;		None               void
 15256 ;; Registers used:
 15257 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15258 ;; Tracked objects:
 15259 ;;		On entry : 0/0
 15260 ;;		On exit  : 0/0
 15261 ;;		Unchanged: 0/0
 15262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15263 ;;      Params:         0       0       0       0       0       0       0
 15264 ;;      Locals:         1       0       0       0       0       0       0
 15265 ;;      Temps:          2       0       0       0       0       0       0
 15266 ;;      Totals:         3       0       0       0       0       0       0
 15267 ;;Total ram usage:        3 bytes
 15268 ;; Hardware stack levels used:    1
 15269 ;; This function calls:
 15270 ;;		Nothing
 15271 ;; This function is called by:
 15272 ;;		_I2C1_ISR
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276                           	psect	text77
 15277  002D6C                     __ptext77:
 15278                           	opt stack 0
 15279  002D6C                     _I2C1_Stop:
 15280                           	opt stack 22
 15281                           
 15282                           ;incstack = 0
 15283                           ;I2C1_Stop@completion_code stored from wreg
 15284  002D6C  6E03               	movwf	I2C1_Stop@completion_code,c
 15285                           
 15286                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 15287  002D6E  84C5               	bsf	4037,2,c	;volatile
 15288                           
 15289                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 15290  002D70  0100               	movlb	0	; () banked
 15291  002D72  EE20 F003          	lfsr	2,3
 15292  002D76  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15293  002D78  26D9               	addwf	fsr2l,f,c
 15294  002D7A  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15295  002D7C  22DA               	addwfc	fsr2h,f,c
 15296  002D7E  50DE               	movf	postinc2,w,c
 15297  002D80  10DE               	iorwf	postinc2,w,c
 15298  002D82  B4D8               	btfsc	status,2,c
 15299  002D84  D011               	goto	i2l6464
 15300                           
 15301                           ; BSR set to: 0
 15302                           ;i2c1.c: 541: {
 15303                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 15304  002D86  0100               	movlb	0	; () banked
 15305  002D88  EE20 F003          	lfsr	2,3
 15306  002D8C  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15307  002D8E  26D9               	addwf	fsr2l,f,c
 15308  002D90  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15309  002D92  22DA               	addwfc	fsr2h,f,c
 15310  002D94  CFDE F001          	movff	postinc2,??_I2C1_Stop
 15311  002D98  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 15312  002D9C  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 15313  002DA0  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 15314  002DA4  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 15315  002DA8                     i2l6464:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;i2c1.c: 544: }
 15319                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 15320  002DA8  0E00               	movlw	0
 15321  002DAA  6E38               	movwf	_i2c1_state,c
 15322                           
 15323                           ; BSR set to: 0
 15324  002DAC  0012               	return		;funcret
 15325  002DAE                     __end_of_I2C1_Stop:
 15326                           	opt stack 0
 15327                           tosu	equ	0xFFF
 15328                           tosh	equ	0xFFE
 15329                           tosl	equ	0xFFD
 15330                           pclatu	equ	0xFFB
 15331                           pclath	equ	0xFFA
 15332                           tblptru	equ	0xFF8
 15333                           tblptrh	equ	0xFF7
 15334                           tblptrl	equ	0xFF6
 15335                           tablat	equ	0xFF5
 15336                           prodh	equ	0xFF4
 15337                           prodl	equ	0xFF3
 15338                           intcon	equ	0xFF2
 15339                           intcon2	equ	0xFF1
 15340                           indf0	equ	0xFEF
 15341                           postinc0	equ	0xFEE
 15342                           fsr0h	equ	0xFEA
 15343                           fsr0l	equ	0xFE9
 15344                           wreg	equ	0xFE8
 15345                           fsr1h	equ	0xFE2
 15346                           fsr1l	equ	0xFE1
 15347                           indf2	equ	0xFDF
 15348                           postinc2	equ	0xFDE
 15349                           postdec2	equ	0xFDD
 15350                           plusw2	equ	0xFDB
 15351                           fsr2h	equ	0xFDA
 15352                           fsr2l	equ	0xFD9
 15353                           status	equ	0xFD8
 15354                           
 15355 ;; *************** function _I2C1_FunctionComplete *****************
 15356 ;; Defined at:
 15357 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 15358 ;; Parameters:    Size  Location     Type
 15359 ;;		None
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;		None
 15362 ;; Return value:  Size  Location     Type
 15363 ;;		None               void
 15364 ;; Registers used:
 15365 ;;		wreg, status,2, status,0
 15366 ;; Tracked objects:
 15367 ;;		On entry : 0/0
 15368 ;;		On exit  : 0/0
 15369 ;;		Unchanged: 0/0
 15370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15371 ;;      Params:         0       0       0       0       0       0       0
 15372 ;;      Locals:         0       0       0       0       0       0       0
 15373 ;;      Temps:          0       0       0       0       0       0       0
 15374 ;;      Totals:         0       0       0       0       0       0       0
 15375 ;;Total ram usage:        0 bytes
 15376 ;; Hardware stack levels used:    1
 15377 ;; This function calls:
 15378 ;;		Nothing
 15379 ;; This function is called by:
 15380 ;;		_I2C1_ISR
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           	psect	text78
 15385  002FFE                     __ptext78:
 15386                           	opt stack 0
 15387  002FFE                     _I2C1_FunctionComplete:
 15388                           	opt stack 22
 15389                           
 15390                           ;i2c1.c: 520: p_i2c1_trb_current++;
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;incstack = 0
 15394  002FFE  0E05               	movlw	5
 15395  003000  262D               	addwf	_p_i2c1_trb_current,f,c
 15396  003002  0E00               	movlw	0
 15397  003004  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 15398                           
 15399                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 15400  003006  0100               	movlb	0	; () banked
 15401  003008  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 15402  00300A  A0D8               	btfss	status,0,c
 15403  00300C  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 15404  00300E  0100               	movlb	0	; () banked
 15405  003010  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 15406  003012  0100               	movlb	0	; () banked
 15407  003014  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 15408  003016  A4D8               	btfss	status,2,c
 15409  003018  D003               	goto	i2l6470
 15410                           
 15411                           ; BSR set to: 0
 15412                           ;i2c1.c: 524: {
 15413                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 15414  00301A  0E04               	movlw	4
 15415  00301C  6E38               	movwf	_i2c1_state,c
 15416                           
 15417                           ;i2c1.c: 526: }
 15418  00301E  0012               	return	
 15419  003020                     i2l6470:
 15420                           
 15421                           ; BSR set to: 0
 15422                           ;i2c1.c: 527: else
 15423                           ;i2c1.c: 528: {
 15424                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 15425  003020  0E01               	movlw	1
 15426  003022  6E38               	movwf	_i2c1_state,c
 15427  003024  0012               	return	
 15428  003026                     __end_of_I2C1_FunctionComplete:
 15429                           	opt stack 0
 15430                           tosu	equ	0xFFF
 15431                           tosh	equ	0xFFE
 15432                           tosl	equ	0xFFD
 15433                           pclatu	equ	0xFFB
 15434                           pclath	equ	0xFFA
 15435                           tblptru	equ	0xFF8
 15436                           tblptrh	equ	0xFF7
 15437                           tblptrl	equ	0xFF6
 15438                           tablat	equ	0xFF5
 15439                           prodh	equ	0xFF4
 15440                           prodl	equ	0xFF3
 15441                           intcon	equ	0xFF2
 15442                           intcon2	equ	0xFF1
 15443                           indf0	equ	0xFEF
 15444                           postinc0	equ	0xFEE
 15445                           fsr0h	equ	0xFEA
 15446                           fsr0l	equ	0xFE9
 15447                           wreg	equ	0xFE8
 15448                           fsr1h	equ	0xFE2
 15449                           fsr1l	equ	0xFE1
 15450                           indf2	equ	0xFDF
 15451                           postinc2	equ	0xFDE
 15452                           postdec2	equ	0xFDD
 15453                           plusw2	equ	0xFDB
 15454                           fsr2h	equ	0xFDA
 15455                           fsr2l	equ	0xFD9
 15456                           status	equ	0xFD8
 15457                           
 15458 ;; *************** function _I2C1_BusCollisionISR *****************
 15459 ;; Defined at:
 15460 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 15461 ;; Parameters:    Size  Location     Type
 15462 ;;		None
 15463 ;; Auto vars:     Size  Location     Type
 15464 ;;		None
 15465 ;; Return value:  Size  Location     Type
 15466 ;;		None               void
 15467 ;; Registers used:
 15468 ;;		None
 15469 ;; Tracked objects:
 15470 ;;		On entry : 0/0
 15471 ;;		On exit  : 0/0
 15472 ;;		Unchanged: 0/0
 15473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15474 ;;      Params:         0       0       0       0       0       0       0
 15475 ;;      Locals:         0       0       0       0       0       0       0
 15476 ;;      Temps:          0       0       0       0       0       0       0
 15477 ;;      Totals:         0       0       0       0       0       0       0
 15478 ;;Total ram usage:        0 bytes
 15479 ;; Hardware stack levels used:    1
 15480 ;; This function calls:
 15481 ;;		Nothing
 15482 ;; This function is called by:
 15483 ;;		_INTERRUPT_InterruptManager
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           	psect	text79
 15488  0031FC                     __ptext79:
 15489                           	opt stack 0
 15490  0031FC                     _I2C1_BusCollisionISR:
 15491                           	opt stack 23
 15492                           
 15493                           ; BSR set to: 0
 15494                           ;incstack = 0
 15495  0031FC  0012               	return		;funcret
 15496  0031FE                     __end_of_I2C1_BusCollisionISR:
 15497                           	opt stack 0
 15498                           tosu	equ	0xFFF
 15499                           tosh	equ	0xFFE
 15500                           tosl	equ	0xFFD
 15501                           pclatu	equ	0xFFB
 15502                           pclath	equ	0xFFA
 15503                           tblptru	equ	0xFF8
 15504                           tblptrh	equ	0xFF7
 15505                           tblptrl	equ	0xFF6
 15506                           tablat	equ	0xFF5
 15507                           prodh	equ	0xFF4
 15508                           prodl	equ	0xFF3
 15509                           intcon	equ	0xFF2
 15510                           intcon2	equ	0xFF1
 15511                           indf0	equ	0xFEF
 15512                           postinc0	equ	0xFEE
 15513                           fsr0h	equ	0xFEA
 15514                           fsr0l	equ	0xFE9
 15515                           wreg	equ	0xFE8
 15516                           fsr1h	equ	0xFE2
 15517                           fsr1l	equ	0xFE1
 15518                           indf2	equ	0xFDF
 15519                           postinc2	equ	0xFDE
 15520                           postdec2	equ	0xFDD
 15521                           plusw2	equ	0xFDB
 15522                           fsr2h	equ	0xFDA
 15523                           fsr2l	equ	0xFD9
 15524                           status	equ	0xFD8
 15525                           
 15526 ;; *************** function _EUSART1_Transmit_ISR *****************
 15527 ;; Defined at:
 15528 ;;		line 150 in file "UART.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;		None
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;		None
 15533 ;; Return value:  Size  Location     Type
 15534 ;;		None               void
 15535 ;; Registers used:
 15536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15542 ;;      Params:         0       0       0       0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0
 15545 ;;      Totals:         0       0       0       0       0       0       0
 15546 ;;Total ram usage:        0 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:    2
 15549 ;; This function calls:
 15550 ;;		i2_UART_buff_get
 15551 ;;		i2_UART_buff_size
 15552 ;; This function is called by:
 15553 ;;		_INTERRUPT_InterruptManager
 15554 ;; This function uses a non-reentrant model
 15555 ;;
 15556                           
 15557                           	psect	text80
 15558  002ECC                     __ptext80:
 15559                           	opt stack 0
 15560  002ECC                     _EUSART1_Transmit_ISR:
 15561                           	opt stack 21
 15562                           
 15563                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 15564                           
 15565                           ;incstack = 0
 15566  002ECC  0E00               	movlw	low _output_buffer
 15567  002ECE  6E01               	movwf	i2UART_buff_size@_this,c
 15568  002ED0  0E05               	movlw	high _output_buffer
 15569  002ED2  6E02               	movwf	i2UART_buff_size@_this+1,c
 15570  002ED4  ECA6  F018         	call	i2_UART_buff_size	;wreg free
 15571  002ED8  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 15572  002EDA  D00D               	goto	i2l5274
 15573  002EDC  5002               	movf	?i2_UART_buff_size+1,w,c
 15574  002EDE  E103               	bnz	i2u538_40
 15575  002EE0  0401               	decf	?i2_UART_buff_size,w,c
 15576  002EE2  A0D8               	btfss	status,0,c
 15577  002EE4  D008               	goto	i2l5274
 15578  002EE6                     i2u538_40:
 15579                           
 15580                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 15581  002EE6  0E00               	movlw	low _output_buffer
 15582  002EE8  6E07               	movwf	i2UART_buff_get@_this,c
 15583  002EEA  0E05               	movlw	high _output_buffer
 15584  002EEC  6E08               	movwf	i2UART_buff_get@_this+1,c
 15585  002EEE  ECD0  F012         	call	i2_UART_buff_get	;wreg free
 15586  002EF2  6EAD               	movwf	4013,c	;volatile
 15587                           
 15588                           ;UART.c: 154: } else {
 15589  002EF4  0012               	return	
 15590  002EF6                     i2l5274:
 15591                           
 15592                           ;UART.c: 155: Transmit_stall = 1;
 15593  002EF6  0E01               	movlw	1
 15594  002EF8  6E44               	movwf	_Transmit_stall,c
 15595                           
 15596                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 15597  002EFA  989D               	bcf	3997,4,c	;volatile
 15598  002EFC  0012               	return	
 15599  002EFE                     __end_of_EUSART1_Transmit_ISR:
 15600                           	opt stack 0
 15601                           tosu	equ	0xFFF
 15602                           tosh	equ	0xFFE
 15603                           tosl	equ	0xFFD
 15604                           pclatu	equ	0xFFB
 15605                           pclath	equ	0xFFA
 15606                           tblptru	equ	0xFF8
 15607                           tblptrh	equ	0xFF7
 15608                           tblptrl	equ	0xFF6
 15609                           tablat	equ	0xFF5
 15610                           prodh	equ	0xFF4
 15611                           prodl	equ	0xFF3
 15612                           intcon	equ	0xFF2
 15613                           intcon2	equ	0xFF1
 15614                           indf0	equ	0xFEF
 15615                           postinc0	equ	0xFEE
 15616                           fsr0h	equ	0xFEA
 15617                           fsr0l	equ	0xFE9
 15618                           wreg	equ	0xFE8
 15619                           fsr1h	equ	0xFE2
 15620                           fsr1l	equ	0xFE1
 15621                           indf2	equ	0xFDF
 15622                           postinc2	equ	0xFDE
 15623                           postdec2	equ	0xFDD
 15624                           plusw2	equ	0xFDB
 15625                           fsr2h	equ	0xFDA
 15626                           fsr2l	equ	0xFD9
 15627                           status	equ	0xFD8
 15628                           
 15629 ;; *************** function i2_UART_buff_size *****************
 15630 ;; Defined at:
 15631 ;;		line 102 in file "UART.c"
 15632 ;; Parameters:    Size  Location     Type
 15633 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 15634 ;;		 -> output_buffer(206), input_buffer(206), 
 15635 ;; Auto vars:     Size  Location     Type
 15636 ;;		None
 15637 ;; Return value:  Size  Location     Type
 15638 ;;                  2    0[COMRAM] int 
 15639 ;; Registers used:
 15640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15641 ;; Tracked objects:
 15642 ;;		On entry : 0/0
 15643 ;;		On exit  : 0/0
 15644 ;;		Unchanged: 0/0
 15645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15646 ;;      Params:         2       0       0       0       0       0       0
 15647 ;;      Locals:         0       0       0       0       0       0       0
 15648 ;;      Temps:          0       0       0       0       0       0       0
 15649 ;;      Totals:         2       0       0       0       0       0       0
 15650 ;;Total ram usage:        2 bytes
 15651 ;; Hardware stack levels used:    1
 15652 ;; This function calls:
 15653 ;;		Nothing
 15654 ;; This function is called by:
 15655 ;;		_EUSART1_Transmit_ISR
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           	psect	text81
 15660  00314C                     __ptext81:
 15661                           	opt stack 0
 15662  00314C                     i2_UART_buff_size:
 15663                           	opt stack 22
 15664                           
 15665                           ;UART.c: 103: return (_this->count);
 15666                           
 15667                           ;incstack = 0
 15668  00314C  EE20 F0CC          	lfsr	2,204
 15669  003150  5001               	movf	i2UART_buff_size@_this,w,c
 15670  003152  26D9               	addwf	fsr2l,f,c
 15671  003154  5002               	movf	i2UART_buff_size@_this+1,w,c
 15672  003156  22DA               	addwfc	fsr2h,f,c
 15673  003158  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 15674  00315C  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 15675  003160  0012               	return	
 15676  003162                     __end_ofi2_UART_buff_size:
 15677                           	opt stack 0
 15678                           tosu	equ	0xFFF
 15679                           tosh	equ	0xFFE
 15680                           tosl	equ	0xFFD
 15681                           pclatu	equ	0xFFB
 15682                           pclath	equ	0xFFA
 15683                           tblptru	equ	0xFF8
 15684                           tblptrh	equ	0xFF7
 15685                           tblptrl	equ	0xFF6
 15686                           tablat	equ	0xFF5
 15687                           prodh	equ	0xFF4
 15688                           prodl	equ	0xFF3
 15689                           intcon	equ	0xFF2
 15690                           intcon2	equ	0xFF1
 15691                           indf0	equ	0xFEF
 15692                           postinc0	equ	0xFEE
 15693                           fsr0h	equ	0xFEA
 15694                           fsr0l	equ	0xFE9
 15695                           wreg	equ	0xFE8
 15696                           fsr1h	equ	0xFE2
 15697                           fsr1l	equ	0xFE1
 15698                           indf2	equ	0xFDF
 15699                           postinc2	equ	0xFDE
 15700                           postdec2	equ	0xFDD
 15701                           plusw2	equ	0xFDB
 15702                           fsr2h	equ	0xFDA
 15703                           fsr2l	equ	0xFD9
 15704                           status	equ	0xFD8
 15705                           
 15706 ;; *************** function i2_UART_buff_get *****************
 15707 ;; Defined at:
 15708 ;;		line 81 in file "UART.c"
 15709 ;; Parameters:    Size  Location     Type
 15710 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15711 ;;		 -> output_buffer(206), input_buffer(206), 
 15712 ;; Auto vars:     Size  Location     Type
 15713 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  1    wreg      unsigned char 
 15716 ;; Registers used:
 15717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15718 ;; Tracked objects:
 15719 ;;		On entry : 0/0
 15720 ;;		On exit  : 0/0
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15723 ;;      Params:         2       0       0       0       0       0       0
 15724 ;;      Locals:         1       0       0       0       0       0       0
 15725 ;;      Temps:          2       0       0       0       0       0       0
 15726 ;;      Totals:         5       0       0       0       0       0       0
 15727 ;;Total ram usage:        5 bytes
 15728 ;; Hardware stack levels used:    1
 15729 ;; Hardware stack levels required when called:    1
 15730 ;; This function calls:
 15731 ;;		i2_UART_buff_modulo_inc
 15732 ;; This function is called by:
 15733 ;;		_EUSART1_Transmit_ISR
 15734 ;; This function uses a non-reentrant model
 15735 ;;
 15736                           
 15737                           	psect	text82
 15738  0025A0                     __ptext82:
 15739                           	opt stack 0
 15740  0025A0                     i2_UART_buff_get:
 15741                           	opt stack 21
 15742                           
 15743                           ;UART.c: 82: unsigned char c;
 15744                           ;UART.c: 83: if (_this->count > 0) {
 15745                           
 15746                           ;incstack = 0
 15747  0025A0  EE20 F0CC          	lfsr	2,204
 15748  0025A4  5007               	movf	i2UART_buff_get@_this,w,c
 15749  0025A6  26D9               	addwf	fsr2l,f,c
 15750  0025A8  5008               	movf	i2UART_buff_get@_this+1,w,c
 15751  0025AA  22DA               	addwfc	fsr2h,f,c
 15752  0025AC  0E01               	movlw	1
 15753  0025AE  BEDB               	btfsc	plusw2,7,c
 15754  0025B0  D03C               	goto	i2l5128
 15755  0025B2  0E01               	movlw	1
 15756  0025B4  50DB               	movf	plusw2,w,c
 15757  0025B6  E103               	bnz	i2u518_40
 15758  0025B8  04DE               	decf	postinc2,w,c
 15759  0025BA  A0D8               	btfss	status,0,c
 15760  0025BC  D036               	goto	i2l5128
 15761  0025BE                     i2u518_40:
 15762                           
 15763                           ;UART.c: 84: c = _this->buf[_this->tail];
 15764  0025BE  EE20 F0CA          	lfsr	2,202
 15765  0025C2  5007               	movf	i2UART_buff_get@_this,w,c
 15766  0025C4  26D9               	addwf	fsr2l,f,c
 15767  0025C6  5008               	movf	i2UART_buff_get@_this+1,w,c
 15768  0025C8  22DA               	addwfc	fsr2h,f,c
 15769  0025CA  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 15770  0025CE  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 15771  0025D2  5009               	movf	??i2_UART_buff_get,w,c
 15772  0025D4  2407               	addwf	i2UART_buff_get@_this,w,c
 15773  0025D6  6ED9               	movwf	fsr2l,c
 15774  0025D8  500A               	movf	??i2_UART_buff_get+1,w,c
 15775  0025DA  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 15776  0025DC  6EDA               	movwf	fsr2h,c
 15777  0025DE  50DF               	movf	indf2,w,c
 15778  0025E0  6E0B               	movwf	i2UART_buff_get@c,c
 15779                           
 15780                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15781  0025E2  EE20 F0CA          	lfsr	2,202
 15782  0025E6  5007               	movf	i2UART_buff_get@_this,w,c
 15783  0025E8  26D9               	addwf	fsr2l,f,c
 15784  0025EA  5008               	movf	i2UART_buff_get@_this+1,w,c
 15785  0025EC  22DA               	addwfc	fsr2h,f,c
 15786  0025EE  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15787  0025F2  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15788  0025F6  0E00               	movlw	0
 15789  0025F8  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15790  0025FA  0EC8               	movlw	200
 15791  0025FC  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15792  0025FE  ECD6  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15793  002602  EE20 F0CA          	lfsr	2,202
 15794  002606  5007               	movf	i2UART_buff_get@_this,w,c
 15795  002608  26D9               	addwf	fsr2l,f,c
 15796  00260A  5008               	movf	i2UART_buff_get@_this+1,w,c
 15797  00260C  22DA               	addwfc	fsr2h,f,c
 15798  00260E  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15799  002612  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15800                           
 15801                           ;UART.c: 86: --_this->count;
 15802  002616  EE20 F0CC          	lfsr	2,204
 15803  00261A  5007               	movf	i2UART_buff_get@_this,w,c
 15804  00261C  26D9               	addwf	fsr2l,f,c
 15805  00261E  5008               	movf	i2UART_buff_get@_this+1,w,c
 15806  002620  22DA               	addwfc	fsr2h,f,c
 15807  002622  06DE               	decf	postinc2,f,c
 15808  002624  0E00               	movlw	0
 15809  002626  5ADD               	subwfb	postdec2,f,c
 15810                           
 15811                           ;UART.c: 87: } else {
 15812  002628  D002               	goto	i2l1169
 15813  00262A                     i2l5128:
 15814                           
 15815                           ;UART.c: 88: c = 0;
 15816  00262A  0E00               	movlw	0
 15817  00262C  6E0B               	movwf	i2UART_buff_get@c,c
 15818  00262E                     i2l1169:
 15819                           
 15820                           ;UART.c: 89: }
 15821                           ;UART.c: 90: return (c);
 15822  00262E  500B               	movf	i2UART_buff_get@c,w,c
 15823  002630  0012               	return	
 15824  002632                     __end_ofi2_UART_buff_get:
 15825                           	opt stack 0
 15826                           tosu	equ	0xFFF
 15827                           tosh	equ	0xFFE
 15828                           tosl	equ	0xFFD
 15829                           pclatu	equ	0xFFB
 15830                           pclath	equ	0xFFA
 15831                           tblptru	equ	0xFF8
 15832                           tblptrh	equ	0xFF7
 15833                           tblptrl	equ	0xFF6
 15834                           tablat	equ	0xFF5
 15835                           prodh	equ	0xFF4
 15836                           prodl	equ	0xFF3
 15837                           intcon	equ	0xFF2
 15838                           intcon2	equ	0xFF1
 15839                           indf0	equ	0xFEF
 15840                           postinc0	equ	0xFEE
 15841                           fsr0h	equ	0xFEA
 15842                           fsr0l	equ	0xFE9
 15843                           wreg	equ	0xFE8
 15844                           fsr1h	equ	0xFE2
 15845                           fsr1l	equ	0xFE1
 15846                           indf2	equ	0xFDF
 15847                           postinc2	equ	0xFDE
 15848                           postdec2	equ	0xFDD
 15849                           plusw2	equ	0xFDB
 15850                           fsr2h	equ	0xFDA
 15851                           fsr2l	equ	0xFD9
 15852                           status	equ	0xFD8
 15853                           
 15854 ;; *************** function _EUSART1_Receive_ISR *****************
 15855 ;; Defined at:
 15856 ;;		line 139 in file "UART.c"
 15857 ;; Parameters:    Size  Location     Type
 15858 ;;		None
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;  data            1   11[COMRAM] unsigned char 
 15861 ;; Return value:  Size  Location     Type
 15862 ;;		None               void
 15863 ;; Registers used:
 15864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15865 ;; Tracked objects:
 15866 ;;		On entry : 0/0
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15870 ;;      Params:         0       0       0       0       0       0       0
 15871 ;;      Locals:         1       0       0       0       0       0       0
 15872 ;;      Temps:          0       0       0       0       0       0       0
 15873 ;;      Totals:         1       0       0       0       0       0       0
 15874 ;;Total ram usage:        1 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:    2
 15877 ;; This function calls:
 15878 ;;		i2_UART_buff_put
 15879 ;; This function is called by:
 15880 ;;		_INTERRUPT_InterruptManager
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884                           	psect	text83
 15885  0030CE                     __ptext83:
 15886                           	opt stack 0
 15887  0030CE                     _EUSART1_Receive_ISR:
 15888                           	opt stack 21
 15889                           
 15890                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 15891                           
 15892                           ;incstack = 0
 15893  0030CE  A2AB               	btfss	4011,1,c	;volatile
 15894  0030D0  D002               	goto	i2l1200
 15895                           
 15896                           ;UART.c: 143: RC1STAbits.CREN = 0;
 15897  0030D2  98AB               	bcf	4011,4,c	;volatile
 15898                           
 15899                           ;UART.c: 144: RC1STAbits.CREN = 1;
 15900  0030D4  88AB               	bsf	4011,4,c	;volatile
 15901  0030D6                     i2l1200:
 15902                           
 15903                           ;UART.c: 145: }
 15904                           ;UART.c: 146: unsigned char data = RCREG1;
 15905  0030D6  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 15906                           
 15907                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 15908  0030DA  0E00               	movlw	low _input_buffer
 15909  0030DC  6E07               	movwf	i2UART_buff_put@_this,c
 15910  0030DE  0E04               	movlw	high _input_buffer
 15911  0030E0  6E08               	movwf	i2UART_buff_put@_this+1,c
 15912  0030E2  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 15913  0030E6  ECA6  F00C         	call	i2_UART_buff_put	;wreg free
 15914  0030EA  0012               	return		;funcret
 15915  0030EC                     __end_of_EUSART1_Receive_ISR:
 15916                           	opt stack 0
 15917                           tosu	equ	0xFFF
 15918                           tosh	equ	0xFFE
 15919                           tosl	equ	0xFFD
 15920                           pclatu	equ	0xFFB
 15921                           pclath	equ	0xFFA
 15922                           tblptru	equ	0xFF8
 15923                           tblptrh	equ	0xFF7
 15924                           tblptrl	equ	0xFF6
 15925                           tablat	equ	0xFF5
 15926                           prodh	equ	0xFF4
 15927                           prodl	equ	0xFF3
 15928                           intcon	equ	0xFF2
 15929                           intcon2	equ	0xFF1
 15930                           indf0	equ	0xFEF
 15931                           postinc0	equ	0xFEE
 15932                           fsr0h	equ	0xFEA
 15933                           fsr0l	equ	0xFE9
 15934                           wreg	equ	0xFE8
 15935                           fsr1h	equ	0xFE2
 15936                           fsr1l	equ	0xFE1
 15937                           indf2	equ	0xFDF
 15938                           postinc2	equ	0xFDE
 15939                           postdec2	equ	0xFDD
 15940                           plusw2	equ	0xFDB
 15941                           fsr2h	equ	0xFDA
 15942                           fsr2l	equ	0xFD9
 15943                           status	equ	0xFD8
 15944                           
 15945 ;; *************** function i2_UART_buff_put *****************
 15946 ;; Defined at:
 15947 ;;		line 68 in file "UART.c"
 15948 ;; Parameters:    Size  Location     Type
 15949 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15950 ;;		 -> output_buffer(206), input_buffer(206), 
 15951 ;;  c               1    8[COMRAM] const unsigned char 
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;		None
 15954 ;; Return value:  Size  Location     Type
 15955 ;;		None               void
 15956 ;; Registers used:
 15957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15963 ;;      Params:         3       0       0       0       0       0       0
 15964 ;;      Locals:         0       0       0       0       0       0       0
 15965 ;;      Temps:          2       0       0       0       0       0       0
 15966 ;;      Totals:         5       0       0       0       0       0       0
 15967 ;;Total ram usage:        5 bytes
 15968 ;; Hardware stack levels used:    1
 15969 ;; Hardware stack levels required when called:    1
 15970 ;; This function calls:
 15971 ;;		i2_UART_buff_modulo_inc
 15972 ;; This function is called by:
 15973 ;;		_EUSART1_Receive_ISR
 15974 ;; This function uses a non-reentrant model
 15975 ;;
 15976                           
 15977                           	psect	text84
 15978  00194C                     __ptext84:
 15979                           	opt stack 0
 15980  00194C                     i2_UART_buff_put:
 15981                           	opt stack 21
 15982                           
 15983                           ;UART.c: 69: if (_this->count < 200) {
 15984                           
 15985                           ;incstack = 0
 15986  00194C  EE20 F0CC          	lfsr	2,204
 15987  001950  5007               	movf	i2UART_buff_put@_this,w,c
 15988  001952  26D9               	addwf	fsr2l,f,c
 15989  001954  5008               	movf	i2UART_buff_put@_this+1,w,c
 15990  001956  22DA               	addwfc	fsr2h,f,c
 15991  001958  0E01               	movlw	1
 15992  00195A  BEDB               	btfsc	plusw2,7,c
 15993  00195C  D007               	goto	i2l5108
 15994  00195E  0E01               	movlw	1
 15995  001960  50DB               	movf	plusw2,w,c
 15996  001962  E13A               	bnz	i2l5114
 15997  001964  0EC8               	movlw	200
 15998  001966  5CDE               	subwf	postinc2,w,c
 15999  001968  B0D8               	btfsc	status,0,c
 16000  00196A  D036               	goto	i2l5114
 16001  00196C                     i2l5108:
 16002                           
 16003                           ;UART.c: 70: _this->buf[_this->head] = c;
 16004  00196C  EE20 F0C8          	lfsr	2,200
 16005  001970  5007               	movf	i2UART_buff_put@_this,w,c
 16006  001972  26D9               	addwf	fsr2l,f,c
 16007  001974  5008               	movf	i2UART_buff_put@_this+1,w,c
 16008  001976  22DA               	addwfc	fsr2h,f,c
 16009  001978  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 16010  00197C  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 16011  001980  500A               	movf	??i2_UART_buff_put,w,c
 16012  001982  2407               	addwf	i2UART_buff_put@_this,w,c
 16013  001984  6ED9               	movwf	fsr2l,c
 16014  001986  500B               	movf	??i2_UART_buff_put+1,w,c
 16015  001988  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 16016  00198A  6EDA               	movwf	fsr2h,c
 16017  00198C  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 16018                           
 16019                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 16020  001990  EE20 F0C8          	lfsr	2,200
 16021  001994  5007               	movf	i2UART_buff_put@_this,w,c
 16022  001996  26D9               	addwf	fsr2l,f,c
 16023  001998  5008               	movf	i2UART_buff_put@_this+1,w,c
 16024  00199A  22DA               	addwfc	fsr2h,f,c
 16025  00199C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 16026  0019A0  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 16027  0019A4  0E00               	movlw	0
 16028  0019A6  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 16029  0019A8  0EC8               	movlw	200
 16030  0019AA  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 16031  0019AC  ECD6  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 16032  0019B0  EE20 F0C8          	lfsr	2,200
 16033  0019B4  5007               	movf	i2UART_buff_put@_this,w,c
 16034  0019B6  26D9               	addwf	fsr2l,f,c
 16035  0019B8  5008               	movf	i2UART_buff_put@_this+1,w,c
 16036  0019BA  22DA               	addwfc	fsr2h,f,c
 16037  0019BC  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 16038  0019C0  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 16039                           
 16040                           ;UART.c: 72: ++_this->count;
 16041  0019C4  EE20 F0CC          	lfsr	2,204
 16042  0019C8  5007               	movf	i2UART_buff_put@_this,w,c
 16043  0019CA  26D9               	addwf	fsr2l,f,c
 16044  0019CC  5008               	movf	i2UART_buff_put@_this+1,w,c
 16045  0019CE  22DA               	addwfc	fsr2h,f,c
 16046  0019D0  2ADE               	incf	postinc2,f,c
 16047  0019D2  0E00               	movlw	0
 16048  0019D4  22DD               	addwfc	postdec2,f,c
 16049                           
 16050                           ;UART.c: 73: } else {
 16051  0019D6  0012               	return	
 16052  0019D8                     i2l5114:
 16053                           
 16054                           ;UART.c: 74: _this->buf[_this->head] = c;
 16055  0019D8  EE20 F0C8          	lfsr	2,200
 16056  0019DC  5007               	movf	i2UART_buff_put@_this,w,c
 16057  0019DE  26D9               	addwf	fsr2l,f,c
 16058  0019E0  5008               	movf	i2UART_buff_put@_this+1,w,c
 16059  0019E2  22DA               	addwfc	fsr2h,f,c
 16060  0019E4  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 16061  0019E8  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 16062  0019EC  500A               	movf	??i2_UART_buff_put,w,c
 16063  0019EE  2407               	addwf	i2UART_buff_put@_this,w,c
 16064  0019F0  6ED9               	movwf	fsr2l,c
 16065  0019F2  500B               	movf	??i2_UART_buff_put+1,w,c
 16066  0019F4  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 16067  0019F6  6EDA               	movwf	fsr2h,c
 16068  0019F8  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 16069                           
 16070                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 16071  0019FC  EE20 F0C8          	lfsr	2,200
 16072  001A00  5007               	movf	i2UART_buff_put@_this,w,c
 16073  001A02  26D9               	addwf	fsr2l,f,c
 16074  001A04  5008               	movf	i2UART_buff_put@_this+1,w,c
 16075  001A06  22DA               	addwfc	fsr2h,f,c
 16076  001A08  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 16077  001A0C  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 16078  001A10  0E00               	movlw	0
 16079  001A12  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 16080  001A14  0EC8               	movlw	200
 16081  001A16  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 16082  001A18  ECD6  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 16083  001A1C  EE20 F0C8          	lfsr	2,200
 16084  001A20  5007               	movf	i2UART_buff_put@_this,w,c
 16085  001A22  26D9               	addwf	fsr2l,f,c
 16086  001A24  5008               	movf	i2UART_buff_put@_this+1,w,c
 16087  001A26  22DA               	addwfc	fsr2h,f,c
 16088  001A28  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 16089  001A2C  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 16090                           
 16091                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 16092  001A30  EE20 F0CA          	lfsr	2,202
 16093  001A34  5007               	movf	i2UART_buff_put@_this,w,c
 16094  001A36  26D9               	addwf	fsr2l,f,c
 16095  001A38  5008               	movf	i2UART_buff_put@_this+1,w,c
 16096  001A3A  22DA               	addwfc	fsr2h,f,c
 16097  001A3C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 16098  001A40  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 16099  001A44  0E00               	movlw	0
 16100  001A46  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 16101  001A48  0EC8               	movlw	200
 16102  001A4A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 16103  001A4C  ECD6  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 16104  001A50  EE20 F0CA          	lfsr	2,202
 16105  001A54  5007               	movf	i2UART_buff_put@_this,w,c
 16106  001A56  26D9               	addwf	fsr2l,f,c
 16107  001A58  5008               	movf	i2UART_buff_put@_this+1,w,c
 16108  001A5A  22DA               	addwfc	fsr2h,f,c
 16109  001A5C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 16110  001A60  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 16111  001A64  0012               	return	
 16112  001A66                     __end_ofi2_UART_buff_put:
 16113                           	opt stack 0
 16114                           tosu	equ	0xFFF
 16115                           tosh	equ	0xFFE
 16116                           tosl	equ	0xFFD
 16117                           pclatu	equ	0xFFB
 16118                           pclath	equ	0xFFA
 16119                           tblptru	equ	0xFF8
 16120                           tblptrh	equ	0xFF7
 16121                           tblptrl	equ	0xFF6
 16122                           tablat	equ	0xFF5
 16123                           prodh	equ	0xFF4
 16124                           prodl	equ	0xFF3
 16125                           intcon	equ	0xFF2
 16126                           intcon2	equ	0xFF1
 16127                           indf0	equ	0xFEF
 16128                           postinc0	equ	0xFEE
 16129                           fsr0h	equ	0xFEA
 16130                           fsr0l	equ	0xFE9
 16131                           wreg	equ	0xFE8
 16132                           fsr1h	equ	0xFE2
 16133                           fsr1l	equ	0xFE1
 16134                           indf2	equ	0xFDF
 16135                           postinc2	equ	0xFDE
 16136                           postdec2	equ	0xFDD
 16137                           plusw2	equ	0xFDB
 16138                           fsr2h	equ	0xFDA
 16139                           fsr2l	equ	0xFD9
 16140                           status	equ	0xFD8
 16141                           
 16142 ;; *************** function i2_UART_buff_modulo_inc *****************
 16143 ;; Defined at:
 16144 ;;		line 106 in file "UART.c"
 16145 ;; Parameters:    Size  Location     Type
 16146 ;;  value           2    0[COMRAM] const unsigned int 
 16147 ;;  modulus         2    2[COMRAM] const unsigned int 
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 16150 ;; Return value:  Size  Location     Type
 16151 ;;                  2    0[COMRAM] unsigned int 
 16152 ;; Registers used:
 16153 ;;		wreg, status,2, status,0
 16154 ;; Tracked objects:
 16155 ;;		On entry : 0/0
 16156 ;;		On exit  : 0/0
 16157 ;;		Unchanged: 0/0
 16158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16159 ;;      Params:         4       0       0       0       0       0       0
 16160 ;;      Locals:         2       0       0       0       0       0       0
 16161 ;;      Temps:          0       0       0       0       0       0       0
 16162 ;;      Totals:         6       0       0       0       0       0       0
 16163 ;;Total ram usage:        6 bytes
 16164 ;; Hardware stack levels used:    1
 16165 ;; This function calls:
 16166 ;;		Nothing
 16167 ;; This function is called by:
 16168 ;;		i2_UART_buff_put
 16169 ;;		i2_UART_buff_get
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	text85
 16174  002FAC                     __ptext85:
 16175                           	opt stack 0
 16176  002FAC                     i2_UART_buff_modulo_inc:
 16177                           	opt stack 21
 16178                           
 16179                           ;UART.c: 107: unsigned int my_value = value + 1;
 16180                           
 16181                           ;incstack = 0
 16182  002FAC  0E01               	movlw	1
 16183  002FAE  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 16184  002FB0  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 16185  002FB2  0E00               	movlw	0
 16186  002FB4  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 16187  002FB6  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 16188                           
 16189                           ;UART.c: 108: if (my_value >= modulus) {
 16190  002FB8  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 16191  002FBA  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 16192  002FBC  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 16193  002FBE  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 16194  002FC0  A0D8               	btfss	status,0,c
 16195  002FC2  D004               	goto	i2l4612
 16196                           
 16197                           ;UART.c: 109: my_value = 0;
 16198  002FC4  0E00               	movlw	0
 16199  002FC6  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 16200  002FC8  0E00               	movlw	0
 16201  002FCA  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 16202  002FCC                     i2l4612:
 16203                           
 16204                           ;UART.c: 110: }
 16205                           ;UART.c: 111: return (my_value);
 16206  002FCC  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 16207  002FD0  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 16208  002FD4  0012               	return	
 16209  002FD6                     __end_ofi2_UART_buff_modulo_inc:
 16210                           	opt stack 0
 16211                           tosu	equ	0xFFF
 16212                           tosh	equ	0xFFE
 16213                           tosl	equ	0xFFD
 16214                           pclatu	equ	0xFFB
 16215                           pclath	equ	0xFFA
 16216                           tblptru	equ	0xFF8
 16217                           tblptrh	equ	0xFF7
 16218                           tblptrl	equ	0xFF6
 16219                           tablat	equ	0xFF5
 16220                           prodh	equ	0xFF4
 16221                           prodl	equ	0xFF3
 16222                           intcon	equ	0xFF2
 16223                           intcon2	equ	0xFF1
 16224                           indf0	equ	0xFEF
 16225                           postinc0	equ	0xFEE
 16226                           fsr0h	equ	0xFEA
 16227                           fsr0l	equ	0xFE9
 16228                           wreg	equ	0xFE8
 16229                           fsr1h	equ	0xFE2
 16230                           fsr1l	equ	0xFE1
 16231                           indf2	equ	0xFDF
 16232                           postinc2	equ	0xFDE
 16233                           postdec2	equ	0xFDD
 16234                           plusw2	equ	0xFDB
 16235                           fsr2h	equ	0xFDA
 16236                           fsr2l	equ	0xFD9
 16237                           status	equ	0xFD8
 16238                           
 16239 ;; *************** function _ADC_ISR *****************
 16240 ;; Defined at:
 16241 ;;		line 128 in file "mcc_generated_files/adc.c"
 16242 ;; Parameters:    Size  Location     Type
 16243 ;;		None
 16244 ;; Auto vars:     Size  Location     Type
 16245 ;;		None
 16246 ;; Return value:  Size  Location     Type
 16247 ;;		None               void
 16248 ;; Registers used:
 16249 ;;		None
 16250 ;; Tracked objects:
 16251 ;;		On entry : 0/0
 16252 ;;		On exit  : 0/0
 16253 ;;		Unchanged: 0/0
 16254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16255 ;;      Params:         0       0       0       0       0       0       0
 16256 ;;      Locals:         0       0       0       0       0       0       0
 16257 ;;      Temps:          0       0       0       0       0       0       0
 16258 ;;      Totals:         0       0       0       0       0       0       0
 16259 ;;Total ram usage:        0 bytes
 16260 ;; Hardware stack levels used:    1
 16261 ;; This function calls:
 16262 ;;		Nothing
 16263 ;; This function is called by:
 16264 ;;		_INTERRUPT_InterruptManager
 16265 ;; This function uses a non-reentrant model
 16266 ;;
 16267                           
 16268                           	psect	text86
 16269  0031F6                     __ptext86:
 16270                           	opt stack 0
 16271  0031F6                     _ADC_ISR:
 16272                           	opt stack 23
 16273                           
 16274                           ;adc.c: 131: PIR1bits.ADIF = 0;
 16275                           
 16276                           ;incstack = 0
 16277  0031F6  9C9E               	bcf	3998,6,c	;volatile
 16278  0031F8  0012               	return		;funcret
 16279  0031FA                     __end_of_ADC_ISR:
 16280                           	opt stack 0
 16281                           tosu	equ	0xFFF
 16282                           tosh	equ	0xFFE
 16283                           tosl	equ	0xFFD
 16284                           pclatu	equ	0xFFB
 16285                           pclath	equ	0xFFA
 16286                           tblptru	equ	0xFF8
 16287                           tblptrh	equ	0xFF7
 16288                           tblptrl	equ	0xFF6
 16289                           tablat	equ	0xFF5
 16290                           prodh	equ	0xFF4
 16291                           prodl	equ	0xFF3
 16292                           intcon	equ	0xFF2
 16293                           intcon2	equ	0xFF1
 16294                           indf0	equ	0xFEF
 16295                           postinc0	equ	0xFEE
 16296                           fsr0h	equ	0xFEA
 16297                           fsr0l	equ	0xFE9
 16298                           wreg	equ	0xFE8
 16299                           fsr1h	equ	0xFE2
 16300                           fsr1l	equ	0xFE1
 16301                           indf2	equ	0xFDF
 16302                           postinc2	equ	0xFDE
 16303                           postdec2	equ	0xFDD
 16304                           plusw2	equ	0xFDB
 16305                           fsr2h	equ	0xFDA
 16306                           fsr2l	equ	0xFD9
 16307                           status	equ	0xFD8
 16308                           tosu	equ	0xFFF
 16309                           tosh	equ	0xFFE
 16310                           tosl	equ	0xFFD
 16311                           pclatu	equ	0xFFB
 16312                           pclath	equ	0xFFA
 16313                           tblptru	equ	0xFF8
 16314                           tblptrh	equ	0xFF7
 16315                           tblptrl	equ	0xFF6
 16316                           tablat	equ	0xFF5
 16317                           prodh	equ	0xFF4
 16318                           prodl	equ	0xFF3
 16319                           intcon	equ	0xFF2
 16320                           intcon2	equ	0xFF1
 16321                           indf0	equ	0xFEF
 16322                           postinc0	equ	0xFEE
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           fsr1h	equ	0xFE2
 16327                           fsr1l	equ	0xFE1
 16328                           indf2	equ	0xFDF
 16329                           postinc2	equ	0xFDE
 16330                           postdec2	equ	0xFDD
 16331                           plusw2	equ	0xFDB
 16332                           fsr2h	equ	0xFDA
 16333                           fsr2l	equ	0xFD9
 16334                           status	equ	0xFD8
 16335                           
 16336                           	psect	text87
 16337  000000                     __ptext87:
 16338                           	opt stack 0
 16339                           tosu	equ	0xFFF
 16340                           tosh	equ	0xFFE
 16341                           tosl	equ	0xFFD
 16342                           pclatu	equ	0xFFB
 16343                           pclath	equ	0xFFA
 16344                           tblptru	equ	0xFF8
 16345                           tblptrh	equ	0xFF7
 16346                           tblptrl	equ	0xFF6
 16347                           tablat	equ	0xFF5
 16348                           prodh	equ	0xFF4
 16349                           prodl	equ	0xFF3
 16350                           intcon	equ	0xFF2
 16351                           intcon2	equ	0xFF1
 16352                           indf0	equ	0xFEF
 16353                           postinc0	equ	0xFEE
 16354                           fsr0h	equ	0xFEA
 16355                           fsr0l	equ	0xFE9
 16356                           wreg	equ	0xFE8
 16357                           fsr1h	equ	0xFE2
 16358                           fsr1l	equ	0xFE1
 16359                           indf2	equ	0xFDF
 16360                           postinc2	equ	0xFDE
 16361                           postdec2	equ	0xFDD
 16362                           plusw2	equ	0xFDB
 16363                           fsr2h	equ	0xFDA
 16364                           fsr2l	equ	0xFD9
 16365                           status	equ	0xFD8
 16366                           
 16367                           	psect	rparam
 16368  0000                     tosu	equ	0xFFF
 16369                           tosh	equ	0xFFE
 16370                           tosl	equ	0xFFD
 16371                           pclatu	equ	0xFFB
 16372                           pclath	equ	0xFFA
 16373                           tblptru	equ	0xFF8
 16374                           tblptrh	equ	0xFF7
 16375                           tblptrl	equ	0xFF6
 16376                           tablat	equ	0xFF5
 16377                           prodh	equ	0xFF4
 16378                           prodl	equ	0xFF3
 16379                           intcon	equ	0xFF2
 16380                           intcon2	equ	0xFF1
 16381                           indf0	equ	0xFEF
 16382                           postinc0	equ	0xFEE
 16383                           fsr0h	equ	0xFEA
 16384                           fsr0l	equ	0xFE9
 16385                           wreg	equ	0xFE8
 16386                           fsr1h	equ	0xFE2
 16387                           fsr1l	equ	0xFE1
 16388                           indf2	equ	0xFDF
 16389                           postinc2	equ	0xFDE
 16390                           postdec2	equ	0xFDD
 16391                           plusw2	equ	0xFDB
 16392                           fsr2h	equ	0xFDA
 16393                           fsr2l	equ	0xFD9
 16394                           status	equ	0xFD8
 16395                           
 16396                           	psect	temp
 16397  000045                     btemp:
 16398                           	opt stack 0
 16399  000045                     	ds	1
 16400  0000                     int$flags	set	btemp
 16401                           tosu	equ	0xFFF
 16402                           tosh	equ	0xFFE
 16403                           tosl	equ	0xFFD
 16404                           pclatu	equ	0xFFB
 16405                           pclath	equ	0xFFA
 16406                           tblptru	equ	0xFF8
 16407                           tblptrh	equ	0xFF7
 16408                           tblptrl	equ	0xFF6
 16409                           tablat	equ	0xFF5
 16410                           prodh	equ	0xFF4
 16411                           prodl	equ	0xFF3
 16412                           intcon	equ	0xFF2
 16413                           intcon2	equ	0xFF1
 16414                           indf0	equ	0xFEF
 16415                           postinc0	equ	0xFEE
 16416                           fsr0h	equ	0xFEA
 16417                           fsr0l	equ	0xFE9
 16418                           wreg	equ	0xFE8
 16419                           fsr1h	equ	0xFE2
 16420                           fsr1l	equ	0xFE1
 16421                           indf2	equ	0xFDF
 16422                           postinc2	equ	0xFDE
 16423                           postdec2	equ	0xFDD
 16424                           plusw2	equ	0xFDB
 16425                           fsr2h	equ	0xFDA
 16426                           fsr2l	equ	0xFD9
 16427                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    1040
    Data        1
    BSS         1044
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      68
    BANK0           160     12     160
    BANK1           256     24      81
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8795 size(2) Largest target is 0
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    oledPrint@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[8]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[11]), 
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    oledPutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2531(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 0
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8795 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8795 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    F8907.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8795 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    F8902.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDblinkRate@b(COMRAM[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 
		 -> LEDBsetBrightness@b(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8795 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8795 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8795 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___wmul->_GetDataBarGraphA
    ___wmul->_GetDataBarGraphB
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _oledPutChar->_memmove
    _oledGotoYX->_OLED_command
    _OLED_init->_OLED_command
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDsetValue->_LEDsetBar
    _LEDsetBar->___awdiv
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _respondECU->_sendData
    _receiveData->_CRCcheck
    _Splash->_oledPrint
    _Setupdisplay->_oledClear
    _oledPutChar->_I2C1_MasterWrite
    _OLED_command->_I2C1_MasterWrite
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69681
                          _ClearTime
                   _GetDataBarGraphA
                   _GetDataBarGraphB
                            _GetTime
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                       _Setupdisplay
                             _Splash
                             ___wmul
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21016
                      _DataBarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7635
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     223
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2      86
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1406
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     302
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              0 BANK1     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     5     3      2
                                              0 BANK0      2     2      0
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DataBarGraphs                                        4     0      4     172
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     415
                                             28 COMRAM     6     2      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
 ---------------------------------------------------------------------------------
 (1) _Splash                                               0     0      0   10386
                         _oledGotoYX
                          _oledPrint
 ---------------------------------------------------------------------------------
 (2) _oledPrint                                            2     0      2    5370
                                              8 BANK0      2     0      2
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (1) _Setupdisplay                                         0     0      0   14117
                          _OLED_init
                          _oledClear
 ---------------------------------------------------------------------------------
 (2) _oledClear                                            4     4      0   10134
                                              8 BANK0      4     4      0
                         _oledGotoYX
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (3) _oledPutChar                                         17    17      0    4920
                                             38 COMRAM     4     4      0
                                              0 BANK1     13    13      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     752
                                             26 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _oledGotoYX                                           3     2      1    5016
                                             38 COMRAM     3     2      1
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_init                                            0     0      0    3983
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_command                                         2     2      0    3983
                                             36 COMRAM     2     2      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2872
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4989
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    3155
                                              0 BANK0      7     3      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                          _LEDsetBar
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    2556
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   12731
                                              5 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     8     0      8    3761
                                              0 BANK0      8     0      8
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                            10     2      8     494
                                             26 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 7     1      6     648
                                             26 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphB                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphA                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearTime
   _GetDataBarGraphA
   _GetDataBarGraphB
   _GetTime
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     _LEDsetBar (ARG)
       ___awdiv
     ___wmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   _Setupdisplay
     _OLED_init
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledClear
       _oledGotoYX
         _OLED_command
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   _Splash
     _oledGotoYX
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledPrint
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   ___wmul
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
   _updateComms
     _DataBarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     18      51       6       31.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     467       9        0.0%
DATA                 0      0     467      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Aug 29 09:48:05 2016

       __end_of_FastTransfer_buffer_flush 2B38                    i2_UART_buff_modulo_inc 2FAC  
        __end_of_TMR2_SetInterruptHandler 31C4                                         _i 00CF  
                                       _k 00D3                              _rx_array_inx 003D  
                            ___awdiv@sign 0020                       ___wmul@multiplicand 001F  
                LEDBsetBrightness@timeOut 013B                                Off_Led@led 001B  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l622 2332                                       l617 22C0  
                                     l925 273C                                       l696 07EE  
                                     l939 2994                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 31FA      FastTransfer_buffer_flush@clearBuffer 0025  
                         _TMR2_Initialize 3070                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
           i2UART_buff_modulo_inc@modulus 0003                              __CFG_LVP$OFF 000000  
                        __end_of_I2C1_ISR 0E6E                                      l1010 2CCA  
                                    l1124 15A2                                      l1334 2EB6  
                                    l1169 259C                                      l1266 2BEC  
                                    l4016 2F78                                      l6004 1F90  
                                    l6012 2C9E                                      l4156 1306  
                                    l6112 27E6                                      l6200 0F40  
                                    l7010 22B0                                      l6114 2816  
                                    l6018 2CB4                                      l6026 2CD0  
                                    l6132 283E                                      l6140 2230  
                                    l6028 2CD6                                      l6052 1C82  
                                    l4444 2EA2                                      l4436 2956  
                                    l7022 2316                                      l7014 22CA  
                                    l7110 16E4                                      l7030 15C0  
                                    l6230 0FCA                                      l6222 0FA8  
                                    l6310 178C                                      l6302 1720  
                                    l7024 232A                                      l7032 15EE  
                                    l6144 2262                                      l6216 0F84  
                                    l6208 0F62                                      l6064 1D06  
                                    l6048 1C78                                      l6080 1EB8  
                                    l6072 1E32                                      l6320 1804  
                                    l6312 1798                                      l6304 173A  
                                    l7018 22E0                                      l7050 161E  
                                    l6314 17C6                                      l6306 1756  
                                    l7052 1626                                      l6412 1C64  
                                    l6260 1054                                      l6252 1032  
                                    l6244 1010                                      l6172 0EB4  
                                    l6164 0E92                                      l6156 0E70  
                                    l6340 151E                                      l6316 17CC  
                                    l6308 1770                                      l6422 275A  
                                    l6238 0FEC                                      l6350 1572  
                                    l6326 1446                                      l6512 09AE  
                                    l6336 1508                                      l6328 146E  
                    receiveData@crcHolder 0145                                      l6530 24A6  
                                    l6434 2780                                      l6450 27B2  
                                    l7090 1686                                      l6282 10BC  
                                    l6274 109A                                      l6266 1078  
                                    l6194 0F1C                                      l6186 0EFA  
                                    l6178 0ED8                                      l6290 10E0  
                                    l6354 1592                                      l6610 01DA  
                                    l7170 21E6                                      l5900 2134  
                                    l6532 24D4                                      l6524 248C  
                                    l6436 2788                                      l6428 276A  
                                    l6516 0A8A                                      l6508 08F0  
                                    l7092 16B4                                      l6380 1B90  
                                    l6612 01F2                                      l6550 2504  
                                    l6454 27C0                                      l6446 27A8  
                                    l6438 278C                                      l6382 1B96  
                                    l6358 159A                                      l6630 0264  
                                    l6614 01F8                                      l6622 0232  
                                    l7158 215C                                      l6392 1C04  
                                    l5914 2C36                                      l6562 240C  
                                    l5922 2F46                                      l6394 1C34  
                                    l5906 2FA2                                      l6730 06DA  
                                    l6722 0672                                      l6650 02EE  
                                    l6642 0294                                      l6564 243A  
                                    l6556 23F0                                      l6804 2C46  
                                    l5932 18BE                                      l6732 06F4  
                                    l6724 068C                                      l6708 05F4  
                                    l6628 023E                                      l6582 246A  
                                    l5918 2F36                                      l5926 1852  
                                    l6734 070E                                      l6726 06A6  
                                    l6646 02C6                                      l6590 0104  
                                    l6496 0798                                      l6808 2C70  
                                    l5960 1FF6                                      l6736 075C  
                                    l6728 06C0                                      l6664 0428  
                                    l5890 20F8                                      l6498 07AE  
                                    l5962 200C                                      l5970 204E  
                                    l6770 26FA                                      l5946 2598  
                                    l6738 0778                                      l6690 054A  
                                    l6682 04E2                                      l6666 042E  
                                    l6658 038A                                      l6746 0784  
                                    l6594 0132                                      l6780 2BA0  
                                    l5964 2022                                      l5956 1FCA  
                                    l6692 0564                                      l6684 04FC  
                                    l6668 0442                                      l5894 2118  
                                    l5990 1F48                                      l5982 1F18  
                                    l5966 2038                                      l5958 1FE0  
                                    l6694 057E                                      l6686 0516  
                                    l6598 0136                                      l5896 2124  
                                    l6696 05CC                                      l6688 0530  
                                    l6786 2BBA                                      l5994 1F60  
                                    l5986 1F30                                      l5978 1F00  
                                    l6698 05E8                                      l6956 2350  
                                    l6958 237E                                      l6798 2BE4  
                                    l5998 1F78                                      l6976 23AE  
                                    l6978 23B6                                      STR_1 7FE3  
                                    STR_2 7FFC                                      STR_3 7FF6  
                                    STR_4 7FEE                                      _CRC8 2C98  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u3171 1304  
                                    u3540 2994                                      u3534 2976  
                                    u3535 2970                                      u7010 2484  
                                    u6130 1E12                                      u7004 0B2A  
                                    u7005 0B22                                      u6090 252C  
                                    u7070 23E8                                      u7208 0158  
                                    u7209 016C                                      i2l60 0BCA  
                                    u7308 0242                                      u7228 0176  
                                    u7148 00DE                                      u6508 1724  
                                    u7309 0256                                      u7229 018A  
                                    u7149 00F2                                      u7238 0190  
                                    u6518 173E                                      i2l71 0C86  
                                    i2l63 0C48                                      u7239 01A4  
                                    i2l72 0C96                                      u6608 148E  
                                    u7328 0268                                      u7248 01AA  
                                    u7168 010E                                      u6528 175A  
                                    i2l65 0C50                                      u6705 2AA4  
                                    u6609 14A2                                      u7329 027E  
                                    u7249 01BE                                      u7169 0122  
                                    i2l90 0DB4                                      i2l82 0D1A  
                                    i2l66 0C58                                      u6618 14AA  
                                    u6538 1774                                      u6715 2AC0  
                                    u6619 14BE                                      i2l76 0D06  
                                    u7700 2C66                                      u7620 26D0  
                                    u6628 14C6                                      u7508 0582  
                                    u7348 0298                                      u7268 01DE  
                                    u7188 013A                                      u6548 179C  
                                    u6629 14DA                                      u7381 032E  
                                    u7349 02AC                                      u7189 014E  
                                    i2l94 0E0A                                      i2l86 0D70  
                                    u7710 2C90                                      u7518 05D0  
                                    u7438 04CC                                      u7358 02CA  
                                    u8270 2174                                      u7359 02DE  
                                    u6904 0814                                      u7608 0712  
                                    u7448 04E6                                      u6568 17EC  
                                    u8280 21E4                                      i2l89 0DA2  
                                    u6905 080C                                      u6914 088C  
                                    u7650 273C                                      u6578 144A  
                                    u7618 0760                                      u7538 065C  
                                    u7458 0500                                      u6498 170A  
                                    u6915 0884                                      u7707 2C5C  
                                    u6579 145E                                      u7644 2718  
                                    u7548 0676                                      u7468 051A  
                                    u7717 2C86                                      u7645 2712  
                                    u6934 091E                                      u6598 1472  
                                    u7558 0690                                      u7478 0534  
                                    u6935 0916                                      u6599 1486  
                                    u6944 0942                                      u6880 07E6  
                                    u7568 06AA                                      u7488 054E  
                                    u6945 093A                                      u7578 06C4  
                                    u7498 0568                                      u6964 09DA  
                                    u7588 06DE                                      u6965 09D2  
                                    u8477 2EA8                                      u6974 0A0E  
                                    u7598 06F8                                      u6975 0A06  
                                    u6994 0AB8                                      u7970 22A6  
                                    u6995 0AB0                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _Buff 00F0  
                __end_of_GetDataBarGraphA 31D8                  __end_of_GetDataBarGraphB 31CE  
                           oledPutChar@ch 0144                                      _main 213E  
                         _TMR0_StartTimer 31F2                                      _time 003F  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 0021                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                         OLED_command@com 0025                                      prodh 000FF4  
                                    prodl 000FF3           __end_of_FastTransfer_buffer_put 1446  
                                    start 00D0                             __CFG_IESO$OFF 000000  
                         __end_of_GetTime 31E0                              ___param_bank 000010  
                         __end_of_Off_Led 1FC8            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 26BE  
                      __size_of_LEDsetBar 0406                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 30B0                                _i2c1_state 0038  
                        __end_of_CRCcheck 15A4                        __size_of_OLED_init 008C  
          __size_of_OSCILLATOR_Initialize 000E                 I2C1_MasterTRBInsert@count 001B  
           __end_of_OSCILLATOR_Initialize 31B0                 I2C1_MasterTRBInsert@pflag 001F  
                        LEDbegin@i2c_addr 0143                        crcBufS_put@address 001D  
                        __end_of_LEDbegin 23D8                                     ?_main 0001  
                         __end_of___awdiv 27CA                         __end_of_I2C1_Stop 2DAE  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                                   _T2CON 000FBA                                     _LATA3 007C4B  
                                   _LATC1 007C59                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     _LATE0 007C68  
                                   _LATE1 007C69                                     _LATE2 007C6A  
                          __CFG_DEBUG$OFF 000000                                     i2l501 120E  
                                   i2l281 0066                                     i2l283 0072  
                                   i2l291 0094                                     i2l285 007E  
                                   i2l277 004E                                     i2l470 1156  
                                   i2l463 113E                                     i2l287 008A  
                                   i2l279 005A                                     i2l456 12A8  
                                   i2l473 1162                                     i2l467 114A  
                                   i2l492 11EA                                     i2l476 116E  
                                   i2l485 11D2                                     i2l495 11F6  
                                   i2l479 117A                                     i2l489 11DE  
                                   i2l498 1202                           ___awdiv@counter 001F  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _Delay 2E98  
            __end_of_I2C1_BusCollisionISR 31FE                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                         ?_buttonsCollector 0021  
                    _EUSART1_Transmit_ISR 2ECC                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                       ??_I2C1_Initialize 001B                          __end_of_TMR0_ISR 2E98  
                        __end_of_TMR2_ISR 31E8                             __CFG_WRTB$OFF 000000  
                            ?_LEDsetValue 00F2                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                                     _begin 2B38  
                          __CFG_EBTRB$OFF 000000                        ??_buttonsCollector 0023  
                                   _group 002B                           __end_of_memmove 2290  
                      __CFG_MCLRE$EXTMCLR 000000                           __end_of_picture 7FE3  
                                   pclath 000FFA                              ?_oledPutChar 0001  
                                   tablat 000FF5                             ??_Receive_get 0026  
                    __size_of_crcBufS_get 00E2                                     plusw2 000FDB  
                          begin@stuffpeek 0144                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 31EE                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0021  
                            __end_of_CRC8 2CE2                           CRCcheck@SentCRC 00F2  
                         __initialization 2846                     I2C1_MasterWrite@pdata 00F2  
                   I2C1_MasterWrite@pflag 00F8                __end_of_EUSART1_Initialize 2E26  
                            __end_of_main 21EC                    __size_of_DataBarGraphs 0012  
                              ToSend@what 00F2                                    ??_CRC8 001E  
                           ?_LEDblinkRate 0025                   __end_of_TMR2_Initialize 3092  
                               ??_ADC_ISR 0001               ?_INTERRUPT_InterruptManager 0001  
                        __end_of_OledFont 7ED3                        __size_of_ClearTime 0006  
                             _i2c1_object 00B8                  _TMR2_SetInterruptHandler 31BA  
                                  ??_main 002B                             __activetblptr 000002  
                        __end_of_Send_put 2F2C                 __size_ofi2_UART_buff_size 0016  
                                  ?_Delay 001B                     ?_EUSART1_Transmit_ISR 0001  
           FastTransfer_buffer_put@towhat 0024                             ?_Receive_peek 0001  
                                  ?_begin 0139                   __end_of_TMR0_StartTimer 31F6  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 001B  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                         __end_of_LEDsetBar 0B8E  
                         i2_UART_buff_get 25A0                                    _RC1STA 000FAB  
                                  i2l1200 30D6                           i2_UART_buff_put 194C  
                                  i2l1169 262E                            __CFG_WDTEN$OFF 000000  
                                  i2l5114 19D8                                    i2l5108 196C  
                                  Delay@x 001E                                    i2l5128 262A  
             UART_buff_modulo_inc@modulus 001D                                    i2l4612 2FCC  
                                  i2l5274 2EF6                                    i2l4730 1AB6  
                                  i2l5282 2E70                                    i2l4732 1AD0  
                                  i2l4724 1A68                                    i2l5292 2E92  
                                  i2l4734 1AEA                                    i2l4726 1A82  
                                  i2l4742 1B38                                    i2l5286 2E80  
                                  i2l4750 1122                                    i2l4736 1B04  
                                  i2l4728 1A9C                                    i2l4738 1B1E  
                                  i2l4762 121A                                    i2l4770 129C  
                                  i2l4772 12B8                                    i2l4764 1250  
                                  i2l4756 1186                                    i2l6470 3020  
                                  i2l4758 11BC                                    i2l6464 2DA8  
                                  i2l4768 126C                            _GetButtonState 2FD6  
                                  i2l6910 0DBC                                    i2l6830 0C2A  
                                  i2l6930 0E1C                                    i2l6914 0DC4  
                                  i2l6842 0C68                                    i2l6926 0E10  
                                  i2l6862 0CC4                                    i2l6928 0E14  
                                  i2l6848 0C80                                    i2l6936 0E28  
                                  i2l6890 0D2C                                    i2l6882 0D14  
                                  i2l6898 0D78                                    _RCREG1 000FAE  
                       __end_of_OLED_init 26BE                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                 ??_GetTime 001D  
                                  _TX1STA 000FAC                                    _TXREG1 000FAD  
                               ??_Off_Led 001D                        __size_of_SetLEDOut 02AA  
                       ?_I2C1_MasterWrite 00F2                            __CFG_XINST$OFF 000000  
                                  _ToSend 30EC                        ??_I2C1_MasterWrite 0025  
                     __end_of_Receive_get 31A2                          crcBufS_get@_this 001B  
             ??_FastTransfer_buffer_flush 0027                                    _Splash 299E  
                          _p_i2c1_current 00D5                             _output_buffer 0500  
                        crcBufS_get@space 001E                                    ___wmul 3026  
                               ??___awdiv 001F                                 CRC8@tempI 0020  
                         oledPutChar@base 0142                            __CFG_STVREN$ON 000000  
                          ??_LEDblinkRate 0028                ??_I2C1_MasterWriteTRBBuild 0023  
                        ?_TMR0_Initialize 0001                                    _setLED 1FC8  
                                  _memset 2F2C                                 ?_I2C1_ISR 0001  
                                  clear_0 284C                                    clear_1 2858  
                                  clear_2 2864                                    clear_3 2870  
                                  clear_4 287C                                    clear_5 2888  
                                  clear_6 2894                          ___awdiv@quotient 0021  
                           ?_OLED_command 0001                                    _rx_len 003E  
                        __end_of_sendData 1832                              __pdataCOMRAM 0044  
                               ??_memmove 0021                             Send_put@_data 0026  
                            __mediumconst 7BD2                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2FAC                             _DataBarGraphA 00C3  
                           _DataBarGraphB 00C5                             _DataBarGraphs 3162  
                 __end_of_TMR2_StartTimer 31F2  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2FFE             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 013D             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 28BA  
                       __end_of_ClearTime 31EE                                __accesstop 0060  
                 __end_of__initialization 28AC                                 ?_CRCcheck 0001  
                   __end_of_TMR2_CallBack 12DE                        ?_SYSTEM_Initialize 0001  
                               ?_LEDbegin 0001                             ___rparam_used 000001  
                 ?i2_UART_buff_modulo_inc 0001                            _i2c1_trb_count 00D1  
                            ?_updateComms 0001                             __end_of_Delay 2ECC  
                   _I2C1_FunctionComplete 2FFE                      _I2C1_BusCollisionISR 31FC  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 00F4                        _crcBufS_status_put 1E28  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2B96                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2F82  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2F58  
                              ??_I2C1_ISR 0004                            ??_OLED_command 0025  
                        ?_TMR2_Initialize 0001              FastTransfer_buffer_put@_this 0021  
                             ToSend@where 002A                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 25A0  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 194C  
                       __end_of_SetLEDOut 1118                                   ??_Delay 001D  
                          LEDbegin@status 0144                   __end_ofi2_UART_buff_get 2632  
                 __end_ofi2_UART_buff_put 1A66               __end_of_EUSART1_Receive_ISR 30EC  
               _FastTransfer_buffer_flush 2AD6                                   CRC8@crc 0021  
                          ?_DataBarGraphs 001B                                   CRC8@len 001D  
                                 CRC8@sum 001E                                   ??_begin 0023  
                        ?_TMR0_StartTimer 0001                           ?_GetButtonState 001B  
               __end_of_SYSTEM_Initialize 292E                  __end_of_handleIndicators 2746  
                  receiveData@holder_2531 0142                       _addressErrorCounter 00C7  
                    __size_of_LEDsetValue 00A4                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                              __pbssBANK5 0500                           __CFG_PLLCFG$OFF 000000  
                             _Receive_get 3194                                ??_CRCcheck 0027  
                       ?_GetDataBarGraphA 001B                         ?_GetDataBarGraphB 001B  
                    ??_crcBufS_status_put 001F            __end_ofi2_UART_buff_modulo_inc 2FD6  
                              __pnvCOMRAM 0042                         begin@givenAddress 013C  
                    __size_of_oledPutChar 00F2                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 0028  
                 __size_of_UART_buff_size 0016                        __size_of_oledClear 0058  
                      ??_GetDataBarGraphA 001D                        ??_GetDataBarGraphB 001D  
                               ?_Send_put 0001                     ?_I2C1_BusCollisionISR 0001  
                      __size_of_oledPrint 0054                      __size_of_receiveData 06B4  
                                 ?_ToSend 00F2                        __CFG_CCP2MX$PORTC1 000000  
                                 ?_Splash 0001                  __size_of_LEDwriteDisplay 014A  
                                 ?___wmul 001D                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2DAE  
                                 _ADC_ISR 31F6                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               TMR0_ISR@x 0005                   __size_of_ADC_Initialize 0018  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 314C  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2D6C                         _Receive_available 3120  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 00F2  
                         _ReadButtonState 1A66                       _receiveArrayAddress 00D7  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 013D  
                    __end_of_LEDblinkRate 2474             I2C1_MasterTRBInsert@ptrb_list 001D  
                                 _GetTime 31D8                                   _Off_Led 1EFE  
                     ??_Receive_available 001F                                 ?_sendData 0001  
                       _alignErrorCounter 00C9                           __CFG_PWRTEN$OFF 000000  
               __size_of_buttonsCollector 0070                    ?_I2C1_FunctionComplete 0001  
                              ??_Send_put 0026                                   __Hparam 0000  
           __size_of_I2C1_MasterTRBInsert 00B8                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 001D                           __size_of_ToSend 001C  
                      _p_i2c1_trb_current 002D                      __end_of_Receive_peek 3194  
                               _AKNAKsend 0036                           __size_of_Splash 006A  
                                 ___awdiv 2746                      _UART_buff_modulo_inc 2F82  
                         __size_of___wmul 0026                                   _calc_CS 0037  
                                 __pcinit 2846                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        oledPutChar@bytes 0139                          i2UART_buff_get@c 000B  
                           ?_Setupdisplay 0001                                   __ptext0 213E  
                                 __ptext1 2E26                                   __ptext2 2CE2  
                                 __ptext3 16EE                                   __ptext4 1D50  
                                 __ptext5 2AD6                                   __ptext6 292E  
                                 __ptext7 2FD6                                   __ptext8 30EC  
                                 __ptext9 12DE                                _oledGotoYX 2A72  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 31A2                 __end_of_Receive_available 3136  
                               _T2CONbits 000FBA                           ??_DataBarGraphs 001F  
                                 _memmove 21EC                   _FastTransfer_buffer_put 12DE  
                       __end_of_oledClear 2BEE                     CRCcheck@calculatedCRC 00F3  
                      _EUSART1_Initialize 2DEA                          ?i2_UART_buff_get 0007  
                ??_PIN_MANAGER_Initialize 001B                                   _picture 7ED3  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
                       __end_of_oledPrint 2C98              crcBufS_status_put@wantedTime 0023  
                                 _timeOut 00DD                            TMR2_CallBack@i 0003  
                           ??_crcBufS_get 001F                             ??_crcBufS_put 0020  
              __size_of_SYSTEM_Initialize 0074                      I2C1_ISR@pi2c_buf_ptr 00C1  
                    end_of_initialization 28AC                                 Delay@wait 001B  
                     ?_EUSART1_Initialize 0001                   LEDwriteDisplay@i2c_addr 014D  
                               _LED_array 0088                              oledClear@col 00FC  
                    __end_of_OLED_command 2846                              oledClear@row 00FA  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7BD2                                 _LEDsetBar 0788  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2DEA                                 _OLED_init 2632  
                   ?_UART_buff_modulo_inc 001B                      __size_of_updateComms 003A  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                _respondECU 2CE2  
                   ReadButtonState@btnnum 0001                        OLED_command@status 0026  
                        begin@stufftosend 013E                       CRCcheck@arrayHolder 00F4  
                            LEDsetValue@k 00F7                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 013B                            ??_Setupdisplay 002B  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                               _PORTDbits 000F83                         ??_LEDwriteDisplay 0025  
                 __end_of_ReadButtonState 1B7C                 __size_of_I2C1_MasterWrite 0056  
                  _dataAdressErrorCounter 00CD                         __size_of_I2C1_ISR 02E0  
                              _rx_address 003C                                 _TRISAbits 000F92  
                               _TRISCbits 000F94                   LEDBsetBrightness@status 013D  
       I2C1_ISR@i2c_10bit_address_restart 0035                       LEDbegin@writeBuffer 013E  
                            begin@maxSize 013B        __size_of_FastTransfer_buffer_flush 0062  
                   i2UART_buff_size@_this 0001                            _UART_buff_init 30B0  
                          _UART_buff_peek 304C                            _UART_buff_size 3136  
                     __end_of_crcBufS_get 1D50                                ?_LEDsetBar 0023  
                     __end_of_crcBufS_put 1E28                                ?_OLED_init 0001  
                 I2C1_MasterWrite@address 00F6                         __size_of_CRCcheck 015E  
                               _ClearTime 31E8                 LEDBsetBrightness@i2c_addr 0027  
                       __size_of_LEDbegin 00A4                             _moduleAddress 003A  
                    _timer0ReloadVal16bit 0042                                CRCcheck@rt 00F7  
                          __end_of_ToSend 3108              __end_of_INTERRUPT_Initialize 3186  
    __end_of_TMR2_DefaultInterruptHandler 31FC     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 31FA                            __end_of_Splash 2A08  
                         _crcErrorCounter 00CB                            __end_of___wmul 304C  
                 I2C1_MasterWrite@trBlock 00E6                         crcBufS_put@oldCRC 001E  
                           __pidataCOMRAM 31FE                         __size_of_TMR0_ISR 0038  
                I2C1_Stop@completion_code 0003                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 3108                 ??_FastTransfer_buffer_put 0026  
                             ?_oledGotoYX 0027                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_setLED 2086                            __end_of_memset 2F58  
                       crcBufS_put@status 001F                   buttonsCollector@sendVal 0026  
                            receiveData@r 0149                __size_of_Receive_available 0016  
                            receiveData@u 0147                          ??_GetButtonState 001D  
                       _LEDBsetBrightness 2474                       start_initialization 2846  
                   __size_of_LEDblinkRate 009C                               ??_I2C1_Stop 0001  
                __size_of_TMR0_Initialize 001E           __size_of_PIN_MANAGER_Initialize 006A  
                   crcBufS_get@wantedTime 0025                        ?_LEDBsetBrightness 0025  
                               _SetLEDOut 0E6E         __size_of_I2C1_MasterWriteTRBBuild 0044  
                       ?_handleIndicators 0025                 ?_I2C1_MasterWriteTRBBuild 001B  
                  __end_of_UART_buff_init 30CE                    __end_of_UART_buff_peek 3070  
                          UART_buff_get@c 0025                    __end_of_UART_buff_size 314C  
                            ?_Receive_get 0001                            UART_buff_put@c 0023  
                      ??_handleIndicators 0027                           LEDbegin@timeOut 0141  
                     ??_LEDBsetBrightness 0028                     __size_of_Receive_peek 000E  
                        _buttonsCollector 292E                  __end_ofi2_UART_buff_size 3162  
                              ?_ClearTime 0001                          ?_I2C1_Initialize 0001  
                                ??_ToSend 002A                    ??_UART_buff_modulo_inc 001F  
                                CRC8@data 001B                                  ??_Splash 002B  
                         crcBufS_get@time 001D                         __size_of_Send_put 002E  
                             ?_respondECU 0001                                  ??___wmul 0021  
              LEDwriteDisplay@writeBuffer 0139                    __end_of_ADC_Initialize 3120  
                              LEDsetBar@a 0029                                LEDsetBar@c 0027  
                                ?_ADC_ISR 0001                                  ??_setLED 001D  
                                ??_memset 0021                              _LEDblinkRate 23D8  
                       handleIndicators@i 00F2                 __size_of_GetDataBarGraphA 000A  
               __size_of_GetDataBarGraphB 000A             ?_TMR2_DefaultInterruptHandler 0001  
               __end_of_LEDBsetBrightness 250E              I2C1_MasterWriteTRBBuild@ptrb 001B  
                        ?_ReadButtonState 0001                    __size_of_TMR2_CallBack 01C6  
                             __pbssCOMRAM 002B             __size_of_EUSART1_Transmit_ISR 0032  
                           __pcstackBANK0 00F2                             __pcstackBANK1 0139  
                              oledPrint@s 00FA                             ??_LEDsetValue 00F6  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 00EB  
                   LEDwriteDisplay@status 0150                     __size_of_OLED_command 007C  
                            _Receive_peek 3186                                ?_SetLEDOut 001F  
                     UART_buff_init@_this 0023                               _crcBufS_get 1C6E  
                     UART_buff_peek@_this 001B                               _crcBufS_put 1D50  
                           ??_oledPutChar 0027                          LEDsetValue@color 00F4  
                         ?_UART_buff_init 0023                           ?_UART_buff_peek 001B  
                         ?_UART_buff_size 001B                          LEDsetValue@value 00F2  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                    __end_of_Setupdisplay 31BA                                  ?_GetTime 001B  
                           ??_receiveData 0139               __size_of_crcBufS_status_put 00D6  
                              sendData@CS 00F3                                  ?_Off_Led 001B  
                             ??_LEDsetBar 0139                       __size_of_oledGotoYX 0064  
                               __pnvBANK0 00FE                  __size_of_TMR0_StartTimer 0004  
                             ??_OLED_init 0027                    __size_of_UART_buff_get 0092  
                  __size_of_UART_buff_put 011A                    _PIN_MANAGER_Initialize 2A08  
                       __size_of_sendData 0144                                 __pintcode 0008  
                           __pmediumconst 7BD2                                  ?___awdiv 001B  
                         ?_ADC_Initialize 0001                                  _I2C1_ISR 0B8E  
            ??_INTERRUPT_InterruptManager 000D              LEDBsetBrightness@writeBuffer 0139  
                    i2UART_buff_get@_this 0007                              _OLED_command 27CA  
                        _I2C1_MasterWrite 2BEE                                  _BAUD1CON 000FB8  
            __end_of_I2C1_MasterTRBInsert 213E                                  ?_memmove 001B  
                       buttonsCollector@i 0028                            __size_of_Delay 0034  
                               _butnarray 00B0                            __size_of_begin 005E  
                               _oledClear 2B96                       __size_of_respondECU 0046  
                    _INTERRUPT_Initialize 3174                      GetButtonState@btnnum 001B  
                               _oledPrint 2C44                              _receiveArray 0100  
                             _LEDNUM_ENAB 0098                    I2C1_MasterRead@trBlock 00E1  
                       ??_TMR0_Initialize 001B                       __end_of_LEDsetValue 2334  
                                _CRCcheck 1446                            ___wmul@product 0021  
                                _LATCbits 000F8B                                  _LEDState 00A4  
                     UART_buff_size@_this 001B                             _TMR2_CallBack 1118  
                                _IPR1bits 000F9F                                  _LEDbegin 2334  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                             LEDblinkRate@b 0025  
                __size_of_TMR2_StartTimer 0004                               ??_ClearTime 001B  
                     __end_of_oledPutChar 1C6E                           _LEDwriteDisplay 15A4  
     __size_of_INTERRUPT_InterruptManager 00C8                                  i2u400_40 1AFE  
                                i2u400_46 1B00                                  i2u401_40 1B18  
                                i2u401_46 1B1A                                  i2u402_40 1B32  
                                i2u410_40 116A                                  i2u402_46 1B34  
                                i2u420_40 11F2                                  i2u412_40 1176  
                                i2u404_40 1146                                  i2u422_40 11FE  
                                i2u414_40 1182                                  i2u406_40 1152  
                                i2u430_48 12C8                                  i2u424_40 120A  
                                i2u416_40 11DA                                  i2u408_40 115E  
                                _PIR1bits 000F9E                                  i2u426_40 1216  
                                i2u418_40 11E6                                  _PIR2bits 000FA1  
                                i2u518_40 25BE                                  i2u538_40 2EE6  
                                i2u395_40 1A7C                                  i2u395_46 1A7E  
                                i2u396_40 1A96                                  i2u396_46 1A98  
                                i2u397_40 1AB0                                  i2u397_46 1AB2  
                                i2u398_40 1ACA                                  i2u398_46 1ACC  
                                i2u399_40 1AE4                                  i2u399_46 1AE6  
                     begin@stuffavailable 0142                                  i2u787_40 0D98  
                                i2u787_47 0D8E                                  i2u789_40 0DE8  
                                i2u789_47 0DDC                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                       __end_of_receiveData 0788  
                                _SSP1CON1 000FC6                                  _SSP1CON3 000FCB  
                                _TMR0_ISR 2E60                                  _TMR2_ISR 31E0  
                                _SSP1STAT 000FC7            FastTransfer_buffer_flush@_this 0023  
                            _input_buffer 0400                                 _rx_buffer 0300  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 001D                __size_of_LEDBsetBrightness 009A  
                    i2UART_buff_put@_this 0007                             _UART_buff_get 250E  
                           _UART_buff_put 1832            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 001B  
                   __end_of_DataBarGraphs 3174                  ??i2_UART_buff_modulo_inc 0005  
                             ??_SetLEDOut 0023                                ?_oledClear 0001  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                              ?_oledPrint 00FA                         _sendStructAddress 00D9  
                __size_ofi2_UART_buff_get 0092                         ??_TMR2_Initialize 001D  
                __size_ofi2_UART_buff_put 011A                                  _OledFont 7BD3  
                          ?_TMR2_CallBack 0001                          __size_of_GetTime 0008  
                           ??_updateComms 002B                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 00CA                                  __Hrparam 0000  
                                _Send_put 2EFE             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 00BF  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 0139  
                 ??_OSCILLATOR_Initialize 001B                                 memmove@d1 001B  
                               memmove@s1 001D                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
             __size_of_EUSART1_Initialize 003C                          _GetDataBarGraphA 31CE  
                        _GetDataBarGraphB 31C4                       begin@stufftoreceive 0140  
        __end_of_I2C1_MasterWriteTRBBuild 2D6C                              ??_oledGotoYX 0028  
                              _ANSELAbits 000F38                                _ANSELCbits 000F3A  
                          ?_UART_buff_get 0021                            ?_UART_buff_put 0021  
                             CRC8@extract 001F                  __end_of_buttonsCollector 299E  
                               sendData@i 00F4                          __size_of_memmove 00A4  
                     I2C1_ISR@i2c_address 0040                               _LEDsetValue 2290  
                crcBufS_status_put@status 001E                                  __ptext10 2F58  
                                __ptext11 2E98                                  __ptext20 3194  
                                __ptext12 00D4                                  __ptext21 250E  
                                __ptext13 2EFE                     __size_of_Setupdisplay 000A  
                                __ptext30 3162                                  __ptext22 2F82  
                                __ptext14 1832                                  __ptext31 3026  
                                __ptext23 3120                                  __ptext15 3186  
                                __ptext40 27CA                                  __ptext32 299E  
                                __ptext24 3136                                  __ptext16 304C  
                                __ptext41 28BA                                  __ptext33 2C44  
                                __ptext25 2C98                                  __ptext17 1446  
                                __ptext50 3174                                  __ptext42 2B38  
                                __ptext34 31B0                                  __ptext26 26BE  
                                __ptext18 1E28                                  __ptext51 2DAE  
                                __ptext43 3070                                  __ptext35 2B96  
                                __ptext27 0E6E                                  __ptext19 1C6E  
                                __ptext60 2334                                  __ptext52 2DEA  
                                __ptext44 31EE                                  __ptext36 1B7C  
                                __ptext28 1FC8                                  __ptext61 23D8  
                                __ptext53 30B0                                  __ptext45 31BA  
                                __ptext37 21EC                                  __ptext29 1EFE  
                                __ptext62 2474                                  __ptext54 2F2C  
                                __ptext46 3092                                  __ptext38 2A72  
                                __ptext71 31E0                                  __ptext63 2BEE  
                                __ptext55 3108                                  __ptext47 31F2  
                                __ptext39 2632                                  __ptext80 2ECC  
                                __ptext72 1118                                  __ptext64 2D28  
                                __ptext56 15A4                                  __ptext48 2A08  
                                __ptext81 314C                                  __ptext73 31FA  
                                __ptext65 2086                                  __ptext57 2290  
                                __ptext49 31A2                                  __ptext82 25A0  
                                __ptext74 2E60                                  __ptext66 31D8  
                                __ptext58 0788                                  __ptext83 30CE  
                                __ptext75 1A66                                  __ptext67 31C4  
                                __ptext59 2746                                  __ptext84 194C  
                                __ptext76 0B8E                                  __ptext68 31CE  
                                __ptext85 2FAC                                  __ptext77 2D6C  
                                __ptext69 31E8                                  __ptext86 31F6  
                                __ptext78 2FFE                                  __ptext87 0000  
                                __ptext79 31FC                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                         oledPutChar@status 0145  
                           __size_of_CRC8 004A                          oledGotoYX@Column 0027  
                                begin@ptr 0139                   EUSART1_Receive_ISR@data 000C  
                 __end_of_LEDwriteDisplay 16EE                               _oledPutChar 1B7C  
                           _returnAddress 003B                             __size_of_main 00AE  
                             _receiveData 00D4                            _Transmit_stall 0044  
                                _sendData 16EE                        __end_of_oledGotoYX 2AD6  
                    _I2C1_MasterTRBInsert 2086                         ?i2_UART_buff_size 0001  
                              _RC1STAbits 000FAB                      LEDblinkRate@i2c_addr 0027  
                            ??_respondECU 002B                        ??i2_UART_buff_size 0003  
                                int$flags 0045                 __size_of_handleIndicators 0088  
           handleIndicators@oldIndicators 00DF                              _serial_write 0033  
                       ??_TMR2_StartTimer 001B                       __end_of_updateComms 2E60  
      __end_of_INTERRUPT_InterruptManager 00D0                _INTERRUPT_InterruptManager 0008  
                     _EUSART1_Receive_ISR 30CE                         receiveData@holder 013F  
                            _Setupdisplay 31B0                        LEDBsetBrightness@b 0025  
                              _INTCONbits 000FF2                 UART_buff_modulo_inc@value 001B  
      handleIndicators@receivedIndicators 0025                          ??_UART_buff_init 0025  
                        ??_UART_buff_peek 001D                          ??_UART_buff_size 001D  
                  ??_INTERRUPT_Initialize 001B                                  memset@p1 001B  
                        _serial_available 002F                                  memmove@d 0023  
                                memmove@n 001F                                  memmove@s 0025  
                             ??_oledClear 002B           __size_ofi2_UART_buff_modulo_inc 002A  
                            ?_crcBufS_get 001B                              ?_crcBufS_put 001B  
                             ??_oledPrint 002B                                  intlevel2 0000  
                 crcBufS_status_put@_this 001B                           ??_TMR2_CallBack 0001  
                      __end_of_respondECU 2D28                      ?_EUSART1_Receive_ISR 0001  
  FastTransfer_buffer_modulo_inc@my_value 001F            FastTransfer_buffer_put@towhere 0023  
                 ?_PIN_MANAGER_Initialize 0001                  __end_of_I2C1_MasterWrite 2C44  
          __size_of_I2C1_FunctionComplete 0028             __end_of_I2C1_FunctionComplete 3026  
                   ?_I2C1_MasterTRBInsert 001B              __end_of_EUSART1_Transmit_ISR 2EFE  
                             _ring_buffer 0200                          ??_ADC_Initialize 001B  
              ?_FastTransfer_buffer_flush 0023                         ??i2_UART_buff_get 0009  
                             _serial_peek 00DB                               _serial_read 0031  
                       ??i2_UART_buff_put 000A                  ?_FastTransfer_buffer_put 0021  
           __size_of_UART_buff_modulo_inc 002A                  __size_of_I2C1_Initialize 003C  
                         ??_UART_buff_get 0023                           ??_UART_buff_put 0024  
   FastTransfer_buffer_modulo_inc@modulus 001D                          DataBarGraphs@BGA 001B  
                        DataBarGraphs@BGB 001D                    crcBufS_status_put@time 001D  
                         _TMR0_Initialize 3092                 receiveData@crcHolder_2532 0146  
                _I2C1_MasterWriteTRBBuild 2D28                         __CFG_T3CMX$PORTC0 000000  
                          _maxDataAddress 0039                  __size_of_ReadButtonState 0116  
              __end_of_crcBufS_status_put 1EFE                     ??_EUSART1_Receive_ISR 000C  
          __end_of_PIN_MANAGER_Initialize 2A72          ??_FastTransfer_buffer_modulo_inc 001F  
         ?_FastTransfer_buffer_modulo_inc 001B                             oledGotoYX@Row 0029  
                        ?_LEDwriteDisplay 0001                   __size_of_GetButtonState 0028  
                      __size_of_I2C1_Stop 0042                             _displaybuffer 0060  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 00FE  
                             _updateComms 2E26  
