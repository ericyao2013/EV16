

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Oct 01 13:50:08 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   109  0000                     
   110                           	psect	idataCOMRAM
   111  003198                     __pidataCOMRAM:
   112                           	opt stack 0
   113                           
   114                           ;initializer for _Transmit_stall
   115  003198  01                 	db	1
   116                           
   117                           	psect	mediumconst
   118  007BD2                     __pmediumconst:
   119                           	opt stack 0
   120  007BD2  00                 	db	0
   121  007BD3                     _OledFont:
   122                           	opt stack 0
   123  007BD3  00                 	db	0
   124  007BD4  00                 	db	0
   125  007BD5  00                 	db	0
   126  007BD6  00                 	db	0
   127  007BD7  00                 	db	0
   128  007BD8  00                 	db	0
   129  007BD9  00                 	db	0
   130  007BDA  00                 	db	0
   131  007BDB  00                 	db	0
   132  007BDC  00                 	db	0
   133  007BDD  5F                 	db	95
   134  007BDE  00                 	db	0
   135  007BDF  00                 	db	0
   136  007BE0  00                 	db	0
   137  007BE1  00                 	db	0
   138  007BE2  00                 	db	0
   139  007BE3  00                 	db	0
   140  007BE4  00                 	db	0
   141  007BE5  07                 	db	7
   142  007BE6  00                 	db	0
   143  007BE7  07                 	db	7
   144  007BE8  00                 	db	0
   145  007BE9  00                 	db	0
   146  007BEA  00                 	db	0
   147  007BEB  00                 	db	0
   148  007BEC  14                 	db	20
   149  007BED  7F                 	db	127
   150  007BEE  14                 	db	20
   151  007BEF  7F                 	db	127
   152  007BF0  14                 	db	20
   153  007BF1  00                 	db	0
   154  007BF2  00                 	db	0
   155  007BF3  00                 	db	0
   156  007BF4  24                 	db	36
   157  007BF5  2A                 	db	42
   158  007BF6  7F                 	db	127
   159  007BF7  2A                 	db	42
   160  007BF8  12                 	db	18
   161  007BF9  00                 	db	0
   162  007BFA  00                 	db	0
   163  007BFB  00                 	db	0
   164  007BFC  23                 	db	35
   165  007BFD  13                 	db	19
   166  007BFE  08                 	db	8
   167  007BFF  64                 	db	100
   168  007C00  62                 	db	98
   169  007C01  00                 	db	0
   170  007C02  00                 	db	0
   171  007C03  00                 	db	0
   172  007C04  36                 	db	54
   173  007C05  49                 	db	73
   174  007C06  55                 	db	85
   175  007C07  22                 	db	34
   176  007C08  50                 	db	80
   177  007C09  00                 	db	0
   178  007C0A  00                 	db	0
   179  007C0B  00                 	db	0
   180  007C0C  00                 	db	0
   181  007C0D  05                 	db	5
   182  007C0E  03                 	db	3
   183  007C0F  00                 	db	0
   184  007C10  00                 	db	0
   185  007C11  00                 	db	0
   186  007C12  00                 	db	0
   187  007C13  00                 	db	0
   188  007C14  1C                 	db	28
   189  007C15  22                 	db	34
   190  007C16  41                 	db	65
   191  007C17  00                 	db	0
   192  007C18  00                 	db	0
   193  007C19  00                 	db	0
   194  007C1A  00                 	db	0
   195  007C1B  00                 	db	0
   196  007C1C  41                 	db	65
   197  007C1D  22                 	db	34
   198  007C1E  1C                 	db	28
   199  007C1F  00                 	db	0
   200  007C20  00                 	db	0
   201  007C21  00                 	db	0
   202  007C22  00                 	db	0
   203  007C23  00                 	db	0
   204  007C24  08                 	db	8
   205  007C25  2A                 	db	42
   206  007C26  1C                 	db	28
   207  007C27  2A                 	db	42
   208  007C28  08                 	db	8
   209  007C29  00                 	db	0
   210  007C2A  00                 	db	0
   211  007C2B  00                 	db	0
   212  007C2C  08                 	db	8
   213  007C2D  08                 	db	8
   214  007C2E  3E                 	db	62
   215  007C2F  08                 	db	8
   216  007C30  08                 	db	8
   217  007C31  00                 	db	0
   218  007C32  00                 	db	0
   219  007C33  00                 	db	0
   220  007C34  A0                 	db	160
   221  007C35  60                 	db	96
   222  007C36  00                 	db	0
   223  007C37  00                 	db	0
   224  007C38  00                 	db	0
   225  007C39  00                 	db	0
   226  007C3A  00                 	db	0
   227  007C3B  00                 	db	0
   228  007C3C  08                 	db	8
   229  007C3D  08                 	db	8
   230  007C3E  08                 	db	8
   231  007C3F  08                 	db	8
   232  007C40  08                 	db	8
   233  007C41  00                 	db	0
   234  007C42  00                 	db	0
   235  007C43  00                 	db	0
   236  007C44  60                 	db	96
   237  007C45  60                 	db	96
   238  007C46  00                 	db	0
   239  007C47  00                 	db	0
   240  007C48  00                 	db	0
   241  007C49  00                 	db	0
   242  007C4A  00                 	db	0
   243  007C4B  00                 	db	0
   244  007C4C  20                 	db	32
   245  007C4D  10                 	db	16
   246  007C4E  08                 	db	8
   247  007C4F  04                 	db	4
   248  007C50  02                 	db	2
   249  007C51  00                 	db	0
   250  007C52  00                 	db	0
   251  007C53  00                 	db	0
   252  007C54  3E                 	db	62
   253  007C55  51                 	db	81
   254  007C56  49                 	db	73
   255  007C57  45                 	db	69
   256  007C58  3E                 	db	62
   257  007C59  00                 	db	0
   258  007C5A  00                 	db	0
   259  007C5B  00                 	db	0
   260  007C5C  00                 	db	0
   261  007C5D  42                 	db	66
   262  007C5E  7F                 	db	127
   263  007C5F  40                 	db	64
   264  007C60  00                 	db	0
   265  007C61  00                 	db	0
   266  007C62  00                 	db	0
   267  007C63  00                 	db	0
   268  007C64  62                 	db	98
   269  007C65  51                 	db	81
   270  007C66  49                 	db	73
   271  007C67  49                 	db	73
   272  007C68  46                 	db	70
   273  007C69  00                 	db	0
   274  007C6A  00                 	db	0
   275  007C6B  00                 	db	0
   276  007C6C  22                 	db	34
   277  007C6D  41                 	db	65
   278  007C6E  49                 	db	73
   279  007C6F  49                 	db	73
   280  007C70  36                 	db	54
   281  007C71  00                 	db	0
   282  007C72  00                 	db	0
   283  007C73  00                 	db	0
   284  007C74  18                 	db	24
   285  007C75  14                 	db	20
   286  007C76  12                 	db	18
   287  007C77  7F                 	db	127
   288  007C78  10                 	db	16
   289  007C79  00                 	db	0
   290  007C7A  00                 	db	0
   291  007C7B  00                 	db	0
   292  007C7C  27                 	db	39
   293  007C7D  45                 	db	69
   294  007C7E  45                 	db	69
   295  007C7F  45                 	db	69
   296  007C80  39                 	db	57
   297  007C81  00                 	db	0
   298  007C82  00                 	db	0
   299  007C83  00                 	db	0
   300  007C84  3C                 	db	60
   301  007C85  4A                 	db	74
   302  007C86  49                 	db	73
   303  007C87  49                 	db	73
   304  007C88  30                 	db	48
   305  007C89  00                 	db	0
   306  007C8A  00                 	db	0
   307  007C8B  00                 	db	0
   308  007C8C  01                 	db	1
   309  007C8D  71                 	db	113
   310  007C8E  09                 	db	9
   311  007C8F  05                 	db	5
   312  007C90  03                 	db	3
   313  007C91  00                 	db	0
   314  007C92  00                 	db	0
   315  007C93  00                 	db	0
   316  007C94  36                 	db	54
   317  007C95  49                 	db	73
   318  007C96  49                 	db	73
   319  007C97  49                 	db	73
   320  007C98  36                 	db	54
   321  007C99  00                 	db	0
   322  007C9A  00                 	db	0
   323  007C9B  00                 	db	0
   324  007C9C  06                 	db	6
   325  007C9D  49                 	db	73
   326  007C9E  49                 	db	73
   327  007C9F  29                 	db	41
   328  007CA0  1E                 	db	30
   329  007CA1  00                 	db	0
   330  007CA2  00                 	db	0
   331  007CA3  00                 	db	0
   332  007CA4  00                 	db	0
   333  007CA5  36                 	db	54
   334  007CA6  36                 	db	54
   335  007CA7  00                 	db	0
   336  007CA8  00                 	db	0
   337  007CA9  00                 	db	0
   338  007CAA  00                 	db	0
   339  007CAB  00                 	db	0
   340  007CAC  00                 	db	0
   341  007CAD  AC                 	db	172
   342  007CAE  6C                 	db	108
   343  007CAF  00                 	db	0
   344  007CB0  00                 	db	0
   345  007CB1  00                 	db	0
   346  007CB2  00                 	db	0
   347  007CB3  00                 	db	0
   348  007CB4  08                 	db	8
   349  007CB5  14                 	db	20
   350  007CB6  22                 	db	34
   351  007CB7  41                 	db	65
   352  007CB8  00                 	db	0
   353  007CB9  00                 	db	0
   354  007CBA  00                 	db	0
   355  007CBB  00                 	db	0
   356  007CBC  14                 	db	20
   357  007CBD  14                 	db	20
   358  007CBE  14                 	db	20
   359  007CBF  14                 	db	20
   360  007CC0  14                 	db	20
   361  007CC1  00                 	db	0
   362  007CC2  00                 	db	0
   363  007CC3  00                 	db	0
   364  007CC4  41                 	db	65
   365  007CC5  22                 	db	34
   366  007CC6  14                 	db	20
   367  007CC7  08                 	db	8
   368  007CC8  00                 	db	0
   369  007CC9  00                 	db	0
   370  007CCA  00                 	db	0
   371  007CCB  00                 	db	0
   372  007CCC  02                 	db	2
   373  007CCD  01                 	db	1
   374  007CCE  51                 	db	81
   375  007CCF  09                 	db	9
   376  007CD0  06                 	db	6
   377  007CD1  00                 	db	0
   378  007CD2  00                 	db	0
   379  007CD3  00                 	db	0
   380  007CD4  32                 	db	50
   381  007CD5  49                 	db	73
   382  007CD6  79                 	db	121
   383  007CD7  41                 	db	65
   384  007CD8  3E                 	db	62
   385  007CD9  00                 	db	0
   386  007CDA  00                 	db	0
   387  007CDB  00                 	db	0
   388  007CDC  7E                 	db	126
   389  007CDD  09                 	db	9
   390  007CDE  09                 	db	9
   391  007CDF  09                 	db	9
   392  007CE0  7E                 	db	126
   393  007CE1  00                 	db	0
   394  007CE2  00                 	db	0
   395  007CE3  00                 	db	0
   396  007CE4  7F                 	db	127
   397  007CE5  49                 	db	73
   398  007CE6  49                 	db	73
   399  007CE7  49                 	db	73
   400  007CE8  36                 	db	54
   401  007CE9  00                 	db	0
   402  007CEA  00                 	db	0
   403  007CEB  00                 	db	0
   404  007CEC  3E                 	db	62
   405  007CED  41                 	db	65
   406  007CEE  41                 	db	65
   407  007CEF  41                 	db	65
   408  007CF0  22                 	db	34
   409  007CF1  00                 	db	0
   410  007CF2  00                 	db	0
   411  007CF3  00                 	db	0
   412  007CF4  7F                 	db	127
   413  007CF5  41                 	db	65
   414  007CF6  41                 	db	65
   415  007CF7  22                 	db	34
   416  007CF8  1C                 	db	28
   417  007CF9  00                 	db	0
   418  007CFA  00                 	db	0
   419  007CFB  00                 	db	0
   420  007CFC  7F                 	db	127
   421  007CFD  49                 	db	73
   422  007CFE  49                 	db	73
   423  007CFF  49                 	db	73
   424  007D00  41                 	db	65
   425  007D01  00                 	db	0
   426  007D02  00                 	db	0
   427  007D03  00                 	db	0
   428  007D04  7F                 	db	127
   429  007D05  09                 	db	9
   430  007D06  09                 	db	9
   431  007D07  09                 	db	9
   432  007D08  01                 	db	1
   433  007D09  00                 	db	0
   434  007D0A  00                 	db	0
   435  007D0B  00                 	db	0
   436  007D0C  3E                 	db	62
   437  007D0D  41                 	db	65
   438  007D0E  41                 	db	65
   439  007D0F  51                 	db	81
   440  007D10  72                 	db	114
   441  007D11  00                 	db	0
   442  007D12  00                 	db	0
   443  007D13  00                 	db	0
   444  007D14  7F                 	db	127
   445  007D15  08                 	db	8
   446  007D16  08                 	db	8
   447  007D17  08                 	db	8
   448  007D18  7F                 	db	127
   449  007D19  00                 	db	0
   450  007D1A  00                 	db	0
   451  007D1B  00                 	db	0
   452  007D1C  41                 	db	65
   453  007D1D  7F                 	db	127
   454  007D1E  41                 	db	65
   455  007D1F  00                 	db	0
   456  007D20  00                 	db	0
   457  007D21  00                 	db	0
   458  007D22  00                 	db	0
   459  007D23  00                 	db	0
   460  007D24  20                 	db	32
   461  007D25  40                 	db	64
   462  007D26  41                 	db	65
   463  007D27  3F                 	db	63
   464  007D28  01                 	db	1
   465  007D29  00                 	db	0
   466  007D2A  00                 	db	0
   467  007D2B  00                 	db	0
   468  007D2C  7F                 	db	127
   469  007D2D  08                 	db	8
   470  007D2E  14                 	db	20
   471  007D2F  22                 	db	34
   472  007D30  41                 	db	65
   473  007D31  00                 	db	0
   474  007D32  00                 	db	0
   475  007D33  00                 	db	0
   476  007D34  7F                 	db	127
   477  007D35  40                 	db	64
   478  007D36  40                 	db	64
   479  007D37  40                 	db	64
   480  007D38  40                 	db	64
   481  007D39  00                 	db	0
   482  007D3A  00                 	db	0
   483  007D3B  00                 	db	0
   484  007D3C  7F                 	db	127
   485  007D3D  02                 	db	2
   486  007D3E  0C                 	db	12
   487  007D3F  02                 	db	2
   488  007D40  7F                 	db	127
   489  007D41  00                 	db	0
   490  007D42  00                 	db	0
   491  007D43  00                 	db	0
   492  007D44  7F                 	db	127
   493  007D45  04                 	db	4
   494  007D46  08                 	db	8
   495  007D47  10                 	db	16
   496  007D48  7F                 	db	127
   497  007D49  00                 	db	0
   498  007D4A  00                 	db	0
   499  007D4B  00                 	db	0
   500  007D4C  3E                 	db	62
   501  007D4D  41                 	db	65
   502  007D4E  41                 	db	65
   503  007D4F  41                 	db	65
   504  007D50  3E                 	db	62
   505  007D51  00                 	db	0
   506  007D52  00                 	db	0
   507  007D53  00                 	db	0
   508  007D54  7F                 	db	127
   509  007D55  09                 	db	9
   510  007D56  09                 	db	9
   511  007D57  09                 	db	9
   512  007D58  06                 	db	6
   513  007D59  00                 	db	0
   514  007D5A  00                 	db	0
   515  007D5B  00                 	db	0
   516  007D5C  3E                 	db	62
   517  007D5D  41                 	db	65
   518  007D5E  51                 	db	81
   519  007D5F  21                 	db	33
   520  007D60  5E                 	db	94
   521  007D61  00                 	db	0
   522  007D62  00                 	db	0
   523  007D63  00                 	db	0
   524  007D64  7F                 	db	127
   525  007D65  09                 	db	9
   526  007D66  19                 	db	25
   527  007D67  29                 	db	41
   528  007D68  46                 	db	70
   529  007D69  00                 	db	0
   530  007D6A  00                 	db	0
   531  007D6B  00                 	db	0
   532  007D6C  26                 	db	38
   533  007D6D  49                 	db	73
   534  007D6E  49                 	db	73
   535  007D6F  49                 	db	73
   536  007D70  32                 	db	50
   537  007D71  00                 	db	0
   538  007D72  00                 	db	0
   539  007D73  00                 	db	0
   540  007D74  01                 	db	1
   541  007D75  01                 	db	1
   542  007D76  7F                 	db	127
   543  007D77  01                 	db	1
   544  007D78  01                 	db	1
   545  007D79  00                 	db	0
   546  007D7A  00                 	db	0
   547  007D7B  00                 	db	0
   548  007D7C  3F                 	db	63
   549  007D7D  40                 	db	64
   550  007D7E  40                 	db	64
   551  007D7F  40                 	db	64
   552  007D80  3F                 	db	63
   553  007D81  00                 	db	0
   554  007D82  00                 	db	0
   555  007D83  00                 	db	0
   556  007D84  1F                 	db	31
   557  007D85  20                 	db	32
   558  007D86  40                 	db	64
   559  007D87  20                 	db	32
   560  007D88  1F                 	db	31
   561  007D89  00                 	db	0
   562  007D8A  00                 	db	0
   563  007D8B  00                 	db	0
   564  007D8C  3F                 	db	63
   565  007D8D  40                 	db	64
   566  007D8E  38                 	db	56
   567  007D8F  40                 	db	64
   568  007D90  3F                 	db	63
   569  007D91  00                 	db	0
   570  007D92  00                 	db	0
   571  007D93  00                 	db	0
   572  007D94  63                 	db	99
   573  007D95  14                 	db	20
   574  007D96  08                 	db	8
   575  007D97  14                 	db	20
   576  007D98  63                 	db	99
   577  007D99  00                 	db	0
   578  007D9A  00                 	db	0
   579  007D9B  00                 	db	0
   580  007D9C  03                 	db	3
   581  007D9D  04                 	db	4
   582  007D9E  78                 	db	120
   583  007D9F  04                 	db	4
   584  007DA0  03                 	db	3
   585  007DA1  00                 	db	0
   586  007DA2  00                 	db	0
   587  007DA3  00                 	db	0
   588  007DA4  61                 	db	97
   589  007DA5  51                 	db	81
   590  007DA6  49                 	db	73
   591  007DA7  45                 	db	69
   592  007DA8  43                 	db	67
   593  007DA9  00                 	db	0
   594  007DAA  00                 	db	0
   595  007DAB  00                 	db	0
   596  007DAC  7F                 	db	127
   597  007DAD  41                 	db	65
   598  007DAE  41                 	db	65
   599  007DAF  00                 	db	0
   600  007DB0  00                 	db	0
   601  007DB1  00                 	db	0
   602  007DB2  00                 	db	0
   603  007DB3  00                 	db	0
   604  007DB4  02                 	db	2
   605  007DB5  04                 	db	4
   606  007DB6  08                 	db	8
   607  007DB7  10                 	db	16
   608  007DB8  20                 	db	32
   609  007DB9  00                 	db	0
   610  007DBA  00                 	db	0
   611  007DBB  00                 	db	0
   612  007DBC  41                 	db	65
   613  007DBD  41                 	db	65
   614  007DBE  7F                 	db	127
   615  007DBF  00                 	db	0
   616  007DC0  00                 	db	0
   617  007DC1  00                 	db	0
   618  007DC2  00                 	db	0
   619  007DC3  00                 	db	0
   620  007DC4  04                 	db	4
   621  007DC5  02                 	db	2
   622  007DC6  01                 	db	1
   623  007DC7  02                 	db	2
   624  007DC8  04                 	db	4
   625  007DC9  00                 	db	0
   626  007DCA  00                 	db	0
   627  007DCB  00                 	db	0
   628  007DCC  80                 	db	128
   629  007DCD  80                 	db	128
   630  007DCE  80                 	db	128
   631  007DCF  80                 	db	128
   632  007DD0  80                 	db	128
   633  007DD1  00                 	db	0
   634  007DD2  00                 	db	0
   635  007DD3  00                 	db	0
   636  007DD4  01                 	db	1
   637  007DD5  02                 	db	2
   638  007DD6  04                 	db	4
   639  007DD7  00                 	db	0
   640  007DD8  00                 	db	0
   641  007DD9  00                 	db	0
   642  007DDA  00                 	db	0
   643  007DDB  00                 	db	0
   644  007DDC  20                 	db	32
   645  007DDD  54                 	db	84
   646  007DDE  54                 	db	84
   647  007DDF  54                 	db	84
   648  007DE0  78                 	db	120
   649  007DE1  00                 	db	0
   650  007DE2  00                 	db	0
   651  007DE3  00                 	db	0
   652  007DE4  7F                 	db	127
   653  007DE5  48                 	db	72
   654  007DE6  44                 	db	68
   655  007DE7  44                 	db	68
   656  007DE8  38                 	db	56
   657  007DE9  00                 	db	0
   658  007DEA  00                 	db	0
   659  007DEB  00                 	db	0
   660  007DEC  38                 	db	56
   661  007DED  44                 	db	68
   662  007DEE  44                 	db	68
   663  007DEF  28                 	db	40
   664  007DF0  00                 	db	0
   665  007DF1  00                 	db	0
   666  007DF2  00                 	db	0
   667  007DF3  00                 	db	0
   668  007DF4  38                 	db	56
   669  007DF5  44                 	db	68
   670  007DF6  44                 	db	68
   671  007DF7  48                 	db	72
   672  007DF8  7F                 	db	127
   673  007DF9  00                 	db	0
   674  007DFA  00                 	db	0
   675  007DFB  00                 	db	0
   676  007DFC  38                 	db	56
   677  007DFD  54                 	db	84
   678  007DFE  54                 	db	84
   679  007DFF  54                 	db	84
   680  007E00  18                 	db	24
   681  007E01  00                 	db	0
   682  007E02  00                 	db	0
   683  007E03  00                 	db	0
   684  007E04  08                 	db	8
   685  007E05  7E                 	db	126
   686  007E06  09                 	db	9
   687  007E07  02                 	db	2
   688  007E08  00                 	db	0
   689  007E09  00                 	db	0
   690  007E0A  00                 	db	0
   691  007E0B  00                 	db	0
   692  007E0C  18                 	db	24
   693  007E0D  A4                 	db	164
   694  007E0E  A4                 	db	164
   695  007E0F  A4                 	db	164
   696  007E10  7C                 	db	124
   697  007E11  00                 	db	0
   698  007E12  00                 	db	0
   699  007E13  00                 	db	0
   700  007E14  7F                 	db	127
   701  007E15  08                 	db	8
   702  007E16  04                 	db	4
   703  007E17  04                 	db	4
   704  007E18  78                 	db	120
   705  007E19  00                 	db	0
   706  007E1A  00                 	db	0
   707  007E1B  00                 	db	0
   708  007E1C  00                 	db	0
   709  007E1D  7D                 	db	125
   710  007E1E  00                 	db	0
   711  007E1F  00                 	db	0
   712  007E20  00                 	db	0
   713  007E21  00                 	db	0
   714  007E22  00                 	db	0
   715  007E23  00                 	db	0
   716  007E24  80                 	db	128
   717  007E25  84                 	db	132
   718  007E26  7D                 	db	125
   719  007E27  00                 	db	0
   720  007E28  00                 	db	0
   721  007E29  00                 	db	0
   722  007E2A  00                 	db	0
   723  007E2B  00                 	db	0
   724  007E2C  7F                 	db	127
   725  007E2D  10                 	db	16
   726  007E2E  28                 	db	40
   727  007E2F  44                 	db	68
   728  007E30  00                 	db	0
   729  007E31  00                 	db	0
   730  007E32  00                 	db	0
   731  007E33  00                 	db	0
   732  007E34  41                 	db	65
   733  007E35  7F                 	db	127
   734  007E36  40                 	db	64
   735  007E37  00                 	db	0
   736  007E38  00                 	db	0
   737  007E39  00                 	db	0
   738  007E3A  00                 	db	0
   739  007E3B  00                 	db	0
   740  007E3C  7C                 	db	124
   741  007E3D  04                 	db	4
   742  007E3E  18                 	db	24
   743  007E3F  04                 	db	4
   744  007E40  78                 	db	120
   745  007E41  00                 	db	0
   746  007E42  00                 	db	0
   747  007E43  00                 	db	0
   748  007E44  7C                 	db	124
   749  007E45  08                 	db	8
   750  007E46  04                 	db	4
   751  007E47  7C                 	db	124
   752  007E48  00                 	db	0
   753  007E49  00                 	db	0
   754  007E4A  00                 	db	0
   755  007E4B  00                 	db	0
   756  007E4C  38                 	db	56
   757  007E4D  44                 	db	68
   758  007E4E  44                 	db	68
   759  007E4F  38                 	db	56
   760  007E50  00                 	db	0
   761  007E51  00                 	db	0
   762  007E52  00                 	db	0
   763  007E53  00                 	db	0
   764  007E54  FC                 	db	252
   765  007E55  24                 	db	36
   766  007E56  24                 	db	36
   767  007E57  18                 	db	24
   768  007E58  00                 	db	0
   769  007E59  00                 	db	0
   770  007E5A  00                 	db	0
   771  007E5B  00                 	db	0
   772  007E5C  18                 	db	24
   773  007E5D  24                 	db	36
   774  007E5E  24                 	db	36
   775  007E5F  FC                 	db	252
   776  007E60  00                 	db	0
   777  007E61  00                 	db	0
   778  007E62  00                 	db	0
   779  007E63  00                 	db	0
   780  007E64  00                 	db	0
   781  007E65  7C                 	db	124
   782  007E66  08                 	db	8
   783  007E67  04                 	db	4
   784  007E68  00                 	db	0
   785  007E69  00                 	db	0
   786  007E6A  00                 	db	0
   787  007E6B  00                 	db	0
   788  007E6C  48                 	db	72
   789  007E6D  54                 	db	84
   790  007E6E  54                 	db	84
   791  007E6F  24                 	db	36
   792  007E70  00                 	db	0
   793  007E71  00                 	db	0
   794  007E72  00                 	db	0
   795  007E73  00                 	db	0
   796  007E74  04                 	db	4
   797  007E75  7F                 	db	127
   798  007E76  44                 	db	68
   799  007E77  00                 	db	0
   800  007E78  00                 	db	0
   801  007E79  00                 	db	0
   802  007E7A  00                 	db	0
   803  007E7B  00                 	db	0
   804  007E7C  3C                 	db	60
   805  007E7D  40                 	db	64
   806  007E7E  40                 	db	64
   807  007E7F  7C                 	db	124
   808  007E80  00                 	db	0
   809  007E81  00                 	db	0
   810  007E82  00                 	db	0
   811  007E83  00                 	db	0
   812  007E84  1C                 	db	28
   813  007E85  20                 	db	32
   814  007E86  40                 	db	64
   815  007E87  20                 	db	32
   816  007E88  1C                 	db	28
   817  007E89  00                 	db	0
   818  007E8A  00                 	db	0
   819  007E8B  00                 	db	0
   820  007E8C  3C                 	db	60
   821  007E8D  40                 	db	64
   822  007E8E  30                 	db	48
   823  007E8F  40                 	db	64
   824  007E90  3C                 	db	60
   825  007E91  00                 	db	0
   826  007E92  00                 	db	0
   827  007E93  00                 	db	0
   828  007E94  44                 	db	68
   829  007E95  28                 	db	40
   830  007E96  10                 	db	16
   831  007E97  28                 	db	40
   832  007E98  44                 	db	68
   833  007E99  00                 	db	0
   834  007E9A  00                 	db	0
   835  007E9B  00                 	db	0
   836  007E9C  1C                 	db	28
   837  007E9D  A0                 	db	160
   838  007E9E  A0                 	db	160
   839  007E9F  7C                 	db	124
   840  007EA0  00                 	db	0
   841  007EA1  00                 	db	0
   842  007EA2  00                 	db	0
   843  007EA3  00                 	db	0
   844  007EA4  44                 	db	68
   845  007EA5  64                 	db	100
   846  007EA6  54                 	db	84
   847  007EA7  4C                 	db	76
   848  007EA8  44                 	db	68
   849  007EA9  00                 	db	0
   850  007EAA  00                 	db	0
   851  007EAB  00                 	db	0
   852  007EAC  08                 	db	8
   853  007EAD  36                 	db	54
   854  007EAE  41                 	db	65
   855  007EAF  00                 	db	0
   856  007EB0  00                 	db	0
   857  007EB1  00                 	db	0
   858  007EB2  00                 	db	0
   859  007EB3  00                 	db	0
   860  007EB4  00                 	db	0
   861  007EB5  7F                 	db	127
   862  007EB6  00                 	db	0
   863  007EB7  00                 	db	0
   864  007EB8  00                 	db	0
   865  007EB9  00                 	db	0
   866  007EBA  00                 	db	0
   867  007EBB  00                 	db	0
   868  007EBC  41                 	db	65
   869  007EBD  36                 	db	54
   870  007EBE  08                 	db	8
   871  007EBF  00                 	db	0
   872  007EC0  00                 	db	0
   873  007EC1  00                 	db	0
   874  007EC2  00                 	db	0
   875  007EC3  00                 	db	0
   876  007EC4  02                 	db	2
   877  007EC5  01                 	db	1
   878  007EC6  01                 	db	1
   879  007EC7  02                 	db	2
   880  007EC8  01                 	db	1
   881  007EC9  00                 	db	0
   882  007ECA  00                 	db	0
   883  007ECB  00                 	db	0
   884  007ECC  02                 	db	2
   885  007ECD  05                 	db	5
   886  007ECE  05                 	db	5
   887  007ECF  02                 	db	2
   888  007ED0  00                 	db	0
   889  007ED1  00                 	db	0
   890  007ED2  00                 	db	0
   891  007ED3                     __end_of_OledFont:
   892                           	opt stack 0
   893  007ED3                     _picture:
   894                           	opt stack 0
   895  007ED3  00                 	db	0
   896  007ED4  00                 	db	0
   897  007ED5  00                 	db	0
   898  007ED6  00                 	db	0
   899  007ED7  00                 	db	0
   900  007ED8  00                 	db	0
   901  007ED9  00                 	db	0
   902  007EDA  00                 	db	0
   903  007EDB  00                 	db	0
   904  007EDC  00                 	db	0
   905  007EDD  00                 	db	0
   906  007EDE  00                 	db	0
   907  007EDF  00                 	db	0
   908  007EE0  00                 	db	0
   909  007EE1  00                 	db	0
   910  007EE2  00                 	db	0
   911  007EE3  3F                 	db	63
   912  007EE4  80                 	db	128
   913  007EE5  00                 	db	0
   914  007EE6  C0                 	db	192
   915  007EE7  00                 	db	0
   916  007EE8  7F                 	db	127
   917  007EE9  E0                 	db	224
   918  007EEA  00                 	db	0
   919  007EEB  30                 	db	48
   920  007EEC  00                 	db	0
   921  007EED  1F                 	db	31
   922  007EEE  FF                 	db	255
   923  007EEF  F8                 	db	248
   924  007EF0  03                 	db	3
   925  007EF1  FF                 	db	255
   926  007EF2  F8                 	db	248
   927  007EF3  24                 	db	36
   928  007EF4  80                 	db	128
   929  007EF5  00                 	db	0
   930  007EF6  A0                 	db	160
   931  007EF7  00                 	db	0
   932  007EF8  7F                 	db	127
   933  007EF9  E0                 	db	224
   934  007EFA  00                 	db	0
   935  007EFB  78                 	db	120
   936  007EFC  00                 	db	0
   937  007EFD  1F                 	db	31
   938  007EFE  FF                 	db	255
   939  007EFF  F8                 	db	248
   940  007F00  02                 	db	2
   941  007F01  00                 	db	0
   942  007F02  08                 	db	8
   943  007F03  15                 	db	21
   944  007F04  00                 	db	0
   945  007F05  02                 	db	2
   946  007F06  90                 	db	144
   947  007F07  00                 	db	0
   948  007F08  66                 	db	102
   949  007F09  60                 	db	96
   950  007F0A  60                 	db	96
   951  007F0B  FC                 	db	252
   952  007F0C  00                 	db	0
   953  007F0D  17                 	db	23
   954  007F0E  A3                 	db	163
   955  007F0F  18                 	db	24
   956  007F10  0E                 	db	14
   957  007F11  EE                 	db	238
   958  007F12  E8                 	db	232
   959  007F13  0E                 	db	14
   960  007F14  01                 	db	1
   961  007F15  01                 	db	1
   962  007F16  A0                 	db	160
   963  007F17  00                 	db	0
   964  007F18  66                 	db	102
   965  007F19  60                 	db	96
   966  007F1A  61                 	db	97
   967  007F1B  FE                 	db	254
   968  007F1C  00                 	db	0
   969  007F1D  13                 	db	19
   970  007F1E  2D                 	db	45
   971  007F1F  E8                 	db	232
   972  007F20  08                 	db	8
   973  007F21  EE                 	db	238
   974  007F22  E8                 	db	232
   975  007F23  04                 	db	4
   976  007F24  05                 	db	5
   977  007F25  00                 	db	0
   978  007F26  C0                 	db	192
   979  007F27  00                 	db	0
   980  007F28  66                 	db	102
   981  007F29  60                 	db	96
   982  007F2A  60                 	db	96
   983  007F2B  30                 	db	48
   984  007F2C  00                 	db	0
   985  007F2D  14                 	db	20
   986  007F2E  AD                 	db	173
   987  007F2F  E8                 	db	232
   988  007F30  08                 	db	8
   989  007F31  EE                 	db	238
   990  007F32  E8                 	db	232
   991  007F33  04                 	db	4
   992  007F34  15                 	db	21
   993  007F35  01                 	db	1
   994  007F36  A0                 	db	160
   995  007F37  00                 	db	0
   996  007F38  66                 	db	102
   997  007F39  60                 	db	96
   998  007F3A  60                 	db	96
   999  007F3B  30                 	db	48
  1000  007F3C  00                 	db	0
  1001  007F3D  17                 	db	23
  1002  007F3E  AD                 	db	173
  1003  007F3F  98                 	db	152
  1004  007F40  08                 	db	8
  1005  007F41  EE                 	db	238
  1006  007F42  E8                 	db	232
  1007  007F43  04                 	db	4
  1008  007F44  55                 	db	85
  1009  007F45  02                 	db	2
  1010  007F46  90                 	db	144
  1011  007F47  00                 	db	0
  1012  007F48  66                 	db	102
  1013  007F49  60                 	db	96
  1014  007F4A  60                 	db	96
  1015  007F4B  30                 	db	48
  1016  007F4C  00                 	db	0
  1017  007F4D  17                 	db	23
  1018  007F4E  A3                 	db	163
  1019  007F4F  E8                 	db	232
  1020  007F50  08                 	db	8
  1021  007F51  EE                 	db	238
  1022  007F52  E8                 	db	232
  1023  007F53  05                 	db	5
  1024  007F54  55                 	db	85
  1025  007F55  00                 	db	0
  1026  007F56  A0                 	db	160
  1027  007F57  00                 	db	0
  1028  007F58  7F                 	db	127
  1029  007F59  E0                 	db	224
  1030  007F5A  60                 	db	96
  1031  007F5B  30                 	db	48
  1032  007F5C  00                 	db	0
  1033  007F5D  17                 	db	23
  1034  007F5E  AF                 	db	175
  1035  007F5F  E8                 	db	232
  1036  007F60  08                 	db	8
  1037  007F61  EE                 	db	238
  1038  007F62  E8                 	db	232
  1039  007F63  05                 	db	5
  1040  007F64  55                 	db	85
  1041  007F65  00                 	db	0
  1042  007F66  C0                 	db	192
  1043  007F67  00                 	db	0
  1044  007F68  7F                 	db	127
  1045  007F69  E0                 	db	224
  1046  007F6A  60                 	db	96
  1047  007F6B  30                 	db	48
  1048  007F6C  00                 	db	0
  1049  007F6D  17                 	db	23
  1050  007F6E  AF                 	db	175
  1051  007F6F  18                 	db	24
  1052  007F70  0E                 	db	14
  1053  007F71  EE                 	db	238
  1054  007F72  E8                 	db	232
  1055  007F73  00                 	db	0
  1056  007F74  00                 	db	0
  1057  007F75  00                 	db	0
  1058  007F76  00                 	db	0
  1059  007F77  00                 	db	0
  1060  007F78  00                 	db	0
  1061  007F79  03                 	db	3
  1062  007F7A  FC                 	db	252
  1063  007F7B  30                 	db	48
  1064  007F7C  00                 	db	0
  1065  007F7D  1F                 	db	31
  1066  007F7E  FF                 	db	255
  1067  007F7F  F8                 	db	248
  1068  007F80  02                 	db	2
  1069  007F81  00                 	db	0
  1070  007F82  08                 	db	8
  1071  007F83  00                 	db	0
  1072  007F84  00                 	db	0
  1073  007F85  00                 	db	0
  1074  007F86  00                 	db	0
  1075  007F87  00                 	db	0
  1076  007F88  00                 	db	0
  1077  007F89  01                 	db	1
  1078  007F8A  F8                 	db	248
  1079  007F8B  30                 	db	48
  1080  007F8C  00                 	db	0
  1081  007F8D  1F                 	db	31
  1082  007F8E  FF                 	db	255
  1083  007F8F  F8                 	db	248
  1084  007F90  03                 	db	3
  1085  007F91  FF                 	db	255
  1086  007F92  F8                 	db	248
  1087  007F93  00                 	db	0
  1088  007F94  00                 	db	0
  1089  007F95  00                 	db	0
  1090  007F96  00                 	db	0
  1091  007F97  00                 	db	0
  1092  007F98  00                 	db	0
  1093  007F99  00                 	db	0
  1094  007F9A  F0                 	db	240
  1095  007F9B  00                 	db	0
  1096  007F9C  00                 	db	0
  1097  007F9D  00                 	db	0
  1098  007F9E  00                 	db	0
  1099  007F9F  00                 	db	0
  1100  007FA0  00                 	db	0
  1101  007FA1  00                 	db	0
  1102  007FA2  00                 	db	0
  1103  007FA3  00                 	db	0
  1104  007FA4  00                 	db	0
  1105  007FA5  00                 	db	0
  1106  007FA6  00                 	db	0
  1107  007FA7  00                 	db	0
  1108  007FA8  00                 	db	0
  1109  007FA9  00                 	db	0
  1110  007FAA  60                 	db	96
  1111  007FAB  00                 	db	0
  1112  007FAC  00                 	db	0
  1113  007FAD  00                 	db	0
  1114  007FAE  00                 	db	0
  1115  007FAF  00                 	db	0
  1116  007FB0  00                 	db	0
  1117  007FB1  00                 	db	0
  1118  007FB2  00                 	db	0
  1119  007FB3  00                 	db	0
  1120  007FB4  00                 	db	0
  1121  007FB5  00                 	db	0
  1122  007FB6  00                 	db	0
  1123  007FB7  00                 	db	0
  1124  007FB8  00                 	db	0
  1125  007FB9  00                 	db	0
  1126  007FBA  00                 	db	0
  1127  007FBB  00                 	db	0
  1128  007FBC  00                 	db	0
  1129  007FBD  00                 	db	0
  1130  007FBE  00                 	db	0
  1131  007FBF  00                 	db	0
  1132  007FC0  00                 	db	0
  1133  007FC1  00                 	db	0
  1134  007FC2  00                 	db	0
  1135  007FC3  00                 	db	0
  1136  007FC4  00                 	db	0
  1137  007FC5  00                 	db	0
  1138  007FC6  00                 	db	0
  1139  007FC7  00                 	db	0
  1140  007FC8  00                 	db	0
  1141  007FC9  00                 	db	0
  1142  007FCA  00                 	db	0
  1143  007FCB  00                 	db	0
  1144  007FCC  00                 	db	0
  1145  007FCD  00                 	db	0
  1146  007FCE  00                 	db	0
  1147  007FCF  00                 	db	0
  1148  007FD0  00                 	db	0
  1149  007FD1  00                 	db	0
  1150  007FD2  00                 	db	0
  1151  007FD3  39                 	db	57
  1152  007FD4  80                 	db	128
  1153  007FD5  00                 	db	0
  1154  007FD6  00                 	db	0
  1155  007FD7  00                 	db	0
  1156  007FD8  00                 	db	0
  1157  007FD9  00                 	db	0
  1158  007FDA  00                 	db	0
  1159  007FDB  00                 	db	0
  1160  007FDC  00                 	db	0
  1161  007FDD  00                 	db	0
  1162  007FDE  00                 	db	0
  1163  007FDF  00                 	db	0
  1164  007FE0  00                 	db	0
  1165  007FE1  00                 	db	0
  1166  007FE2  00                 	db	0
  1167  007FE3                     __end_of_picture:
  1168                           	opt stack 0
  1169  007FE3                     STR_1:
  1170  007FE3  55                 	db	85	;'U'
  1171  007FE4  6E                 	db	110	;'n'
  1172  007FE5  69                 	db	105	;'i'
  1173  007FE6  76                 	db	118	;'v'
  1174  007FE7  65                 	db	101	;'e'
  1175  007FE8  72                 	db	114	;'r'
  1176  007FE9  73                 	db	115	;'s'
  1177  007FEA  69                 	db	105	;'i'
  1178  007FEB  74                 	db	116	;'t'
  1179  007FEC  79                 	db	121	;'y'
  1180  007FED  00                 	db	0
  1181  007FEE                     STR_4:
  1182  007FEE  5A                 	db	90	;'Z'
  1183  007FEF  49                 	db	73	;'I'
  1184  007FF0  50                 	db	80	;'P'
  1185  007FF1  53                 	db	83	;'S'
  1186  007FF2  2D                 	db	45
  1187  007FF3  45                 	db	69	;'E'
  1188  007FF4  56                 	db	86	;'V'
  1189  007FF5  00                 	db	0
  1190  007FF6                     STR_3:
  1191  007FF6  41                 	db	65	;'A'
  1192  007FF7  6B                 	db	107	;'k'
  1193  007FF8  72                 	db	114	;'r'
  1194  007FF9  6F                 	db	111	;'o'
  1195  007FFA  6E                 	db	110	;'n'
  1196  007FFB  00                 	db	0
  1197  007FFC                     STR_2:
  1198  007FFC  4F                 	db	79	;'O'
  1199  007FFD  46                 	db	70	;'F'
  1200  007FFE  00                 	db	0
  1201                           
  1202                           ; #config settings
  1203  007FFF  00                 	db	0	; dummy byte at the end
  1204  0000                     
  1205                           	psect	nvCOMRAM
  1206  000042                     __pnvCOMRAM:
  1207                           	opt stack 0
  1208  000042                     _timer0ReloadVal16bit:
  1209                           	opt stack 0
  1210  000042                     	ds	2
  1211                           
  1212                           	psect	nvBANK0
  1213  0000FE                     __pnvBANK0:
  1214                           	opt stack 0
  1215  0000FE                     _TMR2_InterruptHandler:
  1216                           	opt stack 0
  1217  0000FE                     	ds	2
  1218  0000                     _ANSELA	set	3896
  1219  0000                     _ANSELAbits	set	3896
  1220  0000                     _ANSELB	set	3897
  1221  0000                     _ANSELC	set	3898
  1222  0000                     _ANSELCbits	set	3898
  1223  0000                     _ANSELD	set	3899
  1224  0000                     _ANSELE	set	3900
  1225  0000                     _ADCON0	set	4034
  1226  0000                     _ADCON0bits	set	4034
  1227  0000                     _ADCON1	set	4033
  1228  0000                     _ADCON2	set	4032
  1229  0000                     _ADRESH	set	4036
  1230  0000                     _ADRESL	set	4035
  1231  0000                     _BAUD1CON	set	4024
  1232  0000                     _INTCON2bits	set	4081
  1233  0000                     _INTCONbits	set	4082
  1234  0000                     _IPR1bits	set	3999
  1235  0000                     _IPR2bits	set	4002
  1236  0000                     _LATA	set	3977
  1237  0000                     _LATB	set	3978
  1238  0000                     _LATC	set	3979
  1239  0000                     _LATCbits	set	3979
  1240  0000                     _LATD	set	3980
  1241  0000                     _LATE	set	3981
  1242  0000                     _OSCCON	set	4051
  1243  0000                     _OSCCON2	set	4050
  1244  0000                     _OSCTUNE	set	3995
  1245  0000                     _PIE1bits	set	3997
  1246  0000                     _PIE2bits	set	4000
  1247  0000                     _PIR1bits	set	3998
  1248  0000                     _PIR2bits	set	4001
  1249  0000                     _PORTAbits	set	3968
  1250  0000                     _PORTBbits	set	3969
  1251  0000                     _PORTDbits	set	3971
  1252  0000                     _PR2	set	4027
  1253  0000                     _RC1STA	set	4011
  1254  0000                     _RC1STAbits	set	4011
  1255  0000                     _RCONbits	set	4048
  1256  0000                     _RCREG1	set	4014
  1257  0000                     _SPBRG1	set	4015
  1258  0000                     _SPBRGH1	set	4016
  1259  0000                     _SSP1ADD	set	4040
  1260  0000                     _SSP1BUF	set	4041
  1261  0000                     _SSP1CON1	set	4038
  1262  0000                     _SSP1CON1bits	set	4038
  1263  0000                     _SSP1CON2bits	set	4037
  1264  0000                     _SSP1CON3	set	4043
  1265  0000                     _SSP1STAT	set	4039
  1266  0000                     _T0CON	set	4053
  1267  0000                     _T0CONbits	set	4053
  1268  0000                     _T2CON	set	4026
  1269  0000                     _T2CONbits	set	4026
  1270  0000                     _TMR0H	set	4055
  1271  0000                     _TMR0L	set	4054
  1272  0000                     _TMR2	set	4028
  1273  0000                     _TRISA	set	3986
  1274  0000                     _TRISAbits	set	3986
  1275  0000                     _TRISB	set	3987
  1276  0000                     _TRISC	set	3988
  1277  0000                     _TRISCbits	set	3988
  1278  0000                     _TRISD	set	3989
  1279  0000                     _TRISE	set	3990
  1280  0000                     _TX1STA	set	4012
  1281  0000                     _TXREG1	set	4013
  1282  0000                     _WPUB	set	3937
  1283  0000                     _LATA3	set	31819
  1284  0000                     _LATA6	set	31822
  1285  0000                     _LATA7	set	31823
  1286  0000                     _LATC1	set	31833
  1287  0000                     _LATE0	set	31848
  1288  0000                     _LATE1	set	31849
  1289  0000                     _LATE2	set	31850
  1290                           
  1291                           	psect	cinit
  1292  00281A                     __pcinit:
  1293                           	opt stack 0
  1294  00281A                     start_initialization:
  1295                           	opt stack 0
  1296  00281A                     __initialization:
  1297                           	opt stack 0
  1298                           
  1299                           ; Clear objects allocated to BANK5 (206 bytes)
  1300  00281A  EE05  F000         	lfsr	0,__pbssBANK5
  1301  00281E  0ECE               	movlw	206
  1302  002820                     clear_0:
  1303  002820  6AEE               	clrf	postinc0,c
  1304  002822  06E8               	decf	wreg,f,c
  1305  002824  E1FD               	bnz	clear_0
  1306                           
  1307                           ; Clear objects allocated to BANK4 (206 bytes)
  1308  002826  EE04  F000         	lfsr	0,__pbssBANK4
  1309  00282A  0ECE               	movlw	206
  1310  00282C                     clear_1:
  1311  00282C  6AEE               	clrf	postinc0,c
  1312  00282E  06E8               	decf	wreg,f,c
  1313  002830  E1FD               	bnz	clear_1
  1314                           
  1315                           ; Clear objects allocated to BANK3 (200 bytes)
  1316  002832  EE03  F000         	lfsr	0,__pbssBANK3
  1317  002836  0EC8               	movlw	200
  1318  002838                     clear_2:
  1319  002838  6AEE               	clrf	postinc0,c
  1320  00283A  06E8               	decf	wreg,f,c
  1321  00283C  E1FD               	bnz	clear_2
  1322                           
  1323                           ; Clear objects allocated to BANK2 (206 bytes)
  1324  00283E  EE02  F000         	lfsr	0,__pbssBANK2
  1325  002842  0ECE               	movlw	206
  1326  002844                     clear_3:
  1327  002844  6AEE               	clrf	postinc0,c
  1328  002846  06E8               	decf	wreg,f,c
  1329  002848  E1FD               	bnz	clear_3
  1330                           
  1331                           ; Clear objects allocated to BANK1 (57 bytes)
  1332  00284A  EE01  F000         	lfsr	0,__pbssBANK1
  1333  00284E  0E39               	movlw	57
  1334  002850                     clear_4:
  1335  002850  6AEE               	clrf	postinc0,c
  1336  002852  06E8               	decf	wreg,f,c
  1337  002854  E1FD               	bnz	clear_4
  1338                           
  1339                           ; Clear objects allocated to BANK0 (146 bytes)
  1340  002856  EE00  F060         	lfsr	0,__pbssBANK0
  1341  00285A  0E92               	movlw	146
  1342  00285C                     clear_5:
  1343  00285C  6AEE               	clrf	postinc0,c
  1344  00285E  06E8               	decf	wreg,f,c
  1345  002860  E1FD               	bnz	clear_5
  1346                           
  1347                           ; Clear objects allocated to COMRAM (23 bytes)
  1348  002862  EE00  F02B         	lfsr	0,__pbssCOMRAM
  1349  002866  0E17               	movlw	23
  1350  002868                     clear_6:
  1351  002868  6AEE               	clrf	postinc0,c
  1352  00286A  06E8               	decf	wreg,f,c
  1353  00286C  E1FD               	bnz	clear_6
  1354                           
  1355                           ; Initialize objects allocated to COMRAM (1 bytes)
  1356                           ; load TBLPTR registers with __pidataCOMRAM
  1357  00286E  0E98               	movlw	low __pidataCOMRAM
  1358  002870  6EF6               	movwf	tblptrl,c
  1359  002872  0E31               	movlw	high __pidataCOMRAM
  1360  002874  6EF7               	movwf	tblptrh,c
  1361  002876  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1362  002878  6EF8               	movwf	tblptru,c
  1363  00287A  0009               	tblrd		*+	;fetch initializer
  1364  00287C  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1365  002880                     end_of_initialization:
  1366                           	opt stack 0
  1367  002880                     __end_of__initialization:
  1368                           	opt stack 0
  1369  002880  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1370  002882  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1371  002884  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1372  002886  6EF8               	movwf	tblptru,c
  1373  002888  0100               	movlb	0
  1374  00288A  EF8E  F013         	goto	_main	;jump to C main() function
  1375                           tblptru	equ	0xFF8
  1376                           tblptrh	equ	0xFF7
  1377                           tblptrl	equ	0xFF6
  1378                           tablat	equ	0xFF5
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           
  1382                           	psect	bssCOMRAM
  1383  00002B                     __pbssCOMRAM:
  1384                           	opt stack 0
  1385  00002B                     _group:
  1386                           	opt stack 0
  1387  00002B                     	ds	2
  1388  00002D                     _p_i2c1_trb_current:
  1389                           	opt stack 0
  1390  00002D                     	ds	2
  1391  00002F                     _serial_available:
  1392                           	opt stack 0
  1393  00002F                     	ds	2
  1394  000031                     _serial_read:
  1395                           	opt stack 0
  1396  000031                     	ds	2
  1397  000033                     _serial_write:
  1398                           	opt stack 0
  1399  000033                     	ds	2
  1400  000035                     I2C1_ISR@i2c_10bit_address_restart:
  1401                           	opt stack 0
  1402  000035                     	ds	1
  1403  000036                     _AKNAKsend:
  1404                           	opt stack 0
  1405  000036                     	ds	1
  1406  000037                     _calc_CS:
  1407                           	opt stack 0
  1408  000037                     	ds	1
  1409  000038                     _i2c1_state:
  1410                           	opt stack 0
  1411  000038                     	ds	1
  1412  000039                     _maxDataAddress:
  1413                           	opt stack 0
  1414  000039                     	ds	1
  1415  00003A                     _moduleAddress:
  1416                           	opt stack 0
  1417  00003A                     	ds	1
  1418  00003B                     _returnAddress:
  1419                           	opt stack 0
  1420  00003B                     	ds	1
  1421  00003C                     _rx_address:
  1422                           	opt stack 0
  1423  00003C                     	ds	1
  1424  00003D                     _rx_array_inx:
  1425                           	opt stack 0
  1426  00003D                     	ds	1
  1427  00003E                     _rx_len:
  1428                           	opt stack 0
  1429  00003E                     	ds	1
  1430  00003F                     _time:
  1431                           	opt stack 0
  1432  00003F                     	ds	1
  1433  000040                     I2C1_ISR@i2c_address:
  1434                           	opt stack 0
  1435  000040                     	ds	2
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           postinc0	equ	0xFEE
  1441                           wreg	equ	0xFE8
  1442                           
  1443                           	psect	dataCOMRAM
  1444  000044                     __pdataCOMRAM:
  1445                           	opt stack 0
  1446  000044                     _Transmit_stall:
  1447                           	opt stack 0
  1448  000044                     	ds	1
  1449                           tblptru	equ	0xFF8
  1450                           tblptrh	equ	0xFF7
  1451                           tblptrl	equ	0xFF6
  1452                           tablat	equ	0xFF5
  1453                           postinc0	equ	0xFEE
  1454                           wreg	equ	0xFE8
  1455                           
  1456                           	psect	bssBANK0
  1457  000060                     __pbssBANK0:
  1458                           	opt stack 0
  1459  000060                     _displaybuffer:
  1460                           	opt stack 0
  1461  000060                     	ds	40
  1462  000088                     _LED_array:
  1463                           	opt stack 0
  1464  000088                     	ds	16
  1465  000098                     _LEDNUM_ENAB:
  1466                           	opt stack 0
  1467  000098                     	ds	12
  1468  0000A4                     _LEDState:
  1469                           	opt stack 0
  1470  0000A4                     	ds	12
  1471  0000B0                     _butnarray:
  1472                           	opt stack 0
  1473  0000B0                     	ds	8
  1474  0000B8                     _i2c1_object:
  1475                           	opt stack 0
  1476  0000B8                     	ds	7
  1477  0000BF                     I2C1_ISR@i2c_bytes_left:
  1478                           	opt stack 0
  1479  0000BF                     	ds	2
  1480  0000C1                     I2C1_ISR@pi2c_buf_ptr:
  1481                           	opt stack 0
  1482  0000C1                     	ds	2
  1483  0000C3                     _DataBarGraphA:
  1484                           	opt stack 0
  1485  0000C3                     	ds	2
  1486  0000C5                     _DataBarGraphB:
  1487                           	opt stack 0
  1488  0000C5                     	ds	2
  1489  0000C7                     _addressErrorCounter:
  1490                           	opt stack 0
  1491  0000C7                     	ds	2
  1492  0000C9                     _alignErrorCounter:
  1493                           	opt stack 0
  1494  0000C9                     	ds	2
  1495  0000CB                     _crcErrorCounter:
  1496                           	opt stack 0
  1497  0000CB                     	ds	2
  1498  0000CD                     _dataAdressErrorCounter:
  1499                           	opt stack 0
  1500  0000CD                     	ds	2
  1501  0000CF                     _i:
  1502                           	opt stack 0
  1503  0000CF                     	ds	2
  1504  0000D1                     _i2c1_trb_count:
  1505                           	opt stack 0
  1506  0000D1                     	ds	2
  1507  0000D3                     _k:
  1508                           	opt stack 0
  1509  0000D3                     	ds	2
  1510  0000D5                     _p_i2c1_current:
  1511                           	opt stack 0
  1512  0000D5                     	ds	2
  1513  0000D7                     _receiveArrayAddress:
  1514                           	opt stack 0
  1515  0000D7                     	ds	2
  1516  0000D9                     _sendStructAddress:
  1517                           	opt stack 0
  1518  0000D9                     	ds	2
  1519  0000DB                     _serial_peek:
  1520                           	opt stack 0
  1521  0000DB                     	ds	2
  1522  0000DD                     _timeOut:
  1523                           	opt stack 0
  1524  0000DD                     	ds	2
  1525  0000DF                     handleIndicators@oldIndicators:
  1526                           	opt stack 0
  1527  0000DF                     	ds	2
  1528  0000E1                     I2C1_MasterRead@trBlock:
  1529                           	opt stack 0
  1530  0000E1                     	ds	5
  1531  0000E6                     I2C1_MasterWrite@trBlock:
  1532                           	opt stack 0
  1533  0000E6                     	ds	5
  1534  0000EB                     _i2c1_tr_queue:
  1535                           	opt stack 0
  1536  0000EB                     	ds	5
  1537  0000F0                     _Buff:
  1538                           	opt stack 0
  1539  0000F0                     	ds	2
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           
  1547                           	psect	bssBANK1
  1548  000100                     __pbssBANK1:
  1549                           	opt stack 0
  1550  000100                     _receiveArray:
  1551                           	opt stack 0
  1552  000100                     	ds	40
  1553  000128                     _crc_buffer:
  1554                           	opt stack 0
  1555  000128                     	ds	17
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           
  1563                           	psect	bssBANK2
  1564  000200                     __pbssBANK2:
  1565                           	opt stack 0
  1566  000200                     _ring_buffer:
  1567                           	opt stack 0
  1568  000200                     	ds	206
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           postinc0	equ	0xFEE
  1574                           wreg	equ	0xFE8
  1575                           
  1576                           	psect	bssBANK3
  1577  000300                     __pbssBANK3:
  1578                           	opt stack 0
  1579  000300                     _rx_buffer:
  1580                           	opt stack 0
  1581  000300                     	ds	200
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           
  1589                           	psect	bssBANK4
  1590  000400                     __pbssBANK4:
  1591                           	opt stack 0
  1592  000400                     _input_buffer:
  1593                           	opt stack 0
  1594  000400                     	ds	206
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           
  1602                           	psect	bssBANK5
  1603  000500                     __pbssBANK5:
  1604                           	opt stack 0
  1605  000500                     _output_buffer:
  1606                           	opt stack 0
  1607  000500                     	ds	206
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           
  1615                           	psect	cstackBANK1
  1616  000139                     __pcstackBANK1:
  1617                           	opt stack 0
  1618  000139                     ??_LEDsetBar:
  1619  000139                     ??_receiveData:
  1620  000139                     LEDBsetBrightness@writeBuffer:
  1621                           	opt stack 0
  1622  000139                     LEDblinkRate@writeBuffer:
  1623                           	opt stack 0
  1624  000139                     begin@ptr:
  1625                           	opt stack 0
  1626  000139                     oledPutChar@bytes:
  1627                           	opt stack 0
  1628  000139                     LEDwriteDisplay@writeBuffer:
  1629                           	opt stack 0
  1630                           
  1631                           ; 20 bytes @ 0x0
  1632  000139                     	ds	2
  1633  00013B                     begin@maxSize:
  1634                           	opt stack 0
  1635  00013B                     LEDBsetBrightness@timeOut:
  1636                           	opt stack 0
  1637  00013B                     LEDblinkRate@timeOut:
  1638                           	opt stack 0
  1639                           
  1640                           ; 2 bytes @ 0x2
  1641  00013B                     	ds	1
  1642  00013C                     begin@givenAddress:
  1643                           	opt stack 0
  1644                           
  1645                           ; 1 bytes @ 0x3
  1646  00013C                     	ds	1
  1647  00013D                     LEDBsetBrightness@status:
  1648                           	opt stack 0
  1649  00013D                     LEDblinkRate@status:
  1650                           	opt stack 0
  1651  00013D                     begin@error:
  1652                           	opt stack 0
  1653                           
  1654                           ; 1 bytes @ 0x4
  1655  00013D                     	ds	1
  1656  00013E                     begin@stufftosend:
  1657                           	opt stack 0
  1658  00013E                     LEDbegin@writeBuffer:
  1659                           	opt stack 0
  1660                           
  1661                           ; 3 bytes @ 0x5
  1662  00013E                     	ds	1
  1663  00013F                     receiveData@holder:
  1664                           	opt stack 0
  1665                           
  1666                           ; 3 bytes @ 0x6
  1667  00013F                     	ds	1
  1668  000140                     begin@stufftoreceive:
  1669                           	opt stack 0
  1670                           
  1671                           ; 2 bytes @ 0x7
  1672  000140                     	ds	1
  1673  000141                     LEDbegin@timeOut:
  1674                           	opt stack 0
  1675                           
  1676                           ; 2 bytes @ 0x8
  1677  000141                     	ds	1
  1678  000142                     begin@stuffavailable:
  1679                           	opt stack 0
  1680  000142                     oledPutChar@base:
  1681                           	opt stack 0
  1682  000142                     receiveData@holder_2465:
  1683                           	opt stack 0
  1684                           
  1685                           ; 3 bytes @ 0x9
  1686  000142                     	ds	1
  1687  000143                     LEDbegin@i2c_addr:
  1688                           	opt stack 0
  1689                           
  1690                           ; 1 bytes @ 0xA
  1691  000143                     	ds	1
  1692  000144                     LEDbegin@status:
  1693                           	opt stack 0
  1694  000144                     oledPutChar@ch:
  1695                           	opt stack 0
  1696  000144                     begin@stuffpeek:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0xB
  1700  000144                     	ds	1
  1701  000145                     receiveData@crcHolder:
  1702                           	opt stack 0
  1703  000145                     oledPutChar@status:
  1704                           	opt stack 0
  1705                           
  1706                           ; 1 bytes @ 0xC
  1707  000145                     	ds	1
  1708  000146                     receiveData@crcHolder_2466:
  1709                           	opt stack 0
  1710                           
  1711                           ; 1 bytes @ 0xD
  1712  000146                     	ds	1
  1713  000147                     receiveData@u:
  1714                           	opt stack 0
  1715                           
  1716                           ; 2 bytes @ 0xE
  1717  000147                     	ds	2
  1718  000149                     receiveData@r:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x10
  1722  000149                     	ds	4
  1723  00014D                     LEDwriteDisplay@i2c_addr:
  1724                           	opt stack 0
  1725                           
  1726                           ; 1 bytes @ 0x14
  1727  00014D                     	ds	1
  1728  00014E                     LEDwriteDisplay@timeOut:
  1729                           	opt stack 0
  1730                           
  1731                           ; 2 bytes @ 0x15
  1732  00014E                     	ds	2
  1733  000150                     LEDwriteDisplay@status:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0x17
  1737  000150                     	ds	1
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           
  1745                           	psect	cstackBANK0
  1746  0000F2                     __pcstackBANK0:
  1747                           	opt stack 0
  1748  0000F2                     sendData@whereToSend:
  1749                           	opt stack 0
  1750  0000F2                     CRCcheck@SentCRC:
  1751                           	opt stack 0
  1752  0000F2                     I2C1_MasterWrite@pdata:
  1753                           	opt stack 0
  1754  0000F2                     LEDsetValue@value:
  1755                           	opt stack 0
  1756  0000F2                     handleIndicators@i:
  1757                           	opt stack 0
  1758  0000F2                     ToSend@what:
  1759                           	opt stack 0
  1760                           
  1761                           ; 2 bytes @ 0x0
  1762  0000F2                     	ds	1
  1763  0000F3                     sendData@CS:
  1764                           	opt stack 0
  1765  0000F3                     CRCcheck@calculatedCRC:
  1766                           	opt stack 0
  1767                           
  1768                           ; 1 bytes @ 0x1
  1769  0000F3                     	ds	1
  1770  0000F4                     I2C1_MasterWrite@length:
  1771                           	opt stack 0
  1772  0000F4                     LEDsetValue@color:
  1773                           	opt stack 0
  1774  0000F4                     sendData@i:
  1775                           	opt stack 0
  1776  0000F4                     CRCcheck@arrayHolder:
  1777                           	opt stack 0
  1778                           
  1779                           ; 3 bytes @ 0x2
  1780  0000F4                     	ds	2
  1781  0000F6                     ??_LEDsetValue:
  1782  0000F6                     I2C1_MasterWrite@address:
  1783                           	opt stack 0
  1784                           
  1785                           ; 2 bytes @ 0x4
  1786  0000F6                     	ds	1
  1787  0000F7                     LEDsetValue@k:
  1788                           	opt stack 0
  1789  0000F7                     CRCcheck@rt:
  1790                           	opt stack 0
  1791                           
  1792                           ; 2 bytes @ 0x5
  1793  0000F7                     	ds	1
  1794  0000F8                     I2C1_MasterWrite@pflag:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x6
  1798  0000F8                     	ds	2
  1799  0000FA                     oledClear@row:
  1800                           	opt stack 0
  1801  0000FA                     oledPrint@s:
  1802                           	opt stack 0
  1803                           
  1804                           ; 2 bytes @ 0x8
  1805  0000FA                     	ds	2
  1806  0000FC                     oledClear@col:
  1807                           	opt stack 0
  1808                           
  1809                           ; 2 bytes @ 0xA
  1810  0000FC                     	ds	2
  1811                           tblptru	equ	0xFF8
  1812                           tblptrh	equ	0xFF7
  1813                           tblptrl	equ	0xFF6
  1814                           tablat	equ	0xFF5
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           
  1818                           	psect	cstackCOMRAM
  1819  000001                     __pcstackCOMRAM:
  1820                           	opt stack 0
  1821  000001                     ??_I2C1_Stop:
  1822  000001                     ??_TMR2_CallBack:
  1823  000001                     ?i2_UART_buff_size:
  1824                           	opt stack 0
  1825  000001                     ?i2_UART_buff_modulo_inc:
  1826                           	opt stack 0
  1827  000001                     ReadButtonState@btnnum:
  1828                           	opt stack 0
  1829  000001                     i2UART_buff_size@_this:
  1830                           	opt stack 0
  1831  000001                     i2UART_buff_modulo_inc@value:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0x0
  1835  000001                     	ds	2
  1836  000003                     ??_ReadButtonState:
  1837  000003                     I2C1_Stop@completion_code:
  1838                           	opt stack 0
  1839  000003                     TMR2_CallBack@i:
  1840                           	opt stack 0
  1841  000003                     i2UART_buff_modulo_inc@modulus:
  1842                           	opt stack 0
  1843                           
  1844                           ; 2 bytes @ 0x2
  1845  000003                     	ds	1
  1846  000004                     ??_I2C1_ISR:
  1847                           
  1848                           ; 1 bytes @ 0x3
  1849  000004                     	ds	1
  1850  000005                     TMR0_ISR@x:
  1851                           	opt stack 0
  1852  000005                     i2UART_buff_modulo_inc@my_value:
  1853                           	opt stack 0
  1854                           
  1855                           ; 2 bytes @ 0x4
  1856  000005                     	ds	2
  1857  000007                     i2UART_buff_put@_this:
  1858                           	opt stack 0
  1859  000007                     i2UART_buff_get@_this:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x6
  1863  000007                     	ds	2
  1864  000009                     ??i2_UART_buff_get:
  1865  000009                     i2UART_buff_put@c:
  1866                           	opt stack 0
  1867                           
  1868                           ; 1 bytes @ 0x8
  1869  000009                     	ds	1
  1870  00000A                     ??i2_UART_buff_put:
  1871                           
  1872                           ; 1 bytes @ 0x9
  1873  00000A                     	ds	1
  1874  00000B                     i2UART_buff_get@c:
  1875                           	opt stack 0
  1876                           
  1877                           ; 1 bytes @ 0xA
  1878  00000B                     	ds	1
  1879  00000C                     EUSART1_Receive_ISR@data:
  1880                           	opt stack 0
  1881                           
  1882                           ; 1 bytes @ 0xB
  1883  00000C                     	ds	1
  1884  00000D                     ??_INTERRUPT_InterruptManager:
  1885                           
  1886                           ; 1 bytes @ 0xC
  1887  00000D                     	ds	14
  1888  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1889                           	opt stack 0
  1890  00001B                     ?_UART_buff_modulo_inc:
  1891                           	opt stack 0
  1892  00001B                     ?_GetTime:
  1893                           	opt stack 0
  1894  00001B                     ?_UART_buff_size:
  1895                           	opt stack 0
  1896  00001B                     ?___awdiv:
  1897                           	opt stack 0
  1898  00001B                     I2C1_MasterTRBInsert@count:
  1899                           	opt stack 0
  1900  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1901                           	opt stack 0
  1902  00001B                     setLED@led:
  1903                           	opt stack 0
  1904  00001B                     Off_Led@led:
  1905                           	opt stack 0
  1906  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1907                           	opt stack 0
  1908  00001B                     GetButtonState@btnnum:
  1909                           	opt stack 0
  1910  00001B                     DataBarGraphs@BGA:
  1911                           	opt stack 0
  1912  00001B                     CRC8@data:
  1913                           	opt stack 0
  1914  00001B                     FastTransfer_buffer_modulo_inc@value:
  1915                           	opt stack 0
  1916  00001B                     crcBufS_put@_this:
  1917                           	opt stack 0
  1918  00001B                     crcBufS_status_put@_this:
  1919                           	opt stack 0
  1920  00001B                     crcBufS_get@_this:
  1921                           	opt stack 0
  1922  00001B                     UART_buff_size@_this:
  1923                           	opt stack 0
  1924  00001B                     UART_buff_modulo_inc@value:
  1925                           	opt stack 0
  1926  00001B                     UART_buff_peek@_this:
  1927                           	opt stack 0
  1928  00001B                     Delay@wait:
  1929                           	opt stack 0
  1930  00001B                     ___awdiv@dividend:
  1931                           	opt stack 0
  1932  00001B                     memmove@d1:
  1933                           	opt stack 0
  1934  00001B                     memset@p1:
  1935                           	opt stack 0
  1936                           
  1937                           ; 2 bytes @ 0x1A
  1938  00001B                     	ds	2
  1939  00001D                     ??_Delay:
  1940  00001D                     ??_setLED:
  1941  00001D                     ??_Off_Led:
  1942  00001D                     ??_GetButtonState:
  1943  00001D                     ??_UART_buff_peek:
  1944  00001D                     ?_Receive_available:
  1945                           	opt stack 0
  1946  00001D                     CRC8@len:
  1947                           	opt stack 0
  1948  00001D                     crcBufS_put@address:
  1949                           	opt stack 0
  1950  00001D                     crcBufS_status_put@time:
  1951                           	opt stack 0
  1952  00001D                     crcBufS_get@time:
  1953                           	opt stack 0
  1954  00001D                     I2C1_MasterTRBInsert@ptrb_list:
  1955                           	opt stack 0
  1956  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1957                           	opt stack 0
  1958  00001D                     DataBarGraphs@BGB:
  1959                           	opt stack 0
  1960  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1961                           	opt stack 0
  1962  00001D                     UART_buff_modulo_inc@modulus:
  1963                           	opt stack 0
  1964  00001D                     ___awdiv@divisor:
  1965                           	opt stack 0
  1966  00001D                     memmove@s1:
  1967                           	opt stack 0
  1968  00001D                     memset@c:
  1969                           	opt stack 0
  1970                           
  1971                           ; 2 bytes @ 0x1C
  1972  00001D                     	ds	1
  1973  00001E                     CRC8@sum:
  1974                           	opt stack 0
  1975  00001E                     crcBufS_put@oldCRC:
  1976                           	opt stack 0
  1977  00001E                     crcBufS_status_put@status:
  1978                           	opt stack 0
  1979  00001E                     crcBufS_get@space:
  1980                           	opt stack 0
  1981  00001E                     Delay@x:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x1D
  1985  00001E                     	ds	1
  1986  00001F                     ??_crcBufS_get:
  1987  00001F                     ??_crcBufS_status_put:
  1988  00001F                     CRC8@extract:
  1989                           	opt stack 0
  1990  00001F                     crcBufS_put@status:
  1991                           	opt stack 0
  1992  00001F                     ___awdiv@counter:
  1993                           	opt stack 0
  1994  00001F                     I2C1_MasterTRBInsert@pflag:
  1995                           	opt stack 0
  1996  00001F                     I2C1_MasterWriteTRBBuild@length:
  1997                           	opt stack 0
  1998  00001F                     SetLEDOut@lednum:
  1999                           	opt stack 0
  2000  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  2001                           	opt stack 0
  2002  00001F                     UART_buff_modulo_inc@my_value:
  2003                           	opt stack 0
  2004  00001F                     memmove@n:
  2005                           	opt stack 0
  2006  00001F                     memset@n:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x1E
  2010  00001F                     	ds	1
  2011  000020                     ??_crcBufS_put:
  2012  000020                     CRC8@tempI:
  2013                           	opt stack 0
  2014  000020                     ___awdiv@sign:
  2015                           	opt stack 0
  2016                           
  2017                           ; 1 bytes @ 0x1F
  2018  000020                     	ds	1
  2019  000021                     ??_memmove:
  2020  000021                     ?_buttonsCollector:
  2021                           	opt stack 0
  2022  000021                     CRC8@crc:
  2023                           	opt stack 0
  2024  000021                     I2C1_MasterWriteTRBBuild@address:
  2025                           	opt stack 0
  2026  000021                     SetLEDOut@state:
  2027                           	opt stack 0
  2028  000021                     FastTransfer_buffer_put@_this:
  2029                           	opt stack 0
  2030  000021                     UART_buff_put@_this:
  2031                           	opt stack 0
  2032  000021                     UART_buff_get@_this:
  2033                           	opt stack 0
  2034  000021                     ___awdiv@quotient:
  2035                           	opt stack 0
  2036  000021                     memset@p:
  2037                           	opt stack 0
  2038                           
  2039                           ; 2 bytes @ 0x20
  2040  000021                     	ds	2
  2041  000023                     ??_I2C1_MasterWriteTRBBuild:
  2042  000023                     ??_buttonsCollector:
  2043  000023                     ??_SetLEDOut:
  2044  000023                     ??_UART_buff_get:
  2045  000023                     FastTransfer_buffer_put@towhere:
  2046                           	opt stack 0
  2047  000023                     UART_buff_put@c:
  2048                           	opt stack 0
  2049  000023                     LEDsetBar@bar:
  2050                           	opt stack 0
  2051  000023                     FastTransfer_buffer_flush@_this:
  2052                           	opt stack 0
  2053  000023                     crcBufS_status_put@wantedTime:
  2054                           	opt stack 0
  2055  000023                     UART_buff_init@_this:
  2056                           	opt stack 0
  2057  000023                     memmove@d:
  2058                           	opt stack 0
  2059                           
  2060                           ; 2 bytes @ 0x22
  2061  000023                     	ds	1
  2062  000024                     ??_UART_buff_put:
  2063  000024                     FastTransfer_buffer_put@towhat:
  2064                           	opt stack 0
  2065                           
  2066                           ; 2 bytes @ 0x23
  2067  000024                     	ds	1
  2068  000025                     UART_buff_get@c:
  2069                           	opt stack 0
  2070  000025                     OLED_command@com:
  2071                           	opt stack 0
  2072  000025                     LEDBsetBrightness@b:
  2073                           	opt stack 0
  2074  000025                     LEDblinkRate@b:
  2075                           	opt stack 0
  2076  000025                     LEDsetBar@color:
  2077                           	opt stack 0
  2078  000025                     handleIndicators@receivedIndicators:
  2079                           	opt stack 0
  2080  000025                     FastTransfer_buffer_flush@clearBuffer:
  2081                           	opt stack 0
  2082  000025                     crcBufS_get@wantedTime:
  2083                           	opt stack 0
  2084  000025                     memmove@s:
  2085                           	opt stack 0
  2086                           
  2087                           ; 2 bytes @ 0x24
  2088  000025                     	ds	1
  2089  000026                     ??_FastTransfer_buffer_put:
  2090  000026                     Send_put@_data:
  2091                           	opt stack 0
  2092  000026                     OLED_command@status:
  2093                           	opt stack 0
  2094  000026                     buttonsCollector@sendVal:
  2095                           	opt stack 0
  2096                           
  2097                           ; 2 bytes @ 0x25
  2098  000026                     	ds	1
  2099  000027                     ??_handleIndicators:
  2100  000027                     ??_sendData:
  2101  000027                     ??_oledPutChar:
  2102  000027                     LEDBsetBrightness@i2c_addr:
  2103                           	opt stack 0
  2104  000027                     LEDblinkRate@i2c_addr:
  2105                           	opt stack 0
  2106  000027                     oledGotoYX@Column:
  2107                           	opt stack 0
  2108  000027                     LEDsetBar@c:
  2109                           	opt stack 0
  2110                           
  2111                           ; 2 bytes @ 0x26
  2112  000027                     	ds	1
  2113  000028                     ??_oledGotoYX:
  2114  000028                     buttonsCollector@i:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x27
  2118  000028                     	ds	1
  2119  000029                     oledGotoYX@Row:
  2120                           	opt stack 0
  2121  000029                     LEDsetBar@a:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x28
  2125  000029                     	ds	1
  2126  00002A                     ToSend@where:
  2127                           	opt stack 0
  2128                           
  2129                           ; 1 bytes @ 0x29
  2130  00002A                     	ds	1
  2131  00002B                     tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           
  2138                           ; 1 bytes @ 0x2A
  2139 ;;
  2140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2141 ;;
  2142 ;; *************** function _main *****************
  2143 ;; Defined at:
  2144 ;;		line 37 in file "main.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2158 ;;      Params:         0       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels required when called:   10
  2164 ;; This function calls:
  2165 ;;		_ClearTime
  2166 ;;		_GetTime
  2167 ;;		_LEDbegin
  2168 ;;		_LEDsetValue
  2169 ;;		_LEDwriteDisplay
  2170 ;;		_SYSTEM_Initialize
  2171 ;;		_Setupdisplay
  2172 ;;		_Splash
  2173 ;;		_updateComms
  2174 ;; This function is called by:
  2175 ;;		Startup code after reset
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text0
  2180  00271C                     __ptext0:
  2181                           	opt stack 0
  2182  00271C                     _main:
  2183                           	opt stack 21
  2184                           
  2185                           ;main.c: 39: SYSTEM_Initialize();
  2186                           
  2187                           ;incstack = 0
  2188  00271C  EC47  F014         	call	_SYSTEM_Initialize	;wreg free
  2189                           
  2190                           ;main.c: 58: (INTCONbits.GIE = 1);
  2191  002720  8EF2               	bsf	intcon,7,c	;volatile
  2192                           
  2193                           ;main.c: 61: (INTCONbits.PEIE = 1);
  2194  002722  8CF2               	bsf	intcon,6,c	;volatile
  2195                           
  2196                           ;main.c: 69: LEDbegin(0x70);
  2197  002724  0E70               	movlw	112
  2198  002726  EC43  F011         	call	_LEDbegin
  2199                           
  2200                           ;main.c: 70: LEDbegin(0x71);
  2201  00272A  0E71               	movlw	113
  2202  00272C  EC43  F011         	call	_LEDbegin
  2203                           
  2204                           ;main.c: 71: Setupdisplay();
  2205  002730  ECAF  F018         	call	_Setupdisplay	;wreg free
  2206                           
  2207                           ;main.c: 72: Splash();
  2208  002734  ECB9  F014         	call	_Splash	;wreg free
  2209                           
  2210                           ;main.c: 74: do { LATA3 = 1; } while(0);
  2211  002738  8689               	bsf	3977,3,c	;volatile
  2212  00273A                     l7130:
  2213                           
  2214                           ;main.c: 76: updateComms();
  2215  00273A  ECFD  F016         	call	_updateComms	;wreg free
  2216                           
  2217                           ;main.c: 78: if (GetTime() > 2) {
  2218  00273E  ECB9  F018         	call	_GetTime	;wreg free
  2219  002742  BE1C               	btfsc	?_GetTime+1,7,c
  2220  002744  D7FA               	goto	l7130
  2221  002746  501C               	movf	?_GetTime+1,w,c
  2222  002748  E104               	bnz	u8270
  2223  00274A  0E03               	movlw	3
  2224  00274C  5C1B               	subwf	?_GetTime,w,c
  2225  00274E  A0D8               	btfss	status,0,c
  2226  002750  D7F4               	goto	l7130
  2227  002752                     u8270:
  2228                           
  2229                           ;main.c: 79: LEDsetValue(50*0.24, 1);
  2230  002752  0E00               	movlw	0
  2231  002754  0100               	movlb	0	; () banked
  2232  002756  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
  2233  002758  0E0C               	movlw	12
  2234  00275A  6FF2               	movwf	LEDsetValue@value& (0+255),b
  2235  00275C  0E00               	movlw	0
  2236  00275E  0100               	movlb	0	; () banked
  2237  002760  6FF5               	movwf	(LEDsetValue@color+1)& (0+255),b
  2238  002762  0E01               	movlw	1
  2239  002764  6FF4               	movwf	LEDsetValue@color& (0+255),b
  2240  002766  ECF1  F010         	call	_LEDsetValue	;wreg free
  2241                           
  2242                           ;main.c: 80: LEDwriteDisplay(0x70);
  2243  00276A  0E70               	movlw	112
  2244  00276C  ECD2  F00A         	call	_LEDwriteDisplay
  2245                           
  2246                           ;main.c: 81: LEDsetValue(40*0.24, 1);
  2247  002770  0E00               	movlw	0
  2248  002772  0100               	movlb	0	; () banked
  2249  002774  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
  2250  002776  0E09               	movlw	9
  2251  002778  6FF2               	movwf	LEDsetValue@value& (0+255),b
  2252  00277A  0E00               	movlw	0
  2253  00277C  0100               	movlb	0	; () banked
  2254  00277E  6FF5               	movwf	(LEDsetValue@color+1)& (0+255),b
  2255  002780  0E01               	movlw	1
  2256  002782  6FF4               	movwf	LEDsetValue@color& (0+255),b
  2257  002784  ECF1  F010         	call	_LEDsetValue	;wreg free
  2258                           
  2259                           ;main.c: 82: LEDwriteDisplay(0x71);
  2260  002788  0E71               	movlw	113
  2261  00278A  ECD2  F00A         	call	_LEDwriteDisplay
  2262                           
  2263                           ;main.c: 83: do { LATA3 = ~LATA3; } while(0);
  2264  00278E  B689               	btfsc	3977,3,c	;volatile
  2265  002790  D002               	goto	u8280
  2266  002792  8689               	bsf	3977,3,c	;volatile
  2267  002794  D001               	goto	l7138
  2268  002796                     u8280:
  2269  002796  9689               	bcf	3977,3,c	;volatile
  2270  002798                     l7138:
  2271                           
  2272                           ;main.c: 84: ClearTime();
  2273  002798  ECC1  F018         	call	_ClearTime	;wreg free
  2274  00279C  D7CE               	goto	l7130
  2275  00279E                     __end_of_main:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           intcon	equ	0xFF2
  2282                           postinc0	equ	0xFEE
  2283                           wreg	equ	0xFE8
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _updateComms *****************
  2287 ;; Defined at:
  2288 ;;		line 12 in file "Communications.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2302 ;;      Params:         0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    9
  2309 ;; This function calls:
  2310 ;;		_DataBarGraphs
  2311 ;;		_handleIndicators
  2312 ;;		_receiveData
  2313 ;;		_respondECU
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text1
  2320  002DFA                     __ptext1:
  2321                           	opt stack 0
  2322  002DFA                     _updateComms:
  2323                           	opt stack 21
  2324                           
  2325                           ;Communications.c: 14: if (receiveData()) {
  2326                           
  2327                           ;incstack = 0
  2328  002DFA  EC6A  F000         	call	_receiveData	;wreg free
  2329  002DFE  0900               	iorlw	0
  2330  002E00  B4D8               	btfsc	status,2,c
  2331  002E02  0012               	return	
  2332                           
  2333                           ;Communications.c: 17: respondECU();
  2334  002E04  EC5B  F016         	call	_respondECU	;wreg free
  2335                           
  2336                           ;Communications.c: 18: handleIndicators(receiveArray[2]);
  2337  002E08  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  2338  002E0C  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  2339  002E10  EC08  F013         	call	_handleIndicators	;wreg free
  2340                           
  2341                           ;Communications.c: 19: DataBarGraphs(receiveArray[3], receiveArray[4]);
  2342  002E14  C106  F01B         	movff	_receiveArray+6,DataBarGraphs@BGA	;volatile
  2343  002E18  C107  F01C         	movff	_receiveArray+7,DataBarGraphs@BGA+1	;volatile
  2344  002E1C  C108  F01D         	movff	_receiveArray+8,DataBarGraphs@BGB	;volatile
  2345  002E20  C109  F01E         	movff	_receiveArray+9,DataBarGraphs@BGB+1	;volatile
  2346  002E24  EC88  F018         	call	_DataBarGraphs	;wreg free
  2347                           
  2348                           ;Communications.c: 20: receiveArray[0] = 0;
  2349  002E28  0E00               	movlw	0
  2350  002E2A  0101               	movlb	1	; () banked
  2351  002E2C  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  2352  002E2E  0E00               	movlw	0
  2353  002E30  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  2354  002E32  0012               	return	
  2355  002E34                     __end_of_updateComms:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           intcon	equ	0xFF2
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           status	equ	0xFD8
  2365                           
  2366 ;; *************** function _respondECU *****************
  2367 ;; Defined at:
  2368 ;;		line 26 in file "Communications.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2382 ;;      Params:         0       0       0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    8
  2389 ;; This function calls:
  2390 ;;		_Delay
  2391 ;;		_ToSend
  2392 ;;		_buttonsCollector
  2393 ;;		_sendData
  2394 ;; This function is called by:
  2395 ;;		_updateComms
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text2
  2400  002CB6                     __ptext2:
  2401                           	opt stack 0
  2402  002CB6                     _respondECU:
  2403                           	opt stack 21
  2404                           
  2405                           ;Communications.c: 27: LATCbits.LATC5 = 1;
  2406                           
  2407                           ;incstack = 0
  2408  002CB6  8A8B               	bsf	3979,5,c	;volatile
  2409                           
  2410                           ;Communications.c: 28: ToSend(0, 3);
  2411  002CB8  0E00               	movlw	0
  2412  002CBA  0100               	movlb	0	; () banked
  2413  002CBC  6FF3               	movwf	(ToSend@what+1)& (0+255),b
  2414  002CBE  0E03               	movlw	3
  2415  002CC0  6FF2               	movwf	ToSend@what& (0+255),b
  2416  002CC2  0E00               	movlw	0
  2417  002CC4  EC4D  F018         	call	_ToSend
  2418                           
  2419                           ;Communications.c: 29: ToSend(8, buttonsCollector());
  2420  002CC8  EC81  F014         	call	_buttonsCollector	;wreg free
  2421  002CCC  C021  F0F2         	movff	?_buttonsCollector,ToSend@what
  2422  002CD0  C022  F0F3         	movff	?_buttonsCollector+1,ToSend@what+1
  2423  002CD4  0E08               	movlw	8
  2424  002CD6  EC4D  F018         	call	_ToSend
  2425                           
  2426                           ;Communications.c: 30: Delay(9);
  2427  002CDA  0E00               	movlw	0
  2428  002CDC  6E1C               	movwf	Delay@wait+1,c
  2429  002CDE  0E09               	movlw	9
  2430  002CE0  6E1B               	movwf	Delay@wait,c
  2431  002CE2  EC36  F017         	call	_Delay	;wreg free
  2432                           
  2433                           ;Communications.c: 31: sendData(1);
  2434  002CE6  0E01               	movlw	1
  2435  002CE8  EC77  F00B         	call	_sendData
  2436                           
  2437                           ;Communications.c: 32: Delay(3);
  2438  002CEC  0E00               	movlw	0
  2439  002CEE  6E1C               	movwf	Delay@wait+1,c
  2440  002CF0  0E03               	movlw	3
  2441  002CF2  6E1B               	movwf	Delay@wait,c
  2442  002CF4  EC36  F017         	call	_Delay	;wreg free
  2443                           
  2444                           ;Communications.c: 33: LATCbits.LATC5 = 0;
  2445  002CF8  9A8B               	bcf	3979,5,c	;volatile
  2446  002CFA  0012               	return		;funcret
  2447  002CFC                     __end_of_respondECU:
  2448                           	opt stack 0
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           intcon	equ	0xFF2
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _sendData *****************
  2459 ;; Defined at:
  2460 ;;		line 54 in file "FastTransfer.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  whereToSend     1    wreg     unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  2465 ;;  i               2    2[BANK0 ] int 
  2466 ;;  CS              1    1[BANK0 ] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2476 ;;      Params:         0       0       0       0       0       0       0
  2477 ;;      Locals:         0       4       0       0       0       0       0
  2478 ;;      Temps:          1       0       0       0       0       0       0
  2479 ;;      Totals:         1       4       0       0       0       0       0
  2480 ;;Total ram usage:        5 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    7
  2483 ;; This function calls:
  2484 ;;		Absolute function
  2485 ;;		_CRC8
  2486 ;;		_FastTransfer_buffer_flush
  2487 ;;		_Send_put
  2488 ;;		_crcBufS_put
  2489 ;; This function is called by:
  2490 ;;		_respondECU
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text3
  2495  0016EE                     __ptext3:
  2496                           	opt stack 0
  2497  0016EE                     _sendData:
  2498                           	opt stack 21
  2499                           
  2500                           ;incstack = 0
  2501                           ;sendData@whereToSend stored from wreg
  2502  0016EE  0100               	movlb	0	; () banked
  2503  0016F0  6FF2               	movwf	sendData@whereToSend& (0+255),b
  2504                           
  2505                           ;FastTransfer.c: 57: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2506  0016F2  C0D9  F01B         	movff	_sendStructAddress,CRC8@data
  2507  0016F6  C0DA  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2508  0016FA  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2509  0016FE  EC36  F016         	call	_CRC8	;wreg free
  2510  001702  0100               	movlb	0	; () banked
  2511  001704  6FF3               	movwf	sendData@CS& (0+255),b
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;FastTransfer.c: 59: serial_write(0x06);
  2515  001706  D801               	call	u6498
  2516  001708  D00B               	goto	l6274
  2517  00170A                     u6498:
  2518  00170A  0005               	push	
  2519  00170C  6EFA               	movwf	pclath,c
  2520  00170E  5033               	movf	_serial_write,w,c
  2521  001710  6EFD               	movwf	tosl,c
  2522  001712  5034               	movf	_serial_write+1,w,c
  2523  001714  6EFE               	movwf	tosh,c
  2524  001716  50F8               	movf	tblptru,w,c
  2525  001718  6EFF               	movwf	tosu,c
  2526  00171A  50FA               	movf	pclath,w,c
  2527  00171C  0E06               	movlw	6
  2528  00171E  0012               	return		;indir
  2529  001720                     l6274:
  2530                           
  2531                           ;FastTransfer.c: 60: serial_write(0x85);
  2532  001720  D801               	call	u6508
  2533  001722  D00B               	goto	l6276
  2534  001724                     u6508:
  2535  001724  0005               	push	
  2536  001726  6EFA               	movwf	pclath,c
  2537  001728  5033               	movf	_serial_write,w,c
  2538  00172A  6EFD               	movwf	tosl,c
  2539  00172C  5034               	movf	_serial_write+1,w,c
  2540  00172E  6EFE               	movwf	tosh,c
  2541  001730  50F8               	movf	tblptru,w,c
  2542  001732  6EFF               	movwf	tosu,c
  2543  001734  50FA               	movf	pclath,w,c
  2544  001736  0E85               	movlw	133
  2545  001738  0012               	return		;indir
  2546  00173A                     l6276:
  2547                           
  2548                           ;FastTransfer.c: 61: serial_write(whereToSend);
  2549  00173A  D801               	call	u6518
  2550  00173C  D00C               	goto	l6278
  2551  00173E                     u6518:
  2552  00173E  0005               	push	
  2553  001740  6EFA               	movwf	pclath,c
  2554  001742  5033               	movf	_serial_write,w,c
  2555  001744  6EFD               	movwf	tosl,c
  2556  001746  5034               	movf	_serial_write+1,w,c
  2557  001748  6EFE               	movwf	tosh,c
  2558  00174A  50F8               	movf	tblptru,w,c
  2559  00174C  6EFF               	movwf	tosu,c
  2560  00174E  50FA               	movf	pclath,w,c
  2561  001750  0100               	movlb	0	; () banked
  2562  001752  51F2               	movf	sendData@whereToSend& (0+255),w,b
  2563  001754  0012               	return		;indir
  2564  001756                     l6278:
  2565                           
  2566                           ;FastTransfer.c: 62: serial_write(moduleAddress);
  2567  001756  D801               	call	u6528
  2568  001758  D00B               	goto	l6280
  2569  00175A                     u6528:
  2570  00175A  0005               	push	
  2571  00175C  6EFA               	movwf	pclath,c
  2572  00175E  5033               	movf	_serial_write,w,c
  2573  001760  6EFD               	movwf	tosl,c
  2574  001762  5034               	movf	_serial_write+1,w,c
  2575  001764  6EFE               	movwf	tosh,c
  2576  001766  50F8               	movf	tblptru,w,c
  2577  001768  6EFF               	movwf	tosu,c
  2578  00176A  50FA               	movf	pclath,w,c
  2579  00176C  503A               	movf	_moduleAddress,w,c
  2580  00176E  0012               	return		;indir
  2581  001770                     l6280:
  2582                           
  2583                           ;FastTransfer.c: 63: serial_write(ring_buffer.count);
  2584  001770  D801               	call	u6538
  2585  001772  D00C               	goto	l6282
  2586  001774                     u6538:
  2587  001774  0005               	push	
  2588  001776  6EFA               	movwf	pclath,c
  2589  001778  5033               	movf	_serial_write,w,c
  2590  00177A  6EFD               	movwf	tosl,c
  2591  00177C  5034               	movf	_serial_write+1,w,c
  2592  00177E  6EFE               	movwf	tosh,c
  2593  001780  50F8               	movf	tblptru,w,c
  2594  001782  6EFF               	movwf	tosu,c
  2595  001784  50FA               	movf	pclath,w,c
  2596  001786  0102               	movlb	2	; () banked
  2597  001788  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2598  00178A  0012               	return		;indir
  2599  00178C                     l6282:
  2600                           
  2601                           ;FastTransfer.c: 67: int i;
  2602                           ;FastTransfer.c: 68: for (i = 0; i < ring_buffer.count; i++) {
  2603  00178C  0E00               	movlw	0
  2604  00178E  0100               	movlb	0	; () banked
  2605  001790  6FF5               	movwf	(sendData@i+1)& (0+255),b
  2606  001792  0E00               	movlw	0
  2607  001794  6FF4               	movwf	sendData@i& (0+255),b
  2608  001796  D01A               	goto	l6288
  2609  001798                     l6284:
  2610                           
  2611                           ;FastTransfer.c: 69: serial_write(*(sendStructAddress + i));
  2612  001798  D801               	call	u6548
  2613  00179A  D015               	goto	l6286
  2614  00179C                     u6548:
  2615  00179C  0005               	push	
  2616  00179E  6EFA               	movwf	pclath,c
  2617  0017A0  5033               	movf	_serial_write,w,c
  2618  0017A2  6EFD               	movwf	tosl,c
  2619  0017A4  5034               	movf	_serial_write+1,w,c
  2620  0017A6  6EFE               	movwf	tosh,c
  2621  0017A8  50F8               	movf	tblptru,w,c
  2622  0017AA  6EFF               	movwf	tosu,c
  2623  0017AC  50FA               	movf	pclath,w,c
  2624  0017AE  0100               	movlb	0	; () banked
  2625  0017B0  51F4               	movf	sendData@i& (0+255),w,b
  2626  0017B2  0100               	movlb	0	; () banked
  2627  0017B4  25D9               	addwf	_sendStructAddress& (0+255),w,b
  2628  0017B6  6ED9               	movwf	fsr2l,c
  2629  0017B8  0100               	movlb	0	; () banked
  2630  0017BA  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2631  0017BC  0100               	movlb	0	; () banked
  2632  0017BE  21DA               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2633  0017C0  6EDA               	movwf	fsr2h,c
  2634  0017C2  50DF               	movf	indf2,w,c
  2635  0017C4  0012               	return		;indir
  2636  0017C6                     l6286:
  2637  0017C6  0100               	movlb	0	; () banked
  2638  0017C8  4BF4               	infsnz	sendData@i& (0+255),f,b
  2639  0017CA  2BF5               	incf	(sendData@i+1)& (0+255),f,b
  2640  0017CC                     l6288:
  2641                           
  2642                           ; BSR set to: 0
  2643  0017CC  0102               	movlb	2	; () banked
  2644  0017CE  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2645  0017D0  0100               	movlb	0	; () banked
  2646  0017D2  5DF4               	subwf	sendData@i& (0+255),w,b
  2647  0017D4  0100               	movlb	0	; () banked
  2648  0017D6  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2649  0017D8  0A80               	xorlw	128
  2650  0017DA  6E27               	movwf	??_sendData& (0+255),c
  2651  0017DC  0102               	movlb	2	; () banked
  2652  0017DE  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2653  0017E0  0A80               	xorlw	128
  2654  0017E2  5827               	subwfb	??_sendData& (0+255),w,c
  2655  0017E4  A0D8               	btfss	status,0,c
  2656  0017E6  D7D8               	goto	l6284
  2657                           
  2658                           ; BSR set to: 2
  2659                           ;FastTransfer.c: 70: }
  2660                           ;FastTransfer.c: 73: serial_write(CS);
  2661                           
  2662                           ; BSR set to: 2
  2663  0017E8  D801               	call	u6568
  2664  0017EA  D00C               	goto	l6292
  2665  0017EC                     u6568:
  2666  0017EC  0005               	push	
  2667  0017EE  6EFA               	movwf	pclath,c
  2668  0017F0  5033               	movf	_serial_write,w,c
  2669  0017F2  6EFD               	movwf	tosl,c
  2670  0017F4  5034               	movf	_serial_write+1,w,c
  2671  0017F6  6EFE               	movwf	tosh,c
  2672  0017F8  50F8               	movf	tblptru,w,c
  2673  0017FA  6EFF               	movwf	tosu,c
  2674  0017FC  50FA               	movf	pclath,w,c
  2675  0017FE  0100               	movlb	0	; () banked
  2676  001800  51F3               	movf	sendData@CS& (0+255),w,b
  2677  001802  0012               	return		;indir
  2678  001804                     l6292:
  2679                           
  2680                           ;FastTransfer.c: 76: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2681  001804  0E28               	movlw	low _crc_buffer
  2682  001806  6E1B               	movwf	crcBufS_put@_this,c
  2683  001808  0E01               	movlw	high _crc_buffer
  2684  00180A  6E1C               	movwf	crcBufS_put@_this+1,c
  2685  00180C  C0F2  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2686  001810  C0F3  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2687  001814  0E00               	movlw	0
  2688  001816  6E1F               	movwf	crcBufS_put@status,c
  2689  001818  ECA8  F00E         	call	_crcBufS_put
  2690                           
  2691                           ;FastTransfer.c: 79: FastTransfer_buffer_flush(&ring_buffer, 1);
  2692  00181C  0E00               	movlw	low _ring_buffer
  2693  00181E  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2694  001820  0E02               	movlw	high _ring_buffer
  2695  001822  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2696  001824  0E00               	movlw	0
  2697  001826  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2698  001828  0E01               	movlw	1
  2699  00182A  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2700  00182C  EC55  F015         	call	_FastTransfer_buffer_flush	;wreg free
  2701  001830  0012               	return		;funcret
  2702  001832                     __end_of_sendData:
  2703                           	opt stack 0
  2704                           tosu	equ	0xFFF
  2705                           tosh	equ	0xFFE
  2706                           tosl	equ	0xFFD
  2707                           pclath	equ	0xFFA
  2708                           tblptru	equ	0xFF8
  2709                           tblptrh	equ	0xFF7
  2710                           tblptrl	equ	0xFF6
  2711                           tablat	equ	0xFF5
  2712                           intcon	equ	0xFF2
  2713                           postinc0	equ	0xFEE
  2714                           wreg	equ	0xFE8
  2715                           indf2	equ	0xFDF
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8
  2719                           
  2720 ;; *************** function _crcBufS_put *****************
  2721 ;; Defined at:
  2722 ;;		line 326 in file "FastTransfer.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2725 ;;		 -> crc_buffer(17), 
  2726 ;;  address         1   28[COMRAM] unsigned char 
  2727 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2728 ;;  status          1   30[COMRAM] unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:         5       0       0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0
  2742 ;;      Temps:          2       0       0       0       0       0       0
  2743 ;;      Totals:         7       0       0       0       0       0       0
  2744 ;;Total ram usage:        7 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    4
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_sendData
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text4
  2755  001D50                     __ptext4:
  2756                           	opt stack 0
  2757  001D50                     _crcBufS_put:
  2758                           	opt stack 23
  2759                           
  2760                           ;FastTransfer.c: 327: _this->buf[_this->head] = address;
  2761                           
  2762                           ;incstack = 0
  2763  001D50  EE20 F00F          	lfsr	2,15
  2764  001D54  501B               	movf	crcBufS_put@_this,w,c
  2765  001D56  26D9               	addwf	fsr2l,f,c
  2766  001D58  501C               	movf	crcBufS_put@_this+1,w,c
  2767  001D5A  22DA               	addwfc	fsr2h,f,c
  2768  001D5C  CFDE F020          	movff	postinc2,??_crcBufS_put
  2769  001D60  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2770  001D64  5020               	movf	??_crcBufS_put,w,c
  2771  001D66  241B               	addwf	crcBufS_put@_this,w,c
  2772  001D68  6ED9               	movwf	fsr2l,c
  2773  001D6A  5021               	movf	??_crcBufS_put+1,w,c
  2774  001D6C  201C               	addwfc	crcBufS_put@_this+1,w,c
  2775  001D6E  6EDA               	movwf	fsr2h,c
  2776  001D70  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2777                           
  2778                           ;FastTransfer.c: 328: _this->head++;
  2779  001D74  EE20 F00F          	lfsr	2,15
  2780  001D78  501B               	movf	crcBufS_put@_this,w,c
  2781  001D7A  26D9               	addwf	fsr2l,f,c
  2782  001D7C  501C               	movf	crcBufS_put@_this+1,w,c
  2783  001D7E  22DA               	addwfc	fsr2h,f,c
  2784  001D80  2ADE               	incf	postinc2,f,c
  2785  001D82  0E00               	movlw	0
  2786  001D84  22DD               	addwfc	postdec2,f,c
  2787                           
  2788                           ;FastTransfer.c: 329: _this->buf[_this->head] = oldCRC;
  2789  001D86  EE20 F00F          	lfsr	2,15
  2790  001D8A  501B               	movf	crcBufS_put@_this,w,c
  2791  001D8C  26D9               	addwf	fsr2l,f,c
  2792  001D8E  501C               	movf	crcBufS_put@_this+1,w,c
  2793  001D90  22DA               	addwfc	fsr2h,f,c
  2794  001D92  CFDE F020          	movff	postinc2,??_crcBufS_put
  2795  001D96  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2796  001D9A  5020               	movf	??_crcBufS_put,w,c
  2797  001D9C  241B               	addwf	crcBufS_put@_this,w,c
  2798  001D9E  6ED9               	movwf	fsr2l,c
  2799  001DA0  5021               	movf	??_crcBufS_put+1,w,c
  2800  001DA2  201C               	addwfc	crcBufS_put@_this+1,w,c
  2801  001DA4  6EDA               	movwf	fsr2h,c
  2802  001DA6  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2803                           
  2804                           ;FastTransfer.c: 330: _this->head++;
  2805  001DAA  EE20 F00F          	lfsr	2,15
  2806  001DAE  501B               	movf	crcBufS_put@_this,w,c
  2807  001DB0  26D9               	addwf	fsr2l,f,c
  2808  001DB2  501C               	movf	crcBufS_put@_this+1,w,c
  2809  001DB4  22DA               	addwfc	fsr2h,f,c
  2810  001DB6  2ADE               	incf	postinc2,f,c
  2811  001DB8  0E00               	movlw	0
  2812  001DBA  22DD               	addwfc	postdec2,f,c
  2813                           
  2814                           ;FastTransfer.c: 331: _this->buf[_this->head] = status;
  2815  001DBC  EE20 F00F          	lfsr	2,15
  2816  001DC0  501B               	movf	crcBufS_put@_this,w,c
  2817  001DC2  26D9               	addwf	fsr2l,f,c
  2818  001DC4  501C               	movf	crcBufS_put@_this+1,w,c
  2819  001DC6  22DA               	addwfc	fsr2h,f,c
  2820  001DC8  CFDE F020          	movff	postinc2,??_crcBufS_put
  2821  001DCC  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2822  001DD0  5020               	movf	??_crcBufS_put,w,c
  2823  001DD2  241B               	addwf	crcBufS_put@_this,w,c
  2824  001DD4  6ED9               	movwf	fsr2l,c
  2825  001DD6  5021               	movf	??_crcBufS_put+1,w,c
  2826  001DD8  201C               	addwfc	crcBufS_put@_this+1,w,c
  2827  001DDA  6EDA               	movwf	fsr2h,c
  2828  001DDC  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2829                           
  2830                           ;FastTransfer.c: 332: _this->head++;
  2831  001DE0  EE20 F00F          	lfsr	2,15
  2832  001DE4  501B               	movf	crcBufS_put@_this,w,c
  2833  001DE6  26D9               	addwf	fsr2l,f,c
  2834  001DE8  501C               	movf	crcBufS_put@_this+1,w,c
  2835  001DEA  22DA               	addwfc	fsr2h,f,c
  2836  001DEC  2ADE               	incf	postinc2,f,c
  2837  001DEE  0E00               	movlw	0
  2838  001DF0  22DD               	addwfc	postdec2,f,c
  2839                           
  2840                           ;FastTransfer.c: 333: if (_this->head >= (5 * 3)) {
  2841  001DF2  EE20 F00F          	lfsr	2,15
  2842  001DF6  501B               	movf	crcBufS_put@_this,w,c
  2843  001DF8  26D9               	addwf	fsr2l,f,c
  2844  001DFA  501C               	movf	crcBufS_put@_this+1,w,c
  2845  001DFC  22DA               	addwfc	fsr2h,f,c
  2846  001DFE  0E01               	movlw	1
  2847  001E00  BEDB               	btfsc	plusw2,7,c
  2848  001E02  0012               	return	
  2849  001E04  0E01               	movlw	1
  2850  001E06  50DB               	movf	plusw2,w,c
  2851  001E08  E104               	bnz	u6130
  2852  001E0A  0E0F               	movlw	15
  2853  001E0C  5CDE               	subwf	postinc2,w,c
  2854  001E0E  A0D8               	btfss	status,0,c
  2855  001E10  0012               	return	
  2856  001E12                     u6130:
  2857                           
  2858                           ;FastTransfer.c: 334: _this->head = 0;
  2859  001E12  EE20 F00F          	lfsr	2,15
  2860  001E16  501B               	movf	crcBufS_put@_this,w,c
  2861  001E18  26D9               	addwf	fsr2l,f,c
  2862  001E1A  501C               	movf	crcBufS_put@_this+1,w,c
  2863  001E1C  22DA               	addwfc	fsr2h,f,c
  2864  001E1E  0E00               	movlw	0
  2865  001E20  6EDE               	movwf	postinc2,c
  2866  001E22  0E00               	movlw	0
  2867  001E24  6EDD               	movwf	postdec2,c
  2868  001E26  0012               	return	
  2869  001E28                     __end_of_crcBufS_put:
  2870                           	opt stack 0
  2871                           tosu	equ	0xFFF
  2872                           tosh	equ	0xFFE
  2873                           tosl	equ	0xFFD
  2874                           pclath	equ	0xFFA
  2875                           tblptru	equ	0xFF8
  2876                           tblptrh	equ	0xFF7
  2877                           tblptrl	equ	0xFF6
  2878                           tablat	equ	0xFF5
  2879                           intcon	equ	0xFF2
  2880                           postinc0	equ	0xFEE
  2881                           wreg	equ	0xFE8
  2882                           indf2	equ	0xFDF
  2883                           postinc2	equ	0xFDE
  2884                           postdec2	equ	0xFDD
  2885                           plusw2	equ	0xFDB
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _FastTransfer_buffer_flush *****************
  2891 ;; Defined at:
  2892 ;;		line 266 in file "FastTransfer.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  2895 ;;		 -> ring_buffer(206), 
  2896 ;;  clearBuffer     2   36[COMRAM] const int 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2908 ;;      Params:         4       0       0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0
  2911 ;;      Totals:         4       0       0       0       0       0       0
  2912 ;;Total ram usage:        4 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    5
  2915 ;; This function calls:
  2916 ;;		_memset
  2917 ;; This function is called by:
  2918 ;;		_sendData
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text5
  2923  002AAA                     __ptext5:
  2924                           	opt stack 0
  2925  002AAA                     _FastTransfer_buffer_flush:
  2926                           	opt stack 22
  2927                           
  2928                           ;FastTransfer.c: 267: _this->count = 0;
  2929                           
  2930                           ;incstack = 0
  2931  002AAA  EE20 F0CC          	lfsr	2,204
  2932  002AAE  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2933  002AB0  26D9               	addwf	fsr2l,f,c
  2934  002AB2  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2935  002AB4  22DA               	addwfc	fsr2h,f,c
  2936  002AB6  0E00               	movlw	0
  2937  002AB8  6EDE               	movwf	postinc2,c
  2938  002ABA  0E00               	movlw	0
  2939  002ABC  6EDD               	movwf	postdec2,c
  2940                           
  2941                           ;FastTransfer.c: 268: _this->head = 0;
  2942  002ABE  EE20 F0C8          	lfsr	2,200
  2943  002AC2  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2944  002AC4  26D9               	addwf	fsr2l,f,c
  2945  002AC6  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2946  002AC8  22DA               	addwfc	fsr2h,f,c
  2947  002ACA  0E00               	movlw	0
  2948  002ACC  6EDE               	movwf	postinc2,c
  2949  002ACE  0E00               	movlw	0
  2950  002AD0  6EDD               	movwf	postdec2,c
  2951                           
  2952                           ;FastTransfer.c: 269: _this->tail = 0;
  2953  002AD2  EE20 F0CA          	lfsr	2,202
  2954  002AD6  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2955  002AD8  26D9               	addwf	fsr2l,f,c
  2956  002ADA  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2957  002ADC  22DA               	addwfc	fsr2h,f,c
  2958  002ADE  0E00               	movlw	0
  2959  002AE0  6EDE               	movwf	postinc2,c
  2960  002AE2  0E00               	movlw	0
  2961  002AE4  6EDD               	movwf	postdec2,c
  2962                           
  2963                           ;FastTransfer.c: 270: if (clearBuffer) {
  2964  002AE6  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  2965  002AE8  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  2966  002AEA  B4D8               	btfsc	status,2,c
  2967  002AEC  0012               	return	
  2968                           
  2969                           ;FastTransfer.c: 271: memset(_this->buf, 0, sizeof (_this->buf));
  2970  002AEE  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  2971  002AF2  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  2972  002AF6  0E00               	movlw	0
  2973  002AF8  6E1E               	movwf	memset@c+1,c
  2974  002AFA  0E00               	movlw	0
  2975  002AFC  6E1D               	movwf	memset@c,c
  2976  002AFE  0E00               	movlw	0
  2977  002B00  6E20               	movwf	memset@n+1,c
  2978  002B02  0EC8               	movlw	200
  2979  002B04  6E1F               	movwf	memset@n,c
  2980  002B06  EC80  F017         	call	_memset	;wreg free
  2981  002B0A  0012               	return	
  2982  002B0C                     __end_of_FastTransfer_buffer_flush:
  2983                           	opt stack 0
  2984                           tosu	equ	0xFFF
  2985                           tosh	equ	0xFFE
  2986                           tosl	equ	0xFFD
  2987                           pclath	equ	0xFFA
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           intcon	equ	0xFF2
  2993                           postinc0	equ	0xFEE
  2994                           wreg	equ	0xFE8
  2995                           indf2	equ	0xFDF
  2996                           postinc2	equ	0xFDE
  2997                           postdec2	equ	0xFDD
  2998                           plusw2	equ	0xFDB
  2999                           fsr2h	equ	0xFDA
  3000                           fsr2l	equ	0xFD9
  3001                           status	equ	0xFD8
  3002                           
  3003 ;; *************** function _buttonsCollector *****************
  3004 ;; Defined at:
  3005 ;;		line 61 in file "Communications.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  i               2   39[COMRAM] int 
  3010 ;;  sendVal         2   37[COMRAM] unsigned int 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  2   32[COMRAM] unsigned int 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3020 ;;      Params:         2       0       0       0       0       0       0
  3021 ;;      Locals:         4       0       0       0       0       0       0
  3022 ;;      Temps:          3       0       0       0       0       0       0
  3023 ;;      Totals:         9       0       0       0       0       0       0
  3024 ;;Total ram usage:        9 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    5
  3027 ;; This function calls:
  3028 ;;		_GetButtonState
  3029 ;; This function is called by:
  3030 ;;		_respondECU
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text6
  3035  002902                     __ptext6:
  3036                           	opt stack 0
  3037  002902                     _buttonsCollector:
  3038                           	opt stack 23
  3039                           
  3040                           ;Communications.c: 62: unsigned int sendVal = 0;
  3041                           
  3042                           ;incstack = 0
  3043  002902  0E00               	movlw	0
  3044  002904  6E27               	movwf	buttonsCollector@sendVal+1,c
  3045  002906  0E00               	movlw	0
  3046  002908  6E26               	movwf	buttonsCollector@sendVal,c
  3047                           
  3048                           ;Communications.c: 63: int i = 0;
  3049  00290A  0E00               	movlw	0
  3050  00290C  6E29               	movwf	buttonsCollector@i+1,c
  3051  00290E  0E00               	movlw	0
  3052  002910  6E28               	movwf	buttonsCollector@i,c
  3053                           
  3054                           ;Communications.c: 64: for (i = 0; i < 8; i++) {
  3055  002912  0E00               	movlw	0
  3056  002914  6E29               	movwf	buttonsCollector@i+1,c
  3057  002916  0E00               	movlw	0
  3058  002918  6E28               	movwf	buttonsCollector@i,c
  3059  00291A  BE29               	btfsc	buttonsCollector@i+1,7,c
  3060  00291C  D006               	goto	l4422
  3061  00291E  5029               	movf	buttonsCollector@i+1,w,c
  3062  002920  E123               	bnz	l935
  3063  002922  0E08               	movlw	8
  3064  002924  5C28               	subwf	buttonsCollector@i,w,c
  3065  002926  B0D8               	btfsc	status,0,c
  3066  002928  D01F               	goto	l935
  3067  00292A                     l4422:
  3068                           
  3069                           ;Communications.c: 65: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  3070  00292A  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  3071  00292E  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  3072  002932  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  3073  002936  ECD5  F017         	call	_GetButtonState	;wreg free
  3074  00293A  0B01               	andlw	1
  3075  00293C  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  3076  00293E  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  3077  002940  2A23               	incf	??_buttonsCollector,f,c
  3078  002942  D003               	goto	u3534
  3079  002944                     u3535:
  3080  002944  90D8               	bcf	status,0,c
  3081  002946  3624               	rlcf	??_buttonsCollector+1,f,c
  3082  002948  3625               	rlcf	??_buttonsCollector+2,f,c
  3083  00294A                     u3534:
  3084  00294A  2E23               	decfsz	??_buttonsCollector,f,c
  3085  00294C  D7FB               	goto	u3535
  3086  00294E  5026               	movf	buttonsCollector@sendVal,w,c
  3087  002950  1024               	iorwf	??_buttonsCollector+1,w,c
  3088  002952  6E26               	movwf	buttonsCollector@sendVal,c
  3089  002954  5027               	movf	buttonsCollector@sendVal+1,w,c
  3090  002956  1025               	iorwf	??_buttonsCollector+2,w,c
  3091  002958  6E27               	movwf	buttonsCollector@sendVal+1,c
  3092  00295A  4A28               	infsnz	buttonsCollector@i,f,c
  3093  00295C  2A29               	incf	buttonsCollector@i+1,f,c
  3094  00295E  BE29               	btfsc	buttonsCollector@i+1,7,c
  3095  002960  D7E4               	goto	l4422
  3096  002962  5029               	movf	buttonsCollector@i+1,w,c
  3097  002964  E101               	bnz	u3540
  3098  002966  D7DD               	goto	L1
  3099  002968                     u3540:
  3100  002968                     l935:
  3101                           
  3102                           ;Communications.c: 66: }
  3103                           ;Communications.c: 67: return sendVal;
  3104  002968  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  3105  00296C  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  3106  002970  0012               	return		;funcret
  3107  002972                     __end_of_buttonsCollector:
  3108                           	opt stack 0
  3109                           tosu	equ	0xFFF
  3110                           tosh	equ	0xFFE
  3111                           tosl	equ	0xFFD
  3112                           pclath	equ	0xFFA
  3113                           tblptru	equ	0xFF8
  3114                           tblptrh	equ	0xFF7
  3115                           tblptrl	equ	0xFF6
  3116                           tablat	equ	0xFF5
  3117                           intcon	equ	0xFF2
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           indf2	equ	0xFDF
  3121                           postinc2	equ	0xFDE
  3122                           postdec2	equ	0xFDD
  3123                           plusw2	equ	0xFDB
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function _GetButtonState *****************
  3129 ;; Defined at:
  3130 ;;		line 184 in file "IO.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  btnnum          2   26[COMRAM] int 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      unsigned char 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3144 ;;      Params:         2       0       0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0
  3146 ;;      Temps:          4       0       0       0       0       0       0
  3147 ;;      Totals:         6       0       0       0       0       0       0
  3148 ;;Total ram usage:        6 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    4
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_buttonsCollector
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text7
  3159  002FAA                     __ptext7:
  3160                           	opt stack 0
  3161  002FAA                     _GetButtonState:
  3162                           	opt stack 23
  3163                           
  3164                           ;IO.c: 185: return butnarray[btnnum - 1];
  3165                           
  3166                           ;incstack = 0
  3167  002FAA  0EFF               	movlw	255
  3168  002FAC  6E1D               	movwf	??_GetButtonState& (0+255),c
  3169  002FAE  0EFF               	movlw	255
  3170  002FB0  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  3171  002FB2  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  3172  002FB6  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  3173  002FBA  501D               	movf	??_GetButtonState,w,c
  3174  002FBC  261F               	addwf	??_GetButtonState+2,f,c
  3175  002FBE  501E               	movf	??_GetButtonState+1,w,c
  3176  002FC0  2220               	addwfc	??_GetButtonState+3,f,c
  3177  002FC2  0EB0               	movlw	low _butnarray
  3178  002FC4  241F               	addwf	??_GetButtonState+2,w,c
  3179  002FC6  6ED9               	movwf	fsr2l,c
  3180  002FC8  0E00               	movlw	high _butnarray
  3181  002FCA  2020               	addwfc	??_GetButtonState+3,w,c
  3182  002FCC  6EDA               	movwf	fsr2h,c
  3183  002FCE  50DF               	movf	indf2,w,c
  3184  002FD0  0012               	return	
  3185  002FD2                     __end_of_GetButtonState:
  3186                           	opt stack 0
  3187                           tosu	equ	0xFFF
  3188                           tosh	equ	0xFFE
  3189                           tosl	equ	0xFFD
  3190                           pclath	equ	0xFFA
  3191                           tblptru	equ	0xFF8
  3192                           tblptrh	equ	0xFF7
  3193                           tblptrl	equ	0xFF6
  3194                           tablat	equ	0xFF5
  3195                           intcon	equ	0xFF2
  3196                           postinc0	equ	0xFEE
  3197                           wreg	equ	0xFE8
  3198                           indf2	equ	0xFDF
  3199                           postinc2	equ	0xFDE
  3200                           postdec2	equ	0xFDD
  3201                           plusw2	equ	0xFDB
  3202                           fsr2h	equ	0xFDA
  3203                           fsr2l	equ	0xFD9
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _ToSend *****************
  3207 ;; Defined at:
  3208 ;;		line 221 in file "FastTransfer.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  where           1    wreg     unsigned char 
  3211 ;;  what            2    0[BANK0 ] unsigned int 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  where           1   41[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3223 ;;      Params:         0       2       0       0       0       0       0
  3224 ;;      Locals:         1       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0
  3226 ;;      Totals:         1       2       0       0       0       0       0
  3227 ;;Total ram usage:        3 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    6
  3230 ;; This function calls:
  3231 ;;		_FastTransfer_buffer_put
  3232 ;; This function is called by:
  3233 ;;		_respondECU
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text8
  3238  00309A                     __ptext8:
  3239                           	opt stack 0
  3240  00309A                     _ToSend:
  3241                           	opt stack 22
  3242                           
  3243                           ;incstack = 0
  3244                           ;ToSend@where stored from wreg
  3245  00309A  6E2A               	movwf	ToSend@where,c
  3246                           
  3247                           ;FastTransfer.c: 222: FastTransfer_buffer_put(&ring_buffer, where, what);
  3248  00309C  0E00               	movlw	low _ring_buffer
  3249  00309E  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3250  0030A0  0E02               	movlw	high _ring_buffer
  3251  0030A2  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3252  0030A4  C02A  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3253  0030A8  C0F2  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3254  0030AC  C0F3  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3255  0030B0  EC6F  F009         	call	_FastTransfer_buffer_put	;wreg free
  3256  0030B4  0012               	return		;funcret
  3257  0030B6                     __end_of_ToSend:
  3258                           	opt stack 0
  3259                           tosu	equ	0xFFF
  3260                           tosh	equ	0xFFE
  3261                           tosl	equ	0xFFD
  3262                           pclath	equ	0xFFA
  3263                           tblptru	equ	0xFF8
  3264                           tblptrh	equ	0xFF7
  3265                           tblptrl	equ	0xFF6
  3266                           tablat	equ	0xFF5
  3267                           intcon	equ	0xFF2
  3268                           postinc0	equ	0xFEE
  3269                           wreg	equ	0xFE8
  3270                           indf2	equ	0xFDF
  3271                           postinc2	equ	0xFDE
  3272                           postdec2	equ	0xFDD
  3273                           plusw2	equ	0xFDB
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function _FastTransfer_buffer_put *****************
  3279 ;; Defined at:
  3280 ;;		line 228 in file "FastTransfer.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3283 ;;		 -> ring_buffer(206), 
  3284 ;;  towhere         1   34[COMRAM] unsigned char 
  3285 ;;  towhat          2   35[COMRAM] unsigned int 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3297 ;;      Params:         5       0       0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0
  3299 ;;      Temps:          2       0       0       0       0       0       0
  3300 ;;      Totals:         7       0       0       0       0       0       0
  3301 ;;Total ram usage:        7 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    5
  3304 ;; This function calls:
  3305 ;;		_FastTransfer_buffer_modulo_inc
  3306 ;; This function is called by:
  3307 ;;		_ToSend
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text9
  3312  0012DE                     __ptext9:
  3313                           	opt stack 0
  3314  0012DE                     _FastTransfer_buffer_put:
  3315                           	opt stack 22
  3316                           
  3317                           ;FastTransfer.c: 230: group.integer = towhat;
  3318                           
  3319                           ;incstack = 0
  3320  0012DE  C024  F02B         	movff	FastTransfer_buffer_put@towhat,_group
  3321  0012E2  C025  F02C         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3322                           
  3323                           ;FastTransfer.c: 232: if (_this->count < (200 - 3)) {
  3324  0012E6  EE20 F0CC          	lfsr	2,204
  3325  0012EA  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3326  0012EC  26D9               	addwf	fsr2l,f,c
  3327  0012EE  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3328  0012F0  22DA               	addwfc	fsr2h,f,c
  3329  0012F2  0E01               	movlw	1
  3330  0012F4  BEDB               	btfsc	plusw2,7,c
  3331  0012F6  D007               	goto	l4142
  3332  0012F8  0E01               	movlw	1
  3333  0012FA  50DB               	movf	plusw2,w,c
  3334  0012FC  E103               	bnz	u3171
  3335  0012FE  0EC5               	movlw	197
  3336  001300  5CDE               	subwf	postinc2,w,c
  3337  001302  B0D8               	btfsc	status,0,c
  3338  001304                     u3171:
  3339  001304  0012               	return	
  3340  001306                     l4142:
  3341                           
  3342                           ;FastTransfer.c: 233: _this->buf[_this->head] = towhere;
  3343  001306  EE20 F0C8          	lfsr	2,200
  3344  00130A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3345  00130C  26D9               	addwf	fsr2l,f,c
  3346  00130E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3347  001310  22DA               	addwfc	fsr2h,f,c
  3348  001312  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3349  001316  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3350  00131A  5026               	movf	??_FastTransfer_buffer_put,w,c
  3351  00131C  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3352  00131E  6ED9               	movwf	fsr2l,c
  3353  001320  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3354  001322  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3355  001324  6EDA               	movwf	fsr2h,c
  3356  001326  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3357                           
  3358                           ;FastTransfer.c: 234: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3359  00132A  EE20 F0C8          	lfsr	2,200
  3360  00132E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3361  001330  26D9               	addwf	fsr2l,f,c
  3362  001332  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3363  001334  22DA               	addwfc	fsr2h,f,c
  3364  001336  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3365  00133A  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3366  00133E  0E00               	movlw	0
  3367  001340  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3368  001342  0EC8               	movlw	200
  3369  001344  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3370  001346  EC96  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3371  00134A  EE20 F0C8          	lfsr	2,200
  3372  00134E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3373  001350  26D9               	addwf	fsr2l,f,c
  3374  001352  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3375  001354  22DA               	addwfc	fsr2h,f,c
  3376  001356  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3377  00135A  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3378                           
  3379                           ;FastTransfer.c: 235: ++_this->count;
  3380  00135E  EE20 F0CC          	lfsr	2,204
  3381  001362  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3382  001364  26D9               	addwf	fsr2l,f,c
  3383  001366  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3384  001368  22DA               	addwfc	fsr2h,f,c
  3385  00136A  2ADE               	incf	postinc2,f,c
  3386  00136C  0E00               	movlw	0
  3387  00136E  22DD               	addwfc	postdec2,f,c
  3388                           
  3389                           ;FastTransfer.c: 236: _this->buf[_this->head] = group.parts[0];
  3390  001370  EE20 F0C8          	lfsr	2,200
  3391  001374  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3392  001376  26D9               	addwf	fsr2l,f,c
  3393  001378  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3394  00137A  22DA               	addwfc	fsr2h,f,c
  3395  00137C  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3396  001380  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3397  001384  5026               	movf	??_FastTransfer_buffer_put,w,c
  3398  001386  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3399  001388  6ED9               	movwf	fsr2l,c
  3400  00138A  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3401  00138C  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3402  00138E  6EDA               	movwf	fsr2h,c
  3403  001390  C02B  FFDF         	movff	_group,indf2
  3404                           
  3405                           ;FastTransfer.c: 237: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3406  001394  EE20 F0C8          	lfsr	2,200
  3407  001398  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3408  00139A  26D9               	addwf	fsr2l,f,c
  3409  00139C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3410  00139E  22DA               	addwfc	fsr2h,f,c
  3411  0013A0  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3412  0013A4  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3413  0013A8  0E00               	movlw	0
  3414  0013AA  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3415  0013AC  0EC8               	movlw	200
  3416  0013AE  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3417  0013B0  EC96  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3418  0013B4  EE20 F0C8          	lfsr	2,200
  3419  0013B8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3420  0013BA  26D9               	addwf	fsr2l,f,c
  3421  0013BC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3422  0013BE  22DA               	addwfc	fsr2h,f,c
  3423  0013C0  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3424  0013C4  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3425                           
  3426                           ;FastTransfer.c: 238: ++_this->count;
  3427  0013C8  EE20 F0CC          	lfsr	2,204
  3428  0013CC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3429  0013CE  26D9               	addwf	fsr2l,f,c
  3430  0013D0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3431  0013D2  22DA               	addwfc	fsr2h,f,c
  3432  0013D4  2ADE               	incf	postinc2,f,c
  3433  0013D6  0E00               	movlw	0
  3434  0013D8  22DD               	addwfc	postdec2,f,c
  3435                           
  3436                           ;FastTransfer.c: 239: _this->buf[_this->head] = group.parts[1];
  3437  0013DA  EE20 F0C8          	lfsr	2,200
  3438  0013DE  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3439  0013E0  26D9               	addwf	fsr2l,f,c
  3440  0013E2  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3441  0013E4  22DA               	addwfc	fsr2h,f,c
  3442  0013E6  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3443  0013EA  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3444  0013EE  5026               	movf	??_FastTransfer_buffer_put,w,c
  3445  0013F0  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3446  0013F2  6ED9               	movwf	fsr2l,c
  3447  0013F4  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3448  0013F6  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3449  0013F8  6EDA               	movwf	fsr2h,c
  3450  0013FA  C02C  FFDF         	movff	_group+1,indf2
  3451                           
  3452                           ;FastTransfer.c: 240: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3453  0013FE  EE20 F0C8          	lfsr	2,200
  3454  001402  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3455  001404  26D9               	addwf	fsr2l,f,c
  3456  001406  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3457  001408  22DA               	addwfc	fsr2h,f,c
  3458  00140A  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3459  00140E  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3460  001412  0E00               	movlw	0
  3461  001414  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3462  001416  0EC8               	movlw	200
  3463  001418  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3464  00141A  EC96  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3465  00141E  EE20 F0C8          	lfsr	2,200
  3466  001422  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3467  001424  26D9               	addwf	fsr2l,f,c
  3468  001426  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3469  001428  22DA               	addwfc	fsr2h,f,c
  3470  00142A  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3471  00142E  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3472                           
  3473                           ;FastTransfer.c: 241: ++_this->count;
  3474  001432  EE20 F0CC          	lfsr	2,204
  3475  001436  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3476  001438  26D9               	addwf	fsr2l,f,c
  3477  00143A  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3478  00143C  22DA               	addwfc	fsr2h,f,c
  3479  00143E  2ADE               	incf	postinc2,f,c
  3480  001440  0E00               	movlw	0
  3481  001442  22DD               	addwfc	postdec2,f,c
  3482  001444  0012               	return	
  3483  001446                     __end_of_FastTransfer_buffer_put:
  3484                           	opt stack 0
  3485                           tosu	equ	0xFFF
  3486                           tosh	equ	0xFFE
  3487                           tosl	equ	0xFFD
  3488                           pclath	equ	0xFFA
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           intcon	equ	0xFF2
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           indf2	equ	0xFDF
  3497                           postinc2	equ	0xFDE
  3498                           postdec2	equ	0xFDD
  3499                           plusw2	equ	0xFDB
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3505 ;; Defined at:
  3506 ;;		line 278 in file "FastTransfer.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  value           2   26[COMRAM] const unsigned int 
  3509 ;;  modulus         2   28[COMRAM] const unsigned int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  my_value        2   30[COMRAM] unsigned int 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2   26[COMRAM] unsigned int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3521 ;;      Params:         4       0       0       0       0       0       0
  3522 ;;      Locals:         2       0       0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0
  3524 ;;      Totals:         6       0       0       0       0       0       0
  3525 ;;Total ram usage:        6 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    4
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_FastTransfer_buffer_put
  3532 ;;		_FastTransfer_buffer_get
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text10
  3537  002F2C                     __ptext10:
  3538                           	opt stack 0
  3539  002F2C                     _FastTransfer_buffer_modulo_inc:
  3540                           	opt stack 22
  3541                           
  3542                           ;FastTransfer.c: 279: unsigned int my_value = value + 1;
  3543                           
  3544                           ;incstack = 0
  3545  002F2C  0E01               	movlw	1
  3546  002F2E  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3547  002F30  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3548  002F32  0E00               	movlw	0
  3549  002F34  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3550  002F36  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3551                           
  3552                           ;FastTransfer.c: 280: if (my_value >= modulus) {
  3553  002F38  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3554  002F3A  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3555  002F3C  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3556  002F3E  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3557  002F40  A0D8               	btfss	status,0,c
  3558  002F42  D004               	goto	l4002
  3559                           
  3560                           ;FastTransfer.c: 281: my_value = 0;
  3561  002F44  0E00               	movlw	0
  3562  002F46  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3563  002F48  0E00               	movlw	0
  3564  002F4A  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3565  002F4C                     l4002:
  3566                           
  3567                           ;FastTransfer.c: 282: }
  3568                           ;FastTransfer.c: 283: return (my_value);
  3569  002F4C  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3570  002F50  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3571  002F54  0012               	return	
  3572  002F56                     __end_of_FastTransfer_buffer_modulo_inc:
  3573                           	opt stack 0
  3574                           tosu	equ	0xFFF
  3575                           tosh	equ	0xFFE
  3576                           tosl	equ	0xFFD
  3577                           pclath	equ	0xFFA
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           intcon	equ	0xFF2
  3583                           postinc0	equ	0xFEE
  3584                           wreg	equ	0xFE8
  3585                           indf2	equ	0xFDF
  3586                           postinc2	equ	0xFDE
  3587                           postdec2	equ	0xFDD
  3588                           plusw2	equ	0xFDB
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _Delay *****************
  3594 ;; Defined at:
  3595 ;;		line 6 in file "Function.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  wait            2   26[COMRAM] int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  x               2   29[COMRAM] int 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3609 ;;      Params:         2       0       0       0       0       0       0
  3610 ;;      Locals:         2       0       0       0       0       0       0
  3611 ;;      Temps:          1       0       0       0       0       0       0
  3612 ;;      Totals:         5       0       0       0       0       0       0
  3613 ;;Total ram usage:        5 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    4
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_respondECU
  3620 ;;		_TestBarGraph
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text11
  3625  002E6C                     __ptext11:
  3626                           	opt stack 0
  3627  002E6C                     _Delay:
  3628                           	opt stack 24
  3629                           
  3630                           ;Function.c: 7: int x;
  3631                           ;Function.c: 8: for (x = 0; x < wait; x++) {
  3632                           
  3633                           ;incstack = 0
  3634  002E6C  0E00               	movlw	0
  3635  002E6E  6E1F               	movwf	Delay@x+1,c
  3636  002E70  0E00               	movlw	0
  3637  002E72  6E1E               	movwf	Delay@x,c
  3638  002E74  D00A               	goto	l1330
  3639  002E76                     l4430:
  3640                           
  3641                           ;Function.c: 9: _delay((unsigned long)((1)*(16000000/4000.0)));
  3642  002E76  0E06               	movlw	6
  3643  002E78  6E1D               	movwf	??_Delay& (0+255),c
  3644  002E7A  0E30               	movlw	48
  3645  002E7C                     u8477:
  3646  002E7C  2EE8               	decfsz	wreg,f,c
  3647  002E7E  D7FE               	goto	u8477
  3648  002E80  2E1D               	decfsz	??_Delay& (0+255),f,c
  3649  002E82  D7FC               	goto	u8477
  3650  002E84  D000               	nop2	
  3651  002E86  4A1E               	infsnz	Delay@x,f,c
  3652  002E88  2A1F               	incf	Delay@x+1,f,c
  3653  002E8A                     l1330:
  3654  002E8A  501B               	movf	Delay@wait,w,c
  3655  002E8C  5C1E               	subwf	Delay@x,w,c
  3656  002E8E  501F               	movf	Delay@x+1,w,c
  3657  002E90  0A80               	xorlw	128
  3658  002E92  6E1D               	movwf	??_Delay& (0+255),c
  3659  002E94  501C               	movf	Delay@wait+1,w,c
  3660  002E96  0A80               	xorlw	128
  3661  002E98  581D               	subwfb	??_Delay& (0+255),w,c
  3662  002E9A  B0D8               	btfsc	status,0,c
  3663  002E9C  0012               	return	
  3664  002E9E  D7EB               	goto	l4430
  3665  002EA0                     __end_of_Delay:
  3666                           	opt stack 0
  3667                           tosu	equ	0xFFF
  3668                           tosh	equ	0xFFE
  3669                           tosl	equ	0xFFD
  3670                           pclath	equ	0xFFA
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           intcon	equ	0xFF2
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           indf2	equ	0xFDF
  3679                           postinc2	equ	0xFDE
  3680                           postdec2	equ	0xFDD
  3681                           plusw2	equ	0xFDB
  3682                           fsr2h	equ	0xFDA
  3683                           fsr2l	equ	0xFD9
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function _receiveData *****************
  3687 ;; Defined at:
  3688 ;;		line 83 in file "FastTransfer.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  holder          3    9[BANK1 ] unsigned char [3]
  3693 ;;  crcHolder       1   13[BANK1 ] unsigned char 
  3694 ;;  holder          3    6[BANK1 ] unsigned char [3]
  3695 ;;  crcHolder       1   12[BANK1 ] unsigned char 
  3696 ;;  u               2   14[BANK1 ] int 
  3697 ;;  r               2   16[BANK1 ] int 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      unsigned char 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3707 ;;      Params:         0       0       0       0       0       0       0
  3708 ;;      Locals:         0       0      12       0       0       0       0
  3709 ;;      Temps:          0       0       6       0       0       0       0
  3710 ;;      Totals:         0       0      18       0       0       0       0
  3711 ;;Total ram usage:       18 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    8
  3714 ;; This function calls:
  3715 ;;		Absolute function
  3716 ;;		_CRC8
  3717 ;;		_CRCcheck
  3718 ;;		_Receive_available
  3719 ;;		_Receive_get
  3720 ;;		_Receive_peek
  3721 ;;		_Send_put
  3722 ;; This function is called by:
  3723 ;;		_updateComms
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text12
  3728  0000D4                     __ptext12:
  3729                           	opt stack 0
  3730  0000D4                     _receiveData:
  3731                           	opt stack 21
  3732                           
  3733                           ;FastTransfer.c: 86: if (rx_len == 0) {
  3734                           
  3735                           ;incstack = 0
  3736  0000D4  503E               	movf	_rx_len,w,c
  3737  0000D6  A4D8               	btfss	status,2,c
  3738  0000D8  D0AC               	goto	l6594
  3739                           
  3740                           ;FastTransfer.c: 88: if (serial_available() > 4) {
  3741  0000DA  D801               	call	u7148
  3742  0000DC  D00A               	goto	u7149
  3743  0000DE                     u7148:
  3744  0000DE  0005               	push	
  3745  0000E0  6EFA               	movwf	pclath,c
  3746  0000E2  502F               	movf	_serial_available,w,c
  3747  0000E4  6EFD               	movwf	tosl,c
  3748  0000E6  5030               	movf	_serial_available+1,w,c
  3749  0000E8  6EFE               	movwf	tosh,c
  3750  0000EA  50F8               	movf	tblptru,w,c
  3751  0000EC  6EFF               	movwf	tosu,c
  3752  0000EE  50FA               	movf	pclath,w,c
  3753  0000F0  0012               	return		;indir
  3754  0000F2                     u7149:
  3755  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  3756  0000F4  D09E               	goto	l6594
  3757  0000F6  501E               	movf	?_Receive_available+1,w,c
  3758  0000F8  E11E               	bnz	l6570
  3759  0000FA  0E05               	movlw	5
  3760  0000FC  5C1D               	subwf	?_Receive_available,w,c
  3761  0000FE  B0D8               	btfsc	status,0,c
  3762  000100  D01A               	goto	l6570
  3763  000102  D097               	goto	l6594
  3764  000104                     l6562:
  3765                           
  3766                           ;FastTransfer.c: 95: alignErrorCounter++;
  3767  000104  0100               	movlb	0	; () banked
  3768  000106  4BC9               	infsnz	_alignErrorCounter& (0+255),f,b
  3769  000108  2BCA               	incf	(_alignErrorCounter+1)& (0+255),f,b
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;FastTransfer.c: 96: if (serial_available() < 5)
  3773  00010A  D801               	call	u7168
  3774  00010C  D00A               	goto	u7169
  3775  00010E                     u7168:
  3776  00010E  0005               	push	
  3777  000110  6EFA               	movwf	pclath,c
  3778  000112  502F               	movf	_serial_available,w,c
  3779  000114  6EFD               	movwf	tosl,c
  3780  000116  5030               	movf	_serial_available+1,w,c
  3781  000118  6EFE               	movwf	tosh,c
  3782  00011A  50F8               	movf	tblptru,w,c
  3783  00011C  6EFF               	movwf	tosu,c
  3784  00011E  50FA               	movf	pclath,w,c
  3785  000120  0012               	return		;indir
  3786  000122                     u7169:
  3787  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  3788  000124  D006               	goto	l6566
  3789  000126  501E               	movf	?_Receive_available+1,w,c
  3790  000128  E106               	bnz	l6570
  3791  00012A  0E05               	movlw	5
  3792  00012C  5C1D               	subwf	?_Receive_available,w,c
  3793  00012E  B0D8               	btfsc	status,0,c
  3794  000130  D002               	goto	l6570
  3795  000132                     l6566:
  3796                           
  3797                           ;FastTransfer.c: 97: return 0;
  3798  000132  0E00               	movlw	0
  3799  000134  0012               	return	
  3800  000136                     l6570:
  3801  000136  D801               	call	u7188
  3802  000138  D00A               	goto	u7189
  3803  00013A                     u7188:
  3804  00013A  0005               	push	
  3805  00013C  6EFA               	movwf	pclath,c
  3806  00013E  5031               	movf	_serial_read,w,c
  3807  000140  6EFD               	movwf	tosl,c
  3808  000142  5032               	movf	_serial_read+1,w,c
  3809  000144  6EFE               	movwf	tosh,c
  3810  000146  50F8               	movf	tblptru,w,c
  3811  000148  6EFF               	movwf	tosu,c
  3812  00014A  50FA               	movf	pclath,w,c
  3813  00014C  0012               	return		;indir
  3814  00014E                     u7189:
  3815  00014E  0A06               	xorlw	6
  3816  000150  A4D8               	btfss	status,2,c
  3817  000152  D7D8               	goto	l6562
  3818                           
  3819                           ;FastTransfer.c: 98: }
  3820                           ;FastTransfer.c: 99: if (serial_read() == 0x85) {
  3821  000154  D801               	call	u7208
  3822  000156  D00A               	goto	u7209
  3823  000158                     u7208:
  3824  000158  0005               	push	
  3825  00015A  6EFA               	movwf	pclath,c
  3826  00015C  5031               	movf	_serial_read,w,c
  3827  00015E  6EFD               	movwf	tosl,c
  3828  000160  5032               	movf	_serial_read+1,w,c
  3829  000162  6EFE               	movwf	tosh,c
  3830  000164  50F8               	movf	tblptru,w,c
  3831  000166  6EFF               	movwf	tosu,c
  3832  000168  50FA               	movf	pclath,w,c
  3833  00016A  0012               	return		;indir
  3834  00016C                     u7209:
  3835  00016C  0A85               	xorlw	133
  3836  00016E  A4D8               	btfss	status,2,c
  3837  000170  D060               	goto	l6594
  3838                           
  3839                           ;FastTransfer.c: 101: rx_address = serial_read();
  3840  000172  D801               	call	u7228
  3841  000174  D00A               	goto	u7229
  3842  000176                     u7228:
  3843  000176  0005               	push	
  3844  000178  6EFA               	movwf	pclath,c
  3845  00017A  5031               	movf	_serial_read,w,c
  3846  00017C  6EFD               	movwf	tosl,c
  3847  00017E  5032               	movf	_serial_read+1,w,c
  3848  000180  6EFE               	movwf	tosh,c
  3849  000182  50F8               	movf	tblptru,w,c
  3850  000184  6EFF               	movwf	tosu,c
  3851  000186  50FA               	movf	pclath,w,c
  3852  000188  0012               	return		;indir
  3853  00018A                     u7229:
  3854  00018A  6E3C               	movwf	_rx_address,c
  3855                           
  3856                           ;FastTransfer.c: 102: returnAddress = serial_read();
  3857  00018C  D801               	call	u7238
  3858  00018E  D00A               	goto	u7239
  3859  000190                     u7238:
  3860  000190  0005               	push	
  3861  000192  6EFA               	movwf	pclath,c
  3862  000194  5031               	movf	_serial_read,w,c
  3863  000196  6EFD               	movwf	tosl,c
  3864  000198  5032               	movf	_serial_read+1,w,c
  3865  00019A  6EFE               	movwf	tosh,c
  3866  00019C  50F8               	movf	tblptru,w,c
  3867  00019E  6EFF               	movwf	tosu,c
  3868  0001A0  50FA               	movf	pclath,w,c
  3869  0001A2  0012               	return		;indir
  3870  0001A4                     u7239:
  3871  0001A4  6E3B               	movwf	_returnAddress,c
  3872                           
  3873                           ;FastTransfer.c: 103: rx_len = serial_read();
  3874  0001A6  D801               	call	u7248
  3875  0001A8  D00A               	goto	u7249
  3876  0001AA                     u7248:
  3877  0001AA  0005               	push	
  3878  0001AC  6EFA               	movwf	pclath,c
  3879  0001AE  5031               	movf	_serial_read,w,c
  3880  0001B0  6EFD               	movwf	tosl,c
  3881  0001B2  5032               	movf	_serial_read+1,w,c
  3882  0001B4  6EFE               	movwf	tosh,c
  3883  0001B6  50F8               	movf	tblptru,w,c
  3884  0001B8  6EFF               	movwf	tosu,c
  3885  0001BA  50FA               	movf	pclath,w,c
  3886  0001BC  0012               	return		;indir
  3887  0001BE                     u7249:
  3888  0001BE  6E3E               	movwf	_rx_len,c
  3889                           
  3890                           ;FastTransfer.c: 106: if (rx_address != moduleAddress) {
  3891  0001C0  503A               	movf	_moduleAddress,w,c
  3892  0001C2  183C               	xorwf	_rx_address,w,c
  3893  0001C4  B4D8               	btfsc	status,2,c
  3894  0001C6  D035               	goto	l6594
  3895                           
  3896                           ;FastTransfer.c: 107: addressErrorCounter++;
  3897  0001C8  0100               	movlb	0	; () banked
  3898  0001CA  4BC7               	infsnz	_addressErrorCounter& (0+255),f,b
  3899  0001CC  2BC8               	incf	(_addressErrorCounter+1)& (0+255),f,b
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;FastTransfer.c: 110: int u;
  3903                           ;FastTransfer.c: 111: for (u = 0; u <= (rx_len + 1); u++) {
  3904  0001CE  0E00               	movlw	0
  3905  0001D0  0101               	movlb	1	; () banked
  3906  0001D2  6F48               	movwf	(receiveData@u+1)& (0+255),b
  3907  0001D4  0E00               	movlw	0
  3908  0001D6  6F47               	movwf	receiveData@u& (0+255),b
  3909  0001D8  D00F               	goto	l6586
  3910  0001DA                     l6582:
  3911                           
  3912                           ; BSR set to: 1
  3913                           ;FastTransfer.c: 112: serial_read();
  3914  0001DA  D801               	call	u7268
  3915  0001DC  D00A               	goto	l6584
  3916  0001DE                     u7268:
  3917  0001DE  0005               	push	
  3918  0001E0  6EFA               	movwf	pclath,c
  3919  0001E2  5031               	movf	_serial_read,w,c
  3920  0001E4  6EFD               	movwf	tosl,c
  3921  0001E6  5032               	movf	_serial_read+1,w,c
  3922  0001E8  6EFE               	movwf	tosh,c
  3923  0001EA  50F8               	movf	tblptru,w,c
  3924  0001EC  6EFF               	movwf	tosu,c
  3925  0001EE  50FA               	movf	pclath,w,c
  3926  0001F0  0012               	return		;indir
  3927  0001F2                     l6584:
  3928  0001F2  0101               	movlb	1	; () banked
  3929  0001F4  4B47               	infsnz	receiveData@u& (0+255),f,b
  3930  0001F6  2B48               	incf	(receiveData@u+1)& (0+255),f,b
  3931  0001F8                     l6586:
  3932                           
  3933                           ; BSR set to: 1
  3934  0001F8  503E               	movf	_rx_len,w,c
  3935  0001FA  0101               	movlb	1	; () banked
  3936  0001FC  6F39               	movwf	??_receiveData& (0+255),b
  3937  0001FE  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3938  000200  0E01               	movlw	1
  3939  000202  0101               	movlb	1	; () banked
  3940  000204  2739               	addwf	??_receiveData& (0+255),f,b
  3941  000206  0E00               	movlw	0
  3942  000208  233A               	addwfc	(??_receiveData+1)& (0+255),f,b
  3943  00020A  0101               	movlb	1	; () banked
  3944  00020C  5147               	movf	receiveData@u& (0+255),w,b
  3945  00020E  0101               	movlb	1	; () banked
  3946  000210  5D39               	subwf	??_receiveData& (0+255),w,b
  3947  000212  0101               	movlb	1	; () banked
  3948  000214  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3949  000216  0A80               	xorlw	128
  3950  000218  0101               	movlb	1	; () banked
  3951  00021A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3952  00021C  0101               	movlb	1	; () banked
  3953  00021E  5148               	movf	(receiveData@u+1)& (0+255),w,b
  3954  000220  0A80               	xorlw	128
  3955  000222  0101               	movlb	1	; () banked
  3956  000224  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  3957  000226  B0D8               	btfsc	status,0,c
  3958  000228  D7D8               	goto	l6582
  3959                           
  3960                           ; BSR set to: 1
  3961                           ;FastTransfer.c: 113: }
  3962                           ;FastTransfer.c: 114: rx_len = 0;
  3963                           
  3964                           ; BSR set to: 1
  3965  00022A  0E00               	movlw	0
  3966  00022C  6E3E               	movwf	_rx_len,c
  3967                           
  3968                           ; BSR set to: 1
  3969                           ;FastTransfer.c: 115: return 0;
  3970  00022E  0E00               	movlw	0
  3971                           
  3972                           ; BSR set to: 1
  3973  000230  0012               	return	
  3974  000232                     l6594:
  3975                           
  3976                           ;FastTransfer.c: 116: }
  3977                           ;FastTransfer.c: 118: }
  3978                           ;FastTransfer.c: 119: }
  3979                           ;FastTransfer.c: 120: }
  3980                           ;FastTransfer.c: 123: if (rx_len != 0) {
  3981  000232  503E               	movf	_rx_len,w,c
  3982  000234  B4D8               	btfsc	status,2,c
  3983  000236  D2A6               	goto	l6718
  3984                           
  3985                           ;FastTransfer.c: 127: if (rx_array_inx == 0) {
  3986  000238  503D               	movf	_rx_array_inx,w,c
  3987  00023A  A4D8               	btfss	status,2,c
  3988  00023C  D044               	goto	l6618
  3989  00023E                     l6600:
  3990  00023E  D801               	call	u7308
  3991  000240  D00A               	goto	u7309
  3992  000242                     u7308:
  3993  000242  0005               	push	
  3994  000244  6EFA               	movwf	pclath,c
  3995  000246  502F               	movf	_serial_available,w,c
  3996  000248  6EFD               	movwf	tosl,c
  3997  00024A  5030               	movf	_serial_available+1,w,c
  3998  00024C  6EFE               	movwf	tosh,c
  3999  00024E  50F8               	movf	tblptru,w,c
  4000  000250  6EFF               	movwf	tosu,c
  4001  000252  50FA               	movf	pclath,w,c
  4002  000254  0012               	return		;indir
  4003  000256                     u7309:
  4004  000256  BE1E               	btfsc	?_Receive_available+1,7,c
  4005  000258  D7F2               	goto	l6600
  4006  00025A  501E               	movf	?_Receive_available+1,w,c
  4007  00025C  E103               	bnz	l6602
  4008  00025E  041D               	decf	?_Receive_available,w,c
  4009  000260  A0D8               	btfss	status,0,c
  4010  000262  D7ED               	goto	l6600
  4011  000264                     l6602:
  4012                           
  4013                           ;FastTransfer.c: 129: if (255 == serial_peek()) {
  4014  000264  D801               	call	u7328
  4015  000266  D00B               	goto	u7329
  4016  000268                     u7328:
  4017  000268  0005               	push	
  4018  00026A  0100               	movlb	0	; () banked
  4019  00026C  6EFA               	movwf	pclath,c
  4020  00026E  51DB               	movf	_serial_peek& (0+255),w,b
  4021  000270  6EFD               	movwf	tosl,c
  4022  000272  51DC               	movf	(_serial_peek+1)& (0+255),w,b
  4023  000274  6EFE               	movwf	tosh,c
  4024  000276  50F8               	movf	tblptru,w,c
  4025  000278  6EFF               	movwf	tosu,c
  4026  00027A  50FA               	movf	pclath,w,c
  4027  00027C  0012               	return		;indir
  4028  00027E                     u7329:
  4029  00027E  0AFF               	xorlw	255
  4030  000280  A4D8               	btfss	status,2,c
  4031  000282  D021               	goto	l6618
  4032                           
  4033                           ;FastTransfer.c: 130: CRCcheck();
  4034  000284  EC23  F00A         	call	_CRCcheck	;wreg free
  4035                           
  4036                           ;FastTransfer.c: 131: rx_len = 0;
  4037  000288  0E00               	movlw	0
  4038  00028A  6E3E               	movwf	_rx_len,c
  4039                           
  4040                           ;FastTransfer.c: 132: rx_array_inx = 0;
  4041  00028C  0E00               	movlw	0
  4042  00028E  6E3D               	movwf	_rx_array_inx,c
  4043                           
  4044                           ;FastTransfer.c: 133: return 0;
  4045  000290  0E00               	movlw	0
  4046  000292  0012               	return	
  4047  000294                     l6614:
  4048                           
  4049                           ;FastTransfer.c: 139: rx_buffer[rx_array_inx++] = serial_read();
  4050  000294  D801               	call	u7348
  4051  000296  D00A               	goto	u7349
  4052  000298                     u7348:
  4053  000298  0005               	push	
  4054  00029A  6EFA               	movwf	pclath,c
  4055  00029C  5031               	movf	_serial_read,w,c
  4056  00029E  6EFD               	movwf	tosl,c
  4057  0002A0  5032               	movf	_serial_read+1,w,c
  4058  0002A2  6EFE               	movwf	tosh,c
  4059  0002A4  50F8               	movf	tblptru,w,c
  4060  0002A6  6EFF               	movwf	tosu,c
  4061  0002A8  50FA               	movf	pclath,w,c
  4062  0002AA  0012               	return		;indir
  4063  0002AC                     u7349:
  4064  0002AC  0101               	movlb	1	; () banked
  4065  0002AE  6F39               	movwf	??_receiveData& (0+255),b
  4066  0002B0  503D               	movf	_rx_array_inx,w,c
  4067  0002B2  0D01               	mullw	1
  4068  0002B4  0E00               	movlw	low _rx_buffer
  4069  0002B6  24F3               	addwf	prodl,w,c
  4070  0002B8  6ED9               	movwf	fsr2l,c
  4071  0002BA  0E03               	movlw	high _rx_buffer
  4072  0002BC  20F4               	addwfc	prodh,w,c
  4073  0002BE  6EDA               	movwf	fsr2h,c
  4074  0002C0  C139  FFDF         	movff	??_receiveData,indf2
  4075                           
  4076                           ; BSR set to: 1
  4077  0002C4  2A3D               	incf	_rx_array_inx,f,c
  4078  0002C6                     l6618:
  4079  0002C6  D801               	call	u7358
  4080  0002C8  D00A               	goto	u7359
  4081  0002CA                     u7358:
  4082  0002CA  0005               	push	
  4083  0002CC  6EFA               	movwf	pclath,c
  4084  0002CE  502F               	movf	_serial_available,w,c
  4085  0002D0  6EFD               	movwf	tosl,c
  4086  0002D2  5030               	movf	_serial_available+1,w,c
  4087  0002D4  6EFE               	movwf	tosh,c
  4088  0002D6  50F8               	movf	tblptru,w,c
  4089  0002D8  6EFF               	movwf	tosu,c
  4090  0002DA  50FA               	movf	pclath,w,c
  4091  0002DC  0012               	return		;indir
  4092  0002DE                     u7359:
  4093  0002DE  501D               	movf	?_Receive_available,w,c
  4094  0002E0  101E               	iorwf	?_Receive_available+1,w,c
  4095  0002E2  B4D8               	btfsc	status,2,c
  4096  0002E4  D004               	goto	l6622
  4097  0002E6  503D               	movf	_rx_array_inx,w,c
  4098  0002E8  5C3E               	subwf	_rx_len,w,c
  4099  0002EA  B0D8               	btfsc	status,0,c
  4100  0002EC  D7D3               	goto	l6614
  4101  0002EE                     l6622:
  4102                           
  4103                           ;FastTransfer.c: 140: }
  4104                           ;FastTransfer.c: 142: if (rx_len == (rx_array_inx - 1)) {
  4105  0002EE  503E               	movf	_rx_len,w,c
  4106  0002F0  0101               	movlb	1	; () banked
  4107  0002F2  6F39               	movwf	??_receiveData& (0+255),b
  4108  0002F4  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4109  0002F6  0EFF               	movlw	255
  4110  0002F8  0101               	movlb	1	; () banked
  4111  0002FA  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4112  0002FC  0EFF               	movlw	255
  4113  0002FE  0101               	movlb	1	; () banked
  4114  000300  6F3C               	movwf	(??_receiveData+3)& (0+255),b
  4115  000302  503D               	movf	_rx_array_inx,w,c
  4116  000304  0101               	movlb	1	; () banked
  4117  000306  6F3D               	movwf	(??_receiveData+4)& (0+255),b
  4118  000308  6B3E               	clrf	(??_receiveData+5)& (0+255),b
  4119  00030A  0101               	movlb	1	; () banked
  4120  00030C  513B               	movf	(??_receiveData+2)& (0+255),w,b
  4121  00030E  0101               	movlb	1	; () banked
  4122  000310  273D               	addwf	(??_receiveData+4)& (0+255),f,b
  4123  000312  0101               	movlb	1	; () banked
  4124  000314  513C               	movf	(??_receiveData+3)& (0+255),w,b
  4125  000316  0101               	movlb	1	; () banked
  4126  000318  233E               	addwfc	(??_receiveData+5)& (0+255),f,b
  4127  00031A  0101               	movlb	1	; () banked
  4128  00031C  5139               	movf	??_receiveData& (0+255),w,b
  4129  00031E  0101               	movlb	1	; () banked
  4130  000320  193D               	xorwf	(??_receiveData+4)& (0+255),w,b
  4131  000322  E105               	bnz	u7381
  4132  000324  0101               	movlb	1	; () banked
  4133  000326  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4134  000328  0101               	movlb	1	; () banked
  4135  00032A  193E               	xorwf	(??_receiveData+5)& (0+255),w,b
  4136  00032C  A4D8               	btfss	status,2,c
  4137  00032E                     u7381:
  4138  00032E  D22A               	goto	l6718
  4139                           
  4140                           ; BSR set to: 1
  4141                           ;FastTransfer.c: 145: calc_CS = CRC8(rx_buffer, rx_len);
  4142  000330  0E00               	movlw	low _rx_buffer
  4143  000332  6E1B               	movwf	CRC8@data,c
  4144  000334  0E03               	movlw	high _rx_buffer
  4145  000336  6E1C               	movwf	CRC8@data+1,c
  4146  000338  C03E  F01D         	movff	_rx_len,CRC8@len
  4147  00033C  EC36  F016         	call	_CRC8	;wreg free
  4148  000340  6E37               	movwf	_calc_CS,c
  4149                           
  4150                           ;FastTransfer.c: 149: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  4151  000342  0EFF               	movlw	255
  4152  000344  0101               	movlb	1	; () banked
  4153  000346  6F39               	movwf	??_receiveData& (0+255),b
  4154  000348  0EFF               	movlw	255
  4155  00034A  0101               	movlb	1	; () banked
  4156  00034C  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4157  00034E  503D               	movf	_rx_array_inx,w,c
  4158  000350  0101               	movlb	1	; () banked
  4159  000352  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4160  000354  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4161  000356  0101               	movlb	1	; () banked
  4162  000358  5139               	movf	??_receiveData& (0+255),w,b
  4163  00035A  0101               	movlb	1	; () banked
  4164  00035C  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4165  00035E  0101               	movlb	1	; () banked
  4166  000360  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4167  000362  0101               	movlb	1	; () banked
  4168  000364  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4169  000366  0E00               	movlw	low _rx_buffer
  4170  000368  0101               	movlb	1	; () banked
  4171  00036A  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4172  00036C  6ED9               	movwf	fsr2l,c
  4173  00036E  0E03               	movlw	high _rx_buffer
  4174  000370  0101               	movlb	1	; () banked
  4175  000372  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4176  000374  6EDA               	movwf	fsr2h,c
  4177  000376  5037               	movf	_calc_CS,w,c
  4178  000378  18DE               	xorwf	postinc2,w,c
  4179  00037A  A4D8               	btfss	status,2,c
  4180  00037C  D13B               	goto	l6680
  4181                           
  4182                           ; BSR set to: 1
  4183                           ;FastTransfer.c: 152: int r;
  4184                           ;FastTransfer.c: 153: for (r = 0; r < rx_len; r = r + 3) {
  4185  00037E  0E00               	movlw	0
  4186  000380  0101               	movlb	1	; () banked
  4187  000382  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4188  000384  0E00               	movlw	0
  4189  000386  6F49               	movwf	receiveData@r& (0+255),b
  4190  000388  D05C               	goto	l6640
  4191  00038A                     l6630:
  4192                           
  4193                           ; BSR set to: 1
  4194                           ;FastTransfer.c: 154: if (rx_buffer[r] < maxDataAddress) {
  4195  00038A  0E00               	movlw	low _rx_buffer
  4196  00038C  0101               	movlb	1	; () banked
  4197  00038E  2549               	addwf	receiveData@r& (0+255),w,b
  4198  000390  6ED9               	movwf	fsr2l,c
  4199  000392  0E03               	movlw	high _rx_buffer
  4200  000394  0101               	movlb	1	; () banked
  4201  000396  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4202  000398  6EDA               	movwf	fsr2h,c
  4203  00039A  5039               	movf	_maxDataAddress,w,c
  4204  00039C  5CDE               	subwf	postinc2,w,c
  4205  00039E  B0D8               	btfsc	status,0,c
  4206  0003A0  D043               	goto	l6636
  4207                           
  4208                           ; BSR set to: 1
  4209                           ;FastTransfer.c: 155: group.parts[0] = rx_buffer[r + 1];
  4210  0003A2  0E01               	movlw	1
  4211  0003A4  0101               	movlb	1	; () banked
  4212  0003A6  2549               	addwf	receiveData@r& (0+255),w,b
  4213  0003A8  0101               	movlb	1	; () banked
  4214  0003AA  6F39               	movwf	??_receiveData& (0+255),b
  4215  0003AC  0E00               	movlw	0
  4216  0003AE  0101               	movlb	1	; () banked
  4217  0003B0  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4218  0003B2  0101               	movlb	1	; () banked
  4219  0003B4  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4220  0003B6  0E00               	movlw	low _rx_buffer
  4221  0003B8  0101               	movlb	1	; () banked
  4222  0003BA  2539               	addwf	??_receiveData& (0+255),w,b
  4223  0003BC  6ED9               	movwf	fsr2l,c
  4224  0003BE  0E03               	movlw	high _rx_buffer
  4225  0003C0  0101               	movlb	1	; () banked
  4226  0003C2  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4227  0003C4  6EDA               	movwf	fsr2h,c
  4228  0003C6  50DF               	movf	indf2,w,c
  4229  0003C8  6E2B               	movwf	_group,c
  4230                           
  4231                           ;FastTransfer.c: 156: group.parts[1] = rx_buffer[r + 2];
  4232  0003CA  0E02               	movlw	2
  4233  0003CC  0101               	movlb	1	; () banked
  4234  0003CE  2549               	addwf	receiveData@r& (0+255),w,b
  4235  0003D0  0101               	movlb	1	; () banked
  4236  0003D2  6F39               	movwf	??_receiveData& (0+255),b
  4237  0003D4  0E00               	movlw	0
  4238  0003D6  0101               	movlb	1	; () banked
  4239  0003D8  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4240  0003DA  0101               	movlb	1	; () banked
  4241  0003DC  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4242  0003DE  0E00               	movlw	low _rx_buffer
  4243  0003E0  0101               	movlb	1	; () banked
  4244  0003E2  2539               	addwf	??_receiveData& (0+255),w,b
  4245  0003E4  6ED9               	movwf	fsr2l,c
  4246  0003E6  0E03               	movlw	high _rx_buffer
  4247  0003E8  0101               	movlb	1	; () banked
  4248  0003EA  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4249  0003EC  6EDA               	movwf	fsr2h,c
  4250  0003EE  50DF               	movf	indf2,w,c
  4251  0003F0  6E2C               	movwf	_group+1,c
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;FastTransfer.c: 157: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4255  0003F2  0E00               	movlw	low _rx_buffer
  4256  0003F4  0101               	movlb	1	; () banked
  4257  0003F6  2549               	addwf	receiveData@r& (0+255),w,b
  4258  0003F8  6ED9               	movwf	fsr2l,c
  4259  0003FA  0E03               	movlw	high _rx_buffer
  4260  0003FC  0101               	movlb	1	; () banked
  4261  0003FE  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4262  000400  6EDA               	movwf	fsr2h,c
  4263  000402  50DF               	movf	indf2,w,c
  4264  000404  0101               	movlb	1	; () banked
  4265  000406  6F39               	movwf	??_receiveData& (0+255),b
  4266  000408  0101               	movlb	1	; () banked
  4267  00040A  5139               	movf	??_receiveData& (0+255),w,b
  4268  00040C  0D02               	mullw	2
  4269  00040E  50F3               	movf	prodl,w,c
  4270  000410  0100               	movlb	0	; () banked
  4271  000412  25D7               	addwf	_receiveArrayAddress& (0+255),w,b
  4272  000414  6ED9               	movwf	fsr2l,c
  4273  000416  50F4               	movf	prodh,w,c
  4274  000418  0100               	movlb	0	; () banked
  4275  00041A  21D8               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4276  00041C  6EDA               	movwf	fsr2h,c
  4277  00041E  C02B  FFDE         	movff	_group,postinc2
  4278  000422  C02C  FFDD         	movff	_group+1,postdec2
  4279                           
  4280                           ;FastTransfer.c: 158: } else {
  4281  000426  D003               	goto	l6638
  4282  000428                     l6636:
  4283                           
  4284                           ;FastTransfer.c: 159: dataAdressErrorCounter++;
  4285  000428  0100               	movlb	0	; () banked
  4286  00042A  4BCD               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4287  00042C  2BCE               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4288  00042E                     l6638:
  4289                           
  4290                           ; BSR set to: 0
  4291  00042E  0E03               	movlw	3
  4292  000430  0101               	movlb	1	; () banked
  4293  000432  2549               	addwf	receiveData@r& (0+255),w,b
  4294  000434  0101               	movlb	1	; () banked
  4295  000436  6F49               	movwf	receiveData@r& (0+255),b
  4296  000438  0E00               	movlw	0
  4297  00043A  0101               	movlb	1	; () banked
  4298  00043C  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4299  00043E  0101               	movlb	1	; () banked
  4300  000440  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4301  000442                     l6640:
  4302                           
  4303                           ; BSR set to: 1
  4304  000442  503E               	movf	_rx_len,w,c
  4305  000444  0101               	movlb	1	; () banked
  4306  000446  6F39               	movwf	??_receiveData& (0+255),b
  4307  000448  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4308  00044A  0101               	movlb	1	; () banked
  4309  00044C  5139               	movf	??_receiveData& (0+255),w,b
  4310  00044E  0101               	movlb	1	; () banked
  4311  000450  5D49               	subwf	receiveData@r& (0+255),w,b
  4312  000452  0101               	movlb	1	; () banked
  4313  000454  514A               	movf	(receiveData@r+1)& (0+255),w,b
  4314  000456  0A80               	xorlw	128
  4315  000458  0101               	movlb	1	; () banked
  4316  00045A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4317  00045C  0101               	movlb	1	; () banked
  4318  00045E  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4319  000460  0A80               	xorlw	128
  4320  000462  0101               	movlb	1	; () banked
  4321  000464  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  4322  000466  A0D8               	btfss	status,0,c
  4323  000468  D790               	goto	l6630
  4324                           
  4325                           ; BSR set to: 1
  4326                           ;FastTransfer.c: 160: }
  4327                           ;FastTransfer.c: 161: }
  4328                           ;FastTransfer.c: 164: if (AKNAKsend) {
  4329                           
  4330                           ; BSR set to: 1
  4331  00046A  5036               	movf	_AKNAKsend,w,c
  4332  00046C  B4D8               	btfsc	status,2,c
  4333  00046E  D0BC               	goto	l6670
  4334                           
  4335                           ; BSR set to: 1
  4336                           ;FastTransfer.c: 165: unsigned char holder[3];
  4337                           ;FastTransfer.c: 166: holder[0] = 255;
  4338  000470  0101               	movlb	1	; () banked
  4339  000472  693F               	setf	receiveData@holder& (0+255),b
  4340                           
  4341                           ; BSR set to: 1
  4342                           ;FastTransfer.c: 167: holder[1] = 1;
  4343  000474  0E01               	movlw	1
  4344  000476  0101               	movlb	1	; () banked
  4345  000478  6F40               	movwf	(receiveData@holder+1)& (0+255),b
  4346                           
  4347                           ; BSR set to: 1
  4348                           ;FastTransfer.c: 168: holder[2] = rx_buffer[rx_array_inx - 1];
  4349  00047A  0EFF               	movlw	255
  4350  00047C  0101               	movlb	1	; () banked
  4351  00047E  6F39               	movwf	??_receiveData& (0+255),b
  4352  000480  0EFF               	movlw	255
  4353  000482  0101               	movlb	1	; () banked
  4354  000484  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4355  000486  503D               	movf	_rx_array_inx,w,c
  4356  000488  0101               	movlb	1	; () banked
  4357  00048A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4358  00048C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4359  00048E  0101               	movlb	1	; () banked
  4360  000490  5139               	movf	??_receiveData& (0+255),w,b
  4361  000492  0101               	movlb	1	; () banked
  4362  000494  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4363  000496  0101               	movlb	1	; () banked
  4364  000498  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4365  00049A  0101               	movlb	1	; () banked
  4366  00049C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4367  00049E  0E00               	movlw	low _rx_buffer
  4368  0004A0  0101               	movlb	1	; () banked
  4369  0004A2  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4370  0004A4  6ED9               	movwf	fsr2l,c
  4371  0004A6  0E03               	movlw	high _rx_buffer
  4372  0004A8  0101               	movlb	1	; () banked
  4373  0004AA  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4374  0004AC  6EDA               	movwf	fsr2h,c
  4375  0004AE  50DF               	movf	indf2,w,c
  4376  0004B0  0101               	movlb	1	; () banked
  4377  0004B2  6F41               	movwf	(receiveData@holder+2)& (0+255),b
  4378                           
  4379                           ; BSR set to: 1
  4380                           ;FastTransfer.c: 169: unsigned char crcHolder = CRC8(holder, 3);
  4381  0004B4  0E3F               	movlw	low receiveData@holder
  4382  0004B6  6E1B               	movwf	CRC8@data,c
  4383  0004B8  0E01               	movlw	high receiveData@holder
  4384  0004BA  6E1C               	movwf	CRC8@data+1,c
  4385  0004BC  0E03               	movlw	3
  4386  0004BE  6E1D               	movwf	CRC8@len,c
  4387  0004C0  EC36  F016         	call	_CRC8	;wreg free
  4388  0004C4  0101               	movlb	1	; () banked
  4389  0004C6  6F45               	movwf	receiveData@crcHolder& (0+255),b
  4390                           
  4391                           ; BSR set to: 1
  4392                           ;FastTransfer.c: 170: serial_write(0x06);
  4393  0004C8  D801               	call	u7438
  4394  0004CA  D00B               	goto	l6654
  4395  0004CC                     u7438:
  4396  0004CC  0005               	push	
  4397  0004CE  6EFA               	movwf	pclath,c
  4398  0004D0  5033               	movf	_serial_write,w,c
  4399  0004D2  6EFD               	movwf	tosl,c
  4400  0004D4  5034               	movf	_serial_write+1,w,c
  4401  0004D6  6EFE               	movwf	tosh,c
  4402  0004D8  50F8               	movf	tblptru,w,c
  4403  0004DA  6EFF               	movwf	tosu,c
  4404  0004DC  50FA               	movf	pclath,w,c
  4405  0004DE  0E06               	movlw	6
  4406  0004E0  0012               	return		;indir
  4407  0004E2                     l6654:
  4408                           
  4409                           ;FastTransfer.c: 171: serial_write(0x85);
  4410  0004E2  D801               	call	u7448
  4411  0004E4  D00B               	goto	l6656
  4412  0004E6                     u7448:
  4413  0004E6  0005               	push	
  4414  0004E8  6EFA               	movwf	pclath,c
  4415  0004EA  5033               	movf	_serial_write,w,c
  4416  0004EC  6EFD               	movwf	tosl,c
  4417  0004EE  5034               	movf	_serial_write+1,w,c
  4418  0004F0  6EFE               	movwf	tosh,c
  4419  0004F2  50F8               	movf	tblptru,w,c
  4420  0004F4  6EFF               	movwf	tosu,c
  4421  0004F6  50FA               	movf	pclath,w,c
  4422  0004F8  0E85               	movlw	133
  4423  0004FA  0012               	return		;indir
  4424  0004FC                     l6656:
  4425                           
  4426                           ;FastTransfer.c: 172: serial_write(returnAddress);
  4427  0004FC  D801               	call	u7458
  4428  0004FE  D00B               	goto	l6658
  4429  000500                     u7458:
  4430  000500  0005               	push	
  4431  000502  6EFA               	movwf	pclath,c
  4432  000504  5033               	movf	_serial_write,w,c
  4433  000506  6EFD               	movwf	tosl,c
  4434  000508  5034               	movf	_serial_write+1,w,c
  4435  00050A  6EFE               	movwf	tosh,c
  4436  00050C  50F8               	movf	tblptru,w,c
  4437  00050E  6EFF               	movwf	tosu,c
  4438  000510  50FA               	movf	pclath,w,c
  4439  000512  503B               	movf	_returnAddress,w,c
  4440  000514  0012               	return		;indir
  4441  000516                     l6658:
  4442                           
  4443                           ;FastTransfer.c: 173: serial_write(moduleAddress);
  4444  000516  D801               	call	u7468
  4445  000518  D00B               	goto	l6660
  4446  00051A                     u7468:
  4447  00051A  0005               	push	
  4448  00051C  6EFA               	movwf	pclath,c
  4449  00051E  5033               	movf	_serial_write,w,c
  4450  000520  6EFD               	movwf	tosl,c
  4451  000522  5034               	movf	_serial_write+1,w,c
  4452  000524  6EFE               	movwf	tosh,c
  4453  000526  50F8               	movf	tblptru,w,c
  4454  000528  6EFF               	movwf	tosu,c
  4455  00052A  50FA               	movf	pclath,w,c
  4456  00052C  503A               	movf	_moduleAddress,w,c
  4457  00052E  0012               	return		;indir
  4458  000530                     l6660:
  4459                           
  4460                           ;FastTransfer.c: 174: serial_write(3);
  4461  000530  D801               	call	u7478
  4462  000532  D00B               	goto	l6662
  4463  000534                     u7478:
  4464  000534  0005               	push	
  4465  000536  6EFA               	movwf	pclath,c
  4466  000538  5033               	movf	_serial_write,w,c
  4467  00053A  6EFD               	movwf	tosl,c
  4468  00053C  5034               	movf	_serial_write+1,w,c
  4469  00053E  6EFE               	movwf	tosh,c
  4470  000540  50F8               	movf	tblptru,w,c
  4471  000542  6EFF               	movwf	tosu,c
  4472  000544  50FA               	movf	pclath,w,c
  4473  000546  0E03               	movlw	3
  4474  000548  0012               	return		;indir
  4475  00054A                     l6662:
  4476                           
  4477                           ;FastTransfer.c: 175: serial_write(255);
  4478  00054A  D801               	call	u7488
  4479  00054C  D00B               	goto	l6664
  4480  00054E                     u7488:
  4481  00054E  0005               	push	
  4482  000550  6EFA               	movwf	pclath,c
  4483  000552  5033               	movf	_serial_write,w,c
  4484  000554  6EFD               	movwf	tosl,c
  4485  000556  5034               	movf	_serial_write+1,w,c
  4486  000558  6EFE               	movwf	tosh,c
  4487  00055A  50F8               	movf	tblptru,w,c
  4488  00055C  6EFF               	movwf	tosu,c
  4489  00055E  50FA               	movf	pclath,w,c
  4490  000560  0EFF               	movlw	255
  4491  000562  0012               	return		;indir
  4492  000564                     l6664:
  4493                           
  4494                           ;FastTransfer.c: 176: serial_write(1);
  4495  000564  D801               	call	u7498
  4496  000566  D00B               	goto	l6666
  4497  000568                     u7498:
  4498  000568  0005               	push	
  4499  00056A  6EFA               	movwf	pclath,c
  4500  00056C  5033               	movf	_serial_write,w,c
  4501  00056E  6EFD               	movwf	tosl,c
  4502  000570  5034               	movf	_serial_write+1,w,c
  4503  000572  6EFE               	movwf	tosh,c
  4504  000574  50F8               	movf	tblptru,w,c
  4505  000576  6EFF               	movwf	tosu,c
  4506  000578  50FA               	movf	pclath,w,c
  4507  00057A  0E01               	movlw	1
  4508  00057C  0012               	return		;indir
  4509  00057E                     l6666:
  4510                           
  4511                           ;FastTransfer.c: 177: serial_write(rx_buffer[rx_array_inx - 1]);
  4512  00057E  D801               	call	u7508
  4513  000580  D025               	goto	l6668
  4514  000582                     u7508:
  4515  000582  0005               	push	
  4516  000584  6EFA               	movwf	pclath,c
  4517  000586  5033               	movf	_serial_write,w,c
  4518  000588  6EFD               	movwf	tosl,c
  4519  00058A  5034               	movf	_serial_write+1,w,c
  4520  00058C  6EFE               	movwf	tosh,c
  4521  00058E  50F8               	movf	tblptru,w,c
  4522  000590  6EFF               	movwf	tosu,c
  4523  000592  50FA               	movf	pclath,w,c
  4524  000594  0EFF               	movlw	255
  4525  000596  0101               	movlb	1	; () banked
  4526  000598  6F39               	movwf	??_receiveData& (0+255),b
  4527  00059A  0EFF               	movlw	255
  4528  00059C  0101               	movlb	1	; () banked
  4529  00059E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4530  0005A0  503D               	movf	_rx_array_inx,w,c
  4531  0005A2  0101               	movlb	1	; () banked
  4532  0005A4  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4533  0005A6  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4534  0005A8  0101               	movlb	1	; () banked
  4535  0005AA  5139               	movf	??_receiveData& (0+255),w,b
  4536  0005AC  0101               	movlb	1	; () banked
  4537  0005AE  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4538  0005B0  0101               	movlb	1	; () banked
  4539  0005B2  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4540  0005B4  0101               	movlb	1	; () banked
  4541  0005B6  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4542  0005B8  0E00               	movlw	low _rx_buffer
  4543  0005BA  0101               	movlb	1	; () banked
  4544  0005BC  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4545  0005BE  6ED9               	movwf	fsr2l,c
  4546  0005C0  0E03               	movlw	high _rx_buffer
  4547  0005C2  0101               	movlb	1	; () banked
  4548  0005C4  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4549  0005C6  6EDA               	movwf	fsr2h,c
  4550  0005C8  50DF               	movf	indf2,w,c
  4551  0005CA  0012               	return		;indir
  4552  0005CC                     l6668:
  4553                           
  4554                           ;FastTransfer.c: 178: serial_write(crcHolder);
  4555  0005CC  D801               	call	u7518
  4556  0005CE  D00C               	goto	l6670
  4557  0005D0                     u7518:
  4558  0005D0  0005               	push	
  4559  0005D2  6EFA               	movwf	pclath,c
  4560  0005D4  5033               	movf	_serial_write,w,c
  4561  0005D6  6EFD               	movwf	tosl,c
  4562  0005D8  5034               	movf	_serial_write+1,w,c
  4563  0005DA  6EFE               	movwf	tosh,c
  4564  0005DC  50F8               	movf	tblptru,w,c
  4565  0005DE  6EFF               	movwf	tosu,c
  4566  0005E0  50FA               	movf	pclath,w,c
  4567  0005E2  0101               	movlb	1	; () banked
  4568  0005E4  5145               	movf	receiveData@crcHolder& (0+255),w,b
  4569  0005E6  0012               	return		;indir
  4570  0005E8                     l6670:
  4571                           
  4572                           ;FastTransfer.c: 179: }
  4573                           ;FastTransfer.c: 183: rx_len = 0;
  4574  0005E8  0E00               	movlw	0
  4575  0005EA  6E3E               	movwf	_rx_len,c
  4576                           
  4577                           ;FastTransfer.c: 184: rx_array_inx = 0;
  4578  0005EC  0E00               	movlw	0
  4579  0005EE  6E3D               	movwf	_rx_array_inx,c
  4580                           
  4581                           ;FastTransfer.c: 185: return 1;
  4582  0005F0  0E01               	movlw	1
  4583  0005F2  0012               	return	
  4584  0005F4                     l6680:
  4585                           
  4586                           ;FastTransfer.c: 187: crcErrorCounter++;
  4587  0005F4  0100               	movlb	0	; () banked
  4588  0005F6  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  4589  0005F8  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;FastTransfer.c: 189: if (AKNAKsend) {
  4593  0005FA  5036               	movf	_AKNAKsend,w,c
  4594  0005FC  B4D8               	btfsc	status,2,c
  4595  0005FE  D0BC               	goto	l6710
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;FastTransfer.c: 190: unsigned char holder[3];
  4599                           ;FastTransfer.c: 191: holder[0] = 255;
  4600  000600  0101               	movlb	1	; () banked
  4601  000602  6942               	setf	receiveData@holder_2465& (0+255),b
  4602                           
  4603                           ; BSR set to: 1
  4604                           ;FastTransfer.c: 192: holder[1] = 2;
  4605  000604  0E02               	movlw	2
  4606  000606  0101               	movlb	1	; () banked
  4607  000608  6F43               	movwf	(receiveData@holder_2465+1)& (0+255),b
  4608                           
  4609                           ; BSR set to: 1
  4610                           ;FastTransfer.c: 193: holder[2] = rx_buffer[rx_array_inx - 1];
  4611  00060A  0EFF               	movlw	255
  4612  00060C  0101               	movlb	1	; () banked
  4613  00060E  6F39               	movwf	??_receiveData& (0+255),b
  4614  000610  0EFF               	movlw	255
  4615  000612  0101               	movlb	1	; () banked
  4616  000614  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4617  000616  503D               	movf	_rx_array_inx,w,c
  4618  000618  0101               	movlb	1	; () banked
  4619  00061A  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4620  00061C  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4621  00061E  0101               	movlb	1	; () banked
  4622  000620  5139               	movf	??_receiveData& (0+255),w,b
  4623  000622  0101               	movlb	1	; () banked
  4624  000624  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4625  000626  0101               	movlb	1	; () banked
  4626  000628  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4627  00062A  0101               	movlb	1	; () banked
  4628  00062C  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4629  00062E  0E00               	movlw	low _rx_buffer
  4630  000630  0101               	movlb	1	; () banked
  4631  000632  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4632  000634  6ED9               	movwf	fsr2l,c
  4633  000636  0E03               	movlw	high _rx_buffer
  4634  000638  0101               	movlb	1	; () banked
  4635  00063A  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4636  00063C  6EDA               	movwf	fsr2h,c
  4637  00063E  50DF               	movf	indf2,w,c
  4638  000640  0101               	movlb	1	; () banked
  4639  000642  6F44               	movwf	(receiveData@holder_2465+2)& (0+255),b
  4640                           
  4641                           ; BSR set to: 1
  4642                           ;FastTransfer.c: 194: unsigned char crcHolder = CRC8(holder, 3);
  4643  000644  0E42               	movlw	low receiveData@holder_2465
  4644  000646  6E1B               	movwf	CRC8@data,c
  4645  000648  0E01               	movlw	high receiveData@holder_2465
  4646  00064A  6E1C               	movwf	CRC8@data+1,c
  4647  00064C  0E03               	movlw	3
  4648  00064E  6E1D               	movwf	CRC8@len,c
  4649  000650  EC36  F016         	call	_CRC8
  4650  000654  0101               	movlb	1	; () banked
  4651  000656  6F46               	movwf	receiveData@crcHolder_2466& (0+255),b
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;FastTransfer.c: 195: serial_write(0x06);
  4655  000658  D801               	call	u7538
  4656  00065A  D00B               	goto	l6694
  4657  00065C                     u7538:
  4658  00065C  0005               	push	
  4659  00065E  6EFA               	movwf	pclath,c
  4660  000660  5033               	movf	_serial_write,w,c
  4661  000662  6EFD               	movwf	tosl,c
  4662  000664  5034               	movf	_serial_write+1,w,c
  4663  000666  6EFE               	movwf	tosh,c
  4664  000668  50F8               	movf	tblptru,w,c
  4665  00066A  6EFF               	movwf	tosu,c
  4666  00066C  50FA               	movf	pclath,w,c
  4667  00066E  0E06               	movlw	6
  4668  000670  0012               	return		;indir
  4669  000672                     l6694:
  4670                           
  4671                           ;FastTransfer.c: 196: serial_write(0x85);
  4672  000672  D801               	call	u7548
  4673  000674  D00B               	goto	l6696
  4674  000676                     u7548:
  4675  000676  0005               	push	
  4676  000678  6EFA               	movwf	pclath,c
  4677  00067A  5033               	movf	_serial_write,w,c
  4678  00067C  6EFD               	movwf	tosl,c
  4679  00067E  5034               	movf	_serial_write+1,w,c
  4680  000680  6EFE               	movwf	tosh,c
  4681  000682  50F8               	movf	tblptru,w,c
  4682  000684  6EFF               	movwf	tosu,c
  4683  000686  50FA               	movf	pclath,w,c
  4684  000688  0E85               	movlw	133
  4685  00068A  0012               	return		;indir
  4686  00068C                     l6696:
  4687                           
  4688                           ;FastTransfer.c: 197: serial_write(returnAddress);
  4689  00068C  D801               	call	u7558
  4690  00068E  D00B               	goto	l6698
  4691  000690                     u7558:
  4692  000690  0005               	push	
  4693  000692  6EFA               	movwf	pclath,c
  4694  000694  5033               	movf	_serial_write,w,c
  4695  000696  6EFD               	movwf	tosl,c
  4696  000698  5034               	movf	_serial_write+1,w,c
  4697  00069A  6EFE               	movwf	tosh,c
  4698  00069C  50F8               	movf	tblptru,w,c
  4699  00069E  6EFF               	movwf	tosu,c
  4700  0006A0  50FA               	movf	pclath,w,c
  4701  0006A2  503B               	movf	_returnAddress,w,c
  4702  0006A4  0012               	return		;indir
  4703  0006A6                     l6698:
  4704                           
  4705                           ;FastTransfer.c: 198: serial_write(moduleAddress);
  4706  0006A6  D801               	call	u7568
  4707  0006A8  D00B               	goto	l6700
  4708  0006AA                     u7568:
  4709  0006AA  0005               	push	
  4710  0006AC  6EFA               	movwf	pclath,c
  4711  0006AE  5033               	movf	_serial_write,w,c
  4712  0006B0  6EFD               	movwf	tosl,c
  4713  0006B2  5034               	movf	_serial_write+1,w,c
  4714  0006B4  6EFE               	movwf	tosh,c
  4715  0006B6  50F8               	movf	tblptru,w,c
  4716  0006B8  6EFF               	movwf	tosu,c
  4717  0006BA  50FA               	movf	pclath,w,c
  4718  0006BC  503A               	movf	_moduleAddress,w,c
  4719  0006BE  0012               	return		;indir
  4720  0006C0                     l6700:
  4721                           
  4722                           ;FastTransfer.c: 199: serial_write(3);
  4723  0006C0  D801               	call	u7578
  4724  0006C2  D00B               	goto	l6702
  4725  0006C4                     u7578:
  4726  0006C4  0005               	push	
  4727  0006C6  6EFA               	movwf	pclath,c
  4728  0006C8  5033               	movf	_serial_write,w,c
  4729  0006CA  6EFD               	movwf	tosl,c
  4730  0006CC  5034               	movf	_serial_write+1,w,c
  4731  0006CE  6EFE               	movwf	tosh,c
  4732  0006D0  50F8               	movf	tblptru,w,c
  4733  0006D2  6EFF               	movwf	tosu,c
  4734  0006D4  50FA               	movf	pclath,w,c
  4735  0006D6  0E03               	movlw	3
  4736  0006D8  0012               	return		;indir
  4737  0006DA                     l6702:
  4738                           
  4739                           ;FastTransfer.c: 200: serial_write(255);
  4740  0006DA  D801               	call	u7588
  4741  0006DC  D00B               	goto	l6704
  4742  0006DE                     u7588:
  4743  0006DE  0005               	push	
  4744  0006E0  6EFA               	movwf	pclath,c
  4745  0006E2  5033               	movf	_serial_write,w,c
  4746  0006E4  6EFD               	movwf	tosl,c
  4747  0006E6  5034               	movf	_serial_write+1,w,c
  4748  0006E8  6EFE               	movwf	tosh,c
  4749  0006EA  50F8               	movf	tblptru,w,c
  4750  0006EC  6EFF               	movwf	tosu,c
  4751  0006EE  50FA               	movf	pclath,w,c
  4752  0006F0  0EFF               	movlw	255
  4753  0006F2  0012               	return		;indir
  4754  0006F4                     l6704:
  4755                           
  4756                           ;FastTransfer.c: 201: serial_write(2);
  4757  0006F4  D801               	call	u7598
  4758  0006F6  D00B               	goto	l6706
  4759  0006F8                     u7598:
  4760  0006F8  0005               	push	
  4761  0006FA  6EFA               	movwf	pclath,c
  4762  0006FC  5033               	movf	_serial_write,w,c
  4763  0006FE  6EFD               	movwf	tosl,c
  4764  000700  5034               	movf	_serial_write+1,w,c
  4765  000702  6EFE               	movwf	tosh,c
  4766  000704  50F8               	movf	tblptru,w,c
  4767  000706  6EFF               	movwf	tosu,c
  4768  000708  50FA               	movf	pclath,w,c
  4769  00070A  0E02               	movlw	2
  4770  00070C  0012               	return		;indir
  4771  00070E                     l6706:
  4772                           
  4773                           ;FastTransfer.c: 202: serial_write(rx_buffer[rx_array_inx - 1]);
  4774  00070E  D801               	call	u7608
  4775  000710  D025               	goto	l6708
  4776  000712                     u7608:
  4777  000712  0005               	push	
  4778  000714  6EFA               	movwf	pclath,c
  4779  000716  5033               	movf	_serial_write,w,c
  4780  000718  6EFD               	movwf	tosl,c
  4781  00071A  5034               	movf	_serial_write+1,w,c
  4782  00071C  6EFE               	movwf	tosh,c
  4783  00071E  50F8               	movf	tblptru,w,c
  4784  000720  6EFF               	movwf	tosu,c
  4785  000722  50FA               	movf	pclath,w,c
  4786  000724  0EFF               	movlw	255
  4787  000726  0101               	movlb	1	; () banked
  4788  000728  6F39               	movwf	??_receiveData& (0+255),b
  4789  00072A  0EFF               	movlw	255
  4790  00072C  0101               	movlb	1	; () banked
  4791  00072E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4792  000730  503D               	movf	_rx_array_inx,w,c
  4793  000732  0101               	movlb	1	; () banked
  4794  000734  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4795  000736  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4796  000738  0101               	movlb	1	; () banked
  4797  00073A  5139               	movf	??_receiveData& (0+255),w,b
  4798  00073C  0101               	movlb	1	; () banked
  4799  00073E  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4800  000740  0101               	movlb	1	; () banked
  4801  000742  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4802  000744  0101               	movlb	1	; () banked
  4803  000746  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4804  000748  0E00               	movlw	low _rx_buffer
  4805  00074A  0101               	movlb	1	; () banked
  4806  00074C  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4807  00074E  6ED9               	movwf	fsr2l,c
  4808  000750  0E03               	movlw	high _rx_buffer
  4809  000752  0101               	movlb	1	; () banked
  4810  000754  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4811  000756  6EDA               	movwf	fsr2h,c
  4812  000758  50DF               	movf	indf2,w,c
  4813  00075A  0012               	return		;indir
  4814  00075C                     l6708:
  4815                           
  4816                           ;FastTransfer.c: 203: serial_write(crcHolder);
  4817  00075C  D801               	call	u7618
  4818  00075E  D00C               	goto	l6710
  4819  000760                     u7618:
  4820  000760  0005               	push	
  4821  000762  6EFA               	movwf	pclath,c
  4822  000764  5033               	movf	_serial_write,w,c
  4823  000766  6EFD               	movwf	tosl,c
  4824  000768  5034               	movf	_serial_write+1,w,c
  4825  00076A  6EFE               	movwf	tosh,c
  4826  00076C  50F8               	movf	tblptru,w,c
  4827  00076E  6EFF               	movwf	tosu,c
  4828  000770  50FA               	movf	pclath,w,c
  4829  000772  0101               	movlb	1	; () banked
  4830  000774  5146               	movf	receiveData@crcHolder_2466& (0+255),w,b
  4831  000776  0012               	return		;indir
  4832  000778                     l6710:
  4833                           
  4834                           ;FastTransfer.c: 204: }
  4835                           ;FastTransfer.c: 207: rx_len = 0;
  4836  000778  0E00               	movlw	0
  4837  00077A  6E3E               	movwf	_rx_len,c
  4838                           
  4839                           ;FastTransfer.c: 208: rx_array_inx = 0;
  4840  00077C  0E00               	movlw	0
  4841  00077E  6E3D               	movwf	_rx_array_inx,c
  4842                           
  4843                           ;FastTransfer.c: 209: return 0;
  4844  000780  0E00               	movlw	0
  4845  000782  0012               	return	
  4846  000784                     l6718:
  4847                           
  4848                           ;FastTransfer.c: 210: }
  4849                           ;FastTransfer.c: 211: }
  4850                           ;FastTransfer.c: 212: }
  4851                           ;FastTransfer.c: 215: return 0;
  4852  000784  0E00               	movlw	0
  4853  000786  0012               	return	
  4854  000788                     __end_of_receiveData:
  4855                           	opt stack 0
  4856                           tosu	equ	0xFFF
  4857                           tosh	equ	0xFFE
  4858                           tosl	equ	0xFFD
  4859                           pclath	equ	0xFFA
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           prodh	equ	0xFF4
  4865                           prodl	equ	0xFF3
  4866                           intcon	equ	0xFF2
  4867                           postinc0	equ	0xFEE
  4868                           wreg	equ	0xFE8
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           plusw2	equ	0xFDB
  4873                           fsr2h	equ	0xFDA
  4874                           fsr2l	equ	0xFD9
  4875                           status	equ	0xFD8
  4876                           
  4877 ;; *************** function _Send_put *****************
  4878 ;; Defined at:
  4879 ;;		line 130 in file "UART.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  _data           1    wreg     unsigned char 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  _data           1   37[COMRAM] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4893 ;;      Params:         0       0       0       0       0       0       0
  4894 ;;      Locals:         1       0       0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0
  4896 ;;      Totals:         1       0       0       0       0       0       0
  4897 ;;Total ram usage:        1 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    6
  4900 ;; This function calls:
  4901 ;;		_UART_buff_get
  4902 ;;		_UART_buff_put
  4903 ;; This function is called by:
  4904 ;;		_SYSTEM_Initialize
  4905 ;;		_putch
  4906 ;;		_sendData
  4907 ;;		_receiveData
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text13
  4912  002ED2                     __ptext13:
  4913                           	opt stack 0
  4914  002ED2                     _Send_put:
  4915                           	opt stack 21
  4916                           
  4917                           ;incstack = 0
  4918                           ;Send_put@_data stored from wreg
  4919  002ED2  6E26               	movwf	Send_put@_data,c
  4920                           
  4921                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4922  002ED4  0E00               	movlw	low _output_buffer
  4923  002ED6  6E21               	movwf	UART_buff_put@_this,c
  4924  002ED8  0E05               	movlw	high _output_buffer
  4925  002EDA  6E22               	movwf	UART_buff_put@_this+1,c
  4926  002EDC  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4927  002EE0  EC19  F00C         	call	_UART_buff_put
  4928                           
  4929                           ;UART.c: 132: if (Transmit_stall == 1) {
  4930  002EE4  0444               	decf	_Transmit_stall,w,c
  4931  002EE6  A4D8               	btfss	status,2,c
  4932  002EE8  0012               	return	
  4933                           
  4934                           ;UART.c: 133: Transmit_stall = 0;
  4935  002EEA  0E00               	movlw	0
  4936  002EEC  6E44               	movwf	_Transmit_stall,c
  4937                           
  4938                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4939  002EEE  0E00               	movlw	low _output_buffer
  4940  002EF0  6E21               	movwf	UART_buff_get@_this,c
  4941  002EF2  0E05               	movlw	high _output_buffer
  4942  002EF4  6E22               	movwf	UART_buff_get@_this+1,c
  4943  002EF6  EC30  F012         	call	_UART_buff_get	;wreg free
  4944  002EFA  6EAD               	movwf	4013,c	;volatile
  4945                           
  4946                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4947  002EFC  889D               	bsf	3997,4,c	;volatile
  4948  002EFE  0012               	return	
  4949  002F00                     __end_of_Send_put:
  4950                           	opt stack 0
  4951                           tosu	equ	0xFFF
  4952                           tosh	equ	0xFFE
  4953                           tosl	equ	0xFFD
  4954                           pclath	equ	0xFFA
  4955                           tblptru	equ	0xFF8
  4956                           tblptrh	equ	0xFF7
  4957                           tblptrl	equ	0xFF6
  4958                           tablat	equ	0xFF5
  4959                           prodh	equ	0xFF4
  4960                           prodl	equ	0xFF3
  4961                           intcon	equ	0xFF2
  4962                           postinc0	equ	0xFEE
  4963                           wreg	equ	0xFE8
  4964                           indf2	equ	0xFDF
  4965                           postinc2	equ	0xFDE
  4966                           postdec2	equ	0xFDD
  4967                           plusw2	equ	0xFDB
  4968                           fsr2h	equ	0xFDA
  4969                           fsr2l	equ	0xFD9
  4970                           status	equ	0xFD8
  4971                           
  4972 ;; *************** function _UART_buff_put *****************
  4973 ;; Defined at:
  4974 ;;		line 68 in file "UART.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4977 ;;		 -> output_buffer(206), input_buffer(206), 
  4978 ;;  c               1   34[COMRAM] const unsigned char 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4990 ;;      Params:         3       0       0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0       0       0
  4992 ;;      Temps:          2       0       0       0       0       0       0
  4993 ;;      Totals:         5       0       0       0       0       0       0
  4994 ;;Total ram usage:        5 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    5
  4997 ;; This function calls:
  4998 ;;		_UART_buff_modulo_inc
  4999 ;; This function is called by:
  5000 ;;		_Send_put
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text14
  5005  001832                     __ptext14:
  5006                           	opt stack 0
  5007  001832                     _UART_buff_put:
  5008                           	opt stack 21
  5009                           
  5010                           ;UART.c: 69: if (_this->count < 200) {
  5011                           
  5012                           ;incstack = 0
  5013  001832  EE20 F0CC          	lfsr	2,204
  5014  001836  5021               	movf	UART_buff_put@_this,w,c
  5015  001838  26D9               	addwf	fsr2l,f,c
  5016  00183A  5022               	movf	UART_buff_put@_this+1,w,c
  5017  00183C  22DA               	addwfc	fsr2h,f,c
  5018  00183E  0E01               	movlw	1
  5019  001840  BEDB               	btfsc	plusw2,7,c
  5020  001842  D007               	goto	l5898
  5021  001844  0E01               	movlw	1
  5022  001846  50DB               	movf	plusw2,w,c
  5023  001848  E13A               	bnz	l5904
  5024  00184A  0EC8               	movlw	200
  5025  00184C  5CDE               	subwf	postinc2,w,c
  5026  00184E  B0D8               	btfsc	status,0,c
  5027  001850  D036               	goto	l5904
  5028  001852                     l5898:
  5029                           
  5030                           ;UART.c: 70: _this->buf[_this->head] = c;
  5031  001852  EE20 F0C8          	lfsr	2,200
  5032  001856  5021               	movf	UART_buff_put@_this,w,c
  5033  001858  26D9               	addwf	fsr2l,f,c
  5034  00185A  5022               	movf	UART_buff_put@_this+1,w,c
  5035  00185C  22DA               	addwfc	fsr2h,f,c
  5036  00185E  CFDE F024          	movff	postinc2,??_UART_buff_put
  5037  001862  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5038  001866  5024               	movf	??_UART_buff_put,w,c
  5039  001868  2421               	addwf	UART_buff_put@_this,w,c
  5040  00186A  6ED9               	movwf	fsr2l,c
  5041  00186C  5025               	movf	??_UART_buff_put+1,w,c
  5042  00186E  2022               	addwfc	UART_buff_put@_this+1,w,c
  5043  001870  6EDA               	movwf	fsr2h,c
  5044  001872  C023  FFDF         	movff	UART_buff_put@c,indf2
  5045                           
  5046                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5047  001876  EE20 F0C8          	lfsr	2,200
  5048  00187A  5021               	movf	UART_buff_put@_this,w,c
  5049  00187C  26D9               	addwf	fsr2l,f,c
  5050  00187E  5022               	movf	UART_buff_put@_this+1,w,c
  5051  001880  22DA               	addwfc	fsr2h,f,c
  5052  001882  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5053  001886  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5054  00188A  0E00               	movlw	0
  5055  00188C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5056  00188E  0EC8               	movlw	200
  5057  001890  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5058  001892  ECAB  F017         	call	_UART_buff_modulo_inc	;wreg free
  5059  001896  EE20 F0C8          	lfsr	2,200
  5060  00189A  5021               	movf	UART_buff_put@_this,w,c
  5061  00189C  26D9               	addwf	fsr2l,f,c
  5062  00189E  5022               	movf	UART_buff_put@_this+1,w,c
  5063  0018A0  22DA               	addwfc	fsr2h,f,c
  5064  0018A2  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5065  0018A6  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5066                           
  5067                           ;UART.c: 72: ++_this->count;
  5068  0018AA  EE20 F0CC          	lfsr	2,204
  5069  0018AE  5021               	movf	UART_buff_put@_this,w,c
  5070  0018B0  26D9               	addwf	fsr2l,f,c
  5071  0018B2  5022               	movf	UART_buff_put@_this+1,w,c
  5072  0018B4  22DA               	addwfc	fsr2h,f,c
  5073  0018B6  2ADE               	incf	postinc2,f,c
  5074  0018B8  0E00               	movlw	0
  5075  0018BA  22DD               	addwfc	postdec2,f,c
  5076                           
  5077                           ;UART.c: 73: } else {
  5078  0018BC  0012               	return	
  5079  0018BE                     l5904:
  5080                           
  5081                           ;UART.c: 74: _this->buf[_this->head] = c;
  5082  0018BE  EE20 F0C8          	lfsr	2,200
  5083  0018C2  5021               	movf	UART_buff_put@_this,w,c
  5084  0018C4  26D9               	addwf	fsr2l,f,c
  5085  0018C6  5022               	movf	UART_buff_put@_this+1,w,c
  5086  0018C8  22DA               	addwfc	fsr2h,f,c
  5087  0018CA  CFDE F024          	movff	postinc2,??_UART_buff_put
  5088  0018CE  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5089  0018D2  5024               	movf	??_UART_buff_put,w,c
  5090  0018D4  2421               	addwf	UART_buff_put@_this,w,c
  5091  0018D6  6ED9               	movwf	fsr2l,c
  5092  0018D8  5025               	movf	??_UART_buff_put+1,w,c
  5093  0018DA  2022               	addwfc	UART_buff_put@_this+1,w,c
  5094  0018DC  6EDA               	movwf	fsr2h,c
  5095  0018DE  C023  FFDF         	movff	UART_buff_put@c,indf2
  5096                           
  5097                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5098  0018E2  EE20 F0C8          	lfsr	2,200
  5099  0018E6  5021               	movf	UART_buff_put@_this,w,c
  5100  0018E8  26D9               	addwf	fsr2l,f,c
  5101  0018EA  5022               	movf	UART_buff_put@_this+1,w,c
  5102  0018EC  22DA               	addwfc	fsr2h,f,c
  5103  0018EE  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5104  0018F2  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5105  0018F6  0E00               	movlw	0
  5106  0018F8  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5107  0018FA  0EC8               	movlw	200
  5108  0018FC  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5109  0018FE  ECAB  F017         	call	_UART_buff_modulo_inc	;wreg free
  5110  001902  EE20 F0C8          	lfsr	2,200
  5111  001906  5021               	movf	UART_buff_put@_this,w,c
  5112  001908  26D9               	addwf	fsr2l,f,c
  5113  00190A  5022               	movf	UART_buff_put@_this+1,w,c
  5114  00190C  22DA               	addwfc	fsr2h,f,c
  5115  00190E  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5116  001912  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5117                           
  5118                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5119  001916  EE20 F0CA          	lfsr	2,202
  5120  00191A  5021               	movf	UART_buff_put@_this,w,c
  5121  00191C  26D9               	addwf	fsr2l,f,c
  5122  00191E  5022               	movf	UART_buff_put@_this+1,w,c
  5123  001920  22DA               	addwfc	fsr2h,f,c
  5124  001922  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5125  001926  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5126  00192A  0E00               	movlw	0
  5127  00192C  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5128  00192E  0EC8               	movlw	200
  5129  001930  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5130  001932  ECAB  F017         	call	_UART_buff_modulo_inc	;wreg free
  5131  001936  EE20 F0CA          	lfsr	2,202
  5132  00193A  5021               	movf	UART_buff_put@_this,w,c
  5133  00193C  26D9               	addwf	fsr2l,f,c
  5134  00193E  5022               	movf	UART_buff_put@_this+1,w,c
  5135  001940  22DA               	addwfc	fsr2h,f,c
  5136  001942  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5137  001946  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5138  00194A  0012               	return	
  5139  00194C                     __end_of_UART_buff_put:
  5140                           	opt stack 0
  5141                           tosu	equ	0xFFF
  5142                           tosh	equ	0xFFE
  5143                           tosl	equ	0xFFD
  5144                           pclath	equ	0xFFA
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           intcon	equ	0xFF2
  5152                           postinc0	equ	0xFEE
  5153                           wreg	equ	0xFE8
  5154                           indf2	equ	0xFDF
  5155                           postinc2	equ	0xFDE
  5156                           postdec2	equ	0xFDD
  5157                           plusw2	equ	0xFDB
  5158                           fsr2h	equ	0xFDA
  5159                           fsr2l	equ	0xFD9
  5160                           status	equ	0xFD8
  5161                           
  5162 ;; *************** function _Receive_peek *****************
  5163 ;; Defined at:
  5164 ;;		line 118 in file "UART.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;		None
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      unsigned char 
  5171 ;; Registers used:
  5172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5178 ;;      Params:         0       0       0       0       0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0
  5181 ;;      Totals:         0       0       0       0       0       0       0
  5182 ;;Total ram usage:        0 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    5
  5185 ;; This function calls:
  5186 ;;		_UART_buff_peek
  5187 ;; This function is called by:
  5188 ;;		_SYSTEM_Initialize
  5189 ;;		_receiveData
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text15
  5194  003134                     __ptext15:
  5195                           	opt stack 0
  5196  003134                     _Receive_peek:
  5197                           	opt stack 23
  5198                           
  5199                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  5200                           
  5201                           ;incstack = 0
  5202  003134  0E00               	movlw	low _input_buffer
  5203  003136  6E1B               	movwf	UART_buff_peek@_this,c
  5204  003138  0E04               	movlw	high _input_buffer
  5205  00313A  6E1C               	movwf	UART_buff_peek@_this+1,c
  5206  00313C  ECFD  F017         	call	_UART_buff_peek	;wreg free
  5207  003140  0012               	return	
  5208  003142                     __end_of_Receive_peek:
  5209                           	opt stack 0
  5210                           tosu	equ	0xFFF
  5211                           tosh	equ	0xFFE
  5212                           tosl	equ	0xFFD
  5213                           pclath	equ	0xFFA
  5214                           tblptru	equ	0xFF8
  5215                           tblptrh	equ	0xFF7
  5216                           tblptrl	equ	0xFF6
  5217                           tablat	equ	0xFF5
  5218                           prodh	equ	0xFF4
  5219                           prodl	equ	0xFF3
  5220                           intcon	equ	0xFF2
  5221                           postinc0	equ	0xFEE
  5222                           wreg	equ	0xFE8
  5223                           indf2	equ	0xFDF
  5224                           postinc2	equ	0xFDE
  5225                           postdec2	equ	0xFDD
  5226                           plusw2	equ	0xFDB
  5227                           fsr2h	equ	0xFDA
  5228                           fsr2l	equ	0xFD9
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function _UART_buff_peek *****************
  5232 ;; Defined at:
  5233 ;;		line 114 in file "UART.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5236 ;;		 -> input_buffer(206), 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      unsigned char 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5248 ;;      Params:         2       0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0
  5250 ;;      Temps:          2       0       0       0       0       0       0
  5251 ;;      Totals:         4       0       0       0       0       0       0
  5252 ;;Total ram usage:        4 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    4
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_Receive_peek
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text16
  5263  002FFA                     __ptext16:
  5264                           	opt stack 0
  5265  002FFA                     _UART_buff_peek:
  5266                           	opt stack 23
  5267                           
  5268                           ;UART.c: 115: return _this->buf[_this->tail];
  5269                           
  5270                           ;incstack = 0
  5271  002FFA  EE20 F0CA          	lfsr	2,202
  5272  002FFE  501B               	movf	UART_buff_peek@_this,w,c
  5273  003000  26D9               	addwf	fsr2l,f,c
  5274  003002  501C               	movf	UART_buff_peek@_this+1,w,c
  5275  003004  22DA               	addwfc	fsr2h,f,c
  5276  003006  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  5277  00300A  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  5278  00300E  501D               	movf	??_UART_buff_peek,w,c
  5279  003010  241B               	addwf	UART_buff_peek@_this,w,c
  5280  003012  6ED9               	movwf	fsr2l,c
  5281  003014  501E               	movf	??_UART_buff_peek+1,w,c
  5282  003016  201C               	addwfc	UART_buff_peek@_this+1,w,c
  5283  003018  6EDA               	movwf	fsr2h,c
  5284  00301A  50DF               	movf	indf2,w,c
  5285  00301C  0012               	return	
  5286  00301E                     __end_of_UART_buff_peek:
  5287                           	opt stack 0
  5288                           tosu	equ	0xFFF
  5289                           tosh	equ	0xFFE
  5290                           tosl	equ	0xFFD
  5291                           pclath	equ	0xFFA
  5292                           tblptru	equ	0xFF8
  5293                           tblptrh	equ	0xFF7
  5294                           tblptrl	equ	0xFF6
  5295                           tablat	equ	0xFF5
  5296                           prodh	equ	0xFF4
  5297                           prodl	equ	0xFF3
  5298                           intcon	equ	0xFF2
  5299                           postinc0	equ	0xFEE
  5300                           wreg	equ	0xFE8
  5301                           indf2	equ	0xFDF
  5302                           postinc2	equ	0xFDE
  5303                           postdec2	equ	0xFDD
  5304                           plusw2	equ	0xFDB
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function _CRCcheck *****************
  5310 ;; Defined at:
  5311 ;;		line 378 in file "FastTransfer.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  rt              2    5[BANK0 ] int 
  5316 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  5317 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  5318 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5328 ;;      Params:         0       0       0       0       0       0       0
  5329 ;;      Locals:         0       7       0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0
  5331 ;;      Totals:         0       7       0       0       0       0       0
  5332 ;;Total ram usage:        7 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    7
  5335 ;; This function calls:
  5336 ;;		Absolute function
  5337 ;;		_CRC8
  5338 ;;		_Receive_available
  5339 ;;		_Receive_get
  5340 ;;		_crcBufS_get
  5341 ;;		_crcBufS_status_put
  5342 ;; This function is called by:
  5343 ;;		_receiveData
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text17
  5348  001446                     __ptext17:
  5349                           	opt stack 0
  5350  001446                     _CRCcheck:
  5351                           	opt stack 21
  5352  001446                     l6298:
  5353  001446  D801               	call	u6578
  5354  001448  D00A               	goto	u6579
  5355  00144A                     u6578:
  5356  00144A  0005               	push	
  5357  00144C  6EFA               	movwf	pclath,c
  5358  00144E  502F               	movf	_serial_available,w,c
  5359  001450  6EFD               	movwf	tosl,c
  5360  001452  5030               	movf	_serial_available+1,w,c
  5361  001454  6EFE               	movwf	tosh,c
  5362  001456  50F8               	movf	tblptru,w,c
  5363  001458  6EFF               	movwf	tosu,c
  5364  00145A  50FA               	movf	pclath,w,c
  5365  00145C  0012               	return		;indir
  5366  00145E                     u6579:
  5367  00145E  BE1E               	btfsc	?_Receive_available+1,7,c
  5368  001460  D7F2               	goto	l6298
  5369  001462  501E               	movf	?_Receive_available+1,w,c
  5370  001464  E104               	bnz	l6300
  5371  001466  0E04               	movlw	4
  5372  001468  5C1D               	subwf	?_Receive_available,w,c
  5373  00146A  A0D8               	btfss	status,0,c
  5374  00146C  D7EC               	goto	l6298
  5375  00146E                     l6300:
  5376                           
  5377                           ;FastTransfer.c: 382: unsigned char arrayHolder[3];
  5378                           ;FastTransfer.c: 383: arrayHolder[0] = serial_read();
  5379  00146E  D801               	call	u6598
  5380  001470  D00A               	goto	u6599
  5381  001472                     u6598:
  5382  001472  0005               	push	
  5383  001474  6EFA               	movwf	pclath,c
  5384  001476  5031               	movf	_serial_read,w,c
  5385  001478  6EFD               	movwf	tosl,c
  5386  00147A  5032               	movf	_serial_read+1,w,c
  5387  00147C  6EFE               	movwf	tosh,c
  5388  00147E  50F8               	movf	tblptru,w,c
  5389  001480  6EFF               	movwf	tosu,c
  5390  001482  50FA               	movf	pclath,w,c
  5391  001484  0012               	return		;indir
  5392  001486                     u6599:
  5393  001486  0100               	movlb	0	; () banked
  5394  001488  6FF4               	movwf	CRCcheck@arrayHolder& (0+255),b
  5395                           
  5396                           ;FastTransfer.c: 384: arrayHolder[1] = serial_read();
  5397  00148A  D801               	call	u6608
  5398  00148C  D00A               	goto	u6609
  5399  00148E                     u6608:
  5400  00148E  0005               	push	
  5401  001490  6EFA               	movwf	pclath,c
  5402  001492  5031               	movf	_serial_read,w,c
  5403  001494  6EFD               	movwf	tosl,c
  5404  001496  5032               	movf	_serial_read+1,w,c
  5405  001498  6EFE               	movwf	tosh,c
  5406  00149A  50F8               	movf	tblptru,w,c
  5407  00149C  6EFF               	movwf	tosu,c
  5408  00149E  50FA               	movf	pclath,w,c
  5409  0014A0  0012               	return		;indir
  5410  0014A2                     u6609:
  5411  0014A2  0100               	movlb	0	; () banked
  5412  0014A4  6FF5               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  5413                           
  5414                           ;FastTransfer.c: 385: arrayHolder[2] = serial_read();
  5415  0014A6  D801               	call	u6618
  5416  0014A8  D00A               	goto	u6619
  5417  0014AA                     u6618:
  5418  0014AA  0005               	push	
  5419  0014AC  6EFA               	movwf	pclath,c
  5420  0014AE  5031               	movf	_serial_read,w,c
  5421  0014B0  6EFD               	movwf	tosl,c
  5422  0014B2  5032               	movf	_serial_read+1,w,c
  5423  0014B4  6EFE               	movwf	tosh,c
  5424  0014B6  50F8               	movf	tblptru,w,c
  5425  0014B8  6EFF               	movwf	tosu,c
  5426  0014BA  50FA               	movf	pclath,w,c
  5427  0014BC  0012               	return		;indir
  5428  0014BE                     u6619:
  5429  0014BE  0100               	movlb	0	; () banked
  5430  0014C0  6FF6               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  5431                           
  5432                           ;FastTransfer.c: 386: unsigned char SentCRC = serial_read();
  5433  0014C2  D801               	call	u6628
  5434  0014C4  D00A               	goto	u6629
  5435  0014C6                     u6628:
  5436  0014C6  0005               	push	
  5437  0014C8  6EFA               	movwf	pclath,c
  5438  0014CA  5031               	movf	_serial_read,w,c
  5439  0014CC  6EFD               	movwf	tosl,c
  5440  0014CE  5032               	movf	_serial_read+1,w,c
  5441  0014D0  6EFE               	movwf	tosh,c
  5442  0014D2  50F8               	movf	tblptru,w,c
  5443  0014D4  6EFF               	movwf	tosu,c
  5444  0014D6  50FA               	movf	pclath,w,c
  5445  0014D8  0012               	return		;indir
  5446  0014DA                     u6629:
  5447  0014DA  0100               	movlb	0	; () banked
  5448  0014DC  6FF2               	movwf	CRCcheck@SentCRC& (0+255),b
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;FastTransfer.c: 387: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  5452  0014DE  0EF4               	movlw	low CRCcheck@arrayHolder
  5453  0014E0  6E1B               	movwf	CRC8@data,c
  5454  0014E2  0E00               	movlw	high CRCcheck@arrayHolder
  5455  0014E4  6E1C               	movwf	CRC8@data+1,c
  5456  0014E6  0E03               	movlw	3
  5457  0014E8  6E1D               	movwf	CRC8@len,c
  5458  0014EA  EC36  F016         	call	_CRC8	;wreg free
  5459  0014EE  0100               	movlb	0	; () banked
  5460  0014F0  6FF3               	movwf	CRCcheck@calculatedCRC& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;FastTransfer.c: 390: if (SentCRC == calculatedCRC) {
  5464  0014F2  0100               	movlb	0	; () banked
  5465  0014F4  51F3               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  5466  0014F6  0100               	movlb	0	; () banked
  5467  0014F8  19F2               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  5468  0014FA  A4D8               	btfss	status,2,c
  5469  0014FC  D04E               	goto	l6330
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;FastTransfer.c: 392: int rt;
  5473                           ;FastTransfer.c: 393: for (rt = 0; rt < 5; rt++) {
  5474  0014FE  0E00               	movlw	0
  5475  001500  0100               	movlb	0	; () banked
  5476  001502  6FF8               	movwf	(CRCcheck@rt+1)& (0+255),b
  5477  001504  0E00               	movlw	0
  5478  001506  6FF7               	movwf	CRCcheck@rt& (0+255),b
  5479  001508                     l6308:
  5480                           
  5481                           ; BSR set to: 0
  5482  001508  0100               	movlb	0	; () banked
  5483  00150A  BFF8               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  5484  00150C  D008               	goto	l6312
  5485  00150E  0100               	movlb	0	; () banked
  5486  001510  51F8               	movf	(CRCcheck@rt+1)& (0+255),w,b
  5487  001512  E147               	bnz	l1120
  5488  001514  0E05               	movlw	5
  5489  001516  0100               	movlb	0	; () banked
  5490  001518  5DF7               	subwf	CRCcheck@rt& (0+255),w,b
  5491  00151A  B0D8               	btfsc	status,0,c
  5492  00151C  0012               	return	
  5493  00151E                     l6312:
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;FastTransfer.c: 394: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  5497  00151E  0E28               	movlw	low _crc_buffer
  5498  001520  6E1B               	movwf	crcBufS_get@_this,c
  5499  001522  0E01               	movlw	high _crc_buffer
  5500  001524  6E1C               	movwf	crcBufS_get@_this+1,c
  5501  001526  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5502  00152A  0E00               	movlw	0
  5503  00152C  6E1E               	movwf	crcBufS_get@space,c
  5504  00152E  EC37  F00E         	call	_crcBufS_get	;wreg free
  5505  001532  183B               	xorwf	_returnAddress,w,c
  5506  001534  A4D8               	btfss	status,2,c
  5507  001536  D02D               	goto	l6326
  5508                           
  5509                           ;FastTransfer.c: 395: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  5510  001538  0E28               	movlw	low _crc_buffer
  5511  00153A  6E1B               	movwf	crcBufS_get@_this,c
  5512  00153C  0E01               	movlw	high _crc_buffer
  5513  00153E  6E1C               	movwf	crcBufS_get@_this+1,c
  5514  001540  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5515  001544  0E01               	movlw	1
  5516  001546  6E1E               	movwf	crcBufS_get@space,c
  5517  001548  EC37  F00E         	call	_crcBufS_get	;wreg free
  5518  00154C  0100               	movlb	0	; () banked
  5519  00154E  19F6               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  5520  001550  A4D8               	btfss	status,2,c
  5521  001552  D01F               	goto	l6326
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;FastTransfer.c: 396: if (arrayHolder[1] == 1) {
  5525  001554  0100               	movlb	0	; () banked
  5526  001556  05F5               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5527  001558  A4D8               	btfss	status,2,c
  5528  00155A  D00B               	goto	l6322
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;FastTransfer.c: 397: crcBufS_status_put(&crc_buffer, rt, 1);
  5532  00155C  0E28               	movlw	low _crc_buffer
  5533  00155E  6E1B               	movwf	crcBufS_status_put@_this,c
  5534  001560  0E01               	movlw	high _crc_buffer
  5535  001562  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5536  001564  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5537  001568  0E01               	movlw	1
  5538  00156A  6E1E               	movwf	crcBufS_status_put@status,c
  5539  00156C  EC14  F00F         	call	_crcBufS_status_put	;wreg free
  5540                           
  5541                           ;FastTransfer.c: 398: break;
  5542  001570  0012               	return	
  5543  001572                     l6322:
  5544  001572  0E02               	movlw	2
  5545  001574  0100               	movlb	0	; () banked
  5546  001576  19F5               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5547  001578  A4D8               	btfss	status,2,c
  5548  00157A  D00B               	goto	l6326
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;FastTransfer.c: 400: crcBufS_status_put(&crc_buffer, rt, 2);
  5552  00157C  0E28               	movlw	low _crc_buffer
  5553  00157E  6E1B               	movwf	crcBufS_status_put@_this,c
  5554  001580  0E01               	movlw	high _crc_buffer
  5555  001582  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5556  001584  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5557  001588  0E02               	movlw	2
  5558  00158A  6E1E               	movwf	crcBufS_status_put@status,c
  5559  00158C  EC14  F00F         	call	_crcBufS_status_put	;wreg free
  5560                           
  5561                           ;FastTransfer.c: 401: break;
  5562  001590  0012               	return	
  5563  001592                     l6326:
  5564  001592  0100               	movlb	0	; () banked
  5565  001594  4BF7               	infsnz	CRCcheck@rt& (0+255),f,b
  5566  001596  2BF8               	incf	(CRCcheck@rt+1)& (0+255),f,b
  5567  001598  D7B7               	goto	l6308
  5568  00159A                     l6330:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;FastTransfer.c: 407: crcErrorCounter++;
  5572  00159A  0100               	movlb	0	; () banked
  5573  00159C  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  5574  00159E  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  5575  0015A0  0012               	return	
  5576  0015A2                     l1120:
  5577  0015A2  0012               	return		;funcret
  5578  0015A4                     __end_of_CRCcheck:
  5579                           	opt stack 0
  5580                           tosu	equ	0xFFF
  5581                           tosh	equ	0xFFE
  5582                           tosl	equ	0xFFD
  5583                           pclath	equ	0xFFA
  5584                           tblptru	equ	0xFF8
  5585                           tblptrh	equ	0xFF7
  5586                           tblptrl	equ	0xFF6
  5587                           tablat	equ	0xFF5
  5588                           prodh	equ	0xFF4
  5589                           prodl	equ	0xFF3
  5590                           intcon	equ	0xFF2
  5591                           postinc0	equ	0xFEE
  5592                           wreg	equ	0xFE8
  5593                           indf2	equ	0xFDF
  5594                           postinc2	equ	0xFDE
  5595                           postdec2	equ	0xFDD
  5596                           plusw2	equ	0xFDB
  5597                           fsr2h	equ	0xFDA
  5598                           fsr2l	equ	0xFD9
  5599                           status	equ	0xFD8
  5600                           
  5601 ;; *************** function _crcBufS_status_put *****************
  5602 ;; Defined at:
  5603 ;;		line 341 in file "FastTransfer.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5606 ;;		 -> crc_buffer(17), 
  5607 ;;  time            1   28[COMRAM] unsigned char 
  5608 ;;  status          1   29[COMRAM] unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  wantedTime      2   34[COMRAM] int 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5620 ;;      Params:         4       0       0       0       0       0       0
  5621 ;;      Locals:         2       0       0       0       0       0       0
  5622 ;;      Temps:          4       0       0       0       0       0       0
  5623 ;;      Totals:        10       0       0       0       0       0       0
  5624 ;;Total ram usage:       10 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    4
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_CRCcheck
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text18
  5635  001E28                     __ptext18:
  5636                           	opt stack 0
  5637  001E28                     _crcBufS_status_put:
  5638                           	opt stack 23
  5639                           
  5640                           ;FastTransfer.c: 342: if (time >= 5) {
  5641                           
  5642                           ;incstack = 0
  5643  001E28  0E04               	movlw	4
  5644  001E2A  641D               	cpfsgt	crcBufS_status_put@time,c
  5645  001E2C  D002               	goto	l6044
  5646                           
  5647                           ;FastTransfer.c: 343: time = 5 - 1;
  5648  001E2E  0E04               	movlw	4
  5649  001E30  6E1D               	movwf	crcBufS_status_put@time,c
  5650  001E32                     l6044:
  5651                           
  5652                           ;FastTransfer.c: 344: }
  5653                           ;FastTransfer.c: 345: time = time + 1;
  5654  001E32  281D               	incf	crcBufS_status_put@time,w,c
  5655  001E34  6E1D               	movwf	crcBufS_status_put@time,c
  5656                           
  5657                           ;FastTransfer.c: 346: int wantedTime = time * 3;
  5658  001E36  501D               	movf	crcBufS_status_put@time,w,c
  5659  001E38  0D03               	mullw	3
  5660  001E3A  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  5661  001E3E  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  5662                           
  5663                           ;FastTransfer.c: 347: if (wantedTime > _this->head) {
  5664  001E42  EE20 F00F          	lfsr	2,15
  5665  001E46  501B               	movf	crcBufS_status_put@_this,w,c
  5666  001E48  26D9               	addwf	fsr2l,f,c
  5667  001E4A  501C               	movf	crcBufS_status_put@_this+1,w,c
  5668  001E4C  22DA               	addwfc	fsr2h,f,c
  5669  001E4E  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5670  001E50  5CDE               	subwf	postinc2,w,c
  5671  001E52  50DE               	movf	postinc2,w,c
  5672  001E54  0A80               	xorlw	128
  5673  001E56  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  5674  001E58  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5675  001E5A  0A80               	xorlw	128
  5676  001E5C  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  5677  001E5E  B0D8               	btfsc	status,0,c
  5678  001E60  D02B               	goto	l6052
  5679                           
  5680                           ;FastTransfer.c: 348: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5681  001E62  EE20 F00F          	lfsr	2,15
  5682  001E66  501B               	movf	crcBufS_status_put@_this,w,c
  5683  001E68  26D9               	addwf	fsr2l,f,c
  5684  001E6A  501C               	movf	crcBufS_status_put@_this+1,w,c
  5685  001E6C  22DA               	addwfc	fsr2h,f,c
  5686  001E6E  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5687  001E72  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5688  001E76  1E1F               	comf	??_crcBufS_status_put,f,c
  5689  001E78  1E20               	comf	??_crcBufS_status_put+1,f,c
  5690  001E7A  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5691  001E7C  2A20               	incf	??_crcBufS_status_put+1,f,c
  5692  001E7E  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5693  001E80  261F               	addwf	??_crcBufS_status_put,f,c
  5694  001E82  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5695  001E84  2220               	addwfc	??_crcBufS_status_put+1,f,c
  5696  001E86  1E1F               	comf	??_crcBufS_status_put,f,c
  5697  001E88  1E20               	comf	??_crcBufS_status_put+1,f,c
  5698  001E8A  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5699  001E8C  2A20               	incf	??_crcBufS_status_put+1,f,c
  5700  001E8E  0E0F               	movlw	15
  5701  001E90  241F               	addwf	??_crcBufS_status_put,w,c
  5702  001E92  6E23               	movwf	crcBufS_status_put@wantedTime,c
  5703  001E94  0E00               	movlw	0
  5704  001E96  2020               	addwfc	??_crcBufS_status_put+1,w,c
  5705  001E98  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  5706                           
  5707                           ;FastTransfer.c: 349: _this->buf[(wantedTime + 2)] = status;
  5708  001E9A  0E02               	movlw	2
  5709  001E9C  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  5710  001E9E  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  5711  001EA0  0E00               	movlw	0
  5712  001EA2  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  5713  001EA4  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  5714  001EA6  501F               	movf	??_crcBufS_status_put,w,c
  5715  001EA8  241B               	addwf	crcBufS_status_put@_this,w,c
  5716  001EAA  6ED9               	movwf	fsr2l,c
  5717  001EAC  5020               	movf	??_crcBufS_status_put+1,w,c
  5718  001EAE  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5719  001EB0  6EDA               	movwf	fsr2h,c
  5720  001EB2  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5721                           
  5722                           ;FastTransfer.c: 350: } else {
  5723  001EB6  0012               	return	
  5724  001EB8                     l6052:
  5725                           
  5726                           ;FastTransfer.c: 351: _this->buf[(_this->head - wantedTime) + 2] = status;
  5727  001EB8  EE20 F00F          	lfsr	2,15
  5728  001EBC  501B               	movf	crcBufS_status_put@_this,w,c
  5729  001EBE  26D9               	addwf	fsr2l,f,c
  5730  001EC0  501C               	movf	crcBufS_status_put@_this+1,w,c
  5731  001EC2  22DA               	addwfc	fsr2h,f,c
  5732  001EC4  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5733  001EC8  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5734  001ECC  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  5735  001ED0  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  5736  001ED4  1E21               	comf	??_crcBufS_status_put+2,f,c
  5737  001ED6  1E22               	comf	??_crcBufS_status_put+3,f,c
  5738  001ED8  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  5739  001EDA  2A22               	incf	??_crcBufS_status_put+3,f,c
  5740  001EDC  501F               	movf	??_crcBufS_status_put,w,c
  5741  001EDE  2621               	addwf	??_crcBufS_status_put+2,f,c
  5742  001EE0  5020               	movf	??_crcBufS_status_put+1,w,c
  5743  001EE2  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5744  001EE4  0E02               	movlw	2
  5745  001EE6  2621               	addwf	??_crcBufS_status_put+2,f,c
  5746  001EE8  0E00               	movlw	0
  5747  001EEA  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5748  001EEC  5021               	movf	??_crcBufS_status_put+2,w,c
  5749  001EEE  241B               	addwf	crcBufS_status_put@_this,w,c
  5750  001EF0  6ED9               	movwf	fsr2l,c
  5751  001EF2  5022               	movf	??_crcBufS_status_put+3,w,c
  5752  001EF4  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5753  001EF6  6EDA               	movwf	fsr2h,c
  5754  001EF8  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5755  001EFC  0012               	return	
  5756  001EFE                     __end_of_crcBufS_status_put:
  5757                           	opt stack 0
  5758                           tosu	equ	0xFFF
  5759                           tosh	equ	0xFFE
  5760                           tosl	equ	0xFFD
  5761                           pclath	equ	0xFFA
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodh	equ	0xFF4
  5767                           prodl	equ	0xFF3
  5768                           intcon	equ	0xFF2
  5769                           postinc0	equ	0xFEE
  5770                           wreg	equ	0xFE8
  5771                           indf2	equ	0xFDF
  5772                           postinc2	equ	0xFDE
  5773                           postdec2	equ	0xFDD
  5774                           plusw2	equ	0xFDB
  5775                           fsr2h	equ	0xFDA
  5776                           fsr2l	equ	0xFD9
  5777                           status	equ	0xFD8
  5778                           
  5779 ;; *************** function _crcBufS_get *****************
  5780 ;; Defined at:
  5781 ;;		line 358 in file "FastTransfer.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5784 ;;		 -> crc_buffer(17), 
  5785 ;;  time            1   28[COMRAM] unsigned char 
  5786 ;;  space           1   29[COMRAM] unsigned char 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  wantedTime      2   36[COMRAM] int 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      unsigned char 
  5791 ;; Registers used:
  5792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5798 ;;      Params:         4       0       0       0       0       0       0
  5799 ;;      Locals:         2       0       0       0       0       0       0
  5800 ;;      Temps:          6       0       0       0       0       0       0
  5801 ;;      Totals:        12       0       0       0       0       0       0
  5802 ;;Total ram usage:       12 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    4
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_CRCcheck
  5809 ;;		_AKNAK
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text19
  5814  001C6E                     __ptext19:
  5815                           	opt stack 0
  5816  001C6E                     _crcBufS_get:
  5817                           	opt stack 23
  5818                           
  5819                           ;FastTransfer.c: 359: if (time >= 5) {
  5820                           
  5821                           ;incstack = 0
  5822  001C6E  0E04               	movlw	4
  5823  001C70  641D               	cpfsgt	crcBufS_get@time,c
  5824  001C72  D002               	goto	l6020
  5825                           
  5826                           ;FastTransfer.c: 360: time = 5 - 1;
  5827  001C74  0E04               	movlw	4
  5828  001C76  6E1D               	movwf	crcBufS_get@time,c
  5829  001C78                     l6020:
  5830                           
  5831                           ;FastTransfer.c: 361: }
  5832                           ;FastTransfer.c: 362: if (space >= 3) {
  5833  001C78  0E02               	movlw	2
  5834  001C7A  641E               	cpfsgt	crcBufS_get@space,c
  5835  001C7C  D002               	goto	l6024
  5836                           
  5837                           ;FastTransfer.c: 363: space = 3 - 1;
  5838  001C7E  0E02               	movlw	2
  5839  001C80  6E1E               	movwf	crcBufS_get@space,c
  5840  001C82                     l6024:
  5841                           
  5842                           ;FastTransfer.c: 364: }
  5843                           ;FastTransfer.c: 365: time = time + 1;
  5844  001C82  281D               	incf	crcBufS_get@time,w,c
  5845  001C84  6E1D               	movwf	crcBufS_get@time,c
  5846                           
  5847                           ;FastTransfer.c: 366: int wantedTime = time * 3;
  5848  001C86  501D               	movf	crcBufS_get@time,w,c
  5849  001C88  0D03               	mullw	3
  5850  001C8A  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  5851  001C8E  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  5852                           
  5853                           ;FastTransfer.c: 367: if (wantedTime > _this->head) {
  5854  001C92  EE20 F00F          	lfsr	2,15
  5855  001C96  501B               	movf	crcBufS_get@_this,w,c
  5856  001C98  26D9               	addwf	fsr2l,f,c
  5857  001C9A  501C               	movf	crcBufS_get@_this+1,w,c
  5858  001C9C  22DA               	addwfc	fsr2h,f,c
  5859  001C9E  5025               	movf	crcBufS_get@wantedTime,w,c
  5860  001CA0  5CDE               	subwf	postinc2,w,c
  5861  001CA2  50DE               	movf	postinc2,w,c
  5862  001CA4  0A80               	xorlw	128
  5863  001CA6  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  5864  001CA8  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5865  001CAA  0A80               	xorlw	128
  5866  001CAC  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  5867  001CAE  B0D8               	btfsc	status,0,c
  5868  001CB0  D02A               	goto	l6036
  5869                           
  5870                           ;FastTransfer.c: 368: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5871  001CB2  EE20 F00F          	lfsr	2,15
  5872  001CB6  501B               	movf	crcBufS_get@_this,w,c
  5873  001CB8  26D9               	addwf	fsr2l,f,c
  5874  001CBA  501C               	movf	crcBufS_get@_this+1,w,c
  5875  001CBC  22DA               	addwfc	fsr2h,f,c
  5876  001CBE  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5877  001CC2  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5878  001CC6  1E1F               	comf	??_crcBufS_get,f,c
  5879  001CC8  1E20               	comf	??_crcBufS_get+1,f,c
  5880  001CCA  4A1F               	infsnz	??_crcBufS_get,f,c
  5881  001CCC  2A20               	incf	??_crcBufS_get+1,f,c
  5882  001CCE  5025               	movf	crcBufS_get@wantedTime,w,c
  5883  001CD0  261F               	addwf	??_crcBufS_get,f,c
  5884  001CD2  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5885  001CD4  2220               	addwfc	??_crcBufS_get+1,f,c
  5886  001CD6  1E1F               	comf	??_crcBufS_get,f,c
  5887  001CD8  1E20               	comf	??_crcBufS_get+1,f,c
  5888  001CDA  4A1F               	infsnz	??_crcBufS_get,f,c
  5889  001CDC  2A20               	incf	??_crcBufS_get+1,f,c
  5890  001CDE  0E0F               	movlw	15
  5891  001CE0  241F               	addwf	??_crcBufS_get,w,c
  5892  001CE2  6E25               	movwf	crcBufS_get@wantedTime,c
  5893  001CE4  0E00               	movlw	0
  5894  001CE6  2020               	addwfc	??_crcBufS_get+1,w,c
  5895  001CE8  6E26               	movwf	crcBufS_get@wantedTime+1,c
  5896                           
  5897                           ;FastTransfer.c: 369: return (_this->buf[(wantedTime + space)]);
  5898  001CEA  501E               	movf	crcBufS_get@space,w,c
  5899  001CEC  2425               	addwf	crcBufS_get@wantedTime,w,c
  5900  001CEE  6E1F               	movwf	??_crcBufS_get& (0+255),c
  5901  001CF0  0E00               	movlw	0
  5902  001CF2  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  5903  001CF4  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  5904  001CF6  501F               	movf	??_crcBufS_get,w,c
  5905  001CF8  241B               	addwf	crcBufS_get@_this,w,c
  5906  001CFA  6ED9               	movwf	fsr2l,c
  5907  001CFC  5020               	movf	??_crcBufS_get+1,w,c
  5908  001CFE  201C               	addwfc	crcBufS_get@_this+1,w,c
  5909  001D00  6EDA               	movwf	fsr2h,c
  5910  001D02  50DF               	movf	indf2,w,c
  5911                           
  5912                           ;FastTransfer.c: 370: } else {
  5913  001D04  0012               	return	
  5914  001D06                     l6036:
  5915                           
  5916                           ;FastTransfer.c: 371: return (_this->buf[(_this->head - wantedTime) + space]);
  5917  001D06  EE20 F00F          	lfsr	2,15
  5918  001D0A  501B               	movf	crcBufS_get@_this,w,c
  5919  001D0C  26D9               	addwf	fsr2l,f,c
  5920  001D0E  501C               	movf	crcBufS_get@_this+1,w,c
  5921  001D10  22DA               	addwfc	fsr2h,f,c
  5922  001D12  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5923  001D16  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5924  001D1A  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  5925  001D1E  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  5926  001D22  1E21               	comf	??_crcBufS_get+2,f,c
  5927  001D24  1E22               	comf	??_crcBufS_get+3,f,c
  5928  001D26  4A21               	infsnz	??_crcBufS_get+2,f,c
  5929  001D28  2A22               	incf	??_crcBufS_get+3,f,c
  5930  001D2A  501E               	movf	crcBufS_get@space,w,c
  5931  001D2C  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  5932  001D2E  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  5933  001D30  5021               	movf	??_crcBufS_get+2,w,c
  5934  001D32  2623               	addwf	??_crcBufS_get+4,f,c
  5935  001D34  5022               	movf	??_crcBufS_get+3,w,c
  5936  001D36  2224               	addwfc	??_crcBufS_get+5,f,c
  5937  001D38  501F               	movf	??_crcBufS_get,w,c
  5938  001D3A  2623               	addwf	??_crcBufS_get+4,f,c
  5939  001D3C  5020               	movf	??_crcBufS_get+1,w,c
  5940  001D3E  2224               	addwfc	??_crcBufS_get+5,f,c
  5941  001D40  5023               	movf	??_crcBufS_get+4,w,c
  5942  001D42  241B               	addwf	crcBufS_get@_this,w,c
  5943  001D44  6ED9               	movwf	fsr2l,c
  5944  001D46  5024               	movf	??_crcBufS_get+5,w,c
  5945  001D48  201C               	addwfc	crcBufS_get@_this+1,w,c
  5946  001D4A  6EDA               	movwf	fsr2h,c
  5947  001D4C  50DF               	movf	indf2,w,c
  5948  001D4E  0012               	return	
  5949  001D50                     __end_of_crcBufS_get:
  5950                           	opt stack 0
  5951                           tosu	equ	0xFFF
  5952                           tosh	equ	0xFFE
  5953                           tosl	equ	0xFFD
  5954                           pclath	equ	0xFFA
  5955                           tblptru	equ	0xFF8
  5956                           tblptrh	equ	0xFF7
  5957                           tblptrl	equ	0xFF6
  5958                           tablat	equ	0xFF5
  5959                           prodh	equ	0xFF4
  5960                           prodl	equ	0xFF3
  5961                           intcon	equ	0xFF2
  5962                           postinc0	equ	0xFEE
  5963                           wreg	equ	0xFE8
  5964                           indf2	equ	0xFDF
  5965                           postinc2	equ	0xFDE
  5966                           postdec2	equ	0xFDD
  5967                           plusw2	equ	0xFDB
  5968                           fsr2h	equ	0xFDA
  5969                           fsr2l	equ	0xFD9
  5970                           status	equ	0xFD8
  5971                           
  5972 ;; *************** function _Receive_get *****************
  5973 ;; Defined at:
  5974 ;;		line 126 in file "UART.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;		None
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      unsigned char 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5988 ;;      Params:         0       0       0       0       0       0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0
  5991 ;;      Totals:         0       0       0       0       0       0       0
  5992 ;;Total ram usage:        0 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    6
  5995 ;; This function calls:
  5996 ;;		_UART_buff_get
  5997 ;; This function is called by:
  5998 ;;		_SYSTEM_Initialize
  5999 ;;		_getch
  6000 ;;		_CRCcheck
  6001 ;;		_receiveData
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text20
  6006  003142                     __ptext20:
  6007                           	opt stack 0
  6008  003142                     _Receive_get:
  6009                           	opt stack 22
  6010                           
  6011                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  6012                           
  6013                           ;incstack = 0
  6014  003142  0E00               	movlw	low _input_buffer
  6015  003144  6E21               	movwf	UART_buff_get@_this,c
  6016  003146  0E04               	movlw	high _input_buffer
  6017  003148  6E22               	movwf	UART_buff_get@_this+1,c
  6018  00314A  EC30  F012         	call	_UART_buff_get	;wreg free
  6019  00314E  0012               	return	
  6020  003150                     __end_of_Receive_get:
  6021                           	opt stack 0
  6022                           tosu	equ	0xFFF
  6023                           tosh	equ	0xFFE
  6024                           tosl	equ	0xFFD
  6025                           pclath	equ	0xFFA
  6026                           tblptru	equ	0xFF8
  6027                           tblptrh	equ	0xFF7
  6028                           tblptrl	equ	0xFF6
  6029                           tablat	equ	0xFF5
  6030                           prodh	equ	0xFF4
  6031                           prodl	equ	0xFF3
  6032                           intcon	equ	0xFF2
  6033                           postinc0	equ	0xFEE
  6034                           wreg	equ	0xFE8
  6035                           indf2	equ	0xFDF
  6036                           postinc2	equ	0xFDE
  6037                           postdec2	equ	0xFDD
  6038                           plusw2	equ	0xFDB
  6039                           fsr2h	equ	0xFDA
  6040                           fsr2l	equ	0xFD9
  6041                           status	equ	0xFD8
  6042                           
  6043 ;; *************** function _UART_buff_get *****************
  6044 ;; Defined at:
  6045 ;;		line 81 in file "UART.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  6048 ;;		 -> output_buffer(206), input_buffer(206), 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  c               1   36[COMRAM] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      unsigned char 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6060 ;;      Params:         2       0       0       0       0       0       0
  6061 ;;      Locals:         1       0       0       0       0       0       0
  6062 ;;      Temps:          2       0       0       0       0       0       0
  6063 ;;      Totals:         5       0       0       0       0       0       0
  6064 ;;Total ram usage:        5 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    5
  6067 ;; This function calls:
  6068 ;;		_UART_buff_modulo_inc
  6069 ;; This function is called by:
  6070 ;;		_Receive_get
  6071 ;;		_Send_put
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text21
  6076  002460                     __ptext21:
  6077                           	opt stack 0
  6078  002460                     _UART_buff_get:
  6079                           	opt stack 21
  6080                           
  6081                           ;UART.c: 82: unsigned char c;
  6082                           ;UART.c: 83: if (_this->count > 0) {
  6083                           
  6084                           ;incstack = 0
  6085  002460  EE20 F0CC          	lfsr	2,204
  6086  002464  5021               	movf	UART_buff_get@_this,w,c
  6087  002466  26D9               	addwf	fsr2l,f,c
  6088  002468  5022               	movf	UART_buff_get@_this+1,w,c
  6089  00246A  22DA               	addwfc	fsr2h,f,c
  6090  00246C  0E01               	movlw	1
  6091  00246E  BEDB               	btfsc	plusw2,7,c
  6092  002470  D03C               	goto	l5918
  6093  002472  0E01               	movlw	1
  6094  002474  50DB               	movf	plusw2,w,c
  6095  002476  E103               	bnz	u6090
  6096  002478  04DE               	decf	postinc2,w,c
  6097  00247A  A0D8               	btfss	status,0,c
  6098  00247C  D036               	goto	l5918
  6099  00247E                     u6090:
  6100                           
  6101                           ;UART.c: 84: c = _this->buf[_this->tail];
  6102  00247E  EE20 F0CA          	lfsr	2,202
  6103  002482  5021               	movf	UART_buff_get@_this,w,c
  6104  002484  26D9               	addwf	fsr2l,f,c
  6105  002486  5022               	movf	UART_buff_get@_this+1,w,c
  6106  002488  22DA               	addwfc	fsr2h,f,c
  6107  00248A  CFDE F023          	movff	postinc2,??_UART_buff_get
  6108  00248E  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  6109  002492  5023               	movf	??_UART_buff_get,w,c
  6110  002494  2421               	addwf	UART_buff_get@_this,w,c
  6111  002496  6ED9               	movwf	fsr2l,c
  6112  002498  5024               	movf	??_UART_buff_get+1,w,c
  6113  00249A  2022               	addwfc	UART_buff_get@_this+1,w,c
  6114  00249C  6EDA               	movwf	fsr2h,c
  6115  00249E  50DF               	movf	indf2,w,c
  6116  0024A0  6E25               	movwf	UART_buff_get@c,c
  6117                           
  6118                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  6119  0024A2  EE20 F0CA          	lfsr	2,202
  6120  0024A6  5021               	movf	UART_buff_get@_this,w,c
  6121  0024A8  26D9               	addwf	fsr2l,f,c
  6122  0024AA  5022               	movf	UART_buff_get@_this+1,w,c
  6123  0024AC  22DA               	addwfc	fsr2h,f,c
  6124  0024AE  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  6125  0024B2  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  6126  0024B6  0E00               	movlw	0
  6127  0024B8  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  6128  0024BA  0EC8               	movlw	200
  6129  0024BC  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  6130  0024BE  ECAB  F017         	call	_UART_buff_modulo_inc	;wreg free
  6131  0024C2  EE20 F0CA          	lfsr	2,202
  6132  0024C6  5021               	movf	UART_buff_get@_this,w,c
  6133  0024C8  26D9               	addwf	fsr2l,f,c
  6134  0024CA  5022               	movf	UART_buff_get@_this+1,w,c
  6135  0024CC  22DA               	addwfc	fsr2h,f,c
  6136  0024CE  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  6137  0024D2  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  6138                           
  6139                           ;UART.c: 86: --_this->count;
  6140  0024D6  EE20 F0CC          	lfsr	2,204
  6141  0024DA  5021               	movf	UART_buff_get@_this,w,c
  6142  0024DC  26D9               	addwf	fsr2l,f,c
  6143  0024DE  5022               	movf	UART_buff_get@_this+1,w,c
  6144  0024E0  22DA               	addwfc	fsr2h,f,c
  6145  0024E2  06DE               	decf	postinc2,f,c
  6146  0024E4  0E00               	movlw	0
  6147  0024E6  5ADD               	subwfb	postdec2,f,c
  6148                           
  6149                           ;UART.c: 87: } else {
  6150  0024E8  D002               	goto	l1165
  6151  0024EA                     l5918:
  6152                           
  6153                           ;UART.c: 88: c = 0;
  6154  0024EA  0E00               	movlw	0
  6155  0024EC  6E25               	movwf	UART_buff_get@c,c
  6156  0024EE                     l1165:
  6157                           
  6158                           ;UART.c: 89: }
  6159                           ;UART.c: 90: return (c);
  6160  0024EE  5025               	movf	UART_buff_get@c,w,c
  6161  0024F0  0012               	return	
  6162  0024F2                     __end_of_UART_buff_get:
  6163                           	opt stack 0
  6164                           tosu	equ	0xFFF
  6165                           tosh	equ	0xFFE
  6166                           tosl	equ	0xFFD
  6167                           pclath	equ	0xFFA
  6168                           tblptru	equ	0xFF8
  6169                           tblptrh	equ	0xFF7
  6170                           tblptrl	equ	0xFF6
  6171                           tablat	equ	0xFF5
  6172                           prodh	equ	0xFF4
  6173                           prodl	equ	0xFF3
  6174                           intcon	equ	0xFF2
  6175                           postinc0	equ	0xFEE
  6176                           wreg	equ	0xFE8
  6177                           indf2	equ	0xFDF
  6178                           postinc2	equ	0xFDE
  6179                           postdec2	equ	0xFDD
  6180                           plusw2	equ	0xFDB
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8
  6184                           
  6185 ;; *************** function _UART_buff_modulo_inc *****************
  6186 ;; Defined at:
  6187 ;;		line 106 in file "UART.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  value           2   26[COMRAM] const unsigned int 
  6190 ;;  modulus         2   28[COMRAM] const unsigned int 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  my_value        2   30[COMRAM] unsigned int 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  2   26[COMRAM] unsigned int 
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6202 ;;      Params:         4       0       0       0       0       0       0
  6203 ;;      Locals:         2       0       0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0
  6205 ;;      Totals:         6       0       0       0       0       0       0
  6206 ;;Total ram usage:        6 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    4
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_UART_buff_put
  6213 ;;		_UART_buff_get
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text22
  6218  002F56                     __ptext22:
  6219                           	opt stack 0
  6220  002F56                     _UART_buff_modulo_inc:
  6221                           	opt stack 21
  6222                           
  6223                           ;UART.c: 107: unsigned int my_value = value + 1;
  6224                           
  6225                           ;incstack = 0
  6226  002F56  0E01               	movlw	1
  6227  002F58  241B               	addwf	UART_buff_modulo_inc@value,w,c
  6228  002F5A  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6229  002F5C  0E00               	movlw	0
  6230  002F5E  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  6231  002F60  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6232                           
  6233                           ;UART.c: 108: if (my_value >= modulus) {
  6234  002F62  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  6235  002F64  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  6236  002F66  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  6237  002F68  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  6238  002F6A  A0D8               	btfss	status,0,c
  6239  002F6C  D004               	goto	l5878
  6240                           
  6241                           ;UART.c: 109: my_value = 0;
  6242  002F6E  0E00               	movlw	0
  6243  002F70  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6244  002F72  0E00               	movlw	0
  6245  002F74  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6246  002F76                     l5878:
  6247                           
  6248                           ;UART.c: 110: }
  6249                           ;UART.c: 111: return (my_value);
  6250  002F76  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  6251  002F7A  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  6252  002F7E  0012               	return	
  6253  002F80                     __end_of_UART_buff_modulo_inc:
  6254                           	opt stack 0
  6255                           tosu	equ	0xFFF
  6256                           tosh	equ	0xFFE
  6257                           tosl	equ	0xFFD
  6258                           pclath	equ	0xFFA
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           intcon	equ	0xFF2
  6266                           postinc0	equ	0xFEE
  6267                           wreg	equ	0xFE8
  6268                           indf2	equ	0xFDF
  6269                           postinc2	equ	0xFDE
  6270                           postdec2	equ	0xFDD
  6271                           plusw2	equ	0xFDB
  6272                           fsr2h	equ	0xFDA
  6273                           fsr2l	equ	0xFD9
  6274                           status	equ	0xFD8
  6275                           
  6276 ;; *************** function _Receive_available *****************
  6277 ;; Defined at:
  6278 ;;		line 122 in file "UART.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2   28[COMRAM] int 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6292 ;;      Params:         2       0       0       0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0
  6295 ;;      Totals:         2       0       0       0       0       0       0
  6296 ;;Total ram usage:        2 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    5
  6299 ;; This function calls:
  6300 ;;		_UART_buff_size
  6301 ;; This function is called by:
  6302 ;;		_SYSTEM_Initialize
  6303 ;;		_CRCcheck
  6304 ;;		_receiveData
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text23
  6309  0030CE                     __ptext23:
  6310                           	opt stack 0
  6311  0030CE                     _Receive_available:
  6312                           	opt stack 23
  6313                           
  6314                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  6315                           
  6316                           ;incstack = 0
  6317  0030CE  0E00               	movlw	low _input_buffer
  6318  0030D0  6E1B               	movwf	UART_buff_size@_this,c
  6319  0030D2  0E04               	movlw	high _input_buffer
  6320  0030D4  6E1C               	movwf	UART_buff_size@_this+1,c
  6321  0030D6  EC72  F018         	call	_UART_buff_size	;wreg free
  6322  0030DA  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  6323  0030DE  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  6324  0030E2  0012               	return	
  6325  0030E4                     __end_of_Receive_available:
  6326                           	opt stack 0
  6327                           tosu	equ	0xFFF
  6328                           tosh	equ	0xFFE
  6329                           tosl	equ	0xFFD
  6330                           pclath	equ	0xFFA
  6331                           tblptru	equ	0xFF8
  6332                           tblptrh	equ	0xFF7
  6333                           tblptrl	equ	0xFF6
  6334                           tablat	equ	0xFF5
  6335                           prodh	equ	0xFF4
  6336                           prodl	equ	0xFF3
  6337                           intcon	equ	0xFF2
  6338                           postinc0	equ	0xFEE
  6339                           wreg	equ	0xFE8
  6340                           indf2	equ	0xFDF
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           plusw2	equ	0xFDB
  6344                           fsr2h	equ	0xFDA
  6345                           fsr2l	equ	0xFD9
  6346                           status	equ	0xFD8
  6347                           
  6348 ;; *************** function _UART_buff_size *****************
  6349 ;; Defined at:
  6350 ;;		line 102 in file "UART.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  6353 ;;		 -> output_buffer(206), input_buffer(206), 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  2   26[COMRAM] int 
  6358 ;; Registers used:
  6359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6365 ;;      Params:         2       0       0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0
  6368 ;;      Totals:         2       0       0       0       0       0       0
  6369 ;;Total ram usage:        2 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:    4
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_Receive_available
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text24
  6380  0030E4                     __ptext24:
  6381                           	opt stack 0
  6382  0030E4                     _UART_buff_size:
  6383                           	opt stack 23
  6384                           
  6385                           ;UART.c: 103: return (_this->count);
  6386                           
  6387                           ;incstack = 0
  6388  0030E4  EE20 F0CC          	lfsr	2,204
  6389  0030E8  501B               	movf	UART_buff_size@_this,w,c
  6390  0030EA  26D9               	addwf	fsr2l,f,c
  6391  0030EC  501C               	movf	UART_buff_size@_this+1,w,c
  6392  0030EE  22DA               	addwfc	fsr2h,f,c
  6393  0030F0  CFDE F01B          	movff	postinc2,?_UART_buff_size
  6394  0030F4  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  6395  0030F8  0012               	return	
  6396  0030FA                     __end_of_UART_buff_size:
  6397                           	opt stack 0
  6398                           tosu	equ	0xFFF
  6399                           tosh	equ	0xFFE
  6400                           tosl	equ	0xFFD
  6401                           pclath	equ	0xFFA
  6402                           tblptru	equ	0xFF8
  6403                           tblptrh	equ	0xFF7
  6404                           tblptrl	equ	0xFF6
  6405                           tablat	equ	0xFF5
  6406                           prodh	equ	0xFF4
  6407                           prodl	equ	0xFF3
  6408                           intcon	equ	0xFF2
  6409                           postinc0	equ	0xFEE
  6410                           wreg	equ	0xFE8
  6411                           indf2	equ	0xFDF
  6412                           postinc2	equ	0xFDE
  6413                           postdec2	equ	0xFDD
  6414                           plusw2	equ	0xFDB
  6415                           fsr2h	equ	0xFDA
  6416                           fsr2l	equ	0xFD9
  6417                           status	equ	0xFD8
  6418                           
  6419 ;; *************** function _CRC8 *****************
  6420 ;; Defined at:
  6421 ;;		line 35 in file "FastTransfer.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  data            2   26[COMRAM] PTR const unsigned char 
  6424 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2465(3), receiveData@holder(3), rx_buffer(200), 
  6425 ;;		 -> ring_buffer(206), NULL(0), 
  6426 ;;  len             1   28[COMRAM] unsigned char 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  sum             1   29[COMRAM] unsigned char 
  6429 ;;  tempI           1   31[COMRAM] unsigned char 
  6430 ;;  extract         1   30[COMRAM] unsigned char 
  6431 ;;  crc             1   32[COMRAM] unsigned char 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      unsigned char 
  6434 ;; Registers used:
  6435 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6441 ;;      Params:         3       0       0       0       0       0       0
  6442 ;;      Locals:         4       0       0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0
  6444 ;;      Totals:         7       0       0       0       0       0       0
  6445 ;;Total ram usage:        7 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    4
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_sendData
  6452 ;;		_receiveData
  6453 ;;		_CRCcheck
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text25
  6458  002C6C                     __ptext25:
  6459                           	opt stack 0
  6460  002C6C                     _CRC8:
  6461                           	opt stack 23
  6462                           
  6463                           ;FastTransfer.c: 36: unsigned char crc = 0x00;
  6464                           
  6465                           ;incstack = 0
  6466  002C6C  0E00               	movlw	0
  6467  002C6E  6E21               	movwf	CRC8@crc,c
  6468                           
  6469                           ;FastTransfer.c: 37: while (len--) {
  6470  002C70  D01C               	goto	l6000
  6471  002C72                     l5984:
  6472                           
  6473                           ;FastTransfer.c: 38: unsigned char extract = *data++;
  6474  002C72  C01B  FFD9         	movff	CRC8@data,fsr2l
  6475  002C76  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  6476  002C7A  50DF               	movf	indf2,w,c
  6477  002C7C  6E1F               	movwf	CRC8@extract,c
  6478  002C7E  4A1B               	infsnz	CRC8@data,f,c
  6479  002C80  2A1C               	incf	CRC8@data+1,f,c
  6480                           
  6481                           ;FastTransfer.c: 39: unsigned char tempI;
  6482                           ;FastTransfer.c: 40: for (tempI = 8; tempI; tempI--) {
  6483  002C82  0E08               	movlw	8
  6484  002C84  6E20               	movwf	CRC8@tempI,c
  6485  002C86  D00E               	goto	l5998
  6486  002C88                     l5990:
  6487                           
  6488                           ;FastTransfer.c: 41: unsigned char sum = (crc ^ extract) & 0x01;
  6489  002C88  5021               	movf	CRC8@crc,w,c
  6490  002C8A  181F               	xorwf	CRC8@extract,w,c
  6491  002C8C  0B01               	andlw	1
  6492  002C8E  6E1E               	movwf	CRC8@sum,c
  6493                           
  6494                           ;FastTransfer.c: 42: crc >>= 1;
  6495  002C90  90D8               	bcf	status,0,c
  6496  002C92  3221               	rrcf	CRC8@crc,f,c
  6497                           
  6498                           ;FastTransfer.c: 43: if (sum) {
  6499  002C94  501E               	movf	CRC8@sum,w,c
  6500  002C96  B4D8               	btfsc	status,2,c
  6501  002C98  D002               	goto	l1006
  6502                           
  6503                           ;FastTransfer.c: 44: crc ^= 0x8C;
  6504  002C9A  0E8C               	movlw	140
  6505  002C9C  1A21               	xorwf	CRC8@crc,f,c
  6506  002C9E                     l1006:
  6507                           
  6508                           ;FastTransfer.c: 45: }
  6509                           ;FastTransfer.c: 46: extract >>= 1;
  6510  002C9E  90D8               	bcf	status,0,c
  6511  002CA0  321F               	rrcf	CRC8@extract,f,c
  6512  002CA2  0620               	decf	CRC8@tempI,f,c
  6513  002CA4                     l5998:
  6514  002CA4  5020               	movf	CRC8@tempI,w,c
  6515  002CA6  A4D8               	btfss	status,2,c
  6516  002CA8  D7EF               	goto	l5990
  6517  002CAA                     l6000:
  6518  002CAA  061D               	decf	CRC8@len,f,c
  6519  002CAC  281D               	incf	CRC8@len,w,c
  6520  002CAE  A4D8               	btfss	status,2,c
  6521  002CB0  D7E0               	goto	l5984
  6522                           
  6523                           ;FastTransfer.c: 47: }
  6524                           ;FastTransfer.c: 48: }
  6525                           ;FastTransfer.c: 49: return crc;
  6526  002CB2  5021               	movf	CRC8@crc,w,c
  6527  002CB4  0012               	return	
  6528  002CB6                     __end_of_CRC8:
  6529                           	opt stack 0
  6530                           tosu	equ	0xFFF
  6531                           tosh	equ	0xFFE
  6532                           tosl	equ	0xFFD
  6533                           pclath	equ	0xFFA
  6534                           tblptru	equ	0xFF8
  6535                           tblptrh	equ	0xFF7
  6536                           tblptrl	equ	0xFF6
  6537                           tablat	equ	0xFF5
  6538                           prodh	equ	0xFF4
  6539                           prodl	equ	0xFF3
  6540                           intcon	equ	0xFF2
  6541                           postinc0	equ	0xFEE
  6542                           wreg	equ	0xFE8
  6543                           indf2	equ	0xFDF
  6544                           postinc2	equ	0xFDE
  6545                           postdec2	equ	0xFDD
  6546                           plusw2	equ	0xFDB
  6547                           fsr2h	equ	0xFDA
  6548                           fsr2l	equ	0xFD9
  6549                           status	equ	0xFD8
  6550                           
  6551 ;; *************** function _handleIndicators *****************
  6552 ;; Defined at:
  6553 ;;		line 36 in file "Communications.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;  receivedIndi    2   36[COMRAM] int 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;  i               2    0[BANK0 ] int 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      void 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6567 ;;      Params:         2       0       0       0       0       0       0
  6568 ;;      Locals:         0       2       0       0       0       0       0
  6569 ;;      Temps:          3       0       0       0       0       0       0
  6570 ;;      Totals:         5       2       0       0       0       0       0
  6571 ;;Total ram usage:        7 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    6
  6574 ;; This function calls:
  6575 ;;		_SetLEDOut
  6576 ;; This function is called by:
  6577 ;;		_updateComms
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text26
  6582  002610                     __ptext26:
  6583                           	opt stack 0
  6584  002610                     _handleIndicators:
  6585                           	opt stack 23
  6586                           
  6587                           ;Communications.c: 37: static int oldIndicators = 0;
  6588                           ;Communications.c: 38: if (receivedIndicators != oldIndicators) {
  6589                           
  6590                           ;incstack = 0
  6591  002610  0100               	movlb	0	; () banked
  6592  002612  51DF               	movf	handleIndicators@oldIndicators& (0+255),w,b
  6593  002614  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  6594  002616  E105               	bnz	u7620
  6595  002618  0100               	movlb	0	; () banked
  6596  00261A  51E0               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  6597  00261C  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  6598  00261E  B4D8               	btfsc	status,2,c
  6599  002620  0012               	return	
  6600  002622                     u7620:
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;Communications.c: 39: int i = 0;
  6604  002622  0E00               	movlw	0
  6605  002624  0100               	movlb	0	; () banked
  6606  002626  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  6607  002628  0E00               	movlw	0
  6608  00262A  6FF2               	movwf	handleIndicators@i& (0+255),b
  6609                           
  6610                           ;Communications.c: 40: for (i = 0; i < 6; i++) {
  6611  00262C  0E00               	movlw	0
  6612  00262E  0100               	movlb	0	; () banked
  6613  002630  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  6614  002632  0E00               	movlw	0
  6615  002634  6FF2               	movwf	handleIndicators@i& (0+255),b
  6616                           
  6617                           ; BSR set to: 0
  6618  002636  0100               	movlb	0	; () banked
  6619  002638  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  6620  00263A  D008               	goto	l6742
  6621  00263C  0100               	movlb	0	; () banked
  6622  00263E  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  6623  002640  E126               	bnz	l921
  6624  002642  0E06               	movlw	6
  6625  002644  0100               	movlb	0	; () banked
  6626  002646  5DF2               	subwf	handleIndicators@i& (0+255),w,b
  6627  002648  B0D8               	btfsc	status,0,c
  6628  00264A  D021               	goto	l921
  6629  00264C                     l6742:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;Communications.c: 41: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  6633  00264C  C0F2  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  6634  002650  C0F3  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  6635  002654  C0F2  F027         	movff	handleIndicators@i,??_handleIndicators
  6636  002658  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  6637  00265C  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  6638  002660  2A27               	incf	??_handleIndicators,f,c
  6639  002662  D003               	goto	u7644
  6640  002664                     u7645:
  6641  002664  3429               	rlcf	??_handleIndicators+2,w,c
  6642  002666  3229               	rrcf	??_handleIndicators+2,f,c
  6643  002668  3228               	rrcf	??_handleIndicators+1,f,c
  6644  00266A                     u7644:
  6645  00266A  2E27               	decfsz	??_handleIndicators,f,c
  6646  00266C  D7FB               	goto	u7645
  6647  00266E  0E01               	movlw	1
  6648  002670  1428               	andwf	??_handleIndicators+1,w,c
  6649  002672  6E21               	movwf	SetLEDOut@state,c
  6650  002674  6A22               	clrf	SetLEDOut@state+1,c
  6651  002676  EC37  F007         	call	_SetLEDOut	;wreg free
  6652  00267A  0100               	movlb	0	; () banked
  6653  00267C  4BF2               	infsnz	handleIndicators@i& (0+255),f,b
  6654  00267E  2BF3               	incf	(handleIndicators@i+1)& (0+255),f,b
  6655                           
  6656                           ; BSR set to: 0
  6657  002680  0100               	movlb	0	; () banked
  6658  002682  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  6659  002684  D7E3               	goto	l6742
  6660  002686  0100               	movlb	0	; () banked
  6661  002688  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  6662  00268A  E101               	bnz	u7650
  6663  00268C  D7DA               	goto	L2
  6664  00268E                     u7650:
  6665  00268E                     l921:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;Communications.c: 42: }
  6669                           ;Communications.c: 43: oldIndicators = receivedIndicators;
  6670  00268E  C025  F0DF         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  6671  002692  C026  F0E0         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  6672  002696  0012               	return	
  6673  002698                     __end_of_handleIndicators:
  6674                           	opt stack 0
  6675                           tosu	equ	0xFFF
  6676                           tosh	equ	0xFFE
  6677                           tosl	equ	0xFFD
  6678                           pclath	equ	0xFFA
  6679                           tblptru	equ	0xFF8
  6680                           tblptrh	equ	0xFF7
  6681                           tblptrl	equ	0xFF6
  6682                           tablat	equ	0xFF5
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           intcon	equ	0xFF2
  6686                           postinc0	equ	0xFEE
  6687                           wreg	equ	0xFE8
  6688                           indf2	equ	0xFDF
  6689                           postinc2	equ	0xFDE
  6690                           postdec2	equ	0xFDD
  6691                           plusw2	equ	0xFDB
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _SetLEDOut *****************
  6697 ;; Defined at:
  6698 ;;		line 25 in file "IO.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  lednum          2   30[COMRAM] int 
  6701 ;;  state           2   32[COMRAM] int 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6713 ;;      Params:         4       0       0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0
  6715 ;;      Temps:          2       0       0       0       0       0       0
  6716 ;;      Totals:         6       0       0       0       0       0       0
  6717 ;;Total ram usage:        6 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    5
  6720 ;; This function calls:
  6721 ;;		_Off_Led
  6722 ;;		_setLED
  6723 ;; This function is called by:
  6724 ;;		_handleIndicators
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text27
  6729  000E6E                     __ptext27:
  6730                           	opt stack 0
  6731  000E6E                     _SetLEDOut:
  6732                           	opt stack 23
  6733                           
  6734                           ;IO.c: 26: switch (lednum) {
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;incstack = 0
  6738  000E6E  D138               	goto	l6262
  6739  000E70                     l6128:
  6740                           
  6741                           ;IO.c: 28: if (state == 1) {
  6742  000E70  0421               	decf	SetLEDOut@state,w,c
  6743  000E72  1022               	iorwf	SetLEDOut@state+1,w,c
  6744  000E74  A4D8               	btfss	status,2,c
  6745  000E76  D00D               	goto	l6136
  6746                           
  6747                           ;IO.c: 29: Off_Led(0);
  6748  000E78  0E00               	movlw	0
  6749  000E7A  6E1C               	movwf	Off_Led@led+1,c
  6750  000E7C  0E00               	movlw	0
  6751  000E7E  6E1B               	movwf	Off_Led@led,c
  6752  000E80  EC7F  F00F         	call	_Off_Led	;wreg free
  6753                           
  6754                           ;IO.c: 30: do { LATC1 = 1; } while(0);
  6755  000E84  828B               	bsf	3979,1,c	;volatile
  6756                           
  6757                           ;IO.c: 31: LED_array[0] = 1;
  6758  000E86  0E00               	movlw	0
  6759  000E88  0100               	movlb	0	; () banked
  6760  000E8A  6F89               	movwf	(_LED_array+1)& (0+255),b
  6761  000E8C  0E01               	movlw	1
  6762  000E8E  6F88               	movwf	_LED_array& (0+255),b
  6763                           
  6764                           ;IO.c: 32: } else if (state == 0) {
  6765  000E90  0012               	return	
  6766  000E92                     l6136:
  6767  000E92  5021               	movf	SetLEDOut@state,w,c
  6768  000E94  1022               	iorwf	SetLEDOut@state+1,w,c
  6769  000E96  A4D8               	btfss	status,2,c
  6770  000E98  D00D               	goto	l6144
  6771                           
  6772                           ;IO.c: 33: Off_Led(0);
  6773  000E9A  0E00               	movlw	0
  6774  000E9C  6E1C               	movwf	Off_Led@led+1,c
  6775  000E9E  0E00               	movlw	0
  6776  000EA0  6E1B               	movwf	Off_Led@led,c
  6777  000EA2  EC7F  F00F         	call	_Off_Led	;wreg free
  6778                           
  6779                           ;IO.c: 34: do { LATC1 = 0; } while(0);
  6780  000EA6  928B               	bcf	3979,1,c	;volatile
  6781                           
  6782                           ;IO.c: 35: LED_array[0] = 0;
  6783  000EA8  0E00               	movlw	0
  6784  000EAA  0100               	movlb	0	; () banked
  6785  000EAC  6F89               	movwf	(_LED_array+1)& (0+255),b
  6786  000EAE  0E00               	movlw	0
  6787  000EB0  6F88               	movwf	_LED_array& (0+255),b
  6788                           
  6789                           ;IO.c: 36: }
  6790  000EB2  0012               	return	
  6791  000EB4                     l6144:
  6792                           
  6793                           ;IO.c: 37: else if (state == 2) {
  6794  000EB4  0E02               	movlw	2
  6795  000EB6  1821               	xorwf	SetLEDOut@state,w,c
  6796  000EB8  1022               	iorwf	SetLEDOut@state+1,w,c
  6797  000EBA  A4D8               	btfss	status,2,c
  6798  000EBC  0012               	return	
  6799                           
  6800                           ;IO.c: 39: do { LATC1 = 0; } while(0);
  6801  000EBE  928B               	bcf	3979,1,c	;volatile
  6802                           
  6803                           ;IO.c: 40: setLED(0);
  6804  000EC0  0E00               	movlw	0
  6805  000EC2  6E1C               	movwf	setLED@led+1,c
  6806  000EC4  0E00               	movlw	0
  6807  000EC6  6E1B               	movwf	setLED@led,c
  6808  000EC8  ECE4  F00F         	call	_setLED	;wreg free
  6809                           
  6810                           ;IO.c: 41: LED_array[0] = 2;
  6811  000ECC  0E00               	movlw	0
  6812  000ECE  0100               	movlb	0	; () banked
  6813  000ED0  6F89               	movwf	(_LED_array+1)& (0+255),b
  6814  000ED2  0E02               	movlw	2
  6815  000ED4  6F88               	movwf	_LED_array& (0+255),b
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;IO.c: 43: }
  6819                           ;IO.c: 44: break;
  6820                           
  6821                           ; BSR set to: 0
  6822                           
  6823                           ; BSR set to: 0
  6824  000ED6  0012               	return	
  6825  000ED8                     l6150:
  6826                           
  6827                           ;IO.c: 47: if (state == 1) {
  6828  000ED8  0421               	decf	SetLEDOut@state,w,c
  6829  000EDA  1022               	iorwf	SetLEDOut@state+1,w,c
  6830  000EDC  A4D8               	btfss	status,2,c
  6831  000EDE  D00D               	goto	l6158
  6832                           
  6833                           ;IO.c: 48: Off_Led(1);
  6834  000EE0  0E00               	movlw	0
  6835  000EE2  6E1C               	movwf	Off_Led@led+1,c
  6836  000EE4  0E01               	movlw	1
  6837  000EE6  6E1B               	movwf	Off_Led@led,c
  6838  000EE8  EC7F  F00F         	call	_Off_Led	;wreg free
  6839                           
  6840                           ;IO.c: 49: do { LATA6 = 1; } while(0);
  6841  000EEC  8C89               	bsf	3977,6,c	;volatile
  6842                           
  6843                           ;IO.c: 50: LED_array[1] = 1;
  6844  000EEE  0E00               	movlw	0
  6845  000EF0  0100               	movlb	0	; () banked
  6846  000EF2  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6847  000EF4  0E01               	movlw	1
  6848  000EF6  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6849                           
  6850                           ;IO.c: 51: } else if (state == 0) {
  6851  000EF8  0012               	return	
  6852  000EFA                     l6158:
  6853  000EFA  5021               	movf	SetLEDOut@state,w,c
  6854  000EFC  1022               	iorwf	SetLEDOut@state+1,w,c
  6855  000EFE  A4D8               	btfss	status,2,c
  6856  000F00  D00D               	goto	l6166
  6857                           
  6858                           ;IO.c: 52: Off_Led(1);
  6859  000F02  0E00               	movlw	0
  6860  000F04  6E1C               	movwf	Off_Led@led+1,c
  6861  000F06  0E01               	movlw	1
  6862  000F08  6E1B               	movwf	Off_Led@led,c
  6863  000F0A  EC7F  F00F         	call	_Off_Led	;wreg free
  6864                           
  6865                           ;IO.c: 53: do { LATA6 = 0; } while(0);
  6866  000F0E  9C89               	bcf	3977,6,c	;volatile
  6867                           
  6868                           ;IO.c: 54: LED_array[1] = 0;
  6869  000F10  0E00               	movlw	0
  6870  000F12  0100               	movlb	0	; () banked
  6871  000F14  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6872  000F16  0E00               	movlw	0
  6873  000F18  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6874                           
  6875                           ;IO.c: 55: } else if (state == 2) {
  6876  000F1A  0012               	return	
  6877  000F1C                     l6166:
  6878  000F1C  0E02               	movlw	2
  6879  000F1E  1821               	xorwf	SetLEDOut@state,w,c
  6880  000F20  1022               	iorwf	SetLEDOut@state+1,w,c
  6881  000F22  A4D8               	btfss	status,2,c
  6882  000F24  0012               	return	
  6883                           
  6884                           ;IO.c: 57: do { LATA6 = 0; } while(0);
  6885  000F26  9C89               	bcf	3977,6,c	;volatile
  6886                           
  6887                           ;IO.c: 58: setLED(1);
  6888  000F28  0E00               	movlw	0
  6889  000F2A  6E1C               	movwf	setLED@led+1,c
  6890  000F2C  0E01               	movlw	1
  6891  000F2E  6E1B               	movwf	setLED@led,c
  6892  000F30  ECE4  F00F         	call	_setLED	;wreg free
  6893                           
  6894                           ;IO.c: 59: LED_array[1] = 2;
  6895  000F34  0E00               	movlw	0
  6896  000F36  0100               	movlb	0	; () banked
  6897  000F38  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6898  000F3A  0E02               	movlw	2
  6899  000F3C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;IO.c: 61: }
  6903                           ;IO.c: 62: break;
  6904                           
  6905                           ; BSR set to: 0
  6906                           
  6907                           ; BSR set to: 0
  6908  000F3E  0012               	return	
  6909  000F40                     l6172:
  6910                           
  6911                           ;IO.c: 64: if (state == 1) {
  6912  000F40  0421               	decf	SetLEDOut@state,w,c
  6913  000F42  1022               	iorwf	SetLEDOut@state+1,w,c
  6914  000F44  A4D8               	btfss	status,2,c
  6915  000F46  D00D               	goto	l6180
  6916                           
  6917                           ;IO.c: 65: Off_Led(2);
  6918  000F48  0E00               	movlw	0
  6919  000F4A  6E1C               	movwf	Off_Led@led+1,c
  6920  000F4C  0E02               	movlw	2
  6921  000F4E  6E1B               	movwf	Off_Led@led,c
  6922  000F50  EC7F  F00F         	call	_Off_Led	;wreg free
  6923                           
  6924                           ;IO.c: 66: do { LATA7 = 1; } while(0);
  6925  000F54  8E89               	bsf	3977,7,c	;volatile
  6926                           
  6927                           ;IO.c: 67: LED_array[2] = 1;
  6928  000F56  0E00               	movlw	0
  6929  000F58  0100               	movlb	0	; () banked
  6930  000F5A  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6931  000F5C  0E01               	movlw	1
  6932  000F5E  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6933                           
  6934                           ;IO.c: 68: } else if (state == 0) {
  6935  000F60  0012               	return	
  6936  000F62                     l6180:
  6937  000F62  5021               	movf	SetLEDOut@state,w,c
  6938  000F64  1022               	iorwf	SetLEDOut@state+1,w,c
  6939  000F66  A4D8               	btfss	status,2,c
  6940  000F68  D00D               	goto	l6188
  6941                           
  6942                           ;IO.c: 69: Off_Led(2);
  6943  000F6A  0E00               	movlw	0
  6944  000F6C  6E1C               	movwf	Off_Led@led+1,c
  6945  000F6E  0E02               	movlw	2
  6946  000F70  6E1B               	movwf	Off_Led@led,c
  6947  000F72  EC7F  F00F         	call	_Off_Led	;wreg free
  6948                           
  6949                           ;IO.c: 70: do { LATA7 = 0; } while(0);
  6950  000F76  9E89               	bcf	3977,7,c	;volatile
  6951                           
  6952                           ;IO.c: 71: LED_array[2] = 0;
  6953  000F78  0E00               	movlw	0
  6954  000F7A  0100               	movlb	0	; () banked
  6955  000F7C  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6956  000F7E  0E00               	movlw	0
  6957  000F80  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6958                           
  6959                           ;IO.c: 72: } else if (state == 2) {
  6960  000F82  0012               	return	
  6961  000F84                     l6188:
  6962  000F84  0E02               	movlw	2
  6963  000F86  1821               	xorwf	SetLEDOut@state,w,c
  6964  000F88  1022               	iorwf	SetLEDOut@state+1,w,c
  6965  000F8A  A4D8               	btfss	status,2,c
  6966  000F8C  0012               	return	
  6967                           
  6968                           ;IO.c: 74: do { LATA7 = 0; } while(0);
  6969  000F8E  9E89               	bcf	3977,7,c	;volatile
  6970                           
  6971                           ;IO.c: 75: setLED(2);
  6972  000F90  0E00               	movlw	0
  6973  000F92  6E1C               	movwf	setLED@led+1,c
  6974  000F94  0E02               	movlw	2
  6975  000F96  6E1B               	movwf	setLED@led,c
  6976  000F98  ECE4  F00F         	call	_setLED	;wreg free
  6977                           
  6978                           ;IO.c: 77: LED_array[2] = 2;
  6979  000F9C  0E00               	movlw	0
  6980  000F9E  0100               	movlb	0	; () banked
  6981  000FA0  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6982  000FA2  0E02               	movlw	2
  6983  000FA4  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;IO.c: 79: }
  6987                           ;IO.c: 82: break;
  6988                           
  6989                           ; BSR set to: 0
  6990                           
  6991                           ; BSR set to: 0
  6992  000FA6  0012               	return	
  6993  000FA8                     l6194:
  6994                           
  6995                           ;IO.c: 85: if (state == 1) {
  6996  000FA8  0421               	decf	SetLEDOut@state,w,c
  6997  000FAA  1022               	iorwf	SetLEDOut@state+1,w,c
  6998  000FAC  A4D8               	btfss	status,2,c
  6999  000FAE  D00D               	goto	l6202
  7000                           
  7001                           ;IO.c: 86: Off_Led(3);
  7002  000FB0  0E00               	movlw	0
  7003  000FB2  6E1C               	movwf	Off_Led@led+1,c
  7004  000FB4  0E03               	movlw	3
  7005  000FB6  6E1B               	movwf	Off_Led@led,c
  7006  000FB8  EC7F  F00F         	call	_Off_Led	;wreg free
  7007                           
  7008                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  7009  000FBC  848D               	bsf	3981,2,c	;volatile
  7010                           
  7011                           ;IO.c: 88: LED_array[3] = 1;
  7012  000FBE  0E00               	movlw	0
  7013  000FC0  0100               	movlb	0	; () banked
  7014  000FC2  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7015  000FC4  0E01               	movlw	1
  7016  000FC6  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7017                           
  7018                           ;IO.c: 89: } else if (state == 0) {
  7019  000FC8  0012               	return	
  7020  000FCA                     l6202:
  7021  000FCA  5021               	movf	SetLEDOut@state,w,c
  7022  000FCC  1022               	iorwf	SetLEDOut@state+1,w,c
  7023  000FCE  A4D8               	btfss	status,2,c
  7024  000FD0  D00D               	goto	l6210
  7025                           
  7026                           ;IO.c: 90: Off_Led(3);
  7027  000FD2  0E00               	movlw	0
  7028  000FD4  6E1C               	movwf	Off_Led@led+1,c
  7029  000FD6  0E03               	movlw	3
  7030  000FD8  6E1B               	movwf	Off_Led@led,c
  7031  000FDA  EC7F  F00F         	call	_Off_Led	;wreg free
  7032                           
  7033                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  7034  000FDE  948D               	bcf	3981,2,c	;volatile
  7035                           
  7036                           ;IO.c: 92: LED_array[3] = 0;
  7037  000FE0  0E00               	movlw	0
  7038  000FE2  0100               	movlb	0	; () banked
  7039  000FE4  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7040  000FE6  0E00               	movlw	0
  7041  000FE8  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7042                           
  7043                           ;IO.c: 93: }
  7044  000FEA  0012               	return	
  7045  000FEC                     l6210:
  7046                           
  7047                           ;IO.c: 94: else if (state == 2) {
  7048  000FEC  0E02               	movlw	2
  7049  000FEE  1821               	xorwf	SetLEDOut@state,w,c
  7050  000FF0  1022               	iorwf	SetLEDOut@state+1,w,c
  7051  000FF2  A4D8               	btfss	status,2,c
  7052  000FF4  0012               	return	
  7053                           
  7054                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  7055  000FF6  948D               	bcf	3981,2,c	;volatile
  7056                           
  7057                           ;IO.c: 96: setLED(3);
  7058  000FF8  0E00               	movlw	0
  7059  000FFA  6E1C               	movwf	setLED@led+1,c
  7060  000FFC  0E03               	movlw	3
  7061  000FFE  6E1B               	movwf	setLED@led,c
  7062  001000  ECE4  F00F         	call	_setLED	;wreg free
  7063                           
  7064                           ;IO.c: 97: LED_array[3] = 2;
  7065  001004  0E00               	movlw	0
  7066  001006  0100               	movlb	0	; () banked
  7067  001008  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7068  00100A  0E02               	movlw	2
  7069  00100C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;IO.c: 99: }
  7073                           ;IO.c: 101: break;
  7074                           
  7075                           ; BSR set to: 0
  7076                           
  7077                           ; BSR set to: 0
  7078  00100E  0012               	return	
  7079  001010                     l6216:
  7080                           
  7081                           ;IO.c: 103: if (state == 1) {
  7082  001010  0421               	decf	SetLEDOut@state,w,c
  7083  001012  1022               	iorwf	SetLEDOut@state+1,w,c
  7084  001014  A4D8               	btfss	status,2,c
  7085  001016  D00D               	goto	l6224
  7086                           
  7087                           ;IO.c: 104: Off_Led(4);
  7088  001018  0E00               	movlw	0
  7089  00101A  6E1C               	movwf	Off_Led@led+1,c
  7090  00101C  0E04               	movlw	4
  7091  00101E  6E1B               	movwf	Off_Led@led,c
  7092  001020  EC7F  F00F         	call	_Off_Led	;wreg free
  7093                           
  7094                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  7095  001024  828D               	bsf	3981,1,c	;volatile
  7096                           
  7097                           ;IO.c: 106: LED_array[4] = 1;
  7098  001026  0E00               	movlw	0
  7099  001028  0100               	movlb	0	; () banked
  7100  00102A  6F91               	movwf	(_LED_array+9)& (0+255),b
  7101  00102C  0E01               	movlw	1
  7102  00102E  6F90               	movwf	(_LED_array+8)& (0+255),b
  7103                           
  7104                           ;IO.c: 107: } else if (state == 0) {
  7105  001030  0012               	return	
  7106  001032                     l6224:
  7107  001032  5021               	movf	SetLEDOut@state,w,c
  7108  001034  1022               	iorwf	SetLEDOut@state+1,w,c
  7109  001036  A4D8               	btfss	status,2,c
  7110  001038  D00D               	goto	l6232
  7111                           
  7112                           ;IO.c: 108: Off_Led(4);
  7113  00103A  0E00               	movlw	0
  7114  00103C  6E1C               	movwf	Off_Led@led+1,c
  7115  00103E  0E04               	movlw	4
  7116  001040  6E1B               	movwf	Off_Led@led,c
  7117  001042  EC7F  F00F         	call	_Off_Led	;wreg free
  7118                           
  7119                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  7120  001046  928D               	bcf	3981,1,c	;volatile
  7121                           
  7122                           ;IO.c: 110: LED_array[4] = 0;
  7123  001048  0E00               	movlw	0
  7124  00104A  0100               	movlb	0	; () banked
  7125  00104C  6F91               	movwf	(_LED_array+9)& (0+255),b
  7126  00104E  0E00               	movlw	0
  7127  001050  6F90               	movwf	(_LED_array+8)& (0+255),b
  7128                           
  7129                           ;IO.c: 111: }
  7130  001052  0012               	return	
  7131  001054                     l6232:
  7132                           
  7133                           ;IO.c: 112: else if (state == 2) {
  7134  001054  0E02               	movlw	2
  7135  001056  1821               	xorwf	SetLEDOut@state,w,c
  7136  001058  1022               	iorwf	SetLEDOut@state+1,w,c
  7137  00105A  A4D8               	btfss	status,2,c
  7138  00105C  0012               	return	
  7139                           
  7140                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  7141  00105E  928D               	bcf	3981,1,c	;volatile
  7142                           
  7143                           ;IO.c: 114: setLED(4);
  7144  001060  0E00               	movlw	0
  7145  001062  6E1C               	movwf	setLED@led+1,c
  7146  001064  0E04               	movlw	4
  7147  001066  6E1B               	movwf	setLED@led,c
  7148  001068  ECE4  F00F         	call	_setLED	;wreg free
  7149                           
  7150                           ;IO.c: 115: LED_array[4] = 2;
  7151  00106C  0E00               	movlw	0
  7152  00106E  0100               	movlb	0	; () banked
  7153  001070  6F91               	movwf	(_LED_array+9)& (0+255),b
  7154  001072  0E02               	movlw	2
  7155  001074  6F90               	movwf	(_LED_array+8)& (0+255),b
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;IO.c: 116: }
  7159                           ;IO.c: 118: break;
  7160                           
  7161                           ; BSR set to: 0
  7162                           
  7163                           ; BSR set to: 0
  7164  001076  0012               	return	
  7165  001078                     l6238:
  7166                           
  7167                           ;IO.c: 120: if (state == 1) {
  7168  001078  0421               	decf	SetLEDOut@state,w,c
  7169  00107A  1022               	iorwf	SetLEDOut@state+1,w,c
  7170  00107C  A4D8               	btfss	status,2,c
  7171  00107E  D00D               	goto	l6246
  7172                           
  7173                           ;IO.c: 121: Off_Led(5);
  7174  001080  0E00               	movlw	0
  7175  001082  6E1C               	movwf	Off_Led@led+1,c
  7176  001084  0E05               	movlw	5
  7177  001086  6E1B               	movwf	Off_Led@led,c
  7178  001088  EC7F  F00F         	call	_Off_Led	;wreg free
  7179                           
  7180                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  7181  00108C  808D               	bsf	3981,0,c	;volatile
  7182                           
  7183                           ;IO.c: 123: LED_array[5] = 1;
  7184  00108E  0E00               	movlw	0
  7185  001090  0100               	movlb	0	; () banked
  7186  001092  6F93               	movwf	(_LED_array+11)& (0+255),b
  7187  001094  0E01               	movlw	1
  7188  001096  6F92               	movwf	(_LED_array+10)& (0+255),b
  7189                           
  7190                           ;IO.c: 124: } else if (state == 0) {
  7191  001098  0012               	return	
  7192  00109A                     l6246:
  7193  00109A  5021               	movf	SetLEDOut@state,w,c
  7194  00109C  1022               	iorwf	SetLEDOut@state+1,w,c
  7195  00109E  A4D8               	btfss	status,2,c
  7196  0010A0  D00D               	goto	l6254
  7197                           
  7198                           ;IO.c: 125: Off_Led(5);
  7199  0010A2  0E00               	movlw	0
  7200  0010A4  6E1C               	movwf	Off_Led@led+1,c
  7201  0010A6  0E05               	movlw	5
  7202  0010A8  6E1B               	movwf	Off_Led@led,c
  7203  0010AA  EC7F  F00F         	call	_Off_Led	;wreg free
  7204                           
  7205                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  7206  0010AE  908D               	bcf	3981,0,c	;volatile
  7207                           
  7208                           ;IO.c: 127: LED_array[5] = 0;
  7209  0010B0  0E00               	movlw	0
  7210  0010B2  0100               	movlb	0	; () banked
  7211  0010B4  6F93               	movwf	(_LED_array+11)& (0+255),b
  7212  0010B6  0E00               	movlw	0
  7213  0010B8  6F92               	movwf	(_LED_array+10)& (0+255),b
  7214                           
  7215                           ;IO.c: 128: }
  7216  0010BA  0012               	return	
  7217  0010BC                     l6254:
  7218                           
  7219                           ;IO.c: 129: else if (state == 2) {
  7220  0010BC  0E02               	movlw	2
  7221  0010BE  1821               	xorwf	SetLEDOut@state,w,c
  7222  0010C0  1022               	iorwf	SetLEDOut@state+1,w,c
  7223  0010C2  A4D8               	btfss	status,2,c
  7224  0010C4  0012               	return	
  7225                           
  7226                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  7227  0010C6  908D               	bcf	3981,0,c	;volatile
  7228                           
  7229                           ;IO.c: 131: setLED(5);
  7230  0010C8  0E00               	movlw	0
  7231  0010CA  6E1C               	movwf	setLED@led+1,c
  7232  0010CC  0E05               	movlw	5
  7233  0010CE  6E1B               	movwf	setLED@led,c
  7234  0010D0  ECE4  F00F         	call	_setLED	;wreg free
  7235                           
  7236                           ;IO.c: 132: LED_array[5] = 2;
  7237  0010D4  0E00               	movlw	0
  7238  0010D6  0100               	movlb	0	; () banked
  7239  0010D8  6F93               	movwf	(_LED_array+11)& (0+255),b
  7240  0010DA  0E02               	movlw	2
  7241  0010DC  6F92               	movwf	(_LED_array+10)& (0+255),b
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;IO.c: 138: }
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;IO.c: 134: }
  7248                           ;IO.c: 137: break;
  7249                           
  7250                           ; BSR set to: 0
  7251                           
  7252                           ; BSR set to: 0
  7253  0010DE  0012               	return	
  7254  0010E0                     l6262:
  7255  0010E0  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  7256  0010E4  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  7257                           
  7258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7259                           ; Switch size 1, requested type "space"
  7260                           ; Number of cases is 1, Range of values is 0 to 0
  7261                           ; switch strategies available:
  7262                           ; Name         Instructions Cycles
  7263                           ; simple_byte            4     3 (average)
  7264                           ;	Chosen strategy is simple_byte
  7265  0010E8  5024               	movf	??_SetLEDOut+1,w,c
  7266  0010EA  0A00               	xorlw	0	; case 0
  7267  0010EC  A4D8               	btfss	status,2,c
  7268  0010EE  0012               	return	
  7269                           
  7270                           ; Switch size 1, requested type "space"
  7271                           ; Number of cases is 6, Range of values is 0 to 5
  7272                           ; switch strategies available:
  7273                           ; Name         Instructions Cycles
  7274                           ; simple_byte           19    10 (average)
  7275                           ;	Chosen strategy is simple_byte
  7276  0010F0  5023               	movf	??_SetLEDOut,w,c
  7277  0010F2  0A00               	xorlw	0	; case 0
  7278  0010F4  B4D8               	btfsc	status,2,c
  7279  0010F6  D6BC               	goto	l6128
  7280  0010F8  0A01               	xorlw	1	; case 1
  7281  0010FA  B4D8               	btfsc	status,2,c
  7282  0010FC  D6ED               	goto	l6150
  7283  0010FE  0A03               	xorlw	3	; case 2
  7284  001100  B4D8               	btfsc	status,2,c
  7285  001102  D71E               	goto	l6172
  7286  001104  0A01               	xorlw	1	; case 3
  7287  001106  B4D8               	btfsc	status,2,c
  7288  001108  D74F               	goto	l6194
  7289  00110A  0A07               	xorlw	7	; case 4
  7290  00110C  B4D8               	btfsc	status,2,c
  7291  00110E  D780               	goto	l6216
  7292  001110  0A01               	xorlw	1	; case 5
  7293  001112  A4D8               	btfss	status,2,c
  7294  001114  0012               	return	
  7295  001116  D7B0               	goto	l6238
  7296  001118                     __end_of_SetLEDOut:
  7297                           	opt stack 0
  7298                           tosu	equ	0xFFF
  7299                           tosh	equ	0xFFE
  7300                           tosl	equ	0xFFD
  7301                           pclath	equ	0xFFA
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           prodh	equ	0xFF4
  7307                           prodl	equ	0xFF3
  7308                           intcon	equ	0xFF2
  7309                           postinc0	equ	0xFEE
  7310                           wreg	equ	0xFE8
  7311                           indf2	equ	0xFDF
  7312                           postinc2	equ	0xFDE
  7313                           postdec2	equ	0xFDD
  7314                           plusw2	equ	0xFDB
  7315                           fsr2h	equ	0xFDA
  7316                           fsr2l	equ	0xFD9
  7317                           status	equ	0xFD8
  7318                           
  7319 ;; *************** function _setLED *****************
  7320 ;; Defined at:
  7321 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  led             2   26[COMRAM] int 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;		None
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7335 ;;      Params:         2       0       0       0       0       0       0
  7336 ;;      Locals:         0       0       0       0       0       0       0
  7337 ;;      Temps:          2       0       0       0       0       0       0
  7338 ;;      Totals:         4       0       0       0       0       0       0
  7339 ;;Total ram usage:        4 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    4
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_SetLEDOut
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text28
  7350  001FC8                     __ptext28:
  7351                           	opt stack 0
  7352  001FC8                     _setLED:
  7353                           	opt stack 23
  7354                           
  7355                           ;tmr2.c: 203: switch (led){
  7356                           
  7357                           ;incstack = 0
  7358  001FC8  D042               	goto	l5942
  7359  001FCA                     l5928:
  7360                           
  7361                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  7362  001FCA  0E00               	movlw	0
  7363  001FCC  0100               	movlb	0	; () banked
  7364  001FCE  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7365  001FD0  0E01               	movlw	1
  7366  001FD2  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7367                           
  7368                           ;tmr2.c: 206: LEDState[0]=0;
  7369  001FD4  0E00               	movlw	0
  7370  001FD6  0100               	movlb	0	; () banked
  7371  001FD8  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7372  001FDA  0E00               	movlw	0
  7373  001FDC  6FA4               	movwf	_LEDState& (0+255),b
  7374                           
  7375                           ;tmr2.c: 207: break;
  7376  001FDE  0012               	return	
  7377  001FE0                     l5930:
  7378                           
  7379                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  7380  001FE0  0E00               	movlw	0
  7381  001FE2  0100               	movlb	0	; () banked
  7382  001FE4  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7383  001FE6  0E01               	movlw	1
  7384  001FE8  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7385                           
  7386                           ;tmr2.c: 210: LEDState[1]=0;
  7387  001FEA  0E00               	movlw	0
  7388  001FEC  0100               	movlb	0	; () banked
  7389  001FEE  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7390  001FF0  0E00               	movlw	0
  7391  001FF2  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7392                           
  7393                           ;tmr2.c: 211: break;
  7394  001FF4  0012               	return	
  7395  001FF6                     l5932:
  7396                           
  7397                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  7398  001FF6  0E00               	movlw	0
  7399  001FF8  0100               	movlb	0	; () banked
  7400  001FFA  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7401  001FFC  0E01               	movlw	1
  7402  001FFE  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7403                           
  7404                           ;tmr2.c: 214: LEDState[2]=0;
  7405  002000  0E00               	movlw	0
  7406  002002  0100               	movlb	0	; () banked
  7407  002004  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7408  002006  0E00               	movlw	0
  7409  002008  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7410                           
  7411                           ;tmr2.c: 215: break;
  7412  00200A  0012               	return	
  7413  00200C                     l5934:
  7414                           
  7415                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  7416  00200C  0E00               	movlw	0
  7417  00200E  0100               	movlb	0	; () banked
  7418  002010  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7419  002012  0E01               	movlw	1
  7420  002014  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7421                           
  7422                           ;tmr2.c: 218: LEDState[3]=0;
  7423  002016  0E00               	movlw	0
  7424  002018  0100               	movlb	0	; () banked
  7425  00201A  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7426  00201C  0E00               	movlw	0
  7427  00201E  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7428                           
  7429                           ;tmr2.c: 219: break;
  7430  002020  0012               	return	
  7431  002022                     l5936:
  7432                           
  7433                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  7434  002022  0E00               	movlw	0
  7435  002024  0100               	movlb	0	; () banked
  7436  002026  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7437  002028  0E01               	movlw	1
  7438  00202A  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7439                           
  7440                           ;tmr2.c: 222: LEDState[4]=0;
  7441  00202C  0E00               	movlw	0
  7442  00202E  0100               	movlb	0	; () banked
  7443  002030  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7444  002032  0E00               	movlw	0
  7445  002034  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7446                           
  7447                           ;tmr2.c: 223: break;
  7448  002036  0012               	return	
  7449  002038                     l5938:
  7450                           
  7451                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  7452  002038  0E00               	movlw	0
  7453  00203A  0100               	movlb	0	; () banked
  7454  00203C  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7455  00203E  0E01               	movlw	1
  7456  002040  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7457                           
  7458                           ;tmr2.c: 226: LEDState[5]=0;
  7459  002042  0E00               	movlw	0
  7460  002044  0100               	movlb	0	; () banked
  7461  002046  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7462  002048  0E00               	movlw	0
  7463  00204A  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;tmr2.c: 228: }
  7467                           
  7468                           ;tmr2.c: 227: break;
  7469  00204C  0012               	return	
  7470  00204E                     l5942:
  7471  00204E  C01B  F01D         	movff	setLED@led,??_setLED
  7472  002052  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  7473                           
  7474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7475                           ; Switch size 1, requested type "space"
  7476                           ; Number of cases is 1, Range of values is 0 to 0
  7477                           ; switch strategies available:
  7478                           ; Name         Instructions Cycles
  7479                           ; simple_byte            4     3 (average)
  7480                           ;	Chosen strategy is simple_byte
  7481  002056  501E               	movf	??_setLED+1,w,c
  7482  002058  0A00               	xorlw	0	; case 0
  7483  00205A  A4D8               	btfss	status,2,c
  7484  00205C  0012               	return	
  7485                           
  7486                           ; Switch size 1, requested type "space"
  7487                           ; Number of cases is 6, Range of values is 0 to 5
  7488                           ; switch strategies available:
  7489                           ; Name         Instructions Cycles
  7490                           ; simple_byte           19    10 (average)
  7491                           ;	Chosen strategy is simple_byte
  7492  00205E  501D               	movf	??_setLED,w,c
  7493  002060  0A00               	xorlw	0	; case 0
  7494  002062  B4D8               	btfsc	status,2,c
  7495  002064  D7B2               	goto	l5928
  7496  002066  0A01               	xorlw	1	; case 1
  7497  002068  B4D8               	btfsc	status,2,c
  7498  00206A  D7BA               	goto	l5930
  7499  00206C  0A03               	xorlw	3	; case 2
  7500  00206E  B4D8               	btfsc	status,2,c
  7501  002070  D7C2               	goto	l5932
  7502  002072  0A01               	xorlw	1	; case 3
  7503  002074  B4D8               	btfsc	status,2,c
  7504  002076  D7CA               	goto	l5934
  7505  002078  0A07               	xorlw	7	; case 4
  7506  00207A  B4D8               	btfsc	status,2,c
  7507  00207C  D7D2               	goto	l5936
  7508  00207E  0A01               	xorlw	1	; case 5
  7509  002080  A4D8               	btfss	status,2,c
  7510  002082  0012               	return	
  7511  002084  D7D9               	goto	l5938
  7512  002086                     __end_of_setLED:
  7513                           	opt stack 0
  7514                           tosu	equ	0xFFF
  7515                           tosh	equ	0xFFE
  7516                           tosl	equ	0xFFD
  7517                           pclath	equ	0xFFA
  7518                           tblptru	equ	0xFF8
  7519                           tblptrh	equ	0xFF7
  7520                           tblptrl	equ	0xFF6
  7521                           tablat	equ	0xFF5
  7522                           prodh	equ	0xFF4
  7523                           prodl	equ	0xFF3
  7524                           intcon	equ	0xFF2
  7525                           postinc0	equ	0xFEE
  7526                           wreg	equ	0xFE8
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           plusw2	equ	0xFDB
  7531                           fsr2h	equ	0xFDA
  7532                           fsr2l	equ	0xFD9
  7533                           status	equ	0xFD8
  7534                           
  7535 ;; *************** function _Off_Led *****************
  7536 ;; Defined at:
  7537 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  led             2   26[COMRAM] int 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;		None
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, status,2, status,0
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7551 ;;      Params:         2       0       0       0       0       0       0
  7552 ;;      Locals:         0       0       0       0       0       0       0
  7553 ;;      Temps:          2       0       0       0       0       0       0
  7554 ;;      Totals:         4       0       0       0       0       0       0
  7555 ;;Total ram usage:        4 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:    4
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_SetLEDOut
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text29
  7566  001EFE                     __ptext29:
  7567                           	opt stack 0
  7568  001EFE                     _Off_Led:
  7569                           	opt stack 23
  7570                           
  7571                           ;tmr2.c: 231: switch (led){
  7572                           
  7573                           ;incstack = 0
  7574  001EFE  D048               	goto	l5976
  7575  001F00                     l5950:
  7576                           
  7577                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  7578  001F00  0E00               	movlw	0
  7579  001F02  0100               	movlb	0	; () banked
  7580  001F04  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7581  001F06  0E00               	movlw	0
  7582  001F08  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7583                           
  7584                           ;tmr2.c: 234: LEDState[0]=0;
  7585  001F0A  0E00               	movlw	0
  7586  001F0C  0100               	movlb	0	; () banked
  7587  001F0E  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7588  001F10  0E00               	movlw	0
  7589  001F12  6FA4               	movwf	_LEDState& (0+255),b
  7590                           
  7591                           ; BSR set to: 0
  7592                           
  7593                           ; BSR set to: 0
  7594                           
  7595                           ;tmr2.c: 235: do { LATC1 = 0; } while(0);
  7596  001F14  928B               	bcf	3979,1,c	;volatile
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;tmr2.c: 236: break;
  7600  001F16  0012               	return	
  7601  001F18                     l5954:
  7602                           
  7603                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  7604  001F18  0E00               	movlw	0
  7605  001F1A  0100               	movlb	0	; () banked
  7606  001F1C  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7607  001F1E  0E00               	movlw	0
  7608  001F20  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7609                           
  7610                           ;tmr2.c: 239: LEDState[1]=0;
  7611  001F22  0E00               	movlw	0
  7612  001F24  0100               	movlb	0	; () banked
  7613  001F26  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7614  001F28  0E00               	movlw	0
  7615  001F2A  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7616                           
  7617                           ; BSR set to: 0
  7618                           
  7619                           ; BSR set to: 0
  7620                           
  7621                           ;tmr2.c: 240: do { LATA6 = 0; } while(0);
  7622  001F2C  9C89               	bcf	3977,6,c	;volatile
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;tmr2.c: 241: break;
  7626  001F2E  0012               	return	
  7627  001F30                     l5958:
  7628                           
  7629                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  7630  001F30  0E00               	movlw	0
  7631  001F32  0100               	movlb	0	; () banked
  7632  001F34  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7633  001F36  0E00               	movlw	0
  7634  001F38  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7635                           
  7636                           ;tmr2.c: 244: LEDState[2]=0;
  7637  001F3A  0E00               	movlw	0
  7638  001F3C  0100               	movlb	0	; () banked
  7639  001F3E  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7640  001F40  0E00               	movlw	0
  7641  001F42  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7642                           
  7643                           ; BSR set to: 0
  7644                           
  7645                           ; BSR set to: 0
  7646                           
  7647                           ;tmr2.c: 245: do { LATA7 = 0; } while(0);
  7648  001F44  9E89               	bcf	3977,7,c	;volatile
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;tmr2.c: 246: break;
  7652  001F46  0012               	return	
  7653  001F48                     l5962:
  7654                           
  7655                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  7656  001F48  0E00               	movlw	0
  7657  001F4A  0100               	movlb	0	; () banked
  7658  001F4C  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7659  001F4E  0E00               	movlw	0
  7660  001F50  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7661                           
  7662                           ;tmr2.c: 249: LEDState[3]=0;
  7663  001F52  0E00               	movlw	0
  7664  001F54  0100               	movlb	0	; () banked
  7665  001F56  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7666  001F58  0E00               	movlw	0
  7667  001F5A  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7668                           
  7669                           ; BSR set to: 0
  7670                           
  7671                           ; BSR set to: 0
  7672                           
  7673                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  7674  001F5C  948D               	bcf	3981,2,c	;volatile
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;tmr2.c: 251: break;
  7678  001F5E  0012               	return	
  7679  001F60                     l5966:
  7680                           
  7681                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  7682  001F60  0E00               	movlw	0
  7683  001F62  0100               	movlb	0	; () banked
  7684  001F64  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7685  001F66  0E00               	movlw	0
  7686  001F68  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7687                           
  7688                           ;tmr2.c: 254: LEDState[4]=0;
  7689  001F6A  0E00               	movlw	0
  7690  001F6C  0100               	movlb	0	; () banked
  7691  001F6E  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7692  001F70  0E00               	movlw	0
  7693  001F72  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7694                           
  7695                           ; BSR set to: 0
  7696                           
  7697                           ; BSR set to: 0
  7698                           
  7699                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  7700  001F74  928D               	bcf	3981,1,c	;volatile
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;tmr2.c: 256: break;
  7704  001F76  0012               	return	
  7705  001F78                     l5970:
  7706                           
  7707                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  7708  001F78  0E00               	movlw	0
  7709  001F7A  0100               	movlb	0	; () banked
  7710  001F7C  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7711  001F7E  0E00               	movlw	0
  7712  001F80  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7713                           
  7714                           ;tmr2.c: 259: LEDState[5]=0;
  7715  001F82  0E00               	movlw	0
  7716  001F84  0100               	movlb	0	; () banked
  7717  001F86  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7718  001F88  0E00               	movlw	0
  7719  001F8A  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7720                           
  7721                           ; BSR set to: 0
  7722                           
  7723                           ; BSR set to: 0
  7724                           
  7725                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  7726  001F8C  908D               	bcf	3981,0,c	;volatile
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;tmr2.c: 262: }
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;tmr2.c: 261: break;
  7733  001F8E  0012               	return	
  7734  001F90                     l5976:
  7735  001F90  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  7736  001F94  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  7737                           
  7738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7739                           ; Switch size 1, requested type "space"
  7740                           ; Number of cases is 1, Range of values is 0 to 0
  7741                           ; switch strategies available:
  7742                           ; Name         Instructions Cycles
  7743                           ; simple_byte            4     3 (average)
  7744                           ;	Chosen strategy is simple_byte
  7745  001F98  501E               	movf	??_Off_Led+1,w,c
  7746  001F9A  0A00               	xorlw	0	; case 0
  7747  001F9C  A4D8               	btfss	status,2,c
  7748  001F9E  0012               	return	
  7749                           
  7750                           ; Switch size 1, requested type "space"
  7751                           ; Number of cases is 6, Range of values is 0 to 5
  7752                           ; switch strategies available:
  7753                           ; Name         Instructions Cycles
  7754                           ; simple_byte           19    10 (average)
  7755                           ;	Chosen strategy is simple_byte
  7756  001FA0  501D               	movf	??_Off_Led,w,c
  7757  001FA2  0A00               	xorlw	0	; case 0
  7758  001FA4  B4D8               	btfsc	status,2,c
  7759  001FA6  D7AC               	goto	l5950
  7760  001FA8  0A01               	xorlw	1	; case 1
  7761  001FAA  B4D8               	btfsc	status,2,c
  7762  001FAC  D7B5               	goto	l5954
  7763  001FAE  0A03               	xorlw	3	; case 2
  7764  001FB0  B4D8               	btfsc	status,2,c
  7765  001FB2  D7BE               	goto	l5958
  7766  001FB4  0A01               	xorlw	1	; case 3
  7767  001FB6  B4D8               	btfsc	status,2,c
  7768  001FB8  D7C7               	goto	l5962
  7769  001FBA  0A07               	xorlw	7	; case 4
  7770  001FBC  B4D8               	btfsc	status,2,c
  7771  001FBE  D7D0               	goto	l5966
  7772  001FC0  0A01               	xorlw	1	; case 5
  7773  001FC2  A4D8               	btfss	status,2,c
  7774  001FC4  0012               	return	
  7775  001FC6  D7D8               	goto	l5970
  7776  001FC8                     __end_of_Off_Led:
  7777                           	opt stack 0
  7778                           tosu	equ	0xFFF
  7779                           tosh	equ	0xFFE
  7780                           tosl	equ	0xFFD
  7781                           pclath	equ	0xFFA
  7782                           tblptru	equ	0xFF8
  7783                           tblptrh	equ	0xFF7
  7784                           tblptrl	equ	0xFF6
  7785                           tablat	equ	0xFF5
  7786                           prodh	equ	0xFF4
  7787                           prodl	equ	0xFF3
  7788                           intcon	equ	0xFF2
  7789                           postinc0	equ	0xFEE
  7790                           wreg	equ	0xFE8
  7791                           indf2	equ	0xFDF
  7792                           postinc2	equ	0xFDE
  7793                           postdec2	equ	0xFDD
  7794                           plusw2	equ	0xFDB
  7795                           fsr2h	equ	0xFDA
  7796                           fsr2l	equ	0xFD9
  7797                           status	equ	0xFD8
  7798                           
  7799 ;; *************** function _DataBarGraphs *****************
  7800 ;; Defined at:
  7801 ;;		line 48 in file "Communications.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  BGA             2   26[COMRAM] unsigned int 
  7804 ;;  BGB             2   28[COMRAM] unsigned int 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		None
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7816 ;;      Params:         4       0       0       0       0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0
  7818 ;;      Temps:          0       0       0       0       0       0       0
  7819 ;;      Totals:         4       0       0       0       0       0       0
  7820 ;;Total ram usage:        4 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    4
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		_updateComms
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           	psect	text30
  7831  003110                     __ptext30:
  7832                           	opt stack 0
  7833  003110                     _DataBarGraphs:
  7834                           	opt stack 25
  7835                           
  7836                           ;Communications.c: 49: DataBarGraphA = BGA;
  7837                           
  7838                           ;incstack = 0
  7839  003110  C01B  F0C3         	movff	DataBarGraphs@BGA,_DataBarGraphA
  7840  003114  C01C  F0C4         	movff	DataBarGraphs@BGA+1,_DataBarGraphA+1
  7841                           
  7842                           ;Communications.c: 50: DataBarGraphB = BGB;
  7843  003118  C01D  F0C5         	movff	DataBarGraphs@BGB,_DataBarGraphB
  7844  00311C  C01E  F0C6         	movff	DataBarGraphs@BGB+1,_DataBarGraphB+1
  7845  003120  0012               	return		;funcret
  7846  003122                     __end_of_DataBarGraphs:
  7847                           	opt stack 0
  7848                           tosu	equ	0xFFF
  7849                           tosh	equ	0xFFE
  7850                           tosl	equ	0xFFD
  7851                           pclath	equ	0xFFA
  7852                           tblptru	equ	0xFF8
  7853                           tblptrh	equ	0xFF7
  7854                           tblptrl	equ	0xFF6
  7855                           tablat	equ	0xFF5
  7856                           prodh	equ	0xFF4
  7857                           prodl	equ	0xFF3
  7858                           intcon	equ	0xFF2
  7859                           postinc0	equ	0xFEE
  7860                           wreg	equ	0xFE8
  7861                           indf2	equ	0xFDF
  7862                           postinc2	equ	0xFDE
  7863                           postdec2	equ	0xFDD
  7864                           plusw2	equ	0xFDB
  7865                           fsr2h	equ	0xFDA
  7866                           fsr2l	equ	0xFD9
  7867                           status	equ	0xFD8
  7868                           
  7869 ;; *************** function _Splash *****************
  7870 ;; Defined at:
  7871 ;;		line 35 in file "Display.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;		None
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      void 
  7878 ;; Registers used:
  7879 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7885 ;;      Params:         0       0       0       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0
  7888 ;;      Totals:         0       0       0       0       0       0       0
  7889 ;;Total ram usage:        0 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    8
  7892 ;; This function calls:
  7893 ;;		_oledGotoYX
  7894 ;;		_oledPrint
  7895 ;; This function is called by:
  7896 ;;		_main
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text31
  7901  002972                     __ptext31:
  7902                           	opt stack 0
  7903  002972                     _Splash:
  7904                           	opt stack 22
  7905                           
  7906                           ;Display.c: 36: oledGotoYX(2,3);
  7907                           
  7908                           ;incstack = 0
  7909  002972  0E03               	movlw	3
  7910  002974  6E27               	movwf	oledGotoYX@Column,c
  7911  002976  0E02               	movlw	2
  7912  002978  EC23  F015         	call	_oledGotoYX
  7913                           
  7914                           ;Display.c: 37: oledPrint("University");
  7915  00297C  0EE3               	movlw	low STR_1
  7916  00297E  0100               	movlb	0	; () banked
  7917  002980  6FFA               	movwf	oledPrint@s& (0+255),b
  7918  002982  0E7F               	movlw	high STR_1
  7919  002984  0100               	movlb	0	; () banked
  7920  002986  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7921  002988  EC0C  F016         	call	_oledPrint	;wreg free
  7922                           
  7923                           ;Display.c: 38: oledGotoYX(3,3);
  7924  00298C  0E03               	movlw	3
  7925  00298E  6E27               	movwf	oledGotoYX@Column,c
  7926  002990  0E03               	movlw	3
  7927  002992  EC23  F015         	call	_oledGotoYX
  7928                           
  7929                           ;Display.c: 39: oledPrint("OF");
  7930  002996  0EFC               	movlw	low STR_2
  7931  002998  0100               	movlb	0	; () banked
  7932  00299A  6FFA               	movwf	oledPrint@s& (0+255),b
  7933  00299C  0E7F               	movlw	high STR_2
  7934  00299E  0100               	movlb	0	; () banked
  7935  0029A0  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7936  0029A2  EC0C  F016         	call	_oledPrint	;wreg free
  7937                           
  7938                           ;Display.c: 40: oledGotoYX(4,3);
  7939  0029A6  0E03               	movlw	3
  7940  0029A8  6E27               	movwf	oledGotoYX@Column,c
  7941  0029AA  0E04               	movlw	4
  7942  0029AC  EC23  F015         	call	_oledGotoYX
  7943                           
  7944                           ;Display.c: 41: oledPrint("Akron");
  7945  0029B0  0EF6               	movlw	low STR_3
  7946  0029B2  0100               	movlb	0	; () banked
  7947  0029B4  6FFA               	movwf	oledPrint@s& (0+255),b
  7948  0029B6  0E7F               	movlw	high STR_3
  7949  0029B8  0100               	movlb	0	; () banked
  7950  0029BA  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7951  0029BC  EC0C  F016         	call	_oledPrint	;wreg free
  7952                           
  7953                           ;Display.c: 42: oledGotoYX(5,3);
  7954  0029C0  0E03               	movlw	3
  7955  0029C2  6E27               	movwf	oledGotoYX@Column,c
  7956  0029C4  0E05               	movlw	5
  7957  0029C6  EC23  F015         	call	_oledGotoYX
  7958                           
  7959                           ;Display.c: 43: oledPrint("ZIPS-EV");
  7960  0029CA  0EEE               	movlw	low STR_4
  7961  0029CC  0100               	movlb	0	; () banked
  7962  0029CE  6FFA               	movwf	oledPrint@s& (0+255),b
  7963  0029D0  0E7F               	movlw	high STR_4
  7964  0029D2  0100               	movlb	0	; () banked
  7965  0029D4  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7966  0029D6  EC0C  F016         	call	_oledPrint	;wreg free
  7967  0029DA  0012               	return		;funcret
  7968  0029DC                     __end_of_Splash:
  7969                           	opt stack 0
  7970                           tosu	equ	0xFFF
  7971                           tosh	equ	0xFFE
  7972                           tosl	equ	0xFFD
  7973                           pclath	equ	0xFFA
  7974                           tblptru	equ	0xFF8
  7975                           tblptrh	equ	0xFF7
  7976                           tblptrl	equ	0xFF6
  7977                           tablat	equ	0xFF5
  7978                           prodh	equ	0xFF4
  7979                           prodl	equ	0xFF3
  7980                           intcon	equ	0xFF2
  7981                           postinc0	equ	0xFEE
  7982                           wreg	equ	0xFE8
  7983                           indf2	equ	0xFDF
  7984                           postinc2	equ	0xFDE
  7985                           postdec2	equ	0xFDD
  7986                           plusw2	equ	0xFDB
  7987                           fsr2h	equ	0xFDA
  7988                           fsr2l	equ	0xFD9
  7989                           status	equ	0xFD8
  7990                           
  7991 ;; *************** function _oledPrint *****************
  7992 ;; Defined at:
  7993 ;;		line 222 in file "OLED_Display.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7996 ;;		 -> STR_4(8), STR_3(6), STR_2(3), STR_1(11), 
  7997 ;;		 -> SetData@s(20), 
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;		None
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  1    wreg      void 
  8002 ;; Registers used:
  8003 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8009 ;;      Params:         0       2       0       0       0       0       0
  8010 ;;      Locals:         0       0       0       0       0       0       0
  8011 ;;      Temps:          0       0       0       0       0       0       0
  8012 ;;      Totals:         0       2       0       0       0       0       0
  8013 ;;Total ram usage:        2 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:    7
  8016 ;; This function calls:
  8017 ;;		_oledPutChar
  8018 ;; This function is called by:
  8019 ;;		_Splash
  8020 ;;		_SetData
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           	psect	text32
  8025  002C18                     __ptext32:
  8026                           	opt stack 0
  8027  002C18                     _oledPrint:
  8028                           	opt stack 22
  8029                           
  8030                           ;OLED_Display.c: 224: while (*s) oledPutChar( *s++);
  8031                           
  8032                           ;incstack = 0
  8033  002C18  D015               	goto	l6780
  8034  002C1A                     l6776:
  8035  002C1A  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8036  002C1E  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8037  002C22  6AF8               	clrf	tblptru,c
  8038  002C24  0E05               	movlw	(high __ramtop+-1)
  8039  002C26  64F7               	cpfsgt	tblptrh,c
  8040  002C28  D003               	bra	u7707
  8041  002C2A  0008               	tblrd		*
  8042  002C2C  50F5               	movf	tablat,w,c
  8043  002C2E  D005               	bra	u7700
  8044  002C30                     u7707:
  8045  002C30  CFF6 FFE9          	movff	tblptrl,fsr0l
  8046  002C34  CFF7 FFEA          	movff	tblptrh,fsr0h
  8047  002C38  50EF               	movf	indf0,w,c
  8048  002C3A                     u7700:
  8049  002C3A  ECBE  F00D         	call	_oledPutChar
  8050  002C3E  0100               	movlb	0	; () banked
  8051  002C40  4BFA               	infsnz	oledPrint@s& (0+255),f,b
  8052  002C42  2BFB               	incf	(oledPrint@s+1)& (0+255),f,b
  8053  002C44                     l6780:
  8054  002C44  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8055  002C48  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8056  002C4C  6AF8               	clrf	tblptru,c
  8057  002C4E  0E05               	movlw	(high __ramtop+-1)
  8058  002C50  64F7               	cpfsgt	tblptrh,c
  8059  002C52  D003               	bra	u7717
  8060  002C54  0008               	tblrd		*
  8061  002C56  50F5               	movf	tablat,w,c
  8062  002C58  D005               	bra	u7710
  8063  002C5A                     u7717:
  8064  002C5A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8065  002C5E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8066  002C62  50EF               	movf	indf0,w,c
  8067  002C64                     u7710:
  8068  002C64  0900               	iorlw	0
  8069  002C66  B4D8               	btfsc	status,2,c
  8070  002C68  0012               	return	
  8071  002C6A  D7D7               	goto	l6776
  8072  002C6C                     __end_of_oledPrint:
  8073                           	opt stack 0
  8074                           tosu	equ	0xFFF
  8075                           tosh	equ	0xFFE
  8076                           tosl	equ	0xFFD
  8077                           pclath	equ	0xFFA
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           prodh	equ	0xFF4
  8083                           prodl	equ	0xFF3
  8084                           intcon	equ	0xFF2
  8085                           indf0	equ	0xFEF
  8086                           postinc0	equ	0xFEE
  8087                           fsr0h	equ	0xFEA
  8088                           fsr0l	equ	0xFE9
  8089                           wreg	equ	0xFE8
  8090                           indf2	equ	0xFDF
  8091                           postinc2	equ	0xFDE
  8092                           postdec2	equ	0xFDD
  8093                           plusw2	equ	0xFDB
  8094                           fsr2h	equ	0xFDA
  8095                           fsr2l	equ	0xFD9
  8096                           status	equ	0xFD8
  8097                           
  8098 ;; *************** function _Setupdisplay *****************
  8099 ;; Defined at:
  8100 ;;		line 30 in file "Display.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;		None
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8114 ;;      Params:         0       0       0       0       0       0       0
  8115 ;;      Locals:         0       0       0       0       0       0       0
  8116 ;;      Temps:          0       0       0       0       0       0       0
  8117 ;;      Totals:         0       0       0       0       0       0       0
  8118 ;;Total ram usage:        0 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    9
  8121 ;; This function calls:
  8122 ;;		_OLED_init
  8123 ;;		_oledClear
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text33
  8130  00315E                     __ptext33:
  8131                           	opt stack 0
  8132  00315E                     _Setupdisplay:
  8133                           	opt stack 21
  8134                           
  8135                           ;Display.c: 31: OLED_init();
  8136                           
  8137                           ;incstack = 0
  8138  00315E  ECC2  F012         	call	_OLED_init	;wreg free
  8139                           
  8140                           ;Display.c: 32: oledClear();
  8141  003162  ECB5  F015         	call	_oledClear	;wreg free
  8142  003166  0012               	return		;funcret
  8143  003168                     __end_of_Setupdisplay:
  8144                           	opt stack 0
  8145                           tosu	equ	0xFFF
  8146                           tosh	equ	0xFFE
  8147                           tosl	equ	0xFFD
  8148                           pclath	equ	0xFFA
  8149                           tblptru	equ	0xFF8
  8150                           tblptrh	equ	0xFF7
  8151                           tblptrl	equ	0xFF6
  8152                           tablat	equ	0xFF5
  8153                           prodh	equ	0xFF4
  8154                           prodl	equ	0xFF3
  8155                           intcon	equ	0xFF2
  8156                           indf0	equ	0xFEF
  8157                           postinc0	equ	0xFEE
  8158                           fsr0h	equ	0xFEA
  8159                           fsr0l	equ	0xFE9
  8160                           wreg	equ	0xFE8
  8161                           indf2	equ	0xFDF
  8162                           postinc2	equ	0xFDE
  8163                           postdec2	equ	0xFDD
  8164                           plusw2	equ	0xFDB
  8165                           fsr2h	equ	0xFDA
  8166                           fsr2l	equ	0xFD9
  8167                           status	equ	0xFD8
  8168                           
  8169 ;; *************** function _oledClear *****************
  8170 ;; Defined at:
  8171 ;;		line 212 in file "OLED_Display.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  col             2   10[BANK0 ] unsigned int 
  8176 ;;  row             2    8[BANK0 ] unsigned int 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1    wreg      void 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8186 ;;      Params:         0       0       0       0       0       0       0
  8187 ;;      Locals:         0       4       0       0       0       0       0
  8188 ;;      Temps:          0       0       0       0       0       0       0
  8189 ;;      Totals:         0       4       0       0       0       0       0
  8190 ;;Total ram usage:        4 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    8
  8193 ;; This function calls:
  8194 ;;		_oledGotoYX
  8195 ;;		_oledPutChar
  8196 ;; This function is called by:
  8197 ;;		_Setupdisplay
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text34
  8202  002B6A                     __ptext34:
  8203                           	opt stack 0
  8204  002B6A                     _oledClear:
  8205                           	opt stack 21
  8206                           
  8207                           ;OLED_Display.c: 214: for ( uint16_t row = 0; row < 8; row++ ) {
  8208                           
  8209                           ;incstack = 0
  8210  002B6A  0E00               	movlw	0
  8211  002B6C  0100               	movlb	0	; () banked
  8212  002B6E  6FFB               	movwf	(oledClear@row+1)& (0+255),b
  8213  002B70  0E00               	movlw	0
  8214  002B72  6FFA               	movwf	oledClear@row& (0+255),b
  8215  002B74                     l6752:
  8216                           
  8217                           ; BSR set to: 0
  8218  002B74  0100               	movlb	0	; () banked
  8219  002B76  51FB               	movf	(oledClear@row+1)& (0+255),w,b
  8220  002B78  E123               	bnz	l1262
  8221  002B7A  0E08               	movlw	8
  8222  002B7C  0100               	movlb	0	; () banked
  8223  002B7E  5DFA               	subwf	oledClear@row& (0+255),w,b
  8224  002B80  B0D8               	btfsc	status,0,c
  8225  002B82  0012               	return	
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;OLED_Display.c: 215: for ( uint16_t col = 0; col < 16; col++ ) {
  8229                           
  8230                           ; BSR set to: 0
  8231                           
  8232                           ; BSR set to: 0
  8233  002B84  0E00               	movlw	0
  8234  002B86  0100               	movlb	0	; () banked
  8235  002B88  6FFD               	movwf	(oledClear@col+1)& (0+255),b
  8236  002B8A  0E00               	movlw	0
  8237  002B8C  6FFC               	movwf	oledClear@col& (0+255),b
  8238  002B8E                     l6758:
  8239                           
  8240                           ; BSR set to: 0
  8241  002B8E  0100               	movlb	0	; () banked
  8242  002B90  51FD               	movf	(oledClear@col+1)& (0+255),w,b
  8243  002B92  E112               	bnz	l6770
  8244  002B94  0E10               	movlw	16
  8245  002B96  0100               	movlb	0	; () banked
  8246  002B98  5DFC               	subwf	oledClear@col& (0+255),w,b
  8247  002B9A  B0D8               	btfsc	status,0,c
  8248  002B9C  D00D               	goto	l6770
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;OLED_Display.c: 216: oledGotoYX( row, col );
  8252                           
  8253                           ; BSR set to: 0
  8254                           
  8255                           ; BSR set to: 0
  8256  002B9E  C0FC  F027         	movff	oledClear@col,oledGotoYX@Column
  8257  002BA2  0100               	movlb	0	; () banked
  8258  002BA4  51FA               	movf	oledClear@row& (0+255),w,b
  8259  002BA6  EC23  F015         	call	_oledGotoYX
  8260                           
  8261                           ;OLED_Display.c: 217: oledPutChar( ' ' );
  8262  002BAA  0E20               	movlw	32
  8263  002BAC  ECBE  F00D         	call	_oledPutChar
  8264  002BB0  0100               	movlb	0	; () banked
  8265  002BB2  4BFC               	infsnz	oledClear@col& (0+255),f,b
  8266  002BB4  2BFD               	incf	(oledClear@col+1)& (0+255),f,b
  8267  002BB6  D7EB               	goto	l6758
  8268  002BB8                     l6770:
  8269                           
  8270                           ; BSR set to: 0
  8271  002BB8  0100               	movlb	0	; () banked
  8272  002BBA  4BFA               	infsnz	oledClear@row& (0+255),f,b
  8273  002BBC  2BFB               	incf	(oledClear@row+1)& (0+255),f,b
  8274  002BBE  D7DA               	goto	l6752
  8275  002BC0                     l1262:
  8276                           
  8277                           ; BSR set to: 0
  8278  002BC0  0012               	return		;funcret
  8279  002BC2                     __end_of_oledClear:
  8280                           	opt stack 0
  8281                           tosu	equ	0xFFF
  8282                           tosh	equ	0xFFE
  8283                           tosl	equ	0xFFD
  8284                           pclath	equ	0xFFA
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           intcon	equ	0xFF2
  8292                           indf0	equ	0xFEF
  8293                           postinc0	equ	0xFEE
  8294                           fsr0h	equ	0xFEA
  8295                           fsr0l	equ	0xFE9
  8296                           wreg	equ	0xFE8
  8297                           indf2	equ	0xFDF
  8298                           postinc2	equ	0xFDE
  8299                           postdec2	equ	0xFDD
  8300                           plusw2	equ	0xFDB
  8301                           fsr2h	equ	0xFDA
  8302                           fsr2l	equ	0xFD9
  8303                           status	equ	0xFD8
  8304                           
  8305 ;; *************** function _oledPutChar *****************
  8306 ;; Defined at:
  8307 ;;		line 178 in file "OLED_Display.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  ch              1    wreg     unsigned char 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  ch              1   11[BANK1 ] unsigned char 
  8312 ;;  bytes           9    0[BANK1 ] unsigned char [9]
  8313 ;;  base            2    9[BANK1 ] PTR const unsigned char 
  8314 ;;		 -> OledFont(768), 
  8315 ;;  status          1   12[BANK1 ] enum E8858
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8325 ;;      Params:         0       0       0       0       0       0       0
  8326 ;;      Locals:         0       0      13       0       0       0       0
  8327 ;;      Temps:          4       0       0       0       0       0       0
  8328 ;;      Totals:         4       0      13       0       0       0       0
  8329 ;;Total ram usage:       17 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    6
  8332 ;; This function calls:
  8333 ;;		_I2C1_MasterWrite
  8334 ;;		_memmove
  8335 ;; This function is called by:
  8336 ;;		_oledClear
  8337 ;;		_oledPrint
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text35
  8342  001B7C                     __ptext35:
  8343                           	opt stack 0
  8344  001B7C                     _oledPutChar:
  8345                           	opt stack 22
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;incstack = 0
  8349                           ;oledPutChar@ch stored from wreg
  8350  001B7C  0101               	movlb	1	; () banked
  8351  001B7E  6F44               	movwf	oledPutChar@ch& (0+255),b
  8352                           
  8353                           ;OLED_Display.c: 179: if ( ( ch < 32 ) || ( ch > 127 ) )
  8354  001B80  0E1F               	movlw	31
  8355  001B82  0101               	movlb	1	; () banked
  8356  001B84  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8357  001B86  D004               	goto	l6352
  8358                           
  8359                           ; BSR set to: 1
  8360  001B88  0E7F               	movlw	127
  8361  001B8A  0101               	movlb	1	; () banked
  8362  001B8C  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8363  001B8E  D003               	goto	l6354
  8364  001B90                     l6352:
  8365                           
  8366                           ; BSR set to: 1
  8367                           ;OLED_Display.c: 180: ch = ' ';
  8368  001B90  0E20               	movlw	32
  8369  001B92  0101               	movlb	1	; () banked
  8370  001B94  6F44               	movwf	oledPutChar@ch& (0+255),b
  8371  001B96                     l6354:
  8372                           
  8373                           ; BSR set to: 1
  8374                           ;OLED_Display.c: 182: const uint8_t *base = &OledFont[ch - 32][0];
  8375  001B96  0E00               	movlw	0
  8376  001B98  6E27               	movwf	??_oledPutChar& (0+255),c
  8377  001B9A  0EFF               	movlw	255
  8378  001B9C  6E28               	movwf	(??_oledPutChar+1)& (0+255),c
  8379  001B9E  0101               	movlb	1	; () banked
  8380  001BA0  5144               	movf	oledPutChar@ch& (0+255),w,b
  8381  001BA2  6E29               	movwf	(??_oledPutChar+2)& (0+255),c
  8382  001BA4  6A2A               	clrf	(??_oledPutChar+3)& (0+255),c
  8383  001BA6  90D8               	bcf	status,0,c
  8384  001BA8  3629               	rlcf	??_oledPutChar+2,f,c
  8385  001BAA  362A               	rlcf	??_oledPutChar+3,f,c
  8386  001BAC  90D8               	bcf	status,0,c
  8387  001BAE  3629               	rlcf	??_oledPutChar+2,f,c
  8388  001BB0  362A               	rlcf	??_oledPutChar+3,f,c
  8389  001BB2  90D8               	bcf	status,0,c
  8390  001BB4  3629               	rlcf	??_oledPutChar+2,f,c
  8391  001BB6  362A               	rlcf	??_oledPutChar+3,f,c
  8392  001BB8  5027               	movf	??_oledPutChar,w,c
  8393  001BBA  2629               	addwf	??_oledPutChar+2,f,c
  8394  001BBC  5028               	movf	??_oledPutChar+1,w,c
  8395  001BBE  222A               	addwfc	??_oledPutChar+3,f,c
  8396  001BC0  0ED3               	movlw	low _OledFont
  8397  001BC2  2429               	addwf	??_oledPutChar+2,w,c
  8398  001BC4  0101               	movlb	1	; () banked
  8399  001BC6  6F42               	movwf	oledPutChar@base& (0+255),b
  8400  001BC8  0E7B               	movlw	high _OledFont
  8401  001BCA  202A               	addwfc	??_oledPutChar+3,w,c
  8402  001BCC  0101               	movlb	1	; () banked
  8403  001BCE  6F43               	movwf	(oledPutChar@base+1)& (0+255),b
  8404                           
  8405                           ; BSR set to: 1
  8406                           ;OLED_Display.c: 184: uint8_t bytes[9];
  8407                           ;OLED_Display.c: 185: bytes[0] = 0x40;
  8408  001BD0  0E40               	movlw	64
  8409  001BD2  0101               	movlb	1	; () banked
  8410  001BD4  6F39               	movwf	oledPutChar@bytes& (0+255),b
  8411                           
  8412                           ; BSR set to: 1
  8413                           ;OLED_Display.c: 186: memmove( bytes + 1, base, 8 );
  8414  001BD6  0E3A               	movlw	low (oledPutChar@bytes+1)
  8415  001BD8  6E1B               	movwf	memmove@d1,c
  8416  001BDA  0E01               	movlw	high (oledPutChar@bytes+1)
  8417  001BDC  6E1C               	movwf	memmove@d1+1,c
  8418  001BDE  C142  F01D         	movff	oledPutChar@base,memmove@s1
  8419  001BE2  C143  F01E         	movff	oledPutChar@base+1,memmove@s1+1
  8420  001BE6  0E00               	movlw	0
  8421  001BE8  6E20               	movwf	memmove@n+1,c
  8422  001BEA  0E08               	movlw	8
  8423  001BEC  6E1F               	movwf	memmove@n,c
  8424  001BEE  EC9F  F010         	call	_memmove	;wreg free
  8425                           
  8426                           ;OLED_Display.c: 188: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8427  001BF2  0E02               	movlw	2
  8428  001BF4  0101               	movlb	1	; () banked
  8429  001BF6  6F45               	movwf	oledPutChar@status& (0+255),b
  8430                           
  8431                           ; BSR set to: 1
  8432                           ;OLED_Display.c: 190: timeOut = 0;
  8433  001BF8  0E00               	movlw	0
  8434  001BFA  0100               	movlb	0	; () banked
  8435  001BFC  6FDE               	movwf	(_timeOut+1)& (0+255),b
  8436  001BFE  0E00               	movlw	0
  8437  001C00  6FDD               	movwf	_timeOut& (0+255),b
  8438                           
  8439                           ;OLED_Display.c: 191: while (status != I2C1_MESSAGE_FAIL) {
  8440  001C02  D030               	goto	l6384
  8441  001C04                     l6364:
  8442                           
  8443                           ;OLED_Display.c: 193: I2C1_MasterWrite(bytes,
  8444                           ;OLED_Display.c: 194: 9,
  8445                           ;OLED_Display.c: 195: 0x3C,
  8446                           ;OLED_Display.c: 196: &status);
  8447  001C04  0E39               	movlw	low oledPutChar@bytes
  8448  001C06  0100               	movlb	0	; () banked
  8449  001C08  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8450  001C0A  0E01               	movlw	high oledPutChar@bytes
  8451  001C0C  0100               	movlb	0	; () banked
  8452  001C0E  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8453  001C10  0E00               	movlw	0
  8454  001C12  0100               	movlb	0	; () banked
  8455  001C14  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8456  001C16  0E09               	movlw	9
  8457  001C18  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  8458  001C1A  0E00               	movlw	0
  8459  001C1C  0100               	movlb	0	; () banked
  8460  001C1E  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  8461  001C20  0E3C               	movlw	60
  8462  001C22  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  8463  001C24  0E45               	movlw	low oledPutChar@status
  8464  001C26  0100               	movlb	0	; () banked
  8465  001C28  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8466  001C2A  0E01               	movlw	high oledPutChar@status
  8467  001C2C  0100               	movlb	0	; () banked
  8468  001C2E  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8469  001C30  ECE1  F015         	call	_I2C1_MasterWrite	;wreg free
  8470  001C34                     l6366:
  8471  001C34  0E02               	movlw	2
  8472  001C36  0101               	movlb	1	; () banked
  8473  001C38  1945               	xorwf	oledPutChar@status& (0+255),w,b
  8474  001C3A  B4D8               	btfsc	status,2,c
  8475  001C3C  D7FB               	goto	l6366
  8476                           
  8477                           ; BSR set to: 1
  8478                           ;OLED_Display.c: 201: if (status == I2C1_MESSAGE_COMPLETE)
  8479                           
  8480                           ; BSR set to: 1
  8481  001C3E  0101               	movlb	1	; () banked
  8482  001C40  5145               	movf	oledPutChar@status& (0+255),w,b
  8483  001C42  0101               	movlb	1	; () banked
  8484  001C44  B4D8               	btfsc	status,2,c
  8485  001C46  0012               	return	
  8486                           
  8487                           ; BSR set to: 1
  8488                           ;OLED_Display.c: 203: if (timeOut == 100)
  8489                           
  8490                           ; BSR set to: 1
  8491                           
  8492                           ; BSR set to: 1
  8493                           ;OLED_Display.c: 202: break;
  8494  001C48  0E64               	movlw	100
  8495  001C4A  0100               	movlb	0	; () banked
  8496  001C4C  19DD               	xorwf	_timeOut& (0+255),w,b
  8497  001C4E  0100               	movlb	0	; () banked
  8498  001C50  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  8499  001C52  B4D8               	btfsc	status,2,c
  8500  001C54  0012               	return	
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;OLED_Display.c: 205: if (status == I2C1_MESSAGE_FAIL)
  8504                           
  8505                           ; BSR set to: 0
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;OLED_Display.c: 204: break;
  8509  001C56  0101               	movlb	1	; () banked
  8510  001C58  0545               	decf	oledPutChar@status& (0+255),w,b
  8511  001C5A  B4D8               	btfsc	status,2,c
  8512  001C5C  0012               	return	
  8513                           
  8514                           ; BSR set to: 1
  8515                           ;OLED_Display.c: 207: else
  8516                           ;OLED_Display.c: 208: timeOut++;
  8517                           
  8518                           ; BSR set to: 1
  8519                           
  8520                           ; BSR set to: 1
  8521                           
  8522                           ; BSR set to: 1
  8523                           ;OLED_Display.c: 206: break;
  8524  001C5E  0100               	movlb	0	; () banked
  8525  001C60  4BDD               	infsnz	_timeOut& (0+255),f,b
  8526  001C62  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  8527  001C64                     l6384:
  8528  001C64  0101               	movlb	1	; () banked
  8529  001C66  0545               	decf	oledPutChar@status& (0+255),w,b
  8530  001C68  B4D8               	btfsc	status,2,c
  8531  001C6A  0012               	return	
  8532  001C6C  D7CB               	goto	l6364
  8533  001C6E                     __end_of_oledPutChar:
  8534                           	opt stack 0
  8535                           tosu	equ	0xFFF
  8536                           tosh	equ	0xFFE
  8537                           tosl	equ	0xFFD
  8538                           pclath	equ	0xFFA
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           prodh	equ	0xFF4
  8544                           prodl	equ	0xFF3
  8545                           intcon	equ	0xFF2
  8546                           indf0	equ	0xFEF
  8547                           postinc0	equ	0xFEE
  8548                           fsr0h	equ	0xFEA
  8549                           fsr0l	equ	0xFE9
  8550                           wreg	equ	0xFE8
  8551                           indf2	equ	0xFDF
  8552                           postinc2	equ	0xFDE
  8553                           postdec2	equ	0xFDD
  8554                           plusw2	equ	0xFDB
  8555                           fsr2h	equ	0xFDA
  8556                           fsr2l	equ	0xFD9
  8557                           status	equ	0xFD8
  8558                           
  8559 ;; *************** function _memmove *****************
  8560 ;; Defined at:
  8561 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memmove.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  d1              2   26[COMRAM] PTR void 
  8564 ;;		 -> oledPutChar@bytes(9), 
  8565 ;;  s1              2   28[COMRAM] PTR const void 
  8566 ;;		 -> OledFont(768), 
  8567 ;;  n               2   30[COMRAM] unsigned int 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  s               2   36[COMRAM] PTR const unsigned char 
  8570 ;;		 -> OledFont(768), 
  8571 ;;  d               2   34[COMRAM] PTR unsigned char 
  8572 ;;		 -> oledPutChar@bytes(9), 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  2   26[COMRAM] PTR void 
  8575 ;; Registers used:
  8576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8582 ;;      Params:         6       0       0       0       0       0       0
  8583 ;;      Locals:         4       0       0       0       0       0       0
  8584 ;;      Temps:          2       0       0       0       0       0       0
  8585 ;;      Totals:        12       0       0       0       0       0       0
  8586 ;;Total ram usage:       12 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    4
  8589 ;; This function calls:
  8590 ;;		Nothing
  8591 ;; This function is called by:
  8592 ;;		_oledPutChar
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text36
  8597  00213E                     __ptext36:
  8598                           	opt stack 0
  8599  00213E                     _memmove:
  8600                           	opt stack 23
  8601                           
  8602                           ;incstack = 0
  8603  00213E  C01D  F025         	movff	memmove@s1,memmove@s
  8604  002142  C01E  F026         	movff	memmove@s1+1,memmove@s+1
  8605  002146  C01B  F023         	movff	memmove@d1,memmove@d
  8606  00214A  C01C  F024         	movff	memmove@d1+1,memmove@d+1
  8607  00214E  5023               	movf	memmove@d,w,c
  8608  002150  5C25               	subwf	memmove@s,w,c
  8609  002152  5024               	movf	memmove@d+1,w,c
  8610  002154  5826               	subwfb	memmove@s+1,w,c
  8611  002156  B0D8               	btfsc	status,0,c
  8612  002158  D02D               	goto	l6116
  8613  00215A  501F               	movf	memmove@n,w,c
  8614  00215C  2425               	addwf	memmove@s,w,c
  8615  00215E  6E21               	movwf	??_memmove& (0+255),c
  8616  002160  5020               	movf	memmove@n+1,w,c
  8617  002162  2026               	addwfc	memmove@s+1,w,c
  8618  002164  6E22               	movwf	(??_memmove+1)& (0+255),c
  8619  002166  5021               	movf	??_memmove,w,c
  8620  002168  5C23               	subwf	memmove@d,w,c
  8621  00216A  5022               	movf	??_memmove+1,w,c
  8622  00216C  5824               	subwfb	memmove@d+1,w,c
  8623  00216E  B0D8               	btfsc	status,0,c
  8624  002170  D021               	goto	l6116
  8625  002172  501F               	movf	memmove@n,w,c
  8626  002174  2625               	addwf	memmove@s,f,c
  8627  002176  5020               	movf	memmove@n+1,w,c
  8628  002178  2226               	addwfc	memmove@s+1,f,c
  8629  00217A  501F               	movf	memmove@n,w,c
  8630  00217C  2623               	addwf	memmove@d,f,c
  8631  00217E  5020               	movf	memmove@n+1,w,c
  8632  002180  2224               	addwfc	memmove@d+1,f,c
  8633  002182                     l6112:
  8634  002182  0625               	decf	memmove@s,f,c
  8635  002184  A0D8               	btfss	status,0,c
  8636  002186  0626               	decf	memmove@s+1,f,c
  8637  002188  C025  FFF6         	movff	memmove@s,tblptrl
  8638  00218C  C026  FFF7         	movff	memmove@s+1,tblptrh
  8639  002190                     	if	0	;tblptru may be non-zero
  8640  002190                     	endif
  8641  002190                     	if	0	;tblptru may be non-zero
  8642  002190                     	endif
  8643  002190  0623               	decf	memmove@d,f,c
  8644  002192  A0D8               	btfss	status,0,c
  8645  002194  0624               	decf	memmove@d+1,f,c
  8646  002196  C023  FFD9         	movff	memmove@d,fsr2l
  8647  00219A  C024  FFDA         	movff	memmove@d+1,fsr2h
  8648  00219E  0008               	tblrd		*
  8649  0021A0  CFF5 FFDF          	movff	tablat,indf2
  8650  0021A4  061F               	decf	memmove@n,f,c
  8651  0021A6  A0D8               	btfss	status,0,c
  8652  0021A8  0620               	decf	memmove@n+1,f,c
  8653  0021AA  501F               	movf	memmove@n,w,c
  8654  0021AC  1020               	iorwf	memmove@n+1,w,c
  8655  0021AE  B4D8               	btfsc	status,2,c
  8656  0021B0  0012               	return	
  8657  0021B2  D7E7               	goto	l6112
  8658  0021B4                     l6116:
  8659  0021B4  501F               	movf	memmove@n,w,c
  8660  0021B6  1020               	iorwf	memmove@n+1,w,c
  8661  0021B8  B4D8               	btfsc	status,2,c
  8662  0021BA  0012               	return	
  8663  0021BC  C025  FFF6         	movff	memmove@s,tblptrl
  8664  0021C0  C026  FFF7         	movff	memmove@s+1,tblptrh
  8665  0021C4                     	if	0	;tblptru may be non-zero
  8666  0021C4                     	endif
  8667  0021C4                     	if	0	;tblptru may be non-zero
  8668  0021C4                     	endif
  8669  0021C4  C023  FFD9         	movff	memmove@d,fsr2l
  8670  0021C8  C024  FFDA         	movff	memmove@d+1,fsr2h
  8671  0021CC  0008               	tblrd		*
  8672  0021CE  CFF5 FFDF          	movff	tablat,indf2
  8673  0021D2  4A25               	infsnz	memmove@s,f,c
  8674  0021D4  2A26               	incf	memmove@s+1,f,c
  8675  0021D6  4A23               	infsnz	memmove@d,f,c
  8676  0021D8  2A24               	incf	memmove@d+1,f,c
  8677  0021DA  061F               	decf	memmove@n,f,c
  8678  0021DC  A0D8               	btfss	status,0,c
  8679  0021DE  0620               	decf	memmove@n+1,f,c
  8680  0021E0  D7E9               	goto	l6116
  8681  0021E2                     __end_of_memmove:
  8682                           	opt stack 0
  8683                           tosu	equ	0xFFF
  8684                           tosh	equ	0xFFE
  8685                           tosl	equ	0xFFD
  8686                           pclath	equ	0xFFA
  8687                           tblptru	equ	0xFF8
  8688                           tblptrh	equ	0xFF7
  8689                           tblptrl	equ	0xFF6
  8690                           tablat	equ	0xFF5
  8691                           prodh	equ	0xFF4
  8692                           prodl	equ	0xFF3
  8693                           intcon	equ	0xFF2
  8694                           indf0	equ	0xFEF
  8695                           postinc0	equ	0xFEE
  8696                           fsr0h	equ	0xFEA
  8697                           fsr0l	equ	0xFE9
  8698                           wreg	equ	0xFE8
  8699                           indf2	equ	0xFDF
  8700                           postinc2	equ	0xFDE
  8701                           postdec2	equ	0xFDD
  8702                           plusw2	equ	0xFDB
  8703                           fsr2h	equ	0xFDA
  8704                           fsr2l	equ	0xFD9
  8705                           status	equ	0xFD8
  8706                           
  8707 ;; *************** function _oledGotoYX *****************
  8708 ;; Defined at:
  8709 ;;		line 39 in file "OLED_Display.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  Row             1    wreg     unsigned char 
  8712 ;;  Column          1   38[COMRAM] unsigned char 
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;  Row             1   40[COMRAM] unsigned char 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  1    wreg      void 
  8717 ;; Registers used:
  8718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8724 ;;      Params:         1       0       0       0       0       0       0
  8725 ;;      Locals:         1       0       0       0       0       0       0
  8726 ;;      Temps:          1       0       0       0       0       0       0
  8727 ;;      Totals:         3       0       0       0       0       0       0
  8728 ;;Total ram usage:        3 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; Hardware stack levels required when called:    7
  8731 ;; This function calls:
  8732 ;;		_OLED_command
  8733 ;; This function is called by:
  8734 ;;		_oledClear
  8735 ;;		_Splash
  8736 ;;		_SetData
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text37
  8741  002A46                     __ptext37:
  8742                           	opt stack 0
  8743  002A46                     _oledGotoYX:
  8744                           	opt stack 22
  8745                           
  8746                           ;incstack = 0
  8747                           ;oledGotoYX@Row stored from wreg
  8748  002A46  6E29               	movwf	oledGotoYX@Row,c
  8749                           
  8750                           ;OLED_Display.c: 41: OLED_command( 0xB0 + Row);
  8751  002A48  5029               	movf	oledGotoYX@Row,w,c
  8752  002A4A  0FB0               	addlw	176
  8753  002A4C  ECCF  F013         	call	_OLED_command
  8754                           
  8755                           ;OLED_Display.c: 42: OLED_command( 0xB0 + Row);
  8756  002A50  5029               	movf	oledGotoYX@Row,w,c
  8757  002A52  0FB0               	addlw	176
  8758  002A54  ECCF  F013         	call	_OLED_command
  8759                           
  8760                           ;OLED_Display.c: 43: OLED_command( 0x00 + (8*Column & 0x0F) );
  8761  002A58  5027               	movf	oledGotoYX@Column,w,c
  8762  002A5A  0D08               	mullw	8
  8763  002A5C  50F3               	movf	prodl,w,c
  8764  002A5E  0B0F               	andlw	15
  8765  002A60  ECCF  F013         	call	_OLED_command
  8766                           
  8767                           ;OLED_Display.c: 44: OLED_command( 0x00 + (8*Column & 0x0F) );
  8768  002A64  5027               	movf	oledGotoYX@Column,w,c
  8769  002A66  0D08               	mullw	8
  8770  002A68  50F3               	movf	prodl,w,c
  8771  002A6A  0B0F               	andlw	15
  8772  002A6C  ECCF  F013         	call	_OLED_command
  8773                           
  8774                           ;OLED_Display.c: 45: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8775  002A70  5027               	movf	oledGotoYX@Column,w,c
  8776  002A72  0D08               	mullw	8
  8777  002A74  0E04               	movlw	4
  8778  002A76  6E28               	movwf	??_oledGotoYX& (0+255),c
  8779  002A78                     u6705:
  8780  002A78  34F4               	rlcf	prodh,w,c
  8781  002A7A  32F4               	rrcf	prodh,f,c
  8782  002A7C  32F3               	rrcf	prodl,f,c
  8783  002A7E  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8784  002A80  D7FB               	goto	u6705
  8785  002A82  50F3               	movf	prodl,w,c
  8786  002A84  0B0F               	andlw	15
  8787  002A86  0F10               	addlw	16
  8788  002A88  ECCF  F013         	call	_OLED_command
  8789                           
  8790                           ;OLED_Display.c: 46: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8791  002A8C  5027               	movf	oledGotoYX@Column,w,c
  8792  002A8E  0D08               	mullw	8
  8793  002A90  0E04               	movlw	4
  8794  002A92  6E28               	movwf	??_oledGotoYX& (0+255),c
  8795  002A94                     u6715:
  8796  002A94  34F4               	rlcf	prodh,w,c
  8797  002A96  32F4               	rrcf	prodh,f,c
  8798  002A98  32F3               	rrcf	prodl,f,c
  8799  002A9A  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8800  002A9C  D7FB               	goto	u6715
  8801  002A9E  50F3               	movf	prodl,w,c
  8802  002AA0  0B0F               	andlw	15
  8803  002AA2  0F10               	addlw	16
  8804  002AA4  ECCF  F013         	call	_OLED_command
  8805  002AA8  0012               	return		;funcret
  8806  002AAA                     __end_of_oledGotoYX:
  8807                           	opt stack 0
  8808                           tosu	equ	0xFFF
  8809                           tosh	equ	0xFFE
  8810                           tosl	equ	0xFFD
  8811                           pclath	equ	0xFFA
  8812                           tblptru	equ	0xFF8
  8813                           tblptrh	equ	0xFF7
  8814                           tblptrl	equ	0xFF6
  8815                           tablat	equ	0xFF5
  8816                           prodh	equ	0xFF4
  8817                           prodl	equ	0xFF3
  8818                           intcon	equ	0xFF2
  8819                           indf0	equ	0xFEF
  8820                           postinc0	equ	0xFEE
  8821                           fsr0h	equ	0xFEA
  8822                           fsr0l	equ	0xFE9
  8823                           wreg	equ	0xFE8
  8824                           indf2	equ	0xFDF
  8825                           postinc2	equ	0xFDE
  8826                           postdec2	equ	0xFDD
  8827                           plusw2	equ	0xFDB
  8828                           fsr2h	equ	0xFDA
  8829                           fsr2l	equ	0xFD9
  8830                           status	equ	0xFD8
  8831                           
  8832 ;; *************** function _OLED_init *****************
  8833 ;; Defined at:
  8834 ;;		line 146 in file "OLED_Display.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;		None
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;		None
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8848 ;;      Params:         0       0       0       0       0       0       0
  8849 ;;      Locals:         0       0       0       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0
  8851 ;;      Totals:         0       0       0       0       0       0       0
  8852 ;;Total ram usage:        0 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    7
  8855 ;; This function calls:
  8856 ;;		_OLED_command
  8857 ;; This function is called by:
  8858 ;;		_Setupdisplay
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text38
  8863  002584                     __ptext38:
  8864                           	opt stack 0
  8865  002584                     _OLED_init:
  8866                           	opt stack 22
  8867                           
  8868                           ;OLED_Display.c: 148: OLED_command (0xae);
  8869                           
  8870                           ;incstack = 0
  8871  002584  0EAE               	movlw	174
  8872  002586  ECCF  F013         	call	_OLED_command
  8873                           
  8874                           ;OLED_Display.c: 149: OLED_command (0xa8);
  8875  00258A  0EA8               	movlw	168
  8876  00258C  ECCF  F013         	call	_OLED_command
  8877                           
  8878                           ;OLED_Display.c: 150: OLED_command (0x3f);
  8879  002590  0E3F               	movlw	63
  8880  002592  ECCF  F013         	call	_OLED_command
  8881                           
  8882                           ;OLED_Display.c: 151: OLED_command (0xd3);
  8883  002596  0ED3               	movlw	211
  8884  002598  ECCF  F013         	call	_OLED_command
  8885                           
  8886                           ;OLED_Display.c: 152: OLED_command (0x00);
  8887  00259C  0E00               	movlw	0
  8888  00259E  ECCF  F013         	call	_OLED_command
  8889                           
  8890                           ;OLED_Display.c: 153: OLED_command (0x40);
  8891  0025A2  0E40               	movlw	64
  8892  0025A4  ECCF  F013         	call	_OLED_command
  8893                           
  8894                           ;OLED_Display.c: 155: OLED_command (0xa0);
  8895  0025A8  0EA0               	movlw	160
  8896  0025AA  ECCF  F013         	call	_OLED_command
  8897                           
  8898                           ;OLED_Display.c: 156: OLED_command (0xa1);
  8899  0025AE  0EA1               	movlw	161
  8900  0025B0  ECCF  F013         	call	_OLED_command
  8901                           
  8902                           ;OLED_Display.c: 157: OLED_command (0xc0);
  8903  0025B4  0EC0               	movlw	192
  8904  0025B6  ECCF  F013         	call	_OLED_command
  8905                           
  8906                           ;OLED_Display.c: 159: OLED_command (0xc8);
  8907  0025BA  0EC8               	movlw	200
  8908  0025BC  ECCF  F013         	call	_OLED_command
  8909                           
  8910                           ;OLED_Display.c: 160: OLED_command (0xda);
  8911  0025C0  0EDA               	movlw	218
  8912  0025C2  ECCF  F013         	call	_OLED_command
  8913                           
  8914                           ;OLED_Display.c: 161: OLED_command (0x12);
  8915  0025C6  0E12               	movlw	18
  8916  0025C8  ECCF  F013         	call	_OLED_command
  8917                           
  8918                           ;OLED_Display.c: 162: OLED_command (0x81);
  8919  0025CC  0E81               	movlw	129
  8920  0025CE  ECCF  F013         	call	_OLED_command
  8921                           
  8922                           ;OLED_Display.c: 163: OLED_command (0xfF);
  8923  0025D2  0EFF               	movlw	255
  8924  0025D4  ECCF  F013         	call	_OLED_command
  8925                           
  8926                           ;OLED_Display.c: 164: OLED_command (0xa4);
  8927  0025D8  0EA4               	movlw	164
  8928  0025DA  ECCF  F013         	call	_OLED_command
  8929                           
  8930                           ;OLED_Display.c: 165: OLED_command (0xa6);
  8931  0025DE  0EA6               	movlw	166
  8932  0025E0  ECCF  F013         	call	_OLED_command
  8933                           
  8934                           ;OLED_Display.c: 166: OLED_command (0xd5);
  8935  0025E4  0ED5               	movlw	213
  8936  0025E6  ECCF  F013         	call	_OLED_command
  8937                           
  8938                           ;OLED_Display.c: 167: OLED_command (0x80);
  8939  0025EA  0E80               	movlw	128
  8940  0025EC  ECCF  F013         	call	_OLED_command
  8941                           
  8942                           ;OLED_Display.c: 168: OLED_command (0x8d);
  8943  0025F0  0E8D               	movlw	141
  8944  0025F2  ECCF  F013         	call	_OLED_command
  8945                           
  8946                           ;OLED_Display.c: 169: OLED_command (0x14);
  8947  0025F6  0E14               	movlw	20
  8948  0025F8  ECCF  F013         	call	_OLED_command
  8949                           
  8950                           ;OLED_Display.c: 170: OLED_command (0xAF);
  8951  0025FC  0EAF               	movlw	175
  8952  0025FE  ECCF  F013         	call	_OLED_command
  8953                           
  8954                           ;OLED_Display.c: 171: OLED_command (0x20);
  8955  002602  0E20               	movlw	32
  8956  002604  ECCF  F013         	call	_OLED_command
  8957                           
  8958                           ;OLED_Display.c: 172: OLED_command (0x00);
  8959  002608  0E00               	movlw	0
  8960  00260A  ECCF  F013         	call	_OLED_command
  8961  00260E  0012               	return		;funcret
  8962  002610                     __end_of_OLED_init:
  8963                           	opt stack 0
  8964                           tosu	equ	0xFFF
  8965                           tosh	equ	0xFFE
  8966                           tosl	equ	0xFFD
  8967                           pclath	equ	0xFFA
  8968                           tblptru	equ	0xFF8
  8969                           tblptrh	equ	0xFF7
  8970                           tblptrl	equ	0xFF6
  8971                           tablat	equ	0xFF5
  8972                           prodh	equ	0xFF4
  8973                           prodl	equ	0xFF3
  8974                           intcon	equ	0xFF2
  8975                           indf0	equ	0xFEF
  8976                           postinc0	equ	0xFEE
  8977                           fsr0h	equ	0xFEA
  8978                           fsr0l	equ	0xFE9
  8979                           wreg	equ	0xFE8
  8980                           indf2	equ	0xFDF
  8981                           postinc2	equ	0xFDE
  8982                           postdec2	equ	0xFDD
  8983                           plusw2	equ	0xFDB
  8984                           fsr2h	equ	0xFDA
  8985                           fsr2l	equ	0xFD9
  8986                           status	equ	0xFD8
  8987                           
  8988 ;; *************** function _OLED_command *****************
  8989 ;; Defined at:
  8990 ;;		line 10 in file "OLED_Display.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  com             1    wreg     unsigned char 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  com             1   36[COMRAM] unsigned char 
  8995 ;;  status          1   37[COMRAM] enum E8858
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9005 ;;      Params:         0       0       0       0       0       0       0
  9006 ;;      Locals:         2       0       0       0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0
  9008 ;;      Totals:         2       0       0       0       0       0       0
  9009 ;;Total ram usage:        2 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    6
  9012 ;; This function calls:
  9013 ;;		_I2C1_MasterWrite
  9014 ;; This function is called by:
  9015 ;;		_oledGotoYX
  9016 ;;		_OLED_init
  9017 ;;		_Display
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text39
  9022  00279E                     __ptext39:
  9023                           	opt stack 0
  9024  00279E                     _OLED_command:
  9025                           	opt stack 22
  9026                           
  9027                           ;incstack = 0
  9028                           ;OLED_command@com stored from wreg
  9029  00279E  6E25               	movwf	OLED_command@com,c
  9030                           
  9031                           ;OLED_Display.c: 12: Buff[0] = 0x80;
  9032  0027A0  0E80               	movlw	128
  9033  0027A2  0100               	movlb	0	; () banked
  9034  0027A4  6FF0               	movwf	_Buff& (0+255),b
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;OLED_Display.c: 14: Buff[1] = com;
  9038  0027A6  C025  F0F1         	movff	OLED_command@com,_Buff+1
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;OLED_Display.c: 15: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9042  0027AA  0E02               	movlw	2
  9043  0027AC  6E26               	movwf	OLED_command@status,c
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;OLED_Display.c: 17: timeOut = 0;
  9047  0027AE  0E00               	movlw	0
  9048  0027B0  0100               	movlb	0	; () banked
  9049  0027B2  6FDE               	movwf	(_timeOut+1)& (0+255),b
  9050  0027B4  0E00               	movlw	0
  9051  0027B6  6FDD               	movwf	_timeOut& (0+255),b
  9052                           
  9053                           ;OLED_Display.c: 18: while (status != I2C1_MESSAGE_FAIL) {
  9054  0027B8  D02C               	goto	l6104
  9055  0027BA                     l6084:
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;OLED_Display.c: 20: I2C1_MasterWrite(Buff,
  9059                           ;OLED_Display.c: 21: 2,
  9060                           ;OLED_Display.c: 22: 0x3C,
  9061                           ;OLED_Display.c: 23: &status);
  9062  0027BA  0EF0               	movlw	low _Buff
  9063  0027BC  0100               	movlb	0	; () banked
  9064  0027BE  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  9065  0027C0  0E00               	movlw	high _Buff
  9066  0027C2  0100               	movlb	0	; () banked
  9067  0027C4  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  9068  0027C6  0E00               	movlw	0
  9069  0027C8  0100               	movlb	0	; () banked
  9070  0027CA  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  9071  0027CC  0E02               	movlw	2
  9072  0027CE  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  9073  0027D0  0E00               	movlw	0
  9074  0027D2  0100               	movlb	0	; () banked
  9075  0027D4  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  9076  0027D6  0E3C               	movlw	60
  9077  0027D8  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  9078  0027DA  0E26               	movlw	low OLED_command@status
  9079  0027DC  0100               	movlb	0	; () banked
  9080  0027DE  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  9081  0027E0  0E00               	movlw	high OLED_command@status
  9082  0027E2  0100               	movlb	0	; () banked
  9083  0027E4  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  9084  0027E6  ECE1  F015         	call	_I2C1_MasterWrite	;wreg free
  9085  0027EA                     l6086:
  9086  0027EA  0E02               	movlw	2
  9087  0027EC  1826               	xorwf	OLED_command@status,w,c
  9088  0027EE  B4D8               	btfsc	status,2,c
  9089  0027F0  D7FC               	goto	l6086
  9090                           
  9091                           ;OLED_Display.c: 28: if (status == I2C1_MESSAGE_COMPLETE)
  9092  0027F2  5026               	movf	OLED_command@status,w,c
  9093  0027F4  B4D8               	btfsc	status,2,c
  9094  0027F6  0012               	return	
  9095                           
  9096                           ;OLED_Display.c: 30: if (timeOut == 100)
  9097                           
  9098                           ;OLED_Display.c: 29: break;
  9099  0027F8  0E64               	movlw	100
  9100  0027FA  0100               	movlb	0	; () banked
  9101  0027FC  19DD               	xorwf	_timeOut& (0+255),w,b
  9102  0027FE  0100               	movlb	0	; () banked
  9103  002800  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  9104  002802  B4D8               	btfsc	status,2,c
  9105  002804  0012               	return	
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;OLED_Display.c: 32: if (status == I2C1_MESSAGE_FAIL)
  9109                           
  9110                           ; BSR set to: 0
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;OLED_Display.c: 31: break;
  9114  002806  0426               	decf	OLED_command@status,w,c
  9115  002808  B4D8               	btfsc	status,2,c
  9116  00280A  0012               	return	
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;OLED_Display.c: 34: else
  9120                           ;OLED_Display.c: 35: timeOut++;
  9121                           
  9122                           ; BSR set to: 0
  9123                           
  9124                           ; BSR set to: 0
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;OLED_Display.c: 33: break;
  9128  00280C  0100               	movlb	0	; () banked
  9129  00280E  4BDD               	infsnz	_timeOut& (0+255),f,b
  9130  002810  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  9131  002812                     l6104:
  9132                           
  9133                           ; BSR set to: 0
  9134  002812  0426               	decf	OLED_command@status,w,c
  9135  002814  B4D8               	btfsc	status,2,c
  9136  002816  0012               	return	
  9137  002818  D7D0               	goto	l6084
  9138  00281A                     __end_of_OLED_command:
  9139                           	opt stack 0
  9140                           tosu	equ	0xFFF
  9141                           tosh	equ	0xFFE
  9142                           tosl	equ	0xFFD
  9143                           pclath	equ	0xFFA
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           indf0	equ	0xFEF
  9152                           postinc0	equ	0xFEE
  9153                           fsr0h	equ	0xFEA
  9154                           fsr0l	equ	0xFE9
  9155                           wreg	equ	0xFE8
  9156                           indf2	equ	0xFDF
  9157                           postinc2	equ	0xFDE
  9158                           postdec2	equ	0xFDD
  9159                           plusw2	equ	0xFDB
  9160                           fsr2h	equ	0xFDA
  9161                           fsr2l	equ	0xFD9
  9162                           status	equ	0xFD8
  9163                           
  9164 ;; *************** function _SYSTEM_Initialize *****************
  9165 ;; Defined at:
  9166 ;;		line 112 in file "mcc_generated_files/mcc.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9180 ;;      Params:         0       0       0       0       0       0       0
  9181 ;;      Locals:         0       0       0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0
  9183 ;;      Totals:         0       0       0       0       0       0       0
  9184 ;;Total ram usage:        0 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:    7
  9187 ;; This function calls:
  9188 ;;		_ADC_Initialize
  9189 ;;		_EUSART1_Initialize
  9190 ;;		_I2C1_Initialize
  9191 ;;		_INTERRUPT_Initialize
  9192 ;;		_OSCILLATOR_Initialize
  9193 ;;		_PIN_MANAGER_Initialize
  9194 ;;		_TMR0_Initialize
  9195 ;;		_TMR2_Initialize
  9196 ;;		_begin
  9197 ;; This function is called by:
  9198 ;;		_main
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text40
  9203  00288E                     __ptext40:
  9204                           	opt stack 0
  9205  00288E                     _SYSTEM_Initialize:
  9206                           	opt stack 23
  9207                           
  9208                           ;mcc.c: 114: OSCILLATOR_Initialize();
  9209                           
  9210                           ;incstack = 0
  9211  00288E  ECA8  F018         	call	_OSCILLATOR_Initialize	;wreg free
  9212                           
  9213                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9214  002892  ECEE  F014         	call	_PIN_MANAGER_Initialize	;wreg free
  9215                           
  9216                           ;mcc.c: 116: INTERRUPT_Initialize();
  9217  002896  EC91  F018         	call	_INTERRUPT_Initialize	;wreg free
  9218                           
  9219                           ;mcc.c: 117: ADC_Initialize();
  9220  00289A  EC5B  F018         	call	_ADC_Initialize	;wreg free
  9221                           
  9222                           ;mcc.c: 118: TMR0_Initialize();
  9223  00289E  EC20  F018         	call	_TMR0_Initialize	;wreg free
  9224                           
  9225                           ;mcc.c: 119: TMR2_Initialize();
  9226  0028A2  EC0F  F018         	call	_TMR2_Initialize	;wreg free
  9227                           
  9228                           ;mcc.c: 120: EUSART1_Initialize();
  9229  0028A6  ECDF  F016         	call	_EUSART1_Initialize	;wreg free
  9230                           
  9231                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  9232  0028AA  0E00               	movlw	low _receiveArray
  9233  0028AC  0101               	movlb	1	; () banked
  9234  0028AE  6F39               	movwf	begin@ptr& (0+255),b
  9235  0028B0  0E01               	movlw	high _receiveArray
  9236  0028B2  0101               	movlb	1	; () banked
  9237  0028B4  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  9238  0028B6  0E28               	movlw	40
  9239  0028B8  0101               	movlb	1	; () banked
  9240  0028BA  6F3B               	movwf	begin@maxSize& (0+255),b
  9241  0028BC  0E03               	movlw	3
  9242  0028BE  0101               	movlb	1	; () banked
  9243  0028C0  6F3C               	movwf	begin@givenAddress& (0+255),b
  9244  0028C2  0E00               	movlw	0
  9245  0028C4  0101               	movlb	1	; () banked
  9246  0028C6  6F3D               	movwf	begin@error& (0+255),b
  9247  0028C8  0ED2               	movlw	low _Send_put
  9248  0028CA  0101               	movlb	1	; () banked
  9249  0028CC  6F3E               	movwf	begin@stufftosend& (0+255),b
  9250  0028CE  0E2E               	movlw	high _Send_put
  9251  0028D0  0101               	movlb	1	; () banked
  9252  0028D2  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  9253  0028D4  0E42               	movlw	low _Receive_get
  9254  0028D6  0101               	movlb	1	; () banked
  9255  0028D8  6F40               	movwf	begin@stufftoreceive& (0+255),b
  9256  0028DA  0E31               	movlw	high _Receive_get
  9257  0028DC  0101               	movlb	1	; () banked
  9258  0028DE  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  9259  0028E0  0ECE               	movlw	low _Receive_available
  9260  0028E2  0101               	movlb	1	; () banked
  9261  0028E4  6F42               	movwf	begin@stuffavailable& (0+255),b
  9262  0028E6  0E30               	movlw	high _Receive_available
  9263  0028E8  0101               	movlb	1	; () banked
  9264  0028EA  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  9265  0028EC  0E34               	movlw	low _Receive_peek
  9266  0028EE  0101               	movlb	1	; () banked
  9267  0028F0  6F44               	movwf	begin@stuffpeek& (0+255),b
  9268  0028F2  0E31               	movlw	high _Receive_peek
  9269  0028F4  0101               	movlb	1	; () banked
  9270  0028F6  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  9271  0028F8  EC86  F015         	call	_begin	;wreg free
  9272                           
  9273                           ;mcc.c: 122: I2C1_Initialize();
  9274  0028FC  ECC1  F016         	call	_I2C1_Initialize	;wreg free
  9275  002900  0012               	return		;funcret
  9276  002902                     __end_of_SYSTEM_Initialize:
  9277                           	opt stack 0
  9278                           tosu	equ	0xFFF
  9279                           tosh	equ	0xFFE
  9280                           tosl	equ	0xFFD
  9281                           pclath	equ	0xFFA
  9282                           tblptru	equ	0xFF8
  9283                           tblptrh	equ	0xFF7
  9284                           tblptrl	equ	0xFF6
  9285                           tablat	equ	0xFF5
  9286                           prodh	equ	0xFF4
  9287                           prodl	equ	0xFF3
  9288                           intcon	equ	0xFF2
  9289                           indf0	equ	0xFEF
  9290                           postinc0	equ	0xFEE
  9291                           fsr0h	equ	0xFEA
  9292                           fsr0l	equ	0xFE9
  9293                           wreg	equ	0xFE8
  9294                           indf2	equ	0xFDF
  9295                           postinc2	equ	0xFDE
  9296                           postdec2	equ	0xFDD
  9297                           plusw2	equ	0xFDB
  9298                           fsr2h	equ	0xFDA
  9299                           fsr2l	equ	0xFD9
  9300                           status	equ	0xFD8
  9301                           
  9302 ;; *************** function _begin *****************
  9303 ;; Defined at:
  9304 ;;		line 19 in file "FastTransfer.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  9307 ;;		 -> receiveArray(40), 
  9308 ;;  maxSize         1    2[BANK1 ] unsigned char 
  9309 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  9310 ;;  error           1    4[BANK1 ] unsigned char 
  9311 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  9312 ;;		 -> Send_put(1), 
  9313 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  9314 ;;		 -> Receive_get(1), 
  9315 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  9316 ;;		 -> Receive_available(2), 
  9317 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  9318 ;;		 -> Receive_peek(1), 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, status,2, status,0, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9330 ;;      Params:         0       0      13       0       0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0
  9333 ;;      Totals:         0       0      13       0       0       0       0
  9334 ;;Total ram usage:       13 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:    5
  9337 ;; This function calls:
  9338 ;;		___awdiv
  9339 ;; This function is called by:
  9340 ;;		_SYSTEM_Initialize
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text41
  9345  002B0C                     __ptext41:
  9346                           	opt stack 0
  9347  002B0C                     _begin:
  9348                           	opt stack 24
  9349                           
  9350                           ;FastTransfer.c: 20: receiveArrayAddress = ptr;
  9351                           
  9352                           ;incstack = 0
  9353  002B0C  C139  F0D7         	movff	begin@ptr,_receiveArrayAddress
  9354  002B10  C13A  F0D8         	movff	begin@ptr+1,_receiveArrayAddress+1
  9355                           
  9356                           ;FastTransfer.c: 21: moduleAddress = givenAddress;
  9357  002B14  C13C  F03A         	movff	begin@givenAddress,_moduleAddress
  9358                           
  9359                           ;FastTransfer.c: 22: serial_write = stufftosend;
  9360  002B18  C13E  F033         	movff	begin@stufftosend,_serial_write
  9361  002B1C  C13F  F034         	movff	begin@stufftosend+1,_serial_write+1
  9362                           
  9363                           ;FastTransfer.c: 23: serial_available = stuffavailable;
  9364  002B20  C142  F02F         	movff	begin@stuffavailable,_serial_available
  9365  002B24  C143  F030         	movff	begin@stuffavailable+1,_serial_available+1
  9366                           
  9367                           ;FastTransfer.c: 24: serial_peek = stuffpeek;
  9368  002B28  C144  F0DB         	movff	begin@stuffpeek,_serial_peek
  9369  002B2C  C145  F0DC         	movff	begin@stuffpeek+1,_serial_peek+1
  9370                           
  9371                           ;FastTransfer.c: 25: serial_read = stufftoreceive;
  9372  002B30  C140  F031         	movff	begin@stufftoreceive,_serial_read
  9373  002B34  C141  F032         	movff	begin@stufftoreceive+1,_serial_read+1
  9374                           
  9375                           ;FastTransfer.c: 26: maxDataAddress = maxSize / 2;
  9376  002B38  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  9377  002B3C  6A1C               	clrf	___awdiv@dividend+1,c
  9378  002B3E  0E00               	movlw	0
  9379  002B40  6E1E               	movwf	___awdiv@divisor+1,c
  9380  002B42  0E02               	movlw	2
  9381  002B44  6E1D               	movwf	___awdiv@divisor,c
  9382  002B46  EC4C  F013         	call	___awdiv	;wreg free
  9383  002B4A  501B               	movf	?___awdiv,w,c
  9384  002B4C  6E39               	movwf	_maxDataAddress,c
  9385                           
  9386                           ;FastTransfer.c: 27: sendStructAddress = (unsigned char*) & ring_buffer;
  9387  002B4E  0E00               	movlw	low _ring_buffer
  9388  002B50  0100               	movlb	0	; () banked
  9389  002B52  6FD9               	movwf	_sendStructAddress& (0+255),b
  9390  002B54  0E02               	movlw	high _ring_buffer
  9391  002B56  0100               	movlb	0	; () banked
  9392  002B58  6FDA               	movwf	(_sendStructAddress+1)& (0+255),b
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;FastTransfer.c: 28: AKNAKsend = error;
  9396  002B5A  C13D  F036         	movff	begin@error,_AKNAKsend
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;FastTransfer.c: 29: alignErrorCounter = 0;
  9400  002B5E  0E00               	movlw	0
  9401  002B60  0100               	movlb	0	; () banked
  9402  002B62  6FCA               	movwf	(_alignErrorCounter+1)& (0+255),b
  9403  002B64  0E00               	movlw	0
  9404  002B66  6FC9               	movwf	_alignErrorCounter& (0+255),b
  9405                           
  9406                           ; BSR set to: 0
  9407  002B68  0012               	return		;funcret
  9408  002B6A                     __end_of_begin:
  9409                           	opt stack 0
  9410                           tosu	equ	0xFFF
  9411                           tosh	equ	0xFFE
  9412                           tosl	equ	0xFFD
  9413                           pclath	equ	0xFFA
  9414                           tblptru	equ	0xFF8
  9415                           tblptrh	equ	0xFF7
  9416                           tblptrl	equ	0xFF6
  9417                           tablat	equ	0xFF5
  9418                           prodh	equ	0xFF4
  9419                           prodl	equ	0xFF3
  9420                           intcon	equ	0xFF2
  9421                           indf0	equ	0xFEF
  9422                           postinc0	equ	0xFEE
  9423                           fsr0h	equ	0xFEA
  9424                           fsr0l	equ	0xFE9
  9425                           wreg	equ	0xFE8
  9426                           indf2	equ	0xFDF
  9427                           postinc2	equ	0xFDE
  9428                           postdec2	equ	0xFDD
  9429                           plusw2	equ	0xFDB
  9430                           fsr2h	equ	0xFDA
  9431                           fsr2l	equ	0xFD9
  9432                           status	equ	0xFD8
  9433                           
  9434 ;; *************** function _TMR2_Initialize *****************
  9435 ;; Defined at:
  9436 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      void 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0, cstack
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9450 ;;      Params:         0       0       0       0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0
  9453 ;;      Totals:         0       0       0       0       0       0       0
  9454 ;;Total ram usage:        0 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:    5
  9457 ;; This function calls:
  9458 ;;		_TMR2_SetInterruptHandler
  9459 ;;		_TMR2_StartTimer
  9460 ;; This function is called by:
  9461 ;;		_SYSTEM_Initialize
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text42
  9466  00301E                     __ptext42:
  9467                           	opt stack 0
  9468  00301E                     _TMR2_Initialize:
  9469                           	opt stack 24
  9470                           
  9471                           ;tmr2.c: 67: T2CON = 0x7E;
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;incstack = 0
  9475  00301E  0E7E               	movlw	126
  9476  003020  6EBA               	movwf	4026,c	;volatile
  9477                           
  9478                           ;tmr2.c: 70: PR2 = 0x30;
  9479  003022  0E30               	movlw	48
  9480  003024  6EBB               	movwf	4027,c	;volatile
  9481                           
  9482                           ;tmr2.c: 73: TMR2 = 0x00;
  9483  003026  0E00               	movlw	0
  9484  003028  6EBC               	movwf	4028,c	;volatile
  9485                           
  9486                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  9487  00302A  929E               	bcf	3998,1,c	;volatile
  9488                           
  9489                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  9490  00302C  829D               	bsf	3997,1,c	;volatile
  9491                           
  9492                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  9493  00302E  0E94               	movlw	low _TMR2_DefaultInterruptHandler
  9494  003030  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  9495  003032  0E31               	movlw	high _TMR2_DefaultInterruptHandler
  9496  003034  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  9497  003036  ECB4  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  9498                           
  9499                           ;tmr2.c: 85: TMR2_StartTimer();
  9500  00303A  ECC4  F018         	call	_TMR2_StartTimer	;wreg free
  9501  00303E  0012               	return		;funcret
  9502  003040                     __end_of_TMR2_Initialize:
  9503                           	opt stack 0
  9504                           tosu	equ	0xFFF
  9505                           tosh	equ	0xFFE
  9506                           tosl	equ	0xFFD
  9507                           pclath	equ	0xFFA
  9508                           tblptru	equ	0xFF8
  9509                           tblptrh	equ	0xFF7
  9510                           tblptrl	equ	0xFF6
  9511                           tablat	equ	0xFF5
  9512                           prodh	equ	0xFF4
  9513                           prodl	equ	0xFF3
  9514                           intcon	equ	0xFF2
  9515                           indf0	equ	0xFEF
  9516                           postinc0	equ	0xFEE
  9517                           fsr0h	equ	0xFEA
  9518                           fsr0l	equ	0xFE9
  9519                           wreg	equ	0xFE8
  9520                           indf2	equ	0xFDF
  9521                           postinc2	equ	0xFDE
  9522                           postdec2	equ	0xFDD
  9523                           plusw2	equ	0xFDB
  9524                           fsr2h	equ	0xFDA
  9525                           fsr2l	equ	0xFD9
  9526                           status	equ	0xFD8
  9527                           
  9528 ;; *************** function _TMR2_StartTimer *****************
  9529 ;; Defined at:
  9530 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;		None
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		None
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9544 ;;      Params:         0       0       0       0       0       0       0
  9545 ;;      Locals:         0       0       0       0       0       0       0
  9546 ;;      Temps:          0       0       0       0       0       0       0
  9547 ;;      Totals:         0       0       0       0       0       0       0
  9548 ;;Total ram usage:        0 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    4
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_TMR2_Initialize
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text43
  9559  003188                     __ptext43:
  9560                           	opt stack 0
  9561  003188                     _TMR2_StartTimer:
  9562                           	opt stack 24
  9563                           
  9564                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  9565                           
  9566                           ;incstack = 0
  9567  003188  84BA               	bsf	4026,2,c	;volatile
  9568  00318A  0012               	return		;funcret
  9569  00318C                     __end_of_TMR2_StartTimer:
  9570                           	opt stack 0
  9571                           tosu	equ	0xFFF
  9572                           tosh	equ	0xFFE
  9573                           tosl	equ	0xFFD
  9574                           pclath	equ	0xFFA
  9575                           tblptru	equ	0xFF8
  9576                           tblptrh	equ	0xFF7
  9577                           tblptrl	equ	0xFF6
  9578                           tablat	equ	0xFF5
  9579                           prodh	equ	0xFF4
  9580                           prodl	equ	0xFF3
  9581                           intcon	equ	0xFF2
  9582                           indf0	equ	0xFEF
  9583                           postinc0	equ	0xFEE
  9584                           fsr0h	equ	0xFEA
  9585                           fsr0l	equ	0xFE9
  9586                           wreg	equ	0xFE8
  9587                           indf2	equ	0xFDF
  9588                           postinc2	equ	0xFDE
  9589                           postdec2	equ	0xFDD
  9590                           plusw2	equ	0xFDB
  9591                           fsr2h	equ	0xFDA
  9592                           fsr2l	equ	0xFD9
  9593                           status	equ	0xFD8
  9594                           
  9595 ;; *************** function _TMR2_SetInterruptHandler *****************
  9596 ;; Defined at:
  9597 ;;		line 291 in file "mcc_generated_files/tmr2.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  InterruptHan    2   26[COMRAM] PTR void 
  9600 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;		None
  9603 ;; Return value:  Size  Location     Type
  9604 ;;                  1    wreg      void 
  9605 ;; Registers used:
  9606 ;;		wreg, status,2, status,0
  9607 ;; Tracked objects:
  9608 ;;		On entry : 0/0
  9609 ;;		On exit  : 0/0
  9610 ;;		Unchanged: 0/0
  9611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9612 ;;      Params:         2       0       0       0       0       0       0
  9613 ;;      Locals:         0       0       0       0       0       0       0
  9614 ;;      Temps:          0       0       0       0       0       0       0
  9615 ;;      Totals:         2       0       0       0       0       0       0
  9616 ;;Total ram usage:        2 bytes
  9617 ;; Hardware stack levels used:    1
  9618 ;; Hardware stack levels required when called:    4
  9619 ;; This function calls:
  9620 ;;		Nothing
  9621 ;; This function is called by:
  9622 ;;		_TMR2_Initialize
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text44
  9627  003168                     __ptext44:
  9628                           	opt stack 0
  9629  003168                     _TMR2_SetInterruptHandler:
  9630                           	opt stack 24
  9631                           
  9632                           ;tmr2.c: 292: TMR2_InterruptHandler = InterruptHandler;
  9633                           
  9634                           ;incstack = 0
  9635  003168  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9636  00316C  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9637  003170  0012               	return		;funcret
  9638  003172                     __end_of_TMR2_SetInterruptHandler:
  9639                           	opt stack 0
  9640                           tosu	equ	0xFFF
  9641                           tosh	equ	0xFFE
  9642                           tosl	equ	0xFFD
  9643                           pclath	equ	0xFFA
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           indf0	equ	0xFEF
  9652                           postinc0	equ	0xFEE
  9653                           fsr0h	equ	0xFEA
  9654                           fsr0l	equ	0xFE9
  9655                           wreg	equ	0xFE8
  9656                           indf2	equ	0xFDF
  9657                           postinc2	equ	0xFDE
  9658                           postdec2	equ	0xFDD
  9659                           plusw2	equ	0xFDB
  9660                           fsr2h	equ	0xFDA
  9661                           fsr2l	equ	0xFD9
  9662                           status	equ	0xFD8
  9663                           
  9664 ;; *************** function _TMR0_Initialize *****************
  9665 ;; Defined at:
  9666 ;;		line 23 in file "mcc_generated_files/tmr0.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;		None
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, status,2, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9680 ;;      Params:         0       0       0       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0       0       0
  9682 ;;      Temps:          0       0       0       0       0       0       0
  9683 ;;      Totals:         0       0       0       0       0       0       0
  9684 ;;Total ram usage:        0 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:    5
  9687 ;; This function calls:
  9688 ;;		_TMR0_StartTimer
  9689 ;; This function is called by:
  9690 ;;		_SYSTEM_Initialize
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           	psect	text45
  9695  003040                     __ptext45:
  9696                           	opt stack 0
  9697  003040                     _TMR0_Initialize:
  9698                           	opt stack 24
  9699                           
  9700                           ;tmr0.c: 27: T0CON = 0x94;
  9701                           
  9702                           ;incstack = 0
  9703  003040  0E94               	movlw	148
  9704  003042  6ED5               	movwf	4053,c	;volatile
  9705                           
  9706                           ;tmr0.c: 30: TMR0H = 0xCF;
  9707  003044  0ECF               	movlw	207
  9708  003046  6ED7               	movwf	4055,c	;volatile
  9709                           
  9710                           ;tmr0.c: 33: TMR0L = 0x2C;
  9711  003048  0E2C               	movlw	44
  9712  00304A  6ED6               	movwf	4054,c	;volatile
  9713                           
  9714                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  9715  00304C  0ECF               	movlw	207
  9716  00304E  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  9717  003050  0E2C               	movlw	44
  9718  003052  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  9719                           
  9720                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  9721  003054  94F2               	bcf	intcon,2,c	;volatile
  9722                           
  9723                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  9724  003056  8AF2               	bsf	intcon,5,c	;volatile
  9725                           
  9726                           ;tmr0.c: 45: TMR0_StartTimer();
  9727  003058  ECC6  F018         	call	_TMR0_StartTimer	;wreg free
  9728  00305C  0012               	return		;funcret
  9729  00305E                     __end_of_TMR0_Initialize:
  9730                           	opt stack 0
  9731                           tosu	equ	0xFFF
  9732                           tosh	equ	0xFFE
  9733                           tosl	equ	0xFFD
  9734                           pclath	equ	0xFFA
  9735                           tblptru	equ	0xFF8
  9736                           tblptrh	equ	0xFF7
  9737                           tblptrl	equ	0xFF6
  9738                           tablat	equ	0xFF5
  9739                           prodh	equ	0xFF4
  9740                           prodl	equ	0xFF3
  9741                           intcon	equ	0xFF2
  9742                           indf0	equ	0xFEF
  9743                           postinc0	equ	0xFEE
  9744                           fsr0h	equ	0xFEA
  9745                           fsr0l	equ	0xFE9
  9746                           wreg	equ	0xFE8
  9747                           indf2	equ	0xFDF
  9748                           postinc2	equ	0xFDE
  9749                           postdec2	equ	0xFDD
  9750                           plusw2	equ	0xFDB
  9751                           fsr2h	equ	0xFDA
  9752                           fsr2l	equ	0xFD9
  9753                           status	equ	0xFD8
  9754                           
  9755 ;; *************** function _TMR0_StartTimer *****************
  9756 ;; Defined at:
  9757 ;;		line 48 in file "mcc_generated_files/tmr0.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;		None
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;		None
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      void 
  9764 ;; Registers used:
  9765 ;;		None
  9766 ;; Tracked objects:
  9767 ;;		On entry : 0/0
  9768 ;;		On exit  : 0/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9771 ;;      Params:         0       0       0       0       0       0       0
  9772 ;;      Locals:         0       0       0       0       0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0
  9774 ;;      Totals:         0       0       0       0       0       0       0
  9775 ;;Total ram usage:        0 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:    4
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_TMR0_Initialize
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text46
  9786  00318C                     __ptext46:
  9787                           	opt stack 0
  9788  00318C                     _TMR0_StartTimer:
  9789                           	opt stack 24
  9790                           
  9791                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
  9792                           
  9793                           ;incstack = 0
  9794  00318C  8ED5               	bsf	4053,7,c	;volatile
  9795  00318E  0012               	return		;funcret
  9796  003190                     __end_of_TMR0_StartTimer:
  9797                           	opt stack 0
  9798                           tosu	equ	0xFFF
  9799                           tosh	equ	0xFFE
  9800                           tosl	equ	0xFFD
  9801                           pclath	equ	0xFFA
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           indf0	equ	0xFEF
  9810                           postinc0	equ	0xFEE
  9811                           fsr0h	equ	0xFEA
  9812                           fsr0l	equ	0xFE9
  9813                           wreg	equ	0xFE8
  9814                           indf2	equ	0xFDF
  9815                           postinc2	equ	0xFDE
  9816                           postdec2	equ	0xFDD
  9817                           plusw2	equ	0xFDB
  9818                           fsr2h	equ	0xFDA
  9819                           fsr2l	equ	0xFD9
  9820                           status	equ	0xFD8
  9821                           
  9822 ;; *************** function _PIN_MANAGER_Initialize *****************
  9823 ;; Defined at:
  9824 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9838 ;;      Params:         0       0       0       0       0       0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0
  9841 ;;      Totals:         0       0       0       0       0       0       0
  9842 ;;Total ram usage:        0 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:    4
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_SYSTEM_Initialize
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           	psect	text47
  9853  0029DC                     __ptext47:
  9854                           	opt stack 0
  9855  0029DC                     _PIN_MANAGER_Initialize:
  9856                           	opt stack 25
  9857                           
  9858                           ;pin_manager.c: 52: LATA = 0x00;
  9859                           
  9860                           ;incstack = 0
  9861  0029DC  0E00               	movlw	0
  9862  0029DE  6E89               	movwf	3977,c	;volatile
  9863                           
  9864                           ;pin_manager.c: 53: TRISA = 0xF7;
  9865  0029E0  0EF7               	movlw	247
  9866  0029E2  6E92               	movwf	3986,c	;volatile
  9867                           
  9868                           ;pin_manager.c: 54: ANSELA = 0x20;
  9869  0029E4  0E20               	movlw	32
  9870  0029E6  010F               	movlb	15	; () banked
  9871  0029E8  6F38               	movwf	56,b	;volatile
  9872                           
  9873                           ;pin_manager.c: 56: LATB = 0x00;
  9874  0029EA  0E00               	movlw	0
  9875  0029EC  6E8A               	movwf	3978,c	;volatile
  9876                           
  9877                           ;pin_manager.c: 57: TRISB = 0xD7;
  9878  0029EE  0ED7               	movlw	215
  9879  0029F0  6E93               	movwf	3987,c	;volatile
  9880                           
  9881                           ;pin_manager.c: 58: ANSELB = 0x00;
  9882  0029F2  0E00               	movlw	0
  9883  0029F4  010F               	movlb	15	; () banked
  9884  0029F6  6F39               	movwf	57,b	;volatile
  9885                           
  9886                           ;pin_manager.c: 59: WPUB = 0x00;
  9887  0029F8  0E00               	movlw	0
  9888  0029FA  6E61               	movwf	3937,c	;volatile
  9889                           
  9890                           ;pin_manager.c: 61: LATC = 0x18;
  9891  0029FC  0E18               	movlw	24
  9892  0029FE  6E8B               	movwf	3979,c	;volatile
  9893                           
  9894                           ;pin_manager.c: 62: TRISC = 0xDF;
  9895  002A00  0EDF               	movlw	223
  9896  002A02  6E94               	movwf	3988,c	;volatile
  9897                           
  9898                           ;pin_manager.c: 65: LATD = 0x00;
  9899  002A04  0E00               	movlw	0
  9900  002A06  6E8C               	movwf	3980,c	;volatile
  9901                           
  9902                           ;pin_manager.c: 66: TRISD = 0xFD;
  9903  002A08  0EFD               	movlw	253
  9904  002A0A  6E95               	movwf	3989,c	;volatile
  9905                           
  9906                           ;pin_manager.c: 67: ANSELD = 0xDD;
  9907  002A0C  0EDD               	movlw	221
  9908  002A0E  010F               	movlb	15	; () banked
  9909  002A10  6F3B               	movwf	59,b	;volatile
  9910                           
  9911                           ;pin_manager.c: 69: LATE = 0x00;
  9912  002A12  0E00               	movlw	0
  9913  002A14  6E8D               	movwf	3981,c	;volatile
  9914                           
  9915                           ;pin_manager.c: 70: TRISE = 0x00;
  9916  002A16  0E00               	movlw	0
  9917  002A18  6E96               	movwf	3990,c	;volatile
  9918                           
  9919                           ;pin_manager.c: 71: ANSELE = 0x00;
  9920  002A1A  0E00               	movlw	0
  9921  002A1C  010F               	movlb	15	; () banked
  9922  002A1E  6F3C               	movwf	60,b	;volatile
  9923                           
  9924                           ;pin_manager.c: 73: ANSELC = 0xE4;
  9925  002A20  0EE4               	movlw	228
  9926  002A22  010F               	movlb	15	; () banked
  9927  002A24  6F3A               	movwf	58,b	;volatile
  9928                           
  9929                           ; BSR set to: 15
  9930                           ;pin_manager.c: 76: TRISCbits.RC5 = 0;
  9931  002A26  9A94               	bcf	3988,5,c	;volatile
  9932                           
  9933                           ; BSR set to: 15
  9934                           ;pin_manager.c: 77: ANSELCbits.ANSC5 = 0;
  9935  002A28  010F               	movlb	15	; () banked
  9936  002A2A  9B3A               	bcf	58,5,b	;volatile
  9937                           
  9938                           ; BSR set to: 15
  9939                           ;pin_manager.c: 78: LATCbits.LATC5 = 0;
  9940  002A2C  9A8B               	bcf	3979,5,c	;volatile
  9941                           
  9942                           ; BSR set to: 15
  9943                           ;pin_manager.c: 80: TRISCbits.TRISC5=0;
  9944  002A2E  9A94               	bcf	3988,5,c	;volatile
  9945                           
  9946                           ; BSR set to: 15
  9947                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 0x01;
  9948  002A30  8EF1               	bsf	intcon2,7,c	;volatile
  9949                           
  9950                           ; BSR set to: 15
  9951                           ;pin_manager.c: 84: TRISAbits.RA3 = 0;
  9952  002A32  9692               	bcf	3986,3,c	;volatile
  9953                           
  9954                           ; BSR set to: 15
  9955                           ;pin_manager.c: 85: ANSELAbits.ANSA3 = 0;
  9956  002A34  010F               	movlb	15	; () banked
  9957  002A36  9738               	bcf	56,3,b	;volatile
  9958                           
  9959                           ; BSR set to: 15
  9960                           ;pin_manager.c: 88: TRISCbits.RC6 = 0;
  9961  002A38  9C94               	bcf	3988,6,c	;volatile
  9962                           
  9963                           ; BSR set to: 15
  9964                           ;pin_manager.c: 89: TRISCbits.RC7 = 1;
  9965  002A3A  8E94               	bsf	3988,7,c	;volatile
  9966                           
  9967                           ; BSR set to: 15
  9968                           ;pin_manager.c: 90: ANSELCbits.ANSC6 = 0;
  9969  002A3C  010F               	movlb	15	; () banked
  9970  002A3E  9D3A               	bcf	58,6,b	;volatile
  9971                           
  9972                           ; BSR set to: 15
  9973                           ;pin_manager.c: 91: ANSELCbits.ANSC7 = 0;
  9974  002A40  010F               	movlb	15	; () banked
  9975  002A42  9F3A               	bcf	58,7,b	;volatile
  9976                           
  9977                           ; BSR set to: 15
  9978  002A44  0012               	return		;funcret
  9979  002A46                     __end_of_PIN_MANAGER_Initialize:
  9980                           	opt stack 0
  9981                           tosu	equ	0xFFF
  9982                           tosh	equ	0xFFE
  9983                           tosl	equ	0xFFD
  9984                           pclath	equ	0xFFA
  9985                           tblptru	equ	0xFF8
  9986                           tblptrh	equ	0xFF7
  9987                           tblptrl	equ	0xFF6
  9988                           tablat	equ	0xFF5
  9989                           prodh	equ	0xFF4
  9990                           prodl	equ	0xFF3
  9991                           intcon	equ	0xFF2
  9992                           intcon2	equ	0xFF1
  9993                           indf0	equ	0xFEF
  9994                           postinc0	equ	0xFEE
  9995                           fsr0h	equ	0xFEA
  9996                           fsr0l	equ	0xFE9
  9997                           wreg	equ	0xFE8
  9998                           indf2	equ	0xFDF
  9999                           postinc2	equ	0xFDE
 10000                           postdec2	equ	0xFDD
 10001                           plusw2	equ	0xFDB
 10002                           fsr2h	equ	0xFDA
 10003                           fsr2l	equ	0xFD9
 10004                           status	equ	0xFD8
 10005                           
 10006 ;; *************** function _OSCILLATOR_Initialize *****************
 10007 ;; Defined at:
 10008 ;;		line 125 in file "mcc_generated_files/mcc.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;		None
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10022 ;;      Params:         0       0       0       0       0       0       0
 10023 ;;      Locals:         0       0       0       0       0       0       0
 10024 ;;      Temps:          0       0       0       0       0       0       0
 10025 ;;      Totals:         0       0       0       0       0       0       0
 10026 ;;Total ram usage:        0 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; Hardware stack levels required when called:    4
 10029 ;; This function calls:
 10030 ;;		Nothing
 10031 ;; This function is called by:
 10032 ;;		_SYSTEM_Initialize
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text48
 10037  003150                     __ptext48:
 10038                           	opt stack 0
 10039  003150                     _OSCILLATOR_Initialize:
 10040                           	opt stack 25
 10041                           
 10042                           ;mcc.c: 128: OSCCON = 0x72;
 10043                           
 10044                           ; BSR set to: 15
 10045                           ;incstack = 0
 10046  003150  0E72               	movlw	114
 10047  003152  6ED3               	movwf	4051,c	;volatile
 10048                           
 10049                           ;mcc.c: 130: OSCCON2 = 0x04;
 10050  003154  0E04               	movlw	4
 10051  003156  6ED2               	movwf	4050,c	;volatile
 10052                           
 10053                           ;mcc.c: 132: OSCTUNE = 0x00;
 10054  003158  0E00               	movlw	0
 10055  00315A  6E9B               	movwf	3995,c	;volatile
 10056  00315C  0012               	return		;funcret
 10057  00315E                     __end_of_OSCILLATOR_Initialize:
 10058                           	opt stack 0
 10059                           tosu	equ	0xFFF
 10060                           tosh	equ	0xFFE
 10061                           tosl	equ	0xFFD
 10062                           pclath	equ	0xFFA
 10063                           tblptru	equ	0xFF8
 10064                           tblptrh	equ	0xFF7
 10065                           tblptrl	equ	0xFF6
 10066                           tablat	equ	0xFF5
 10067                           prodh	equ	0xFF4
 10068                           prodl	equ	0xFF3
 10069                           intcon	equ	0xFF2
 10070                           intcon2	equ	0xFF1
 10071                           indf0	equ	0xFEF
 10072                           postinc0	equ	0xFEE
 10073                           fsr0h	equ	0xFEA
 10074                           fsr0l	equ	0xFE9
 10075                           wreg	equ	0xFE8
 10076                           indf2	equ	0xFDF
 10077                           postinc2	equ	0xFDE
 10078                           postdec2	equ	0xFDD
 10079                           plusw2	equ	0xFDB
 10080                           fsr2h	equ	0xFDA
 10081                           fsr2l	equ	0xFD9
 10082                           status	equ	0xFD8
 10083                           
 10084 ;; *************** function _INTERRUPT_Initialize *****************
 10085 ;; Defined at:
 10086 ;;		line 8 in file "mcc_generated_files/interrupt_manager.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;		None
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;		None
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		None
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10100 ;;      Params:         0       0       0       0       0       0       0
 10101 ;;      Locals:         0       0       0       0       0       0       0
 10102 ;;      Temps:          0       0       0       0       0       0       0
 10103 ;;      Totals:         0       0       0       0       0       0       0
 10104 ;;Total ram usage:        0 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:    4
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_SYSTEM_Initialize
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text49
 10115  003122                     __ptext49:
 10116                           	opt stack 0
 10117  003122                     _INTERRUPT_Initialize:
 10118                           	opt stack 25
 10119                           
 10120                           ;interrupt_manager.c: 11: RCONbits.IPEN = 0;
 10121                           
 10122                           ;incstack = 0
 10123  003122  9ED0               	bcf	4048,7,c	;volatile
 10124                           
 10125                           ;interrupt_manager.c: 16: IPR1bits.RC1IP = 0;
 10126  003124  9A9F               	bcf	3999,5,c	;volatile
 10127                           
 10128                           ;interrupt_manager.c: 18: IPR1bits.TX1IP = 0;
 10129  003126  989F               	bcf	3999,4,c	;volatile
 10130                           
 10131                           ;interrupt_manager.c: 20: INTCON2bits.TMR0IP = 0;
 10132  003128  94F1               	bcf	intcon2,2,c	;volatile
 10133                           
 10134                           ;interrupt_manager.c: 22: IPR1bits.ADIP = 0;
 10135  00312A  9C9F               	bcf	3999,6,c	;volatile
 10136                           
 10137                           ;interrupt_manager.c: 24: IPR1bits.SSP1IP = 0;
 10138  00312C  969F               	bcf	3999,3,c	;volatile
 10139                           
 10140                           ;interrupt_manager.c: 26: IPR2bits.BCL1IP = 0;
 10141  00312E  96A2               	bcf	4002,3,c	;volatile
 10142                           
 10143                           ;interrupt_manager.c: 27: IPR1bits.TMR2IP=0;
 10144  003130  929F               	bcf	3999,1,c	;volatile
 10145  003132  0012               	return		;funcret
 10146  003134                     __end_of_INTERRUPT_Initialize:
 10147                           	opt stack 0
 10148                           tosu	equ	0xFFF
 10149                           tosh	equ	0xFFE
 10150                           tosl	equ	0xFFD
 10151                           pclath	equ	0xFFA
 10152                           tblptru	equ	0xFF8
 10153                           tblptrh	equ	0xFF7
 10154                           tblptrl	equ	0xFF6
 10155                           tablat	equ	0xFF5
 10156                           prodh	equ	0xFF4
 10157                           prodl	equ	0xFF3
 10158                           intcon	equ	0xFF2
 10159                           intcon2	equ	0xFF1
 10160                           indf0	equ	0xFEF
 10161                           postinc0	equ	0xFEE
 10162                           fsr0h	equ	0xFEA
 10163                           fsr0l	equ	0xFE9
 10164                           wreg	equ	0xFE8
 10165                           indf2	equ	0xFDF
 10166                           postinc2	equ	0xFDE
 10167                           postdec2	equ	0xFDD
 10168                           plusw2	equ	0xFDB
 10169                           fsr2h	equ	0xFDA
 10170                           fsr2l	equ	0xFD9
 10171                           status	equ	0xFD8
 10172                           
 10173 ;; *************** function _I2C1_Initialize *****************
 10174 ;; Defined at:
 10175 ;;		line 151 in file "mcc_generated_files/i2c1.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;		None
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10189 ;;      Params:         0       0       0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0       0       0
 10192 ;;      Totals:         0       0       0       0       0       0       0
 10193 ;;Total ram usage:        0 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    4
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_SYSTEM_Initialize
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text50
 10204  002D82                     __ptext50:
 10205                           	opt stack 0
 10206  002D82                     _I2C1_Initialize:
 10207                           	opt stack 25
 10208                           
 10209                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
 10210                           
 10211                           ;incstack = 0
 10212  002D82  0EEB               	movlw	low _i2c1_tr_queue
 10213  002D84  0100               	movlb	0	; () banked
 10214  002D86  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 10215  002D88  0E00               	movlw	high _i2c1_tr_queue
 10216  002D8A  0100               	movlb	0	; () banked
 10217  002D8C  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 10218                           
 10219                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
 10220  002D8E  0EEB               	movlw	low _i2c1_tr_queue
 10221  002D90  0100               	movlb	0	; () banked
 10222  002D92  6FB8               	movwf	_i2c1_object& (0+255),b
 10223  002D94  0E00               	movlw	high _i2c1_tr_queue
 10224  002D96  0100               	movlb	0	; () banked
 10225  002D98  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
 10229  002D9A  0100               	movlb	0	; () banked
 10230  002D9C  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
 10234  002D9E  0100               	movlb	0	; () banked
 10235  002DA0  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
 10239  002DA2  0E00               	movlw	0
 10240  002DA4  0100               	movlb	0	; () banked
 10241  002DA6  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;i2c1.c: 161: SSP1STAT = 0x80;
 10245  002DA8  0E80               	movlw	128
 10246  002DAA  6EC7               	movwf	4039,c	;volatile
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;i2c1.c: 163: SSP1CON1 = 0x28;
 10250  002DAC  0E28               	movlw	40
 10251  002DAE  6EC6               	movwf	4038,c	;volatile
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;i2c1.c: 165: SSP1CON3 = 0x00;
 10255  002DB0  0E00               	movlw	0
 10256  002DB2  6ECB               	movwf	4043,c	;volatile
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;i2c1.c: 167: SSP1ADD = 0x03;
 10260  002DB4  0E03               	movlw	3
 10261  002DB6  6EC8               	movwf	4040,c	;volatile
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
 10265  002DB8  969E               	bcf	3998,3,c	;volatile
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
 10269  002DBA  869D               	bsf	3997,3,c	;volatile
 10270                           
 10271                           ; BSR set to: 0
 10272  002DBC  0012               	return		;funcret
 10273  002DBE                     __end_of_I2C1_Initialize:
 10274                           	opt stack 0
 10275                           tosu	equ	0xFFF
 10276                           tosh	equ	0xFFE
 10277                           tosl	equ	0xFFD
 10278                           pclath	equ	0xFFA
 10279                           tblptru	equ	0xFF8
 10280                           tblptrh	equ	0xFF7
 10281                           tblptrl	equ	0xFF6
 10282                           tablat	equ	0xFF5
 10283                           prodh	equ	0xFF4
 10284                           prodl	equ	0xFF3
 10285                           intcon	equ	0xFF2
 10286                           intcon2	equ	0xFF1
 10287                           indf0	equ	0xFEF
 10288                           postinc0	equ	0xFEE
 10289                           fsr0h	equ	0xFEA
 10290                           fsr0l	equ	0xFE9
 10291                           wreg	equ	0xFE8
 10292                           indf2	equ	0xFDF
 10293                           postinc2	equ	0xFDE
 10294                           postdec2	equ	0xFDD
 10295                           plusw2	equ	0xFDB
 10296                           fsr2h	equ	0xFDA
 10297                           fsr2l	equ	0xFD9
 10298                           status	equ	0xFD8
 10299                           
 10300 ;; *************** function _EUSART1_Initialize *****************
 10301 ;; Defined at:
 10302 ;;		line 21 in file "UART.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;		None
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10316 ;;      Params:         0       0       0       0       0       0       0
 10317 ;;      Locals:         0       0       0       0       0       0       0
 10318 ;;      Temps:          0       0       0       0       0       0       0
 10319 ;;      Totals:         0       0       0       0       0       0       0
 10320 ;;Total ram usage:        0 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; Hardware stack levels required when called:    6
 10323 ;; This function calls:
 10324 ;;		_UART_buff_init
 10325 ;; This function is called by:
 10326 ;;		_SYSTEM_Initialize
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text51
 10331  002DBE                     __ptext51:
 10332                           	opt stack 0
 10333  002DBE                     _EUSART1_Initialize:
 10334                           	opt stack 23
 10335                           
 10336                           ;UART.c: 23: PIE1bits.RC1IE = 0;
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;incstack = 0
 10340  002DBE  9A9D               	bcf	3997,5,c	;volatile
 10341                           
 10342                           ;UART.c: 24: PIE1bits.TX1IE = 0;
 10343  002DC0  989D               	bcf	3997,4,c	;volatile
 10344                           
 10345                           ;UART.c: 29: BAUD1CON = 0x48;
 10346  002DC2  0E48               	movlw	72
 10347  002DC4  6EB8               	movwf	4024,c	;volatile
 10348                           
 10349                           ;UART.c: 32: RC1STA = 0x98;
 10350  002DC6  0E98               	movlw	152
 10351  002DC8  6EAB               	movwf	4011,c	;volatile
 10352                           
 10353                           ;UART.c: 35: TX1STA = 0x26;
 10354  002DCA  0E26               	movlw	38
 10355  002DCC  6EAC               	movwf	4012,c	;volatile
 10356                           
 10357                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
 10358  002DCE  0E67               	movlw	103
 10359  002DD0  6EAF               	movwf	4015,c	;volatile
 10360                           
 10361                           ;UART.c: 41: SPBRGH1 = 0x00;
 10362  002DD2  0E00               	movlw	0
 10363  002DD4  6EB0               	movwf	4016,c	;volatile
 10364                           
 10365                           ;UART.c: 44: TXREG1 = 0x00;
 10366  002DD6  0E00               	movlw	0
 10367  002DD8  6EAD               	movwf	4013,c	;volatile
 10368                           
 10369                           ;UART.c: 47: RCREG1 = 0x00;
 10370  002DDA  0E00               	movlw	0
 10371  002DDC  6EAE               	movwf	4014,c	;volatile
 10372                           
 10373                           ;UART.c: 49: UART_buff_init(&input_buffer);
 10374  002DDE  0E00               	movlw	low _input_buffer
 10375  002DE0  6E23               	movwf	UART_buff_init@_this,c
 10376  002DE2  0E04               	movlw	high _input_buffer
 10377  002DE4  6E24               	movwf	UART_buff_init@_this+1,c
 10378  002DE6  EC2F  F018         	call	_UART_buff_init	;wreg free
 10379                           
 10380                           ;UART.c: 50: UART_buff_init(&output_buffer);
 10381  002DEA  0E00               	movlw	low _output_buffer
 10382  002DEC  6E23               	movwf	UART_buff_init@_this,c
 10383  002DEE  0E05               	movlw	high _output_buffer
 10384  002DF0  6E24               	movwf	UART_buff_init@_this+1,c
 10385  002DF2  EC2F  F018         	call	_UART_buff_init	;wreg free
 10386                           
 10387                           ;UART.c: 52: PIE1bits.RC1IE = 1;
 10388  002DF6  8A9D               	bsf	3997,5,c	;volatile
 10389  002DF8  0012               	return		;funcret
 10390  002DFA                     __end_of_EUSART1_Initialize:
 10391                           	opt stack 0
 10392                           tosu	equ	0xFFF
 10393                           tosh	equ	0xFFE
 10394                           tosl	equ	0xFFD
 10395                           pclath	equ	0xFFA
 10396                           tblptru	equ	0xFF8
 10397                           tblptrh	equ	0xFF7
 10398                           tblptrl	equ	0xFF6
 10399                           tablat	equ	0xFF5
 10400                           prodh	equ	0xFF4
 10401                           prodl	equ	0xFF3
 10402                           intcon	equ	0xFF2
 10403                           intcon2	equ	0xFF1
 10404                           indf0	equ	0xFEF
 10405                           postinc0	equ	0xFEE
 10406                           fsr0h	equ	0xFEA
 10407                           fsr0l	equ	0xFE9
 10408                           wreg	equ	0xFE8
 10409                           indf2	equ	0xFDF
 10410                           postinc2	equ	0xFDE
 10411                           postdec2	equ	0xFDD
 10412                           plusw2	equ	0xFDB
 10413                           fsr2h	equ	0xFDA
 10414                           fsr2l	equ	0xFD9
 10415                           status	equ	0xFD8
 10416                           
 10417 ;; *************** function _UART_buff_init *****************
 10418 ;; Defined at:
 10419 ;;		line 56 in file "UART.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
 10422 ;;		 -> output_buffer(206), input_buffer(206), 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;		None
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  1    wreg      void 
 10427 ;; Registers used:
 10428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10434 ;;      Params:         2       0       0       0       0       0       0
 10435 ;;      Locals:         0       0       0       0       0       0       0
 10436 ;;      Temps:          0       0       0       0       0       0       0
 10437 ;;      Totals:         2       0       0       0       0       0       0
 10438 ;;Total ram usage:        2 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    5
 10441 ;; This function calls:
 10442 ;;		_memset
 10443 ;; This function is called by:
 10444 ;;		_EUSART1_Initialize
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           	psect	text52
 10449  00305E                     __ptext52:
 10450                           	opt stack 0
 10451  00305E                     _UART_buff_init:
 10452                           	opt stack 23
 10453                           
 10454                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
 10455                           
 10456                           ;incstack = 0
 10457  00305E  C023  F01B         	movff	UART_buff_init@_this,memset@p1
 10458  003062  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
 10459  003066  0E00               	movlw	0
 10460  003068  6E1E               	movwf	memset@c+1,c
 10461  00306A  0E00               	movlw	0
 10462  00306C  6E1D               	movwf	memset@c,c
 10463  00306E  0E00               	movlw	0
 10464  003070  6E20               	movwf	memset@n+1,c
 10465  003072  0ECE               	movlw	206
 10466  003074  6E1F               	movwf	memset@n,c
 10467  003076  EC80  F017         	call	_memset	;wreg free
 10468  00307A  0012               	return		;funcret
 10469  00307C                     __end_of_UART_buff_init:
 10470                           	opt stack 0
 10471                           tosu	equ	0xFFF
 10472                           tosh	equ	0xFFE
 10473                           tosl	equ	0xFFD
 10474                           pclath	equ	0xFFA
 10475                           tblptru	equ	0xFF8
 10476                           tblptrh	equ	0xFF7
 10477                           tblptrl	equ	0xFF6
 10478                           tablat	equ	0xFF5
 10479                           prodh	equ	0xFF4
 10480                           prodl	equ	0xFF3
 10481                           intcon	equ	0xFF2
 10482                           intcon2	equ	0xFF1
 10483                           indf0	equ	0xFEF
 10484                           postinc0	equ	0xFEE
 10485                           fsr0h	equ	0xFEA
 10486                           fsr0l	equ	0xFE9
 10487                           wreg	equ	0xFE8
 10488                           indf2	equ	0xFDF
 10489                           postinc2	equ	0xFDE
 10490                           postdec2	equ	0xFDD
 10491                           plusw2	equ	0xFDB
 10492                           fsr2h	equ	0xFDA
 10493                           fsr2l	equ	0xFD9
 10494                           status	equ	0xFD8
 10495                           
 10496 ;; *************** function _memset *****************
 10497 ;; Defined at:
 10498 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  p1              2   26[COMRAM] PTR void 
 10501 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10502 ;;  c               2   28[COMRAM] int 
 10503 ;;  n               2   30[COMRAM] unsigned int 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  p               2   32[COMRAM] PTR unsigned char 
 10506 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  2   26[COMRAM] PTR void 
 10509 ;; Registers used:
 10510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10516 ;;      Params:         6       0       0       0       0       0       0
 10517 ;;      Locals:         2       0       0       0       0       0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0
 10519 ;;      Totals:         8       0       0       0       0       0       0
 10520 ;;Total ram usage:        8 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    4
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_FastTransfer_buffer_flush
 10527 ;;		_UART_buff_init
 10528 ;;		_UART_buff_flush
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           	psect	text53
 10533  002F00                     __ptext53:
 10534                           	opt stack 0
 10535  002F00                     _memset:
 10536                           	opt stack 22
 10537                           
 10538                           ;incstack = 0
 10539  002F00  C01B  F021         	movff	memset@p1,memset@p
 10540  002F04  C01C  F022         	movff	memset@p1+1,memset@p+1
 10541  002F08  D008               	goto	l5894
 10542  002F0A                     l5890:
 10543  002F0A  C021  FFD9         	movff	memset@p,fsr2l
 10544  002F0E  C022  FFDA         	movff	memset@p+1,fsr2h
 10545  002F12  C01D  FFDF         	movff	memset@c,indf2
 10546  002F16  4A21               	infsnz	memset@p,f,c
 10547  002F18  2A22               	incf	memset@p+1,f,c
 10548  002F1A                     l5894:
 10549  002F1A  061F               	decf	memset@n,f,c
 10550  002F1C  A0D8               	btfss	status,0,c
 10551  002F1E  0620               	decf	memset@n+1,f,c
 10552  002F20  281F               	incf	memset@n,w,c
 10553  002F22  E1F3               	bnz	l5890
 10554  002F24  2820               	incf	memset@n+1,w,c
 10555  002F26  B4D8               	btfsc	status,2,c
 10556  002F28  0012               	return	
 10557  002F2A  D7EF               	goto	l5890
 10558  002F2C                     __end_of_memset:
 10559                           	opt stack 0
 10560                           tosu	equ	0xFFF
 10561                           tosh	equ	0xFFE
 10562                           tosl	equ	0xFFD
 10563                           pclath	equ	0xFFA
 10564                           tblptru	equ	0xFF8
 10565                           tblptrh	equ	0xFF7
 10566                           tblptrl	equ	0xFF6
 10567                           tablat	equ	0xFF5
 10568                           prodh	equ	0xFF4
 10569                           prodl	equ	0xFF3
 10570                           intcon	equ	0xFF2
 10571                           intcon2	equ	0xFF1
 10572                           indf0	equ	0xFEF
 10573                           postinc0	equ	0xFEE
 10574                           fsr0h	equ	0xFEA
 10575                           fsr0l	equ	0xFE9
 10576                           wreg	equ	0xFE8
 10577                           indf2	equ	0xFDF
 10578                           postinc2	equ	0xFDE
 10579                           postdec2	equ	0xFDD
 10580                           plusw2	equ	0xFDB
 10581                           fsr2h	equ	0xFDA
 10582                           fsr2l	equ	0xFD9
 10583                           status	equ	0xFD8
 10584                           
 10585 ;; *************** function _ADC_Initialize *****************
 10586 ;; Defined at:
 10587 ;;		line 59 in file "mcc_generated_files/adc.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;		None
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;		None
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, status,2
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10601 ;;      Params:         0       0       0       0       0       0       0
 10602 ;;      Locals:         0       0       0       0       0       0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0
 10604 ;;      Totals:         0       0       0       0       0       0       0
 10605 ;;Total ram usage:        0 bytes
 10606 ;; Hardware stack levels used:    1
 10607 ;; Hardware stack levels required when called:    4
 10608 ;; This function calls:
 10609 ;;		Nothing
 10610 ;; This function is called by:
 10611 ;;		_SYSTEM_Initialize
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text54
 10616  0030B6                     __ptext54:
 10617                           	opt stack 0
 10618  0030B6                     _ADC_Initialize:
 10619                           	opt stack 25
 10620                           
 10621                           ;adc.c: 64: ADCON0 = 0x01;
 10622                           
 10623                           ;incstack = 0
 10624  0030B6  0E01               	movlw	1
 10625  0030B8  6EC2               	movwf	4034,c	;volatile
 10626                           
 10627                           ;adc.c: 67: ADCON1 = 0x80;
 10628  0030BA  0E80               	movlw	128
 10629  0030BC  6EC1               	movwf	4033,c	;volatile
 10630                           
 10631                           ;adc.c: 70: ADCON2 = 0x05;
 10632  0030BE  0E05               	movlw	5
 10633  0030C0  6EC0               	movwf	4032,c	;volatile
 10634                           
 10635                           ;adc.c: 73: ADRESL = 0x00;
 10636  0030C2  0E00               	movlw	0
 10637  0030C4  6EC3               	movwf	4035,c	;volatile
 10638                           
 10639                           ;adc.c: 76: ADRESH = 0x00;
 10640  0030C6  0E00               	movlw	0
 10641  0030C8  6EC4               	movwf	4036,c	;volatile
 10642                           
 10643                           ;adc.c: 79: PIE1bits.ADIE = 1;
 10644  0030CA  8C9D               	bsf	3997,6,c	;volatile
 10645  0030CC  0012               	return		;funcret
 10646  0030CE                     __end_of_ADC_Initialize:
 10647                           	opt stack 0
 10648                           tosu	equ	0xFFF
 10649                           tosh	equ	0xFFE
 10650                           tosl	equ	0xFFD
 10651                           pclath	equ	0xFFA
 10652                           tblptru	equ	0xFF8
 10653                           tblptrh	equ	0xFF7
 10654                           tblptrl	equ	0xFF6
 10655                           tablat	equ	0xFF5
 10656                           prodh	equ	0xFF4
 10657                           prodl	equ	0xFF3
 10658                           intcon	equ	0xFF2
 10659                           intcon2	equ	0xFF1
 10660                           indf0	equ	0xFEF
 10661                           postinc0	equ	0xFEE
 10662                           fsr0h	equ	0xFEA
 10663                           fsr0l	equ	0xFE9
 10664                           wreg	equ	0xFE8
 10665                           indf2	equ	0xFDF
 10666                           postinc2	equ	0xFDE
 10667                           postdec2	equ	0xFDD
 10668                           plusw2	equ	0xFDB
 10669                           fsr2h	equ	0xFDA
 10670                           fsr2l	equ	0xFD9
 10671                           status	equ	0xFD8
 10672                           
 10673 ;; *************** function _LEDwriteDisplay *****************
 10674 ;; Defined at:
 10675 ;;		line 116 in file "LED_BarGraph.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;  i2c_addr        1    wreg     unsigned char 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
 10680 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
 10681 ;;  timeOut         2   21[BANK1 ] unsigned int 
 10682 ;;  status          1   23[BANK1 ] enum E8697
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10692 ;;      Params:         0       0       0       0       0       0       0
 10693 ;;      Locals:         0       0      24       0       0       0       0
 10694 ;;      Temps:          0       0       0       0       0       0       0
 10695 ;;      Totals:         0       0      24       0       0       0       0
 10696 ;;Total ram usage:       24 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; Hardware stack levels required when called:    6
 10699 ;; This function calls:
 10700 ;;		_I2C1_MasterWrite
 10701 ;; This function is called by:
 10702 ;;		_main
 10703 ;;		_TestBarGraph
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           	psect	text55
 10708  0015A4                     __ptext55:
 10709                           	opt stack 0
 10710  0015A4                     _LEDwriteDisplay:
 10711                           	opt stack 24
 10712                           
 10713                           ;incstack = 0
 10714                           ;LEDwriteDisplay@i2c_addr stored from wreg
 10715  0015A4  0101               	movlb	1	; () banked
 10716  0015A6  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
 10717                           
 10718                           ;LED_BarGraph.c: 117: uint8_t writeBuffer[20];
 10719                           ;LED_BarGraph.c: 118: uint16_t timeOut;
 10720                           ;LED_BarGraph.c: 119: writeBuffer[0] = 0x00;
 10721  0015A8  0E00               	movlw	0
 10722  0015AA  0101               	movlb	1	; () banked
 10723  0015AC  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10724                           
 10725                           ;LED_BarGraph.c: 120: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10726  0015AE  0E02               	movlw	2
 10727  0015B0  0101               	movlb	1	; () banked
 10728  0015B2  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10729                           
 10730                           ;LED_BarGraph.c: 122: timeOut = 0;
 10731  0015B4  0E00               	movlw	0
 10732  0015B6  0101               	movlb	1	; () banked
 10733  0015B8  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10734  0015BA  0E00               	movlw	0
 10735  0015BC  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10736                           
 10737                           ;LED_BarGraph.c: 123: while (status != I2C1_MESSAGE_FAIL) {
 10738  0015BE  D02F               	goto	l7022
 10739  0015C0                     l7002:
 10740                           
 10741                           ; BSR set to: 1
 10742                           ;LED_BarGraph.c: 125: I2C1_MasterWrite(&writeBuffer,
 10743                           ;LED_BarGraph.c: 126: 1,
 10744                           ;LED_BarGraph.c: 127: i2c_addr,
 10745                           ;LED_BarGraph.c: 128: &status);
 10746  0015C0  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10747  0015C2  0100               	movlb	0	; () banked
 10748  0015C4  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10749  0015C6  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10750  0015C8  0100               	movlb	0	; () banked
 10751  0015CA  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10752  0015CC  0E00               	movlw	0
 10753  0015CE  0100               	movlb	0	; () banked
 10754  0015D0  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10755  0015D2  0E01               	movlw	1
 10756  0015D4  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10757  0015D6  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10758  0015DA  0100               	movlb	0	; () banked
 10759  0015DC  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10760  0015DE  0E50               	movlw	low LEDwriteDisplay@status
 10761  0015E0  0100               	movlb	0	; () banked
 10762  0015E2  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10763  0015E4  0E01               	movlw	high LEDwriteDisplay@status
 10764  0015E6  0100               	movlb	0	; () banked
 10765  0015E8  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10766  0015EA  ECE1  F015         	call	_I2C1_MasterWrite	;wreg free
 10767  0015EE                     l7004:
 10768  0015EE  0E02               	movlw	2
 10769  0015F0  0101               	movlb	1	; () banked
 10770  0015F2  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10771  0015F4  B4D8               	btfsc	status,2,c
 10772  0015F6  D7FB               	goto	l7004
 10773                           
 10774                           ; BSR set to: 1
 10775                           ;LED_BarGraph.c: 133: if (status == I2C1_MESSAGE_COMPLETE)
 10776                           
 10777                           ; BSR set to: 1
 10778  0015F8  0101               	movlb	1	; () banked
 10779  0015FA  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10780  0015FC  0101               	movlb	1	; () banked
 10781  0015FE  B4D8               	btfsc	status,2,c
 10782  001600  D012               	goto	l7024
 10783                           
 10784                           ; BSR set to: 1
 10785                           ;LED_BarGraph.c: 135: if (timeOut == 100)
 10786                           
 10787                           ; BSR set to: 1
 10788                           
 10789                           ; BSR set to: 1
 10790                           ;LED_BarGraph.c: 134: break;
 10791  001602  0E64               	movlw	100
 10792  001604  0101               	movlb	1	; () banked
 10793  001606  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10794  001608  0101               	movlb	1	; () banked
 10795  00160A  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10796  00160C  B4D8               	btfsc	status,2,c
 10797  00160E  D00B               	goto	l7024
 10798                           
 10799                           ; BSR set to: 1
 10800                           ;LED_BarGraph.c: 137: if (status == I2C1_MESSAGE_FAIL)
 10801                           
 10802                           ; BSR set to: 1
 10803                           
 10804                           ; BSR set to: 1
 10805                           ;LED_BarGraph.c: 136: break;
 10806  001610  0101               	movlb	1	; () banked
 10807  001612  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10808  001614  B4D8               	btfsc	status,2,c
 10809  001616  D007               	goto	l7024
 10810                           
 10811                           ; BSR set to: 1
 10812                           ;LED_BarGraph.c: 139: else
 10813                           ;LED_BarGraph.c: 140: timeOut++;
 10814                           
 10815                           ; BSR set to: 1
 10816                           
 10817                           ; BSR set to: 1
 10818                           
 10819                           ; BSR set to: 1
 10820                           ;LED_BarGraph.c: 138: break;
 10821  001618  0101               	movlb	1	; () banked
 10822  00161A  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10823  00161C  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10824  00161E                     l7022:
 10825                           
 10826                           ; BSR set to: 1
 10827  00161E  0101               	movlb	1	; () banked
 10828  001620  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10829  001622  A4D8               	btfss	status,2,c
 10830  001624  D7CD               	goto	l7002
 10831  001626                     l7024:
 10832                           
 10833                           ; BSR set to: 1
 10834                           ;LED_BarGraph.c: 141: }
 10835                           ;LED_BarGraph.c: 142: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10836  001626  0E02               	movlw	2
 10837  001628  0101               	movlb	1	; () banked
 10838  00162A  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10839                           
 10840                           ;LED_BarGraph.c: 147: writeBuffer[0] = 0;
 10841  00162C  0E00               	movlw	0
 10842  00162E  0101               	movlb	1	; () banked
 10843  001630  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10844                           
 10845                           ; BSR set to: 1
 10846                           ;LED_BarGraph.c: 148: writeBuffer[1] = displaybuffer[0] & 0xFF;
 10847  001632  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
 10848                           
 10849                           ; BSR set to: 1
 10850                           ;LED_BarGraph.c: 149: writeBuffer[2] = displaybuffer[0] >> 8;
 10851  001636  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
 10852                           
 10853                           ; BSR set to: 1
 10854                           ;LED_BarGraph.c: 150: writeBuffer[3] = displaybuffer[1] & 0xFF;
 10855  00163A  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
 10856                           
 10857                           ; BSR set to: 1
 10858                           ;LED_BarGraph.c: 151: writeBuffer[4] = displaybuffer[1] >> 8;
 10859  00163E  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
 10860                           
 10861                           ; BSR set to: 1
 10862                           ;LED_BarGraph.c: 152: writeBuffer[5] = displaybuffer[2] & 0xFF;
 10863  001642  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
 10864                           
 10865                           ; BSR set to: 1
 10866                           ;LED_BarGraph.c: 153: writeBuffer[6] = displaybuffer[2] >> 8;
 10867  001646  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
 10868                           
 10869                           ; BSR set to: 1
 10870                           ;LED_BarGraph.c: 154: writeBuffer[7] = displaybuffer[3] & 0xFF;
 10871  00164A  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
 10872                           
 10873                           ; BSR set to: 1
 10874                           ;LED_BarGraph.c: 155: writeBuffer[8] = displaybuffer[3] >> 8;
 10875  00164E  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
 10876                           
 10877                           ; BSR set to: 1
 10878                           ;LED_BarGraph.c: 156: writeBuffer[9] = displaybuffer[4] & 0xFF;
 10879  001652  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
 10880                           
 10881                           ; BSR set to: 1
 10882                           ;LED_BarGraph.c: 157: writeBuffer[10] = displaybuffer[4] >> 8;
 10883  001656  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
 10884                           
 10885                           ; BSR set to: 1
 10886                           ;LED_BarGraph.c: 158: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10887  00165A  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10888                           
 10889                           ; BSR set to: 1
 10890                           ;LED_BarGraph.c: 159: writeBuffer[12] = displaybuffer[5] >> 8;
 10891  00165E  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10892                           
 10893                           ; BSR set to: 1
 10894                           ;LED_BarGraph.c: 160: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10895  001662  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 10896                           
 10897                           ; BSR set to: 1
 10898                           ;LED_BarGraph.c: 161: writeBuffer[14] = displaybuffer[6] >> 8;
 10899  001666  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 10900                           
 10901                           ; BSR set to: 1
 10902                           ;LED_BarGraph.c: 162: writeBuffer[15] = displaybuffer[7] & 0xFF;
 10903  00166A  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 10904                           
 10905                           ; BSR set to: 1
 10906                           ;LED_BarGraph.c: 163: writeBuffer[16] = displaybuffer[7] >> 8;
 10907  00166E  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 10908                           
 10909                           ; BSR set to: 1
 10910                           ;LED_BarGraph.c: 164: writeBuffer[17] = displaybuffer[8] & 0xFF;
 10911  001672  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;LED_BarGraph.c: 165: writeBuffer[18] = displaybuffer[8] >> 8;
 10915  001676  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 10916                           
 10917                           ;LED_BarGraph.c: 167: timeOut = 0;
 10918  00167A  0E00               	movlw	0
 10919  00167C  0101               	movlb	1	; () banked
 10920  00167E  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10921  001680  0E00               	movlw	0
 10922  001682  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10923                           
 10924                           ;LED_BarGraph.c: 168: while (status != I2C1_MESSAGE_FAIL) {
 10925  001684  D02F               	goto	l7082
 10926  001686                     l7062:
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;LED_BarGraph.c: 170: I2C1_MasterWrite(&writeBuffer,
 10930                           ;LED_BarGraph.c: 171: 17,
 10931                           ;LED_BarGraph.c: 172: i2c_addr,
 10932                           ;LED_BarGraph.c: 173: &status);
 10933  001686  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10934  001688  0100               	movlb	0	; () banked
 10935  00168A  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10936  00168C  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10937  00168E  0100               	movlb	0	; () banked
 10938  001690  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10939  001692  0E00               	movlw	0
 10940  001694  0100               	movlb	0	; () banked
 10941  001696  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10942  001698  0E11               	movlw	17
 10943  00169A  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10944  00169C  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10945  0016A0  0100               	movlb	0	; () banked
 10946  0016A2  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10947  0016A4  0E50               	movlw	low LEDwriteDisplay@status
 10948  0016A6  0100               	movlb	0	; () banked
 10949  0016A8  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10950  0016AA  0E01               	movlw	high LEDwriteDisplay@status
 10951  0016AC  0100               	movlb	0	; () banked
 10952  0016AE  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10953  0016B0  ECE1  F015         	call	_I2C1_MasterWrite	;wreg free
 10954  0016B4                     l7064:
 10955  0016B4  0E02               	movlw	2
 10956  0016B6  0101               	movlb	1	; () banked
 10957  0016B8  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10958  0016BA  B4D8               	btfsc	status,2,c
 10959  0016BC  D7FB               	goto	l7064
 10960                           
 10961                           ; BSR set to: 1
 10962                           ;LED_BarGraph.c: 178: if (status == I2C1_MESSAGE_COMPLETE)
 10963                           
 10964                           ; BSR set to: 1
 10965  0016BE  0101               	movlb	1	; () banked
 10966  0016C0  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10967  0016C2  0101               	movlb	1	; () banked
 10968  0016C4  B4D8               	btfsc	status,2,c
 10969  0016C6  0012               	return	
 10970                           
 10971                           ; BSR set to: 1
 10972                           ;LED_BarGraph.c: 180: if (timeOut == 100)
 10973                           
 10974                           ; BSR set to: 1
 10975                           
 10976                           ; BSR set to: 1
 10977                           ;LED_BarGraph.c: 179: break;
 10978  0016C8  0E64               	movlw	100
 10979  0016CA  0101               	movlb	1	; () banked
 10980  0016CC  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10981  0016CE  0101               	movlb	1	; () banked
 10982  0016D0  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10983  0016D2  B4D8               	btfsc	status,2,c
 10984  0016D4  0012               	return	
 10985                           
 10986                           ; BSR set to: 1
 10987                           ;LED_BarGraph.c: 182: if (status == I2C1_MESSAGE_FAIL)
 10988                           
 10989                           ; BSR set to: 1
 10990                           
 10991                           ; BSR set to: 1
 10992                           ;LED_BarGraph.c: 181: break;
 10993  0016D6  0101               	movlb	1	; () banked
 10994  0016D8  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10995  0016DA  B4D8               	btfsc	status,2,c
 10996  0016DC  0012               	return	
 10997                           
 10998                           ; BSR set to: 1
 10999                           ;LED_BarGraph.c: 184: else
 11000                           ;LED_BarGraph.c: 185: timeOut++;
 11001                           
 11002                           ; BSR set to: 1
 11003                           
 11004                           ; BSR set to: 1
 11005                           
 11006                           ; BSR set to: 1
 11007                           ;LED_BarGraph.c: 183: break;
 11008  0016DE  0101               	movlb	1	; () banked
 11009  0016E0  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 11010  0016E2  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 11011  0016E4                     l7082:
 11012                           
 11013                           ; BSR set to: 1
 11014  0016E4  0101               	movlb	1	; () banked
 11015  0016E6  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 11016  0016E8  B4D8               	btfsc	status,2,c
 11017  0016EA  0012               	return	
 11018  0016EC  D7CC               	goto	l7062
 11019  0016EE                     __end_of_LEDwriteDisplay:
 11020                           	opt stack 0
 11021                           tosu	equ	0xFFF
 11022                           tosh	equ	0xFFE
 11023                           tosl	equ	0xFFD
 11024                           pclath	equ	0xFFA
 11025                           tblptru	equ	0xFF8
 11026                           tblptrh	equ	0xFF7
 11027                           tblptrl	equ	0xFF6
 11028                           tablat	equ	0xFF5
 11029                           prodh	equ	0xFF4
 11030                           prodl	equ	0xFF3
 11031                           intcon	equ	0xFF2
 11032                           intcon2	equ	0xFF1
 11033                           indf0	equ	0xFEF
 11034                           postinc0	equ	0xFEE
 11035                           fsr0h	equ	0xFEA
 11036                           fsr0l	equ	0xFE9
 11037                           wreg	equ	0xFE8
 11038                           indf2	equ	0xFDF
 11039                           postinc2	equ	0xFDE
 11040                           postdec2	equ	0xFDD
 11041                           plusw2	equ	0xFDB
 11042                           fsr2h	equ	0xFDA
 11043                           fsr2l	equ	0xFD9
 11044                           status	equ	0xFD8
 11045                           
 11046 ;; *************** function _LEDsetValue *****************
 11047 ;; Defined at:
 11048 ;;		line 11 in file "LED_BarGraph.c"
 11049 ;; Parameters:    Size  Location     Type
 11050 ;;  value           2    0[BANK0 ] int 
 11051 ;;  color           2    2[BANK0 ] int 
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;  k               2    5[BANK0 ] int 
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  1    wreg      void 
 11056 ;; Registers used:
 11057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11063 ;;      Params:         0       4       0       0       0       0       0
 11064 ;;      Locals:         0       2       0       0       0       0       0
 11065 ;;      Temps:          0       1       0       0       0       0       0
 11066 ;;      Totals:         0       7       0       0       0       0       0
 11067 ;;Total ram usage:        7 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    6
 11070 ;; This function calls:
 11071 ;;		_LEDsetBar
 11072 ;; This function is called by:
 11073 ;;		_main
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text56
 11078  0021E2                     __ptext56:
 11079                           	opt stack 0
 11080  0021E2                     _LEDsetValue:
 11081                           	opt stack 24
 11082                           
 11083                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 11084                           
 11085                           ; BSR set to: 1
 11086                           ;incstack = 0
 11087  0021E2  0100               	movlb	0	; () banked
 11088  0021E4  BFF3               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 11089  0021E6  D00D               	goto	l6982
 11090  0021E8  0100               	movlb	0	; () banked
 11091  0021EA  51F3               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11092  0021EC  E105               	bnz	u7970
 11093  0021EE  0E19               	movlw	25
 11094  0021F0  0100               	movlb	0	; () banked
 11095  0021F2  5DF2               	subwf	LEDsetValue@value& (0+255),w,b
 11096  0021F4  A0D8               	btfss	status,0,c
 11097  0021F6  D005               	goto	l6982
 11098  0021F8                     u7970:
 11099                           
 11100                           ; BSR set to: 0
 11101  0021F8  0E00               	movlw	0
 11102  0021FA  0100               	movlb	0	; () banked
 11103  0021FC  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
 11104  0021FE  0E18               	movlw	24
 11105  002200  6FF2               	movwf	LEDsetValue@value& (0+255),b
 11106  002202                     l6982:
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 11110  002202  0100               	movlb	0	; () banked
 11111  002204  AFF3               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 11112  002206  D005               	goto	l613
 11113                           
 11114                           ; BSR set to: 0
 11115  002208  0E00               	movlw	0
 11116  00220A  0100               	movlb	0	; () banked
 11117  00220C  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
 11118  00220E  0E00               	movlw	0
 11119  002210  6FF2               	movwf	LEDsetValue@value& (0+255),b
 11120  002212                     l613:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;LED_BarGraph.c: 14: int k;
 11124                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 11125  002212  0E00               	movlw	0
 11126  002214  0100               	movlb	0	; () banked
 11127  002216  6FF8               	movwf	(LEDsetValue@k+1)& (0+255),b
 11128  002218  0E00               	movlw	0
 11129  00221A  6FF7               	movwf	LEDsetValue@k& (0+255),b
 11130  00221C                     l6986:
 11131                           
 11132                           ; BSR set to: 0
 11133  00221C  0100               	movlb	0	; () banked
 11134  00221E  BFF8               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 11135  002220  D008               	goto	l6990
 11136  002222  0100               	movlb	0	; () banked
 11137  002224  51F8               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11138  002226  E12E               	bnz	l618
 11139  002228  0E18               	movlw	24
 11140  00222A  0100               	movlb	0	; () banked
 11141  00222C  5DF7               	subwf	LEDsetValue@k& (0+255),w,b
 11142  00222E  B0D8               	btfsc	status,0,c
 11143  002230  0012               	return	
 11144  002232                     l6990:
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;LED_BarGraph.c: 16: if (k < value){
 11148  002232  0100               	movlb	0	; () banked
 11149  002234  51F2               	movf	LEDsetValue@value& (0+255),w,b
 11150  002236  0100               	movlb	0	; () banked
 11151  002238  5DF7               	subwf	LEDsetValue@k& (0+255),w,b
 11152  00223A  0100               	movlb	0	; () banked
 11153  00223C  51F8               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11154  00223E  0A80               	xorlw	128
 11155  002240  0100               	movlb	0	; () banked
 11156  002242  6FF6               	movwf	??_LEDsetValue& (0+255),b
 11157  002244  0100               	movlb	0	; () banked
 11158  002246  51F3               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11159  002248  0A80               	xorlw	128
 11160  00224A  0100               	movlb	0	; () banked
 11161  00224C  59F6               	subwfb	??_LEDsetValue& (0+255),w,b
 11162  00224E  B0D8               	btfsc	status,0,c
 11163  002250  D00B               	goto	l6994
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;LED_BarGraph.c: 18: LEDsetBar(k, color);}
 11167  002252  C0F7  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11168  002256  C0F8  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11169  00225A  C0F4  F025         	movff	LEDsetValue@color,LEDsetBar@color
 11170  00225E  C0F5  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 11171  002262  ECC4  F003         	call	_LEDsetBar	;wreg free
 11172  002266  D00A               	goto	l6996
 11173  002268                     l6994:
 11174                           
 11175                           ;LED_BarGraph.c: 19: else LEDsetBar(k, 0);
 11176  002268  C0F7  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11177  00226C  C0F8  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11178  002270  0E00               	movlw	0
 11179  002272  6E26               	movwf	LEDsetBar@color+1,c
 11180  002274  0E00               	movlw	0
 11181  002276  6E25               	movwf	LEDsetBar@color,c
 11182  002278  ECC4  F003         	call	_LEDsetBar	;wreg free
 11183  00227C                     l6996:
 11184  00227C  0100               	movlb	0	; () banked
 11185  00227E  4BF7               	infsnz	LEDsetValue@k& (0+255),f,b
 11186  002280  2BF8               	incf	(LEDsetValue@k+1)& (0+255),f,b
 11187  002282  D7CC               	goto	l6986
 11188  002284                     l618:
 11189                           
 11190                           ; BSR set to: 0
 11191  002284  0012               	return		;funcret
 11192  002286                     __end_of_LEDsetValue:
 11193                           	opt stack 0
 11194                           tosu	equ	0xFFF
 11195                           tosh	equ	0xFFE
 11196                           tosl	equ	0xFFD
 11197                           pclath	equ	0xFFA
 11198                           tblptru	equ	0xFF8
 11199                           tblptrh	equ	0xFF7
 11200                           tblptrl	equ	0xFF6
 11201                           tablat	equ	0xFF5
 11202                           prodh	equ	0xFF4
 11203                           prodl	equ	0xFF3
 11204                           intcon	equ	0xFF2
 11205                           intcon2	equ	0xFF1
 11206                           indf0	equ	0xFEF
 11207                           postinc0	equ	0xFEE
 11208                           fsr0h	equ	0xFEA
 11209                           fsr0l	equ	0xFE9
 11210                           wreg	equ	0xFE8
 11211                           indf2	equ	0xFDF
 11212                           postinc2	equ	0xFDE
 11213                           postdec2	equ	0xFDD
 11214                           plusw2	equ	0xFDB
 11215                           fsr2h	equ	0xFDA
 11216                           fsr2l	equ	0xFD9
 11217                           status	equ	0xFD8
 11218                           
 11219 ;; *************** function _LEDsetBar *****************
 11220 ;; Defined at:
 11221 ;;		line 195 in file "LED_BarGraph.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  bar             2   34[COMRAM] int 
 11224 ;;  color           2   36[COMRAM] int 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  a               2   40[COMRAM] unsigned int 
 11227 ;;  c               2   38[COMRAM] unsigned int 
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  1    wreg      void 
 11230 ;; Registers used:
 11231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11237 ;;      Params:         4       0       0       0       0       0       0
 11238 ;;      Locals:         4       0       0       0       0       0       0
 11239 ;;      Temps:          0       0      16       0       0       0       0
 11240 ;;      Totals:         8       0      16       0       0       0       0
 11241 ;;Total ram usage:       24 bytes
 11242 ;; Hardware stack levels used:    1
 11243 ;; Hardware stack levels required when called:    5
 11244 ;; This function calls:
 11245 ;;		___awdiv
 11246 ;; This function is called by:
 11247 ;;		_LEDsetValue
 11248 ;;		_TestBarGraph
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252                           	psect	text57
 11253  000788                     __ptext57:
 11254                           	opt stack 0
 11255  000788                     _LEDsetBar:
 11256                           	opt stack 24
 11257                           
 11258                           ;LED_BarGraph.c: 196: uint16_t a, c;
 11259                           ;LED_BarGraph.c: 198: if (bar < 12)
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;incstack = 0
 11263  000788  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11264  00078A  D006               	goto	l6468
 11265  00078C  5024               	movf	LEDsetBar@bar+1,w,c
 11266  00078E  E10F               	bnz	l6470
 11267  000790  0E0C               	movlw	12
 11268  000792  5C23               	subwf	LEDsetBar@bar,w,c
 11269  000794  B0D8               	btfsc	status,0,c
 11270  000796  D00B               	goto	l6470
 11271  000798                     l6468:
 11272                           
 11273                           ;LED_BarGraph.c: 199: c = bar / 4;
 11274  000798  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 11275  00079C  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 11276  0007A0  0E00               	movlw	0
 11277  0007A2  6E1E               	movwf	___awdiv@divisor+1,c
 11278  0007A4  0E04               	movlw	4
 11279  0007A6  6E1D               	movwf	___awdiv@divisor,c
 11280  0007A8  EC4C  F013         	call	___awdiv	;wreg free
 11281  0007AC  D00C               	goto	L3
 11282  0007AE                     l6470:
 11283                           
 11284                           ;LED_BarGraph.c: 200: else
 11285                           ;LED_BarGraph.c: 201: c = (bar - 12) / 4;
 11286  0007AE  0EF4               	movlw	244
 11287  0007B0  2423               	addwf	LEDsetBar@bar,w,c
 11288  0007B2  6E1B               	movwf	___awdiv@dividend,c
 11289  0007B4  0EFF               	movlw	255
 11290  0007B6  2024               	addwfc	LEDsetBar@bar+1,w,c
 11291  0007B8  6E1C               	movwf	___awdiv@dividend+1,c
 11292  0007BA  0E00               	movlw	0
 11293  0007BC  6E1E               	movwf	___awdiv@divisor+1,c
 11294  0007BE  0E04               	movlw	4
 11295  0007C0  6E1D               	movwf	___awdiv@divisor,c
 11296  0007C2  EC4C  F013         	call	___awdiv	;wreg free
 11297  0007C6                     L3:
 11298  0007C6  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 11299  0007CA  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 11300                           
 11301                           ;LED_BarGraph.c: 203: a = bar % 4;
 11302  0007CE  0E03               	movlw	3
 11303  0007D0  1423               	andwf	LEDsetBar@bar,w,c
 11304  0007D2  6E29               	movwf	LEDsetBar@a,c
 11305  0007D4  6A2A               	clrf	LEDsetBar@a+1,c
 11306                           
 11307                           ;LED_BarGraph.c: 204: if (bar >= 12)
 11308  0007D6  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11309  0007D8  D00A               	goto	l692
 11310  0007DA  5024               	movf	LEDsetBar@bar+1,w,c
 11311  0007DC  E104               	bnz	u6880
 11312  0007DE  0E0C               	movlw	12
 11313  0007E0  5C23               	subwf	LEDsetBar@bar,w,c
 11314  0007E2  A0D8               	btfss	status,0,c
 11315  0007E4  D004               	goto	l692
 11316  0007E6                     u6880:
 11317                           
 11318                           ;LED_BarGraph.c: 205: a += 4;
 11319  0007E6  0E04               	movlw	4
 11320  0007E8  2629               	addwf	LEDsetBar@a,f,c
 11321  0007EA  0E00               	movlw	0
 11322  0007EC  222A               	addwfc	LEDsetBar@a+1,f,c
 11323  0007EE                     l692:
 11324                           
 11325                           ;LED_BarGraph.c: 208: if (color == 1) {
 11326  0007EE  0425               	decf	LEDsetBar@color,w,c
 11327  0007F0  1026               	iorwf	LEDsetBar@color+1,w,c
 11328  0007F2  A4D8               	btfss	status,2,c
 11329  0007F4  D07D               	goto	l6480
 11330                           
 11331                           ;LED_BarGraph.c: 210: displaybuffer[c] |= (1<<(a));
 11332  0007F6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11333  0007FA  0E01               	movlw	1
 11334  0007FC  0101               	movlb	1	; () banked
 11335  0007FE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11336  000800  0E00               	movlw	0
 11337  000802  0101               	movlb	1	; () banked
 11338  000804  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11339  000806  0101               	movlb	1	; () banked
 11340  000808  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11341  00080A  D004               	goto	u6904
 11342  00080C                     u6905:
 11343  00080C  90D8               	bcf	status,0,c
 11344  00080E  0101               	movlb	1	; () banked
 11345  000810  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11346  000812  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11347  000814                     u6904:
 11348  000814  0101               	movlb	1	; () banked
 11349  000816  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11350  000818  D7F9               	goto	u6905
 11351  00081A  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11352  00081E  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11353  000822  0E00               	movlw	0
 11354  000824  0101               	movlb	1	; () banked
 11355  000826  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11356  000828  0EFF               	movlw	255
 11357  00082A  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11358  00082C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11359  00082E  0E60               	movlw	low _displaybuffer
 11360  000830  0101               	movlb	1	; () banked
 11361  000832  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11362  000834  0E00               	movlw	high _displaybuffer
 11363  000836  0101               	movlb	1	; () banked
 11364  000838  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11365  00083A  90D8               	bcf	status,0,c
 11366  00083C  3427               	rlcf	LEDsetBar@c,w,c
 11367  00083E  6ED9               	movwf	fsr2l,c
 11368  000840  3428               	rlcf	LEDsetBar@c+1,w,c
 11369  000842  6EDA               	movwf	fsr2h,c
 11370  000844  90D8               	bcf	status,0,c
 11371  000846  36D9               	rlcf	fsr2l,f,c
 11372  000848  36DA               	rlcf	fsr2h,f,c
 11373  00084A  0101               	movlb	1	; () banked
 11374  00084C  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11375  00084E  26D9               	addwf	fsr2l,f,c
 11376  000850  0101               	movlb	1	; () banked
 11377  000852  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11378  000854  22DA               	addwfc	fsr2h,f,c
 11379  000856  0101               	movlb	1	; () banked
 11380  000858  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11381  00085A  12DE               	iorwf	postinc2,f,c
 11382  00085C  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11383  00085E  12DE               	iorwf	postinc2,f,c
 11384  000860  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11385  000862  12DE               	iorwf	postinc2,f,c
 11386  000864  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11387  000866  12DE               	iorwf	postinc2,f,c
 11388                           
 11389                           ;LED_BarGraph.c: 212: displaybuffer[c] &= ~(1<<(a + 8));
 11390  000868  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11391  00086C  0E08               	movlw	8
 11392  00086E  0101               	movlb	1	; () banked
 11393  000870  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11394  000872  0E01               	movlw	1
 11395  000874  0101               	movlb	1	; () banked
 11396  000876  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11397  000878  0E00               	movlw	0
 11398  00087A  0101               	movlb	1	; () banked
 11399  00087C  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11400  00087E  0101               	movlb	1	; () banked
 11401  000880  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11402  000882  D004               	goto	u6914
 11403  000884                     u6915:
 11404  000884  90D8               	bcf	status,0,c
 11405  000886  0101               	movlb	1	; () banked
 11406  000888  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11407  00088A  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11408  00088C                     u6914:
 11409  00088C  0101               	movlb	1	; () banked
 11410  00088E  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11411  000890  D7F9               	goto	u6915
 11412  000892  0101               	movlb	1	; () banked
 11413  000894  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11414  000896  0101               	movlb	1	; () banked
 11415  000898  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11416  00089A  0101               	movlb	1	; () banked
 11417  00089C  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11418  00089E  0101               	movlb	1	; () banked
 11419  0008A0  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11420  0008A2  0101               	movlb	1	; () banked
 11421  0008A4  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11422  0008A6  0101               	movlb	1	; () banked
 11423  0008A8  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11424  0008AA  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11425  0008AC  0101               	movlb	1	; () banked
 11426  0008AE  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11427  0008B0  0101               	movlb	1	; () banked
 11428  0008B2  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11429  0008B4  0E60               	movlw	low _displaybuffer
 11430  0008B6  0101               	movlb	1	; () banked
 11431  0008B8  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11432  0008BA  0E00               	movlw	high _displaybuffer
 11433  0008BC  0101               	movlb	1	; () banked
 11434  0008BE  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11435  0008C0  90D8               	bcf	status,0,c
 11436  0008C2  3427               	rlcf	LEDsetBar@c,w,c
 11437  0008C4  6ED9               	movwf	fsr2l,c
 11438  0008C6  3428               	rlcf	LEDsetBar@c+1,w,c
 11439  0008C8  6EDA               	movwf	fsr2h,c
 11440  0008CA  90D8               	bcf	status,0,c
 11441  0008CC  36D9               	rlcf	fsr2l,f,c
 11442  0008CE  36DA               	rlcf	fsr2h,f,c
 11443  0008D0  0101               	movlb	1	; () banked
 11444  0008D2  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11445  0008D4  26D9               	addwf	fsr2l,f,c
 11446  0008D6  0101               	movlb	1	; () banked
 11447  0008D8  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11448  0008DA  22DA               	addwfc	fsr2h,f,c
 11449  0008DC  0101               	movlb	1	; () banked
 11450  0008DE  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11451  0008E0  16DE               	andwf	postinc2,f,c
 11452  0008E2  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11453  0008E4  16DE               	andwf	postinc2,f,c
 11454  0008E6  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11455  0008E8  16DE               	andwf	postinc2,f,c
 11456  0008EA  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11457  0008EC  16DE               	andwf	postinc2,f,c
 11458                           
 11459                           ;LED_BarGraph.c: 213: } else if (color == 2) {
 11460  0008EE  0012               	return	
 11461  0008F0                     l6480:
 11462  0008F0  0E02               	movlw	2
 11463  0008F2  1825               	xorwf	LEDsetBar@color,w,c
 11464  0008F4  1026               	iorwf	LEDsetBar@color+1,w,c
 11465  0008F6  A4D8               	btfss	status,2,c
 11466  0008F8  D05A               	goto	l6484
 11467                           
 11468                           ;LED_BarGraph.c: 215: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 11469  0008FA  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11470  0008FE  0E08               	movlw	8
 11471  000900  0101               	movlb	1	; () banked
 11472  000902  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11473  000904  0E01               	movlw	1
 11474  000906  0101               	movlb	1	; () banked
 11475  000908  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11476  00090A  0E00               	movlw	0
 11477  00090C  0101               	movlb	1	; () banked
 11478  00090E  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11479  000910  0101               	movlb	1	; () banked
 11480  000912  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11481  000914  D004               	goto	u6934
 11482  000916                     u6935:
 11483  000916  90D8               	bcf	status,0,c
 11484  000918  0101               	movlb	1	; () banked
 11485  00091A  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11486  00091C  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11487  00091E                     u6934:
 11488  00091E  0101               	movlb	1	; () banked
 11489  000920  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11490  000922  D7F9               	goto	u6935
 11491  000924  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 11492  000928  0E01               	movlw	1
 11493  00092A  0101               	movlb	1	; () banked
 11494  00092C  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11495  00092E  0E00               	movlw	0
 11496  000930  0101               	movlb	1	; () banked
 11497  000932  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11498  000934  0101               	movlb	1	; () banked
 11499  000936  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 11500  000938  D004               	goto	u6944
 11501  00093A                     u6945:
 11502  00093A  90D8               	bcf	status,0,c
 11503  00093C  0101               	movlb	1	; () banked
 11504  00093E  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 11505  000940  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 11506  000942                     u6944:
 11507  000942  0101               	movlb	1	; () banked
 11508  000944  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 11509  000946  D7F9               	goto	u6945
 11510  000948  0101               	movlb	1	; () banked
 11511  00094A  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 11512  00094C  0101               	movlb	1	; () banked
 11513  00094E  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 11514  000950  0101               	movlb	1	; () banked
 11515  000952  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11516  000954  0101               	movlb	1	; () banked
 11517  000956  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 11518  000958  0101               	movlb	1	; () banked
 11519  00095A  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 11520  00095C  0101               	movlb	1	; () banked
 11521  00095E  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11522  000960  0101               	movlb	1	; () banked
 11523  000962  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 11524  000964  0101               	movlb	1	; () banked
 11525  000966  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 11526  000968  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 11527  00096A  0101               	movlb	1	; () banked
 11528  00096C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11529  00096E  0101               	movlb	1	; () banked
 11530  000970  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11531  000972  0E60               	movlw	low _displaybuffer
 11532  000974  0101               	movlb	1	; () banked
 11533  000976  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11534  000978  0E00               	movlw	high _displaybuffer
 11535  00097A  0101               	movlb	1	; () banked
 11536  00097C  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11537  00097E  90D8               	bcf	status,0,c
 11538  000980  3427               	rlcf	LEDsetBar@c,w,c
 11539  000982  6ED9               	movwf	fsr2l,c
 11540  000984  3428               	rlcf	LEDsetBar@c+1,w,c
 11541  000986  6EDA               	movwf	fsr2h,c
 11542  000988  90D8               	bcf	status,0,c
 11543  00098A  36D9               	rlcf	fsr2l,f,c
 11544  00098C  36DA               	rlcf	fsr2h,f,c
 11545  00098E  0101               	movlb	1	; () banked
 11546  000990  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11547  000992  26D9               	addwf	fsr2l,f,c
 11548  000994  0101               	movlb	1	; () banked
 11549  000996  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11550  000998  22DA               	addwfc	fsr2h,f,c
 11551  00099A  0101               	movlb	1	; () banked
 11552  00099C  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11553  00099E  12DE               	iorwf	postinc2,f,c
 11554  0009A0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11555  0009A2  12DE               	iorwf	postinc2,f,c
 11556  0009A4  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11557  0009A6  12DE               	iorwf	postinc2,f,c
 11558  0009A8  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 11559  0009AA  12DE               	iorwf	postinc2,f,c
 11560                           
 11561                           ;LED_BarGraph.c: 216: } else if (color == 0) {
 11562  0009AC  0012               	return	
 11563  0009AE                     l6484:
 11564  0009AE  5025               	movf	LEDsetBar@color,w,c
 11565  0009B0  1026               	iorwf	LEDsetBar@color+1,w,c
 11566  0009B2  A4D8               	btfss	status,2,c
 11567  0009B4  D06A               	goto	l6488
 11568                           
 11569                           ;LED_BarGraph.c: 218: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 11570  0009B6  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11571  0009BA  0E08               	movlw	8
 11572  0009BC  0101               	movlb	1	; () banked
 11573  0009BE  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11574  0009C0  0E01               	movlw	1
 11575  0009C2  0101               	movlb	1	; () banked
 11576  0009C4  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11577  0009C6  0E00               	movlw	0
 11578  0009C8  0101               	movlb	1	; () banked
 11579  0009CA  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11580  0009CC  0101               	movlb	1	; () banked
 11581  0009CE  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11582  0009D0  D004               	goto	u6964
 11583  0009D2                     u6965:
 11584  0009D2  90D8               	bcf	status,0,c
 11585  0009D4  0101               	movlb	1	; () banked
 11586  0009D6  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11587  0009D8  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11588  0009DA                     u6964:
 11589  0009DA  0101               	movlb	1	; () banked
 11590  0009DC  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11591  0009DE  D7F9               	goto	u6965
 11592  0009E0  0101               	movlb	1	; () banked
 11593  0009E2  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11594  0009E4  0101               	movlb	1	; () banked
 11595  0009E6  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11596  0009E8  0101               	movlb	1	; () banked
 11597  0009EA  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11598  0009EC  0101               	movlb	1	; () banked
 11599  0009EE  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11600  0009F0  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 11601  0009F4  0E01               	movlw	1
 11602  0009F6  0101               	movlb	1	; () banked
 11603  0009F8  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11604  0009FA  0E00               	movlw	0
 11605  0009FC  0101               	movlb	1	; () banked
 11606  0009FE  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11607  000A00  0101               	movlb	1	; () banked
 11608  000A02  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 11609  000A04  D004               	goto	u6974
 11610  000A06                     u6975:
 11611  000A06  90D8               	bcf	status,0,c
 11612  000A08  0101               	movlb	1	; () banked
 11613  000A0A  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 11614  000A0C  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 11615  000A0E                     u6974:
 11616  000A0E  0101               	movlb	1	; () banked
 11617  000A10  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 11618  000A12  D7F9               	goto	u6975
 11619  000A14  0101               	movlb	1	; () banked
 11620  000A16  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 11621  000A18  0101               	movlb	1	; () banked
 11622  000A1A  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11623  000A1C  0101               	movlb	1	; () banked
 11624  000A1E  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 11625  000A20  0101               	movlb	1	; () banked
 11626  000A22  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11627  000A24  0101               	movlb	1	; () banked
 11628  000A26  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11629  000A28  0101               	movlb	1	; () banked
 11630  000A2A  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 11631  000A2C  0101               	movlb	1	; () banked
 11632  000A2E  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11633  000A30  0101               	movlb	1	; () banked
 11634  000A32  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11635  000A34  0101               	movlb	1	; () banked
 11636  000A36  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 11637  000A38  0101               	movlb	1	; () banked
 11638  000A3A  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11639  000A3C  0101               	movlb	1	; () banked
 11640  000A3E  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 11641  000A40  0101               	movlb	1	; () banked
 11642  000A42  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 11643  000A44  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 11644  000A46  0101               	movlb	1	; () banked
 11645  000A48  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11646  000A4A  0101               	movlb	1	; () banked
 11647  000A4C  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 11648  000A4E  0E60               	movlw	low _displaybuffer
 11649  000A50  0101               	movlb	1	; () banked
 11650  000A52  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 11651  000A54  0E00               	movlw	high _displaybuffer
 11652  000A56  0101               	movlb	1	; () banked
 11653  000A58  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 11654  000A5A  90D8               	bcf	status,0,c
 11655  000A5C  3427               	rlcf	LEDsetBar@c,w,c
 11656  000A5E  6ED9               	movwf	fsr2l,c
 11657  000A60  3428               	rlcf	LEDsetBar@c+1,w,c
 11658  000A62  6EDA               	movwf	fsr2h,c
 11659  000A64  90D8               	bcf	status,0,c
 11660  000A66  36D9               	rlcf	fsr2l,f,c
 11661  000A68  36DA               	rlcf	fsr2h,f,c
 11662  000A6A  0101               	movlb	1	; () banked
 11663  000A6C  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 11664  000A6E  26D9               	addwf	fsr2l,f,c
 11665  000A70  0101               	movlb	1	; () banked
 11666  000A72  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 11667  000A74  22DA               	addwfc	fsr2h,f,c
 11668  000A76  0101               	movlb	1	; () banked
 11669  000A78  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11670  000A7A  16DE               	andwf	postinc2,f,c
 11671  000A7C  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11672  000A7E  16DE               	andwf	postinc2,f,c
 11673  000A80  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11674  000A82  16DE               	andwf	postinc2,f,c
 11675  000A84  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 11676  000A86  16DE               	andwf	postinc2,f,c
 11677                           
 11678                           ;LED_BarGraph.c: 219: } else if (color == 3) {
 11679  000A88  0012               	return	
 11680  000A8A                     l6488:
 11681  000A8A  0E03               	movlw	3
 11682  000A8C  1825               	xorwf	LEDsetBar@color,w,c
 11683  000A8E  1026               	iorwf	LEDsetBar@color+1,w,c
 11684  000A90  A4D8               	btfss	status,2,c
 11685  000A92  0012               	return	
 11686                           
 11687                           ;LED_BarGraph.c: 221: displaybuffer[c] |= (1<<(a + 8));
 11688  000A94  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11689  000A98  0E08               	movlw	8
 11690  000A9A  0101               	movlb	1	; () banked
 11691  000A9C  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11692  000A9E  0E01               	movlw	1
 11693  000AA0  0101               	movlb	1	; () banked
 11694  000AA2  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11695  000AA4  0E00               	movlw	0
 11696  000AA6  0101               	movlb	1	; () banked
 11697  000AA8  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11698  000AAA  0101               	movlb	1	; () banked
 11699  000AAC  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11700  000AAE  D004               	goto	u6994
 11701  000AB0                     u6995:
 11702  000AB0  90D8               	bcf	status,0,c
 11703  000AB2  0101               	movlb	1	; () banked
 11704  000AB4  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11705  000AB6  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11706  000AB8                     u6994:
 11707  000AB8  0101               	movlb	1	; () banked
 11708  000ABA  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11709  000ABC  D7F9               	goto	u6995
 11710  000ABE  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11711  000AC2  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11712  000AC6  0E00               	movlw	0
 11713  000AC8  0101               	movlb	1	; () banked
 11714  000ACA  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11715  000ACC  0EFF               	movlw	255
 11716  000ACE  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11717  000AD0  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11718  000AD2  0E60               	movlw	low _displaybuffer
 11719  000AD4  0101               	movlb	1	; () banked
 11720  000AD6  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11721  000AD8  0E00               	movlw	high _displaybuffer
 11722  000ADA  0101               	movlb	1	; () banked
 11723  000ADC  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11724  000ADE  90D8               	bcf	status,0,c
 11725  000AE0  3427               	rlcf	LEDsetBar@c,w,c
 11726  000AE2  6ED9               	movwf	fsr2l,c
 11727  000AE4  3428               	rlcf	LEDsetBar@c+1,w,c
 11728  000AE6  6EDA               	movwf	fsr2h,c
 11729  000AE8  90D8               	bcf	status,0,c
 11730  000AEA  36D9               	rlcf	fsr2l,f,c
 11731  000AEC  36DA               	rlcf	fsr2h,f,c
 11732  000AEE  0101               	movlb	1	; () banked
 11733  000AF0  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11734  000AF2  26D9               	addwf	fsr2l,f,c
 11735  000AF4  0101               	movlb	1	; () banked
 11736  000AF6  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11737  000AF8  22DA               	addwfc	fsr2h,f,c
 11738  000AFA  0101               	movlb	1	; () banked
 11739  000AFC  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11740  000AFE  12DE               	iorwf	postinc2,f,c
 11741  000B00  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11742  000B02  12DE               	iorwf	postinc2,f,c
 11743  000B04  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11744  000B06  12DE               	iorwf	postinc2,f,c
 11745  000B08  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11746  000B0A  12DE               	iorwf	postinc2,f,c
 11747                           
 11748                           ;LED_BarGraph.c: 223: displaybuffer[c] &= ~(1<<(a));
 11749  000B0C  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11750  000B10  0E01               	movlw	1
 11751  000B12  0101               	movlb	1	; () banked
 11752  000B14  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11753  000B16  0E00               	movlw	0
 11754  000B18  0101               	movlb	1	; () banked
 11755  000B1A  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11756  000B1C  0101               	movlb	1	; () banked
 11757  000B1E  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11758  000B20  D004               	goto	u7004
 11759  000B22                     u7005:
 11760  000B22  90D8               	bcf	status,0,c
 11761  000B24  0101               	movlb	1	; () banked
 11762  000B26  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11763  000B28  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11764  000B2A                     u7004:
 11765  000B2A  0101               	movlb	1	; () banked
 11766  000B2C  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11767  000B2E  D7F9               	goto	u7005
 11768  000B30  0101               	movlb	1	; () banked
 11769  000B32  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11770  000B34  0101               	movlb	1	; () banked
 11771  000B36  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11772  000B38  0101               	movlb	1	; () banked
 11773  000B3A  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11774  000B3C  0101               	movlb	1	; () banked
 11775  000B3E  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11776  000B40  0101               	movlb	1	; () banked
 11777  000B42  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11778  000B44  0101               	movlb	1	; () banked
 11779  000B46  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11780  000B48  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11781  000B4A  0101               	movlb	1	; () banked
 11782  000B4C  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11783  000B4E  0101               	movlb	1	; () banked
 11784  000B50  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11785  000B52  0E60               	movlw	low _displaybuffer
 11786  000B54  0101               	movlb	1	; () banked
 11787  000B56  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11788  000B58  0E00               	movlw	high _displaybuffer
 11789  000B5A  0101               	movlb	1	; () banked
 11790  000B5C  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11791  000B5E  90D8               	bcf	status,0,c
 11792  000B60  3427               	rlcf	LEDsetBar@c,w,c
 11793  000B62  6ED9               	movwf	fsr2l,c
 11794  000B64  3428               	rlcf	LEDsetBar@c+1,w,c
 11795  000B66  6EDA               	movwf	fsr2h,c
 11796  000B68  90D8               	bcf	status,0,c
 11797  000B6A  36D9               	rlcf	fsr2l,f,c
 11798  000B6C  36DA               	rlcf	fsr2h,f,c
 11799  000B6E  0101               	movlb	1	; () banked
 11800  000B70  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11801  000B72  26D9               	addwf	fsr2l,f,c
 11802  000B74  0101               	movlb	1	; () banked
 11803  000B76  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11804  000B78  22DA               	addwfc	fsr2h,f,c
 11805  000B7A  0101               	movlb	1	; () banked
 11806  000B7C  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11807  000B7E  16DE               	andwf	postinc2,f,c
 11808  000B80  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11809  000B82  16DE               	andwf	postinc2,f,c
 11810  000B84  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11811  000B86  16DE               	andwf	postinc2,f,c
 11812  000B88  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11813  000B8A  16DE               	andwf	postinc2,f,c
 11814                           
 11815                           ; BSR set to: 1
 11816                           
 11817                           ; BSR set to: 1
 11818                           
 11819                           ; BSR set to: 1
 11820  000B8C  0012               	return	
 11821  000B8E                     __end_of_LEDsetBar:
 11822                           	opt stack 0
 11823                           tosu	equ	0xFFF
 11824                           tosh	equ	0xFFE
 11825                           tosl	equ	0xFFD
 11826                           pclath	equ	0xFFA
 11827                           tblptru	equ	0xFF8
 11828                           tblptrh	equ	0xFF7
 11829                           tblptrl	equ	0xFF6
 11830                           tablat	equ	0xFF5
 11831                           prodh	equ	0xFF4
 11832                           prodl	equ	0xFF3
 11833                           intcon	equ	0xFF2
 11834                           intcon2	equ	0xFF1
 11835                           indf0	equ	0xFEF
 11836                           postinc0	equ	0xFEE
 11837                           fsr0h	equ	0xFEA
 11838                           fsr0l	equ	0xFE9
 11839                           wreg	equ	0xFE8
 11840                           indf2	equ	0xFDF
 11841                           postinc2	equ	0xFDE
 11842                           postdec2	equ	0xFDD
 11843                           plusw2	equ	0xFDB
 11844                           fsr2h	equ	0xFDA
 11845                           fsr2l	equ	0xFD9
 11846                           status	equ	0xFD8
 11847                           
 11848 ;; *************** function ___awdiv *****************
 11849 ;; Defined at:
 11850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  dividend        2   26[COMRAM] int 
 11853 ;;  divisor         2   28[COMRAM] int 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;  quotient        2   32[COMRAM] int 
 11856 ;;  sign            1   31[COMRAM] unsigned char 
 11857 ;;  counter         1   30[COMRAM] unsigned char 
 11858 ;; Return value:  Size  Location     Type
 11859 ;;                  2   26[COMRAM] int 
 11860 ;; Registers used:
 11861 ;;		wreg, status,2, status,0
 11862 ;; Tracked objects:
 11863 ;;		On entry : 0/0
 11864 ;;		On exit  : 0/0
 11865 ;;		Unchanged: 0/0
 11866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11867 ;;      Params:         4       0       0       0       0       0       0
 11868 ;;      Locals:         4       0       0       0       0       0       0
 11869 ;;      Temps:          0       0       0       0       0       0       0
 11870 ;;      Totals:         8       0       0       0       0       0       0
 11871 ;;Total ram usage:        8 bytes
 11872 ;; Hardware stack levels used:    1
 11873 ;; Hardware stack levels required when called:    4
 11874 ;; This function calls:
 11875 ;;		Nothing
 11876 ;; This function is called by:
 11877 ;;		_LEDsetBar
 11878 ;;		_begin
 11879 ;; This function uses a non-reentrant model
 11880 ;;
 11881                           
 11882                           	psect	text58
 11883  002698                     __ptext58:
 11884                           	opt stack 0
 11885  002698                     ___awdiv:
 11886                           	opt stack 24
 11887                           
 11888                           ;incstack = 0
 11889  002698  0E00               	movlw	0
 11890  00269A  6E20               	movwf	___awdiv@sign,c
 11891  00269C  AE1E               	btfss	___awdiv@divisor+1,7,c
 11892  00269E  D006               	goto	l6394
 11893  0026A0  6C1D               	negf	___awdiv@divisor,c
 11894  0026A2  1E1E               	comf	___awdiv@divisor+1,f,c
 11895  0026A4  B0D8               	btfsc	status,0,c
 11896  0026A6  2A1E               	incf	___awdiv@divisor+1,f,c
 11897  0026A8  0E01               	movlw	1
 11898  0026AA  6E20               	movwf	___awdiv@sign,c
 11899  0026AC                     l6394:
 11900  0026AC  AE1C               	btfss	___awdiv@dividend+1,7,c
 11901  0026AE  D006               	goto	l6400
 11902  0026B0  6C1B               	negf	___awdiv@dividend,c
 11903  0026B2  1E1C               	comf	___awdiv@dividend+1,f,c
 11904  0026B4  B0D8               	btfsc	status,0,c
 11905  0026B6  2A1C               	incf	___awdiv@dividend+1,f,c
 11906  0026B8  0E01               	movlw	1
 11907  0026BA  1A20               	xorwf	___awdiv@sign,f,c
 11908  0026BC                     l6400:
 11909  0026BC  0E00               	movlw	0
 11910  0026BE  6E22               	movwf	___awdiv@quotient+1,c
 11911  0026C0  0E00               	movlw	0
 11912  0026C2  6E21               	movwf	___awdiv@quotient,c
 11913  0026C4  501D               	movf	___awdiv@divisor,w,c
 11914  0026C6  101E               	iorwf	___awdiv@divisor+1,w,c
 11915  0026C8  B4D8               	btfsc	status,2,c
 11916  0026CA  D01C               	goto	l6422
 11917  0026CC  0E01               	movlw	1
 11918  0026CE  6E1F               	movwf	___awdiv@counter,c
 11919  0026D0  D004               	goto	l6408
 11920  0026D2                     l6406:
 11921  0026D2  90D8               	bcf	status,0,c
 11922  0026D4  361D               	rlcf	___awdiv@divisor,f,c
 11923  0026D6  361E               	rlcf	___awdiv@divisor+1,f,c
 11924  0026D8  2A1F               	incf	___awdiv@counter,f,c
 11925  0026DA                     l6408:
 11926  0026DA  AE1E               	btfss	___awdiv@divisor+1,7,c
 11927  0026DC  D7FA               	goto	l6406
 11928  0026DE                     l6410:
 11929  0026DE  90D8               	bcf	status,0,c
 11930  0026E0  3621               	rlcf	___awdiv@quotient,f,c
 11931  0026E2  3622               	rlcf	___awdiv@quotient+1,f,c
 11932  0026E4  501D               	movf	___awdiv@divisor,w,c
 11933  0026E6  5C1B               	subwf	___awdiv@dividend,w,c
 11934  0026E8  501E               	movf	___awdiv@divisor+1,w,c
 11935  0026EA  581C               	subwfb	___awdiv@dividend+1,w,c
 11936  0026EC  A0D8               	btfss	status,0,c
 11937  0026EE  D005               	goto	l6418
 11938  0026F0  501D               	movf	___awdiv@divisor,w,c
 11939  0026F2  5E1B               	subwf	___awdiv@dividend,f,c
 11940  0026F4  501E               	movf	___awdiv@divisor+1,w,c
 11941  0026F6  5A1C               	subwfb	___awdiv@dividend+1,f,c
 11942  0026F8  8021               	bsf	___awdiv@quotient,0,c
 11943  0026FA                     l6418:
 11944  0026FA  90D8               	bcf	status,0,c
 11945  0026FC  321E               	rrcf	___awdiv@divisor+1,f,c
 11946  0026FE  321D               	rrcf	___awdiv@divisor,f,c
 11947  002700  2E1F               	decfsz	___awdiv@counter,f,c
 11948  002702  D7ED               	goto	l6410
 11949  002704                     l6422:
 11950  002704  5020               	movf	___awdiv@sign,w,c
 11951  002706  B4D8               	btfsc	status,2,c
 11952  002708  D004               	goto	l6426
 11953  00270A  6C21               	negf	___awdiv@quotient,c
 11954  00270C  1E22               	comf	___awdiv@quotient+1,f,c
 11955  00270E  B0D8               	btfsc	status,0,c
 11956  002710  2A22               	incf	___awdiv@quotient+1,f,c
 11957  002712                     l6426:
 11958  002712  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 11959  002716  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 11960  00271A  0012               	return	
 11961  00271C                     __end_of___awdiv:
 11962                           	opt stack 0
 11963                           tosu	equ	0xFFF
 11964                           tosh	equ	0xFFE
 11965                           tosl	equ	0xFFD
 11966                           pclath	equ	0xFFA
 11967                           tblptru	equ	0xFF8
 11968                           tblptrh	equ	0xFF7
 11969                           tblptrl	equ	0xFF6
 11970                           tablat	equ	0xFF5
 11971                           prodh	equ	0xFF4
 11972                           prodl	equ	0xFF3
 11973                           intcon	equ	0xFF2
 11974                           intcon2	equ	0xFF1
 11975                           indf0	equ	0xFEF
 11976                           postinc0	equ	0xFEE
 11977                           fsr0h	equ	0xFEA
 11978                           fsr0l	equ	0xFE9
 11979                           wreg	equ	0xFE8
 11980                           indf2	equ	0xFDF
 11981                           postinc2	equ	0xFDE
 11982                           postdec2	equ	0xFDD
 11983                           plusw2	equ	0xFDB
 11984                           fsr2h	equ	0xFDA
 11985                           fsr2l	equ	0xFD9
 11986                           status	equ	0xFD8
 11987                           
 11988 ;; *************** function _LEDbegin *****************
 11989 ;; Defined at:
 11990 ;;		line 85 in file "LED_BarGraph.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  i2c_addr        1    wreg     unsigned char 
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;  i2c_addr        1   10[BANK1 ] unsigned char 
 11995 ;;  writeBuffer     3    5[BANK1 ] unsigned char [3]
 11996 ;;  timeOut         2    8[BANK1 ] unsigned int 
 11997 ;;  status          1   11[BANK1 ] enum E8697
 11998 ;; Return value:  Size  Location     Type
 11999 ;;                  1    wreg      void 
 12000 ;; Registers used:
 12001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12002 ;; Tracked objects:
 12003 ;;		On entry : 0/0
 12004 ;;		On exit  : 0/0
 12005 ;;		Unchanged: 0/0
 12006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12007 ;;      Params:         0       0       0       0       0       0       0
 12008 ;;      Locals:         0       0       7       0       0       0       0
 12009 ;;      Temps:          0       0       0       0       0       0       0
 12010 ;;      Totals:         0       0       7       0       0       0       0
 12011 ;;Total ram usage:        7 bytes
 12012 ;; Hardware stack levels used:    1
 12013 ;; Hardware stack levels required when called:    7
 12014 ;; This function calls:
 12015 ;;		_I2C1_MasterWrite
 12016 ;;		_LEDBsetBrightness
 12017 ;;		_LEDblinkRate
 12018 ;; This function is called by:
 12019 ;;		_main
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           	psect	text59
 12024  002286                     __ptext59:
 12025                           	opt stack 0
 12026  002286                     _LEDbegin:
 12027                           	opt stack 23
 12028                           
 12029                           ;incstack = 0
 12030                           ;LEDbegin@i2c_addr stored from wreg
 12031  002286  0101               	movlb	1	; () banked
 12032  002288  6F43               	movwf	LEDbegin@i2c_addr& (0+255),b
 12033                           
 12034                           ;LED_BarGraph.c: 86: uint8_t writeBuffer[3];
 12035                           ;LED_BarGraph.c: 87: uint16_t timeOut;
 12036                           ;LED_BarGraph.c: 88: writeBuffer[0] = 0x21;
 12037  00228A  0E21               	movlw	33
 12038  00228C  0101               	movlb	1	; () banked
 12039  00228E  6F3E               	movwf	LEDbegin@writeBuffer& (0+255),b
 12040                           
 12041                           ;LED_BarGraph.c: 89: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12042  002290  0E02               	movlw	2
 12043  002292  0101               	movlb	1	; () banked
 12044  002294  6F44               	movwf	LEDbegin@status& (0+255),b
 12045                           
 12046                           ;LED_BarGraph.c: 91: timeOut = 0;
 12047  002296  0E00               	movlw	0
 12048  002298  0101               	movlb	1	; () banked
 12049  00229A  6F42               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 12050  00229C  0E00               	movlw	0
 12051  00229E  6F41               	movwf	LEDbegin@timeOut& (0+255),b
 12052                           
 12053                           ;LED_BarGraph.c: 92: while (status != I2C1_MESSAGE_FAIL) {
 12054  0022A0  D02F               	goto	l6948
 12055  0022A2                     l6928:
 12056                           
 12057                           ; BSR set to: 1
 12058                           ;LED_BarGraph.c: 94: I2C1_MasterWrite(&writeBuffer,
 12059                           ;LED_BarGraph.c: 95: 1,
 12060                           ;LED_BarGraph.c: 96: i2c_addr,
 12061                           ;LED_BarGraph.c: 97: &status);
 12062  0022A2  0E3E               	movlw	low LEDbegin@writeBuffer
 12063  0022A4  0100               	movlb	0	; () banked
 12064  0022A6  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12065  0022A8  0E01               	movlw	high LEDbegin@writeBuffer
 12066  0022AA  0100               	movlb	0	; () banked
 12067  0022AC  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12068  0022AE  0E00               	movlw	0
 12069  0022B0  0100               	movlb	0	; () banked
 12070  0022B2  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12071  0022B4  0E01               	movlw	1
 12072  0022B6  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12073  0022B8  C143  F0F6         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 12074  0022BC  0100               	movlb	0	; () banked
 12075  0022BE  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12076  0022C0  0E44               	movlw	low LEDbegin@status
 12077  0022C2  0100               	movlb	0	; () banked
 12078  0022C4  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12079  0022C6  0E01               	movlw	high LEDbegin@status
 12080  0022C8  0100               	movlb	0	; () banked
 12081  0022CA  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12082  0022CC  ECE1  F015         	call	_I2C1_MasterWrite	;wreg free
 12083  0022D0                     l6930:
 12084  0022D0  0E02               	movlw	2
 12085  0022D2  0101               	movlb	1	; () banked
 12086  0022D4  1944               	xorwf	LEDbegin@status& (0+255),w,b
 12087  0022D6  B4D8               	btfsc	status,2,c
 12088  0022D8  D7FB               	goto	l6930
 12089                           
 12090                           ; BSR set to: 1
 12091                           ;LED_BarGraph.c: 102: if (status == I2C1_MESSAGE_COMPLETE)
 12092                           
 12093                           ; BSR set to: 1
 12094  0022DA  0101               	movlb	1	; () banked
 12095  0022DC  5144               	movf	LEDbegin@status& (0+255),w,b
 12096  0022DE  0101               	movlb	1	; () banked
 12097  0022E0  B4D8               	btfsc	status,2,c
 12098  0022E2  D012               	goto	l6950
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;LED_BarGraph.c: 104: if (timeOut == 100)
 12102                           
 12103                           ; BSR set to: 1
 12104                           
 12105                           ; BSR set to: 1
 12106                           ;LED_BarGraph.c: 103: break;
 12107  0022E4  0E64               	movlw	100
 12108  0022E6  0101               	movlb	1	; () banked
 12109  0022E8  1941               	xorwf	LEDbegin@timeOut& (0+255),w,b
 12110  0022EA  0101               	movlb	1	; () banked
 12111  0022EC  1142               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 12112  0022EE  B4D8               	btfsc	status,2,c
 12113  0022F0  D00B               	goto	l6950
 12114                           
 12115                           ; BSR set to: 1
 12116                           ;LED_BarGraph.c: 106: if (status == I2C1_MESSAGE_FAIL)
 12117                           
 12118                           ; BSR set to: 1
 12119                           
 12120                           ; BSR set to: 1
 12121                           ;LED_BarGraph.c: 105: break;
 12122  0022F2  0101               	movlb	1	; () banked
 12123  0022F4  0544               	decf	LEDbegin@status& (0+255),w,b
 12124  0022F6  B4D8               	btfsc	status,2,c
 12125  0022F8  D007               	goto	l6950
 12126                           
 12127                           ; BSR set to: 1
 12128                           ;LED_BarGraph.c: 108: else
 12129                           ;LED_BarGraph.c: 109: timeOut++;
 12130                           
 12131                           ; BSR set to: 1
 12132                           
 12133                           ; BSR set to: 1
 12134                           
 12135                           ; BSR set to: 1
 12136                           ;LED_BarGraph.c: 107: break;
 12137  0022FA  0101               	movlb	1	; () banked
 12138  0022FC  4B41               	infsnz	LEDbegin@timeOut& (0+255),f,b
 12139  0022FE  2B42               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 12140  002300                     l6948:
 12141                           
 12142                           ; BSR set to: 1
 12143  002300  0101               	movlb	1	; () banked
 12144  002302  0544               	decf	LEDbegin@status& (0+255),w,b
 12145  002304  A4D8               	btfss	status,2,c
 12146  002306  D7CD               	goto	l6928
 12147  002308                     l6950:
 12148                           
 12149                           ; BSR set to: 1
 12150                           ;LED_BarGraph.c: 110: }
 12151                           ;LED_BarGraph.c: 112: LEDblinkRate(0, i2c_addr);
 12152  002308  0E00               	movlw	0
 12153  00230A  6E26               	movwf	LEDblinkRate@b+1,c
 12154  00230C  0E00               	movlw	0
 12155  00230E  6E25               	movwf	LEDblinkRate@b,c
 12156  002310  C143  F027         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 12157  002314  EC95  F011         	call	_LEDblinkRate	;wreg free
 12158                           
 12159                           ;LED_BarGraph.c: 113: LEDBsetBrightness(15, i2c_addr);
 12160  002318  0E00               	movlw	0
 12161  00231A  6E26               	movwf	LEDBsetBrightness@b+1,c
 12162  00231C  0E0F               	movlw	15
 12163  00231E  6E25               	movwf	LEDBsetBrightness@b,c
 12164  002320  C143  F027         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 12165  002324  ECE3  F011         	call	_LEDBsetBrightness	;wreg free
 12166  002328  0012               	return		;funcret
 12167  00232A                     __end_of_LEDbegin:
 12168                           	opt stack 0
 12169                           tosu	equ	0xFFF
 12170                           tosh	equ	0xFFE
 12171                           tosl	equ	0xFFD
 12172                           pclath	equ	0xFFA
 12173                           tblptru	equ	0xFF8
 12174                           tblptrh	equ	0xFF7
 12175                           tblptrl	equ	0xFF6
 12176                           tablat	equ	0xFF5
 12177                           prodh	equ	0xFF4
 12178                           prodl	equ	0xFF3
 12179                           intcon	equ	0xFF2
 12180                           intcon2	equ	0xFF1
 12181                           indf0	equ	0xFEF
 12182                           postinc0	equ	0xFEE
 12183                           fsr0h	equ	0xFEA
 12184                           fsr0l	equ	0xFE9
 12185                           wreg	equ	0xFE8
 12186                           indf2	equ	0xFDF
 12187                           postinc2	equ	0xFDE
 12188                           postdec2	equ	0xFDD
 12189                           plusw2	equ	0xFDB
 12190                           fsr2h	equ	0xFDA
 12191                           fsr2l	equ	0xFD9
 12192                           status	equ	0xFD8
 12193                           
 12194 ;; *************** function _LEDblinkRate *****************
 12195 ;; Defined at:
 12196 ;;		line 55 in file "LED_BarGraph.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  b               2   36[COMRAM] int 
 12199 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12202 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12203 ;;  status          1    4[BANK1 ] enum E8697
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  1    wreg      void 
 12206 ;; Registers used:
 12207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12213 ;;      Params:         3       0       0       0       0       0       0
 12214 ;;      Locals:         0       0       5       0       0       0       0
 12215 ;;      Temps:          0       0       0       0       0       0       0
 12216 ;;      Totals:         3       0       5       0       0       0       0
 12217 ;;Total ram usage:        8 bytes
 12218 ;; Hardware stack levels used:    1
 12219 ;; Hardware stack levels required when called:    6
 12220 ;; This function calls:
 12221 ;;		_I2C1_MasterWrite
 12222 ;; This function is called by:
 12223 ;;		_LEDbegin
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           	psect	text60
 12228  00232A                     __ptext60:
 12229                           	opt stack 0
 12230  00232A                     _LEDblinkRate:
 12231                           	opt stack 23
 12232                           
 12233                           ;LED_BarGraph.c: 56: if (b > 3) b = 0;
 12234                           
 12235                           ;incstack = 0
 12236  00232A  BE26               	btfsc	LEDblinkRate@b+1,7,c
 12237  00232C  D00A               	goto	l6528
 12238  00232E  5026               	movf	LEDblinkRate@b+1,w,c
 12239  002330  E104               	bnz	u7070
 12240  002332  0E04               	movlw	4
 12241  002334  5C25               	subwf	LEDblinkRate@b,w,c
 12242  002336  A0D8               	btfss	status,0,c
 12243  002338  D004               	goto	l6528
 12244  00233A                     u7070:
 12245  00233A  0E00               	movlw	0
 12246  00233C  6E26               	movwf	LEDblinkRate@b+1,c
 12247  00233E  0E00               	movlw	0
 12248  002340  6E25               	movwf	LEDblinkRate@b,c
 12249  002342                     l6528:
 12250                           
 12251                           ;LED_BarGraph.c: 57: uint8_t writeBuffer[2];
 12252                           ;LED_BarGraph.c: 58: uint16_t timeOut;
 12253                           ;LED_BarGraph.c: 59: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 12254  002342  5025               	movf	LEDblinkRate@b,w,c
 12255  002344  2425               	addwf	LEDblinkRate@b,w,c
 12256  002346  0981               	iorlw	129
 12257  002348  0101               	movlb	1	; () banked
 12258  00234A  6F39               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 12259                           
 12260                           ; BSR set to: 1
 12261                           ;LED_BarGraph.c: 60: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12262  00234C  0E02               	movlw	2
 12263  00234E  0101               	movlb	1	; () banked
 12264  002350  6F3D               	movwf	LEDblinkRate@status& (0+255),b
 12265                           
 12266                           ; BSR set to: 1
 12267                           ;LED_BarGraph.c: 62: timeOut = 0;
 12268  002352  0E00               	movlw	0
 12269  002354  0101               	movlb	1	; () banked
 12270  002356  6F3C               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 12271  002358  0E00               	movlw	0
 12272  00235A  6F3B               	movwf	LEDblinkRate@timeOut& (0+255),b
 12273                           
 12274                           ;LED_BarGraph.c: 63: while (status != I2C1_MESSAGE_FAIL) {
 12275  00235C  D02F               	goto	l6554
 12276  00235E                     l6534:
 12277                           
 12278                           ; BSR set to: 1
 12279                           ;LED_BarGraph.c: 65: I2C1_MasterWrite(&writeBuffer,
 12280                           ;LED_BarGraph.c: 66: 1,
 12281                           ;LED_BarGraph.c: 67: i2c_addr,
 12282                           ;LED_BarGraph.c: 68: &status);
 12283  00235E  0E39               	movlw	low LEDblinkRate@writeBuffer
 12284  002360  0100               	movlb	0	; () banked
 12285  002362  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12286  002364  0E01               	movlw	high LEDblinkRate@writeBuffer
 12287  002366  0100               	movlb	0	; () banked
 12288  002368  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12289  00236A  0E00               	movlw	0
 12290  00236C  0100               	movlb	0	; () banked
 12291  00236E  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12292  002370  0E01               	movlw	1
 12293  002372  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12294  002374  C027  F0F6         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 12295  002378  0100               	movlb	0	; () banked
 12296  00237A  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12297  00237C  0E3D               	movlw	low LEDblinkRate@status
 12298  00237E  0100               	movlb	0	; () banked
 12299  002380  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12300  002382  0E01               	movlw	high LEDblinkRate@status
 12301  002384  0100               	movlb	0	; () banked
 12302  002386  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12303  002388  ECE1  F015         	call	_I2C1_MasterWrite	;wreg free
 12304  00238C                     l6536:
 12305  00238C  0E02               	movlw	2
 12306  00238E  0101               	movlb	1	; () banked
 12307  002390  193D               	xorwf	LEDblinkRate@status& (0+255),w,b
 12308  002392  B4D8               	btfsc	status,2,c
 12309  002394  D7FB               	goto	l6536
 12310                           
 12311                           ; BSR set to: 1
 12312                           ;LED_BarGraph.c: 73: if (status == I2C1_MESSAGE_COMPLETE)
 12313                           
 12314                           ; BSR set to: 1
 12315  002396  0101               	movlb	1	; () banked
 12316  002398  513D               	movf	LEDblinkRate@status& (0+255),w,b
 12317  00239A  0101               	movlb	1	; () banked
 12318  00239C  B4D8               	btfsc	status,2,c
 12319  00239E  0012               	return	
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;LED_BarGraph.c: 75: if (timeOut == 100)
 12323                           
 12324                           ; BSR set to: 1
 12325                           
 12326                           ; BSR set to: 1
 12327                           ;LED_BarGraph.c: 74: break;
 12328  0023A0  0E64               	movlw	100
 12329  0023A2  0101               	movlb	1	; () banked
 12330  0023A4  193B               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 12331  0023A6  0101               	movlb	1	; () banked
 12332  0023A8  113C               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 12333  0023AA  B4D8               	btfsc	status,2,c
 12334  0023AC  0012               	return	
 12335                           
 12336                           ; BSR set to: 1
 12337                           ;LED_BarGraph.c: 77: if (status == I2C1_MESSAGE_FAIL)
 12338                           
 12339                           ; BSR set to: 1
 12340                           
 12341                           ; BSR set to: 1
 12342                           ;LED_BarGraph.c: 76: break;
 12343  0023AE  0101               	movlb	1	; () banked
 12344  0023B0  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12345  0023B2  B4D8               	btfsc	status,2,c
 12346  0023B4  0012               	return	
 12347                           
 12348                           ; BSR set to: 1
 12349                           ;LED_BarGraph.c: 79: else
 12350                           ;LED_BarGraph.c: 80: timeOut++;
 12351                           
 12352                           ; BSR set to: 1
 12353                           
 12354                           ; BSR set to: 1
 12355                           
 12356                           ; BSR set to: 1
 12357                           ;LED_BarGraph.c: 78: break;
 12358  0023B6  0101               	movlb	1	; () banked
 12359  0023B8  4B3B               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 12360  0023BA  2B3C               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 12361  0023BC                     l6554:
 12362                           
 12363                           ; BSR set to: 1
 12364  0023BC  0101               	movlb	1	; () banked
 12365  0023BE  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12366  0023C0  B4D8               	btfsc	status,2,c
 12367  0023C2  0012               	return	
 12368  0023C4  D7CC               	goto	l6534
 12369  0023C6                     __end_of_LEDblinkRate:
 12370                           	opt stack 0
 12371                           tosu	equ	0xFFF
 12372                           tosh	equ	0xFFE
 12373                           tosl	equ	0xFFD
 12374                           pclath	equ	0xFFA
 12375                           tblptru	equ	0xFF8
 12376                           tblptrh	equ	0xFF7
 12377                           tblptrl	equ	0xFF6
 12378                           tablat	equ	0xFF5
 12379                           prodh	equ	0xFF4
 12380                           prodl	equ	0xFF3
 12381                           intcon	equ	0xFF2
 12382                           intcon2	equ	0xFF1
 12383                           indf0	equ	0xFEF
 12384                           postinc0	equ	0xFEE
 12385                           fsr0h	equ	0xFEA
 12386                           fsr0l	equ	0xFE9
 12387                           wreg	equ	0xFE8
 12388                           indf2	equ	0xFDF
 12389                           postinc2	equ	0xFDE
 12390                           postdec2	equ	0xFDD
 12391                           plusw2	equ	0xFDB
 12392                           fsr2h	equ	0xFDA
 12393                           fsr2l	equ	0xFD9
 12394                           status	equ	0xFD8
 12395                           
 12396 ;; *************** function _LEDBsetBrightness *****************
 12397 ;; Defined at:
 12398 ;;		line 25 in file "LED_BarGraph.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;  b               2   36[COMRAM] int 
 12401 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12404 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12405 ;;  status          1    4[BANK1 ] enum E8697
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      void 
 12408 ;; Registers used:
 12409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12415 ;;      Params:         3       0       0       0       0       0       0
 12416 ;;      Locals:         0       0       5       0       0       0       0
 12417 ;;      Temps:          0       0       0       0       0       0       0
 12418 ;;      Totals:         3       0       5       0       0       0       0
 12419 ;;Total ram usage:        8 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    6
 12422 ;; This function calls:
 12423 ;;		_I2C1_MasterWrite
 12424 ;; This function is called by:
 12425 ;;		_LEDbegin
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           	psect	text61
 12430  0023C6                     __ptext61:
 12431                           	opt stack 0
 12432  0023C6                     _LEDBsetBrightness:
 12433                           	opt stack 23
 12434                           
 12435                           ;LED_BarGraph.c: 26: if (b > 15) b = 15;
 12436                           
 12437                           ; BSR set to: 1
 12438                           ;incstack = 0
 12439  0023C6  BE26               	btfsc	LEDBsetBrightness@b+1,7,c
 12440  0023C8  D00A               	goto	l6496
 12441  0023CA  5026               	movf	LEDBsetBrightness@b+1,w,c
 12442  0023CC  E104               	bnz	u7010
 12443  0023CE  0E10               	movlw	16
 12444  0023D0  5C25               	subwf	LEDBsetBrightness@b,w,c
 12445  0023D2  A0D8               	btfss	status,0,c
 12446  0023D4  D004               	goto	l6496
 12447  0023D6                     u7010:
 12448  0023D6  0E00               	movlw	0
 12449  0023D8  6E26               	movwf	LEDBsetBrightness@b+1,c
 12450  0023DA  0E0F               	movlw	15
 12451  0023DC  6E25               	movwf	LEDBsetBrightness@b,c
 12452  0023DE                     l6496:
 12453                           
 12454                           ;LED_BarGraph.c: 27: uint8_t writeBuffer[2];
 12455                           ;LED_BarGraph.c: 28: uint16_t timeOut;
 12456                           ;LED_BarGraph.c: 29: writeBuffer[0] = (0xE0 | b);
 12457  0023DE  5025               	movf	LEDBsetBrightness@b,w,c
 12458  0023E0  09E0               	iorlw	224
 12459  0023E2  0101               	movlb	1	; () banked
 12460  0023E4  6F39               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 12461                           
 12462                           ; BSR set to: 1
 12463                           ;LED_BarGraph.c: 30: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12464  0023E6  0E02               	movlw	2
 12465  0023E8  0101               	movlb	1	; () banked
 12466  0023EA  6F3D               	movwf	LEDBsetBrightness@status& (0+255),b
 12467                           
 12468                           ; BSR set to: 1
 12469                           ;LED_BarGraph.c: 32: timeOut = 0;
 12470  0023EC  0E00               	movlw	0
 12471  0023EE  0101               	movlb	1	; () banked
 12472  0023F0  6F3C               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 12473  0023F2  0E00               	movlw	0
 12474  0023F4  6F3B               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 12475                           
 12476                           ;LED_BarGraph.c: 33: while (status != I2C1_MESSAGE_FAIL) {
 12477  0023F6  D02F               	goto	l6522
 12478  0023F8                     l6502:
 12479                           
 12480                           ; BSR set to: 1
 12481                           ;LED_BarGraph.c: 35: I2C1_MasterWrite(&writeBuffer,
 12482                           ;LED_BarGraph.c: 36: 1,
 12483                           ;LED_BarGraph.c: 37: i2c_addr,
 12484                           ;LED_BarGraph.c: 38: &status);
 12485  0023F8  0E39               	movlw	low LEDBsetBrightness@writeBuffer
 12486  0023FA  0100               	movlb	0	; () banked
 12487  0023FC  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12488  0023FE  0E01               	movlw	high LEDBsetBrightness@writeBuffer
 12489  002400  0100               	movlb	0	; () banked
 12490  002402  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12491  002404  0E00               	movlw	0
 12492  002406  0100               	movlb	0	; () banked
 12493  002408  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12494  00240A  0E01               	movlw	1
 12495  00240C  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12496  00240E  C027  F0F6         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 12497  002412  0100               	movlb	0	; () banked
 12498  002414  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12499  002416  0E3D               	movlw	low LEDBsetBrightness@status
 12500  002418  0100               	movlb	0	; () banked
 12501  00241A  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12502  00241C  0E01               	movlw	high LEDBsetBrightness@status
 12503  00241E  0100               	movlb	0	; () banked
 12504  002420  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12505  002422  ECE1  F015         	call	_I2C1_MasterWrite	;wreg free
 12506  002426                     l6504:
 12507  002426  0E02               	movlw	2
 12508  002428  0101               	movlb	1	; () banked
 12509  00242A  193D               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 12510  00242C  B4D8               	btfsc	status,2,c
 12511  00242E  D7FB               	goto	l6504
 12512                           
 12513                           ; BSR set to: 1
 12514                           ;LED_BarGraph.c: 43: if (status == I2C1_MESSAGE_COMPLETE)
 12515                           
 12516                           ; BSR set to: 1
 12517  002430  0101               	movlb	1	; () banked
 12518  002432  513D               	movf	LEDBsetBrightness@status& (0+255),w,b
 12519  002434  0101               	movlb	1	; () banked
 12520  002436  B4D8               	btfsc	status,2,c
 12521  002438  0012               	return	
 12522                           
 12523                           ; BSR set to: 1
 12524                           ;LED_BarGraph.c: 45: if (timeOut == 100)
 12525                           
 12526                           ; BSR set to: 1
 12527                           
 12528                           ; BSR set to: 1
 12529                           ;LED_BarGraph.c: 44: break;
 12530  00243A  0E64               	movlw	100
 12531  00243C  0101               	movlb	1	; () banked
 12532  00243E  193B               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 12533  002440  0101               	movlb	1	; () banked
 12534  002442  113C               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 12535  002444  B4D8               	btfsc	status,2,c
 12536  002446  0012               	return	
 12537                           
 12538                           ; BSR set to: 1
 12539                           ;LED_BarGraph.c: 47: if (status == I2C1_MESSAGE_FAIL)
 12540                           
 12541                           ; BSR set to: 1
 12542                           
 12543                           ; BSR set to: 1
 12544                           ;LED_BarGraph.c: 46: break;
 12545  002448  0101               	movlb	1	; () banked
 12546  00244A  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12547  00244C  B4D8               	btfsc	status,2,c
 12548  00244E  0012               	return	
 12549                           
 12550                           ; BSR set to: 1
 12551                           ;LED_BarGraph.c: 49: else
 12552                           ;LED_BarGraph.c: 50: timeOut++;
 12553                           
 12554                           ; BSR set to: 1
 12555                           
 12556                           ; BSR set to: 1
 12557                           
 12558                           ; BSR set to: 1
 12559                           ;LED_BarGraph.c: 48: break;
 12560  002450  0101               	movlb	1	; () banked
 12561  002452  4B3B               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 12562  002454  2B3C               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 12563  002456                     l6522:
 12564                           
 12565                           ; BSR set to: 1
 12566  002456  0101               	movlb	1	; () banked
 12567  002458  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12568  00245A  B4D8               	btfsc	status,2,c
 12569  00245C  0012               	return	
 12570  00245E  D7CC               	goto	l6502
 12571  002460                     __end_of_LEDBsetBrightness:
 12572                           	opt stack 0
 12573                           tosu	equ	0xFFF
 12574                           tosh	equ	0xFFE
 12575                           tosl	equ	0xFFD
 12576                           pclath	equ	0xFFA
 12577                           tblptru	equ	0xFF8
 12578                           tblptrh	equ	0xFF7
 12579                           tblptrl	equ	0xFF6
 12580                           tablat	equ	0xFF5
 12581                           prodh	equ	0xFF4
 12582                           prodl	equ	0xFF3
 12583                           intcon	equ	0xFF2
 12584                           intcon2	equ	0xFF1
 12585                           indf0	equ	0xFEF
 12586                           postinc0	equ	0xFEE
 12587                           fsr0h	equ	0xFEA
 12588                           fsr0l	equ	0xFE9
 12589                           wreg	equ	0xFE8
 12590                           indf2	equ	0xFDF
 12591                           postinc2	equ	0xFDE
 12592                           postdec2	equ	0xFDD
 12593                           plusw2	equ	0xFDB
 12594                           fsr2h	equ	0xFDA
 12595                           fsr2l	equ	0xFD9
 12596                           status	equ	0xFD8
 12597                           
 12598 ;; *************** function _I2C1_MasterWrite *****************
 12599 ;; Defined at:
 12600 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 12601 ;; Parameters:    Size  Location     Type
 12602 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 12603 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12604 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12605 ;;  length          2    2[BANK0 ] int 
 12606 ;;  address         2    4[BANK0 ] unsigned int 
 12607 ;;  pflag           2    6[BANK0 ] PTR enum E8678
 12608 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12609 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;		None
 12612 ;; Return value:  Size  Location     Type
 12613 ;;                  1    wreg      void 
 12614 ;; Registers used:
 12615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12616 ;; Tracked objects:
 12617 ;;		On entry : 0/0
 12618 ;;		On exit  : 0/0
 12619 ;;		Unchanged: 0/0
 12620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12621 ;;      Params:         0       8       0       0       0       0       0
 12622 ;;      Locals:         0       0       0       0       0       0       0
 12623 ;;      Temps:          0       0       0       0       0       0       0
 12624 ;;      Totals:         0       8       0       0       0       0       0
 12625 ;;Total ram usage:        8 bytes
 12626 ;; Hardware stack levels used:    1
 12627 ;; Hardware stack levels required when called:    5
 12628 ;; This function calls:
 12629 ;;		_I2C1_MasterTRBInsert
 12630 ;;		_I2C1_MasterWriteTRBBuild
 12631 ;; This function is called by:
 12632 ;;		_LEDBsetBrightness
 12633 ;;		_LEDblinkRate
 12634 ;;		_LEDbegin
 12635 ;;		_LEDwriteDisplay
 12636 ;;		_OLED_command
 12637 ;;		_oledPutChar
 12638 ;;		_Display
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text62
 12643  002BC2                     __ptext62:
 12644                           	opt stack 0
 12645  002BC2                     _I2C1_MasterWrite:
 12646                           	opt stack 22
 12647                           
 12648                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 12649                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 12650                           
 12651                           ; BSR set to: 1
 12652                           ;incstack = 0
 12653  002BC2  0100               	movlb	0	; () banked
 12654  002BC4  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12655  002BC6  D021               	goto	l5886
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;i2c1.c: 561: {
 12659                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 12660  002BC8  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12661  002BCA  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 12662  002BCC  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12663  002BCE  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 12664  002BD0  C0F2  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 12665  002BD4  C0F3  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 12666  002BD8  C0F4  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 12667  002BDC  C0F5  F020         	movff	I2C1_MasterWrite@length+1,I2C1_MasterWriteTRBBuild@length+1
 12668  002BE0  C0F6  F021         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 12669  002BE4  C0F7  F022         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 12670  002BE8  EC7E  F016         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 12671                           
 12672                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12673  002BEC  0E00               	movlw	0
 12674  002BEE  6E1C               	movwf	I2C1_MasterTRBInsert@count+1,c
 12675  002BF0  0E01               	movlw	1
 12676  002BF2  6E1B               	movwf	I2C1_MasterTRBInsert@count,c
 12677  002BF4  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12678  002BF6  6E1D               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 12679  002BF8  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12680  002BFA  6E1E               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 12681  002BFC  C0F8  F01F         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 12682  002C00  C0F9  F020         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 12683  002C04  EC43  F010         	call	_I2C1_MasterTRBInsert	;wreg free
 12684                           
 12685                           ;i2c1.c: 564: }
 12686  002C08  0012               	return	
 12687  002C0A                     l5886:
 12688                           
 12689                           ;i2c1.c: 565: else
 12690                           ;i2c1.c: 566: {
 12691                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 12692  002C0A  C0F8  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 12693  002C0E  C0F9  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 12694  002C12  0E01               	movlw	1
 12695  002C14  6EDF               	movwf	indf2,c
 12696  002C16  0012               	return	
 12697  002C18                     __end_of_I2C1_MasterWrite:
 12698                           	opt stack 0
 12699                           tosu	equ	0xFFF
 12700                           tosh	equ	0xFFE
 12701                           tosl	equ	0xFFD
 12702                           pclath	equ	0xFFA
 12703                           tblptru	equ	0xFF8
 12704                           tblptrh	equ	0xFF7
 12705                           tblptrl	equ	0xFF6
 12706                           tablat	equ	0xFF5
 12707                           prodh	equ	0xFF4
 12708                           prodl	equ	0xFF3
 12709                           intcon	equ	0xFF2
 12710                           intcon2	equ	0xFF1
 12711                           indf0	equ	0xFEF
 12712                           postinc0	equ	0xFEE
 12713                           fsr0h	equ	0xFEA
 12714                           fsr0l	equ	0xFE9
 12715                           wreg	equ	0xFE8
 12716                           indf2	equ	0xFDF
 12717                           postinc2	equ	0xFDE
 12718                           postdec2	equ	0xFDD
 12719                           plusw2	equ	0xFDB
 12720                           fsr2h	equ	0xFDA
 12721                           fsr2l	equ	0xFD9
 12722                           status	equ	0xFD8
 12723                           
 12724 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 12725 ;; Defined at:
 12726 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  ptrb            2   26[COMRAM] PTR struct .
 12729 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 12730 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 12731 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12732 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12733 ;;  length          2   30[COMRAM] int 
 12734 ;;  address         2   32[COMRAM] unsigned int 
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12746 ;;      Params:         8       0       0       0       0       0       0
 12747 ;;      Locals:         0       0       0       0       0       0       0
 12748 ;;      Temps:          2       0       0       0       0       0       0
 12749 ;;      Totals:        10       0       0       0       0       0       0
 12750 ;;Total ram usage:       10 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    4
 12753 ;; This function calls:
 12754 ;;		Nothing
 12755 ;; This function is called by:
 12756 ;;		_I2C1_MasterWrite
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           	psect	text63
 12761  002CFC                     __ptext63:
 12762                           	opt stack 0
 12763  002CFC                     _I2C1_MasterWriteTRBBuild:
 12764                           	opt stack 22
 12765                           
 12766                           ;i2c1.c: 666: ptrb->address = address << 1;
 12767                           
 12768                           ;incstack = 0
 12769  002CFC  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 12770  002D00  C022  F024         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 12771  002D04  90D8               	bcf	status,0,c
 12772  002D06  3623               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 12773  002D08  3624               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 12774  002D0A  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 12775  002D0E  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 12776  002D12  C023  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 12777  002D16  C024  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 12778                           
 12779                           ;i2c1.c: 667: ptrb->length = length;
 12780  002D1A  EE20 F002          	lfsr	2,2
 12781  002D1E  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12782  002D20  26D9               	addwf	fsr2l,f,c
 12783  002D22  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12784  002D24  22DA               	addwfc	fsr2h,f,c
 12785  002D26  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 12786                           
 12787                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 12788  002D2A  EE20 F003          	lfsr	2,3
 12789  002D2E  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12790  002D30  26D9               	addwf	fsr2l,f,c
 12791  002D32  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12792  002D34  22DA               	addwfc	fsr2h,f,c
 12793  002D36  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 12794  002D3A  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 12795  002D3E  0012               	return		;funcret
 12796  002D40                     __end_of_I2C1_MasterWriteTRBBuild:
 12797                           	opt stack 0
 12798                           tosu	equ	0xFFF
 12799                           tosh	equ	0xFFE
 12800                           tosl	equ	0xFFD
 12801                           pclath	equ	0xFFA
 12802                           tblptru	equ	0xFF8
 12803                           tblptrh	equ	0xFF7
 12804                           tblptrl	equ	0xFF6
 12805                           tablat	equ	0xFF5
 12806                           prodh	equ	0xFF4
 12807                           prodl	equ	0xFF3
 12808                           intcon	equ	0xFF2
 12809                           intcon2	equ	0xFF1
 12810                           indf0	equ	0xFEF
 12811                           postinc0	equ	0xFEE
 12812                           fsr0h	equ	0xFEA
 12813                           fsr0l	equ	0xFE9
 12814                           wreg	equ	0xFE8
 12815                           indf2	equ	0xFDF
 12816                           postinc2	equ	0xFDE
 12817                           postdec2	equ	0xFDD
 12818                           plusw2	equ	0xFDB
 12819                           fsr2h	equ	0xFDA
 12820                           fsr2l	equ	0xFD9
 12821                           status	equ	0xFD8
 12822                           
 12823 ;; *************** function _I2C1_MasterTRBInsert *****************
 12824 ;; Defined at:
 12825 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 12826 ;; Parameters:    Size  Location     Type
 12827 ;;  count           2   26[COMRAM] int 
 12828 ;;  ptrb_list       2   28[COMRAM] PTR struct .
 12829 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 12830 ;;  pflag           2   30[COMRAM] PTR enum E8678
 12831 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12832 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12833 ;; Auto vars:     Size  Location     Type
 12834 ;;		None
 12835 ;; Return value:  Size  Location     Type
 12836 ;;                  1    wreg      void 
 12837 ;; Registers used:
 12838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/0
 12841 ;;		On exit  : 0/0
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12844 ;;      Params:         6       0       0       0       0       0       0
 12845 ;;      Locals:         0       0       0       0       0       0       0
 12846 ;;      Temps:          1       0       0       0       0       0       0
 12847 ;;      Totals:         7       0       0       0       0       0       0
 12848 ;;Total ram usage:        7 bytes
 12849 ;; Hardware stack levels used:    1
 12850 ;; Hardware stack levels required when called:    4
 12851 ;; This function calls:
 12852 ;;		Nothing
 12853 ;; This function is called by:
 12854 ;;		_I2C1_MasterWrite
 12855 ;;		_I2C1_MasterRead
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text64
 12860  002086                     __ptext64:
 12861                           	opt stack 0
 12862  002086                     _I2C1_MasterTRBInsert:
 12863                           	opt stack 22
 12864                           
 12865                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 12866                           
 12867                           ;incstack = 0
 12868  002086  0100               	movlb	0	; () banked
 12869  002088  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12870  00208A  D046               	goto	l5866
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;i2c1.c: 602: {
 12874                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 12875  00208C  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12876  002090  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12877  002094  0E02               	movlw	2
 12878  002096  6EDF               	movwf	indf2,c
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 12882  002098  0100               	movlb	0	; () banked
 12883  00209A  EE20 F001          	lfsr	2,1
 12884  00209E  51B8               	movf	_i2c1_object& (0+255),w,b
 12885  0020A0  26D9               	addwf	fsr2l,f,c
 12886  0020A2  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12887  0020A4  22DA               	addwfc	fsr2h,f,c
 12888  0020A6  C01D  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 12889  0020AA  C01E  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 12893  0020AE  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 12894  0020B2  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 12895  0020B6  C01B  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 12899  0020BA  0100               	movlb	0	; () banked
 12900  0020BC  EE20 F003          	lfsr	2,3
 12901  0020C0  51B8               	movf	_i2c1_object& (0+255),w,b
 12902  0020C2  26D9               	addwf	fsr2l,f,c
 12903  0020C4  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12904  0020C6  22DA               	addwfc	fsr2h,f,c
 12905  0020C8  C01F  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 12906  0020CC  C020  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 12910  0020D0  0E05               	movlw	5
 12911  0020D2  0100               	movlb	0	; () banked
 12912  0020D4  27B8               	addwf	_i2c1_object& (0+255),f,b
 12913  0020D6  0E00               	movlw	0
 12914  0020D8  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 12918  0020DA  0EF0               	movlw	low (_i2c1_tr_queue+5)
 12919  0020DC  0100               	movlb	0	; () banked
 12920  0020DE  19B8               	xorwf	_i2c1_object& (0+255),w,b
 12921  0020E0  E10B               	bnz	l5862
 12922  0020E2  0E00               	movlw	high (_i2c1_tr_queue+5)
 12923  0020E4  0100               	movlb	0	; () banked
 12924  0020E6  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 12925  0020E8  A4D8               	btfss	status,2,c
 12926  0020EA  D006               	goto	l5862
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;i2c1.c: 612: {
 12930                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 12931  0020EC  0EEB               	movlw	low _i2c1_tr_queue
 12932  0020EE  0100               	movlb	0	; () banked
 12933  0020F0  6FB8               	movwf	_i2c1_object& (0+255),b
 12934  0020F2  0E00               	movlw	high _i2c1_tr_queue
 12935  0020F4  0100               	movlb	0	; () banked
 12936  0020F6  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 12937  0020F8                     l5862:
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;i2c1.c: 615: }
 12941                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 12942  0020F8  0100               	movlb	0	; () banked
 12943  0020FA  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 12944                           
 12945                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 12946  0020FC  0100               	movlb	0	; () banked
 12947  0020FE  51B8               	movf	_i2c1_object& (0+255),w,b
 12948  002100  0100               	movlb	0	; () banked
 12949  002102  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12950  002104  E10F               	bnz	l5868
 12951  002106  0100               	movlb	0	; () banked
 12952  002108  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12953  00210A  0100               	movlb	0	; () banked
 12954  00210C  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12955  00210E  A4D8               	btfss	status,2,c
 12956  002110  D009               	goto	l5868
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;i2c1.c: 623: {
 12960                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 12961  002112  0100               	movlb	0	; () banked
 12962  002114  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;i2c1.c: 626: }
 12966                           ;i2c1.c: 628: }
 12967  002116  D006               	goto	l5868
 12968  002118                     l5866:
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;i2c1.c: 629: else
 12972                           ;i2c1.c: 630: {
 12973                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 12974  002118  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12975  00211C  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12976  002120  0E01               	movlw	1
 12977  002122  6EDF               	movwf	indf2,c
 12978  002124                     l5868:
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;i2c1.c: 632: }
 12982                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 12983  002124  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12984  002128  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12985  00212C  0E02               	movlw	2
 12986  00212E  18DE               	xorwf	postinc2,w,c
 12987  002130  A4D8               	btfss	status,2,c
 12988  002132  0012               	return	
 12989  002134                     l5872:
 12990  002134  5038               	movf	_i2c1_state,w,c
 12991  002136  A4D8               	btfss	status,2,c
 12992  002138  D7FD               	goto	l5872
 12993                           
 12994                           ;i2c1.c: 638: {
 12995                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 12996  00213A  869E               	bsf	3998,3,c	;volatile
 12997  00213C  0012               	return	
 12998  00213E                     __end_of_I2C1_MasterTRBInsert:
 12999                           	opt stack 0
 13000                           tosu	equ	0xFFF
 13001                           tosh	equ	0xFFE
 13002                           tosl	equ	0xFFD
 13003                           pclath	equ	0xFFA
 13004                           tblptru	equ	0xFF8
 13005                           tblptrh	equ	0xFF7
 13006                           tblptrl	equ	0xFF6
 13007                           tablat	equ	0xFF5
 13008                           prodh	equ	0xFF4
 13009                           prodl	equ	0xFF3
 13010                           intcon	equ	0xFF2
 13011                           intcon2	equ	0xFF1
 13012                           indf0	equ	0xFEF
 13013                           postinc0	equ	0xFEE
 13014                           fsr0h	equ	0xFEA
 13015                           fsr0l	equ	0xFE9
 13016                           wreg	equ	0xFE8
 13017                           indf2	equ	0xFDF
 13018                           postinc2	equ	0xFDE
 13019                           postdec2	equ	0xFDD
 13020                           plusw2	equ	0xFDB
 13021                           fsr2h	equ	0xFDA
 13022                           fsr2l	equ	0xFD9
 13023                           status	equ	0xFD8
 13024                           
 13025 ;; *************** function _GetTime *****************
 13026 ;; Defined at:
 13027 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 13028 ;; Parameters:    Size  Location     Type
 13029 ;;		None
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;		None
 13032 ;; Return value:  Size  Location     Type
 13033 ;;                  2   26[COMRAM] int 
 13034 ;; Registers used:
 13035 ;;		None
 13036 ;; Tracked objects:
 13037 ;;		On entry : 0/0
 13038 ;;		On exit  : 0/0
 13039 ;;		Unchanged: 0/0
 13040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13041 ;;      Params:         2       0       0       0       0       0       0
 13042 ;;      Locals:         0       0       0       0       0       0       0
 13043 ;;      Temps:          0       0       0       0       0       0       0
 13044 ;;      Totals:         2       0       0       0       0       0       0
 13045 ;;Total ram usage:        2 bytes
 13046 ;; Hardware stack levels used:    1
 13047 ;; Hardware stack levels required when called:    4
 13048 ;; This function calls:
 13049 ;;		Nothing
 13050 ;; This function is called by:
 13051 ;;		_main
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text65
 13056  003172                     __ptext65:
 13057                           	opt stack 0
 13058  003172                     _GetTime:
 13059                           	opt stack 26
 13060                           
 13061                           ;tmr0.c: 98: return time;
 13062                           
 13063                           ;incstack = 0
 13064  003172  C03F  F01B         	movff	_time,?_GetTime	;volatile
 13065  003176  6A1C               	clrf	?_GetTime+1,c
 13066  003178  0012               	return		;funcret
 13067  00317A                     __end_of_GetTime:
 13068                           	opt stack 0
 13069                           tosu	equ	0xFFF
 13070                           tosh	equ	0xFFE
 13071                           tosl	equ	0xFFD
 13072                           pclath	equ	0xFFA
 13073                           tblptru	equ	0xFF8
 13074                           tblptrh	equ	0xFF7
 13075                           tblptrl	equ	0xFF6
 13076                           tablat	equ	0xFF5
 13077                           prodh	equ	0xFF4
 13078                           prodl	equ	0xFF3
 13079                           intcon	equ	0xFF2
 13080                           intcon2	equ	0xFF1
 13081                           indf0	equ	0xFEF
 13082                           postinc0	equ	0xFEE
 13083                           fsr0h	equ	0xFEA
 13084                           fsr0l	equ	0xFE9
 13085                           wreg	equ	0xFE8
 13086                           indf2	equ	0xFDF
 13087                           postinc2	equ	0xFDE
 13088                           postdec2	equ	0xFDD
 13089                           plusw2	equ	0xFDB
 13090                           fsr2h	equ	0xFDA
 13091                           fsr2l	equ	0xFD9
 13092                           status	equ	0xFD8
 13093                           
 13094 ;; *************** function _ClearTime *****************
 13095 ;; Defined at:
 13096 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13110 ;;      Params:         0       0       0       0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0
 13113 ;;      Totals:         0       0       0       0       0       0       0
 13114 ;;Total ram usage:        0 bytes
 13115 ;; Hardware stack levels used:    1
 13116 ;; Hardware stack levels required when called:    4
 13117 ;; This function calls:
 13118 ;;		Nothing
 13119 ;; This function is called by:
 13120 ;;		_main
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text66
 13125  003182                     __ptext66:
 13126                           	opt stack 0
 13127  003182                     _ClearTime:
 13128                           	opt stack 26
 13129                           
 13130                           ;tmr0.c: 103: time = 0;
 13131                           
 13132                           ;incstack = 0
 13133  003182  0E00               	movlw	0
 13134  003184  6E3F               	movwf	_time,c	;volatile
 13135  003186  0012               	return		;funcret
 13136  003188                     __end_of_ClearTime:
 13137                           	opt stack 0
 13138                           tosu	equ	0xFFF
 13139                           tosh	equ	0xFFE
 13140                           tosl	equ	0xFFD
 13141                           pclath	equ	0xFFA
 13142                           tblptru	equ	0xFF8
 13143                           tblptrh	equ	0xFF7
 13144                           tblptrl	equ	0xFF6
 13145                           tablat	equ	0xFF5
 13146                           prodh	equ	0xFF4
 13147                           prodl	equ	0xFF3
 13148                           intcon	equ	0xFF2
 13149                           intcon2	equ	0xFF1
 13150                           indf0	equ	0xFEF
 13151                           postinc0	equ	0xFEE
 13152                           fsr0h	equ	0xFEA
 13153                           fsr0l	equ	0xFE9
 13154                           wreg	equ	0xFE8
 13155                           indf2	equ	0xFDF
 13156                           postinc2	equ	0xFDE
 13157                           postdec2	equ	0xFDD
 13158                           plusw2	equ	0xFDB
 13159                           fsr2h	equ	0xFDA
 13160                           fsr2l	equ	0xFD9
 13161                           status	equ	0xFD8
 13162                           
 13163 ;; *************** function _INTERRUPT_InterruptManager *****************
 13164 ;; Defined at:
 13165 ;;		line 31 in file "mcc_generated_files/interrupt_manager.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;		None
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;		None
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  1    wreg      void 
 13172 ;; Registers used:
 13173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 13174 ;; Tracked objects:
 13175 ;;		On entry : 0/0
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13179 ;;      Params:         0       0       0       0       0       0       0
 13180 ;;      Locals:         0       0       0       0       0       0       0
 13181 ;;      Temps:         14       0       0       0       0       0       0
 13182 ;;      Totals:        14       0       0       0       0       0       0
 13183 ;;Total ram usage:       14 bytes
 13184 ;; Hardware stack levels used:    1
 13185 ;; Hardware stack levels required when called:    3
 13186 ;; This function calls:
 13187 ;;		_ADC_ISR
 13188 ;;		_EUSART1_Receive_ISR
 13189 ;;		_EUSART1_Transmit_ISR
 13190 ;;		_I2C1_BusCollisionISR
 13191 ;;		_I2C1_ISR
 13192 ;;		_TMR0_ISR
 13193 ;;		_TMR2_ISR
 13194 ;; This function is called by:
 13195 ;;		Interrupt level 2
 13196 ;; This function uses a non-reentrant model
 13197 ;;
 13198                           
 13199                           	psect	intcode
 13200  000008                     __pintcode:
 13201                           	opt stack 0
 13202  000008                     _INTERRUPT_InterruptManager:
 13203                           	opt stack 21
 13204                           
 13205                           ;incstack = 0
 13206  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13207  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 13208  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13209  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13210  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13211  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13212  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13213  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13214  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13215  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13216  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13217  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 13218  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 13219  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 13220  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 13221                           
 13222                           ;interrupt_manager.c: 34: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 13223  000042  BA9D               	btfsc	3997,5,c	;volatile
 13224  000044  AA9E               	btfss	3998,5,c	;volatile
 13225  000046  D003               	goto	i2l277
 13226                           
 13227                           ;interrupt_manager.c: 35: {
 13228                           ;interrupt_manager.c: 36: EUSART1_Receive_ISR();
 13229  000048  EC3E  F018         	call	_EUSART1_Receive_ISR	;wreg free
 13230                           
 13231                           ;interrupt_manager.c: 37: }
 13232  00004C  D023               	goto	i2l291
 13233  00004E                     i2l277:
 13234                           
 13235                           ;interrupt_manager.c: 38: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13236  00004E  B89D               	btfsc	3997,4,c	;volatile
 13237  000050  A89E               	btfss	3998,4,c	;volatile
 13238  000052  D003               	goto	i2l279
 13239                           
 13240                           ;interrupt_manager.c: 39: {
 13241                           ;interrupt_manager.c: 40: EUSART1_Transmit_ISR();
 13242  000054  EC50  F017         	call	_EUSART1_Transmit_ISR	;wreg free
 13243                           
 13244                           ;interrupt_manager.c: 41: }
 13245  000058  D01D               	goto	i2l291
 13246  00005A                     i2l279:
 13247                           
 13248                           ;interrupt_manager.c: 42: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 13249  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 13250  00005C  A4F2               	btfss	intcon,2,c	;volatile
 13251  00005E  D003               	goto	i2l281
 13252                           
 13253                           ;interrupt_manager.c: 43: {
 13254                           ;interrupt_manager.c: 44: TMR0_ISR();
 13255  000060  EC1A  F017         	call	_TMR0_ISR	;wreg free
 13256                           
 13257                           ;interrupt_manager.c: 45: }
 13258  000064  D017               	goto	i2l291
 13259  000066                     i2l281:
 13260                           
 13261                           ;interrupt_manager.c: 46: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 13262  000066  B29D               	btfsc	3997,1,c	;volatile
 13263  000068  A29E               	btfss	3998,1,c	;volatile
 13264  00006A  D003               	goto	i2l283
 13265                           
 13266                           ;interrupt_manager.c: 47: {
 13267                           ;interrupt_manager.c: 48: TMR2_ISR();
 13268  00006C  ECBD  F018         	call	_TMR2_ISR	;wreg free
 13269                           
 13270                           ;interrupt_manager.c: 49: }
 13271  000070  D011               	goto	i2l291
 13272  000072                     i2l283:
 13273                           
 13274                           ;interrupt_manager.c: 50: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 13275  000072  BC9D               	btfsc	3997,6,c	;volatile
 13276  000074  AC9E               	btfss	3998,6,c	;volatile
 13277  000076  D003               	goto	i2l285
 13278                           
 13279                           ;interrupt_manager.c: 51: {
 13280                           ;interrupt_manager.c: 52: ADC_ISR();
 13281  000078  ECC8  F018         	call	_ADC_ISR	;wreg free
 13282                           
 13283                           ;interrupt_manager.c: 53: }
 13284  00007C  D00B               	goto	i2l291
 13285  00007E                     i2l285:
 13286                           
 13287                           ;interrupt_manager.c: 54: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 13288  00007E  B69D               	btfsc	3997,3,c	;volatile
 13289  000080  A69E               	btfss	3998,3,c	;volatile
 13290  000082  D003               	goto	i2l287
 13291                           
 13292                           ;interrupt_manager.c: 55: {
 13293                           ;interrupt_manager.c: 56: I2C1_ISR();
 13294  000084  ECC7  F005         	call	_I2C1_ISR	;wreg free
 13295                           
 13296                           ;interrupt_manager.c: 57: }
 13297  000088  D005               	goto	i2l291
 13298  00008A                     i2l287:
 13299                           
 13300                           ;interrupt_manager.c: 58: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 13301  00008A  B6A0               	btfsc	4000,3,c	;volatile
 13302  00008C  A6A1               	btfss	4001,3,c	;volatile
 13303  00008E  D002               	goto	i2l291
 13304                           
 13305                           ;interrupt_manager.c: 59: {
 13306                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
 13307  000090  ECCB  F018         	call	_I2C1_BusCollisionISR	;wreg free
 13308  000094                     i2l291:
 13309  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 13310  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 13311  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 13312  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 13313  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 13314  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 13315  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 13316  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 13317  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 13318  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 13319  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 13320  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 13321  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13322  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13323  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13324  0000CE  0011               	retfie		f
 13325  0000D0                     __end_of_INTERRUPT_InterruptManager:
 13326                           	opt stack 0
 13327                           tosu	equ	0xFFF
 13328                           tosh	equ	0xFFE
 13329                           tosl	equ	0xFFD
 13330                           pclatu	equ	0xFFB
 13331                           pclath	equ	0xFFA
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           intcon	equ	0xFF2
 13339                           intcon2	equ	0xFF1
 13340                           indf0	equ	0xFEF
 13341                           postinc0	equ	0xFEE
 13342                           fsr0h	equ	0xFEA
 13343                           fsr0l	equ	0xFE9
 13344                           wreg	equ	0xFE8
 13345                           fsr1h	equ	0xFE2
 13346                           fsr1l	equ	0xFE1
 13347                           indf2	equ	0xFDF
 13348                           postinc2	equ	0xFDE
 13349                           postdec2	equ	0xFDD
 13350                           plusw2	equ	0xFDB
 13351                           fsr2h	equ	0xFDA
 13352                           fsr2l	equ	0xFD9
 13353                           status	equ	0xFD8
 13354                           
 13355 ;; *************** function _TMR2_ISR *****************
 13356 ;; Defined at:
 13357 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;		None
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;		None
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      void 
 13364 ;; Registers used:
 13365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13371 ;;      Params:         0       0       0       0       0       0       0
 13372 ;;      Locals:         0       0       0       0       0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0
 13374 ;;      Totals:         0       0       0       0       0       0       0
 13375 ;;Total ram usage:        0 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; Hardware stack levels required when called:    2
 13378 ;; This function calls:
 13379 ;;		_TMR2_CallBack
 13380 ;; This function is called by:
 13381 ;;		_INTERRUPT_InterruptManager
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           	psect	text68
 13386  00317A                     __ptext68:
 13387                           	opt stack 0
 13388  00317A                     _TMR2_ISR:
 13389                           	opt stack 21
 13390                           
 13391                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 13392                           
 13393                           ;incstack = 0
 13394  00317A  929E               	bcf	3998,1,c	;volatile
 13395                           
 13396                           ;tmr2.c: 128: TMR2_CallBack();
 13397  00317C  EC8C  F008         	call	_TMR2_CallBack	;wreg free
 13398  003180  0012               	return		;funcret
 13399  003182                     __end_of_TMR2_ISR:
 13400                           	opt stack 0
 13401                           tosu	equ	0xFFF
 13402                           tosh	equ	0xFFE
 13403                           tosl	equ	0xFFD
 13404                           pclatu	equ	0xFFB
 13405                           pclath	equ	0xFFA
 13406                           tblptru	equ	0xFF8
 13407                           tblptrh	equ	0xFF7
 13408                           tblptrl	equ	0xFF6
 13409                           tablat	equ	0xFF5
 13410                           prodh	equ	0xFF4
 13411                           prodl	equ	0xFF3
 13412                           intcon	equ	0xFF2
 13413                           intcon2	equ	0xFF1
 13414                           indf0	equ	0xFEF
 13415                           postinc0	equ	0xFEE
 13416                           fsr0h	equ	0xFEA
 13417                           fsr0l	equ	0xFE9
 13418                           wreg	equ	0xFE8
 13419                           fsr1h	equ	0xFE2
 13420                           fsr1l	equ	0xFE1
 13421                           indf2	equ	0xFDF
 13422                           postinc2	equ	0xFDE
 13423                           postdec2	equ	0xFDD
 13424                           plusw2	equ	0xFDB
 13425                           fsr2h	equ	0xFDA
 13426                           fsr2l	equ	0xFD9
 13427                           status	equ	0xFD8
 13428                           
 13429 ;; *************** function _TMR2_CallBack *****************
 13430 ;; Defined at:
 13431 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;		None
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;  i               2    2[COMRAM] int 
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  1    wreg      void 
 13438 ;; Registers used:
 13439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13445 ;;      Params:         0       0       0       0       0       0       0
 13446 ;;      Locals:         2       0       0       0       0       0       0
 13447 ;;      Temps:          2       0       0       0       0       0       0
 13448 ;;      Totals:         4       0       0       0       0       0       0
 13449 ;;Total ram usage:        4 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; Hardware stack levels required when called:    1
 13452 ;; This function calls:
 13453 ;;		Absolute function
 13454 ;;		_TMR2_DefaultInterruptHandler
 13455 ;; This function is called by:
 13456 ;;		_TMR2_ISR
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           	psect	text69
 13461  001118                     __ptext69:
 13462                           	opt stack 0
 13463  001118                     _TMR2_CallBack:
 13464                           	opt stack 21
 13465                           
 13466                           ;tmr2.c: 133: int i = 0;
 13467                           
 13468                           ;incstack = 0
 13469  001118  0E00               	movlw	0
 13470  00111A  6E04               	movwf	TMR2_CallBack@i+1,c
 13471  00111C  0E00               	movlw	0
 13472  00111E  6E03               	movwf	TMR2_CallBack@i,c
 13473                           
 13474                           ;tmr2.c: 134: while (i <= 5) {
 13475  001120  D0C3               	goto	i2l456
 13476  001122                     i2l4736:
 13477                           
 13478                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 13479  001122  90D8               	bcf	status,0,c
 13480  001124  3403               	rlcf	TMR2_CallBack@i,w,c
 13481  001126  6ED9               	movwf	fsr2l,c
 13482  001128  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13483  00112A  6EDA               	movwf	fsr2h,c
 13484  00112C  0E98               	movlw	low _LEDNUM_ENAB
 13485  00112E  26D9               	addwf	fsr2l,f,c
 13486  001130  0E00               	movlw	high _LEDNUM_ENAB
 13487  001132  22DA               	addwfc	fsr2h,f,c
 13488  001134  04DE               	decf	postinc2,w,c
 13489  001136  10DE               	iorwf	postinc2,w,c
 13490  001138  B4D8               	btfsc	status,2,c
 13491  00113A  D098               	goto	i2l4754
 13492  00113C  D0AF               	goto	i2l4756
 13493  00113E                     i2l463:
 13494  00113E  B28B               	btfsc	3979,1,c	;volatile
 13495  001140  D002               	goto	i2u404_40
 13496  001142  828B               	bsf	3979,1,c	;volatile
 13497  001144  D03B               	goto	i2l4744
 13498  001146                     i2u404_40:
 13499  001146  928B               	bcf	3979,1,c	;volatile
 13500                           
 13501                           ;tmr2.c: 142: break;
 13502  001148  D039               	goto	i2l4744
 13503  00114A                     i2l467:
 13504  00114A  BC89               	btfsc	3977,6,c	;volatile
 13505  00114C  D002               	goto	i2u406_40
 13506  00114E  8C89               	bsf	3977,6,c	;volatile
 13507  001150  D035               	goto	i2l4744
 13508  001152                     i2u406_40:
 13509  001152  9C89               	bcf	3977,6,c	;volatile
 13510                           
 13511                           ;tmr2.c: 145: break;
 13512  001154  D033               	goto	i2l4744
 13513  001156                     i2l470:
 13514  001156  BE89               	btfsc	3977,7,c	;volatile
 13515  001158  D002               	goto	i2u408_40
 13516  00115A  8E89               	bsf	3977,7,c	;volatile
 13517  00115C  D02F               	goto	i2l4744
 13518  00115E                     i2u408_40:
 13519  00115E  9E89               	bcf	3977,7,c	;volatile
 13520                           
 13521                           ;tmr2.c: 148: break;
 13522  001160  D02D               	goto	i2l4744
 13523  001162                     i2l473:
 13524  001162  B48D               	btfsc	3981,2,c	;volatile
 13525  001164  D002               	goto	i2u410_40
 13526  001166  848D               	bsf	3981,2,c	;volatile
 13527  001168  D029               	goto	i2l4744
 13528  00116A                     i2u410_40:
 13529  00116A  948D               	bcf	3981,2,c	;volatile
 13530                           
 13531                           ;tmr2.c: 151: break;
 13532  00116C  D027               	goto	i2l4744
 13533  00116E                     i2l476:
 13534  00116E  B28D               	btfsc	3981,1,c	;volatile
 13535  001170  D002               	goto	i2u412_40
 13536  001172  828D               	bsf	3981,1,c	;volatile
 13537  001174  D023               	goto	i2l4744
 13538  001176                     i2u412_40:
 13539  001176  928D               	bcf	3981,1,c	;volatile
 13540                           
 13541                           ;tmr2.c: 154: break;
 13542  001178  D021               	goto	i2l4744
 13543  00117A                     i2l479:
 13544  00117A  B08D               	btfsc	3981,0,c	;volatile
 13545  00117C  D002               	goto	i2u414_40
 13546  00117E  808D               	bsf	3981,0,c	;volatile
 13547  001180  D01D               	goto	i2l4744
 13548  001182                     i2u414_40:
 13549  001182  908D               	bcf	3981,0,c	;volatile
 13550                           
 13551                           ;tmr2.c: 158: }
 13552                           
 13553                           ;tmr2.c: 157: break;
 13554  001184  D01B               	goto	i2l4744
 13555  001186                     i2l4742:
 13556  001186  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13557  00118A  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13558                           
 13559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13560                           ; Switch size 1, requested type "space"
 13561                           ; Number of cases is 1, Range of values is 0 to 0
 13562                           ; switch strategies available:
 13563                           ; Name         Instructions Cycles
 13564                           ; simple_byte            4     3 (average)
 13565                           ;	Chosen strategy is simple_byte
 13566  00118E  5002               	movf	??_TMR2_CallBack+1,w,c
 13567  001190  0A00               	xorlw	0	; case 0
 13568  001192  A4D8               	btfss	status,2,c
 13569  001194  D013               	goto	i2l4744
 13570                           
 13571                           ; Switch size 1, requested type "space"
 13572                           ; Number of cases is 6, Range of values is 0 to 5
 13573                           ; switch strategies available:
 13574                           ; Name         Instructions Cycles
 13575                           ; simple_byte           19    10 (average)
 13576                           ;	Chosen strategy is simple_byte
 13577  001196  5001               	movf	??_TMR2_CallBack,w,c
 13578  001198  0A00               	xorlw	0	; case 0
 13579  00119A  B4D8               	btfsc	status,2,c
 13580  00119C  D7D0               	goto	i2l463
 13581  00119E  0A01               	xorlw	1	; case 1
 13582  0011A0  B4D8               	btfsc	status,2,c
 13583  0011A2  D7D3               	goto	i2l467
 13584  0011A4  0A03               	xorlw	3	; case 2
 13585  0011A6  B4D8               	btfsc	status,2,c
 13586  0011A8  D7D6               	goto	i2l470
 13587  0011AA  0A01               	xorlw	1	; case 3
 13588  0011AC  B4D8               	btfsc	status,2,c
 13589  0011AE  D7D9               	goto	i2l473
 13590  0011B0  0A07               	xorlw	7	; case 4
 13591  0011B2  B4D8               	btfsc	status,2,c
 13592  0011B4  D7DC               	goto	i2l476
 13593  0011B6  0A01               	xorlw	1	; case 5
 13594  0011B8  B4D8               	btfsc	status,2,c
 13595  0011BA  D7DF               	goto	i2l479
 13596  0011BC                     i2l4744:
 13597                           
 13598                           ;tmr2.c: 159: LEDState[i] = 1;
 13599  0011BC  90D8               	bcf	status,0,c
 13600  0011BE  3403               	rlcf	TMR2_CallBack@i,w,c
 13601  0011C0  6ED9               	movwf	fsr2l,c
 13602  0011C2  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13603  0011C4  6EDA               	movwf	fsr2h,c
 13604  0011C6  0EA4               	movlw	low _LEDState
 13605  0011C8  26D9               	addwf	fsr2l,f,c
 13606  0011CA  0E00               	movlw	high _LEDState
 13607  0011CC  22DA               	addwfc	fsr2h,f,c
 13608  0011CE  0E01               	movlw	1
 13609  0011D0  D049               	goto	L4
 13610  0011D2                     i2l485:
 13611  0011D2  B28B               	btfsc	3979,1,c	;volatile
 13612  0011D4  D002               	goto	i2u416_40
 13613  0011D6  828B               	bsf	3979,1,c	;volatile
 13614  0011D8  D03B               	goto	i2l4750
 13615  0011DA                     i2u416_40:
 13616  0011DA  928B               	bcf	3979,1,c	;volatile
 13617                           
 13618                           ;tmr2.c: 165: break;
 13619  0011DC  D039               	goto	i2l4750
 13620  0011DE                     i2l489:
 13621  0011DE  BC89               	btfsc	3977,6,c	;volatile
 13622  0011E0  D002               	goto	i2u418_40
 13623  0011E2  8C89               	bsf	3977,6,c	;volatile
 13624  0011E4  D035               	goto	i2l4750
 13625  0011E6                     i2u418_40:
 13626  0011E6  9C89               	bcf	3977,6,c	;volatile
 13627                           
 13628                           ;tmr2.c: 168: break;
 13629  0011E8  D033               	goto	i2l4750
 13630  0011EA                     i2l492:
 13631  0011EA  BE89               	btfsc	3977,7,c	;volatile
 13632  0011EC  D002               	goto	i2u420_40
 13633  0011EE  8E89               	bsf	3977,7,c	;volatile
 13634  0011F0  D02F               	goto	i2l4750
 13635  0011F2                     i2u420_40:
 13636  0011F2  9E89               	bcf	3977,7,c	;volatile
 13637                           
 13638                           ;tmr2.c: 171: break;
 13639  0011F4  D02D               	goto	i2l4750
 13640  0011F6                     i2l495:
 13641  0011F6  B48D               	btfsc	3981,2,c	;volatile
 13642  0011F8  D002               	goto	i2u422_40
 13643  0011FA  848D               	bsf	3981,2,c	;volatile
 13644  0011FC  D029               	goto	i2l4750
 13645  0011FE                     i2u422_40:
 13646  0011FE  948D               	bcf	3981,2,c	;volatile
 13647                           
 13648                           ;tmr2.c: 174: break;
 13649  001200  D027               	goto	i2l4750
 13650  001202                     i2l498:
 13651  001202  B28D               	btfsc	3981,1,c	;volatile
 13652  001204  D002               	goto	i2u424_40
 13653  001206  828D               	bsf	3981,1,c	;volatile
 13654  001208  D023               	goto	i2l4750
 13655  00120A                     i2u424_40:
 13656  00120A  928D               	bcf	3981,1,c	;volatile
 13657                           
 13658                           ;tmr2.c: 177: break;
 13659  00120C  D021               	goto	i2l4750
 13660  00120E                     i2l501:
 13661  00120E  B08D               	btfsc	3981,0,c	;volatile
 13662  001210  D002               	goto	i2u426_40
 13663  001212  808D               	bsf	3981,0,c	;volatile
 13664  001214  D01D               	goto	i2l4750
 13665  001216                     i2u426_40:
 13666  001216  908D               	bcf	3981,0,c	;volatile
 13667                           
 13668                           ;tmr2.c: 181: }
 13669                           
 13670                           ;tmr2.c: 180: break;
 13671  001218  D01B               	goto	i2l4750
 13672  00121A                     i2l4748:
 13673  00121A  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13674  00121E  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13675                           
 13676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13677                           ; Switch size 1, requested type "space"
 13678                           ; Number of cases is 1, Range of values is 0 to 0
 13679                           ; switch strategies available:
 13680                           ; Name         Instructions Cycles
 13681                           ; simple_byte            4     3 (average)
 13682                           ;	Chosen strategy is simple_byte
 13683  001222  5002               	movf	??_TMR2_CallBack+1,w,c
 13684  001224  0A00               	xorlw	0	; case 0
 13685  001226  A4D8               	btfss	status,2,c
 13686  001228  D013               	goto	i2l4750
 13687                           
 13688                           ; Switch size 1, requested type "space"
 13689                           ; Number of cases is 6, Range of values is 0 to 5
 13690                           ; switch strategies available:
 13691                           ; Name         Instructions Cycles
 13692                           ; simple_byte           19    10 (average)
 13693                           ;	Chosen strategy is simple_byte
 13694  00122A  5001               	movf	??_TMR2_CallBack,w,c
 13695  00122C  0A00               	xorlw	0	; case 0
 13696  00122E  B4D8               	btfsc	status,2,c
 13697  001230  D7D0               	goto	i2l485
 13698  001232  0A01               	xorlw	1	; case 1
 13699  001234  B4D8               	btfsc	status,2,c
 13700  001236  D7D3               	goto	i2l489
 13701  001238  0A03               	xorlw	3	; case 2
 13702  00123A  B4D8               	btfsc	status,2,c
 13703  00123C  D7D6               	goto	i2l492
 13704  00123E  0A01               	xorlw	1	; case 3
 13705  001240  B4D8               	btfsc	status,2,c
 13706  001242  D7D9               	goto	i2l495
 13707  001244  0A07               	xorlw	7	; case 4
 13708  001246  B4D8               	btfsc	status,2,c
 13709  001248  D7DC               	goto	i2l498
 13710  00124A  0A01               	xorlw	1	; case 5
 13711  00124C  B4D8               	btfsc	status,2,c
 13712  00124E  D7DF               	goto	i2l501
 13713  001250                     i2l4750:
 13714                           
 13715                           ;tmr2.c: 182: LEDState[i] = 0;
 13716  001250  90D8               	bcf	status,0,c
 13717  001252  3403               	rlcf	TMR2_CallBack@i,w,c
 13718  001254  6ED9               	movwf	fsr2l,c
 13719  001256  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13720  001258  6EDA               	movwf	fsr2h,c
 13721  00125A  0EA4               	movlw	low _LEDState
 13722  00125C  26D9               	addwf	fsr2l,f,c
 13723  00125E  0E00               	movlw	high _LEDState
 13724  001260  22DA               	addwfc	fsr2h,f,c
 13725  001262  0E00               	movlw	0
 13726  001264                     L4:
 13727  001264  6EDE               	movwf	postinc2,c
 13728  001266  0E00               	movlw	0
 13729  001268  6EDD               	movwf	postdec2,c
 13730                           
 13731                           ;tmr2.c: 184: }
 13732                           
 13733                           ;tmr2.c: 183: break;
 13734  00126A  D018               	goto	i2l4756
 13735  00126C                     i2l4754:
 13736  00126C  90D8               	bcf	status,0,c
 13737  00126E  3403               	rlcf	TMR2_CallBack@i,w,c
 13738  001270  6ED9               	movwf	fsr2l,c
 13739  001272  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13740  001274  6EDA               	movwf	fsr2h,c
 13741  001276  0EA4               	movlw	low _LEDState
 13742  001278  26D9               	addwf	fsr2l,f,c
 13743  00127A  0E00               	movlw	high _LEDState
 13744  00127C  22DA               	addwfc	fsr2h,f,c
 13745  00127E  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 13746  001282  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 13747                           
 13748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13749                           ; Switch size 1, requested type "space"
 13750                           ; Number of cases is 1, Range of values is 0 to 0
 13751                           ; switch strategies available:
 13752                           ; Name         Instructions Cycles
 13753                           ; simple_byte            4     3 (average)
 13754                           ;	Chosen strategy is simple_byte
 13755  001286  5002               	movf	??_TMR2_CallBack+1,w,c
 13756  001288  0A00               	xorlw	0	; case 0
 13757  00128A  A4D8               	btfss	status,2,c
 13758  00128C  D007               	goto	i2l4756
 13759                           
 13760                           ; Switch size 1, requested type "space"
 13761                           ; Number of cases is 2, Range of values is 0 to 1
 13762                           ; switch strategies available:
 13763                           ; Name         Instructions Cycles
 13764                           ; simple_byte            7     4 (average)
 13765                           ;	Chosen strategy is simple_byte
 13766  00128E  5001               	movf	??_TMR2_CallBack,w,c
 13767  001290  0A00               	xorlw	0	; case 0
 13768  001292  B4D8               	btfsc	status,2,c
 13769  001294  D778               	goto	i2l4742
 13770  001296  0A01               	xorlw	1	; case 1
 13771  001298  B4D8               	btfsc	status,2,c
 13772  00129A  D7BF               	goto	i2l4748
 13773  00129C                     i2l4756:
 13774                           
 13775                           ;tmr2.c: 185: }
 13776                           ;tmr2.c: 186: i = i + 1;
 13777  00129C  0E01               	movlw	1
 13778  00129E  2403               	addwf	TMR2_CallBack@i,w,c
 13779  0012A0  6E03               	movwf	TMR2_CallBack@i,c
 13780  0012A2  0E00               	movlw	0
 13781  0012A4  2004               	addwfc	TMR2_CallBack@i+1,w,c
 13782  0012A6  6E04               	movwf	TMR2_CallBack@i+1,c
 13783  0012A8                     i2l456:
 13784  0012A8  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 13785  0012AA  D73B               	goto	i2l4736
 13786  0012AC  5004               	movf	TMR2_CallBack@i+1,w,c
 13787  0012AE  E104               	bnz	i2l4758
 13788  0012B0  0E06               	movlw	6
 13789  0012B2  5C03               	subwf	TMR2_CallBack@i,w,c
 13790  0012B4  A0D8               	btfss	status,0,c
 13791  0012B6  D735               	goto	i2l4736
 13792  0012B8                     i2l4758:
 13793                           
 13794                           ;tmr2.c: 187: }
 13795                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 13796  0012B8  0100               	movlb	0	; () banked
 13797  0012BA  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13798  0012BC  0100               	movlb	0	; () banked
 13799  0012BE  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13800  0012C0  B4D8               	btfsc	status,2,c
 13801  0012C2  0012               	return	
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;tmr2.c: 192: {
 13805                           ;tmr2.c: 193: TMR2_InterruptHandler();
 13806  0012C4  D801               	call	i2u430_48
 13807  0012C6  0012               	return	
 13808  0012C8                     i2u430_48:
 13809  0012C8  0005               	push	
 13810  0012CA  0100               	movlb	0	; () banked
 13811  0012CC  6EFA               	movwf	pclath,c
 13812  0012CE  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13813  0012D0  6EFD               	movwf	tosl,c
 13814  0012D2  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13815  0012D4  6EFE               	movwf	tosh,c
 13816  0012D6  50F8               	movf	tblptru,w,c
 13817  0012D8  6EFF               	movwf	tosu,c
 13818  0012DA  50FA               	movf	pclath,w,c
 13819  0012DC  0012               	return		;indir
 13820  0012DE                     __end_of_TMR2_CallBack:
 13821                           	opt stack 0
 13822                           tosu	equ	0xFFF
 13823                           tosh	equ	0xFFE
 13824                           tosl	equ	0xFFD
 13825                           pclatu	equ	0xFFB
 13826                           pclath	equ	0xFFA
 13827                           tblptru	equ	0xFF8
 13828                           tblptrh	equ	0xFF7
 13829                           tblptrl	equ	0xFF6
 13830                           tablat	equ	0xFF5
 13831                           prodh	equ	0xFF4
 13832                           prodl	equ	0xFF3
 13833                           intcon	equ	0xFF2
 13834                           intcon2	equ	0xFF1
 13835                           indf0	equ	0xFEF
 13836                           postinc0	equ	0xFEE
 13837                           fsr0h	equ	0xFEA
 13838                           fsr0l	equ	0xFE9
 13839                           wreg	equ	0xFE8
 13840                           fsr1h	equ	0xFE2
 13841                           fsr1l	equ	0xFE1
 13842                           indf2	equ	0xFDF
 13843                           postinc2	equ	0xFDE
 13844                           postdec2	equ	0xFDD
 13845                           plusw2	equ	0xFDB
 13846                           fsr2h	equ	0xFDA
 13847                           fsr2l	equ	0xFD9
 13848                           status	equ	0xFD8
 13849                           
 13850 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 13851 ;; Defined at:
 13852 ;;		line 295 in file "mcc_generated_files/tmr2.c"
 13853 ;; Parameters:    Size  Location     Type
 13854 ;;		None
 13855 ;; Auto vars:     Size  Location     Type
 13856 ;;		None
 13857 ;; Return value:  Size  Location     Type
 13858 ;;                  1    wreg      void 
 13859 ;; Registers used:
 13860 ;;		None
 13861 ;; Tracked objects:
 13862 ;;		On entry : 0/0
 13863 ;;		On exit  : 0/0
 13864 ;;		Unchanged: 0/0
 13865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13866 ;;      Params:         0       0       0       0       0       0       0
 13867 ;;      Locals:         0       0       0       0       0       0       0
 13868 ;;      Temps:          0       0       0       0       0       0       0
 13869 ;;      Totals:         0       0       0       0       0       0       0
 13870 ;;Total ram usage:        0 bytes
 13871 ;; Hardware stack levels used:    1
 13872 ;; This function calls:
 13873 ;;		Nothing
 13874 ;; This function is called by:
 13875 ;;		_TMR2_Initialize
 13876 ;;		_TMR2_CallBack
 13877 ;; This function uses a non-reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text70
 13881  003194                     __ptext70:
 13882                           	opt stack 0
 13883  003194                     _TMR2_DefaultInterruptHandler:
 13884                           	opt stack 21
 13885                           
 13886                           ;incstack = 0
 13887  003194  0012               	return		;funcret
 13888  003196                     __end_of_TMR2_DefaultInterruptHandler:
 13889                           	opt stack 0
 13890                           tosu	equ	0xFFF
 13891                           tosh	equ	0xFFE
 13892                           tosl	equ	0xFFD
 13893                           pclatu	equ	0xFFB
 13894                           pclath	equ	0xFFA
 13895                           tblptru	equ	0xFF8
 13896                           tblptrh	equ	0xFF7
 13897                           tblptrl	equ	0xFF6
 13898                           tablat	equ	0xFF5
 13899                           prodh	equ	0xFF4
 13900                           prodl	equ	0xFF3
 13901                           intcon	equ	0xFF2
 13902                           intcon2	equ	0xFF1
 13903                           indf0	equ	0xFEF
 13904                           postinc0	equ	0xFEE
 13905                           fsr0h	equ	0xFEA
 13906                           fsr0l	equ	0xFE9
 13907                           wreg	equ	0xFE8
 13908                           fsr1h	equ	0xFE2
 13909                           fsr1l	equ	0xFE1
 13910                           indf2	equ	0xFDF
 13911                           postinc2	equ	0xFDE
 13912                           postdec2	equ	0xFDD
 13913                           plusw2	equ	0xFDB
 13914                           fsr2h	equ	0xFDA
 13915                           fsr2l	equ	0xFD9
 13916                           status	equ	0xFD8
 13917                           
 13918 ;; *************** function _TMR0_ISR *****************
 13919 ;; Defined at:
 13920 ;;		line 82 in file "mcc_generated_files/tmr0.c"
 13921 ;; Parameters:    Size  Location     Type
 13922 ;;		None
 13923 ;; Auto vars:     Size  Location     Type
 13924 ;;  x               2    4[COMRAM] int 
 13925 ;; Return value:  Size  Location     Type
 13926 ;;                  1    wreg      void 
 13927 ;; Registers used:
 13928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13929 ;; Tracked objects:
 13930 ;;		On entry : 0/0
 13931 ;;		On exit  : 0/0
 13932 ;;		Unchanged: 0/0
 13933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13934 ;;      Params:         0       0       0       0       0       0       0
 13935 ;;      Locals:         2       0       0       0       0       0       0
 13936 ;;      Temps:          0       0       0       0       0       0       0
 13937 ;;      Totals:         2       0       0       0       0       0       0
 13938 ;;Total ram usage:        2 bytes
 13939 ;; Hardware stack levels used:    1
 13940 ;; Hardware stack levels required when called:    1
 13941 ;; This function calls:
 13942 ;;		_ReadButtonState
 13943 ;; This function is called by:
 13944 ;;		_INTERRUPT_InterruptManager
 13945 ;; This function uses a non-reentrant model
 13946 ;;
 13947                           
 13948                           	psect	text71
 13949  002E34                     __ptext71:
 13950                           	opt stack 0
 13951  002E34                     _TMR0_ISR:
 13952                           	opt stack 22
 13953                           
 13954                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 13955                           
 13956                           ;incstack = 0
 13957  002E34  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 13958  002E36  6ED7               	movwf	4055,c	;volatile
 13959                           
 13960                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 13961  002E38  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 13962                           
 13963                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 13964  002E3C  0E00               	movlw	0
 13965  002E3E  6E06               	movwf	TMR0_ISR@x+1,c
 13966  002E40  0E00               	movlw	0
 13967  002E42  6E05               	movwf	TMR0_ISR@x,c
 13968  002E44                     i2l5268:
 13969  002E44  BE06               	btfsc	TMR0_ISR@x+1,7,c
 13970  002E46  D006               	goto	i2l5272
 13971  002E48  5006               	movf	TMR0_ISR@x+1,w,c
 13972  002E4A  E10D               	bnz	i2l5278
 13973  002E4C  0E08               	movlw	8
 13974  002E4E  5C05               	subwf	TMR0_ISR@x,w,c
 13975  002E50  B0D8               	btfsc	status,0,c
 13976  002E52  D009               	goto	i2l5278
 13977  002E54                     i2l5272:
 13978                           
 13979                           ;tmr0.c: 89: ReadButtonState(x);
 13980  002E54  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 13981  002E58  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 13982  002E5C  EC33  F00D         	call	_ReadButtonState	;wreg free
 13983  002E60  4A05               	infsnz	TMR0_ISR@x,f,c
 13984  002E62  2A06               	incf	TMR0_ISR@x+1,f,c
 13985  002E64  D7EF               	goto	i2l5268
 13986  002E66                     i2l5278:
 13987                           
 13988                           ;tmr0.c: 90: }
 13989                           ;tmr0.c: 91: time++;
 13990  002E66  2A3F               	incf	_time,f,c	;volatile
 13991                           
 13992                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
 13993  002E68  94F2               	bcf	intcon,2,c	;volatile
 13994  002E6A  0012               	return		;funcret
 13995  002E6C                     __end_of_TMR0_ISR:
 13996                           	opt stack 0
 13997                           tosu	equ	0xFFF
 13998                           tosh	equ	0xFFE
 13999                           tosl	equ	0xFFD
 14000                           pclatu	equ	0xFFB
 14001                           pclath	equ	0xFFA
 14002                           tblptru	equ	0xFF8
 14003                           tblptrh	equ	0xFF7
 14004                           tblptrl	equ	0xFF6
 14005                           tablat	equ	0xFF5
 14006                           prodh	equ	0xFF4
 14007                           prodl	equ	0xFF3
 14008                           intcon	equ	0xFF2
 14009                           intcon2	equ	0xFF1
 14010                           indf0	equ	0xFEF
 14011                           postinc0	equ	0xFEE
 14012                           fsr0h	equ	0xFEA
 14013                           fsr0l	equ	0xFE9
 14014                           wreg	equ	0xFE8
 14015                           fsr1h	equ	0xFE2
 14016                           fsr1l	equ	0xFE1
 14017                           indf2	equ	0xFDF
 14018                           postinc2	equ	0xFDE
 14019                           postdec2	equ	0xFDD
 14020                           plusw2	equ	0xFDB
 14021                           fsr2h	equ	0xFDA
 14022                           fsr2l	equ	0xFD9
 14023                           status	equ	0xFD8
 14024                           
 14025 ;; *************** function _ReadButtonState *****************
 14026 ;; Defined at:
 14027 ;;		line 154 in file "IO.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  btnnum          2    0[COMRAM] int 
 14030 ;; Auto vars:     Size  Location     Type
 14031 ;;		None
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  1    wreg      void 
 14034 ;; Registers used:
 14035 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14036 ;; Tracked objects:
 14037 ;;		On entry : 0/0
 14038 ;;		On exit  : 0/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14041 ;;      Params:         2       0       0       0       0       0       0
 14042 ;;      Locals:         0       0       0       0       0       0       0
 14043 ;;      Temps:          2       0       0       0       0       0       0
 14044 ;;      Totals:         4       0       0       0       0       0       0
 14045 ;;Total ram usage:        4 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; This function calls:
 14048 ;;		Nothing
 14049 ;; This function is called by:
 14050 ;;		_TMR0_ISR
 14051 ;; This function uses a non-reentrant model
 14052 ;;
 14053                           
 14054                           	psect	text72
 14055  001A66                     __ptext72:
 14056                           	opt stack 0
 14057  001A66                     _ReadButtonState:
 14058                           	opt stack 22
 14059                           
 14060                           ;IO.c: 155: switch (btnnum) {
 14061                           
 14062                           ;incstack = 0
 14063  001A66  D068               	goto	i2l4728
 14064  001A68                     i2l4710:
 14065                           
 14066                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 14067  001A68  0EB0               	movlw	low _butnarray
 14068  001A6A  2401               	addwf	ReadButtonState@btnnum,w,c
 14069  001A6C  6ED9               	movwf	fsr2l,c
 14070  001A6E  0E00               	movlw	high _butnarray
 14071  001A70  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14072  001A72  6EDA               	movwf	fsr2h,c
 14073  001A74  AA83               	btfss	3971,5,c	;volatile
 14074  001A76  D002               	goto	i2u395_40
 14075  001A78  0E01               	movlw	1
 14076  001A7A  D001               	goto	i2u395_46
 14077  001A7C                     i2u395_40:
 14078  001A7C  0E00               	movlw	0
 14079  001A7E                     i2u395_46:
 14080  001A7E  6EDF               	movwf	indf2,c
 14081                           
 14082                           ;IO.c: 158: break;
 14083  001A80  0012               	return	
 14084  001A82                     i2l4712:
 14085                           
 14086                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 14087  001A82  0EB0               	movlw	low _butnarray
 14088  001A84  2401               	addwf	ReadButtonState@btnnum,w,c
 14089  001A86  6ED9               	movwf	fsr2l,c
 14090  001A88  0E00               	movlw	high _butnarray
 14091  001A8A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14092  001A8C  6EDA               	movwf	fsr2h,c
 14093  001A8E  A081               	btfss	3969,0,c	;volatile
 14094  001A90  D002               	goto	i2u396_40
 14095  001A92  0E01               	movlw	1
 14096  001A94  D001               	goto	i2u396_46
 14097  001A96                     i2u396_40:
 14098  001A96  0E00               	movlw	0
 14099  001A98                     i2u396_46:
 14100  001A98  6EDF               	movwf	indf2,c
 14101                           
 14102                           ;IO.c: 161: break;
 14103  001A9A  0012               	return	
 14104  001A9C                     i2l4714:
 14105                           
 14106                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 14107  001A9C  0EB0               	movlw	low _butnarray
 14108  001A9E  2401               	addwf	ReadButtonState@btnnum,w,c
 14109  001AA0  6ED9               	movwf	fsr2l,c
 14110  001AA2  0E00               	movlw	high _butnarray
 14111  001AA4  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14112  001AA6  6EDA               	movwf	fsr2h,c
 14113  001AA8  A281               	btfss	3969,1,c	;volatile
 14114  001AAA  D002               	goto	i2u397_40
 14115  001AAC  0E01               	movlw	1
 14116  001AAE  D001               	goto	i2u397_46
 14117  001AB0                     i2u397_40:
 14118  001AB0  0E00               	movlw	0
 14119  001AB2                     i2u397_46:
 14120  001AB2  6EDF               	movwf	indf2,c
 14121                           
 14122                           ;IO.c: 164: break;
 14123  001AB4  0012               	return	
 14124  001AB6                     i2l4716:
 14125                           
 14126                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 14127  001AB6  0EB0               	movlw	low _butnarray
 14128  001AB8  2401               	addwf	ReadButtonState@btnnum,w,c
 14129  001ABA  6ED9               	movwf	fsr2l,c
 14130  001ABC  0E00               	movlw	high _butnarray
 14131  001ABE  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14132  001AC0  6EDA               	movwf	fsr2h,c
 14133  001AC2  A481               	btfss	3969,2,c	;volatile
 14134  001AC4  D002               	goto	i2u398_40
 14135  001AC6  0E01               	movlw	1
 14136  001AC8  D001               	goto	i2u398_46
 14137  001ACA                     i2u398_40:
 14138  001ACA  0E00               	movlw	0
 14139  001ACC                     i2u398_46:
 14140  001ACC  6EDF               	movwf	indf2,c
 14141                           
 14142                           ;IO.c: 167: break;
 14143  001ACE  0012               	return	
 14144  001AD0                     i2l4718:
 14145                           
 14146                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 14147  001AD0  0EB0               	movlw	low _butnarray
 14148  001AD2  2401               	addwf	ReadButtonState@btnnum,w,c
 14149  001AD4  6ED9               	movwf	fsr2l,c
 14150  001AD6  0E00               	movlw	high _butnarray
 14151  001AD8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14152  001ADA  6EDA               	movwf	fsr2h,c
 14153  001ADC  A881               	btfss	3969,4,c	;volatile
 14154  001ADE  D002               	goto	i2u399_40
 14155  001AE0  0E01               	movlw	1
 14156  001AE2  D001               	goto	i2u399_46
 14157  001AE4                     i2u399_40:
 14158  001AE4  0E00               	movlw	0
 14159  001AE6                     i2u399_46:
 14160  001AE6  6EDF               	movwf	indf2,c
 14161                           
 14162                           ;IO.c: 170: break;
 14163  001AE8  0012               	return	
 14164  001AEA                     i2l4720:
 14165                           
 14166                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 14167  001AEA  0EB0               	movlw	low _butnarray
 14168  001AEC  2401               	addwf	ReadButtonState@btnnum,w,c
 14169  001AEE  6ED9               	movwf	fsr2l,c
 14170  001AF0  0E00               	movlw	high _butnarray
 14171  001AF2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14172  001AF4  6EDA               	movwf	fsr2h,c
 14173  001AF6  A080               	btfss	3968,0,c	;volatile
 14174  001AF8  D002               	goto	i2u400_40
 14175  001AFA  0E01               	movlw	1
 14176  001AFC  D001               	goto	i2u400_46
 14177  001AFE                     i2u400_40:
 14178  001AFE  0E00               	movlw	0
 14179  001B00                     i2u400_46:
 14180  001B00  6EDF               	movwf	indf2,c
 14181                           
 14182                           ;IO.c: 173: break;
 14183  001B02  0012               	return	
 14184  001B04                     i2l4722:
 14185                           
 14186                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 14187  001B04  0EB0               	movlw	low _butnarray
 14188  001B06  2401               	addwf	ReadButtonState@btnnum,w,c
 14189  001B08  6ED9               	movwf	fsr2l,c
 14190  001B0A  0E00               	movlw	high _butnarray
 14191  001B0C  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14192  001B0E  6EDA               	movwf	fsr2h,c
 14193  001B10  A280               	btfss	3968,1,c	;volatile
 14194  001B12  D002               	goto	i2u401_40
 14195  001B14  0E01               	movlw	1
 14196  001B16  D001               	goto	i2u401_46
 14197  001B18                     i2u401_40:
 14198  001B18  0E00               	movlw	0
 14199  001B1A                     i2u401_46:
 14200  001B1A  6EDF               	movwf	indf2,c
 14201                           
 14202                           ;IO.c: 176: break;
 14203  001B1C  0012               	return	
 14204  001B1E                     i2l4724:
 14205                           
 14206                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 14207  001B1E  0EB0               	movlw	low _butnarray
 14208  001B20  2401               	addwf	ReadButtonState@btnnum,w,c
 14209  001B22  6ED9               	movwf	fsr2l,c
 14210  001B24  0E00               	movlw	high _butnarray
 14211  001B26  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14212  001B28  6EDA               	movwf	fsr2h,c
 14213  001B2A  A480               	btfss	3968,2,c	;volatile
 14214  001B2C  D002               	goto	i2u402_40
 14215  001B2E  0E01               	movlw	1
 14216  001B30  D001               	goto	i2u402_46
 14217  001B32                     i2u402_40:
 14218  001B32  0E00               	movlw	0
 14219  001B34                     i2u402_46:
 14220  001B34  6EDF               	movwf	indf2,c
 14221                           
 14222                           ;IO.c: 181: }
 14223                           
 14224                           ;IO.c: 179: break;
 14225  001B36  0012               	return	
 14226  001B38                     i2l4728:
 14227  001B38  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 14228  001B3C  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 14229                           
 14230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14231                           ; Switch size 1, requested type "space"
 14232                           ; Number of cases is 1, Range of values is 0 to 0
 14233                           ; switch strategies available:
 14234                           ; Name         Instructions Cycles
 14235                           ; simple_byte            4     3 (average)
 14236                           ;	Chosen strategy is simple_byte
 14237  001B40  5004               	movf	??_ReadButtonState+1,w,c
 14238  001B42  0A00               	xorlw	0	; case 0
 14239  001B44  A4D8               	btfss	status,2,c
 14240  001B46  0012               	return	
 14241                           
 14242                           ; Switch size 1, requested type "space"
 14243                           ; Number of cases is 8, Range of values is 0 to 7
 14244                           ; switch strategies available:
 14245                           ; Name         Instructions Cycles
 14246                           ; simple_byte           25    13 (average)
 14247                           ;	Chosen strategy is simple_byte
 14248  001B48  5003               	movf	??_ReadButtonState,w,c
 14249  001B4A  0A00               	xorlw	0	; case 0
 14250  001B4C  B4D8               	btfsc	status,2,c
 14251  001B4E  D78C               	goto	i2l4710
 14252  001B50  0A01               	xorlw	1	; case 1
 14253  001B52  B4D8               	btfsc	status,2,c
 14254  001B54  D796               	goto	i2l4712
 14255  001B56  0A03               	xorlw	3	; case 2
 14256  001B58  B4D8               	btfsc	status,2,c
 14257  001B5A  D7A0               	goto	i2l4714
 14258  001B5C  0A01               	xorlw	1	; case 3
 14259  001B5E  B4D8               	btfsc	status,2,c
 14260  001B60  D7AA               	goto	i2l4716
 14261  001B62  0A07               	xorlw	7	; case 4
 14262  001B64  B4D8               	btfsc	status,2,c
 14263  001B66  D7B4               	goto	i2l4718
 14264  001B68  0A01               	xorlw	1	; case 5
 14265  001B6A  B4D8               	btfsc	status,2,c
 14266  001B6C  D7BE               	goto	i2l4720
 14267  001B6E  0A03               	xorlw	3	; case 6
 14268  001B70  B4D8               	btfsc	status,2,c
 14269  001B72  D7C8               	goto	i2l4722
 14270  001B74  0A01               	xorlw	1	; case 7
 14271  001B76  A4D8               	btfss	status,2,c
 14272  001B78  0012               	return	
 14273  001B7A  D7D1               	goto	i2l4724
 14274  001B7C                     __end_of_ReadButtonState:
 14275                           	opt stack 0
 14276                           tosu	equ	0xFFF
 14277                           tosh	equ	0xFFE
 14278                           tosl	equ	0xFFD
 14279                           pclatu	equ	0xFFB
 14280                           pclath	equ	0xFFA
 14281                           tblptru	equ	0xFF8
 14282                           tblptrh	equ	0xFF7
 14283                           tblptrl	equ	0xFF6
 14284                           tablat	equ	0xFF5
 14285                           prodh	equ	0xFF4
 14286                           prodl	equ	0xFF3
 14287                           intcon	equ	0xFF2
 14288                           intcon2	equ	0xFF1
 14289                           indf0	equ	0xFEF
 14290                           postinc0	equ	0xFEE
 14291                           fsr0h	equ	0xFEA
 14292                           fsr0l	equ	0xFE9
 14293                           wreg	equ	0xFE8
 14294                           fsr1h	equ	0xFE2
 14295                           fsr1l	equ	0xFE1
 14296                           indf2	equ	0xFDF
 14297                           postinc2	equ	0xFDE
 14298                           postdec2	equ	0xFDD
 14299                           plusw2	equ	0xFDB
 14300                           fsr2h	equ	0xFDA
 14301                           fsr2l	equ	0xFD9
 14302                           status	equ	0xFD8
 14303                           
 14304 ;; *************** function _I2C1_ISR *****************
 14305 ;; Defined at:
 14306 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;		None
 14309 ;; Auto vars:     Size  Location     Type
 14310 ;;		None
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  1    wreg      void 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 0/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14320 ;;      Params:         0       0       0       0       0       0       0
 14321 ;;      Locals:         0       0       0       0       0       0       0
 14322 ;;      Temps:          2       0       0       0       0       0       0
 14323 ;;      Totals:         2       0       0       0       0       0       0
 14324 ;;Total ram usage:        2 bytes
 14325 ;; Hardware stack levels used:    1
 14326 ;; Hardware stack levels required when called:    1
 14327 ;; This function calls:
 14328 ;;		_I2C1_FunctionComplete
 14329 ;;		_I2C1_Stop
 14330 ;; This function is called by:
 14331 ;;		_INTERRUPT_InterruptManager
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           	psect	text73
 14336  000B8E                     __ptext73:
 14337                           	opt stack 0
 14338  000B8E                     _I2C1_ISR:
 14339                           	opt stack 22
 14340                           
 14341                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 14342                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 14343                           ;i2c1.c: 191: static int i2c_bytes_left = 0;
 14344                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 14345                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 14346                           
 14347                           ;incstack = 0
 14348  000B8E  969E               	bcf	3998,3,c	;volatile
 14349                           
 14350                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 14351  000B90  AEC6               	btfss	4038,7,c	;volatile
 14352  000B92  D14A               	goto	i2l6908
 14353                           
 14354                           ;i2c1.c: 199: {
 14355                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 14356  000B94  9EC6               	bcf	4038,7,c	;volatile
 14357                           
 14358                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 14359  000B96  0E00               	movlw	0
 14360  000B98  6E38               	movwf	_i2c1_state,c
 14361                           
 14362                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 14363  000B9A  0100               	movlb	0	; () banked
 14364  000B9C  EE20 F003          	lfsr	2,3
 14365  000BA0  51D5               	movf	_p_i2c1_current& (0+255),w,b
 14366  000BA2  26D9               	addwf	fsr2l,f,c
 14367  000BA4  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14368  000BA6  22DA               	addwfc	fsr2h,f,c
 14369  000BA8  CFDE F004          	movff	postinc2,??_I2C1_ISR
 14370  000BAC  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 14371  000BB0  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 14372  000BB4  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 14373  000BB8  0E01               	movlw	1
 14374  000BBA  6EDF               	movwf	indf2,c
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;i2c1.c: 206: p_i2c1_current = (0);
 14378  000BBC  0E00               	movlw	0
 14379  000BBE  0100               	movlb	0	; () banked
 14380  000BC0  6FD5               	movwf	_p_i2c1_current& (0+255),b
 14381  000BC2  0E00               	movlw	0
 14382  000BC4  0100               	movlb	0	; () banked
 14383  000BC6  6FD6               	movwf	(_p_i2c1_current+1)& (0+255),b
 14384                           
 14385                           ; BSR set to: 0
 14386                           ;i2c1.c: 208: return;
 14387  000BC8  0012               	return	
 14388  000BCA                     i2l60:
 14389                           
 14390                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 14391  000BCA  0100               	movlb	0	; () banked
 14392  000BCC  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 14393  000BCE  0012               	return	
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;i2c1.c: 217: {
 14397                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 14398  000BD0  C0BA  F0D5         	movff	_i2c1_object+2,_p_i2c1_current
 14399  000BD4  C0BB  F0D6         	movff	_i2c1_object+3,_p_i2c1_current+1
 14400                           
 14401                           ; BSR set to: 0
 14402                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 14403  000BD8  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 14404  000BDC  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 14405  000BE0  50DF               	movf	indf2,w,c
 14406  000BE2  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14407  000BE4  5004               	movf	??_I2C1_ISR,w,c
 14408  000BE6  0100               	movlb	0	; () banked
 14409  000BE8  6FD1               	movwf	_i2c1_trb_count& (0+255),b
 14410  000BEA  6BD2               	clrf	(_i2c1_trb_count+1)& (0+255),b
 14411                           
 14412                           ; BSR set to: 0
 14413                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 14414  000BEC  0100               	movlb	0	; () banked
 14415  000BEE  EE20 F001          	lfsr	2,1
 14416  000BF2  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 14417  000BF4  26D9               	addwf	fsr2l,f,c
 14418  000BF6  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 14419  000BF8  22DA               	addwfc	fsr2h,f,c
 14420  000BFA  CFDE F02D          	movff	postinc2,_p_i2c1_trb_current
 14421  000BFE  CFDD F02E          	movff	postdec2,_p_i2c1_trb_current+1
 14422                           
 14423                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 14424  000C02  0E05               	movlw	5
 14425  000C04  0100               	movlb	0	; () banked
 14426  000C06  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 14427  000C08  0E00               	movlw	0
 14428  000C0A  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 14429                           
 14430                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 14431  000C0C  0EF0               	movlw	low (_i2c1_tr_queue+5)
 14432  000C0E  0100               	movlb	0	; () banked
 14433  000C10  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14434  000C12  E10B               	bnz	i2l6802
 14435  000C14  0E00               	movlw	high (_i2c1_tr_queue+5)
 14436  000C16  0100               	movlb	0	; () banked
 14437  000C18  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14438  000C1A  A4D8               	btfss	status,2,c
 14439  000C1C  D006               	goto	i2l6802
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;i2c1.c: 227: {
 14443                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 14444  000C1E  0EEB               	movlw	low _i2c1_tr_queue
 14445  000C20  0100               	movlb	0	; () banked
 14446  000C22  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 14447  000C24  0E00               	movlw	high _i2c1_tr_queue
 14448  000C26  0100               	movlb	0	; () banked
 14449  000C28  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 14450  000C2A                     i2l6802:
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;i2c1.c: 230: }
 14454                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 14455  000C2A  0100               	movlb	0	; () banked
 14456  000C2C  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 14457                           
 14458                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 14459  000C2E  0100               	movlb	0	; () banked
 14460  000C30  51B8               	movf	_i2c1_object& (0+255),w,b
 14461  000C32  0100               	movlb	0	; () banked
 14462  000C34  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14463  000C36  E108               	bnz	i2l63
 14464  000C38  0100               	movlb	0	; () banked
 14465  000C3A  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 14466  000C3C  0100               	movlb	0	; () banked
 14467  000C3E  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14468  000C40  A4D8               	btfss	status,2,c
 14469  000C42  D002               	goto	i2l63
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;i2c1.c: 238: {
 14473                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 14474  000C44  0100               	movlb	0	; () banked
 14475  000C46  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 14476  000C48                     i2l63:
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;i2c1.c: 241: }
 14480                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 14481  000C48  80C5               	bsf	4037,0,c	;volatile
 14482                           
 14483                           ; BSR set to: 0
 14484                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 14485  000C4A  0E02               	movlw	2
 14486  000C4C  6E38               	movwf	_i2c1_state,c
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;i2c1.c: 248: }
 14490                           ;i2c1.c: 250: break;
 14491  000C4E  0012               	return	
 14492  000C50                     i2l65:
 14493                           
 14494                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 14495  000C50  82C5               	bsf	4037,1,c	;volatile
 14496                           
 14497                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 14498  000C52  0E02               	movlw	2
 14499  000C54  6E38               	movwf	_i2c1_state,c
 14500                           
 14501                           ;i2c1.c: 262: break;
 14502  000C56  0012               	return	
 14503  000C58                     i2l66:
 14504                           
 14505                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 14506  000C58  ACC5               	btfss	4037,6,c	;volatile
 14507  000C5A  D006               	goto	i2l6814
 14508                           
 14509                           ;i2c1.c: 267: {
 14510                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 14511  000C5C  0100               	movlb	0	; () banked
 14512  000C5E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14513                           
 14514                           ; BSR set to: 0
 14515                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14516  000C60  0E04               	movlw	4
 14517  000C62  ECA0  F016         	call	_I2C1_Stop
 14518                           
 14519                           ;i2c1.c: 270: }
 14520  000C66  0012               	return	
 14521  000C68                     i2l6814:
 14522                           
 14523                           ;i2c1.c: 271: else
 14524                           ;i2c1.c: 272: {
 14525                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 14526  000C68  90D8               	bcf	status,0,c
 14527  000C6A  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 14528  000C6C  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14529  000C6E  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 14530  000C70  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14531  000C72  5004               	movf	??_I2C1_ISR,w,c
 14532  000C74  6EC9               	movwf	4041,c	;volatile
 14533                           
 14534                           ;i2c1.c: 277: if(i2c_address & 0x01)
 14535  000C76  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14536  000C78  D003               	goto	i2l6820
 14537                           
 14538                           ;i2c1.c: 278: {
 14539                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 14540  000C7A  0E0B               	movlw	11
 14541  000C7C  6E38               	movwf	_i2c1_state,c
 14542                           
 14543                           ;i2c1.c: 282: }
 14544  000C7E  0012               	return	
 14545  000C80                     i2l6820:
 14546                           
 14547                           ;i2c1.c: 283: else
 14548                           ;i2c1.c: 284: {
 14549                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 14550  000C80  0E03               	movlw	3
 14551  000C82  6E38               	movwf	_i2c1_state,c
 14552                           
 14553                           ;i2c1.c: 287: }
 14554                           ;i2c1.c: 288: }
 14555                           ;i2c1.c: 290: break;
 14556  000C84  0012               	return	
 14557  000C86                     i2l71:
 14558                           
 14559                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 14560  000C86  ACC5               	btfss	4037,6,c	;volatile
 14561  000C88  D006               	goto	i2l72
 14562                           
 14563                           ;i2c1.c: 295: {
 14564                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 14565  000C8A  0100               	movlb	0	; () banked
 14566  000C8C  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14570  000C8E  0E04               	movlw	4
 14571  000C90  ECA0  F016         	call	_I2C1_Stop
 14572                           
 14573                           ;i2c1.c: 298: }
 14574  000C94  0012               	return	
 14575  000C96                     i2l72:
 14576                           
 14577                           ;i2c1.c: 299: else
 14578                           ;i2c1.c: 300: {
 14579                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 14580  000C96  82C5               	bsf	4037,1,c	;volatile
 14581                           
 14582                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 14583  000C98  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 14584  000C9C  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 14585  000CA0  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 14586  000CA4  6A05               	clrf	??_I2C1_ISR+1,c
 14587  000CA6  0E06               	movlw	6
 14588  000CA8  1604               	andwf	??_I2C1_ISR,f,c
 14589  000CAA  0E00               	movlw	0
 14590  000CAC  1605               	andwf	??_I2C1_ISR+1,f,c
 14591  000CAE  0EF0               	movlw	240
 14592  000CB0  1004               	iorwf	??_I2C1_ISR,w,c
 14593  000CB2  6E40               	movwf	I2C1_ISR@i2c_address,c
 14594  000CB4  5005               	movf	??_I2C1_ISR+1,w,c
 14595  000CB6  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 14596                           
 14597                           ;i2c1.c: 310: i2c_address |= 0x0001;
 14598  000CB8  8040               	bsf	I2C1_ISR@i2c_address,0,c
 14599                           
 14600                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 14601  000CBA  0E01               	movlw	1
 14602  000CBC  6E35               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 14603                           
 14604                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 14605  000CBE  0E02               	movlw	2
 14606  000CC0  6E38               	movwf	_i2c1_state,c
 14607                           
 14608                           ;i2c1.c: 317: }
 14609                           ;i2c1.c: 319: break;
 14610  000CC2  0012               	return	
 14611  000CC4                     i2l6834:
 14612                           
 14613                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 14614  000CC4  0435               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 14615  000CC6  B4D8               	btfsc	status,2,c
 14616  000CC8  D01E               	goto	i2l76
 14617                           
 14618                           ;i2c1.c: 335: {
 14619                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 14620  000CCA  C02D  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 14621  000CCE  C02E  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 14622  000CD2  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 14623  000CD6  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 14624                           
 14625                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 14626  000CDA  EE20 F003          	lfsr	2,3
 14627  000CDE  502D               	movf	_p_i2c1_trb_current,w,c
 14628  000CE0  26D9               	addwf	fsr2l,f,c
 14629  000CE2  502E               	movf	_p_i2c1_trb_current+1,w,c
 14630  000CE4  22DA               	addwfc	fsr2h,f,c
 14631  000CE6  CFDE F0C1          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 14632  000CEA  CFDD F0C2          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 14633                           
 14634                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 14635  000CEE  EE20 F002          	lfsr	2,2
 14636  000CF2  502D               	movf	_p_i2c1_trb_current,w,c
 14637  000CF4  26D9               	addwf	fsr2l,f,c
 14638  000CF6  502E               	movf	_p_i2c1_trb_current+1,w,c
 14639  000CF8  22DA               	addwfc	fsr2h,f,c
 14640  000CFA  50DF               	movf	indf2,w,c
 14641  000CFC  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14642  000CFE  5004               	movf	??_I2C1_ISR,w,c
 14643  000D00  0100               	movlb	0	; () banked
 14644  000D02  6FBF               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 14645  000D04  6BC0               	clrf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),b
 14646  000D06                     i2l76:
 14647                           
 14648                           ;i2c1.c: 362: else
 14649                           ;i2c1.c: 363: {
 14650                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 14651  000D06  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 14652                           
 14653                           ;i2c1.c: 366: if(i2c_address & 0x01)
 14654  000D0A  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14655  000D0C  D003               	goto	i2l6854
 14656                           
 14657                           ;i2c1.c: 367: {
 14658                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 14659  000D0E  0E05               	movlw	5
 14660  000D10  6E38               	movwf	_i2c1_state,c
 14661                           
 14662                           ;i2c1.c: 370: }
 14663  000D12  0012               	return	
 14664  000D14                     i2l6854:
 14665                           
 14666                           ;i2c1.c: 371: else
 14667                           ;i2c1.c: 372: {
 14668                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 14669  000D14  0E03               	movlw	3
 14670  000D16  6E38               	movwf	_i2c1_state,c
 14671                           
 14672                           ;i2c1.c: 375: }
 14673                           ;i2c1.c: 376: }
 14674                           ;i2c1.c: 377: break;
 14675  000D18  0012               	return	
 14676  000D1A                     i2l82:
 14677                           
 14678                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 14679  000D1A  ACC5               	btfss	4037,6,c	;volatile
 14680  000D1C  D007               	goto	i2l6862
 14681                           
 14682                           ;i2c1.c: 383: {
 14683                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 14684  000D1E  0100               	movlb	0	; () banked
 14685  000D20  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14686                           
 14687                           ; BSR set to: 0
 14688                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 14689  000D22  9CC5               	bcf	4037,6,c	;volatile
 14690                           
 14691                           ; BSR set to: 0
 14692                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 14693  000D24  0E05               	movlw	5
 14694  000D26  ECA0  F016         	call	_I2C1_Stop
 14695                           
 14696                           ;i2c1.c: 393: }
 14697  000D2A  0012               	return	
 14698  000D2C                     i2l6862:
 14699                           
 14700                           ;i2c1.c: 394: else
 14701                           ;i2c1.c: 395: {
 14702                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 14703  000D2C  0100               	movlb	0	; () banked
 14704  000D2E  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14705  000D30  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14706  000D32  0100               	movlb	0	; () banked
 14707  000D34  51C0               	movf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14708  000D36  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14709  000D38  0E01               	movlw	1
 14710  000D3A  0100               	movlb	0	; () banked
 14711  000D3C  5FBF               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14712  000D3E  0E00               	movlw	0
 14713  000D40  0100               	movlb	0	; () banked
 14714  000D42  5BC0               	subwfb	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14715  000D44  5004               	movf	??_I2C1_ISR,w,c
 14716  000D46  1005               	iorwf	??_I2C1_ISR+1,w,c
 14717  000D48  A4D8               	btfss	status,2,c
 14718  000D4A  D016               	goto	i2l6870
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;i2c1.c: 398: {
 14722                           ;i2c1.c: 402: p_i2c1_trb_current++;
 14723  000D4C  0E05               	movlw	5
 14724  000D4E  262D               	addwf	_p_i2c1_trb_current,f,c
 14725  000D50  0E00               	movlw	0
 14726  000D52  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 14727                           
 14728                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 14729  000D54  0100               	movlb	0	; () banked
 14730  000D56  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 14731  000D58  A0D8               	btfss	status,0,c
 14732  000D5A  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 14733  000D5C  0100               	movlb	0	; () banked
 14734  000D5E  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 14735  000D60  0100               	movlb	0	; () banked
 14736  000D62  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 14737  000D64  A4D8               	btfss	status,2,c
 14738  000D66  D004               	goto	i2l86
 14739                           
 14740                           ; BSR set to: 0
 14741                           ;i2c1.c: 406: {
 14742                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14743  000D68  0E00               	movlw	0
 14744  000D6A  ECA0  F016         	call	_I2C1_Stop
 14745                           
 14746                           ;i2c1.c: 408: }
 14747  000D6E  0012               	return	
 14748  000D70                     i2l86:
 14749                           
 14750                           ; BSR set to: 0
 14751                           ;i2c1.c: 409: else
 14752                           ;i2c1.c: 410: {
 14753                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 14754  000D70  82C5               	bsf	4037,1,c	;volatile
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 14758  000D72  0E02               	movlw	2
 14759  000D74  6E38               	movwf	_i2c1_state,c
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;i2c1.c: 422: }
 14763                           ;i2c1.c: 423: }
 14764  000D76  0012               	return	
 14765  000D78                     i2l6870:
 14766                           
 14767                           ; BSR set to: 0
 14768                           ;i2c1.c: 424: else
 14769                           ;i2c1.c: 425: {
 14770                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 14771  000D78  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 14772  000D7C  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 14773  000D80  6AF8               	clrf	tblptru,c
 14774  000D82  0E05               	movlw	(high __ramtop+-1)
 14775  000D84  64F7               	cpfsgt	tblptrh,c
 14776  000D86  D003               	bra	i2u787_47
 14777  000D88  0008               	tblrd		*
 14778  000D8A  50F5               	movf	tablat,w,c
 14779  000D8C  D005               	bra	i2u787_40
 14780  000D8E                     i2u787_47:
 14781  000D8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14782  000D92  CFF7 FFEA          	movff	tblptrh,fsr0h
 14783  000D96  50EF               	movf	indf0,w,c
 14784  000D98                     i2u787_40:
 14785  000D98  6EC9               	movwf	4041,c	;volatile
 14786  000D9A  0100               	movlb	0	; () banked
 14787  000D9C  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 14788  000D9E  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;i2c1.c: 428: }
 14792                           ;i2c1.c: 429: }
 14793                           ;i2c1.c: 430: break;
 14794                           
 14795                           ; BSR set to: 0
 14796  000DA0  0012               	return	
 14797  000DA2                     i2l89:
 14798                           
 14799                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 14800  000DA2  ACC5               	btfss	4037,6,c	;volatile
 14801  000DA4  D007               	goto	i2l90
 14802                           
 14803                           ;i2c1.c: 436: {
 14804                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 14805  000DA6  0100               	movlb	0	; () banked
 14806  000DA8  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14807                           
 14808                           ; BSR set to: 0
 14809                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14810  000DAA  0E04               	movlw	4
 14811  000DAC  ECA0  F016         	call	_I2C1_Stop
 14812                           
 14813                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 14814  000DB0  9CC5               	bcf	4037,6,c	;volatile
 14815                           
 14816                           ;i2c1.c: 446: }
 14817  000DB2  0012               	return	
 14818  000DB4                     i2l90:
 14819                           
 14820                           ;i2c1.c: 447: else
 14821                           ;i2c1.c: 448: {
 14822                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 14823  000DB4  86C5               	bsf	4037,3,c	;volatile
 14824                           
 14825                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14826  000DB6  0E08               	movlw	8
 14827  000DB8  6E38               	movwf	_i2c1_state,c
 14828                           
 14829                           ;i2c1.c: 451: }
 14830                           ;i2c1.c: 452: break;
 14831  000DBA  0012               	return	
 14832  000DBC                     i2l6882:
 14833                           
 14834                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14835  000DBC  0E08               	movlw	8
 14836  000DBE  6E38               	movwf	_i2c1_state,c
 14837                           
 14838                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 14839  000DC0  86C5               	bsf	4037,3,c	;volatile
 14840                           
 14841                           ;i2c1.c: 464: break;
 14842  000DC2  0012               	return	
 14843  000DC4                     i2l6886:
 14844                           
 14845                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 14846  000DC4  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 14847  000DC8  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 14848  000DCC  6AF8               	clrf	tblptru,c
 14849  000DCE  0E05               	movlw	(high __ramtop+-1)
 14850  000DD0  64F7               	cpfsgt	tblptrh,c
 14851  000DD2  D004               	bra	i2u789_47
 14852  000DD4  CFC9 FFF5          	movff	4041,tablat	;volatile
 14853  000DD8  000C               	tblwt		*
 14854  000DDA  D006               	bra	i2u789_40
 14855  000DDC                     i2u789_47:
 14856  000DDC  CFF6 FFE9          	movff	tblptrl,fsr0l
 14857  000DE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 14858  000DE4  CFC9 FFEF          	movff	4041,indf0	;volatile
 14859  000DE8                     i2u789_40:
 14860  000DE8  0100               	movlb	0	; () banked
 14861  000DEA  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 14862  000DEC  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 14863                           
 14864                           ; BSR set to: 0
 14865                           ;i2c1.c: 472: if(--i2c_bytes_left)
 14866  000DEE  0100               	movlb	0	; () banked
 14867  000DF0  07BF               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14868  000DF2  A0D8               	btfss	status,0,c
 14869  000DF4  07C0               	decf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14870  000DF6  0100               	movlb	0	; () banked
 14871  000DF8  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14872  000DFA  0100               	movlb	0	; () banked
 14873  000DFC  11C0               	iorwf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14874  000DFE  B4D8               	btfsc	status,2,c
 14875  000E00  D004               	goto	i2l94
 14876                           
 14877                           ; BSR set to: 0
 14878                           ;i2c1.c: 473: {
 14879                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 14880  000E02  9AC5               	bcf	4037,5,c	;volatile
 14881                           
 14882                           ; BSR set to: 0
 14883                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 14884  000E04  0E06               	movlw	6
 14885  000E06  6E38               	movwf	_i2c1_state,c
 14886                           
 14887                           ;i2c1.c: 483: }
 14888  000E08  D003               	goto	i2l6898
 14889  000E0A                     i2l94:
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;i2c1.c: 484: else
 14893                           ;i2c1.c: 485: {
 14894                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 14895  000E0A  8AC5               	bsf	4037,5,c	;volatile
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;i2c1.c: 491: I2C1_FunctionComplete();
 14899  000E0C  ECE9  F017         	call	_I2C1_FunctionComplete	;wreg free
 14900  000E10                     i2l6898:
 14901                           
 14902                           ;i2c1.c: 492: }
 14903                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 14904  000E10  88C5               	bsf	4037,4,c	;volatile
 14905                           
 14906                           ;i2c1.c: 496: break;
 14907  000E12  0012               	return	
 14908  000E14                     i2l6900:
 14909                           
 14910                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 14911                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14912  000E14  0E00               	movlw	0
 14913  000E16  ECA0  F016         	call	_I2C1_Stop
 14914                           
 14915                           ;i2c1.c: 503: break;
 14916  000E1A  0012               	return	
 14917  000E1C                     i2l6902:
 14918                           
 14919                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 14920  000E1C  0100               	movlb	0	; () banked
 14921  000E1E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 14925  000E20  0E06               	movlw	6
 14926  000E22  ECA0  F016         	call	_I2C1_Stop
 14927                           
 14928                           ;i2c1.c: 513: }
 14929                           
 14930                           ;i2c1.c: 511: break;
 14931  000E26  0012               	return	
 14932  000E28                     i2l6908:
 14933  000E28  5038               	movf	_i2c1_state,w,c
 14934                           
 14935                           ; Switch size 1, requested type "space"
 14936                           ; Number of cases is 11, Range of values is 0 to 11
 14937                           ; switch strategies available:
 14938                           ; Name         Instructions Cycles
 14939                           ; simple_byte           34    18 (average)
 14940                           ;	Chosen strategy is simple_byte
 14941  000E2A  0A00               	xorlw	0	; case 0
 14942  000E2C  B4D8               	btfsc	status,2,c
 14943  000E2E  D6CD               	goto	i2l60
 14944  000E30  0A01               	xorlw	1	; case 1
 14945  000E32  B4D8               	btfsc	status,2,c
 14946  000E34  D70D               	goto	i2l65
 14947  000E36  0A03               	xorlw	3	; case 2
 14948  000E38  B4D8               	btfsc	status,2,c
 14949  000E3A  D744               	goto	i2l6834
 14950  000E3C  0A01               	xorlw	1	; case 3
 14951  000E3E  B4D8               	btfsc	status,2,c
 14952  000E40  D76C               	goto	i2l82
 14953  000E42  0A07               	xorlw	7	; case 4
 14954  000E44  B4D8               	btfsc	status,2,c
 14955  000E46  D7E6               	goto	i2l6900
 14956  000E48  0A01               	xorlw	1	; case 5
 14957  000E4A  B4D8               	btfsc	status,2,c
 14958  000E4C  D7AA               	goto	i2l89
 14959  000E4E  0A03               	xorlw	3	; case 6
 14960  000E50  B4D8               	btfsc	status,2,c
 14961  000E52  D7B4               	goto	i2l6882
 14962  000E54  0A01               	xorlw	1	; case 7
 14963  000E56  B4D8               	btfsc	status,2,c
 14964  000E58  D7DD               	goto	i2l6900
 14965  000E5A  0A0F               	xorlw	15	; case 8
 14966  000E5C  B4D8               	btfsc	status,2,c
 14967  000E5E  D7B2               	goto	i2l6886
 14968  000E60  0A02               	xorlw	2	; case 10
 14969  000E62  B4D8               	btfsc	status,2,c
 14970  000E64  D6F9               	goto	i2l66
 14971  000E66  0A01               	xorlw	1	; case 11
 14972  000E68  B4D8               	btfsc	status,2,c
 14973  000E6A  D70D               	goto	i2l71
 14974  000E6C  D7D7               	goto	i2l6902
 14975  000E6E                     __end_of_I2C1_ISR:
 14976                           	opt stack 0
 14977                           tosu	equ	0xFFF
 14978                           tosh	equ	0xFFE
 14979                           tosl	equ	0xFFD
 14980                           pclatu	equ	0xFFB
 14981                           pclath	equ	0xFFA
 14982                           tblptru	equ	0xFF8
 14983                           tblptrh	equ	0xFF7
 14984                           tblptrl	equ	0xFF6
 14985                           tablat	equ	0xFF5
 14986                           prodh	equ	0xFF4
 14987                           prodl	equ	0xFF3
 14988                           intcon	equ	0xFF2
 14989                           intcon2	equ	0xFF1
 14990                           indf0	equ	0xFEF
 14991                           postinc0	equ	0xFEE
 14992                           fsr0h	equ	0xFEA
 14993                           fsr0l	equ	0xFE9
 14994                           wreg	equ	0xFE8
 14995                           fsr1h	equ	0xFE2
 14996                           fsr1l	equ	0xFE1
 14997                           indf2	equ	0xFDF
 14998                           postinc2	equ	0xFDE
 14999                           postdec2	equ	0xFDD
 15000                           plusw2	equ	0xFDB
 15001                           fsr2h	equ	0xFDA
 15002                           fsr2l	equ	0xFD9
 15003                           status	equ	0xFD8
 15004                           
 15005 ;; *************** function _I2C1_Stop *****************
 15006 ;; Defined at:
 15007 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 15008 ;; Parameters:    Size  Location     Type
 15009 ;;  completion_c    1    wreg     enum E8678
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;  completion_c    1    2[COMRAM] enum E8678
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  1    wreg      void 
 15014 ;; Registers used:
 15015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15016 ;; Tracked objects:
 15017 ;;		On entry : 0/0
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15021 ;;      Params:         0       0       0       0       0       0       0
 15022 ;;      Locals:         1       0       0       0       0       0       0
 15023 ;;      Temps:          2       0       0       0       0       0       0
 15024 ;;      Totals:         3       0       0       0       0       0       0
 15025 ;;Total ram usage:        3 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; This function calls:
 15028 ;;		Nothing
 15029 ;; This function is called by:
 15030 ;;		_I2C1_ISR
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           	psect	text74
 15035  002D40                     __ptext74:
 15036                           	opt stack 0
 15037  002D40                     _I2C1_Stop:
 15038                           	opt stack 22
 15039                           
 15040                           ;incstack = 0
 15041                           ;I2C1_Stop@completion_code stored from wreg
 15042  002D40  6E03               	movwf	I2C1_Stop@completion_code,c
 15043                           
 15044                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 15045  002D42  84C5               	bsf	4037,2,c	;volatile
 15046                           
 15047                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 15048  002D44  0100               	movlb	0	; () banked
 15049  002D46  EE20 F003          	lfsr	2,3
 15050  002D4A  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15051  002D4C  26D9               	addwf	fsr2l,f,c
 15052  002D4E  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15053  002D50  22DA               	addwfc	fsr2h,f,c
 15054  002D52  50DE               	movf	postinc2,w,c
 15055  002D54  10DE               	iorwf	postinc2,w,c
 15056  002D56  B4D8               	btfsc	status,2,c
 15057  002D58  D011               	goto	i2l6436
 15058                           
 15059                           ; BSR set to: 0
 15060                           ;i2c1.c: 541: {
 15061                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 15062  002D5A  0100               	movlb	0	; () banked
 15063  002D5C  EE20 F003          	lfsr	2,3
 15064  002D60  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15065  002D62  26D9               	addwf	fsr2l,f,c
 15066  002D64  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15067  002D66  22DA               	addwfc	fsr2h,f,c
 15068  002D68  CFDE F001          	movff	postinc2,??_I2C1_Stop
 15069  002D6C  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 15070  002D70  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 15071  002D74  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 15072  002D78  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 15073  002D7C                     i2l6436:
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;i2c1.c: 544: }
 15077                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 15078  002D7C  0E00               	movlw	0
 15079  002D7E  6E38               	movwf	_i2c1_state,c
 15080                           
 15081                           ; BSR set to: 0
 15082  002D80  0012               	return		;funcret
 15083  002D82                     __end_of_I2C1_Stop:
 15084                           	opt stack 0
 15085                           tosu	equ	0xFFF
 15086                           tosh	equ	0xFFE
 15087                           tosl	equ	0xFFD
 15088                           pclatu	equ	0xFFB
 15089                           pclath	equ	0xFFA
 15090                           tblptru	equ	0xFF8
 15091                           tblptrh	equ	0xFF7
 15092                           tblptrl	equ	0xFF6
 15093                           tablat	equ	0xFF5
 15094                           prodh	equ	0xFF4
 15095                           prodl	equ	0xFF3
 15096                           intcon	equ	0xFF2
 15097                           intcon2	equ	0xFF1
 15098                           indf0	equ	0xFEF
 15099                           postinc0	equ	0xFEE
 15100                           fsr0h	equ	0xFEA
 15101                           fsr0l	equ	0xFE9
 15102                           wreg	equ	0xFE8
 15103                           fsr1h	equ	0xFE2
 15104                           fsr1l	equ	0xFE1
 15105                           indf2	equ	0xFDF
 15106                           postinc2	equ	0xFDE
 15107                           postdec2	equ	0xFDD
 15108                           plusw2	equ	0xFDB
 15109                           fsr2h	equ	0xFDA
 15110                           fsr2l	equ	0xFD9
 15111                           status	equ	0xFD8
 15112                           
 15113 ;; *************** function _I2C1_FunctionComplete *****************
 15114 ;; Defined at:
 15115 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 15116 ;; Parameters:    Size  Location     Type
 15117 ;;		None
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;		None
 15120 ;; Return value:  Size  Location     Type
 15121 ;;                  1    wreg      void 
 15122 ;; Registers used:
 15123 ;;		wreg, status,2, status,0
 15124 ;; Tracked objects:
 15125 ;;		On entry : 0/0
 15126 ;;		On exit  : 0/0
 15127 ;;		Unchanged: 0/0
 15128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15129 ;;      Params:         0       0       0       0       0       0       0
 15130 ;;      Locals:         0       0       0       0       0       0       0
 15131 ;;      Temps:          0       0       0       0       0       0       0
 15132 ;;      Totals:         0       0       0       0       0       0       0
 15133 ;;Total ram usage:        0 bytes
 15134 ;; Hardware stack levels used:    1
 15135 ;; This function calls:
 15136 ;;		Nothing
 15137 ;; This function is called by:
 15138 ;;		_I2C1_ISR
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           	psect	text75
 15143  002FD2                     __ptext75:
 15144                           	opt stack 0
 15145  002FD2                     _I2C1_FunctionComplete:
 15146                           	opt stack 22
 15147                           
 15148                           ;i2c1.c: 520: p_i2c1_trb_current++;
 15149                           
 15150                           ; BSR set to: 0
 15151                           ;incstack = 0
 15152  002FD2  0E05               	movlw	5
 15153  002FD4  262D               	addwf	_p_i2c1_trb_current,f,c
 15154  002FD6  0E00               	movlw	0
 15155  002FD8  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 15156                           
 15157                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 15158  002FDA  0100               	movlb	0	; () banked
 15159  002FDC  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 15160  002FDE  A0D8               	btfss	status,0,c
 15161  002FE0  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 15162  002FE2  0100               	movlb	0	; () banked
 15163  002FE4  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 15164  002FE6  0100               	movlb	0	; () banked
 15165  002FE8  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 15166  002FEA  A4D8               	btfss	status,2,c
 15167  002FEC  D003               	goto	i2l6442
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;i2c1.c: 524: {
 15171                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 15172  002FEE  0E04               	movlw	4
 15173  002FF0  6E38               	movwf	_i2c1_state,c
 15174                           
 15175                           ;i2c1.c: 526: }
 15176  002FF2  0012               	return	
 15177  002FF4                     i2l6442:
 15178                           
 15179                           ; BSR set to: 0
 15180                           ;i2c1.c: 527: else
 15181                           ;i2c1.c: 528: {
 15182                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 15183  002FF4  0E01               	movlw	1
 15184  002FF6  6E38               	movwf	_i2c1_state,c
 15185  002FF8  0012               	return	
 15186  002FFA                     __end_of_I2C1_FunctionComplete:
 15187                           	opt stack 0
 15188                           tosu	equ	0xFFF
 15189                           tosh	equ	0xFFE
 15190                           tosl	equ	0xFFD
 15191                           pclatu	equ	0xFFB
 15192                           pclath	equ	0xFFA
 15193                           tblptru	equ	0xFF8
 15194                           tblptrh	equ	0xFF7
 15195                           tblptrl	equ	0xFF6
 15196                           tablat	equ	0xFF5
 15197                           prodh	equ	0xFF4
 15198                           prodl	equ	0xFF3
 15199                           intcon	equ	0xFF2
 15200                           intcon2	equ	0xFF1
 15201                           indf0	equ	0xFEF
 15202                           postinc0	equ	0xFEE
 15203                           fsr0h	equ	0xFEA
 15204                           fsr0l	equ	0xFE9
 15205                           wreg	equ	0xFE8
 15206                           fsr1h	equ	0xFE2
 15207                           fsr1l	equ	0xFE1
 15208                           indf2	equ	0xFDF
 15209                           postinc2	equ	0xFDE
 15210                           postdec2	equ	0xFDD
 15211                           plusw2	equ	0xFDB
 15212                           fsr2h	equ	0xFDA
 15213                           fsr2l	equ	0xFD9
 15214                           status	equ	0xFD8
 15215                           
 15216 ;; *************** function _I2C1_BusCollisionISR *****************
 15217 ;; Defined at:
 15218 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;		None
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;		None
 15223 ;; Return value:  Size  Location     Type
 15224 ;;                  1    wreg      void 
 15225 ;; Registers used:
 15226 ;;		None
 15227 ;; Tracked objects:
 15228 ;;		On entry : 0/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15232 ;;      Params:         0       0       0       0       0       0       0
 15233 ;;      Locals:         0       0       0       0       0       0       0
 15234 ;;      Temps:          0       0       0       0       0       0       0
 15235 ;;      Totals:         0       0       0       0       0       0       0
 15236 ;;Total ram usage:        0 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; This function calls:
 15239 ;;		Nothing
 15240 ;; This function is called by:
 15241 ;;		_INTERRUPT_InterruptManager
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           	psect	text76
 15246  003196                     __ptext76:
 15247                           	opt stack 0
 15248  003196                     _I2C1_BusCollisionISR:
 15249                           	opt stack 23
 15250                           
 15251                           ; BSR set to: 0
 15252                           ;incstack = 0
 15253  003196  0012               	return		;funcret
 15254  003198                     __end_of_I2C1_BusCollisionISR:
 15255                           	opt stack 0
 15256                           tosu	equ	0xFFF
 15257                           tosh	equ	0xFFE
 15258                           tosl	equ	0xFFD
 15259                           pclatu	equ	0xFFB
 15260                           pclath	equ	0xFFA
 15261                           tblptru	equ	0xFF8
 15262                           tblptrh	equ	0xFF7
 15263                           tblptrl	equ	0xFF6
 15264                           tablat	equ	0xFF5
 15265                           prodh	equ	0xFF4
 15266                           prodl	equ	0xFF3
 15267                           intcon	equ	0xFF2
 15268                           intcon2	equ	0xFF1
 15269                           indf0	equ	0xFEF
 15270                           postinc0	equ	0xFEE
 15271                           fsr0h	equ	0xFEA
 15272                           fsr0l	equ	0xFE9
 15273                           wreg	equ	0xFE8
 15274                           fsr1h	equ	0xFE2
 15275                           fsr1l	equ	0xFE1
 15276                           indf2	equ	0xFDF
 15277                           postinc2	equ	0xFDE
 15278                           postdec2	equ	0xFDD
 15279                           plusw2	equ	0xFDB
 15280                           fsr2h	equ	0xFDA
 15281                           fsr2l	equ	0xFD9
 15282                           status	equ	0xFD8
 15283                           
 15284 ;; *************** function _EUSART1_Transmit_ISR *****************
 15285 ;; Defined at:
 15286 ;;		line 150 in file "UART.c"
 15287 ;; Parameters:    Size  Location     Type
 15288 ;;		None
 15289 ;; Auto vars:     Size  Location     Type
 15290 ;;		None
 15291 ;; Return value:  Size  Location     Type
 15292 ;;                  1    wreg      void 
 15293 ;; Registers used:
 15294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15295 ;; Tracked objects:
 15296 ;;		On entry : 0/0
 15297 ;;		On exit  : 0/0
 15298 ;;		Unchanged: 0/0
 15299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15300 ;;      Params:         0       0       0       0       0       0       0
 15301 ;;      Locals:         0       0       0       0       0       0       0
 15302 ;;      Temps:          0       0       0       0       0       0       0
 15303 ;;      Totals:         0       0       0       0       0       0       0
 15304 ;;Total ram usage:        0 bytes
 15305 ;; Hardware stack levels used:    1
 15306 ;; Hardware stack levels required when called:    2
 15307 ;; This function calls:
 15308 ;;		i2_UART_buff_get
 15309 ;;		i2_UART_buff_size
 15310 ;; This function is called by:
 15311 ;;		_INTERRUPT_InterruptManager
 15312 ;; This function uses a non-reentrant model
 15313 ;;
 15314                           
 15315                           	psect	text77
 15316  002EA0                     __ptext77:
 15317                           	opt stack 0
 15318  002EA0                     _EUSART1_Transmit_ISR:
 15319                           	opt stack 21
 15320                           
 15321                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 15322                           
 15323                           ;incstack = 0
 15324  002EA0  0E00               	movlw	low _output_buffer
 15325  002EA2  6E01               	movwf	i2UART_buff_size@_this,c
 15326  002EA4  0E05               	movlw	high _output_buffer
 15327  002EA6  6E02               	movwf	i2UART_buff_size@_this+1,c
 15328  002EA8  EC7D  F018         	call	i2_UART_buff_size	;wreg free
 15329  002EAC  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 15330  002EAE  D00D               	goto	i2l5260
 15331  002EB0  5002               	movf	?i2_UART_buff_size+1,w,c
 15332  002EB2  E103               	bnz	i2u538_40
 15333  002EB4  0401               	decf	?i2_UART_buff_size,w,c
 15334  002EB6  A0D8               	btfss	status,0,c
 15335  002EB8  D008               	goto	i2l5260
 15336  002EBA                     i2u538_40:
 15337                           
 15338                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 15339  002EBA  0E00               	movlw	low _output_buffer
 15340  002EBC  6E07               	movwf	i2UART_buff_get@_this,c
 15341  002EBE  0E05               	movlw	high _output_buffer
 15342  002EC0  6E08               	movwf	i2UART_buff_get@_this+1,c
 15343  002EC2  EC79  F012         	call	i2_UART_buff_get	;wreg free
 15344  002EC6  6EAD               	movwf	4013,c	;volatile
 15345                           
 15346                           ;UART.c: 154: } else {
 15347  002EC8  0012               	return	
 15348  002ECA                     i2l5260:
 15349                           
 15350                           ;UART.c: 155: Transmit_stall = 1;
 15351  002ECA  0E01               	movlw	1
 15352  002ECC  6E44               	movwf	_Transmit_stall,c
 15353                           
 15354                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 15355  002ECE  989D               	bcf	3997,4,c	;volatile
 15356  002ED0  0012               	return	
 15357  002ED2                     __end_of_EUSART1_Transmit_ISR:
 15358                           	opt stack 0
 15359                           tosu	equ	0xFFF
 15360                           tosh	equ	0xFFE
 15361                           tosl	equ	0xFFD
 15362                           pclatu	equ	0xFFB
 15363                           pclath	equ	0xFFA
 15364                           tblptru	equ	0xFF8
 15365                           tblptrh	equ	0xFF7
 15366                           tblptrl	equ	0xFF6
 15367                           tablat	equ	0xFF5
 15368                           prodh	equ	0xFF4
 15369                           prodl	equ	0xFF3
 15370                           intcon	equ	0xFF2
 15371                           intcon2	equ	0xFF1
 15372                           indf0	equ	0xFEF
 15373                           postinc0	equ	0xFEE
 15374                           fsr0h	equ	0xFEA
 15375                           fsr0l	equ	0xFE9
 15376                           wreg	equ	0xFE8
 15377                           fsr1h	equ	0xFE2
 15378                           fsr1l	equ	0xFE1
 15379                           indf2	equ	0xFDF
 15380                           postinc2	equ	0xFDE
 15381                           postdec2	equ	0xFDD
 15382                           plusw2	equ	0xFDB
 15383                           fsr2h	equ	0xFDA
 15384                           fsr2l	equ	0xFD9
 15385                           status	equ	0xFD8
 15386                           
 15387 ;; *************** function i2_UART_buff_size *****************
 15388 ;; Defined at:
 15389 ;;		line 102 in file "UART.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 15392 ;;		 -> output_buffer(206), input_buffer(206), 
 15393 ;; Auto vars:     Size  Location     Type
 15394 ;;		None
 15395 ;; Return value:  Size  Location     Type
 15396 ;;                  2    0[COMRAM] int 
 15397 ;; Registers used:
 15398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15399 ;; Tracked objects:
 15400 ;;		On entry : 0/0
 15401 ;;		On exit  : 0/0
 15402 ;;		Unchanged: 0/0
 15403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15404 ;;      Params:         2       0       0       0       0       0       0
 15405 ;;      Locals:         0       0       0       0       0       0       0
 15406 ;;      Temps:          0       0       0       0       0       0       0
 15407 ;;      Totals:         2       0       0       0       0       0       0
 15408 ;;Total ram usage:        2 bytes
 15409 ;; Hardware stack levels used:    1
 15410 ;; This function calls:
 15411 ;;		Nothing
 15412 ;; This function is called by:
 15413 ;;		_EUSART1_Transmit_ISR
 15414 ;; This function uses a non-reentrant model
 15415 ;;
 15416                           
 15417                           	psect	text78
 15418  0030FA                     __ptext78:
 15419                           	opt stack 0
 15420  0030FA                     i2_UART_buff_size:
 15421                           	opt stack 22
 15422                           
 15423                           ;UART.c: 103: return (_this->count);
 15424                           
 15425                           ;incstack = 0
 15426  0030FA  EE20 F0CC          	lfsr	2,204
 15427  0030FE  5001               	movf	i2UART_buff_size@_this,w,c
 15428  003100  26D9               	addwf	fsr2l,f,c
 15429  003102  5002               	movf	i2UART_buff_size@_this+1,w,c
 15430  003104  22DA               	addwfc	fsr2h,f,c
 15431  003106  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 15432  00310A  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 15433  00310E  0012               	return	
 15434  003110                     __end_ofi2_UART_buff_size:
 15435                           	opt stack 0
 15436                           tosu	equ	0xFFF
 15437                           tosh	equ	0xFFE
 15438                           tosl	equ	0xFFD
 15439                           pclatu	equ	0xFFB
 15440                           pclath	equ	0xFFA
 15441                           tblptru	equ	0xFF8
 15442                           tblptrh	equ	0xFF7
 15443                           tblptrl	equ	0xFF6
 15444                           tablat	equ	0xFF5
 15445                           prodh	equ	0xFF4
 15446                           prodl	equ	0xFF3
 15447                           intcon	equ	0xFF2
 15448                           intcon2	equ	0xFF1
 15449                           indf0	equ	0xFEF
 15450                           postinc0	equ	0xFEE
 15451                           fsr0h	equ	0xFEA
 15452                           fsr0l	equ	0xFE9
 15453                           wreg	equ	0xFE8
 15454                           fsr1h	equ	0xFE2
 15455                           fsr1l	equ	0xFE1
 15456                           indf2	equ	0xFDF
 15457                           postinc2	equ	0xFDE
 15458                           postdec2	equ	0xFDD
 15459                           plusw2	equ	0xFDB
 15460                           fsr2h	equ	0xFDA
 15461                           fsr2l	equ	0xFD9
 15462                           status	equ	0xFD8
 15463                           
 15464 ;; *************** function i2_UART_buff_get *****************
 15465 ;; Defined at:
 15466 ;;		line 81 in file "UART.c"
 15467 ;; Parameters:    Size  Location     Type
 15468 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15469 ;;		 -> output_buffer(206), input_buffer(206), 
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      unsigned char 
 15474 ;; Registers used:
 15475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 0/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15481 ;;      Params:         2       0       0       0       0       0       0
 15482 ;;      Locals:         1       0       0       0       0       0       0
 15483 ;;      Temps:          2       0       0       0       0       0       0
 15484 ;;      Totals:         5       0       0       0       0       0       0
 15485 ;;Total ram usage:        5 bytes
 15486 ;; Hardware stack levels used:    1
 15487 ;; Hardware stack levels required when called:    1
 15488 ;; This function calls:
 15489 ;;		i2_UART_buff_modulo_inc
 15490 ;; This function is called by:
 15491 ;;		_EUSART1_Transmit_ISR
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text79
 15496  0024F2                     __ptext79:
 15497                           	opt stack 0
 15498  0024F2                     i2_UART_buff_get:
 15499                           	opt stack 21
 15500                           
 15501                           ;UART.c: 82: unsigned char c;
 15502                           ;UART.c: 83: if (_this->count > 0) {
 15503                           
 15504                           ;incstack = 0
 15505  0024F2  EE20 F0CC          	lfsr	2,204
 15506  0024F6  5007               	movf	i2UART_buff_get@_this,w,c
 15507  0024F8  26D9               	addwf	fsr2l,f,c
 15508  0024FA  5008               	movf	i2UART_buff_get@_this+1,w,c
 15509  0024FC  22DA               	addwfc	fsr2h,f,c
 15510  0024FE  0E01               	movlw	1
 15511  002500  BEDB               	btfsc	plusw2,7,c
 15512  002502  D03C               	goto	i2l5114
 15513  002504  0E01               	movlw	1
 15514  002506  50DB               	movf	plusw2,w,c
 15515  002508  E103               	bnz	i2u518_40
 15516  00250A  04DE               	decf	postinc2,w,c
 15517  00250C  A0D8               	btfss	status,0,c
 15518  00250E  D036               	goto	i2l5114
 15519  002510                     i2u518_40:
 15520                           
 15521                           ;UART.c: 84: c = _this->buf[_this->tail];
 15522  002510  EE20 F0CA          	lfsr	2,202
 15523  002514  5007               	movf	i2UART_buff_get@_this,w,c
 15524  002516  26D9               	addwf	fsr2l,f,c
 15525  002518  5008               	movf	i2UART_buff_get@_this+1,w,c
 15526  00251A  22DA               	addwfc	fsr2h,f,c
 15527  00251C  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 15528  002520  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 15529  002524  5009               	movf	??i2_UART_buff_get,w,c
 15530  002526  2407               	addwf	i2UART_buff_get@_this,w,c
 15531  002528  6ED9               	movwf	fsr2l,c
 15532  00252A  500A               	movf	??i2_UART_buff_get+1,w,c
 15533  00252C  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 15534  00252E  6EDA               	movwf	fsr2h,c
 15535  002530  50DF               	movf	indf2,w,c
 15536  002532  6E0B               	movwf	i2UART_buff_get@c,c
 15537                           
 15538                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15539  002534  EE20 F0CA          	lfsr	2,202
 15540  002538  5007               	movf	i2UART_buff_get@_this,w,c
 15541  00253A  26D9               	addwf	fsr2l,f,c
 15542  00253C  5008               	movf	i2UART_buff_get@_this+1,w,c
 15543  00253E  22DA               	addwfc	fsr2h,f,c
 15544  002540  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15545  002544  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15546  002548  0E00               	movlw	0
 15547  00254A  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15548  00254C  0EC8               	movlw	200
 15549  00254E  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15550  002550  ECC0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15551  002554  EE20 F0CA          	lfsr	2,202
 15552  002558  5007               	movf	i2UART_buff_get@_this,w,c
 15553  00255A  26D9               	addwf	fsr2l,f,c
 15554  00255C  5008               	movf	i2UART_buff_get@_this+1,w,c
 15555  00255E  22DA               	addwfc	fsr2h,f,c
 15556  002560  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15557  002564  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15558                           
 15559                           ;UART.c: 86: --_this->count;
 15560  002568  EE20 F0CC          	lfsr	2,204
 15561  00256C  5007               	movf	i2UART_buff_get@_this,w,c
 15562  00256E  26D9               	addwf	fsr2l,f,c
 15563  002570  5008               	movf	i2UART_buff_get@_this+1,w,c
 15564  002572  22DA               	addwfc	fsr2h,f,c
 15565  002574  06DE               	decf	postinc2,f,c
 15566  002576  0E00               	movlw	0
 15567  002578  5ADD               	subwfb	postdec2,f,c
 15568                           
 15569                           ;UART.c: 87: } else {
 15570  00257A  D002               	goto	i2l1165
 15571  00257C                     i2l5114:
 15572                           
 15573                           ;UART.c: 88: c = 0;
 15574  00257C  0E00               	movlw	0
 15575  00257E  6E0B               	movwf	i2UART_buff_get@c,c
 15576  002580                     i2l1165:
 15577                           
 15578                           ;UART.c: 89: }
 15579                           ;UART.c: 90: return (c);
 15580  002580  500B               	movf	i2UART_buff_get@c,w,c
 15581  002582  0012               	return	
 15582  002584                     __end_ofi2_UART_buff_get:
 15583                           	opt stack 0
 15584                           tosu	equ	0xFFF
 15585                           tosh	equ	0xFFE
 15586                           tosl	equ	0xFFD
 15587                           pclatu	equ	0xFFB
 15588                           pclath	equ	0xFFA
 15589                           tblptru	equ	0xFF8
 15590                           tblptrh	equ	0xFF7
 15591                           tblptrl	equ	0xFF6
 15592                           tablat	equ	0xFF5
 15593                           prodh	equ	0xFF4
 15594                           prodl	equ	0xFF3
 15595                           intcon	equ	0xFF2
 15596                           intcon2	equ	0xFF1
 15597                           indf0	equ	0xFEF
 15598                           postinc0	equ	0xFEE
 15599                           fsr0h	equ	0xFEA
 15600                           fsr0l	equ	0xFE9
 15601                           wreg	equ	0xFE8
 15602                           fsr1h	equ	0xFE2
 15603                           fsr1l	equ	0xFE1
 15604                           indf2	equ	0xFDF
 15605                           postinc2	equ	0xFDE
 15606                           postdec2	equ	0xFDD
 15607                           plusw2	equ	0xFDB
 15608                           fsr2h	equ	0xFDA
 15609                           fsr2l	equ	0xFD9
 15610                           status	equ	0xFD8
 15611                           
 15612 ;; *************** function _EUSART1_Receive_ISR *****************
 15613 ;; Defined at:
 15614 ;;		line 139 in file "UART.c"
 15615 ;; Parameters:    Size  Location     Type
 15616 ;;		None
 15617 ;; Auto vars:     Size  Location     Type
 15618 ;;  data            1   11[COMRAM] unsigned char 
 15619 ;; Return value:  Size  Location     Type
 15620 ;;                  1    wreg      void 
 15621 ;; Registers used:
 15622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15623 ;; Tracked objects:
 15624 ;;		On entry : 0/0
 15625 ;;		On exit  : 0/0
 15626 ;;		Unchanged: 0/0
 15627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15628 ;;      Params:         0       0       0       0       0       0       0
 15629 ;;      Locals:         1       0       0       0       0       0       0
 15630 ;;      Temps:          0       0       0       0       0       0       0
 15631 ;;      Totals:         1       0       0       0       0       0       0
 15632 ;;Total ram usage:        1 bytes
 15633 ;; Hardware stack levels used:    1
 15634 ;; Hardware stack levels required when called:    2
 15635 ;; This function calls:
 15636 ;;		i2_UART_buff_put
 15637 ;; This function is called by:
 15638 ;;		_INTERRUPT_InterruptManager
 15639 ;; This function uses a non-reentrant model
 15640 ;;
 15641                           
 15642                           	psect	text80
 15643  00307C                     __ptext80:
 15644                           	opt stack 0
 15645  00307C                     _EUSART1_Receive_ISR:
 15646                           	opt stack 21
 15647                           
 15648                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 15649                           
 15650                           ;incstack = 0
 15651  00307C  A2AB               	btfss	4011,1,c	;volatile
 15652  00307E  D002               	goto	i2l1196
 15653                           
 15654                           ;UART.c: 143: RC1STAbits.CREN = 0;
 15655  003080  98AB               	bcf	4011,4,c	;volatile
 15656                           
 15657                           ;UART.c: 144: RC1STAbits.CREN = 1;
 15658  003082  88AB               	bsf	4011,4,c	;volatile
 15659  003084                     i2l1196:
 15660                           
 15661                           ;UART.c: 145: }
 15662                           ;UART.c: 146: unsigned char data = RCREG1;
 15663  003084  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 15664                           
 15665                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 15666  003088  0E00               	movlw	low _input_buffer
 15667  00308A  6E07               	movwf	i2UART_buff_put@_this,c
 15668  00308C  0E04               	movlw	high _input_buffer
 15669  00308E  6E08               	movwf	i2UART_buff_put@_this+1,c
 15670  003090  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 15671  003094  ECA6  F00C         	call	i2_UART_buff_put	;wreg free
 15672  003098  0012               	return		;funcret
 15673  00309A                     __end_of_EUSART1_Receive_ISR:
 15674                           	opt stack 0
 15675                           tosu	equ	0xFFF
 15676                           tosh	equ	0xFFE
 15677                           tosl	equ	0xFFD
 15678                           pclatu	equ	0xFFB
 15679                           pclath	equ	0xFFA
 15680                           tblptru	equ	0xFF8
 15681                           tblptrh	equ	0xFF7
 15682                           tblptrl	equ	0xFF6
 15683                           tablat	equ	0xFF5
 15684                           prodh	equ	0xFF4
 15685                           prodl	equ	0xFF3
 15686                           intcon	equ	0xFF2
 15687                           intcon2	equ	0xFF1
 15688                           indf0	equ	0xFEF
 15689                           postinc0	equ	0xFEE
 15690                           fsr0h	equ	0xFEA
 15691                           fsr0l	equ	0xFE9
 15692                           wreg	equ	0xFE8
 15693                           fsr1h	equ	0xFE2
 15694                           fsr1l	equ	0xFE1
 15695                           indf2	equ	0xFDF
 15696                           postinc2	equ	0xFDE
 15697                           postdec2	equ	0xFDD
 15698                           plusw2	equ	0xFDB
 15699                           fsr2h	equ	0xFDA
 15700                           fsr2l	equ	0xFD9
 15701                           status	equ	0xFD8
 15702                           
 15703 ;; *************** function i2_UART_buff_put *****************
 15704 ;; Defined at:
 15705 ;;		line 68 in file "UART.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15708 ;;		 -> output_buffer(206), input_buffer(206), 
 15709 ;;  c               1    8[COMRAM] const unsigned char 
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;		None
 15712 ;; Return value:  Size  Location     Type
 15713 ;;                  1    wreg      void 
 15714 ;; Registers used:
 15715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15716 ;; Tracked objects:
 15717 ;;		On entry : 0/0
 15718 ;;		On exit  : 0/0
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15721 ;;      Params:         3       0       0       0       0       0       0
 15722 ;;      Locals:         0       0       0       0       0       0       0
 15723 ;;      Temps:          2       0       0       0       0       0       0
 15724 ;;      Totals:         5       0       0       0       0       0       0
 15725 ;;Total ram usage:        5 bytes
 15726 ;; Hardware stack levels used:    1
 15727 ;; Hardware stack levels required when called:    1
 15728 ;; This function calls:
 15729 ;;		i2_UART_buff_modulo_inc
 15730 ;; This function is called by:
 15731 ;;		_EUSART1_Receive_ISR
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text81
 15736  00194C                     __ptext81:
 15737                           	opt stack 0
 15738  00194C                     i2_UART_buff_put:
 15739                           	opt stack 21
 15740                           
 15741                           ;UART.c: 69: if (_this->count < 200) {
 15742                           
 15743                           ;incstack = 0
 15744  00194C  EE20 F0CC          	lfsr	2,204
 15745  001950  5007               	movf	i2UART_buff_put@_this,w,c
 15746  001952  26D9               	addwf	fsr2l,f,c
 15747  001954  5008               	movf	i2UART_buff_put@_this+1,w,c
 15748  001956  22DA               	addwfc	fsr2h,f,c
 15749  001958  0E01               	movlw	1
 15750  00195A  BEDB               	btfsc	plusw2,7,c
 15751  00195C  D007               	goto	i2l5094
 15752  00195E  0E01               	movlw	1
 15753  001960  50DB               	movf	plusw2,w,c
 15754  001962  E13A               	bnz	i2l5100
 15755  001964  0EC8               	movlw	200
 15756  001966  5CDE               	subwf	postinc2,w,c
 15757  001968  B0D8               	btfsc	status,0,c
 15758  00196A  D036               	goto	i2l5100
 15759  00196C                     i2l5094:
 15760                           
 15761                           ;UART.c: 70: _this->buf[_this->head] = c;
 15762  00196C  EE20 F0C8          	lfsr	2,200
 15763  001970  5007               	movf	i2UART_buff_put@_this,w,c
 15764  001972  26D9               	addwf	fsr2l,f,c
 15765  001974  5008               	movf	i2UART_buff_put@_this+1,w,c
 15766  001976  22DA               	addwfc	fsr2h,f,c
 15767  001978  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 15768  00197C  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 15769  001980  500A               	movf	??i2_UART_buff_put,w,c
 15770  001982  2407               	addwf	i2UART_buff_put@_this,w,c
 15771  001984  6ED9               	movwf	fsr2l,c
 15772  001986  500B               	movf	??i2_UART_buff_put+1,w,c
 15773  001988  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 15774  00198A  6EDA               	movwf	fsr2h,c
 15775  00198C  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 15776                           
 15777                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 15778  001990  EE20 F0C8          	lfsr	2,200
 15779  001994  5007               	movf	i2UART_buff_put@_this,w,c
 15780  001996  26D9               	addwf	fsr2l,f,c
 15781  001998  5008               	movf	i2UART_buff_put@_this+1,w,c
 15782  00199A  22DA               	addwfc	fsr2h,f,c
 15783  00199C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15784  0019A0  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15785  0019A4  0E00               	movlw	0
 15786  0019A6  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15787  0019A8  0EC8               	movlw	200
 15788  0019AA  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15789  0019AC  ECC0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15790  0019B0  EE20 F0C8          	lfsr	2,200
 15791  0019B4  5007               	movf	i2UART_buff_put@_this,w,c
 15792  0019B6  26D9               	addwf	fsr2l,f,c
 15793  0019B8  5008               	movf	i2UART_buff_put@_this+1,w,c
 15794  0019BA  22DA               	addwfc	fsr2h,f,c
 15795  0019BC  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15796  0019C0  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15797                           
 15798                           ;UART.c: 72: ++_this->count;
 15799  0019C4  EE20 F0CC          	lfsr	2,204
 15800  0019C8  5007               	movf	i2UART_buff_put@_this,w,c
 15801  0019CA  26D9               	addwf	fsr2l,f,c
 15802  0019CC  5008               	movf	i2UART_buff_put@_this+1,w,c
 15803  0019CE  22DA               	addwfc	fsr2h,f,c
 15804  0019D0  2ADE               	incf	postinc2,f,c
 15805  0019D2  0E00               	movlw	0
 15806  0019D4  22DD               	addwfc	postdec2,f,c
 15807                           
 15808                           ;UART.c: 73: } else {
 15809  0019D6  0012               	return	
 15810  0019D8                     i2l5100:
 15811                           
 15812                           ;UART.c: 74: _this->buf[_this->head] = c;
 15813  0019D8  EE20 F0C8          	lfsr	2,200
 15814  0019DC  5007               	movf	i2UART_buff_put@_this,w,c
 15815  0019DE  26D9               	addwf	fsr2l,f,c
 15816  0019E0  5008               	movf	i2UART_buff_put@_this+1,w,c
 15817  0019E2  22DA               	addwfc	fsr2h,f,c
 15818  0019E4  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 15819  0019E8  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 15820  0019EC  500A               	movf	??i2_UART_buff_put,w,c
 15821  0019EE  2407               	addwf	i2UART_buff_put@_this,w,c
 15822  0019F0  6ED9               	movwf	fsr2l,c
 15823  0019F2  500B               	movf	??i2_UART_buff_put+1,w,c
 15824  0019F4  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 15825  0019F6  6EDA               	movwf	fsr2h,c
 15826  0019F8  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 15827                           
 15828                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 15829  0019FC  EE20 F0C8          	lfsr	2,200
 15830  001A00  5007               	movf	i2UART_buff_put@_this,w,c
 15831  001A02  26D9               	addwf	fsr2l,f,c
 15832  001A04  5008               	movf	i2UART_buff_put@_this+1,w,c
 15833  001A06  22DA               	addwfc	fsr2h,f,c
 15834  001A08  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15835  001A0C  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15836  001A10  0E00               	movlw	0
 15837  001A12  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15838  001A14  0EC8               	movlw	200
 15839  001A16  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15840  001A18  ECC0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15841  001A1C  EE20 F0C8          	lfsr	2,200
 15842  001A20  5007               	movf	i2UART_buff_put@_this,w,c
 15843  001A22  26D9               	addwf	fsr2l,f,c
 15844  001A24  5008               	movf	i2UART_buff_put@_this+1,w,c
 15845  001A26  22DA               	addwfc	fsr2h,f,c
 15846  001A28  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15847  001A2C  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15848                           
 15849                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15850  001A30  EE20 F0CA          	lfsr	2,202
 15851  001A34  5007               	movf	i2UART_buff_put@_this,w,c
 15852  001A36  26D9               	addwf	fsr2l,f,c
 15853  001A38  5008               	movf	i2UART_buff_put@_this+1,w,c
 15854  001A3A  22DA               	addwfc	fsr2h,f,c
 15855  001A3C  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15856  001A40  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15857  001A44  0E00               	movlw	0
 15858  001A46  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15859  001A48  0EC8               	movlw	200
 15860  001A4A  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15861  001A4C  ECC0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15862  001A50  EE20 F0CA          	lfsr	2,202
 15863  001A54  5007               	movf	i2UART_buff_put@_this,w,c
 15864  001A56  26D9               	addwf	fsr2l,f,c
 15865  001A58  5008               	movf	i2UART_buff_put@_this+1,w,c
 15866  001A5A  22DA               	addwfc	fsr2h,f,c
 15867  001A5C  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15868  001A60  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15869  001A64  0012               	return	
 15870  001A66                     __end_ofi2_UART_buff_put:
 15871                           	opt stack 0
 15872                           tosu	equ	0xFFF
 15873                           tosh	equ	0xFFE
 15874                           tosl	equ	0xFFD
 15875                           pclatu	equ	0xFFB
 15876                           pclath	equ	0xFFA
 15877                           tblptru	equ	0xFF8
 15878                           tblptrh	equ	0xFF7
 15879                           tblptrl	equ	0xFF6
 15880                           tablat	equ	0xFF5
 15881                           prodh	equ	0xFF4
 15882                           prodl	equ	0xFF3
 15883                           intcon	equ	0xFF2
 15884                           intcon2	equ	0xFF1
 15885                           indf0	equ	0xFEF
 15886                           postinc0	equ	0xFEE
 15887                           fsr0h	equ	0xFEA
 15888                           fsr0l	equ	0xFE9
 15889                           wreg	equ	0xFE8
 15890                           fsr1h	equ	0xFE2
 15891                           fsr1l	equ	0xFE1
 15892                           indf2	equ	0xFDF
 15893                           postinc2	equ	0xFDE
 15894                           postdec2	equ	0xFDD
 15895                           plusw2	equ	0xFDB
 15896                           fsr2h	equ	0xFDA
 15897                           fsr2l	equ	0xFD9
 15898                           status	equ	0xFD8
 15899                           
 15900 ;; *************** function i2_UART_buff_modulo_inc *****************
 15901 ;; Defined at:
 15902 ;;		line 106 in file "UART.c"
 15903 ;; Parameters:    Size  Location     Type
 15904 ;;  value           2    0[COMRAM] const unsigned int 
 15905 ;;  modulus         2    2[COMRAM] const unsigned int 
 15906 ;; Auto vars:     Size  Location     Type
 15907 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 15908 ;; Return value:  Size  Location     Type
 15909 ;;                  2    0[COMRAM] unsigned int 
 15910 ;; Registers used:
 15911 ;;		wreg, status,2, status,0
 15912 ;; Tracked objects:
 15913 ;;		On entry : 0/0
 15914 ;;		On exit  : 0/0
 15915 ;;		Unchanged: 0/0
 15916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15917 ;;      Params:         4       0       0       0       0       0       0
 15918 ;;      Locals:         2       0       0       0       0       0       0
 15919 ;;      Temps:          0       0       0       0       0       0       0
 15920 ;;      Totals:         6       0       0       0       0       0       0
 15921 ;;Total ram usage:        6 bytes
 15922 ;; Hardware stack levels used:    1
 15923 ;; This function calls:
 15924 ;;		Nothing
 15925 ;; This function is called by:
 15926 ;;		i2_UART_buff_put
 15927 ;;		i2_UART_buff_get
 15928 ;; This function uses a non-reentrant model
 15929 ;;
 15930                           
 15931                           	psect	text82
 15932  002F80                     __ptext82:
 15933                           	opt stack 0
 15934  002F80                     i2_UART_buff_modulo_inc:
 15935                           	opt stack 21
 15936                           
 15937                           ;UART.c: 107: unsigned int my_value = value + 1;
 15938                           
 15939                           ;incstack = 0
 15940  002F80  0E01               	movlw	1
 15941  002F82  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 15942  002F84  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 15943  002F86  0E00               	movlw	0
 15944  002F88  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 15945  002F8A  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 15946                           
 15947                           ;UART.c: 108: if (my_value >= modulus) {
 15948  002F8C  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 15949  002F8E  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 15950  002F90  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 15951  002F92  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 15952  002F94  A0D8               	btfss	status,0,c
 15953  002F96  D004               	goto	i2l4598
 15954                           
 15955                           ;UART.c: 109: my_value = 0;
 15956  002F98  0E00               	movlw	0
 15957  002F9A  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 15958  002F9C  0E00               	movlw	0
 15959  002F9E  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 15960  002FA0                     i2l4598:
 15961                           
 15962                           ;UART.c: 110: }
 15963                           ;UART.c: 111: return (my_value);
 15964  002FA0  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 15965  002FA4  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 15966  002FA8  0012               	return	
 15967  002FAA                     __end_ofi2_UART_buff_modulo_inc:
 15968                           	opt stack 0
 15969                           tosu	equ	0xFFF
 15970                           tosh	equ	0xFFE
 15971                           tosl	equ	0xFFD
 15972                           pclatu	equ	0xFFB
 15973                           pclath	equ	0xFFA
 15974                           tblptru	equ	0xFF8
 15975                           tblptrh	equ	0xFF7
 15976                           tblptrl	equ	0xFF6
 15977                           tablat	equ	0xFF5
 15978                           prodh	equ	0xFF4
 15979                           prodl	equ	0xFF3
 15980                           intcon	equ	0xFF2
 15981                           intcon2	equ	0xFF1
 15982                           indf0	equ	0xFEF
 15983                           postinc0	equ	0xFEE
 15984                           fsr0h	equ	0xFEA
 15985                           fsr0l	equ	0xFE9
 15986                           wreg	equ	0xFE8
 15987                           fsr1h	equ	0xFE2
 15988                           fsr1l	equ	0xFE1
 15989                           indf2	equ	0xFDF
 15990                           postinc2	equ	0xFDE
 15991                           postdec2	equ	0xFDD
 15992                           plusw2	equ	0xFDB
 15993                           fsr2h	equ	0xFDA
 15994                           fsr2l	equ	0xFD9
 15995                           status	equ	0xFD8
 15996                           
 15997 ;; *************** function _ADC_ISR *****************
 15998 ;; Defined at:
 15999 ;;		line 128 in file "mcc_generated_files/adc.c"
 16000 ;; Parameters:    Size  Location     Type
 16001 ;;		None
 16002 ;; Auto vars:     Size  Location     Type
 16003 ;;		None
 16004 ;; Return value:  Size  Location     Type
 16005 ;;                  1    wreg      void 
 16006 ;; Registers used:
 16007 ;;		None
 16008 ;; Tracked objects:
 16009 ;;		On entry : 0/0
 16010 ;;		On exit  : 0/0
 16011 ;;		Unchanged: 0/0
 16012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16013 ;;      Params:         0       0       0       0       0       0       0
 16014 ;;      Locals:         0       0       0       0       0       0       0
 16015 ;;      Temps:          0       0       0       0       0       0       0
 16016 ;;      Totals:         0       0       0       0       0       0       0
 16017 ;;Total ram usage:        0 bytes
 16018 ;; Hardware stack levels used:    1
 16019 ;; This function calls:
 16020 ;;		Nothing
 16021 ;; This function is called by:
 16022 ;;		_INTERRUPT_InterruptManager
 16023 ;; This function uses a non-reentrant model
 16024 ;;
 16025                           
 16026                           	psect	text83
 16027  003190                     __ptext83:
 16028                           	opt stack 0
 16029  003190                     _ADC_ISR:
 16030                           	opt stack 23
 16031                           
 16032                           ;adc.c: 131: PIR1bits.ADIF = 0;
 16033                           
 16034                           ;incstack = 0
 16035  003190  9C9E               	bcf	3998,6,c	;volatile
 16036  003192  0012               	return		;funcret
 16037  003194                     __end_of_ADC_ISR:
 16038                           	opt stack 0
 16039                           tosu	equ	0xFFF
 16040                           tosh	equ	0xFFE
 16041                           tosl	equ	0xFFD
 16042                           pclatu	equ	0xFFB
 16043                           pclath	equ	0xFFA
 16044                           tblptru	equ	0xFF8
 16045                           tblptrh	equ	0xFF7
 16046                           tblptrl	equ	0xFF6
 16047                           tablat	equ	0xFF5
 16048                           prodh	equ	0xFF4
 16049                           prodl	equ	0xFF3
 16050                           intcon	equ	0xFF2
 16051                           intcon2	equ	0xFF1
 16052                           indf0	equ	0xFEF
 16053                           postinc0	equ	0xFEE
 16054                           fsr0h	equ	0xFEA
 16055                           fsr0l	equ	0xFE9
 16056                           wreg	equ	0xFE8
 16057                           fsr1h	equ	0xFE2
 16058                           fsr1l	equ	0xFE1
 16059                           indf2	equ	0xFDF
 16060                           postinc2	equ	0xFDE
 16061                           postdec2	equ	0xFDD
 16062                           plusw2	equ	0xFDB
 16063                           fsr2h	equ	0xFDA
 16064                           fsr2l	equ	0xFD9
 16065                           status	equ	0xFD8
 16066                           tosu	equ	0xFFF
 16067                           tosh	equ	0xFFE
 16068                           tosl	equ	0xFFD
 16069                           pclatu	equ	0xFFB
 16070                           pclath	equ	0xFFA
 16071                           tblptru	equ	0xFF8
 16072                           tblptrh	equ	0xFF7
 16073                           tblptrl	equ	0xFF6
 16074                           tablat	equ	0xFF5
 16075                           prodh	equ	0xFF4
 16076                           prodl	equ	0xFF3
 16077                           intcon	equ	0xFF2
 16078                           intcon2	equ	0xFF1
 16079                           indf0	equ	0xFEF
 16080                           postinc0	equ	0xFEE
 16081                           fsr0h	equ	0xFEA
 16082                           fsr0l	equ	0xFE9
 16083                           wreg	equ	0xFE8
 16084                           fsr1h	equ	0xFE2
 16085                           fsr1l	equ	0xFE1
 16086                           indf2	equ	0xFDF
 16087                           postinc2	equ	0xFDE
 16088                           postdec2	equ	0xFDD
 16089                           plusw2	equ	0xFDB
 16090                           fsr2h	equ	0xFDA
 16091                           fsr2l	equ	0xFD9
 16092                           status	equ	0xFD8
 16093                           
 16094                           	psect	text84
 16095  000000                     __ptext84:
 16096                           	opt stack 0
 16097                           tosu	equ	0xFFF
 16098                           tosh	equ	0xFFE
 16099                           tosl	equ	0xFFD
 16100                           pclatu	equ	0xFFB
 16101                           pclath	equ	0xFFA
 16102                           tblptru	equ	0xFF8
 16103                           tblptrh	equ	0xFF7
 16104                           tblptrl	equ	0xFF6
 16105                           tablat	equ	0xFF5
 16106                           prodh	equ	0xFF4
 16107                           prodl	equ	0xFF3
 16108                           intcon	equ	0xFF2
 16109                           intcon2	equ	0xFF1
 16110                           indf0	equ	0xFEF
 16111                           postinc0	equ	0xFEE
 16112                           fsr0h	equ	0xFEA
 16113                           fsr0l	equ	0xFE9
 16114                           wreg	equ	0xFE8
 16115                           fsr1h	equ	0xFE2
 16116                           fsr1l	equ	0xFE1
 16117                           indf2	equ	0xFDF
 16118                           postinc2	equ	0xFDE
 16119                           postdec2	equ	0xFDD
 16120                           plusw2	equ	0xFDB
 16121                           fsr2h	equ	0xFDA
 16122                           fsr2l	equ	0xFD9
 16123                           status	equ	0xFD8
 16124                           
 16125                           	psect	rparam
 16126  0000                     tosu	equ	0xFFF
 16127                           tosh	equ	0xFFE
 16128                           tosl	equ	0xFFD
 16129                           pclatu	equ	0xFFB
 16130                           pclath	equ	0xFFA
 16131                           tblptru	equ	0xFF8
 16132                           tblptrh	equ	0xFF7
 16133                           tblptrl	equ	0xFF6
 16134                           tablat	equ	0xFF5
 16135                           prodh	equ	0xFF4
 16136                           prodl	equ	0xFF3
 16137                           intcon	equ	0xFF2
 16138                           intcon2	equ	0xFF1
 16139                           indf0	equ	0xFEF
 16140                           postinc0	equ	0xFEE
 16141                           fsr0h	equ	0xFEA
 16142                           fsr0l	equ	0xFE9
 16143                           wreg	equ	0xFE8
 16144                           fsr1h	equ	0xFE2
 16145                           fsr1l	equ	0xFE1
 16146                           indf2	equ	0xFDF
 16147                           postinc2	equ	0xFDE
 16148                           postdec2	equ	0xFDD
 16149                           plusw2	equ	0xFDB
 16150                           fsr2h	equ	0xFDA
 16151                           fsr2l	equ	0xFD9
 16152                           status	equ	0xFD8
 16153                           
 16154                           	psect	temp
 16155  000045                     btemp:
 16156                           	opt stack 0
 16157  000045                     	ds	1
 16158  0000                     int$flags	set	btemp
 16159                           tosu	equ	0xFFF
 16160                           tosh	equ	0xFFE
 16161                           tosl	equ	0xFFD
 16162                           pclatu	equ	0xFFB
 16163                           pclath	equ	0xFFA
 16164                           tblptru	equ	0xFF8
 16165                           tblptrh	equ	0xFF7
 16166                           tblptrl	equ	0xFF6
 16167                           tablat	equ	0xFF5
 16168                           prodh	equ	0xFF4
 16169                           prodl	equ	0xFF3
 16170                           intcon	equ	0xFF2
 16171                           intcon2	equ	0xFF1
 16172                           indf0	equ	0xFEF
 16173                           postinc0	equ	0xFEE
 16174                           fsr0h	equ	0xFEA
 16175                           fsr0l	equ	0xFE9
 16176                           wreg	equ	0xFE8
 16177                           fsr1h	equ	0xFE2
 16178                           fsr1l	equ	0xFE1
 16179                           indf2	equ	0xFDF
 16180                           postinc2	equ	0xFDE
 16181                           postdec2	equ	0xFDD
 16182                           plusw2	equ	0xFDB
 16183                           fsr2h	equ	0xFDA
 16184                           fsr2l	equ	0xFD9
 16185                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    1040
    Data        1
    BSS         1044
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      68
    BANK0           160     12     160
    BANK1           256     24      81
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8678 size(2) Largest target is 0
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    oledPrint@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[8]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[11]), 
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    oledPutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2465(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    F8790.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    F8785.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDblinkRate@b(COMRAM[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 
		 -> LEDBsetBrightness@b(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _oledPutChar->_memmove
    _oledGotoYX->_OLED_command
    _OLED_init->_OLED_command
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDsetValue->_LEDsetBar
    _LEDsetBar->___awdiv
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _respondECU->_sendData
    _receiveData->_CRCcheck
    _Splash->_oledPrint
    _Setupdisplay->_oledClear
    _oledPutChar->_I2C1_MasterWrite
    _OLED_command->_I2C1_MasterWrite
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69266
                          _ClearTime
                            _GetTime
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                       _Setupdisplay
                             _Splash
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21016
                      _DataBarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7635
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     223
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2      86
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1406
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     302
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              0 BANK1     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     5     3      2
                                              0 BANK0      2     2      0
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DataBarGraphs                                        4     0      4     172
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _Splash                                               0     0      0   10386
                         _oledGotoYX
                          _oledPrint
 ---------------------------------------------------------------------------------
 (2) _oledPrint                                            2     0      2    5370
                                              8 BANK0      2     0      2
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (1) _Setupdisplay                                         0     0      0   14117
                          _OLED_init
                          _oledClear
 ---------------------------------------------------------------------------------
 (2) _oledClear                                            4     4      0   10134
                                              8 BANK0      4     4      0
                         _oledGotoYX
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (3) _oledPutChar                                         17    17      0    4920
                                             38 COMRAM     4     4      0
                                              0 BANK1     13    13      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     752
                                             26 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _oledGotoYX                                           3     2      1    5016
                                             38 COMRAM     3     2      1
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_init                                            0     0      0    3983
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_command                                         2     2      0    3983
                                             36 COMRAM     2     2      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2872
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4989
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    3155
                                              0 BANK0      7     3      4
                          _LEDsetBar
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    2556
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   12731
                                              5 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     8     0      8    3761
                                              0 BANK0      8     0      8
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                            10     2      8     494
                                             26 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 7     1      6     648
                                             26 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearTime
   _GetTime
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _LEDsetBar
       ___awdiv
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   _Setupdisplay
     _OLED_init
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledClear
       _oledGotoYX
         _OLED_command
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   _Splash
     _oledGotoYX
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledPrint
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   _updateComms
     _DataBarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     18      51       6       31.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     467       9        0.0%
DATA                 0      0     467      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Oct 01 13:50:08 2016

       __end_of_FastTransfer_buffer_flush 2B0C                    i2_UART_buff_modulo_inc 2F80  
        __end_of_TMR2_SetInterruptHandler 3172                                         _i 00CF  
                                       _k 00D3                              _rx_array_inx 003D  
                            ___awdiv@sign 0020                  LEDBsetBrightness@timeOut 013B  
                              Off_Led@led 001B                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l613 2212  
                                     l618 2284                                       l921 268E  
                                     l692 07EE                                       l935 2968  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                           __end_of_ADC_ISR 3194  
    FastTransfer_buffer_flush@clearBuffer 0025                           _TMR2_Initialize 301E  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8             i2UART_buff_modulo_inc@modulus 0003  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 0E6E  
                                    l1006 2C9E                                      l1120 15A2  
                                    l1330 2E8A                                      l1165 24EE  
                                    l1262 2BC0                                      l4002 2F4C  
                                    l4142 1306                                      l6000 2CAA  
                                    l6020 1C78                                      l4430 2E76  
                                    l4422 292A                                      l6104 2812  
                                    l6112 2182                                      l6024 1C82  
                                    l7002 15C0                                      l6210 0FEC  
                                    l6202 0FCA                                      l7004 15EE  
                                    l6116 21B4                                      l6036 1D06  
                                    l6052 1EB8                                      l6044 1E32  
                                    l6300 146E                                      l7022 161E  
                                    l6150 0ED8                                      l6400 26BC  
                                    l7024 1626                                      l6232 1054  
                                    l6224 1032                                      l6216 1010  
                                    l6144 0EB4                                      l6136 0E92  
                                    l6128 0E70                                      l6312 151E  
                                    l6410 26DE                                      l6322 1572  
                                    l6330 159A                                      l7130 273A  
                                    l6084 27BA                                      l6180 0F62  
                                    l6172 0F40                                      l6308 1508  
                                    l6502 23F8                                      l6406 26D2  
                                    l6422 2704                                      l7062 1686  
                                    l6086 27EA                                      l6254 10BC  
                                    l6246 109A                                      l6238 1078  
                                    l6166 0F1C                                      l6158 0EFA  
                                    l6262 10E0                                      l6326 1592  
                                    l6504 2426                                      l6408 26DA  
                                    l7064 16B4                                      l6352 1B90  
                                    l6600 023E                                      l6280 1770  
                    receiveData@crcHolder 0145                                      l6522 2456  
                                    l6426 2712                                      l6418 26FA  
                                    l7082 16E4                                      l6354 1B96  
                                    l6194 0FA8                                      l6602 0264  
                                    l6282 178C                                      l6274 1720  
                                    l7138 2798                                      l6364 1C04  
                                    l6188 0F84                                      l6700 06C0  
                                    l6292 1804                                      l6284 1798  
                                    l6276 173A                                      l6534 235E  
                                    l6470 07AE                                      l6366 1C34  
                                    l6702 06DA                                      l6710 0778  
                                    l6630 038A                                      l6622 02EE  
                                    l6614 0294                                      l6286 17C6  
                                    l6278 1756                                      l6536 238C  
                                    l6528 2342                                      l6480 08F0  
                                    l6384 1C64                                      l5904 18BE  
                                    l6704 06F4                                      l6640 0442  
                                    l6288 17CC                                      l6554 23BC  
                                    l6394 26AC                                      l5930 1FE0  
                                    l6298 1446                                      l6706 070E  
                                    l6618 02C6                                      l6562 0104  
                                    l6570 0136                                      l6484 09AE  
                                    l6468 0798                                      l5932 1FF6  
                                    l6708 075C                                      l6660 0530  
                                    l6636 0428                                      l5862 20F8  
                                    l5950 1F00                                      l5934 200C  
                                    l5942 204E                                      l6742 264C  
                                    l5918 24EA                                      l6662 054A  
                                    l6654 04E2                                      l6670 05E8  
                                    l6638 042E                                      l6718 0784  
                                    l6582 01DA                                      l6566 0132  
                                    l5872 2134                                      l6496 23DE  
                                    l6488 0A8A                                      l6752 2B74  
                                    l5936 2022                                      l5928 1FCA  
                                    l6664 0564                                      l6656 04FC  
                                    l6680 05F4                                      l6584 01F2  
                                    l5866 2118                                      l6930 22D0  
                                    l5890 2F0A                                      l6770 2BB8  
                                    l5970 1F78                                      l5962 1F48  
                                    l5954 1F18                                      l5938 2038  
                                    l6666 057E                                      l6658 0516  
                                    l6586 01F8                                      l6594 0232  
                                    l5868 2124                                      l6780 2C44  
                                    l6668 05CC                                      l5886 2C0A  
                                    l6950 2308                                      l5894 2F1A  
                                    l6758 2B8E                                      l5966 1F60  
                                    l5958 1F30                                      l5990 2C88  
                                    l5878 2F76                                      l6694 0672  
                                    l6928 22A2                                      l6776 2C1A  
                                    l5976 1F90                                      l5984 2C72  
                                    l6696 068C                                      l5898 1852  
                                    l6698 06A6                                      l6948 2300  
                                    l6990 2232                                      l6982 2202  
                                    l5998 2CA4                                      l6994 2268  
                                    l6986 221C                                      l6996 227C  
                                    STR_1 7FE3                                      STR_2 7FFC  
                                    STR_3 7FF6                                      STR_4 7FEE  
                                    _CRC8 2C6C                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u3171 1304                                      u3540 2968  
                                    u3534 294A                                      u3535 2944  
                                    u7010 23D6                                      u6130 1E12  
                                    u7004 0B2A                                      u7005 0B22  
                                    u6090 247E                                      u7070 233A  
                                    u7208 0158                                      u7209 016C  
                                    i2l60 0BCA                                      u7308 0242  
                                    u7228 0176                                      u7148 00DE  
                                    u6508 1724                                      u7309 0256  
                                    u7229 018A                                      u7149 00F2  
                                    u7238 0190                                      u6518 173E  
                                    i2l71 0C86                                      i2l63 0C48  
                                    u7239 01A4                                      i2l72 0C96  
                                    u6608 148E                                      u7328 0268  
                                    u7248 01AA                                      u7168 010E  
                                    u6528 175A                                      i2l65 0C50  
                                    u6705 2A78                                      u6609 14A2  
                                    u7329 027E                                      u7249 01BE  
                                    u7169 0122                                      i2l90 0DB4  
                                    i2l82 0D1A                                      i2l66 0C58  
                                    u6618 14AA                                      u6538 1774  
                                    u6715 2A94                                      u6619 14BE  
                                    i2l76 0D06                                      u7700 2C3A  
                                    u7620 2622                                      u6628 14C6  
                                    u7508 0582                                      u7348 0298  
                                    u7268 01DE                                      u7188 013A  
                                    u6548 179C                                      u6629 14DA  
                                    u7381 032E                                      u7349 02AC  
                                    u7189 014E                                      i2l94 0E0A  
                                    i2l86 0D70                                      u7710 2C64  
                                    u7518 05D0                                      u7438 04CC  
                                    u7358 02CA                                      u8270 2752  
                                    u7359 02DE                                      u6904 0814  
                                    u7608 0712                                      u7448 04E6  
                                    u6568 17EC                                      u8280 2796  
                                    i2l89 0DA2                                      u6905 080C  
                                    u6914 088C                                      u7650 268E  
                                    u6578 144A                                      u7618 0760  
                                    u7538 065C                                      u7458 0500  
                                    u6498 170A                                      u6915 0884  
                                    u7707 2C30                                      u6579 145E  
                                    u7644 266A                                      u7548 0676  
                                    u7468 051A                                      u7717 2C5A  
                                    u7645 2664                                      u6934 091E  
                                    u6598 1472                                      u7558 0690  
                                    u7478 0534                                      u6935 0916  
                                    u6599 1486                                      u6944 0942  
                                    u6880 07E6                                      u7568 06AA  
                                    u7488 054E                                      u6945 093A  
                                    u7578 06C4                                      u7498 0568  
                                    u6964 09DA                                      u7588 06DE  
                                    u6965 09D2                                      u8477 2E7C  
                                    u6974 0A0E                                      u7598 06F8  
                                    u6975 0A06                                      u6994 0AB8  
                                    u7970 21F8                                      u6995 0AB0  
                                    _TMR2 000FBC                                      _WPUB 000F61  
                                    _Buff 00F0                             oledPutChar@ch 0144  
                                    _main 271C                           _TMR0_StartTimer 318C  
                                    _time 003F                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                    ??_I2C1_MasterTRBInsert 0021  
                                    btemp 0045                             __CFG_BORV$190 000000  
                                    pclat 000FFA                           OLED_command@com 0025  
                                    prodh 000FF4                                      prodl 000FF3  
         __end_of_FastTransfer_buffer_put 1446                                      start 00D0  
                           __CFG_IESO$OFF 000000                           __end_of_GetTime 317A  
                            ___param_bank 000010                           __end_of_Off_Led 1FC8  
          I2C1_MasterWriteTRBBuild@length 001F            i2UART_buff_modulo_inc@my_value 0005  
                        _handleIndicators 2610                        __size_of_LEDsetBar 0406  
                                   ?_CRC8 001B                   __end_of_TMR0_Initialize 305E  
                              _i2c1_state 0038                          __end_of_CRCcheck 15A4  
                      __size_of_OLED_init 008C            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 001B             __end_of_OSCILLATOR_Initialize 315E  
               I2C1_MasterTRBInsert@pflag 001F                          LEDbegin@i2c_addr 0143  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 232A  
                                   ?_main 0001                           __end_of___awdiv 271C  
                       __end_of_I2C1_Stop 2D82                                     _T0CON 000FD5  
                         ___awdiv@divisor 001D                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATC1 007C59  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l501 120E                                     i2l281 0066  
                                   i2l283 0072                                     i2l291 0094  
                                   i2l285 007E                                     i2l277 004E  
                                   i2l470 1156                                     i2l463 113E  
                                   i2l287 008A                                     i2l279 005A  
                                   i2l456 12A8                                     i2l473 1162  
                                   i2l467 114A                                     i2l492 11EA  
                                   i2l476 116E                                     i2l485 11D2  
                                   i2l495 11F6                                     i2l479 117A  
                                   i2l489 11DE                                     i2l498 1202  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2E6C              __end_of_I2C1_BusCollisionISR 3198  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                      _EUSART1_Transmit_ISR 2EA0  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 001B  
                        __end_of_TMR0_ISR 2E6C                          __end_of_TMR2_ISR 3182  
                           __CFG_WRTB$OFF 000000                              ?_LEDsetValue 00F2  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                                   _begin 2B0C                            __CFG_EBTRB$OFF 000000  
                      ??_buttonsCollector 0023                                     _group 002B  
                         __end_of_memmove 21E2                        __CFG_MCLRE$EXTMCLR 000000  
                         __end_of_picture 7FE3                                     pclath 000FFA  
                            ?_oledPutChar 0001                                     tablat 000FF5  
                           ??_Receive_get 0026                      __size_of_crcBufS_get 00E2  
                                   plusw2 000FDB                            begin@stuffpeek 0144  
                    __size_of_crcBufS_put 00D8                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 3188  
                            ?_receiveData 0001                            SetLEDOut@state 0021  
                       ??_ReadButtonState 0003                            __CFG_PBADEN$ON 000000  
         I2C1_MasterWriteTRBBuild@address 0021                              __end_of_CRC8 2CB6  
                         CRCcheck@SentCRC 00F2                           __initialization 281A  
                   I2C1_MasterWrite@pdata 00F2                     I2C1_MasterWrite@pflag 00F8  
              __end_of_EUSART1_Initialize 2DFA                              __end_of_main 279E  
                  __size_of_DataBarGraphs 0012                                ToSend@what 00F2  
                                  ??_CRC8 001E                             ?_LEDblinkRate 0025  
                 __end_of_TMR2_Initialize 3040                                 ??_ADC_ISR 0001  
             ?_INTERRUPT_InterruptManager 0001                          __end_of_OledFont 7ED3  
                      __size_of_ClearTime 0006                               _i2c1_object 00B8  
                _TMR2_SetInterruptHandler 3168                                    ??_main 002B  
                           __activetblptr 000002                          __end_of_Send_put 2F00  
               __size_ofi2_UART_buff_size 0016                                    ?_Delay 001B  
                   ?_EUSART1_Transmit_ISR 0001             FastTransfer_buffer_put@towhat 0024  
                           ?_Receive_peek 0001                                    ?_begin 0139  
                 __end_of_TMR0_StartTimer 3190                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                        ___awdiv@dividend 001B                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                       __end_of_LEDsetBar 0B8E                           i2_UART_buff_get 24F2  
                                  _RC1STA 000FAB                                    i2l1165 2580  
                         i2_UART_buff_put 194C                                    i2l1196 3084  
                                  i2l5100 19D8                            __CFG_WDTEN$OFF 000000  
                                  i2l5114 257C                                    Delay@x 001E  
             UART_buff_modulo_inc@modulus 001D                                    i2l5260 2ECA  
                                  i2l5094 196C                                    i2l4710 1A68  
                                  i2l4720 1AEA                                    i2l4712 1A82  
                                  i2l5272 2E54                                    i2l4722 1B04  
                                  i2l4714 1A9C                                    i2l4724 1B1E  
                                  i2l4716 1AB6                                    i2l5268 2E44  
                                  i2l4718 1AD0                                    i2l5278 2E66  
                                  i2l4750 1250                                    i2l4742 1186  
                                  i2l4728 1B38                                    i2l4744 11BC  
                                  i2l4736 1122                                    i2l6442 2FF4  
                                  i2l4754 126C                                    i2l6436 2D7C  
                                  i2l4748 121A                                    i2l4756 129C  
                                  i2l4598 2FA0                                    i2l4758 12B8  
                                  i2l6802 0C2A                                    i2l6900 0E14  
                                  i2l6820 0C80                            _GetButtonState 2FAA  
                                  i2l6902 0E1C                                    i2l6814 0C68  
                                  i2l6834 0CC4                                    i2l6908 0E28  
                                  i2l6870 0D78                                    i2l6862 0D2C  
                                  i2l6854 0D14                                    i2l6882 0DBC  
                                  i2l6886 0DC4                                    i2l6898 0E10  
                                  _RCREG1 000FAE                         __end_of_OLED_init 2610  
                                  _OSCCON 000FD3                                    _SPBRG1 000FAF  
                               ??_GetTime 001D                                    _TX1STA 000FAC  
                                  _TXREG1 000FAD                                 ??_Off_Led 001D  
                      __size_of_SetLEDOut 02AA                         ?_I2C1_MasterWrite 00F2  
                          __CFG_XINST$OFF 000000                                    _ToSend 309A  
                      ??_I2C1_MasterWrite 0025                       __end_of_Receive_get 3150  
                        crcBufS_get@_this 001B               ??_FastTransfer_buffer_flush 0027  
                                  _Splash 2972                            _p_i2c1_current 00D5  
                           _output_buffer 0500                          crcBufS_get@space 001E  
                               ??___awdiv 001F                                 CRC8@tempI 0020  
                         oledPutChar@base 0142                            __CFG_STVREN$ON 000000  
                          ??_LEDblinkRate 0028                ??_I2C1_MasterWriteTRBBuild 0023  
                        ?_TMR0_Initialize 0001                                    _setLED 1FC8  
                                  _memset 2F00                                 ?_I2C1_ISR 0001  
                                  clear_0 2820                                    clear_1 282C  
                                  clear_2 2838                                    clear_3 2844  
                                  clear_4 2850                                    clear_5 285C  
                                  clear_6 2868                          ___awdiv@quotient 0021  
                           ?_OLED_command 0001                                    _rx_len 003E  
                        __end_of_sendData 1832                              __pdataCOMRAM 0044  
                               ??_memmove 0021                             Send_put@_data 0026  
                            __mediumconst 7BD2                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2F80                             _DataBarGraphA 00C3  
                           _DataBarGraphB 00C5                             _DataBarGraphs 3110  
                 __end_of_TMR2_StartTimer 318C  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2FD2             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 013D             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 288E  
                       __end_of_ClearTime 3188                                __accesstop 0060  
                 __end_of__initialization 2880                                 ?_CRCcheck 0001  
                   __end_of_TMR2_CallBack 12DE                        ?_SYSTEM_Initialize 0001  
                               ?_LEDbegin 0001                             ___rparam_used 000001  
                 ?i2_UART_buff_modulo_inc 0001                            _i2c1_trb_count 00D1  
                            ?_updateComms 0001                             __end_of_Delay 2EA0  
                   _I2C1_FunctionComplete 2FD2                      _I2C1_BusCollisionISR 3196  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 00F4                        _crcBufS_status_put 1E28  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2B6A                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2F56  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2F2C  
                              ??_I2C1_ISR 0004                            ??_OLED_command 0025  
                        ?_TMR2_Initialize 0001              FastTransfer_buffer_put@_this 0021  
                             ToSend@where 002A                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 24F2  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 194C  
                       __end_of_SetLEDOut 1118                                   ??_Delay 001D  
                          LEDbegin@status 0144                   __end_ofi2_UART_buff_get 2584  
                 __end_ofi2_UART_buff_put 1A66               __end_of_EUSART1_Receive_ISR 309A  
               _FastTransfer_buffer_flush 2AAA                                   CRC8@crc 0021  
                          ?_DataBarGraphs 001B                                   CRC8@len 001D  
                                 CRC8@sum 001E                                   ??_begin 0023  
                        ?_TMR0_StartTimer 0001                           ?_GetButtonState 001B  
               __end_of_SYSTEM_Initialize 2902                  __end_of_handleIndicators 2698  
                  receiveData@holder_2465 0142                       _addressErrorCounter 00C7  
                    __size_of_LEDsetValue 00A4                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                              __pbssBANK5 0500                           __CFG_PLLCFG$OFF 000000  
                             _Receive_get 3142                                ??_CRCcheck 0027  
                    ??_crcBufS_status_put 001F            __end_ofi2_UART_buff_modulo_inc 2FAA  
                              __pnvCOMRAM 0042                         begin@givenAddress 013C  
                    __size_of_oledPutChar 00F2                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 0028  
                 __size_of_UART_buff_size 0016                        __size_of_oledClear 0058  
                               ?_Send_put 0001                     ?_I2C1_BusCollisionISR 0001  
                      __size_of_oledPrint 0054                      __size_of_receiveData 06B4  
                                 ?_ToSend 00F2                        __CFG_CCP2MX$PORTC1 000000  
                                 ?_Splash 0001                  __size_of_LEDwriteDisplay 014A  
                              ??_TMR0_ISR 0005                                ??_TMR2_ISR 0005  
                      __CFG_CCP3MX$PORTB5 000000       FastTransfer_buffer_modulo_inc@value 001B  
                         _I2C1_Initialize 2D82                                   _ADC_ISR 3190  
                                 ?_setLED 001B                                   ?_memset 001B  
                              _crc_buffer 0128                                 TMR0_ISR@x 0005  
                 __size_of_ADC_Initialize 0018                        UART_buff_put@_this 0021  
                        i2_UART_buff_size 30FA               i2UART_buff_modulo_inc@value 0001  
                                 _OSCCON2 000FD2                                 _I2C1_Stop 2D40  
                       _Receive_available 30CE              UART_buff_modulo_inc@my_value 001F  
                       __CFG_PRICLKEN$OFF 000000                                   _OSCTUNE 000F9B  
                                 _SPBRGH1 000FB0                                   _SSP1ADD 000FC8  
                     sendData@whereToSend 00F2                           _ReadButtonState 1A66  
                     _receiveArrayAddress 00D7                                   _SSP1BUF 000FC9  
                        ?_TMR2_StartTimer 0001                        ?_Receive_available 001D  
                              begin@error 013D                      __end_of_LEDblinkRate 23C6  
           I2C1_MasterTRBInsert@ptrb_list 001D                                   _GetTime 3172  
                                 _Off_Led 1EFE                       ??_Receive_available 001F  
                               ?_sendData 0001                         _alignErrorCounter 00C9  
                         __CFG_PWRTEN$OFF 000000                 __size_of_buttonsCollector 0070  
                  ?_I2C1_FunctionComplete 0001                                ??_Send_put 0026  
                                 __Hparam 0000             __size_of_I2C1_MasterTRBInsert 00B8  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 001D  
                         __size_of_ToSend 001C                        _p_i2c1_trb_current 002D  
                    __end_of_Receive_peek 3142                                 _AKNAKsend 0036  
                         __size_of_Splash 006A                                   ___awdiv 2698  
                    _UART_buff_modulo_inc 2F56                                   _calc_CS 0037  
                                 __pcinit 281A                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        oledPutChar@bytes 0139                          i2UART_buff_get@c 000B  
                           ?_Setupdisplay 0001                                   __ptext0 271C  
                                 __ptext1 2DFA                                   __ptext2 2CB6  
                                 __ptext3 16EE                                   __ptext4 1D50  
                                 __ptext5 2AAA                                   __ptext6 2902  
                                 __ptext7 2FAA                                   __ptext8 309A  
                                 __ptext9 12DE                                _oledGotoYX 2A46  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 3150                 __end_of_Receive_available 30E4  
                               _T2CONbits 000FBA                           ??_DataBarGraphs 001F  
                                 _memmove 213E                   _FastTransfer_buffer_put 12DE  
                       __end_of_oledClear 2BC2                     CRCcheck@calculatedCRC 00F3  
                      _EUSART1_Initialize 2DBE                          ?i2_UART_buff_get 0007  
                ??_PIN_MANAGER_Initialize 001B                                   _picture 7ED3  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
                       __end_of_oledPrint 2C6C              crcBufS_status_put@wantedTime 0023  
                                 _timeOut 00DD                            TMR2_CallBack@i 0003  
                           ??_crcBufS_get 001F                             ??_crcBufS_put 0020  
              __size_of_SYSTEM_Initialize 0074                      I2C1_ISR@pi2c_buf_ptr 00C1  
                    end_of_initialization 2880                                 Delay@wait 001B  
                     ?_EUSART1_Initialize 0001                   LEDwriteDisplay@i2c_addr 014D  
                               _LED_array 0088                              oledClear@col 00FC  
                    __end_of_OLED_command 281A                              oledClear@row 00FA  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7BD2                                 _LEDsetBar 0788  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2DBE                                 _OLED_init 2584  
                   ?_UART_buff_modulo_inc 001B                      __size_of_updateComms 003A  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                _respondECU 2CB6  
                   ReadButtonState@btnnum 0001                        OLED_command@status 0026  
                        begin@stufftosend 013E                       CRCcheck@arrayHolder 00F4  
                            LEDsetValue@k 00F7                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 013B                            ??_Setupdisplay 002B  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                               _PORTDbits 000F83                         ??_LEDwriteDisplay 0025  
                 __end_of_ReadButtonState 1B7C                 __size_of_I2C1_MasterWrite 0056  
                  _dataAdressErrorCounter 00CD                         __size_of_I2C1_ISR 02E0  
                              _rx_address 003C                                 _TRISAbits 000F92  
                               _TRISCbits 000F94                   LEDBsetBrightness@status 013D  
       I2C1_ISR@i2c_10bit_address_restart 0035                       LEDbegin@writeBuffer 013E  
                            begin@maxSize 013B        __size_of_FastTransfer_buffer_flush 0062  
                   i2UART_buff_size@_this 0001                            _UART_buff_init 305E  
                          _UART_buff_peek 2FFA                            _UART_buff_size 30E4  
                     __end_of_crcBufS_get 1D50                                ?_LEDsetBar 0023  
                     __end_of_crcBufS_put 1E28                                ?_OLED_init 0001  
                 I2C1_MasterWrite@address 00F6                         __size_of_CRCcheck 015E  
                               _ClearTime 3182                 LEDBsetBrightness@i2c_addr 0027  
                       __size_of_LEDbegin 00A4                             _moduleAddress 003A  
                    _timer0ReloadVal16bit 0042                                CRCcheck@rt 00F7  
                          __end_of_ToSend 30B6              __end_of_INTERRUPT_Initialize 3134  
    __end_of_TMR2_DefaultInterruptHandler 3196     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 3194                            __end_of_Splash 29DC  
                         _crcErrorCounter 00CB                   I2C1_MasterWrite@trBlock 00E6  
                       crcBufS_put@oldCRC 001E                             __pidataCOMRAM 3198  
                       __size_of_TMR0_ISR 0038                  I2C1_Stop@completion_code 0003  
                       __size_of_TMR2_ISR 0008                            _ADC_Initialize 30B6  
               ??_FastTransfer_buffer_put 0026                               ?_oledGotoYX 0027  
                  ?_OSCILLATOR_Initialize 0001                            __end_of_setLED 2086  
                          __end_of_memset 2F2C                         crcBufS_put@status 001F  
                 buttonsCollector@sendVal 0026                              receiveData@r 0149  
              __size_of_Receive_available 0016                              receiveData@u 0147  
                        ??_GetButtonState 001D                         _LEDBsetBrightness 23C6  
                     start_initialization 281A                     __size_of_LEDblinkRate 009C  
                             ??_I2C1_Stop 0001                  __size_of_TMR0_Initialize 001E  
         __size_of_PIN_MANAGER_Initialize 006A                     crcBufS_get@wantedTime 0025  
                      ?_LEDBsetBrightness 0025                                 _SetLEDOut 0E6E  
       __size_of_I2C1_MasterWriteTRBBuild 0044                         ?_handleIndicators 0025  
               ?_I2C1_MasterWriteTRBBuild 001B                    __end_of_UART_buff_init 307C  
                  __end_of_UART_buff_peek 301E                            UART_buff_get@c 0025  
                  __end_of_UART_buff_size 30FA                              ?_Receive_get 0001  
                          UART_buff_put@c 0023                        ??_handleIndicators 0027  
                         LEDbegin@timeOut 0141                       ??_LEDBsetBrightness 0028  
                   __size_of_Receive_peek 000E                          _buttonsCollector 2902  
                __end_ofi2_UART_buff_size 3110                                ?_ClearTime 0001  
                        ?_I2C1_Initialize 0001                                  ??_ToSend 002A  
                  ??_UART_buff_modulo_inc 001F                                  CRC8@data 001B  
                                ??_Splash 002B                           crcBufS_get@time 001D  
                       __size_of_Send_put 002E                               ?_respondECU 0001  
              LEDwriteDisplay@writeBuffer 0139                    __end_of_ADC_Initialize 30CE  
                              LEDsetBar@a 0029                                LEDsetBar@c 0027  
                                ?_ADC_ISR 0001                                  ??_setLED 001D  
                                ??_memset 0021                              _LEDblinkRate 232A  
                       handleIndicators@i 00F2             ?_TMR2_DefaultInterruptHandler 0001  
               __end_of_LEDBsetBrightness 2460              I2C1_MasterWriteTRBBuild@ptrb 001B  
                        ?_ReadButtonState 0001                    __size_of_TMR2_CallBack 01C6  
                             __pbssCOMRAM 002B             __size_of_EUSART1_Transmit_ISR 0032  
                           __pcstackBANK0 00F2                             __pcstackBANK1 0139  
                              oledPrint@s 00FA                             ??_LEDsetValue 00F6  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 00EB  
                   LEDwriteDisplay@status 0150                     __size_of_OLED_command 007C  
                            _Receive_peek 3134                                ?_SetLEDOut 001F  
                     UART_buff_init@_this 0023                               _crcBufS_get 1C6E  
                     UART_buff_peek@_this 001B                               _crcBufS_put 1D50  
                           ??_oledPutChar 0027                          LEDsetValue@color 00F4  
                         ?_UART_buff_init 0023                           ?_UART_buff_peek 001B  
                         ?_UART_buff_size 001B                          LEDsetValue@value 00F2  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                    __end_of_Setupdisplay 3168                                  ?_GetTime 001B  
                           ??_receiveData 0139               __size_of_crcBufS_status_put 00D6  
                              sendData@CS 00F3                                  ?_Off_Led 001B  
                             ??_LEDsetBar 0139                       __size_of_oledGotoYX 0064  
                               __pnvBANK0 00FE                  __size_of_TMR0_StartTimer 0004  
                             ??_OLED_init 0027                    __size_of_UART_buff_get 0092  
                  __size_of_UART_buff_put 011A                    _PIN_MANAGER_Initialize 29DC  
                       __size_of_sendData 0144                                 __pintcode 0008  
                           __pmediumconst 7BD2                                  ?___awdiv 001B  
                         ?_ADC_Initialize 0001                                  _I2C1_ISR 0B8E  
            ??_INTERRUPT_InterruptManager 000D              LEDBsetBrightness@writeBuffer 0139  
                    i2UART_buff_get@_this 0007                              _OLED_command 279E  
                        _I2C1_MasterWrite 2BC2                                  _BAUD1CON 000FB8  
            __end_of_I2C1_MasterTRBInsert 213E                                  ?_memmove 001B  
                       buttonsCollector@i 0028                            __size_of_Delay 0034  
                               _butnarray 00B0                            __size_of_begin 005E  
                               _oledClear 2B6A                       __size_of_respondECU 0046  
                    _INTERRUPT_Initialize 3122                      GetButtonState@btnnum 001B  
                               _oledPrint 2C18                              _receiveArray 0100  
                             _LEDNUM_ENAB 0098                    I2C1_MasterRead@trBlock 00E1  
                       ??_TMR0_Initialize 001B                       __end_of_LEDsetValue 2286  
                                _CRCcheck 1446                                  _LATCbits 000F8B  
                                _LEDState 00A4                       UART_buff_size@_this 001B  
                           _TMR2_CallBack 1118                                  _IPR1bits 000F9F  
                                _LEDbegin 2286                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                           LEDblinkRate@b 0025                  __size_of_TMR2_StartTimer 0004  
                             ??_ClearTime 001B                       __end_of_oledPutChar 1C6E  
                         _LEDwriteDisplay 15A4       __size_of_INTERRUPT_InterruptManager 00C8  
                                i2u400_40 1AFE                                  i2u400_46 1B00  
                                i2u401_40 1B18                                  i2u401_46 1B1A  
                                i2u402_40 1B32                                  i2u410_40 116A  
                                i2u402_46 1B34                                  i2u420_40 11F2  
                                i2u412_40 1176                                  i2u404_40 1146  
                                i2u422_40 11FE                                  i2u414_40 1182  
                                i2u406_40 1152                                  i2u430_48 12C8  
                                i2u424_40 120A                                  i2u416_40 11DA  
                                i2u408_40 115E                                  _PIR1bits 000F9E  
                                i2u426_40 1216                                  i2u418_40 11E6  
                                _PIR2bits 000FA1                                  i2u518_40 2510  
                                i2u538_40 2EBA                                  i2u395_40 1A7C  
                                i2u395_46 1A7E                                  i2u396_40 1A96  
                                i2u396_46 1A98                                  i2u397_40 1AB0  
                                i2u397_46 1AB2                                  i2u398_40 1ACA  
                                i2u398_46 1ACC                                  i2u399_40 1AE4  
                                i2u399_46 1AE6                       begin@stuffavailable 0142  
                                i2u787_40 0D98                                  i2u787_47 0D8E  
                                i2u789_40 0DE8                                  i2u789_47 0DDC  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                     __end_of_receiveData 0788                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR0_ISR 2E34  
                                _TMR2_ISR 317A                                  _SSP1STAT 000FC7  
          FastTransfer_buffer_flush@_this 0023                              _input_buffer 0400  
                               _rx_buffer 0300                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2                __size_of_LEDBsetBrightness 009A  
                    i2UART_buff_put@_this 0007                             _UART_buff_get 2460  
                           _UART_buff_put 1832            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 001B  
                   __end_of_DataBarGraphs 3122                  ??i2_UART_buff_modulo_inc 0005  
                             ??_SetLEDOut 0023                                ?_oledClear 0001  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                              ?_oledPrint 00FA                         _sendStructAddress 00D9  
                __size_ofi2_UART_buff_get 0092                         ??_TMR2_Initialize 001D  
                __size_ofi2_UART_buff_put 011A                                  _OledFont 7BD3  
                          ?_TMR2_CallBack 0001                          __size_of_GetTime 0008  
                           ??_updateComms 002B                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 00CA                                  __Hrparam 0000  
                                _Send_put 2ED2             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 00BF  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 0139  
                 ??_OSCILLATOR_Initialize 001B                                 memmove@d1 001B  
                               memmove@s1 001D                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
             __size_of_EUSART1_Initialize 003C                       begin@stufftoreceive 0140  
        __end_of_I2C1_MasterWriteTRBBuild 2D40                              ??_oledGotoYX 0028  
                              _ANSELAbits 000F38                                _ANSELCbits 000F3A  
                          ?_UART_buff_get 0021                            ?_UART_buff_put 0021  
                             CRC8@extract 001F                  __end_of_buttonsCollector 2972  
                               sendData@i 00F4                          __size_of_memmove 00A4  
                     I2C1_ISR@i2c_address 0040                               _LEDsetValue 21E2  
                crcBufS_status_put@status 001E                                  __ptext10 2F2C  
                                __ptext11 2E6C                                  __ptext20 3142  
                                __ptext12 00D4                                  __ptext21 2460  
                                __ptext13 2ED2                     __size_of_Setupdisplay 000A  
                                __ptext30 3110                                  __ptext22 2F56  
                                __ptext14 1832                                  __ptext31 2972  
                                __ptext23 30CE                                  __ptext15 3134  
                                __ptext40 288E                                  __ptext32 2C18  
                                __ptext24 30E4                                  __ptext16 2FFA  
                                __ptext41 2B0C                                  __ptext33 315E  
                                __ptext25 2C6C                                  __ptext17 1446  
                                __ptext50 2D82                                  __ptext42 301E  
                                __ptext34 2B6A                                  __ptext26 2610  
                                __ptext18 1E28                                  __ptext51 2DBE  
                                __ptext43 3188                                  __ptext35 1B7C  
                                __ptext27 0E6E                                  __ptext19 1C6E  
                                __ptext60 232A                                  __ptext52 305E  
                                __ptext44 3168                                  __ptext36 213E  
                                __ptext28 1FC8                                  __ptext61 23C6  
                                __ptext53 2F00                                  __ptext45 3040  
                                __ptext37 2A46                                  __ptext29 1EFE  
                                __ptext70 3194                                  __ptext62 2BC2  
                                __ptext54 30B6                                  __ptext46 318C  
                                __ptext38 2584                                  __ptext71 2E34  
                                __ptext63 2CFC                                  __ptext55 15A4  
                                __ptext47 29DC                                  __ptext39 279E  
                                __ptext80 307C                                  __ptext72 1A66  
                                __ptext64 2086                                  __ptext56 21E2  
                                __ptext48 3150                                  __ptext81 194C  
                                __ptext73 0B8E                                  __ptext65 3172  
                                __ptext57 0788                                  __ptext49 3122  
                                __ptext82 2F80                                  __ptext74 2D40  
                                __ptext66 3182                                  __ptext58 2698  
                                __ptext83 3190                                  __ptext75 2FD2  
                                __ptext59 2286                                  __ptext84 0000  
                                __ptext76 3196                                  __ptext68 317A  
                                __ptext77 2EA0                                  __ptext69 1118  
                                __ptext78 30FA                                  __ptext79 24F2  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                       oledPutChar@status 0145                             __size_of_CRC8 004A  
                        oledGotoYX@Column 0027                                  begin@ptr 0139  
                 EUSART1_Receive_ISR@data 000C                   __end_of_LEDwriteDisplay 16EE  
                             _oledPutChar 1B7C                             _returnAddress 003B  
                           __size_of_main 0082                               _receiveData 00D4  
                          _Transmit_stall 0044                                  _sendData 16EE  
                      __end_of_oledGotoYX 2AAA                      _I2C1_MasterTRBInsert 2086  
                       ?i2_UART_buff_size 0001                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 0027                              ??_respondECU 002B  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
               __size_of_handleIndicators 0088             handleIndicators@oldIndicators 00DF  
                            _serial_write 0033                         ??_TMR2_StartTimer 001B  
                     __end_of_updateComms 2E34        __end_of_INTERRUPT_InterruptManager 00D0  
              _INTERRUPT_InterruptManager 0008                       _EUSART1_Receive_ISR 307C  
                       receiveData@holder 013F                              _Setupdisplay 315E  
                      LEDBsetBrightness@b 0025                                _INTCONbits 000FF2  
               UART_buff_modulo_inc@value 001B        handleIndicators@receivedIndicators 0025  
                        ??_UART_buff_init 0025                          ??_UART_buff_peek 001D  
                        ??_UART_buff_size 001D                    ??_INTERRUPT_Initialize 001B  
                                memset@p1 001B                          _serial_available 002F  
                                memmove@d 0023                                  memmove@n 001F  
                                memmove@s 0025                               ??_oledClear 002B  
         __size_ofi2_UART_buff_modulo_inc 002A                              ?_crcBufS_get 001B  
                            ?_crcBufS_put 001B                               ??_oledPrint 002B  
                                intlevel2 0000                   crcBufS_status_put@_this 001B  
                         ??_TMR2_CallBack 0001                        __end_of_respondECU 2CFC  
                    ?_EUSART1_Receive_ISR 0001    FastTransfer_buffer_modulo_inc@my_value 001F  
          FastTransfer_buffer_put@towhere 0023                   ?_PIN_MANAGER_Initialize 0001  
                __end_of_I2C1_MasterWrite 2C18            __size_of_I2C1_FunctionComplete 0028  
           __end_of_I2C1_FunctionComplete 2FFA                     ?_I2C1_MasterTRBInsert 001B  
            __end_of_EUSART1_Transmit_ISR 2ED2                               _ring_buffer 0200  
                        ??_ADC_Initialize 001B                ?_FastTransfer_buffer_flush 0023  
                       ??i2_UART_buff_get 0009                               _serial_peek 00DB  
                             _serial_read 0031                         ??i2_UART_buff_put 000A  
                ?_FastTransfer_buffer_put 0021             __size_of_UART_buff_modulo_inc 002A  
                __size_of_I2C1_Initialize 003C                           ??_UART_buff_get 0023  
                         ??_UART_buff_put 0024     FastTransfer_buffer_modulo_inc@modulus 001D  
                        DataBarGraphs@BGA 001B                          DataBarGraphs@BGB 001D  
                  crcBufS_status_put@time 001D                           _TMR0_Initialize 3040  
               receiveData@crcHolder_2466 0146                  _I2C1_MasterWriteTRBBuild 2CFC  
                       __CFG_T3CMX$PORTC0 000000                            _maxDataAddress 0039  
                __size_of_ReadButtonState 0116                __end_of_crcBufS_status_put 1EFE  
                   ??_EUSART1_Receive_ISR 000C            __end_of_PIN_MANAGER_Initialize 2A46  
        ??_FastTransfer_buffer_modulo_inc 001F           ?_FastTransfer_buffer_modulo_inc 001B  
                           oledGotoYX@Row 0029                          ?_LEDwriteDisplay 0001  
                 __size_of_GetButtonState 0028                        __size_of_I2C1_Stop 0042  
                           _displaybuffer 0060                         __CFG_FOSC$INTIO67 000000  
                   _TMR2_InterruptHandler 00FE                               _updateComms 2DFA  
