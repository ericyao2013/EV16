

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Aug 29 01:39:03 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112  0000                     
   113                           	psect	idataCOMRAM
   114  0031EC                     __pidataCOMRAM:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _Transmit_stall
   118  0031EC  01                 	db	1
   119                           
   120                           	psect	mediumconst
   121  007BD2                     __pmediumconst:
   122                           	opt stack 0
   123  007BD2  00                 	db	0
   124  007BD3                     _OledFont:
   125                           	opt stack 0
   126  007BD3  00                 	db	0
   127  007BD4  00                 	db	0
   128  007BD5  00                 	db	0
   129  007BD6  00                 	db	0
   130  007BD7  00                 	db	0
   131  007BD8  00                 	db	0
   132  007BD9  00                 	db	0
   133  007BDA  00                 	db	0
   134  007BDB  00                 	db	0
   135  007BDC  00                 	db	0
   136  007BDD  5F                 	db	95
   137  007BDE  00                 	db	0
   138  007BDF  00                 	db	0
   139  007BE0  00                 	db	0
   140  007BE1  00                 	db	0
   141  007BE2  00                 	db	0
   142  007BE3  00                 	db	0
   143  007BE4  00                 	db	0
   144  007BE5  07                 	db	7
   145  007BE6  00                 	db	0
   146  007BE7  07                 	db	7
   147  007BE8  00                 	db	0
   148  007BE9  00                 	db	0
   149  007BEA  00                 	db	0
   150  007BEB  00                 	db	0
   151  007BEC  14                 	db	20
   152  007BED  7F                 	db	127
   153  007BEE  14                 	db	20
   154  007BEF  7F                 	db	127
   155  007BF0  14                 	db	20
   156  007BF1  00                 	db	0
   157  007BF2  00                 	db	0
   158  007BF3  00                 	db	0
   159  007BF4  24                 	db	36
   160  007BF5  2A                 	db	42
   161  007BF6  7F                 	db	127
   162  007BF7  2A                 	db	42
   163  007BF8  12                 	db	18
   164  007BF9  00                 	db	0
   165  007BFA  00                 	db	0
   166  007BFB  00                 	db	0
   167  007BFC  23                 	db	35
   168  007BFD  13                 	db	19
   169  007BFE  08                 	db	8
   170  007BFF  64                 	db	100
   171  007C00  62                 	db	98
   172  007C01  00                 	db	0
   173  007C02  00                 	db	0
   174  007C03  00                 	db	0
   175  007C04  36                 	db	54
   176  007C05  49                 	db	73
   177  007C06  55                 	db	85
   178  007C07  22                 	db	34
   179  007C08  50                 	db	80
   180  007C09  00                 	db	0
   181  007C0A  00                 	db	0
   182  007C0B  00                 	db	0
   183  007C0C  00                 	db	0
   184  007C0D  05                 	db	5
   185  007C0E  03                 	db	3
   186  007C0F  00                 	db	0
   187  007C10  00                 	db	0
   188  007C11  00                 	db	0
   189  007C12  00                 	db	0
   190  007C13  00                 	db	0
   191  007C14  1C                 	db	28
   192  007C15  22                 	db	34
   193  007C16  41                 	db	65
   194  007C17  00                 	db	0
   195  007C18  00                 	db	0
   196  007C19  00                 	db	0
   197  007C1A  00                 	db	0
   198  007C1B  00                 	db	0
   199  007C1C  41                 	db	65
   200  007C1D  22                 	db	34
   201  007C1E  1C                 	db	28
   202  007C1F  00                 	db	0
   203  007C20  00                 	db	0
   204  007C21  00                 	db	0
   205  007C22  00                 	db	0
   206  007C23  00                 	db	0
   207  007C24  08                 	db	8
   208  007C25  2A                 	db	42
   209  007C26  1C                 	db	28
   210  007C27  2A                 	db	42
   211  007C28  08                 	db	8
   212  007C29  00                 	db	0
   213  007C2A  00                 	db	0
   214  007C2B  00                 	db	0
   215  007C2C  08                 	db	8
   216  007C2D  08                 	db	8
   217  007C2E  3E                 	db	62
   218  007C2F  08                 	db	8
   219  007C30  08                 	db	8
   220  007C31  00                 	db	0
   221  007C32  00                 	db	0
   222  007C33  00                 	db	0
   223  007C34  A0                 	db	160
   224  007C35  60                 	db	96
   225  007C36  00                 	db	0
   226  007C37  00                 	db	0
   227  007C38  00                 	db	0
   228  007C39  00                 	db	0
   229  007C3A  00                 	db	0
   230  007C3B  00                 	db	0
   231  007C3C  08                 	db	8
   232  007C3D  08                 	db	8
   233  007C3E  08                 	db	8
   234  007C3F  08                 	db	8
   235  007C40  08                 	db	8
   236  007C41  00                 	db	0
   237  007C42  00                 	db	0
   238  007C43  00                 	db	0
   239  007C44  60                 	db	96
   240  007C45  60                 	db	96
   241  007C46  00                 	db	0
   242  007C47  00                 	db	0
   243  007C48  00                 	db	0
   244  007C49  00                 	db	0
   245  007C4A  00                 	db	0
   246  007C4B  00                 	db	0
   247  007C4C  20                 	db	32
   248  007C4D  10                 	db	16
   249  007C4E  08                 	db	8
   250  007C4F  04                 	db	4
   251  007C50  02                 	db	2
   252  007C51  00                 	db	0
   253  007C52  00                 	db	0
   254  007C53  00                 	db	0
   255  007C54  3E                 	db	62
   256  007C55  51                 	db	81
   257  007C56  49                 	db	73
   258  007C57  45                 	db	69
   259  007C58  3E                 	db	62
   260  007C59  00                 	db	0
   261  007C5A  00                 	db	0
   262  007C5B  00                 	db	0
   263  007C5C  00                 	db	0
   264  007C5D  42                 	db	66
   265  007C5E  7F                 	db	127
   266  007C5F  40                 	db	64
   267  007C60  00                 	db	0
   268  007C61  00                 	db	0
   269  007C62  00                 	db	0
   270  007C63  00                 	db	0
   271  007C64  62                 	db	98
   272  007C65  51                 	db	81
   273  007C66  49                 	db	73
   274  007C67  49                 	db	73
   275  007C68  46                 	db	70
   276  007C69  00                 	db	0
   277  007C6A  00                 	db	0
   278  007C6B  00                 	db	0
   279  007C6C  22                 	db	34
   280  007C6D  41                 	db	65
   281  007C6E  49                 	db	73
   282  007C6F  49                 	db	73
   283  007C70  36                 	db	54
   284  007C71  00                 	db	0
   285  007C72  00                 	db	0
   286  007C73  00                 	db	0
   287  007C74  18                 	db	24
   288  007C75  14                 	db	20
   289  007C76  12                 	db	18
   290  007C77  7F                 	db	127
   291  007C78  10                 	db	16
   292  007C79  00                 	db	0
   293  007C7A  00                 	db	0
   294  007C7B  00                 	db	0
   295  007C7C  27                 	db	39
   296  007C7D  45                 	db	69
   297  007C7E  45                 	db	69
   298  007C7F  45                 	db	69
   299  007C80  39                 	db	57
   300  007C81  00                 	db	0
   301  007C82  00                 	db	0
   302  007C83  00                 	db	0
   303  007C84  3C                 	db	60
   304  007C85  4A                 	db	74
   305  007C86  49                 	db	73
   306  007C87  49                 	db	73
   307  007C88  30                 	db	48
   308  007C89  00                 	db	0
   309  007C8A  00                 	db	0
   310  007C8B  00                 	db	0
   311  007C8C  01                 	db	1
   312  007C8D  71                 	db	113
   313  007C8E  09                 	db	9
   314  007C8F  05                 	db	5
   315  007C90  03                 	db	3
   316  007C91  00                 	db	0
   317  007C92  00                 	db	0
   318  007C93  00                 	db	0
   319  007C94  36                 	db	54
   320  007C95  49                 	db	73
   321  007C96  49                 	db	73
   322  007C97  49                 	db	73
   323  007C98  36                 	db	54
   324  007C99  00                 	db	0
   325  007C9A  00                 	db	0
   326  007C9B  00                 	db	0
   327  007C9C  06                 	db	6
   328  007C9D  49                 	db	73
   329  007C9E  49                 	db	73
   330  007C9F  29                 	db	41
   331  007CA0  1E                 	db	30
   332  007CA1  00                 	db	0
   333  007CA2  00                 	db	0
   334  007CA3  00                 	db	0
   335  007CA4  00                 	db	0
   336  007CA5  36                 	db	54
   337  007CA6  36                 	db	54
   338  007CA7  00                 	db	0
   339  007CA8  00                 	db	0
   340  007CA9  00                 	db	0
   341  007CAA  00                 	db	0
   342  007CAB  00                 	db	0
   343  007CAC  00                 	db	0
   344  007CAD  AC                 	db	172
   345  007CAE  6C                 	db	108
   346  007CAF  00                 	db	0
   347  007CB0  00                 	db	0
   348  007CB1  00                 	db	0
   349  007CB2  00                 	db	0
   350  007CB3  00                 	db	0
   351  007CB4  08                 	db	8
   352  007CB5  14                 	db	20
   353  007CB6  22                 	db	34
   354  007CB7  41                 	db	65
   355  007CB8  00                 	db	0
   356  007CB9  00                 	db	0
   357  007CBA  00                 	db	0
   358  007CBB  00                 	db	0
   359  007CBC  14                 	db	20
   360  007CBD  14                 	db	20
   361  007CBE  14                 	db	20
   362  007CBF  14                 	db	20
   363  007CC0  14                 	db	20
   364  007CC1  00                 	db	0
   365  007CC2  00                 	db	0
   366  007CC3  00                 	db	0
   367  007CC4  41                 	db	65
   368  007CC5  22                 	db	34
   369  007CC6  14                 	db	20
   370  007CC7  08                 	db	8
   371  007CC8  00                 	db	0
   372  007CC9  00                 	db	0
   373  007CCA  00                 	db	0
   374  007CCB  00                 	db	0
   375  007CCC  02                 	db	2
   376  007CCD  01                 	db	1
   377  007CCE  51                 	db	81
   378  007CCF  09                 	db	9
   379  007CD0  06                 	db	6
   380  007CD1  00                 	db	0
   381  007CD2  00                 	db	0
   382  007CD3  00                 	db	0
   383  007CD4  32                 	db	50
   384  007CD5  49                 	db	73
   385  007CD6  79                 	db	121
   386  007CD7  41                 	db	65
   387  007CD8  3E                 	db	62
   388  007CD9  00                 	db	0
   389  007CDA  00                 	db	0
   390  007CDB  00                 	db	0
   391  007CDC  7E                 	db	126
   392  007CDD  09                 	db	9
   393  007CDE  09                 	db	9
   394  007CDF  09                 	db	9
   395  007CE0  7E                 	db	126
   396  007CE1  00                 	db	0
   397  007CE2  00                 	db	0
   398  007CE3  00                 	db	0
   399  007CE4  7F                 	db	127
   400  007CE5  49                 	db	73
   401  007CE6  49                 	db	73
   402  007CE7  49                 	db	73
   403  007CE8  36                 	db	54
   404  007CE9  00                 	db	0
   405  007CEA  00                 	db	0
   406  007CEB  00                 	db	0
   407  007CEC  3E                 	db	62
   408  007CED  41                 	db	65
   409  007CEE  41                 	db	65
   410  007CEF  41                 	db	65
   411  007CF0  22                 	db	34
   412  007CF1  00                 	db	0
   413  007CF2  00                 	db	0
   414  007CF3  00                 	db	0
   415  007CF4  7F                 	db	127
   416  007CF5  41                 	db	65
   417  007CF6  41                 	db	65
   418  007CF7  22                 	db	34
   419  007CF8  1C                 	db	28
   420  007CF9  00                 	db	0
   421  007CFA  00                 	db	0
   422  007CFB  00                 	db	0
   423  007CFC  7F                 	db	127
   424  007CFD  49                 	db	73
   425  007CFE  49                 	db	73
   426  007CFF  49                 	db	73
   427  007D00  41                 	db	65
   428  007D01  00                 	db	0
   429  007D02  00                 	db	0
   430  007D03  00                 	db	0
   431  007D04  7F                 	db	127
   432  007D05  09                 	db	9
   433  007D06  09                 	db	9
   434  007D07  09                 	db	9
   435  007D08  01                 	db	1
   436  007D09  00                 	db	0
   437  007D0A  00                 	db	0
   438  007D0B  00                 	db	0
   439  007D0C  3E                 	db	62
   440  007D0D  41                 	db	65
   441  007D0E  41                 	db	65
   442  007D0F  51                 	db	81
   443  007D10  72                 	db	114
   444  007D11  00                 	db	0
   445  007D12  00                 	db	0
   446  007D13  00                 	db	0
   447  007D14  7F                 	db	127
   448  007D15  08                 	db	8
   449  007D16  08                 	db	8
   450  007D17  08                 	db	8
   451  007D18  7F                 	db	127
   452  007D19  00                 	db	0
   453  007D1A  00                 	db	0
   454  007D1B  00                 	db	0
   455  007D1C  41                 	db	65
   456  007D1D  7F                 	db	127
   457  007D1E  41                 	db	65
   458  007D1F  00                 	db	0
   459  007D20  00                 	db	0
   460  007D21  00                 	db	0
   461  007D22  00                 	db	0
   462  007D23  00                 	db	0
   463  007D24  20                 	db	32
   464  007D25  40                 	db	64
   465  007D26  41                 	db	65
   466  007D27  3F                 	db	63
   467  007D28  01                 	db	1
   468  007D29  00                 	db	0
   469  007D2A  00                 	db	0
   470  007D2B  00                 	db	0
   471  007D2C  7F                 	db	127
   472  007D2D  08                 	db	8
   473  007D2E  14                 	db	20
   474  007D2F  22                 	db	34
   475  007D30  41                 	db	65
   476  007D31  00                 	db	0
   477  007D32  00                 	db	0
   478  007D33  00                 	db	0
   479  007D34  7F                 	db	127
   480  007D35  40                 	db	64
   481  007D36  40                 	db	64
   482  007D37  40                 	db	64
   483  007D38  40                 	db	64
   484  007D39  00                 	db	0
   485  007D3A  00                 	db	0
   486  007D3B  00                 	db	0
   487  007D3C  7F                 	db	127
   488  007D3D  02                 	db	2
   489  007D3E  0C                 	db	12
   490  007D3F  02                 	db	2
   491  007D40  7F                 	db	127
   492  007D41  00                 	db	0
   493  007D42  00                 	db	0
   494  007D43  00                 	db	0
   495  007D44  7F                 	db	127
   496  007D45  04                 	db	4
   497  007D46  08                 	db	8
   498  007D47  10                 	db	16
   499  007D48  7F                 	db	127
   500  007D49  00                 	db	0
   501  007D4A  00                 	db	0
   502  007D4B  00                 	db	0
   503  007D4C  3E                 	db	62
   504  007D4D  41                 	db	65
   505  007D4E  41                 	db	65
   506  007D4F  41                 	db	65
   507  007D50  3E                 	db	62
   508  007D51  00                 	db	0
   509  007D52  00                 	db	0
   510  007D53  00                 	db	0
   511  007D54  7F                 	db	127
   512  007D55  09                 	db	9
   513  007D56  09                 	db	9
   514  007D57  09                 	db	9
   515  007D58  06                 	db	6
   516  007D59  00                 	db	0
   517  007D5A  00                 	db	0
   518  007D5B  00                 	db	0
   519  007D5C  3E                 	db	62
   520  007D5D  41                 	db	65
   521  007D5E  51                 	db	81
   522  007D5F  21                 	db	33
   523  007D60  5E                 	db	94
   524  007D61  00                 	db	0
   525  007D62  00                 	db	0
   526  007D63  00                 	db	0
   527  007D64  7F                 	db	127
   528  007D65  09                 	db	9
   529  007D66  19                 	db	25
   530  007D67  29                 	db	41
   531  007D68  46                 	db	70
   532  007D69  00                 	db	0
   533  007D6A  00                 	db	0
   534  007D6B  00                 	db	0
   535  007D6C  26                 	db	38
   536  007D6D  49                 	db	73
   537  007D6E  49                 	db	73
   538  007D6F  49                 	db	73
   539  007D70  32                 	db	50
   540  007D71  00                 	db	0
   541  007D72  00                 	db	0
   542  007D73  00                 	db	0
   543  007D74  01                 	db	1
   544  007D75  01                 	db	1
   545  007D76  7F                 	db	127
   546  007D77  01                 	db	1
   547  007D78  01                 	db	1
   548  007D79  00                 	db	0
   549  007D7A  00                 	db	0
   550  007D7B  00                 	db	0
   551  007D7C  3F                 	db	63
   552  007D7D  40                 	db	64
   553  007D7E  40                 	db	64
   554  007D7F  40                 	db	64
   555  007D80  3F                 	db	63
   556  007D81  00                 	db	0
   557  007D82  00                 	db	0
   558  007D83  00                 	db	0
   559  007D84  1F                 	db	31
   560  007D85  20                 	db	32
   561  007D86  40                 	db	64
   562  007D87  20                 	db	32
   563  007D88  1F                 	db	31
   564  007D89  00                 	db	0
   565  007D8A  00                 	db	0
   566  007D8B  00                 	db	0
   567  007D8C  3F                 	db	63
   568  007D8D  40                 	db	64
   569  007D8E  38                 	db	56
   570  007D8F  40                 	db	64
   571  007D90  3F                 	db	63
   572  007D91  00                 	db	0
   573  007D92  00                 	db	0
   574  007D93  00                 	db	0
   575  007D94  63                 	db	99
   576  007D95  14                 	db	20
   577  007D96  08                 	db	8
   578  007D97  14                 	db	20
   579  007D98  63                 	db	99
   580  007D99  00                 	db	0
   581  007D9A  00                 	db	0
   582  007D9B  00                 	db	0
   583  007D9C  03                 	db	3
   584  007D9D  04                 	db	4
   585  007D9E  78                 	db	120
   586  007D9F  04                 	db	4
   587  007DA0  03                 	db	3
   588  007DA1  00                 	db	0
   589  007DA2  00                 	db	0
   590  007DA3  00                 	db	0
   591  007DA4  61                 	db	97
   592  007DA5  51                 	db	81
   593  007DA6  49                 	db	73
   594  007DA7  45                 	db	69
   595  007DA8  43                 	db	67
   596  007DA9  00                 	db	0
   597  007DAA  00                 	db	0
   598  007DAB  00                 	db	0
   599  007DAC  7F                 	db	127
   600  007DAD  41                 	db	65
   601  007DAE  41                 	db	65
   602  007DAF  00                 	db	0
   603  007DB0  00                 	db	0
   604  007DB1  00                 	db	0
   605  007DB2  00                 	db	0
   606  007DB3  00                 	db	0
   607  007DB4  02                 	db	2
   608  007DB5  04                 	db	4
   609  007DB6  08                 	db	8
   610  007DB7  10                 	db	16
   611  007DB8  20                 	db	32
   612  007DB9  00                 	db	0
   613  007DBA  00                 	db	0
   614  007DBB  00                 	db	0
   615  007DBC  41                 	db	65
   616  007DBD  41                 	db	65
   617  007DBE  7F                 	db	127
   618  007DBF  00                 	db	0
   619  007DC0  00                 	db	0
   620  007DC1  00                 	db	0
   621  007DC2  00                 	db	0
   622  007DC3  00                 	db	0
   623  007DC4  04                 	db	4
   624  007DC5  02                 	db	2
   625  007DC6  01                 	db	1
   626  007DC7  02                 	db	2
   627  007DC8  04                 	db	4
   628  007DC9  00                 	db	0
   629  007DCA  00                 	db	0
   630  007DCB  00                 	db	0
   631  007DCC  80                 	db	128
   632  007DCD  80                 	db	128
   633  007DCE  80                 	db	128
   634  007DCF  80                 	db	128
   635  007DD0  80                 	db	128
   636  007DD1  00                 	db	0
   637  007DD2  00                 	db	0
   638  007DD3  00                 	db	0
   639  007DD4  01                 	db	1
   640  007DD5  02                 	db	2
   641  007DD6  04                 	db	4
   642  007DD7  00                 	db	0
   643  007DD8  00                 	db	0
   644  007DD9  00                 	db	0
   645  007DDA  00                 	db	0
   646  007DDB  00                 	db	0
   647  007DDC  20                 	db	32
   648  007DDD  54                 	db	84
   649  007DDE  54                 	db	84
   650  007DDF  54                 	db	84
   651  007DE0  78                 	db	120
   652  007DE1  00                 	db	0
   653  007DE2  00                 	db	0
   654  007DE3  00                 	db	0
   655  007DE4  7F                 	db	127
   656  007DE5  48                 	db	72
   657  007DE6  44                 	db	68
   658  007DE7  44                 	db	68
   659  007DE8  38                 	db	56
   660  007DE9  00                 	db	0
   661  007DEA  00                 	db	0
   662  007DEB  00                 	db	0
   663  007DEC  38                 	db	56
   664  007DED  44                 	db	68
   665  007DEE  44                 	db	68
   666  007DEF  28                 	db	40
   667  007DF0  00                 	db	0
   668  007DF1  00                 	db	0
   669  007DF2  00                 	db	0
   670  007DF3  00                 	db	0
   671  007DF4  38                 	db	56
   672  007DF5  44                 	db	68
   673  007DF6  44                 	db	68
   674  007DF7  48                 	db	72
   675  007DF8  7F                 	db	127
   676  007DF9  00                 	db	0
   677  007DFA  00                 	db	0
   678  007DFB  00                 	db	0
   679  007DFC  38                 	db	56
   680  007DFD  54                 	db	84
   681  007DFE  54                 	db	84
   682  007DFF  54                 	db	84
   683  007E00  18                 	db	24
   684  007E01  00                 	db	0
   685  007E02  00                 	db	0
   686  007E03  00                 	db	0
   687  007E04  08                 	db	8
   688  007E05  7E                 	db	126
   689  007E06  09                 	db	9
   690  007E07  02                 	db	2
   691  007E08  00                 	db	0
   692  007E09  00                 	db	0
   693  007E0A  00                 	db	0
   694  007E0B  00                 	db	0
   695  007E0C  18                 	db	24
   696  007E0D  A4                 	db	164
   697  007E0E  A4                 	db	164
   698  007E0F  A4                 	db	164
   699  007E10  7C                 	db	124
   700  007E11  00                 	db	0
   701  007E12  00                 	db	0
   702  007E13  00                 	db	0
   703  007E14  7F                 	db	127
   704  007E15  08                 	db	8
   705  007E16  04                 	db	4
   706  007E17  04                 	db	4
   707  007E18  78                 	db	120
   708  007E19  00                 	db	0
   709  007E1A  00                 	db	0
   710  007E1B  00                 	db	0
   711  007E1C  00                 	db	0
   712  007E1D  7D                 	db	125
   713  007E1E  00                 	db	0
   714  007E1F  00                 	db	0
   715  007E20  00                 	db	0
   716  007E21  00                 	db	0
   717  007E22  00                 	db	0
   718  007E23  00                 	db	0
   719  007E24  80                 	db	128
   720  007E25  84                 	db	132
   721  007E26  7D                 	db	125
   722  007E27  00                 	db	0
   723  007E28  00                 	db	0
   724  007E29  00                 	db	0
   725  007E2A  00                 	db	0
   726  007E2B  00                 	db	0
   727  007E2C  7F                 	db	127
   728  007E2D  10                 	db	16
   729  007E2E  28                 	db	40
   730  007E2F  44                 	db	68
   731  007E30  00                 	db	0
   732  007E31  00                 	db	0
   733  007E32  00                 	db	0
   734  007E33  00                 	db	0
   735  007E34  41                 	db	65
   736  007E35  7F                 	db	127
   737  007E36  40                 	db	64
   738  007E37  00                 	db	0
   739  007E38  00                 	db	0
   740  007E39  00                 	db	0
   741  007E3A  00                 	db	0
   742  007E3B  00                 	db	0
   743  007E3C  7C                 	db	124
   744  007E3D  04                 	db	4
   745  007E3E  18                 	db	24
   746  007E3F  04                 	db	4
   747  007E40  78                 	db	120
   748  007E41  00                 	db	0
   749  007E42  00                 	db	0
   750  007E43  00                 	db	0
   751  007E44  7C                 	db	124
   752  007E45  08                 	db	8
   753  007E46  04                 	db	4
   754  007E47  7C                 	db	124
   755  007E48  00                 	db	0
   756  007E49  00                 	db	0
   757  007E4A  00                 	db	0
   758  007E4B  00                 	db	0
   759  007E4C  38                 	db	56
   760  007E4D  44                 	db	68
   761  007E4E  44                 	db	68
   762  007E4F  38                 	db	56
   763  007E50  00                 	db	0
   764  007E51  00                 	db	0
   765  007E52  00                 	db	0
   766  007E53  00                 	db	0
   767  007E54  FC                 	db	252
   768  007E55  24                 	db	36
   769  007E56  24                 	db	36
   770  007E57  18                 	db	24
   771  007E58  00                 	db	0
   772  007E59  00                 	db	0
   773  007E5A  00                 	db	0
   774  007E5B  00                 	db	0
   775  007E5C  18                 	db	24
   776  007E5D  24                 	db	36
   777  007E5E  24                 	db	36
   778  007E5F  FC                 	db	252
   779  007E60  00                 	db	0
   780  007E61  00                 	db	0
   781  007E62  00                 	db	0
   782  007E63  00                 	db	0
   783  007E64  00                 	db	0
   784  007E65  7C                 	db	124
   785  007E66  08                 	db	8
   786  007E67  04                 	db	4
   787  007E68  00                 	db	0
   788  007E69  00                 	db	0
   789  007E6A  00                 	db	0
   790  007E6B  00                 	db	0
   791  007E6C  48                 	db	72
   792  007E6D  54                 	db	84
   793  007E6E  54                 	db	84
   794  007E6F  24                 	db	36
   795  007E70  00                 	db	0
   796  007E71  00                 	db	0
   797  007E72  00                 	db	0
   798  007E73  00                 	db	0
   799  007E74  04                 	db	4
   800  007E75  7F                 	db	127
   801  007E76  44                 	db	68
   802  007E77  00                 	db	0
   803  007E78  00                 	db	0
   804  007E79  00                 	db	0
   805  007E7A  00                 	db	0
   806  007E7B  00                 	db	0
   807  007E7C  3C                 	db	60
   808  007E7D  40                 	db	64
   809  007E7E  40                 	db	64
   810  007E7F  7C                 	db	124
   811  007E80  00                 	db	0
   812  007E81  00                 	db	0
   813  007E82  00                 	db	0
   814  007E83  00                 	db	0
   815  007E84  1C                 	db	28
   816  007E85  20                 	db	32
   817  007E86  40                 	db	64
   818  007E87  20                 	db	32
   819  007E88  1C                 	db	28
   820  007E89  00                 	db	0
   821  007E8A  00                 	db	0
   822  007E8B  00                 	db	0
   823  007E8C  3C                 	db	60
   824  007E8D  40                 	db	64
   825  007E8E  30                 	db	48
   826  007E8F  40                 	db	64
   827  007E90  3C                 	db	60
   828  007E91  00                 	db	0
   829  007E92  00                 	db	0
   830  007E93  00                 	db	0
   831  007E94  44                 	db	68
   832  007E95  28                 	db	40
   833  007E96  10                 	db	16
   834  007E97  28                 	db	40
   835  007E98  44                 	db	68
   836  007E99  00                 	db	0
   837  007E9A  00                 	db	0
   838  007E9B  00                 	db	0
   839  007E9C  1C                 	db	28
   840  007E9D  A0                 	db	160
   841  007E9E  A0                 	db	160
   842  007E9F  7C                 	db	124
   843  007EA0  00                 	db	0
   844  007EA1  00                 	db	0
   845  007EA2  00                 	db	0
   846  007EA3  00                 	db	0
   847  007EA4  44                 	db	68
   848  007EA5  64                 	db	100
   849  007EA6  54                 	db	84
   850  007EA7  4C                 	db	76
   851  007EA8  44                 	db	68
   852  007EA9  00                 	db	0
   853  007EAA  00                 	db	0
   854  007EAB  00                 	db	0
   855  007EAC  08                 	db	8
   856  007EAD  36                 	db	54
   857  007EAE  41                 	db	65
   858  007EAF  00                 	db	0
   859  007EB0  00                 	db	0
   860  007EB1  00                 	db	0
   861  007EB2  00                 	db	0
   862  007EB3  00                 	db	0
   863  007EB4  00                 	db	0
   864  007EB5  7F                 	db	127
   865  007EB6  00                 	db	0
   866  007EB7  00                 	db	0
   867  007EB8  00                 	db	0
   868  007EB9  00                 	db	0
   869  007EBA  00                 	db	0
   870  007EBB  00                 	db	0
   871  007EBC  41                 	db	65
   872  007EBD  36                 	db	54
   873  007EBE  08                 	db	8
   874  007EBF  00                 	db	0
   875  007EC0  00                 	db	0
   876  007EC1  00                 	db	0
   877  007EC2  00                 	db	0
   878  007EC3  00                 	db	0
   879  007EC4  02                 	db	2
   880  007EC5  01                 	db	1
   881  007EC6  01                 	db	1
   882  007EC7  02                 	db	2
   883  007EC8  01                 	db	1
   884  007EC9  00                 	db	0
   885  007ECA  00                 	db	0
   886  007ECB  00                 	db	0
   887  007ECC  02                 	db	2
   888  007ECD  05                 	db	5
   889  007ECE  05                 	db	5
   890  007ECF  02                 	db	2
   891  007ED0  00                 	db	0
   892  007ED1  00                 	db	0
   893  007ED2  00                 	db	0
   894  007ED3                     __end_of_OledFont:
   895                           	opt stack 0
   896  007ED3                     _picture:
   897                           	opt stack 0
   898  007ED3  00                 	db	0
   899  007ED4  00                 	db	0
   900  007ED5  00                 	db	0
   901  007ED6  00                 	db	0
   902  007ED7  00                 	db	0
   903  007ED8  00                 	db	0
   904  007ED9  00                 	db	0
   905  007EDA  00                 	db	0
   906  007EDB  00                 	db	0
   907  007EDC  00                 	db	0
   908  007EDD  00                 	db	0
   909  007EDE  00                 	db	0
   910  007EDF  00                 	db	0
   911  007EE0  00                 	db	0
   912  007EE1  00                 	db	0
   913  007EE2  00                 	db	0
   914  007EE3  3F                 	db	63
   915  007EE4  80                 	db	128
   916  007EE5  00                 	db	0
   917  007EE6  C0                 	db	192
   918  007EE7  00                 	db	0
   919  007EE8  7F                 	db	127
   920  007EE9  E0                 	db	224
   921  007EEA  00                 	db	0
   922  007EEB  30                 	db	48
   923  007EEC  00                 	db	0
   924  007EED  1F                 	db	31
   925  007EEE  FF                 	db	255
   926  007EEF  F8                 	db	248
   927  007EF0  03                 	db	3
   928  007EF1  FF                 	db	255
   929  007EF2  F8                 	db	248
   930  007EF3  24                 	db	36
   931  007EF4  80                 	db	128
   932  007EF5  00                 	db	0
   933  007EF6  A0                 	db	160
   934  007EF7  00                 	db	0
   935  007EF8  7F                 	db	127
   936  007EF9  E0                 	db	224
   937  007EFA  00                 	db	0
   938  007EFB  78                 	db	120
   939  007EFC  00                 	db	0
   940  007EFD  1F                 	db	31
   941  007EFE  FF                 	db	255
   942  007EFF  F8                 	db	248
   943  007F00  02                 	db	2
   944  007F01  00                 	db	0
   945  007F02  08                 	db	8
   946  007F03  15                 	db	21
   947  007F04  00                 	db	0
   948  007F05  02                 	db	2
   949  007F06  90                 	db	144
   950  007F07  00                 	db	0
   951  007F08  66                 	db	102
   952  007F09  60                 	db	96
   953  007F0A  60                 	db	96
   954  007F0B  FC                 	db	252
   955  007F0C  00                 	db	0
   956  007F0D  17                 	db	23
   957  007F0E  A3                 	db	163
   958  007F0F  18                 	db	24
   959  007F10  0E                 	db	14
   960  007F11  EE                 	db	238
   961  007F12  E8                 	db	232
   962  007F13  0E                 	db	14
   963  007F14  01                 	db	1
   964  007F15  01                 	db	1
   965  007F16  A0                 	db	160
   966  007F17  00                 	db	0
   967  007F18  66                 	db	102
   968  007F19  60                 	db	96
   969  007F1A  61                 	db	97
   970  007F1B  FE                 	db	254
   971  007F1C  00                 	db	0
   972  007F1D  13                 	db	19
   973  007F1E  2D                 	db	45
   974  007F1F  E8                 	db	232
   975  007F20  08                 	db	8
   976  007F21  EE                 	db	238
   977  007F22  E8                 	db	232
   978  007F23  04                 	db	4
   979  007F24  05                 	db	5
   980  007F25  00                 	db	0
   981  007F26  C0                 	db	192
   982  007F27  00                 	db	0
   983  007F28  66                 	db	102
   984  007F29  60                 	db	96
   985  007F2A  60                 	db	96
   986  007F2B  30                 	db	48
   987  007F2C  00                 	db	0
   988  007F2D  14                 	db	20
   989  007F2E  AD                 	db	173
   990  007F2F  E8                 	db	232
   991  007F30  08                 	db	8
   992  007F31  EE                 	db	238
   993  007F32  E8                 	db	232
   994  007F33  04                 	db	4
   995  007F34  15                 	db	21
   996  007F35  01                 	db	1
   997  007F36  A0                 	db	160
   998  007F37  00                 	db	0
   999  007F38  66                 	db	102
  1000  007F39  60                 	db	96
  1001  007F3A  60                 	db	96
  1002  007F3B  30                 	db	48
  1003  007F3C  00                 	db	0
  1004  007F3D  17                 	db	23
  1005  007F3E  AD                 	db	173
  1006  007F3F  98                 	db	152
  1007  007F40  08                 	db	8
  1008  007F41  EE                 	db	238
  1009  007F42  E8                 	db	232
  1010  007F43  04                 	db	4
  1011  007F44  55                 	db	85
  1012  007F45  02                 	db	2
  1013  007F46  90                 	db	144
  1014  007F47  00                 	db	0
  1015  007F48  66                 	db	102
  1016  007F49  60                 	db	96
  1017  007F4A  60                 	db	96
  1018  007F4B  30                 	db	48
  1019  007F4C  00                 	db	0
  1020  007F4D  17                 	db	23
  1021  007F4E  A3                 	db	163
  1022  007F4F  E8                 	db	232
  1023  007F50  08                 	db	8
  1024  007F51  EE                 	db	238
  1025  007F52  E8                 	db	232
  1026  007F53  05                 	db	5
  1027  007F54  55                 	db	85
  1028  007F55  00                 	db	0
  1029  007F56  A0                 	db	160
  1030  007F57  00                 	db	0
  1031  007F58  7F                 	db	127
  1032  007F59  E0                 	db	224
  1033  007F5A  60                 	db	96
  1034  007F5B  30                 	db	48
  1035  007F5C  00                 	db	0
  1036  007F5D  17                 	db	23
  1037  007F5E  AF                 	db	175
  1038  007F5F  E8                 	db	232
  1039  007F60  08                 	db	8
  1040  007F61  EE                 	db	238
  1041  007F62  E8                 	db	232
  1042  007F63  05                 	db	5
  1043  007F64  55                 	db	85
  1044  007F65  00                 	db	0
  1045  007F66  C0                 	db	192
  1046  007F67  00                 	db	0
  1047  007F68  7F                 	db	127
  1048  007F69  E0                 	db	224
  1049  007F6A  60                 	db	96
  1050  007F6B  30                 	db	48
  1051  007F6C  00                 	db	0
  1052  007F6D  17                 	db	23
  1053  007F6E  AF                 	db	175
  1054  007F6F  18                 	db	24
  1055  007F70  0E                 	db	14
  1056  007F71  EE                 	db	238
  1057  007F72  E8                 	db	232
  1058  007F73  00                 	db	0
  1059  007F74  00                 	db	0
  1060  007F75  00                 	db	0
  1061  007F76  00                 	db	0
  1062  007F77  00                 	db	0
  1063  007F78  00                 	db	0
  1064  007F79  03                 	db	3
  1065  007F7A  FC                 	db	252
  1066  007F7B  30                 	db	48
  1067  007F7C  00                 	db	0
  1068  007F7D  1F                 	db	31
  1069  007F7E  FF                 	db	255
  1070  007F7F  F8                 	db	248
  1071  007F80  02                 	db	2
  1072  007F81  00                 	db	0
  1073  007F82  08                 	db	8
  1074  007F83  00                 	db	0
  1075  007F84  00                 	db	0
  1076  007F85  00                 	db	0
  1077  007F86  00                 	db	0
  1078  007F87  00                 	db	0
  1079  007F88  00                 	db	0
  1080  007F89  01                 	db	1
  1081  007F8A  F8                 	db	248
  1082  007F8B  30                 	db	48
  1083  007F8C  00                 	db	0
  1084  007F8D  1F                 	db	31
  1085  007F8E  FF                 	db	255
  1086  007F8F  F8                 	db	248
  1087  007F90  03                 	db	3
  1088  007F91  FF                 	db	255
  1089  007F92  F8                 	db	248
  1090  007F93  00                 	db	0
  1091  007F94  00                 	db	0
  1092  007F95  00                 	db	0
  1093  007F96  00                 	db	0
  1094  007F97  00                 	db	0
  1095  007F98  00                 	db	0
  1096  007F99  00                 	db	0
  1097  007F9A  F0                 	db	240
  1098  007F9B  00                 	db	0
  1099  007F9C  00                 	db	0
  1100  007F9D  00                 	db	0
  1101  007F9E  00                 	db	0
  1102  007F9F  00                 	db	0
  1103  007FA0  00                 	db	0
  1104  007FA1  00                 	db	0
  1105  007FA2  00                 	db	0
  1106  007FA3  00                 	db	0
  1107  007FA4  00                 	db	0
  1108  007FA5  00                 	db	0
  1109  007FA6  00                 	db	0
  1110  007FA7  00                 	db	0
  1111  007FA8  00                 	db	0
  1112  007FA9  00                 	db	0
  1113  007FAA  60                 	db	96
  1114  007FAB  00                 	db	0
  1115  007FAC  00                 	db	0
  1116  007FAD  00                 	db	0
  1117  007FAE  00                 	db	0
  1118  007FAF  00                 	db	0
  1119  007FB0  00                 	db	0
  1120  007FB1  00                 	db	0
  1121  007FB2  00                 	db	0
  1122  007FB3  00                 	db	0
  1123  007FB4  00                 	db	0
  1124  007FB5  00                 	db	0
  1125  007FB6  00                 	db	0
  1126  007FB7  00                 	db	0
  1127  007FB8  00                 	db	0
  1128  007FB9  00                 	db	0
  1129  007FBA  00                 	db	0
  1130  007FBB  00                 	db	0
  1131  007FBC  00                 	db	0
  1132  007FBD  00                 	db	0
  1133  007FBE  00                 	db	0
  1134  007FBF  00                 	db	0
  1135  007FC0  00                 	db	0
  1136  007FC1  00                 	db	0
  1137  007FC2  00                 	db	0
  1138  007FC3  00                 	db	0
  1139  007FC4  00                 	db	0
  1140  007FC5  00                 	db	0
  1141  007FC6  00                 	db	0
  1142  007FC7  00                 	db	0
  1143  007FC8  00                 	db	0
  1144  007FC9  00                 	db	0
  1145  007FCA  00                 	db	0
  1146  007FCB  00                 	db	0
  1147  007FCC  00                 	db	0
  1148  007FCD  00                 	db	0
  1149  007FCE  00                 	db	0
  1150  007FCF  00                 	db	0
  1151  007FD0  00                 	db	0
  1152  007FD1  00                 	db	0
  1153  007FD2  00                 	db	0
  1154  007FD3  39                 	db	57
  1155  007FD4  80                 	db	128
  1156  007FD5  00                 	db	0
  1157  007FD6  00                 	db	0
  1158  007FD7  00                 	db	0
  1159  007FD8  00                 	db	0
  1160  007FD9  00                 	db	0
  1161  007FDA  00                 	db	0
  1162  007FDB  00                 	db	0
  1163  007FDC  00                 	db	0
  1164  007FDD  00                 	db	0
  1165  007FDE  00                 	db	0
  1166  007FDF  00                 	db	0
  1167  007FE0  00                 	db	0
  1168  007FE1  00                 	db	0
  1169  007FE2  00                 	db	0
  1170  007FE3                     __end_of_picture:
  1171                           	opt stack 0
  1172  007FE3                     STR_1:
  1173  007FE3  55                 	db	85	;'U'
  1174  007FE4  6E                 	db	110	;'n'
  1175  007FE5  69                 	db	105	;'i'
  1176  007FE6  76                 	db	118	;'v'
  1177  007FE7  65                 	db	101	;'e'
  1178  007FE8  72                 	db	114	;'r'
  1179  007FE9  73                 	db	115	;'s'
  1180  007FEA  69                 	db	105	;'i'
  1181  007FEB  74                 	db	116	;'t'
  1182  007FEC  79                 	db	121	;'y'
  1183  007FED  00                 	db	0
  1184  007FEE                     STR_4:
  1185  007FEE  5A                 	db	90	;'Z'
  1186  007FEF  49                 	db	73	;'I'
  1187  007FF0  50                 	db	80	;'P'
  1188  007FF1  53                 	db	83	;'S'
  1189  007FF2  2D                 	db	45
  1190  007FF3  45                 	db	69	;'E'
  1191  007FF4  56                 	db	86	;'V'
  1192  007FF5  00                 	db	0
  1193  007FF6                     STR_3:
  1194  007FF6  41                 	db	65	;'A'
  1195  007FF7  6B                 	db	107	;'k'
  1196  007FF8  72                 	db	114	;'r'
  1197  007FF9  6F                 	db	111	;'o'
  1198  007FFA  6E                 	db	110	;'n'
  1199  007FFB  00                 	db	0
  1200  007FFC                     STR_2:
  1201  007FFC  4F                 	db	79	;'O'
  1202  007FFD  46                 	db	70	;'F'
  1203  007FFE  00                 	db	0
  1204                           
  1205                           ; #config settings
  1206  007FFF  00                 	db	0	; dummy byte at the end
  1207  0000                     
  1208                           	psect	nvCOMRAM
  1209  000042                     __pnvCOMRAM:
  1210                           	opt stack 0
  1211  000042                     _timer0ReloadVal16bit:
  1212                           	opt stack 0
  1213  000042                     	ds	2
  1214                           
  1215                           	psect	nvBANK0
  1216  0000FE                     __pnvBANK0:
  1217                           	opt stack 0
  1218  0000FE                     _TMR2_InterruptHandler:
  1219                           	opt stack 0
  1220  0000FE                     	ds	2
  1221  0000                     _ANSELA	set	3896
  1222  0000                     _ANSELB	set	3897
  1223  0000                     _ANSELC	set	3898
  1224  0000                     _ANSELD	set	3899
  1225  0000                     _ANSELE	set	3900
  1226  0000                     _ADCON0	set	4034
  1227  0000                     _ADCON0bits	set	4034
  1228  0000                     _ADCON1	set	4033
  1229  0000                     _ADCON2	set	4032
  1230  0000                     _ADRESH	set	4036
  1231  0000                     _ADRESL	set	4035
  1232  0000                     _BAUD1CON	set	4024
  1233  0000                     _INTCON2bits	set	4081
  1234  0000                     _INTCONbits	set	4082
  1235  0000                     _IPR1bits	set	3999
  1236  0000                     _IPR2bits	set	4002
  1237  0000                     _LATA	set	3977
  1238  0000                     _LATB	set	3978
  1239  0000                     _LATC	set	3979
  1240  0000                     _LATCbits	set	3979
  1241  0000                     _LATD	set	3980
  1242  0000                     _LATE	set	3981
  1243  0000                     _OSCCON	set	4051
  1244  0000                     _OSCCON2	set	4050
  1245  0000                     _OSCTUNE	set	3995
  1246  0000                     _PIE1bits	set	3997
  1247  0000                     _PIE2bits	set	4000
  1248  0000                     _PIR1bits	set	3998
  1249  0000                     _PIR2bits	set	4001
  1250  0000                     _PORTAbits	set	3968
  1251  0000                     _PORTBbits	set	3969
  1252  0000                     _PORTDbits	set	3971
  1253  0000                     _PR2	set	4027
  1254  0000                     _RC1STA	set	4011
  1255  0000                     _RC1STAbits	set	4011
  1256  0000                     _RCONbits	set	4048
  1257  0000                     _RCREG1	set	4014
  1258  0000                     _SPBRG1	set	4015
  1259  0000                     _SPBRGH1	set	4016
  1260  0000                     _SSP1ADD	set	4040
  1261  0000                     _SSP1BUF	set	4041
  1262  0000                     _SSP1CON1	set	4038
  1263  0000                     _SSP1CON1bits	set	4038
  1264  0000                     _SSP1CON2bits	set	4037
  1265  0000                     _SSP1CON3	set	4043
  1266  0000                     _SSP1STAT	set	4039
  1267  0000                     _T0CON	set	4053
  1268  0000                     _T0CONbits	set	4053
  1269  0000                     _T2CON	set	4026
  1270  0000                     _T2CONbits	set	4026
  1271  0000                     _TMR0H	set	4055
  1272  0000                     _TMR0L	set	4054
  1273  0000                     _TMR2	set	4028
  1274  0000                     _TRISA	set	3986
  1275  0000                     _TRISAbits	set	3986
  1276  0000                     _TRISB	set	3987
  1277  0000                     _TRISC	set	3988
  1278  0000                     _TRISCbits	set	3988
  1279  0000                     _TRISD	set	3989
  1280  0000                     _TRISE	set	3990
  1281  0000                     _TX1STA	set	4012
  1282  0000                     _TXREG1	set	4013
  1283  0000                     _WPUB	set	3937
  1284  0000                     _LATA3	set	31819
  1285  0000                     _LATA6	set	31822
  1286  0000                     _LATA7	set	31823
  1287  0000                     _LATC1	set	31833
  1288  0000                     _LATE0	set	31848
  1289  0000                     _LATE1	set	31849
  1290  0000                     _LATE2	set	31850
  1291                           
  1292                           	psect	cinit
  1293  002848                     __pcinit:
  1294                           	opt stack 0
  1295  002848                     start_initialization:
  1296                           	opt stack 0
  1297  002848                     __initialization:
  1298                           	opt stack 0
  1299                           
  1300                           ; Clear objects allocated to BANK5 (206 bytes)
  1301  002848  EE05  F000         	lfsr	0,__pbssBANK5
  1302  00284C  0ECE               	movlw	206
  1303  00284E                     clear_0:
  1304  00284E  6AEE               	clrf	postinc0,c
  1305  002850  06E8               	decf	wreg,f,c
  1306  002852  E1FD               	bnz	clear_0
  1307                           
  1308                           ; Clear objects allocated to BANK4 (206 bytes)
  1309  002854  EE04  F000         	lfsr	0,__pbssBANK4
  1310  002858  0ECE               	movlw	206
  1311  00285A                     clear_1:
  1312  00285A  6AEE               	clrf	postinc0,c
  1313  00285C  06E8               	decf	wreg,f,c
  1314  00285E  E1FD               	bnz	clear_1
  1315                           
  1316                           ; Clear objects allocated to BANK3 (200 bytes)
  1317  002860  EE03  F000         	lfsr	0,__pbssBANK3
  1318  002864  0EC8               	movlw	200
  1319  002866                     clear_2:
  1320  002866  6AEE               	clrf	postinc0,c
  1321  002868  06E8               	decf	wreg,f,c
  1322  00286A  E1FD               	bnz	clear_2
  1323                           
  1324                           ; Clear objects allocated to BANK2 (206 bytes)
  1325  00286C  EE02  F000         	lfsr	0,__pbssBANK2
  1326  002870  0ECE               	movlw	206
  1327  002872                     clear_3:
  1328  002872  6AEE               	clrf	postinc0,c
  1329  002874  06E8               	decf	wreg,f,c
  1330  002876  E1FD               	bnz	clear_3
  1331                           
  1332                           ; Clear objects allocated to BANK1 (57 bytes)
  1333  002878  EE01  F000         	lfsr	0,__pbssBANK1
  1334  00287C  0E39               	movlw	57
  1335  00287E                     clear_4:
  1336  00287E  6AEE               	clrf	postinc0,c
  1337  002880  06E8               	decf	wreg,f,c
  1338  002882  E1FD               	bnz	clear_4
  1339                           
  1340                           ; Clear objects allocated to BANK0 (146 bytes)
  1341  002884  EE00  F060         	lfsr	0,__pbssBANK0
  1342  002888  0E92               	movlw	146
  1343  00288A                     clear_5:
  1344  00288A  6AEE               	clrf	postinc0,c
  1345  00288C  06E8               	decf	wreg,f,c
  1346  00288E  E1FD               	bnz	clear_5
  1347                           
  1348                           ; Clear objects allocated to COMRAM (23 bytes)
  1349  002890  EE00  F02B         	lfsr	0,__pbssCOMRAM
  1350  002894  0E17               	movlw	23
  1351  002896                     clear_6:
  1352  002896  6AEE               	clrf	postinc0,c
  1353  002898  06E8               	decf	wreg,f,c
  1354  00289A  E1FD               	bnz	clear_6
  1355                           
  1356                           ; Initialize objects allocated to COMRAM (1 bytes)
  1357                           ; load TBLPTR registers with __pidataCOMRAM
  1358  00289C  0EEC               	movlw	low __pidataCOMRAM
  1359  00289E  6EF6               	movwf	tblptrl,c
  1360  0028A0  0E31               	movlw	high __pidataCOMRAM
  1361  0028A2  6EF7               	movwf	tblptrh,c
  1362  0028A4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1363  0028A6  6EF8               	movwf	tblptru,c
  1364  0028A8  0009               	tblrd		*+	;fetch initializer
  1365  0028AA  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1366  0028AE                     end_of_initialization:
  1367                           	opt stack 0
  1368  0028AE                     __end_of__initialization:
  1369                           	opt stack 0
  1370  0028AE  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1371  0028B0  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1372  0028B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1373  0028B4  6EF8               	movwf	tblptru,c
  1374  0028B6  0100               	movlb	0
  1375  0028B8  EFA4  F010         	goto	_main	;jump to C main() function
  1376                           tblptru	equ	0xFF8
  1377                           tblptrh	equ	0xFF7
  1378                           tblptrl	equ	0xFF6
  1379                           tablat	equ	0xFF5
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           
  1383                           	psect	bssCOMRAM
  1384  00002B                     __pbssCOMRAM:
  1385                           	opt stack 0
  1386  00002B                     _group:
  1387                           	opt stack 0
  1388  00002B                     	ds	2
  1389  00002D                     _p_i2c1_trb_current:
  1390                           	opt stack 0
  1391  00002D                     	ds	2
  1392  00002F                     _serial_available:
  1393                           	opt stack 0
  1394  00002F                     	ds	2
  1395  000031                     _serial_read:
  1396                           	opt stack 0
  1397  000031                     	ds	2
  1398  000033                     _serial_write:
  1399                           	opt stack 0
  1400  000033                     	ds	2
  1401  000035                     I2C1_ISR@i2c_10bit_address_restart:
  1402                           	opt stack 0
  1403  000035                     	ds	1
  1404  000036                     _AKNAKsend:
  1405                           	opt stack 0
  1406  000036                     	ds	1
  1407  000037                     _calc_CS:
  1408                           	opt stack 0
  1409  000037                     	ds	1
  1410  000038                     _i2c1_state:
  1411                           	opt stack 0
  1412  000038                     	ds	1
  1413  000039                     _maxDataAddress:
  1414                           	opt stack 0
  1415  000039                     	ds	1
  1416  00003A                     _moduleAddress:
  1417                           	opt stack 0
  1418  00003A                     	ds	1
  1419  00003B                     _returnAddress:
  1420                           	opt stack 0
  1421  00003B                     	ds	1
  1422  00003C                     _rx_address:
  1423                           	opt stack 0
  1424  00003C                     	ds	1
  1425  00003D                     _rx_array_inx:
  1426                           	opt stack 0
  1427  00003D                     	ds	1
  1428  00003E                     _rx_len:
  1429                           	opt stack 0
  1430  00003E                     	ds	1
  1431  00003F                     _time:
  1432                           	opt stack 0
  1433  00003F                     	ds	1
  1434  000040                     I2C1_ISR@i2c_address:
  1435                           	opt stack 0
  1436  000040                     	ds	2
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           
  1444                           	psect	dataCOMRAM
  1445  000044                     __pdataCOMRAM:
  1446                           	opt stack 0
  1447  000044                     _Transmit_stall:
  1448                           	opt stack 0
  1449  000044                     	ds	1
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           
  1457                           	psect	bssBANK0
  1458  000060                     __pbssBANK0:
  1459                           	opt stack 0
  1460  000060                     _displaybuffer:
  1461                           	opt stack 0
  1462  000060                     	ds	40
  1463  000088                     _LED_array:
  1464                           	opt stack 0
  1465  000088                     	ds	16
  1466  000098                     _LEDNUM_ENAB:
  1467                           	opt stack 0
  1468  000098                     	ds	12
  1469  0000A4                     _LEDState:
  1470                           	opt stack 0
  1471  0000A4                     	ds	12
  1472  0000B0                     _butnarray:
  1473                           	opt stack 0
  1474  0000B0                     	ds	8
  1475  0000B8                     _i2c1_object:
  1476                           	opt stack 0
  1477  0000B8                     	ds	7
  1478  0000BF                     I2C1_ISR@i2c_bytes_left:
  1479                           	opt stack 0
  1480  0000BF                     	ds	2
  1481  0000C1                     I2C1_ISR@pi2c_buf_ptr:
  1482                           	opt stack 0
  1483  0000C1                     	ds	2
  1484  0000C3                     _DataBarGraphA:
  1485                           	opt stack 0
  1486  0000C3                     	ds	2
  1487  0000C5                     _DataBarGraphB:
  1488                           	opt stack 0
  1489  0000C5                     	ds	2
  1490  0000C7                     _addressErrorCounter:
  1491                           	opt stack 0
  1492  0000C7                     	ds	2
  1493  0000C9                     _alignErrorCounter:
  1494                           	opt stack 0
  1495  0000C9                     	ds	2
  1496  0000CB                     _crcErrorCounter:
  1497                           	opt stack 0
  1498  0000CB                     	ds	2
  1499  0000CD                     _dataAdressErrorCounter:
  1500                           	opt stack 0
  1501  0000CD                     	ds	2
  1502  0000CF                     _i:
  1503                           	opt stack 0
  1504  0000CF                     	ds	2
  1505  0000D1                     _i2c1_trb_count:
  1506                           	opt stack 0
  1507  0000D1                     	ds	2
  1508  0000D3                     _k:
  1509                           	opt stack 0
  1510  0000D3                     	ds	2
  1511  0000D5                     _p_i2c1_current:
  1512                           	opt stack 0
  1513  0000D5                     	ds	2
  1514  0000D7                     _receiveArrayAddress:
  1515                           	opt stack 0
  1516  0000D7                     	ds	2
  1517  0000D9                     _sendStructAddress:
  1518                           	opt stack 0
  1519  0000D9                     	ds	2
  1520  0000DB                     _serial_peek:
  1521                           	opt stack 0
  1522  0000DB                     	ds	2
  1523  0000DD                     _timeOut:
  1524                           	opt stack 0
  1525  0000DD                     	ds	2
  1526  0000DF                     handleIndicators@oldIndicators:
  1527                           	opt stack 0
  1528  0000DF                     	ds	2
  1529  0000E1                     I2C1_MasterRead@trBlock:
  1530                           	opt stack 0
  1531  0000E1                     	ds	5
  1532  0000E6                     I2C1_MasterWrite@trBlock:
  1533                           	opt stack 0
  1534  0000E6                     	ds	5
  1535  0000EB                     _i2c1_tr_queue:
  1536                           	opt stack 0
  1537  0000EB                     	ds	5
  1538  0000F0                     _Buff:
  1539                           	opt stack 0
  1540  0000F0                     	ds	2
  1541                           tblptru	equ	0xFF8
  1542                           tblptrh	equ	0xFF7
  1543                           tblptrl	equ	0xFF6
  1544                           tablat	equ	0xFF5
  1545                           postinc0	equ	0xFEE
  1546                           wreg	equ	0xFE8
  1547                           
  1548                           	psect	bssBANK1
  1549  000100                     __pbssBANK1:
  1550                           	opt stack 0
  1551  000100                     _receiveArray:
  1552                           	opt stack 0
  1553  000100                     	ds	40
  1554  000128                     _crc_buffer:
  1555                           	opt stack 0
  1556  000128                     	ds	17
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           
  1564                           	psect	bssBANK2
  1565  000200                     __pbssBANK2:
  1566                           	opt stack 0
  1567  000200                     _ring_buffer:
  1568                           	opt stack 0
  1569  000200                     	ds	206
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           
  1577                           	psect	bssBANK3
  1578  000300                     __pbssBANK3:
  1579                           	opt stack 0
  1580  000300                     _rx_buffer:
  1581                           	opt stack 0
  1582  000300                     	ds	200
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           postinc0	equ	0xFEE
  1588                           wreg	equ	0xFE8
  1589                           
  1590                           	psect	bssBANK4
  1591  000400                     __pbssBANK4:
  1592                           	opt stack 0
  1593  000400                     _input_buffer:
  1594                           	opt stack 0
  1595  000400                     	ds	206
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           
  1603                           	psect	bssBANK5
  1604  000500                     __pbssBANK5:
  1605                           	opt stack 0
  1606  000500                     _output_buffer:
  1607                           	opt stack 0
  1608  000500                     	ds	206
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           postinc0	equ	0xFEE
  1614                           wreg	equ	0xFE8
  1615                           
  1616                           	psect	cstackBANK1
  1617  000139                     __pcstackBANK1:
  1618                           	opt stack 0
  1619  000139                     ??_LEDsetBar:
  1620  000139                     ??_receiveData:
  1621  000139                     LEDBsetBrightness@writeBuffer:
  1622                           	opt stack 0
  1623  000139                     LEDblinkRate@writeBuffer:
  1624                           	opt stack 0
  1625  000139                     begin@ptr:
  1626                           	opt stack 0
  1627  000139                     oledPutChar@bytes:
  1628                           	opt stack 0
  1629  000139                     LEDwriteDisplay@writeBuffer:
  1630                           	opt stack 0
  1631                           
  1632                           ; 20 bytes @ 0x0
  1633  000139                     	ds	2
  1634  00013B                     begin@maxSize:
  1635                           	opt stack 0
  1636  00013B                     LEDBsetBrightness@timeOut:
  1637                           	opt stack 0
  1638  00013B                     LEDblinkRate@timeOut:
  1639                           	opt stack 0
  1640                           
  1641                           ; 2 bytes @ 0x2
  1642  00013B                     	ds	1
  1643  00013C                     begin@givenAddress:
  1644                           	opt stack 0
  1645                           
  1646                           ; 1 bytes @ 0x3
  1647  00013C                     	ds	1
  1648  00013D                     LEDBsetBrightness@status:
  1649                           	opt stack 0
  1650  00013D                     LEDblinkRate@status:
  1651                           	opt stack 0
  1652  00013D                     begin@error:
  1653                           	opt stack 0
  1654                           
  1655                           ; 1 bytes @ 0x4
  1656  00013D                     	ds	1
  1657  00013E                     begin@stufftosend:
  1658                           	opt stack 0
  1659  00013E                     LEDbegin@writeBuffer:
  1660                           	opt stack 0
  1661                           
  1662                           ; 3 bytes @ 0x5
  1663  00013E                     	ds	1
  1664  00013F                     receiveData@holder:
  1665                           	opt stack 0
  1666                           
  1667                           ; 3 bytes @ 0x6
  1668  00013F                     	ds	1
  1669  000140                     begin@stufftoreceive:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x7
  1673  000140                     	ds	1
  1674  000141                     LEDbegin@timeOut:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x8
  1678  000141                     	ds	1
  1679  000142                     begin@stuffavailable:
  1680                           	opt stack 0
  1681  000142                     oledPutChar@base:
  1682                           	opt stack 0
  1683  000142                     receiveData@holder_2468:
  1684                           	opt stack 0
  1685                           
  1686                           ; 3 bytes @ 0x9
  1687  000142                     	ds	1
  1688  000143                     LEDbegin@i2c_addr:
  1689                           	opt stack 0
  1690                           
  1691                           ; 1 bytes @ 0xA
  1692  000143                     	ds	1
  1693  000144                     LEDbegin@status:
  1694                           	opt stack 0
  1695  000144                     oledPutChar@ch:
  1696                           	opt stack 0
  1697  000144                     begin@stuffpeek:
  1698                           	opt stack 0
  1699                           
  1700                           ; 2 bytes @ 0xB
  1701  000144                     	ds	1
  1702  000145                     receiveData@crcHolder:
  1703                           	opt stack 0
  1704  000145                     oledPutChar@status:
  1705                           	opt stack 0
  1706                           
  1707                           ; 1 bytes @ 0xC
  1708  000145                     	ds	1
  1709  000146                     receiveData@crcHolder_2469:
  1710                           	opt stack 0
  1711                           
  1712                           ; 1 bytes @ 0xD
  1713  000146                     	ds	1
  1714  000147                     receiveData@u:
  1715                           	opt stack 0
  1716                           
  1717                           ; 2 bytes @ 0xE
  1718  000147                     	ds	2
  1719  000149                     receiveData@r:
  1720                           	opt stack 0
  1721                           
  1722                           ; 2 bytes @ 0x10
  1723  000149                     	ds	4
  1724  00014D                     LEDwriteDisplay@i2c_addr:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0x14
  1728  00014D                     	ds	1
  1729  00014E                     LEDwriteDisplay@timeOut:
  1730                           	opt stack 0
  1731                           
  1732                           ; 2 bytes @ 0x15
  1733  00014E                     	ds	2
  1734  000150                     LEDwriteDisplay@status:
  1735                           	opt stack 0
  1736                           
  1737                           ; 1 bytes @ 0x17
  1738  000150                     	ds	1
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           postinc0	equ	0xFEE
  1744                           wreg	equ	0xFE8
  1745                           
  1746                           	psect	cstackBANK0
  1747  0000F2                     __pcstackBANK0:
  1748                           	opt stack 0
  1749  0000F2                     sendData@whereToSend:
  1750                           	opt stack 0
  1751  0000F2                     CRCcheck@SentCRC:
  1752                           	opt stack 0
  1753  0000F2                     I2C1_MasterWrite@pdata:
  1754                           	opt stack 0
  1755  0000F2                     LEDsetValue@value:
  1756                           	opt stack 0
  1757  0000F2                     handleIndicators@i:
  1758                           	opt stack 0
  1759  0000F2                     ToSend@what:
  1760                           	opt stack 0
  1761                           
  1762                           ; 2 bytes @ 0x0
  1763  0000F2                     	ds	1
  1764  0000F3                     sendData@CS:
  1765                           	opt stack 0
  1766  0000F3                     CRCcheck@calculatedCRC:
  1767                           	opt stack 0
  1768                           
  1769                           ; 1 bytes @ 0x1
  1770  0000F3                     	ds	1
  1771  0000F4                     I2C1_MasterWrite@length:
  1772                           	opt stack 0
  1773  0000F4                     LEDsetValue@color:
  1774                           	opt stack 0
  1775  0000F4                     sendData@i:
  1776                           	opt stack 0
  1777  0000F4                     CRCcheck@arrayHolder:
  1778                           	opt stack 0
  1779                           
  1780                           ; 3 bytes @ 0x2
  1781  0000F4                     	ds	2
  1782  0000F6                     ??_LEDsetValue:
  1783  0000F6                     I2C1_MasterWrite@address:
  1784                           	opt stack 0
  1785                           
  1786                           ; 2 bytes @ 0x4
  1787  0000F6                     	ds	1
  1788  0000F7                     LEDsetValue@k:
  1789                           	opt stack 0
  1790  0000F7                     CRCcheck@rt:
  1791                           	opt stack 0
  1792                           
  1793                           ; 2 bytes @ 0x5
  1794  0000F7                     	ds	1
  1795  0000F8                     I2C1_MasterWrite@pflag:
  1796                           	opt stack 0
  1797                           
  1798                           ; 2 bytes @ 0x6
  1799  0000F8                     	ds	2
  1800  0000FA                     oledClear@row:
  1801                           	opt stack 0
  1802  0000FA                     oledPrint@s:
  1803                           	opt stack 0
  1804                           
  1805                           ; 2 bytes @ 0x8
  1806  0000FA                     	ds	2
  1807  0000FC                     oledClear@col:
  1808                           	opt stack 0
  1809                           
  1810                           ; 2 bytes @ 0xA
  1811  0000FC                     	ds	2
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           
  1819                           	psect	cstackCOMRAM
  1820  000001                     __pcstackCOMRAM:
  1821                           	opt stack 0
  1822  000001                     ??_I2C1_Stop:
  1823  000001                     ??_TMR2_CallBack:
  1824  000001                     ?i2_UART_buff_size:
  1825                           	opt stack 0
  1826  000001                     ?i2_UART_buff_modulo_inc:
  1827                           	opt stack 0
  1828  000001                     ReadButtonState@btnnum:
  1829                           	opt stack 0
  1830  000001                     i2UART_buff_size@_this:
  1831                           	opt stack 0
  1832  000001                     i2UART_buff_modulo_inc@value:
  1833                           	opt stack 0
  1834                           
  1835                           ; 2 bytes @ 0x0
  1836  000001                     	ds	2
  1837  000003                     ??_ReadButtonState:
  1838  000003                     I2C1_Stop@completion_code:
  1839                           	opt stack 0
  1840  000003                     TMR2_CallBack@i:
  1841                           	opt stack 0
  1842  000003                     i2UART_buff_modulo_inc@modulus:
  1843                           	opt stack 0
  1844                           
  1845                           ; 2 bytes @ 0x2
  1846  000003                     	ds	1
  1847  000004                     ??_I2C1_ISR:
  1848                           
  1849                           ; 1 bytes @ 0x3
  1850  000004                     	ds	1
  1851  000005                     TMR0_ISR@x:
  1852                           	opt stack 0
  1853  000005                     i2UART_buff_modulo_inc@my_value:
  1854                           	opt stack 0
  1855                           
  1856                           ; 2 bytes @ 0x4
  1857  000005                     	ds	2
  1858  000007                     i2UART_buff_put@_this:
  1859                           	opt stack 0
  1860  000007                     i2UART_buff_get@_this:
  1861                           	opt stack 0
  1862                           
  1863                           ; 2 bytes @ 0x6
  1864  000007                     	ds	2
  1865  000009                     ??i2_UART_buff_get:
  1866  000009                     i2UART_buff_put@c:
  1867                           	opt stack 0
  1868                           
  1869                           ; 1 bytes @ 0x8
  1870  000009                     	ds	1
  1871  00000A                     ??i2_UART_buff_put:
  1872                           
  1873                           ; 1 bytes @ 0x9
  1874  00000A                     	ds	1
  1875  00000B                     i2UART_buff_get@c:
  1876                           	opt stack 0
  1877                           
  1878                           ; 1 bytes @ 0xA
  1879  00000B                     	ds	1
  1880  00000C                     EUSART1_Receive_ISR@data:
  1881                           	opt stack 0
  1882                           
  1883                           ; 1 bytes @ 0xB
  1884  00000C                     	ds	1
  1885  00000D                     ??_INTERRUPT_InterruptManager:
  1886                           
  1887                           ; 1 bytes @ 0xC
  1888  00000D                     	ds	14
  1889  00001B                     ?_GetDataBarGraphA:
  1890                           	opt stack 0
  1891  00001B                     ?_GetDataBarGraphB:
  1892                           	opt stack 0
  1893  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1894                           	opt stack 0
  1895  00001B                     ?_UART_buff_modulo_inc:
  1896                           	opt stack 0
  1897  00001B                     ?_GetTime:
  1898                           	opt stack 0
  1899  00001B                     ?_UART_buff_size:
  1900                           	opt stack 0
  1901  00001B                     ?___awdiv:
  1902                           	opt stack 0
  1903  00001B                     I2C1_MasterTRBInsert@count:
  1904                           	opt stack 0
  1905  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1906                           	opt stack 0
  1907  00001B                     setLED@led:
  1908                           	opt stack 0
  1909  00001B                     Off_Led@led:
  1910                           	opt stack 0
  1911  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1912                           	opt stack 0
  1913  00001B                     GetButtonState@btnnum:
  1914                           	opt stack 0
  1915  00001B                     DataBarGraphs@BGA:
  1916                           	opt stack 0
  1917  00001B                     CRC8@data:
  1918                           	opt stack 0
  1919  00001B                     FastTransfer_buffer_modulo_inc@value:
  1920                           	opt stack 0
  1921  00001B                     crcBufS_put@_this:
  1922                           	opt stack 0
  1923  00001B                     crcBufS_status_put@_this:
  1924                           	opt stack 0
  1925  00001B                     crcBufS_get@_this:
  1926                           	opt stack 0
  1927  00001B                     UART_buff_size@_this:
  1928                           	opt stack 0
  1929  00001B                     UART_buff_modulo_inc@value:
  1930                           	opt stack 0
  1931  00001B                     UART_buff_peek@_this:
  1932                           	opt stack 0
  1933  00001B                     Delay@wait:
  1934                           	opt stack 0
  1935  00001B                     ___awdiv@dividend:
  1936                           	opt stack 0
  1937  00001B                     memmove@d1:
  1938                           	opt stack 0
  1939  00001B                     memset@p1:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x1A
  1943  00001B                     	ds	2
  1944  00001D                     ??_Delay:
  1945  00001D                     ??_setLED:
  1946  00001D                     ??_Off_Led:
  1947  00001D                     ??_GetButtonState:
  1948  00001D                     ??_UART_buff_peek:
  1949  00001D                     ?_Receive_available:
  1950                           	opt stack 0
  1951  00001D                     ?___wmul:
  1952                           	opt stack 0
  1953  00001D                     CRC8@len:
  1954                           	opt stack 0
  1955  00001D                     crcBufS_put@address:
  1956                           	opt stack 0
  1957  00001D                     crcBufS_status_put@time:
  1958                           	opt stack 0
  1959  00001D                     crcBufS_get@time:
  1960                           	opt stack 0
  1961  00001D                     I2C1_MasterTRBInsert@ptrb_list:
  1962                           	opt stack 0
  1963  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1964                           	opt stack 0
  1965  00001D                     DataBarGraphs@BGB:
  1966                           	opt stack 0
  1967  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1968                           	opt stack 0
  1969  00001D                     UART_buff_modulo_inc@modulus:
  1970                           	opt stack 0
  1971  00001D                     ___wmul@multiplier:
  1972                           	opt stack 0
  1973  00001D                     ___awdiv@divisor:
  1974                           	opt stack 0
  1975  00001D                     memmove@s1:
  1976                           	opt stack 0
  1977  00001D                     memset@c:
  1978                           	opt stack 0
  1979                           
  1980                           ; 2 bytes @ 0x1C
  1981  00001D                     	ds	1
  1982  00001E                     CRC8@sum:
  1983                           	opt stack 0
  1984  00001E                     crcBufS_put@oldCRC:
  1985                           	opt stack 0
  1986  00001E                     crcBufS_status_put@status:
  1987                           	opt stack 0
  1988  00001E                     crcBufS_get@space:
  1989                           	opt stack 0
  1990  00001E                     Delay@x:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x1D
  1994  00001E                     	ds	1
  1995  00001F                     ??_crcBufS_get:
  1996  00001F                     ??_crcBufS_status_put:
  1997  00001F                     CRC8@extract:
  1998                           	opt stack 0
  1999  00001F                     crcBufS_put@status:
  2000                           	opt stack 0
  2001  00001F                     ___awdiv@counter:
  2002                           	opt stack 0
  2003  00001F                     I2C1_MasterTRBInsert@pflag:
  2004                           	opt stack 0
  2005  00001F                     I2C1_MasterWriteTRBBuild@length:
  2006                           	opt stack 0
  2007  00001F                     SetLEDOut@lednum:
  2008                           	opt stack 0
  2009  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  2010                           	opt stack 0
  2011  00001F                     UART_buff_modulo_inc@my_value:
  2012                           	opt stack 0
  2013  00001F                     ___wmul@multiplicand:
  2014                           	opt stack 0
  2015  00001F                     memmove@n:
  2016                           	opt stack 0
  2017  00001F                     memset@n:
  2018                           	opt stack 0
  2019                           
  2020                           ; 2 bytes @ 0x1E
  2021  00001F                     	ds	1
  2022  000020                     ??_crcBufS_put:
  2023  000020                     CRC8@tempI:
  2024                           	opt stack 0
  2025  000020                     ___awdiv@sign:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x1F
  2029  000020                     	ds	1
  2030  000021                     ??_memmove:
  2031  000021                     ?_buttonsCollector:
  2032                           	opt stack 0
  2033  000021                     CRC8@crc:
  2034                           	opt stack 0
  2035  000021                     I2C1_MasterWriteTRBBuild@address:
  2036                           	opt stack 0
  2037  000021                     SetLEDOut@state:
  2038                           	opt stack 0
  2039  000021                     FastTransfer_buffer_put@_this:
  2040                           	opt stack 0
  2041  000021                     UART_buff_put@_this:
  2042                           	opt stack 0
  2043  000021                     UART_buff_get@_this:
  2044                           	opt stack 0
  2045  000021                     ___wmul@product:
  2046                           	opt stack 0
  2047  000021                     ___awdiv@quotient:
  2048                           	opt stack 0
  2049  000021                     memset@p:
  2050                           	opt stack 0
  2051                           
  2052                           ; 2 bytes @ 0x20
  2053  000021                     	ds	2
  2054  000023                     ??_I2C1_MasterWriteTRBBuild:
  2055  000023                     ??_buttonsCollector:
  2056  000023                     ??_SetLEDOut:
  2057  000023                     ??_UART_buff_get:
  2058  000023                     FastTransfer_buffer_put@towhere:
  2059                           	opt stack 0
  2060  000023                     UART_buff_put@c:
  2061                           	opt stack 0
  2062  000023                     LEDsetBar@bar:
  2063                           	opt stack 0
  2064  000023                     FastTransfer_buffer_flush@_this:
  2065                           	opt stack 0
  2066  000023                     crcBufS_status_put@wantedTime:
  2067                           	opt stack 0
  2068  000023                     UART_buff_init@_this:
  2069                           	opt stack 0
  2070  000023                     memmove@d:
  2071                           	opt stack 0
  2072                           
  2073                           ; 2 bytes @ 0x22
  2074  000023                     	ds	1
  2075  000024                     ??_UART_buff_put:
  2076  000024                     FastTransfer_buffer_put@towhat:
  2077                           	opt stack 0
  2078                           
  2079                           ; 2 bytes @ 0x23
  2080  000024                     	ds	1
  2081  000025                     UART_buff_get@c:
  2082                           	opt stack 0
  2083  000025                     OLED_command@com:
  2084                           	opt stack 0
  2085  000025                     LEDBsetBrightness@b:
  2086                           	opt stack 0
  2087  000025                     LEDblinkRate@b:
  2088                           	opt stack 0
  2089  000025                     LEDsetBar@color:
  2090                           	opt stack 0
  2091  000025                     handleIndicators@receivedIndicators:
  2092                           	opt stack 0
  2093  000025                     FastTransfer_buffer_flush@clearBuffer:
  2094                           	opt stack 0
  2095  000025                     crcBufS_get@wantedTime:
  2096                           	opt stack 0
  2097  000025                     memmove@s:
  2098                           	opt stack 0
  2099                           
  2100                           ; 2 bytes @ 0x24
  2101  000025                     	ds	1
  2102  000026                     ??_FastTransfer_buffer_put:
  2103  000026                     Send_put@_data:
  2104                           	opt stack 0
  2105  000026                     OLED_command@status:
  2106                           	opt stack 0
  2107  000026                     buttonsCollector@sendVal:
  2108                           	opt stack 0
  2109                           
  2110                           ; 2 bytes @ 0x25
  2111  000026                     	ds	1
  2112  000027                     ??_handleIndicators:
  2113  000027                     ??_sendData:
  2114  000027                     ??_oledPutChar:
  2115  000027                     LEDBsetBrightness@i2c_addr:
  2116                           	opt stack 0
  2117  000027                     LEDblinkRate@i2c_addr:
  2118                           	opt stack 0
  2119  000027                     oledGotoYX@Column:
  2120                           	opt stack 0
  2121  000027                     LEDsetBar@c:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x26
  2125  000027                     	ds	1
  2126  000028                     ??_oledGotoYX:
  2127  000028                     buttonsCollector@i:
  2128                           	opt stack 0
  2129                           
  2130                           ; 2 bytes @ 0x27
  2131  000028                     	ds	1
  2132  000029                     oledGotoYX@Row:
  2133                           	opt stack 0
  2134  000029                     LEDsetBar@a:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x28
  2138  000029                     	ds	1
  2139  00002A                     ToSend@where:
  2140                           	opt stack 0
  2141                           
  2142                           ; 1 bytes @ 0x29
  2143  00002A                     	ds	1
  2144  00002B                     tblptru	equ	0xFF8
  2145                           tblptrh	equ	0xFF7
  2146                           tblptrl	equ	0xFF6
  2147                           tablat	equ	0xFF5
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           
  2151                           ; 1 bytes @ 0x2A
  2152 ;;
  2153 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2154 ;;
  2155 ;; *************** function _main *****************
  2156 ;; Defined at:
  2157 ;;		line 37 in file "main.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2171 ;;      Params:         0       0       0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels required when called:   10
  2177 ;; This function calls:
  2178 ;;		_ClearTime
  2179 ;;		_GetDataBarGraphA
  2180 ;;		_GetDataBarGraphB
  2181 ;;		_GetTime
  2182 ;;		_LEDbegin
  2183 ;;		_LEDsetValue
  2184 ;;		_LEDwriteDisplay
  2185 ;;		_SYSTEM_Initialize
  2186 ;;		_Setupdisplay
  2187 ;;		_Splash
  2188 ;;		___wmul
  2189 ;;		_updateComms
  2190 ;; This function is called by:
  2191 ;;		Startup code after reset
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text0
  2196  002148                     __ptext0:
  2197                           	opt stack 0
  2198  002148                     _main:
  2199                           	opt stack 21
  2200                           
  2201                           ;main.c: 39: SYSTEM_Initialize();
  2202                           
  2203                           ;incstack = 0
  2204  002148  EC5E  F014         	call	_SYSTEM_Initialize	;wreg free
  2205                           
  2206                           ;main.c: 58: (INTCONbits.GIE = 1);
  2207  00214C  8EF2               	bsf	intcon,7,c	;volatile
  2208                           
  2209                           ;main.c: 61: (INTCONbits.PEIE = 1);
  2210  00214E  8CF2               	bsf	intcon,6,c	;volatile
  2211                           
  2212                           ;main.c: 69: LEDbegin(0x70);
  2213  002150  0E70               	movlw	112
  2214  002152  EC9B  F011         	call	_LEDbegin
  2215                           
  2216                           ;main.c: 70: LEDbegin(0x71);
  2217  002156  0E71               	movlw	113
  2218  002158  EC9B  F011         	call	_LEDbegin
  2219                           
  2220                           ;main.c: 71: Setupdisplay();
  2221  00215C  ECCF  F018         	call	_Setupdisplay	;wreg free
  2222                           
  2223                           ;main.c: 72: Splash();
  2224  002160  ECD0  F014         	call	_Splash	;wreg free
  2225                           
  2226                           ;main.c: 74: do { LATA3 = 1; } while(0);
  2227  002164  8689               	bsf	3977,3,c	;volatile
  2228                           
  2229                           ;main.c: 75: LATCbits.LATC5 = 0;
  2230  002166  9A8B               	bcf	3979,5,c	;volatile
  2231  002168                     l7130:
  2232                           
  2233                           ;main.c: 77: updateComms();
  2234  002168  EC0A  F017         	call	_updateComms	;wreg free
  2235                           
  2236                           ;main.c: 79: if (GetTime() > 2) {
  2237  00216C  ECE3  F018         	call	_GetTime	;wreg free
  2238  002170  BE1C               	btfsc	?_GetTime+1,7,c
  2239  002172  D7FA               	goto	l7130
  2240  002174  501C               	movf	?_GetTime+1,w,c
  2241  002176  E104               	bnz	u8290
  2242  002178  0E03               	movlw	3
  2243  00217A  5C1B               	subwf	?_GetTime,w,c
  2244  00217C  A0D8               	btfss	status,0,c
  2245  00217E  D7F4               	goto	l7130
  2246  002180                     u8290:
  2247                           
  2248                           ;main.c: 80: LEDsetValue((GetDataBarGraphA())*(24 / 100), 1);
  2249  002180  ECDE  F018         	call	_GetDataBarGraphA	;wreg free
  2250  002184  C01B  F01D         	movff	?_GetDataBarGraphA,___wmul@multiplier
  2251  002188  C01C  F01E         	movff	?_GetDataBarGraphA+1,___wmul@multiplier+1
  2252  00218C  0E00               	movlw	0
  2253  00218E  6E20               	movwf	___wmul@multiplicand+1,c
  2254  002190  0E00               	movlw	0
  2255  002192  6E1F               	movwf	___wmul@multiplicand,c
  2256  002194  EC0A  F018         	call	___wmul	;wreg free
  2257  002198  C01D  F0F2         	movff	?___wmul,LEDsetValue@value
  2258  00219C  C01E  F0F3         	movff	?___wmul+1,LEDsetValue@value+1
  2259  0021A0  0E00               	movlw	0
  2260  0021A2  0100               	movlb	0	; () banked
  2261  0021A4  6FF5               	movwf	(LEDsetValue@color+1)& (0+255),b
  2262  0021A6  0E01               	movlw	1
  2263  0021A8  6FF4               	movwf	LEDsetValue@color& (0+255),b
  2264  0021AA  EC49  F011         	call	_LEDsetValue	;wreg free
  2265                           
  2266                           ;main.c: 81: LEDwriteDisplay(0x70);
  2267  0021AE  0E70               	movlw	112
  2268  0021B0  ECD7  F00A         	call	_LEDwriteDisplay
  2269                           
  2270                           ;main.c: 82: LEDsetValue((GetDataBarGraphB())*(24 / 100), 1);
  2271  0021B4  ECD9  F018         	call	_GetDataBarGraphB	;wreg free
  2272  0021B8  C01B  F01D         	movff	?_GetDataBarGraphB,___wmul@multiplier
  2273  0021BC  C01C  F01E         	movff	?_GetDataBarGraphB+1,___wmul@multiplier+1
  2274  0021C0  0E00               	movlw	0
  2275  0021C2  6E20               	movwf	___wmul@multiplicand+1,c
  2276  0021C4  0E00               	movlw	0
  2277  0021C6  6E1F               	movwf	___wmul@multiplicand,c
  2278  0021C8  EC0A  F018         	call	___wmul	;wreg free
  2279  0021CC  C01D  F0F2         	movff	?___wmul,LEDsetValue@value
  2280  0021D0  C01E  F0F3         	movff	?___wmul+1,LEDsetValue@value+1
  2281  0021D4  0E00               	movlw	0
  2282  0021D6  0100               	movlb	0	; () banked
  2283  0021D8  6FF5               	movwf	(LEDsetValue@color+1)& (0+255),b
  2284  0021DA  0E01               	movlw	1
  2285  0021DC  6FF4               	movwf	LEDsetValue@color& (0+255),b
  2286  0021DE  EC49  F011         	call	_LEDsetValue	;wreg free
  2287                           
  2288                           ;main.c: 83: LEDwriteDisplay(0x71);
  2289  0021E2  0E71               	movlw	113
  2290  0021E4  ECD7  F00A         	call	_LEDwriteDisplay
  2291                           
  2292                           ;main.c: 85: ClearTime();
  2293  0021E8  ECEB  F018         	call	_ClearTime	;wreg free
  2294  0021EC  D7BD               	goto	l7130
  2295  0021EE                     __end_of_main:
  2296                           	opt stack 0
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           intcon	equ	0xFF2
  2302                           postinc0	equ	0xFEE
  2303                           wreg	equ	0xFE8
  2304                           status	equ	0xFD8
  2305                           
  2306 ;; *************** function _updateComms *****************
  2307 ;; Defined at:
  2308 ;;		line 12 in file "Communications.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2322 ;;      Params:         0       0       0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0
  2325 ;;      Totals:         0       0       0       0       0       0       0
  2326 ;;Total ram usage:        0 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    9
  2329 ;; This function calls:
  2330 ;;		_DataBarGraphs
  2331 ;;		_handleIndicators
  2332 ;;		_receiveData
  2333 ;;		_respondECU
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text1
  2340  002E14                     __ptext1:
  2341                           	opt stack 0
  2342  002E14                     _updateComms:
  2343                           	opt stack 21
  2344                           
  2345                           ;Communications.c: 14: if (receiveData()) {
  2346                           
  2347                           ;incstack = 0
  2348  002E14  EC6A  F000         	call	_receiveData	;wreg free
  2349  002E18  0900               	iorlw	0
  2350  002E1A  B4D8               	btfsc	status,2,c
  2351  002E1C  0012               	return	
  2352                           
  2353                           ;Communications.c: 17: respondECU();
  2354  002E1E  EC68  F016         	call	_respondECU	;wreg free
  2355                           
  2356                           ;Communications.c: 18: handleIndicators(receiveArray[2]);
  2357  002E22  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  2358  002E26  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  2359  002E2A  EC60  F013         	call	_handleIndicators	;wreg free
  2360                           
  2361                           ;Communications.c: 19: DataBarGraphs(receiveArray[3], receiveArray[4]);
  2362  002E2E  C106  F01B         	movff	_receiveArray+6,DataBarGraphs@BGA	;volatile
  2363  002E32  C107  F01C         	movff	_receiveArray+7,DataBarGraphs@BGA+1	;volatile
  2364  002E36  C108  F01D         	movff	_receiveArray+8,DataBarGraphs@BGB	;volatile
  2365  002E3A  C109  F01E         	movff	_receiveArray+9,DataBarGraphs@BGB+1	;volatile
  2366  002E3E  ECA8  F018         	call	_DataBarGraphs	;wreg free
  2367                           
  2368                           ;Communications.c: 20: receiveArray[0] = 0;
  2369  002E42  0E00               	movlw	0
  2370  002E44  0101               	movlb	1	; () banked
  2371  002E46  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  2372  002E48  0E00               	movlw	0
  2373  002E4A  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  2374  002E4C  0012               	return	
  2375  002E4E                     __end_of_updateComms:
  2376                           	opt stack 0
  2377                           tblptru	equ	0xFF8
  2378                           tblptrh	equ	0xFF7
  2379                           tblptrl	equ	0xFF6
  2380                           tablat	equ	0xFF5
  2381                           intcon	equ	0xFF2
  2382                           postinc0	equ	0xFEE
  2383                           wreg	equ	0xFE8
  2384                           status	equ	0xFD8
  2385                           
  2386 ;; *************** function _respondECU *****************
  2387 ;; Defined at:
  2388 ;;		line 26 in file "Communications.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2402 ;;      Params:         0       0       0       0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0
  2405 ;;      Totals:         0       0       0       0       0       0       0
  2406 ;;Total ram usage:        0 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    8
  2409 ;; This function calls:
  2410 ;;		_Delay
  2411 ;;		_ToSend
  2412 ;;		_buttonsCollector
  2413 ;;		_sendData
  2414 ;; This function is called by:
  2415 ;;		_updateComms
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text2
  2420  002CD0                     __ptext2:
  2421                           	opt stack 0
  2422  002CD0                     _respondECU:
  2423                           	opt stack 21
  2424                           
  2425                           ;Communications.c: 27: LATCbits.LATC5 = 1;
  2426                           
  2427                           ;incstack = 0
  2428  002CD0  8A8B               	bsf	3979,5,c	;volatile
  2429                           
  2430                           ;Communications.c: 28: ToSend(0, 3);
  2431  002CD2  0E00               	movlw	0
  2432  002CD4  0100               	movlb	0	; () banked
  2433  002CD6  6FF3               	movwf	(ToSend@what+1)& (0+255),b
  2434  002CD8  0E03               	movlw	3
  2435  002CDA  6FF2               	movwf	ToSend@what& (0+255),b
  2436  002CDC  0E00               	movlw	0
  2437  002CDE  EC6D  F018         	call	_ToSend
  2438                           
  2439                           ;Communications.c: 29: ToSend(8, buttonsCollector());
  2440  002CE2  EC98  F014         	call	_buttonsCollector	;wreg free
  2441  002CE6  C021  F0F2         	movff	?_buttonsCollector,ToSend@what
  2442  002CEA  C022  F0F3         	movff	?_buttonsCollector+1,ToSend@what+1
  2443  002CEE  0E08               	movlw	8
  2444  002CF0  EC6D  F018         	call	_ToSend
  2445                           
  2446                           ;Communications.c: 30: Delay(9);
  2447  002CF4  0E00               	movlw	0
  2448  002CF6  6E1C               	movwf	Delay@wait+1,c
  2449  002CF8  0E09               	movlw	9
  2450  002CFA  6E1B               	movwf	Delay@wait,c
  2451  002CFC  EC43  F017         	call	_Delay	;wreg free
  2452                           
  2453                           ;Communications.c: 31: sendData(1);
  2454  002D00  0E01               	movlw	1
  2455  002D02  EC7C  F00B         	call	_sendData
  2456                           
  2457                           ;Communications.c: 32: Delay(3);
  2458  002D06  0E00               	movlw	0
  2459  002D08  6E1C               	movwf	Delay@wait+1,c
  2460  002D0A  0E03               	movlw	3
  2461  002D0C  6E1B               	movwf	Delay@wait,c
  2462  002D0E  EC43  F017         	call	_Delay	;wreg free
  2463                           
  2464                           ;Communications.c: 33: LATCbits.LATC5 = 0;
  2465  002D12  9A8B               	bcf	3979,5,c	;volatile
  2466  002D14  0012               	return		;funcret
  2467  002D16                     __end_of_respondECU:
  2468                           	opt stack 0
  2469                           tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _sendData *****************
  2479 ;; Defined at:
  2480 ;;		line 54 in file "FastTransfer.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  whereToSend     1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  2485 ;;  i               2    2[BANK0 ] int 
  2486 ;;  CS              1    1[BANK0 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2496 ;;      Params:         0       0       0       0       0       0       0
  2497 ;;      Locals:         0       4       0       0       0       0       0
  2498 ;;      Temps:          1       0       0       0       0       0       0
  2499 ;;      Totals:         1       4       0       0       0       0       0
  2500 ;;Total ram usage:        5 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    7
  2503 ;; This function calls:
  2504 ;;		Absolute function
  2505 ;;		_CRC8
  2506 ;;		_FastTransfer_buffer_flush
  2507 ;;		_Send_put
  2508 ;;		_crcBufS_put
  2509 ;; This function is called by:
  2510 ;;		_respondECU
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text3
  2515  0016F8                     __ptext3:
  2516                           	opt stack 0
  2517  0016F8                     _sendData:
  2518                           	opt stack 21
  2519                           
  2520                           ;incstack = 0
  2521                           ;sendData@whereToSend stored from wreg
  2522  0016F8  0100               	movlb	0	; () banked
  2523  0016FA  6FF2               	movwf	sendData@whereToSend& (0+255),b
  2524                           
  2525                           ;FastTransfer.c: 57: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2526  0016FC  C0D9  F01B         	movff	_sendStructAddress,CRC8@data
  2527  001700  C0DA  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2528  001704  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2529  001708  EC43  F016         	call	_CRC8	;wreg free
  2530  00170C  0100               	movlb	0	; () banked
  2531  00170E  6FF3               	movwf	sendData@CS& (0+255),b
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;FastTransfer.c: 59: serial_write(0x06);
  2535  001710  D801               	call	u6498
  2536  001712  D00B               	goto	l6274
  2537  001714                     u6498:
  2538  001714  0005               	push	
  2539  001716  6EFA               	movwf	pclath,c
  2540  001718  5033               	movf	_serial_write,w,c
  2541  00171A  6EFD               	movwf	tosl,c
  2542  00171C  5034               	movf	_serial_write+1,w,c
  2543  00171E  6EFE               	movwf	tosh,c
  2544  001720  50F8               	movf	tblptru,w,c
  2545  001722  6EFF               	movwf	tosu,c
  2546  001724  50FA               	movf	pclath,w,c
  2547  001726  0E06               	movlw	6
  2548  001728  0012               	return		;indir
  2549  00172A                     l6274:
  2550                           
  2551                           ;FastTransfer.c: 60: serial_write(0x85);
  2552  00172A  D801               	call	u6508
  2553  00172C  D00B               	goto	l6276
  2554  00172E                     u6508:
  2555  00172E  0005               	push	
  2556  001730  6EFA               	movwf	pclath,c
  2557  001732  5033               	movf	_serial_write,w,c
  2558  001734  6EFD               	movwf	tosl,c
  2559  001736  5034               	movf	_serial_write+1,w,c
  2560  001738  6EFE               	movwf	tosh,c
  2561  00173A  50F8               	movf	tblptru,w,c
  2562  00173C  6EFF               	movwf	tosu,c
  2563  00173E  50FA               	movf	pclath,w,c
  2564  001740  0E85               	movlw	133
  2565  001742  0012               	return		;indir
  2566  001744                     l6276:
  2567                           
  2568                           ;FastTransfer.c: 61: serial_write(whereToSend);
  2569  001744  D801               	call	u6518
  2570  001746  D00C               	goto	l6278
  2571  001748                     u6518:
  2572  001748  0005               	push	
  2573  00174A  6EFA               	movwf	pclath,c
  2574  00174C  5033               	movf	_serial_write,w,c
  2575  00174E  6EFD               	movwf	tosl,c
  2576  001750  5034               	movf	_serial_write+1,w,c
  2577  001752  6EFE               	movwf	tosh,c
  2578  001754  50F8               	movf	tblptru,w,c
  2579  001756  6EFF               	movwf	tosu,c
  2580  001758  50FA               	movf	pclath,w,c
  2581  00175A  0100               	movlb	0	; () banked
  2582  00175C  51F2               	movf	sendData@whereToSend& (0+255),w,b
  2583  00175E  0012               	return		;indir
  2584  001760                     l6278:
  2585                           
  2586                           ;FastTransfer.c: 62: serial_write(moduleAddress);
  2587  001760  D801               	call	u6528
  2588  001762  D00B               	goto	l6280
  2589  001764                     u6528:
  2590  001764  0005               	push	
  2591  001766  6EFA               	movwf	pclath,c
  2592  001768  5033               	movf	_serial_write,w,c
  2593  00176A  6EFD               	movwf	tosl,c
  2594  00176C  5034               	movf	_serial_write+1,w,c
  2595  00176E  6EFE               	movwf	tosh,c
  2596  001770  50F8               	movf	tblptru,w,c
  2597  001772  6EFF               	movwf	tosu,c
  2598  001774  50FA               	movf	pclath,w,c
  2599  001776  503A               	movf	_moduleAddress,w,c
  2600  001778  0012               	return		;indir
  2601  00177A                     l6280:
  2602                           
  2603                           ;FastTransfer.c: 63: serial_write(ring_buffer.count);
  2604  00177A  D801               	call	u6538
  2605  00177C  D00C               	goto	l6282
  2606  00177E                     u6538:
  2607  00177E  0005               	push	
  2608  001780  6EFA               	movwf	pclath,c
  2609  001782  5033               	movf	_serial_write,w,c
  2610  001784  6EFD               	movwf	tosl,c
  2611  001786  5034               	movf	_serial_write+1,w,c
  2612  001788  6EFE               	movwf	tosh,c
  2613  00178A  50F8               	movf	tblptru,w,c
  2614  00178C  6EFF               	movwf	tosu,c
  2615  00178E  50FA               	movf	pclath,w,c
  2616  001790  0102               	movlb	2	; () banked
  2617  001792  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2618  001794  0012               	return		;indir
  2619  001796                     l6282:
  2620                           
  2621                           ;FastTransfer.c: 67: int i;
  2622                           ;FastTransfer.c: 68: for (i = 0; i < ring_buffer.count; i++) {
  2623  001796  0E00               	movlw	0
  2624  001798  0100               	movlb	0	; () banked
  2625  00179A  6FF5               	movwf	(sendData@i+1)& (0+255),b
  2626  00179C  0E00               	movlw	0
  2627  00179E  6FF4               	movwf	sendData@i& (0+255),b
  2628  0017A0  D01A               	goto	l6288
  2629  0017A2                     l6284:
  2630                           
  2631                           ;FastTransfer.c: 69: serial_write(*(sendStructAddress + i));
  2632  0017A2  D801               	call	u6548
  2633  0017A4  D015               	goto	l6286
  2634  0017A6                     u6548:
  2635  0017A6  0005               	push	
  2636  0017A8  6EFA               	movwf	pclath,c
  2637  0017AA  5033               	movf	_serial_write,w,c
  2638  0017AC  6EFD               	movwf	tosl,c
  2639  0017AE  5034               	movf	_serial_write+1,w,c
  2640  0017B0  6EFE               	movwf	tosh,c
  2641  0017B2  50F8               	movf	tblptru,w,c
  2642  0017B4  6EFF               	movwf	tosu,c
  2643  0017B6  50FA               	movf	pclath,w,c
  2644  0017B8  0100               	movlb	0	; () banked
  2645  0017BA  51F4               	movf	sendData@i& (0+255),w,b
  2646  0017BC  0100               	movlb	0	; () banked
  2647  0017BE  25D9               	addwf	_sendStructAddress& (0+255),w,b
  2648  0017C0  6ED9               	movwf	fsr2l,c
  2649  0017C2  0100               	movlb	0	; () banked
  2650  0017C4  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2651  0017C6  0100               	movlb	0	; () banked
  2652  0017C8  21DA               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2653  0017CA  6EDA               	movwf	fsr2h,c
  2654  0017CC  50DF               	movf	indf2,w,c
  2655  0017CE  0012               	return		;indir
  2656  0017D0                     l6286:
  2657  0017D0  0100               	movlb	0	; () banked
  2658  0017D2  4BF4               	infsnz	sendData@i& (0+255),f,b
  2659  0017D4  2BF5               	incf	(sendData@i+1)& (0+255),f,b
  2660  0017D6                     l6288:
  2661                           
  2662                           ; BSR set to: 0
  2663  0017D6  0102               	movlb	2	; () banked
  2664  0017D8  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2665  0017DA  0100               	movlb	0	; () banked
  2666  0017DC  5DF4               	subwf	sendData@i& (0+255),w,b
  2667  0017DE  0100               	movlb	0	; () banked
  2668  0017E0  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2669  0017E2  0A80               	xorlw	128
  2670  0017E4  6E27               	movwf	??_sendData& (0+255),c
  2671  0017E6  0102               	movlb	2	; () banked
  2672  0017E8  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2673  0017EA  0A80               	xorlw	128
  2674  0017EC  5827               	subwfb	??_sendData& (0+255),w,c
  2675  0017EE  A0D8               	btfss	status,0,c
  2676  0017F0  D7D8               	goto	l6284
  2677                           
  2678                           ; BSR set to: 2
  2679                           ;FastTransfer.c: 70: }
  2680                           ;FastTransfer.c: 73: serial_write(CS);
  2681                           
  2682                           ; BSR set to: 2
  2683  0017F2  D801               	call	u6568
  2684  0017F4  D00C               	goto	l6292
  2685  0017F6                     u6568:
  2686  0017F6  0005               	push	
  2687  0017F8  6EFA               	movwf	pclath,c
  2688  0017FA  5033               	movf	_serial_write,w,c
  2689  0017FC  6EFD               	movwf	tosl,c
  2690  0017FE  5034               	movf	_serial_write+1,w,c
  2691  001800  6EFE               	movwf	tosh,c
  2692  001802  50F8               	movf	tblptru,w,c
  2693  001804  6EFF               	movwf	tosu,c
  2694  001806  50FA               	movf	pclath,w,c
  2695  001808  0100               	movlb	0	; () banked
  2696  00180A  51F3               	movf	sendData@CS& (0+255),w,b
  2697  00180C  0012               	return		;indir
  2698  00180E                     l6292:
  2699                           
  2700                           ;FastTransfer.c: 76: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2701  00180E  0E28               	movlw	low _crc_buffer
  2702  001810  6E1B               	movwf	crcBufS_put@_this,c
  2703  001812  0E01               	movlw	high _crc_buffer
  2704  001814  6E1C               	movwf	crcBufS_put@_this+1,c
  2705  001816  C0F2  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2706  00181A  C0F3  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2707  00181E  0E00               	movlw	0
  2708  001820  6E1F               	movwf	crcBufS_put@status,c
  2709  001822  ECAD  F00E         	call	_crcBufS_put
  2710                           
  2711                           ;FastTransfer.c: 79: FastTransfer_buffer_flush(&ring_buffer, 1);
  2712  001826  0E00               	movlw	low _ring_buffer
  2713  001828  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2714  00182A  0E02               	movlw	high _ring_buffer
  2715  00182C  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2716  00182E  0E00               	movlw	0
  2717  001830  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2718  001832  0E01               	movlw	1
  2719  001834  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2720  001836  EC37  F015         	call	_FastTransfer_buffer_flush	;wreg free
  2721  00183A  0012               	return		;funcret
  2722  00183C                     __end_of_sendData:
  2723                           	opt stack 0
  2724                           tosu	equ	0xFFF
  2725                           tosh	equ	0xFFE
  2726                           tosl	equ	0xFFD
  2727                           pclath	equ	0xFFA
  2728                           tblptru	equ	0xFF8
  2729                           tblptrh	equ	0xFF7
  2730                           tblptrl	equ	0xFF6
  2731                           tablat	equ	0xFF5
  2732                           intcon	equ	0xFF2
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           indf2	equ	0xFDF
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _crcBufS_put *****************
  2741 ;; Defined at:
  2742 ;;		line 324 in file "FastTransfer.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2745 ;;		 -> crc_buffer(17), 
  2746 ;;  address         1   28[COMRAM] unsigned char 
  2747 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2748 ;;  status          1   30[COMRAM] unsigned char 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2760 ;;      Params:         5       0       0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0
  2762 ;;      Temps:          2       0       0       0       0       0       0
  2763 ;;      Totals:         7       0       0       0       0       0       0
  2764 ;;Total ram usage:        7 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    4
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_sendData
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text4
  2775  001D5A                     __ptext4:
  2776                           	opt stack 0
  2777  001D5A                     _crcBufS_put:
  2778                           	opt stack 23
  2779                           
  2780                           ;FastTransfer.c: 325: _this->buf[_this->head] = address;
  2781                           
  2782                           ;incstack = 0
  2783  001D5A  EE20 F00F          	lfsr	2,15
  2784  001D5E  501B               	movf	crcBufS_put@_this,w,c
  2785  001D60  26D9               	addwf	fsr2l,f,c
  2786  001D62  501C               	movf	crcBufS_put@_this+1,w,c
  2787  001D64  22DA               	addwfc	fsr2h,f,c
  2788  001D66  CFDE F020          	movff	postinc2,??_crcBufS_put
  2789  001D6A  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2790  001D6E  5020               	movf	??_crcBufS_put,w,c
  2791  001D70  241B               	addwf	crcBufS_put@_this,w,c
  2792  001D72  6ED9               	movwf	fsr2l,c
  2793  001D74  5021               	movf	??_crcBufS_put+1,w,c
  2794  001D76  201C               	addwfc	crcBufS_put@_this+1,w,c
  2795  001D78  6EDA               	movwf	fsr2h,c
  2796  001D7A  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2797                           
  2798                           ;FastTransfer.c: 326: _this->head++;
  2799  001D7E  EE20 F00F          	lfsr	2,15
  2800  001D82  501B               	movf	crcBufS_put@_this,w,c
  2801  001D84  26D9               	addwf	fsr2l,f,c
  2802  001D86  501C               	movf	crcBufS_put@_this+1,w,c
  2803  001D88  22DA               	addwfc	fsr2h,f,c
  2804  001D8A  2ADE               	incf	postinc2,f,c
  2805  001D8C  0E00               	movlw	0
  2806  001D8E  22DD               	addwfc	postdec2,f,c
  2807                           
  2808                           ;FastTransfer.c: 327: _this->buf[_this->head] = oldCRC;
  2809  001D90  EE20 F00F          	lfsr	2,15
  2810  001D94  501B               	movf	crcBufS_put@_this,w,c
  2811  001D96  26D9               	addwf	fsr2l,f,c
  2812  001D98  501C               	movf	crcBufS_put@_this+1,w,c
  2813  001D9A  22DA               	addwfc	fsr2h,f,c
  2814  001D9C  CFDE F020          	movff	postinc2,??_crcBufS_put
  2815  001DA0  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2816  001DA4  5020               	movf	??_crcBufS_put,w,c
  2817  001DA6  241B               	addwf	crcBufS_put@_this,w,c
  2818  001DA8  6ED9               	movwf	fsr2l,c
  2819  001DAA  5021               	movf	??_crcBufS_put+1,w,c
  2820  001DAC  201C               	addwfc	crcBufS_put@_this+1,w,c
  2821  001DAE  6EDA               	movwf	fsr2h,c
  2822  001DB0  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2823                           
  2824                           ;FastTransfer.c: 328: _this->head++;
  2825  001DB4  EE20 F00F          	lfsr	2,15
  2826  001DB8  501B               	movf	crcBufS_put@_this,w,c
  2827  001DBA  26D9               	addwf	fsr2l,f,c
  2828  001DBC  501C               	movf	crcBufS_put@_this+1,w,c
  2829  001DBE  22DA               	addwfc	fsr2h,f,c
  2830  001DC0  2ADE               	incf	postinc2,f,c
  2831  001DC2  0E00               	movlw	0
  2832  001DC4  22DD               	addwfc	postdec2,f,c
  2833                           
  2834                           ;FastTransfer.c: 329: _this->buf[_this->head] = status;
  2835  001DC6  EE20 F00F          	lfsr	2,15
  2836  001DCA  501B               	movf	crcBufS_put@_this,w,c
  2837  001DCC  26D9               	addwf	fsr2l,f,c
  2838  001DCE  501C               	movf	crcBufS_put@_this+1,w,c
  2839  001DD0  22DA               	addwfc	fsr2h,f,c
  2840  001DD2  CFDE F020          	movff	postinc2,??_crcBufS_put
  2841  001DD6  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2842  001DDA  5020               	movf	??_crcBufS_put,w,c
  2843  001DDC  241B               	addwf	crcBufS_put@_this,w,c
  2844  001DDE  6ED9               	movwf	fsr2l,c
  2845  001DE0  5021               	movf	??_crcBufS_put+1,w,c
  2846  001DE2  201C               	addwfc	crcBufS_put@_this+1,w,c
  2847  001DE4  6EDA               	movwf	fsr2h,c
  2848  001DE6  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2849                           
  2850                           ;FastTransfer.c: 330: _this->head++;
  2851  001DEA  EE20 F00F          	lfsr	2,15
  2852  001DEE  501B               	movf	crcBufS_put@_this,w,c
  2853  001DF0  26D9               	addwf	fsr2l,f,c
  2854  001DF2  501C               	movf	crcBufS_put@_this+1,w,c
  2855  001DF4  22DA               	addwfc	fsr2h,f,c
  2856  001DF6  2ADE               	incf	postinc2,f,c
  2857  001DF8  0E00               	movlw	0
  2858  001DFA  22DD               	addwfc	postdec2,f,c
  2859                           
  2860                           ;FastTransfer.c: 331: if (_this->head >= (5 * 3)) {
  2861  001DFC  EE20 F00F          	lfsr	2,15
  2862  001E00  501B               	movf	crcBufS_put@_this,w,c
  2863  001E02  26D9               	addwf	fsr2l,f,c
  2864  001E04  501C               	movf	crcBufS_put@_this+1,w,c
  2865  001E06  22DA               	addwfc	fsr2h,f,c
  2866  001E08  0E01               	movlw	1
  2867  001E0A  BEDB               	btfsc	plusw2,7,c
  2868  001E0C  0012               	return	
  2869  001E0E  0E01               	movlw	1
  2870  001E10  50DB               	movf	plusw2,w,c
  2871  001E12  E104               	bnz	u6130
  2872  001E14  0E0F               	movlw	15
  2873  001E16  5CDE               	subwf	postinc2,w,c
  2874  001E18  A0D8               	btfss	status,0,c
  2875  001E1A  0012               	return	
  2876  001E1C                     u6130:
  2877                           
  2878                           ;FastTransfer.c: 332: _this->head = 0;
  2879  001E1C  EE20 F00F          	lfsr	2,15
  2880  001E20  501B               	movf	crcBufS_put@_this,w,c
  2881  001E22  26D9               	addwf	fsr2l,f,c
  2882  001E24  501C               	movf	crcBufS_put@_this+1,w,c
  2883  001E26  22DA               	addwfc	fsr2h,f,c
  2884  001E28  0E00               	movlw	0
  2885  001E2A  6EDE               	movwf	postinc2,c
  2886  001E2C  0E00               	movlw	0
  2887  001E2E  6EDD               	movwf	postdec2,c
  2888  001E30  0012               	return	
  2889  001E32                     __end_of_crcBufS_put:
  2890                           	opt stack 0
  2891                           tosu	equ	0xFFF
  2892                           tosh	equ	0xFFE
  2893                           tosl	equ	0xFFD
  2894                           pclath	equ	0xFFA
  2895                           tblptru	equ	0xFF8
  2896                           tblptrh	equ	0xFF7
  2897                           tblptrl	equ	0xFF6
  2898                           tablat	equ	0xFF5
  2899                           intcon	equ	0xFF2
  2900                           postinc0	equ	0xFEE
  2901                           wreg	equ	0xFE8
  2902                           indf2	equ	0xFDF
  2903                           postinc2	equ	0xFDE
  2904                           postdec2	equ	0xFDD
  2905                           plusw2	equ	0xFDB
  2906                           fsr2h	equ	0xFDA
  2907                           fsr2l	equ	0xFD9
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _FastTransfer_buffer_flush *****************
  2911 ;; Defined at:
  2912 ;;		line 264 in file "FastTransfer.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  2915 ;;		 -> ring_buffer(206), 
  2916 ;;  clearBuffer     2   36[COMRAM] const int 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2928 ;;      Params:         4       0       0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0
  2931 ;;      Totals:         4       0       0       0       0       0       0
  2932 ;;Total ram usage:        4 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    5
  2935 ;; This function calls:
  2936 ;;		_memset
  2937 ;; This function is called by:
  2938 ;;		_sendData
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text5
  2943  002A6E                     __ptext5:
  2944                           	opt stack 0
  2945  002A6E                     _FastTransfer_buffer_flush:
  2946                           	opt stack 22
  2947                           
  2948                           ;FastTransfer.c: 265: _this->count = 0;
  2949                           
  2950                           ;incstack = 0
  2951  002A6E  EE20 F0CC          	lfsr	2,204
  2952  002A72  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2953  002A74  26D9               	addwf	fsr2l,f,c
  2954  002A76  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2955  002A78  22DA               	addwfc	fsr2h,f,c
  2956  002A7A  0E00               	movlw	0
  2957  002A7C  6EDE               	movwf	postinc2,c
  2958  002A7E  0E00               	movlw	0
  2959  002A80  6EDD               	movwf	postdec2,c
  2960                           
  2961                           ;FastTransfer.c: 266: _this->head = 0;
  2962  002A82  EE20 F0C8          	lfsr	2,200
  2963  002A86  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2964  002A88  26D9               	addwf	fsr2l,f,c
  2965  002A8A  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2966  002A8C  22DA               	addwfc	fsr2h,f,c
  2967  002A8E  0E00               	movlw	0
  2968  002A90  6EDE               	movwf	postinc2,c
  2969  002A92  0E00               	movlw	0
  2970  002A94  6EDD               	movwf	postdec2,c
  2971                           
  2972                           ;FastTransfer.c: 267: _this->tail = 0;
  2973  002A96  EE20 F0CA          	lfsr	2,202
  2974  002A9A  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  2975  002A9C  26D9               	addwf	fsr2l,f,c
  2976  002A9E  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  2977  002AA0  22DA               	addwfc	fsr2h,f,c
  2978  002AA2  0E00               	movlw	0
  2979  002AA4  6EDE               	movwf	postinc2,c
  2980  002AA6  0E00               	movlw	0
  2981  002AA8  6EDD               	movwf	postdec2,c
  2982                           
  2983                           ;FastTransfer.c: 268: if (clearBuffer) {
  2984  002AAA  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  2985  002AAC  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  2986  002AAE  B4D8               	btfsc	status,2,c
  2987  002AB0  0012               	return	
  2988                           
  2989                           ;FastTransfer.c: 269: memset(_this->buf, 0, sizeof (_this->buf));
  2990  002AB2  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  2991  002AB6  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  2992  002ABA  0E00               	movlw	0
  2993  002ABC  6E1E               	movwf	memset@c+1,c
  2994  002ABE  0E00               	movlw	0
  2995  002AC0  6E1D               	movwf	memset@c,c
  2996  002AC2  0E00               	movlw	0
  2997  002AC4  6E20               	movwf	memset@n+1,c
  2998  002AC6  0EC8               	movlw	200
  2999  002AC8  6E1F               	movwf	memset@n,c
  3000  002ACA  EC8D  F017         	call	_memset	;wreg free
  3001  002ACE  0012               	return	
  3002  002AD0                     __end_of_FastTransfer_buffer_flush:
  3003                           	opt stack 0
  3004                           tosu	equ	0xFFF
  3005                           tosh	equ	0xFFE
  3006                           tosl	equ	0xFFD
  3007                           pclath	equ	0xFFA
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           intcon	equ	0xFF2
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           indf2	equ	0xFDF
  3016                           postinc2	equ	0xFDE
  3017                           postdec2	equ	0xFDD
  3018                           plusw2	equ	0xFDB
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _buttonsCollector *****************
  3024 ;; Defined at:
  3025 ;;		line 61 in file "Communications.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  i               2   39[COMRAM] int 
  3030 ;;  sendVal         2   37[COMRAM] unsigned int 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  2   32[COMRAM] unsigned int 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3040 ;;      Params:         2       0       0       0       0       0       0
  3041 ;;      Locals:         4       0       0       0       0       0       0
  3042 ;;      Temps:          3       0       0       0       0       0       0
  3043 ;;      Totals:         9       0       0       0       0       0       0
  3044 ;;Total ram usage:        9 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    5
  3047 ;; This function calls:
  3048 ;;		_GetButtonState
  3049 ;; This function is called by:
  3050 ;;		_respondECU
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text6
  3055  002930                     __ptext6:
  3056                           	opt stack 0
  3057  002930                     _buttonsCollector:
  3058                           	opt stack 23
  3059                           
  3060                           ;Communications.c: 62: unsigned int sendVal = 0;
  3061                           
  3062                           ;incstack = 0
  3063  002930  0E00               	movlw	0
  3064  002932  6E27               	movwf	buttonsCollector@sendVal+1,c
  3065  002934  0E00               	movlw	0
  3066  002936  6E26               	movwf	buttonsCollector@sendVal,c
  3067                           
  3068                           ;Communications.c: 63: int i = 0;
  3069  002938  0E00               	movlw	0
  3070  00293A  6E29               	movwf	buttonsCollector@i+1,c
  3071  00293C  0E00               	movlw	0
  3072  00293E  6E28               	movwf	buttonsCollector@i,c
  3073                           
  3074                           ;Communications.c: 64: for (i = 0; i < 8; i++) {
  3075  002940  0E00               	movlw	0
  3076  002942  6E29               	movwf	buttonsCollector@i+1,c
  3077  002944  0E00               	movlw	0
  3078  002946  6E28               	movwf	buttonsCollector@i,c
  3079  002948  BE29               	btfsc	buttonsCollector@i+1,7,c
  3080  00294A  D006               	goto	l4422
  3081  00294C  5029               	movf	buttonsCollector@i+1,w,c
  3082  00294E  E123               	bnz	l935
  3083  002950  0E08               	movlw	8
  3084  002952  5C28               	subwf	buttonsCollector@i,w,c
  3085  002954  B0D8               	btfsc	status,0,c
  3086  002956  D01F               	goto	l935
  3087  002958                     l4422:
  3088                           
  3089                           ;Communications.c: 65: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  3090  002958  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  3091  00295C  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  3092  002960  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  3093  002964  ECE2  F017         	call	_GetButtonState	;wreg free
  3094  002968  0B01               	andlw	1
  3095  00296A  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  3096  00296C  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  3097  00296E  2A23               	incf	??_buttonsCollector,f,c
  3098  002970  D003               	goto	u3534
  3099  002972                     u3535:
  3100  002972  90D8               	bcf	status,0,c
  3101  002974  3624               	rlcf	??_buttonsCollector+1,f,c
  3102  002976  3625               	rlcf	??_buttonsCollector+2,f,c
  3103  002978                     u3534:
  3104  002978  2E23               	decfsz	??_buttonsCollector,f,c
  3105  00297A  D7FB               	goto	u3535
  3106  00297C  5026               	movf	buttonsCollector@sendVal,w,c
  3107  00297E  1024               	iorwf	??_buttonsCollector+1,w,c
  3108  002980  6E26               	movwf	buttonsCollector@sendVal,c
  3109  002982  5027               	movf	buttonsCollector@sendVal+1,w,c
  3110  002984  1025               	iorwf	??_buttonsCollector+2,w,c
  3111  002986  6E27               	movwf	buttonsCollector@sendVal+1,c
  3112  002988  4A28               	infsnz	buttonsCollector@i,f,c
  3113  00298A  2A29               	incf	buttonsCollector@i+1,f,c
  3114  00298C  BE29               	btfsc	buttonsCollector@i+1,7,c
  3115  00298E  D7E4               	goto	l4422
  3116  002990  5029               	movf	buttonsCollector@i+1,w,c
  3117  002992  E101               	bnz	u3540
  3118  002994  D7DD               	goto	L1
  3119  002996                     u3540:
  3120  002996                     l935:
  3121                           
  3122                           ;Communications.c: 66: }
  3123                           ;Communications.c: 67: return sendVal;
  3124  002996  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  3125  00299A  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  3126  00299E  0012               	return		;funcret
  3127  0029A0                     __end_of_buttonsCollector:
  3128                           	opt stack 0
  3129                           tosu	equ	0xFFF
  3130                           tosh	equ	0xFFE
  3131                           tosl	equ	0xFFD
  3132                           pclath	equ	0xFFA
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           intcon	equ	0xFF2
  3138                           postinc0	equ	0xFEE
  3139                           wreg	equ	0xFE8
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           plusw2	equ	0xFDB
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _GetButtonState *****************
  3149 ;; Defined at:
  3150 ;;		line 184 in file "IO.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  btnnum          2   26[COMRAM] int 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      unsigned char 
  3157 ;; Registers used:
  3158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3164 ;;      Params:         2       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0
  3166 ;;      Temps:          4       0       0       0       0       0       0
  3167 ;;      Totals:         6       0       0       0       0       0       0
  3168 ;;Total ram usage:        6 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    4
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_buttonsCollector
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text7
  3179  002FC4                     __ptext7:
  3180                           	opt stack 0
  3181  002FC4                     _GetButtonState:
  3182                           	opt stack 23
  3183                           
  3184                           ;IO.c: 185: return butnarray[btnnum - 1];
  3185                           
  3186                           ;incstack = 0
  3187  002FC4  0EFF               	movlw	255
  3188  002FC6  6E1D               	movwf	??_GetButtonState& (0+255),c
  3189  002FC8  0EFF               	movlw	255
  3190  002FCA  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  3191  002FCC  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  3192  002FD0  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  3193  002FD4  501D               	movf	??_GetButtonState,w,c
  3194  002FD6  261F               	addwf	??_GetButtonState+2,f,c
  3195  002FD8  501E               	movf	??_GetButtonState+1,w,c
  3196  002FDA  2220               	addwfc	??_GetButtonState+3,f,c
  3197  002FDC  0EB0               	movlw	low _butnarray
  3198  002FDE  241F               	addwf	??_GetButtonState+2,w,c
  3199  002FE0  6ED9               	movwf	fsr2l,c
  3200  002FE2  0E00               	movlw	high _butnarray
  3201  002FE4  2020               	addwfc	??_GetButtonState+3,w,c
  3202  002FE6  6EDA               	movwf	fsr2h,c
  3203  002FE8  50DF               	movf	indf2,w,c
  3204  002FEA  0012               	return	
  3205  002FEC                     __end_of_GetButtonState:
  3206                           	opt stack 0
  3207                           tosu	equ	0xFFF
  3208                           tosh	equ	0xFFE
  3209                           tosl	equ	0xFFD
  3210                           pclath	equ	0xFFA
  3211                           tblptru	equ	0xFF8
  3212                           tblptrh	equ	0xFF7
  3213                           tblptrl	equ	0xFF6
  3214                           tablat	equ	0xFF5
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           indf2	equ	0xFDF
  3219                           postinc2	equ	0xFDE
  3220                           postdec2	equ	0xFDD
  3221                           plusw2	equ	0xFDB
  3222                           fsr2h	equ	0xFDA
  3223                           fsr2l	equ	0xFD9
  3224                           status	equ	0xFD8
  3225                           
  3226 ;; *************** function _ToSend *****************
  3227 ;; Defined at:
  3228 ;;		line 219 in file "FastTransfer.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  where           1    wreg     unsigned char 
  3231 ;;  what            2    0[BANK0 ] unsigned int 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  where           1   41[COMRAM] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3243 ;;      Params:         0       2       0       0       0       0       0
  3244 ;;      Locals:         1       0       0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0
  3246 ;;      Totals:         1       2       0       0       0       0       0
  3247 ;;Total ram usage:        3 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    6
  3250 ;; This function calls:
  3251 ;;		_FastTransfer_buffer_put
  3252 ;; This function is called by:
  3253 ;;		_respondECU
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text8
  3258  0030DA                     __ptext8:
  3259                           	opt stack 0
  3260  0030DA                     _ToSend:
  3261                           	opt stack 22
  3262                           
  3263                           ;incstack = 0
  3264                           ;ToSend@where stored from wreg
  3265  0030DA  6E2A               	movwf	ToSend@where,c
  3266                           
  3267                           ;FastTransfer.c: 220: FastTransfer_buffer_put(&ring_buffer, where, what);
  3268  0030DC  0E00               	movlw	low _ring_buffer
  3269  0030DE  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3270  0030E0  0E02               	movlw	high _ring_buffer
  3271  0030E2  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3272  0030E4  C02A  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3273  0030E8  C0F2  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3274  0030EC  C0F3  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3275  0030F0  EC74  F009         	call	_FastTransfer_buffer_put	;wreg free
  3276  0030F4  0012               	return		;funcret
  3277  0030F6                     __end_of_ToSend:
  3278                           	opt stack 0
  3279                           tosu	equ	0xFFF
  3280                           tosh	equ	0xFFE
  3281                           tosl	equ	0xFFD
  3282                           pclath	equ	0xFFA
  3283                           tblptru	equ	0xFF8
  3284                           tblptrh	equ	0xFF7
  3285                           tblptrl	equ	0xFF6
  3286                           tablat	equ	0xFF5
  3287                           intcon	equ	0xFF2
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           indf2	equ	0xFDF
  3291                           postinc2	equ	0xFDE
  3292                           postdec2	equ	0xFDD
  3293                           plusw2	equ	0xFDB
  3294                           fsr2h	equ	0xFDA
  3295                           fsr2l	equ	0xFD9
  3296                           status	equ	0xFD8
  3297                           
  3298 ;; *************** function _FastTransfer_buffer_put *****************
  3299 ;; Defined at:
  3300 ;;		line 226 in file "FastTransfer.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3303 ;;		 -> ring_buffer(206), 
  3304 ;;  towhere         1   34[COMRAM] unsigned char 
  3305 ;;  towhat          2   35[COMRAM] unsigned int 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3317 ;;      Params:         5       0       0       0       0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0
  3319 ;;      Temps:          2       0       0       0       0       0       0
  3320 ;;      Totals:         7       0       0       0       0       0       0
  3321 ;;Total ram usage:        7 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    5
  3324 ;; This function calls:
  3325 ;;		_FastTransfer_buffer_modulo_inc
  3326 ;; This function is called by:
  3327 ;;		_ToSend
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text9
  3332  0012E8                     __ptext9:
  3333                           	opt stack 0
  3334  0012E8                     _FastTransfer_buffer_put:
  3335                           	opt stack 22
  3336                           
  3337                           ;FastTransfer.c: 228: group.integer = towhat;
  3338                           
  3339                           ;incstack = 0
  3340  0012E8  C024  F02B         	movff	FastTransfer_buffer_put@towhat,_group
  3341  0012EC  C025  F02C         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3342                           
  3343                           ;FastTransfer.c: 230: if (_this->count < (200 - 3)) {
  3344  0012F0  EE20 F0CC          	lfsr	2,204
  3345  0012F4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3346  0012F6  26D9               	addwf	fsr2l,f,c
  3347  0012F8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3348  0012FA  22DA               	addwfc	fsr2h,f,c
  3349  0012FC  0E01               	movlw	1
  3350  0012FE  BEDB               	btfsc	plusw2,7,c
  3351  001300  D007               	goto	l4142
  3352  001302  0E01               	movlw	1
  3353  001304  50DB               	movf	plusw2,w,c
  3354  001306  E103               	bnz	u3171
  3355  001308  0EC5               	movlw	197
  3356  00130A  5CDE               	subwf	postinc2,w,c
  3357  00130C  B0D8               	btfsc	status,0,c
  3358  00130E                     u3171:
  3359  00130E  0012               	return	
  3360  001310                     l4142:
  3361                           
  3362                           ;FastTransfer.c: 231: _this->buf[_this->head] = towhere;
  3363  001310  EE20 F0C8          	lfsr	2,200
  3364  001314  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3365  001316  26D9               	addwf	fsr2l,f,c
  3366  001318  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3367  00131A  22DA               	addwfc	fsr2h,f,c
  3368  00131C  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3369  001320  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3370  001324  5026               	movf	??_FastTransfer_buffer_put,w,c
  3371  001326  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3372  001328  6ED9               	movwf	fsr2l,c
  3373  00132A  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3374  00132C  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3375  00132E  6EDA               	movwf	fsr2h,c
  3376  001330  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3377                           
  3378                           ;FastTransfer.c: 232: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3379  001334  EE20 F0C8          	lfsr	2,200
  3380  001338  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3381  00133A  26D9               	addwf	fsr2l,f,c
  3382  00133C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3383  00133E  22DA               	addwfc	fsr2h,f,c
  3384  001340  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3385  001344  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3386  001348  0E00               	movlw	0
  3387  00134A  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3388  00134C  0EC8               	movlw	200
  3389  00134E  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3390  001350  ECA3  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3391  001354  EE20 F0C8          	lfsr	2,200
  3392  001358  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3393  00135A  26D9               	addwf	fsr2l,f,c
  3394  00135C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3395  00135E  22DA               	addwfc	fsr2h,f,c
  3396  001360  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3397  001364  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3398                           
  3399                           ;FastTransfer.c: 233: ++_this->count;
  3400  001368  EE20 F0CC          	lfsr	2,204
  3401  00136C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3402  00136E  26D9               	addwf	fsr2l,f,c
  3403  001370  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3404  001372  22DA               	addwfc	fsr2h,f,c
  3405  001374  2ADE               	incf	postinc2,f,c
  3406  001376  0E00               	movlw	0
  3407  001378  22DD               	addwfc	postdec2,f,c
  3408                           
  3409                           ;FastTransfer.c: 234: _this->buf[_this->head] = group.parts[0];
  3410  00137A  EE20 F0C8          	lfsr	2,200
  3411  00137E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3412  001380  26D9               	addwf	fsr2l,f,c
  3413  001382  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3414  001384  22DA               	addwfc	fsr2h,f,c
  3415  001386  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3416  00138A  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3417  00138E  5026               	movf	??_FastTransfer_buffer_put,w,c
  3418  001390  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3419  001392  6ED9               	movwf	fsr2l,c
  3420  001394  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3421  001396  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3422  001398  6EDA               	movwf	fsr2h,c
  3423  00139A  C02B  FFDF         	movff	_group,indf2
  3424                           
  3425                           ;FastTransfer.c: 235: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3426  00139E  EE20 F0C8          	lfsr	2,200
  3427  0013A2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3428  0013A4  26D9               	addwf	fsr2l,f,c
  3429  0013A6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3430  0013A8  22DA               	addwfc	fsr2h,f,c
  3431  0013AA  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3432  0013AE  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3433  0013B2  0E00               	movlw	0
  3434  0013B4  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3435  0013B6  0EC8               	movlw	200
  3436  0013B8  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3437  0013BA  ECA3  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3438  0013BE  EE20 F0C8          	lfsr	2,200
  3439  0013C2  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3440  0013C4  26D9               	addwf	fsr2l,f,c
  3441  0013C6  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3442  0013C8  22DA               	addwfc	fsr2h,f,c
  3443  0013CA  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3444  0013CE  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3445                           
  3446                           ;FastTransfer.c: 236: ++_this->count;
  3447  0013D2  EE20 F0CC          	lfsr	2,204
  3448  0013D6  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3449  0013D8  26D9               	addwf	fsr2l,f,c
  3450  0013DA  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3451  0013DC  22DA               	addwfc	fsr2h,f,c
  3452  0013DE  2ADE               	incf	postinc2,f,c
  3453  0013E0  0E00               	movlw	0
  3454  0013E2  22DD               	addwfc	postdec2,f,c
  3455                           
  3456                           ;FastTransfer.c: 237: _this->buf[_this->head] = group.parts[1];
  3457  0013E4  EE20 F0C8          	lfsr	2,200
  3458  0013E8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3459  0013EA  26D9               	addwf	fsr2l,f,c
  3460  0013EC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3461  0013EE  22DA               	addwfc	fsr2h,f,c
  3462  0013F0  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3463  0013F4  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3464  0013F8  5026               	movf	??_FastTransfer_buffer_put,w,c
  3465  0013FA  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3466  0013FC  6ED9               	movwf	fsr2l,c
  3467  0013FE  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3468  001400  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3469  001402  6EDA               	movwf	fsr2h,c
  3470  001404  C02C  FFDF         	movff	_group+1,indf2
  3471                           
  3472                           ;FastTransfer.c: 238: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3473  001408  EE20 F0C8          	lfsr	2,200
  3474  00140C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3475  00140E  26D9               	addwf	fsr2l,f,c
  3476  001410  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3477  001412  22DA               	addwfc	fsr2h,f,c
  3478  001414  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3479  001418  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3480  00141C  0E00               	movlw	0
  3481  00141E  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3482  001420  0EC8               	movlw	200
  3483  001422  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3484  001424  ECA3  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3485  001428  EE20 F0C8          	lfsr	2,200
  3486  00142C  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3487  00142E  26D9               	addwf	fsr2l,f,c
  3488  001430  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3489  001432  22DA               	addwfc	fsr2h,f,c
  3490  001434  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3491  001438  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3492                           
  3493                           ;FastTransfer.c: 239: ++_this->count;
  3494  00143C  EE20 F0CC          	lfsr	2,204
  3495  001440  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3496  001442  26D9               	addwf	fsr2l,f,c
  3497  001444  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3498  001446  22DA               	addwfc	fsr2h,f,c
  3499  001448  2ADE               	incf	postinc2,f,c
  3500  00144A  0E00               	movlw	0
  3501  00144C  22DD               	addwfc	postdec2,f,c
  3502  00144E  0012               	return	
  3503  001450                     __end_of_FastTransfer_buffer_put:
  3504                           	opt stack 0
  3505                           tosu	equ	0xFFF
  3506                           tosh	equ	0xFFE
  3507                           tosl	equ	0xFFD
  3508                           pclath	equ	0xFFA
  3509                           tblptru	equ	0xFF8
  3510                           tblptrh	equ	0xFF7
  3511                           tblptrl	equ	0xFF6
  3512                           tablat	equ	0xFF5
  3513                           intcon	equ	0xFF2
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           indf2	equ	0xFDF
  3517                           postinc2	equ	0xFDE
  3518                           postdec2	equ	0xFDD
  3519                           plusw2	equ	0xFDB
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3525 ;; Defined at:
  3526 ;;		line 276 in file "FastTransfer.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  value           2   26[COMRAM] const unsigned int 
  3529 ;;  modulus         2   28[COMRAM] const unsigned int 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  my_value        2   30[COMRAM] unsigned int 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2   26[COMRAM] unsigned int 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3541 ;;      Params:         4       0       0       0       0       0       0
  3542 ;;      Locals:         2       0       0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0
  3544 ;;      Totals:         6       0       0       0       0       0       0
  3545 ;;Total ram usage:        6 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    4
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_FastTransfer_buffer_put
  3552 ;;		_FastTransfer_buffer_get
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text10
  3557  002F46                     __ptext10:
  3558                           	opt stack 0
  3559  002F46                     _FastTransfer_buffer_modulo_inc:
  3560                           	opt stack 22
  3561                           
  3562                           ;FastTransfer.c: 277: unsigned int my_value = value + 1;
  3563                           
  3564                           ;incstack = 0
  3565  002F46  0E01               	movlw	1
  3566  002F48  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3567  002F4A  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3568  002F4C  0E00               	movlw	0
  3569  002F4E  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3570  002F50  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3571                           
  3572                           ;FastTransfer.c: 278: if (my_value >= modulus) {
  3573  002F52  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3574  002F54  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3575  002F56  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3576  002F58  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3577  002F5A  A0D8               	btfss	status,0,c
  3578  002F5C  D004               	goto	l4002
  3579                           
  3580                           ;FastTransfer.c: 279: my_value = 0;
  3581  002F5E  0E00               	movlw	0
  3582  002F60  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3583  002F62  0E00               	movlw	0
  3584  002F64  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3585  002F66                     l4002:
  3586                           
  3587                           ;FastTransfer.c: 280: }
  3588                           ;FastTransfer.c: 281: return (my_value);
  3589  002F66  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3590  002F6A  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3591  002F6E  0012               	return	
  3592  002F70                     __end_of_FastTransfer_buffer_modulo_inc:
  3593                           	opt stack 0
  3594                           tosu	equ	0xFFF
  3595                           tosh	equ	0xFFE
  3596                           tosl	equ	0xFFD
  3597                           pclath	equ	0xFFA
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           intcon	equ	0xFF2
  3603                           postinc0	equ	0xFEE
  3604                           wreg	equ	0xFE8
  3605                           indf2	equ	0xFDF
  3606                           postinc2	equ	0xFDE
  3607                           postdec2	equ	0xFDD
  3608                           plusw2	equ	0xFDB
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _Delay *****************
  3614 ;; Defined at:
  3615 ;;		line 6 in file "Function.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  wait            2   26[COMRAM] int 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  x               2   29[COMRAM] int 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3629 ;;      Params:         2       0       0       0       0       0       0
  3630 ;;      Locals:         2       0       0       0       0       0       0
  3631 ;;      Temps:          1       0       0       0       0       0       0
  3632 ;;      Totals:         5       0       0       0       0       0       0
  3633 ;;Total ram usage:        5 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    4
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_respondECU
  3640 ;;		_TestBarGraph
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text11
  3645  002E86                     __ptext11:
  3646                           	opt stack 0
  3647  002E86                     _Delay:
  3648                           	opt stack 24
  3649                           
  3650                           ;Function.c: 7: int x;
  3651                           ;Function.c: 8: for (x = 0; x < wait; x++) {
  3652                           
  3653                           ;incstack = 0
  3654  002E86  0E00               	movlw	0
  3655  002E88  6E1F               	movwf	Delay@x+1,c
  3656  002E8A  0E00               	movlw	0
  3657  002E8C  6E1E               	movwf	Delay@x,c
  3658  002E8E  D00A               	goto	l1334
  3659  002E90                     l4430:
  3660                           
  3661                           ;Function.c: 9: _delay((unsigned long)((1)*(16000000/4000.0)));
  3662  002E90  0E06               	movlw	6
  3663  002E92  6E1D               	movwf	??_Delay& (0+255),c
  3664  002E94  0E30               	movlw	48
  3665  002E96                     u8477:
  3666  002E96  2EE8               	decfsz	wreg,f,c
  3667  002E98  D7FE               	goto	u8477
  3668  002E9A  2E1D               	decfsz	??_Delay& (0+255),f,c
  3669  002E9C  D7FC               	goto	u8477
  3670  002E9E  D000               	nop2	
  3671  002EA0  4A1E               	infsnz	Delay@x,f,c
  3672  002EA2  2A1F               	incf	Delay@x+1,f,c
  3673  002EA4                     l1334:
  3674  002EA4  501B               	movf	Delay@wait,w,c
  3675  002EA6  5C1E               	subwf	Delay@x,w,c
  3676  002EA8  501F               	movf	Delay@x+1,w,c
  3677  002EAA  0A80               	xorlw	128
  3678  002EAC  6E1D               	movwf	??_Delay& (0+255),c
  3679  002EAE  501C               	movf	Delay@wait+1,w,c
  3680  002EB0  0A80               	xorlw	128
  3681  002EB2  581D               	subwfb	??_Delay& (0+255),w,c
  3682  002EB4  B0D8               	btfsc	status,0,c
  3683  002EB6  0012               	return	
  3684  002EB8  D7EB               	goto	l4430
  3685  002EBA                     __end_of_Delay:
  3686                           	opt stack 0
  3687                           tosu	equ	0xFFF
  3688                           tosh	equ	0xFFE
  3689                           tosl	equ	0xFFD
  3690                           pclath	equ	0xFFA
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           intcon	equ	0xFF2
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           indf2	equ	0xFDF
  3699                           postinc2	equ	0xFDE
  3700                           postdec2	equ	0xFDD
  3701                           plusw2	equ	0xFDB
  3702                           fsr2h	equ	0xFDA
  3703                           fsr2l	equ	0xFD9
  3704                           status	equ	0xFD8
  3705                           
  3706 ;; *************** function _receiveData *****************
  3707 ;; Defined at:
  3708 ;;		line 83 in file "FastTransfer.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  holder          3    9[BANK1 ] unsigned char [3]
  3713 ;;  crcHolder       1   13[BANK1 ] unsigned char 
  3714 ;;  holder          3    6[BANK1 ] unsigned char [3]
  3715 ;;  crcHolder       1   12[BANK1 ] unsigned char 
  3716 ;;  u               2   14[BANK1 ] int 
  3717 ;;  r               2   16[BANK1 ] int 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3727 ;;      Params:         0       0       0       0       0       0       0
  3728 ;;      Locals:         0       0      12       0       0       0       0
  3729 ;;      Temps:          0       0       6       0       0       0       0
  3730 ;;      Totals:         0       0      18       0       0       0       0
  3731 ;;Total ram usage:       18 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    8
  3734 ;; This function calls:
  3735 ;;		Absolute function
  3736 ;;		_CRC8
  3737 ;;		_CRCcheck
  3738 ;;		_Receive_available
  3739 ;;		_Receive_get
  3740 ;;		_Receive_peek
  3741 ;;		_Send_put
  3742 ;; This function is called by:
  3743 ;;		_updateComms
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text12
  3748  0000D4                     __ptext12:
  3749                           	opt stack 0
  3750  0000D4                     _receiveData:
  3751                           	opt stack 21
  3752                           
  3753                           ;FastTransfer.c: 86: if (rx_len == 0) {
  3754                           
  3755                           ;incstack = 0
  3756  0000D4  503E               	movf	_rx_len,w,c
  3757  0000D6  A4D8               	btfss	status,2,c
  3758  0000D8  D0B1               	goto	l6592
  3759                           
  3760                           ;FastTransfer.c: 88: if (serial_available() > 4) {
  3761  0000DA  D801               	call	u7148
  3762  0000DC  D00A               	goto	u7149
  3763  0000DE                     u7148:
  3764  0000DE  0005               	push	
  3765  0000E0  6EFA               	movwf	pclath,c
  3766  0000E2  502F               	movf	_serial_available,w,c
  3767  0000E4  6EFD               	movwf	tosl,c
  3768  0000E6  5030               	movf	_serial_available+1,w,c
  3769  0000E8  6EFE               	movwf	tosh,c
  3770  0000EA  50F8               	movf	tblptru,w,c
  3771  0000EC  6EFF               	movwf	tosu,c
  3772  0000EE  50FA               	movf	pclath,w,c
  3773  0000F0  0012               	return		;indir
  3774  0000F2                     u7149:
  3775  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  3776  0000F4  D0A3               	goto	l6592
  3777  0000F6  501E               	movf	?_Receive_available+1,w,c
  3778  0000F8  E104               	bnz	u7150
  3779  0000FA  0E05               	movlw	5
  3780  0000FC  5C1D               	subwf	?_Receive_available,w,c
  3781  0000FE  A0D8               	btfss	status,0,c
  3782  000100  D09D               	goto	l6592
  3783  000102                     u7150:
  3784                           
  3785                           ;FastTransfer.c: 89: do { LATA3 = ~LATA3; } while(0);
  3786  000102  B689               	btfsc	3977,3,c	;volatile
  3787  000104  D002               	goto	u7160
  3788  000106  8689               	bsf	3977,3,c	;volatile
  3789  000108  D01B               	goto	l6568
  3790  00010A                     u7160:
  3791  00010A  9689               	bcf	3977,3,c	;volatile
  3792                           
  3793                           ;FastTransfer.c: 91: while (serial_read() != 0x06) {
  3794  00010C  D019               	goto	l6568
  3795  00010E                     l6560:
  3796                           
  3797                           ;FastTransfer.c: 95: alignErrorCounter++;
  3798  00010E  0100               	movlb	0	; () banked
  3799  000110  4BC9               	infsnz	_alignErrorCounter& (0+255),f,b
  3800  000112  2BCA               	incf	(_alignErrorCounter+1)& (0+255),f,b
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;FastTransfer.c: 96: if (serial_available() < 5)
  3804  000114  D801               	call	u7188
  3805  000116  D00A               	goto	u7189
  3806  000118                     u7188:
  3807  000118  0005               	push	
  3808  00011A  6EFA               	movwf	pclath,c
  3809  00011C  502F               	movf	_serial_available,w,c
  3810  00011E  6EFD               	movwf	tosl,c
  3811  000120  5030               	movf	_serial_available+1,w,c
  3812  000122  6EFE               	movwf	tosh,c
  3813  000124  50F8               	movf	tblptru,w,c
  3814  000126  6EFF               	movwf	tosu,c
  3815  000128  50FA               	movf	pclath,w,c
  3816  00012A  0012               	return		;indir
  3817  00012C                     u7189:
  3818  00012C  BE1E               	btfsc	?_Receive_available+1,7,c
  3819  00012E  D006               	goto	l6564
  3820  000130  501E               	movf	?_Receive_available+1,w,c
  3821  000132  E106               	bnz	l6568
  3822  000134  0E05               	movlw	5
  3823  000136  5C1D               	subwf	?_Receive_available,w,c
  3824  000138  B0D8               	btfsc	status,0,c
  3825  00013A  D002               	goto	l6568
  3826  00013C                     l6564:
  3827                           
  3828                           ;FastTransfer.c: 97: return 0;
  3829  00013C  0E00               	movlw	0
  3830  00013E  0012               	return	
  3831  000140                     l6568:
  3832  000140  D801               	call	u7208
  3833  000142  D00A               	goto	u7209
  3834  000144                     u7208:
  3835  000144  0005               	push	
  3836  000146  6EFA               	movwf	pclath,c
  3837  000148  5031               	movf	_serial_read,w,c
  3838  00014A  6EFD               	movwf	tosl,c
  3839  00014C  5032               	movf	_serial_read+1,w,c
  3840  00014E  6EFE               	movwf	tosh,c
  3841  000150  50F8               	movf	tblptru,w,c
  3842  000152  6EFF               	movwf	tosu,c
  3843  000154  50FA               	movf	pclath,w,c
  3844  000156  0012               	return		;indir
  3845  000158                     u7209:
  3846  000158  0A06               	xorlw	6
  3847  00015A  A4D8               	btfss	status,2,c
  3848  00015C  D7D8               	goto	l6560
  3849                           
  3850                           ;FastTransfer.c: 98: }
  3851                           ;FastTransfer.c: 99: if (serial_read() == 0x85) {
  3852  00015E  D801               	call	u7228
  3853  000160  D00A               	goto	u7229
  3854  000162                     u7228:
  3855  000162  0005               	push	
  3856  000164  6EFA               	movwf	pclath,c
  3857  000166  5031               	movf	_serial_read,w,c
  3858  000168  6EFD               	movwf	tosl,c
  3859  00016A  5032               	movf	_serial_read+1,w,c
  3860  00016C  6EFE               	movwf	tosh,c
  3861  00016E  50F8               	movf	tblptru,w,c
  3862  000170  6EFF               	movwf	tosu,c
  3863  000172  50FA               	movf	pclath,w,c
  3864  000174  0012               	return		;indir
  3865  000176                     u7229:
  3866  000176  0A85               	xorlw	133
  3867  000178  A4D8               	btfss	status,2,c
  3868  00017A  D060               	goto	l6592
  3869                           
  3870                           ;FastTransfer.c: 101: rx_address = serial_read();
  3871  00017C  D801               	call	u7248
  3872  00017E  D00A               	goto	u7249
  3873  000180                     u7248:
  3874  000180  0005               	push	
  3875  000182  6EFA               	movwf	pclath,c
  3876  000184  5031               	movf	_serial_read,w,c
  3877  000186  6EFD               	movwf	tosl,c
  3878  000188  5032               	movf	_serial_read+1,w,c
  3879  00018A  6EFE               	movwf	tosh,c
  3880  00018C  50F8               	movf	tblptru,w,c
  3881  00018E  6EFF               	movwf	tosu,c
  3882  000190  50FA               	movf	pclath,w,c
  3883  000192  0012               	return		;indir
  3884  000194                     u7249:
  3885  000194  6E3C               	movwf	_rx_address,c
  3886                           
  3887                           ;FastTransfer.c: 102: returnAddress = serial_read();
  3888  000196  D801               	call	u7258
  3889  000198  D00A               	goto	u7259
  3890  00019A                     u7258:
  3891  00019A  0005               	push	
  3892  00019C  6EFA               	movwf	pclath,c
  3893  00019E  5031               	movf	_serial_read,w,c
  3894  0001A0  6EFD               	movwf	tosl,c
  3895  0001A2  5032               	movf	_serial_read+1,w,c
  3896  0001A4  6EFE               	movwf	tosh,c
  3897  0001A6  50F8               	movf	tblptru,w,c
  3898  0001A8  6EFF               	movwf	tosu,c
  3899  0001AA  50FA               	movf	pclath,w,c
  3900  0001AC  0012               	return		;indir
  3901  0001AE                     u7259:
  3902  0001AE  6E3B               	movwf	_returnAddress,c
  3903                           
  3904                           ;FastTransfer.c: 103: rx_len = serial_read();
  3905  0001B0  D801               	call	u7268
  3906  0001B2  D00A               	goto	u7269
  3907  0001B4                     u7268:
  3908  0001B4  0005               	push	
  3909  0001B6  6EFA               	movwf	pclath,c
  3910  0001B8  5031               	movf	_serial_read,w,c
  3911  0001BA  6EFD               	movwf	tosl,c
  3912  0001BC  5032               	movf	_serial_read+1,w,c
  3913  0001BE  6EFE               	movwf	tosh,c
  3914  0001C0  50F8               	movf	tblptru,w,c
  3915  0001C2  6EFF               	movwf	tosu,c
  3916  0001C4  50FA               	movf	pclath,w,c
  3917  0001C6  0012               	return		;indir
  3918  0001C8                     u7269:
  3919  0001C8  6E3E               	movwf	_rx_len,c
  3920                           
  3921                           ;FastTransfer.c: 105: if (rx_address != moduleAddress) {
  3922  0001CA  503A               	movf	_moduleAddress,w,c
  3923  0001CC  183C               	xorwf	_rx_address,w,c
  3924  0001CE  B4D8               	btfsc	status,2,c
  3925  0001D0  D035               	goto	l6592
  3926                           
  3927                           ;FastTransfer.c: 106: addressErrorCounter++;
  3928  0001D2  0100               	movlb	0	; () banked
  3929  0001D4  4BC7               	infsnz	_addressErrorCounter& (0+255),f,b
  3930  0001D6  2BC8               	incf	(_addressErrorCounter+1)& (0+255),f,b
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;FastTransfer.c: 109: int u;
  3934                           ;FastTransfer.c: 110: for (u = 0; u <= (rx_len + 1); u++) {
  3935  0001D8  0E00               	movlw	0
  3936  0001DA  0101               	movlb	1	; () banked
  3937  0001DC  6F48               	movwf	(receiveData@u+1)& (0+255),b
  3938  0001DE  0E00               	movlw	0
  3939  0001E0  6F47               	movwf	receiveData@u& (0+255),b
  3940  0001E2  D00F               	goto	l6584
  3941  0001E4                     l6580:
  3942                           
  3943                           ; BSR set to: 1
  3944                           ;FastTransfer.c: 111: serial_read();
  3945  0001E4  D801               	call	u7288
  3946  0001E6  D00A               	goto	l6582
  3947  0001E8                     u7288:
  3948  0001E8  0005               	push	
  3949  0001EA  6EFA               	movwf	pclath,c
  3950  0001EC  5031               	movf	_serial_read,w,c
  3951  0001EE  6EFD               	movwf	tosl,c
  3952  0001F0  5032               	movf	_serial_read+1,w,c
  3953  0001F2  6EFE               	movwf	tosh,c
  3954  0001F4  50F8               	movf	tblptru,w,c
  3955  0001F6  6EFF               	movwf	tosu,c
  3956  0001F8  50FA               	movf	pclath,w,c
  3957  0001FA  0012               	return		;indir
  3958  0001FC                     l6582:
  3959  0001FC  0101               	movlb	1	; () banked
  3960  0001FE  4B47               	infsnz	receiveData@u& (0+255),f,b
  3961  000200  2B48               	incf	(receiveData@u+1)& (0+255),f,b
  3962  000202                     l6584:
  3963                           
  3964                           ; BSR set to: 1
  3965  000202  503E               	movf	_rx_len,w,c
  3966  000204  0101               	movlb	1	; () banked
  3967  000206  6F39               	movwf	??_receiveData& (0+255),b
  3968  000208  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  3969  00020A  0E01               	movlw	1
  3970  00020C  0101               	movlb	1	; () banked
  3971  00020E  2739               	addwf	??_receiveData& (0+255),f,b
  3972  000210  0E00               	movlw	0
  3973  000212  233A               	addwfc	(??_receiveData+1)& (0+255),f,b
  3974  000214  0101               	movlb	1	; () banked
  3975  000216  5147               	movf	receiveData@u& (0+255),w,b
  3976  000218  0101               	movlb	1	; () banked
  3977  00021A  5D39               	subwf	??_receiveData& (0+255),w,b
  3978  00021C  0101               	movlb	1	; () banked
  3979  00021E  513A               	movf	(??_receiveData+1)& (0+255),w,b
  3980  000220  0A80               	xorlw	128
  3981  000222  0101               	movlb	1	; () banked
  3982  000224  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  3983  000226  0101               	movlb	1	; () banked
  3984  000228  5148               	movf	(receiveData@u+1)& (0+255),w,b
  3985  00022A  0A80               	xorlw	128
  3986  00022C  0101               	movlb	1	; () banked
  3987  00022E  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  3988  000230  B0D8               	btfsc	status,0,c
  3989  000232  D7D8               	goto	l6580
  3990                           
  3991                           ; BSR set to: 1
  3992                           ;FastTransfer.c: 112: }
  3993                           ;FastTransfer.c: 113: rx_len = 0;
  3994                           
  3995                           ; BSR set to: 1
  3996  000234  0E00               	movlw	0
  3997  000236  6E3E               	movwf	_rx_len,c
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;FastTransfer.c: 114: return 0;
  4001  000238  0E00               	movlw	0
  4002                           
  4003                           ; BSR set to: 1
  4004  00023A  0012               	return	
  4005  00023C                     l6592:
  4006                           
  4007                           ;FastTransfer.c: 115: }
  4008                           ;FastTransfer.c: 117: }
  4009                           ;FastTransfer.c: 118: }
  4010                           ;FastTransfer.c: 119: }
  4011                           ;FastTransfer.c: 122: if (rx_len != 0) {
  4012  00023C  503E               	movf	_rx_len,w,c
  4013  00023E  B4D8               	btfsc	status,2,c
  4014  000240  D2A6               	goto	l6716
  4015                           
  4016                           ;FastTransfer.c: 125: if (rx_array_inx == 0) {
  4017  000242  503D               	movf	_rx_array_inx,w,c
  4018  000244  A4D8               	btfss	status,2,c
  4019  000246  D044               	goto	l6616
  4020  000248                     l6598:
  4021  000248  D801               	call	u7328
  4022  00024A  D00A               	goto	u7329
  4023  00024C                     u7328:
  4024  00024C  0005               	push	
  4025  00024E  6EFA               	movwf	pclath,c
  4026  000250  502F               	movf	_serial_available,w,c
  4027  000252  6EFD               	movwf	tosl,c
  4028  000254  5030               	movf	_serial_available+1,w,c
  4029  000256  6EFE               	movwf	tosh,c
  4030  000258  50F8               	movf	tblptru,w,c
  4031  00025A  6EFF               	movwf	tosu,c
  4032  00025C  50FA               	movf	pclath,w,c
  4033  00025E  0012               	return		;indir
  4034  000260                     u7329:
  4035  000260  BE1E               	btfsc	?_Receive_available+1,7,c
  4036  000262  D7F2               	goto	l6598
  4037  000264  501E               	movf	?_Receive_available+1,w,c
  4038  000266  E103               	bnz	l6600
  4039  000268  041D               	decf	?_Receive_available,w,c
  4040  00026A  A0D8               	btfss	status,0,c
  4041  00026C  D7ED               	goto	l6598
  4042  00026E                     l6600:
  4043                           
  4044                           ;FastTransfer.c: 127: if (255 == serial_peek()) {
  4045  00026E  D801               	call	u7348
  4046  000270  D00B               	goto	u7349
  4047  000272                     u7348:
  4048  000272  0005               	push	
  4049  000274  0100               	movlb	0	; () banked
  4050  000276  6EFA               	movwf	pclath,c
  4051  000278  51DB               	movf	_serial_peek& (0+255),w,b
  4052  00027A  6EFD               	movwf	tosl,c
  4053  00027C  51DC               	movf	(_serial_peek+1)& (0+255),w,b
  4054  00027E  6EFE               	movwf	tosh,c
  4055  000280  50F8               	movf	tblptru,w,c
  4056  000282  6EFF               	movwf	tosu,c
  4057  000284  50FA               	movf	pclath,w,c
  4058  000286  0012               	return		;indir
  4059  000288                     u7349:
  4060  000288  0AFF               	xorlw	255
  4061  00028A  A4D8               	btfss	status,2,c
  4062  00028C  D021               	goto	l6616
  4063                           
  4064                           ;FastTransfer.c: 128: CRCcheck();
  4065  00028E  EC28  F00A         	call	_CRCcheck	;wreg free
  4066                           
  4067                           ;FastTransfer.c: 129: rx_len = 0;
  4068  000292  0E00               	movlw	0
  4069  000294  6E3E               	movwf	_rx_len,c
  4070                           
  4071                           ;FastTransfer.c: 130: rx_array_inx = 0;
  4072  000296  0E00               	movlw	0
  4073  000298  6E3D               	movwf	_rx_array_inx,c
  4074                           
  4075                           ;FastTransfer.c: 131: return 0;
  4076  00029A  0E00               	movlw	0
  4077  00029C  0012               	return	
  4078  00029E                     l6612:
  4079                           
  4080                           ;FastTransfer.c: 137: rx_buffer[rx_array_inx++] = serial_read();
  4081  00029E  D801               	call	u7368
  4082  0002A0  D00A               	goto	u7369
  4083  0002A2                     u7368:
  4084  0002A2  0005               	push	
  4085  0002A4  6EFA               	movwf	pclath,c
  4086  0002A6  5031               	movf	_serial_read,w,c
  4087  0002A8  6EFD               	movwf	tosl,c
  4088  0002AA  5032               	movf	_serial_read+1,w,c
  4089  0002AC  6EFE               	movwf	tosh,c
  4090  0002AE  50F8               	movf	tblptru,w,c
  4091  0002B0  6EFF               	movwf	tosu,c
  4092  0002B2  50FA               	movf	pclath,w,c
  4093  0002B4  0012               	return		;indir
  4094  0002B6                     u7369:
  4095  0002B6  0101               	movlb	1	; () banked
  4096  0002B8  6F39               	movwf	??_receiveData& (0+255),b
  4097  0002BA  503D               	movf	_rx_array_inx,w,c
  4098  0002BC  0D01               	mullw	1
  4099  0002BE  0E00               	movlw	low _rx_buffer
  4100  0002C0  24F3               	addwf	prodl,w,c
  4101  0002C2  6ED9               	movwf	fsr2l,c
  4102  0002C4  0E03               	movlw	high _rx_buffer
  4103  0002C6  20F4               	addwfc	prodh,w,c
  4104  0002C8  6EDA               	movwf	fsr2h,c
  4105  0002CA  C139  FFDF         	movff	??_receiveData,indf2
  4106                           
  4107                           ; BSR set to: 1
  4108  0002CE  2A3D               	incf	_rx_array_inx,f,c
  4109  0002D0                     l6616:
  4110  0002D0  D801               	call	u7378
  4111  0002D2  D00A               	goto	u7379
  4112  0002D4                     u7378:
  4113  0002D4  0005               	push	
  4114  0002D6  6EFA               	movwf	pclath,c
  4115  0002D8  502F               	movf	_serial_available,w,c
  4116  0002DA  6EFD               	movwf	tosl,c
  4117  0002DC  5030               	movf	_serial_available+1,w,c
  4118  0002DE  6EFE               	movwf	tosh,c
  4119  0002E0  50F8               	movf	tblptru,w,c
  4120  0002E2  6EFF               	movwf	tosu,c
  4121  0002E4  50FA               	movf	pclath,w,c
  4122  0002E6  0012               	return		;indir
  4123  0002E8                     u7379:
  4124  0002E8  501D               	movf	?_Receive_available,w,c
  4125  0002EA  101E               	iorwf	?_Receive_available+1,w,c
  4126  0002EC  B4D8               	btfsc	status,2,c
  4127  0002EE  D004               	goto	l6620
  4128  0002F0  503D               	movf	_rx_array_inx,w,c
  4129  0002F2  5C3E               	subwf	_rx_len,w,c
  4130  0002F4  B0D8               	btfsc	status,0,c
  4131  0002F6  D7D3               	goto	l6612
  4132  0002F8                     l6620:
  4133                           
  4134                           ;FastTransfer.c: 138: }
  4135                           ;FastTransfer.c: 140: if (rx_len == (rx_array_inx - 1)) {
  4136  0002F8  503E               	movf	_rx_len,w,c
  4137  0002FA  0101               	movlb	1	; () banked
  4138  0002FC  6F39               	movwf	??_receiveData& (0+255),b
  4139  0002FE  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4140  000300  0EFF               	movlw	255
  4141  000302  0101               	movlb	1	; () banked
  4142  000304  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4143  000306  0EFF               	movlw	255
  4144  000308  0101               	movlb	1	; () banked
  4145  00030A  6F3C               	movwf	(??_receiveData+3)& (0+255),b
  4146  00030C  503D               	movf	_rx_array_inx,w,c
  4147  00030E  0101               	movlb	1	; () banked
  4148  000310  6F3D               	movwf	(??_receiveData+4)& (0+255),b
  4149  000312  6B3E               	clrf	(??_receiveData+5)& (0+255),b
  4150  000314  0101               	movlb	1	; () banked
  4151  000316  513B               	movf	(??_receiveData+2)& (0+255),w,b
  4152  000318  0101               	movlb	1	; () banked
  4153  00031A  273D               	addwf	(??_receiveData+4)& (0+255),f,b
  4154  00031C  0101               	movlb	1	; () banked
  4155  00031E  513C               	movf	(??_receiveData+3)& (0+255),w,b
  4156  000320  0101               	movlb	1	; () banked
  4157  000322  233E               	addwfc	(??_receiveData+5)& (0+255),f,b
  4158  000324  0101               	movlb	1	; () banked
  4159  000326  5139               	movf	??_receiveData& (0+255),w,b
  4160  000328  0101               	movlb	1	; () banked
  4161  00032A  193D               	xorwf	(??_receiveData+4)& (0+255),w,b
  4162  00032C  E105               	bnz	u7401
  4163  00032E  0101               	movlb	1	; () banked
  4164  000330  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4165  000332  0101               	movlb	1	; () banked
  4166  000334  193E               	xorwf	(??_receiveData+5)& (0+255),w,b
  4167  000336  A4D8               	btfss	status,2,c
  4168  000338                     u7401:
  4169  000338  D22A               	goto	l6716
  4170                           
  4171                           ; BSR set to: 1
  4172                           ;FastTransfer.c: 143: calc_CS = CRC8(rx_buffer, rx_len);
  4173  00033A  0E00               	movlw	low _rx_buffer
  4174  00033C  6E1B               	movwf	CRC8@data,c
  4175  00033E  0E03               	movlw	high _rx_buffer
  4176  000340  6E1C               	movwf	CRC8@data+1,c
  4177  000342  C03E  F01D         	movff	_rx_len,CRC8@len
  4178  000346  EC43  F016         	call	_CRC8	;wreg free
  4179  00034A  6E37               	movwf	_calc_CS,c
  4180                           
  4181                           ;FastTransfer.c: 147: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  4182  00034C  0EFF               	movlw	255
  4183  00034E  0101               	movlb	1	; () banked
  4184  000350  6F39               	movwf	??_receiveData& (0+255),b
  4185  000352  0EFF               	movlw	255
  4186  000354  0101               	movlb	1	; () banked
  4187  000356  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4188  000358  503D               	movf	_rx_array_inx,w,c
  4189  00035A  0101               	movlb	1	; () banked
  4190  00035C  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4191  00035E  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4192  000360  0101               	movlb	1	; () banked
  4193  000362  5139               	movf	??_receiveData& (0+255),w,b
  4194  000364  0101               	movlb	1	; () banked
  4195  000366  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4196  000368  0101               	movlb	1	; () banked
  4197  00036A  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4198  00036C  0101               	movlb	1	; () banked
  4199  00036E  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4200  000370  0E00               	movlw	low _rx_buffer
  4201  000372  0101               	movlb	1	; () banked
  4202  000374  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4203  000376  6ED9               	movwf	fsr2l,c
  4204  000378  0E03               	movlw	high _rx_buffer
  4205  00037A  0101               	movlb	1	; () banked
  4206  00037C  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4207  00037E  6EDA               	movwf	fsr2h,c
  4208  000380  5037               	movf	_calc_CS,w,c
  4209  000382  18DE               	xorwf	postinc2,w,c
  4210  000384  A4D8               	btfss	status,2,c
  4211  000386  D13B               	goto	l6678
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;FastTransfer.c: 150: int r;
  4215                           ;FastTransfer.c: 151: for (r = 0; r < rx_len; r = r + 3) {
  4216  000388  0E00               	movlw	0
  4217  00038A  0101               	movlb	1	; () banked
  4218  00038C  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4219  00038E  0E00               	movlw	0
  4220  000390  6F49               	movwf	receiveData@r& (0+255),b
  4221  000392  D05C               	goto	l6638
  4222  000394                     l6628:
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;FastTransfer.c: 152: if (rx_buffer[r] < maxDataAddress) {
  4226  000394  0E00               	movlw	low _rx_buffer
  4227  000396  0101               	movlb	1	; () banked
  4228  000398  2549               	addwf	receiveData@r& (0+255),w,b
  4229  00039A  6ED9               	movwf	fsr2l,c
  4230  00039C  0E03               	movlw	high _rx_buffer
  4231  00039E  0101               	movlb	1	; () banked
  4232  0003A0  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4233  0003A2  6EDA               	movwf	fsr2h,c
  4234  0003A4  5039               	movf	_maxDataAddress,w,c
  4235  0003A6  5CDE               	subwf	postinc2,w,c
  4236  0003A8  B0D8               	btfsc	status,0,c
  4237  0003AA  D043               	goto	l6634
  4238                           
  4239                           ; BSR set to: 1
  4240                           ;FastTransfer.c: 153: group.parts[0] = rx_buffer[r + 1];
  4241  0003AC  0E01               	movlw	1
  4242  0003AE  0101               	movlb	1	; () banked
  4243  0003B0  2549               	addwf	receiveData@r& (0+255),w,b
  4244  0003B2  0101               	movlb	1	; () banked
  4245  0003B4  6F39               	movwf	??_receiveData& (0+255),b
  4246  0003B6  0E00               	movlw	0
  4247  0003B8  0101               	movlb	1	; () banked
  4248  0003BA  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4249  0003BC  0101               	movlb	1	; () banked
  4250  0003BE  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4251  0003C0  0E00               	movlw	low _rx_buffer
  4252  0003C2  0101               	movlb	1	; () banked
  4253  0003C4  2539               	addwf	??_receiveData& (0+255),w,b
  4254  0003C6  6ED9               	movwf	fsr2l,c
  4255  0003C8  0E03               	movlw	high _rx_buffer
  4256  0003CA  0101               	movlb	1	; () banked
  4257  0003CC  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4258  0003CE  6EDA               	movwf	fsr2h,c
  4259  0003D0  50DF               	movf	indf2,w,c
  4260  0003D2  6E2B               	movwf	_group,c
  4261                           
  4262                           ;FastTransfer.c: 154: group.parts[1] = rx_buffer[r + 2];
  4263  0003D4  0E02               	movlw	2
  4264  0003D6  0101               	movlb	1	; () banked
  4265  0003D8  2549               	addwf	receiveData@r& (0+255),w,b
  4266  0003DA  0101               	movlb	1	; () banked
  4267  0003DC  6F39               	movwf	??_receiveData& (0+255),b
  4268  0003DE  0E00               	movlw	0
  4269  0003E0  0101               	movlb	1	; () banked
  4270  0003E2  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4271  0003E4  0101               	movlb	1	; () banked
  4272  0003E6  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4273  0003E8  0E00               	movlw	low _rx_buffer
  4274  0003EA  0101               	movlb	1	; () banked
  4275  0003EC  2539               	addwf	??_receiveData& (0+255),w,b
  4276  0003EE  6ED9               	movwf	fsr2l,c
  4277  0003F0  0E03               	movlw	high _rx_buffer
  4278  0003F2  0101               	movlb	1	; () banked
  4279  0003F4  213A               	addwfc	(??_receiveData+1)& (0+255),w,b
  4280  0003F6  6EDA               	movwf	fsr2h,c
  4281  0003F8  50DF               	movf	indf2,w,c
  4282  0003FA  6E2C               	movwf	_group+1,c
  4283                           
  4284                           ; BSR set to: 1
  4285                           ;FastTransfer.c: 155: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4286  0003FC  0E00               	movlw	low _rx_buffer
  4287  0003FE  0101               	movlb	1	; () banked
  4288  000400  2549               	addwf	receiveData@r& (0+255),w,b
  4289  000402  6ED9               	movwf	fsr2l,c
  4290  000404  0E03               	movlw	high _rx_buffer
  4291  000406  0101               	movlb	1	; () banked
  4292  000408  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4293  00040A  6EDA               	movwf	fsr2h,c
  4294  00040C  50DF               	movf	indf2,w,c
  4295  00040E  0101               	movlb	1	; () banked
  4296  000410  6F39               	movwf	??_receiveData& (0+255),b
  4297  000412  0101               	movlb	1	; () banked
  4298  000414  5139               	movf	??_receiveData& (0+255),w,b
  4299  000416  0D02               	mullw	2
  4300  000418  50F3               	movf	prodl,w,c
  4301  00041A  0100               	movlb	0	; () banked
  4302  00041C  25D7               	addwf	_receiveArrayAddress& (0+255),w,b
  4303  00041E  6ED9               	movwf	fsr2l,c
  4304  000420  50F4               	movf	prodh,w,c
  4305  000422  0100               	movlb	0	; () banked
  4306  000424  21D8               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4307  000426  6EDA               	movwf	fsr2h,c
  4308  000428  C02B  FFDE         	movff	_group,postinc2
  4309  00042C  C02C  FFDD         	movff	_group+1,postdec2
  4310                           
  4311                           ;FastTransfer.c: 156: } else {
  4312  000430  D003               	goto	l6636
  4313  000432                     l6634:
  4314                           
  4315                           ;FastTransfer.c: 157: dataAdressErrorCounter++;
  4316  000432  0100               	movlb	0	; () banked
  4317  000434  4BCD               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4318  000436  2BCE               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4319  000438                     l6636:
  4320                           
  4321                           ; BSR set to: 0
  4322  000438  0E03               	movlw	3
  4323  00043A  0101               	movlb	1	; () banked
  4324  00043C  2549               	addwf	receiveData@r& (0+255),w,b
  4325  00043E  0101               	movlb	1	; () banked
  4326  000440  6F49               	movwf	receiveData@r& (0+255),b
  4327  000442  0E00               	movlw	0
  4328  000444  0101               	movlb	1	; () banked
  4329  000446  214A               	addwfc	(receiveData@r+1)& (0+255),w,b
  4330  000448  0101               	movlb	1	; () banked
  4331  00044A  6F4A               	movwf	(receiveData@r+1)& (0+255),b
  4332  00044C                     l6638:
  4333                           
  4334                           ; BSR set to: 1
  4335  00044C  503E               	movf	_rx_len,w,c
  4336  00044E  0101               	movlb	1	; () banked
  4337  000450  6F39               	movwf	??_receiveData& (0+255),b
  4338  000452  6B3A               	clrf	(??_receiveData+1)& (0+255),b
  4339  000454  0101               	movlb	1	; () banked
  4340  000456  5139               	movf	??_receiveData& (0+255),w,b
  4341  000458  0101               	movlb	1	; () banked
  4342  00045A  5D49               	subwf	receiveData@r& (0+255),w,b
  4343  00045C  0101               	movlb	1	; () banked
  4344  00045E  514A               	movf	(receiveData@r+1)& (0+255),w,b
  4345  000460  0A80               	xorlw	128
  4346  000462  0101               	movlb	1	; () banked
  4347  000464  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4348  000466  0101               	movlb	1	; () banked
  4349  000468  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4350  00046A  0A80               	xorlw	128
  4351  00046C  0101               	movlb	1	; () banked
  4352  00046E  593B               	subwfb	(??_receiveData+2)& (0+255),w,b
  4353  000470  A0D8               	btfss	status,0,c
  4354  000472  D790               	goto	l6628
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;FastTransfer.c: 158: }
  4358                           ;FastTransfer.c: 159: }
  4359                           ;FastTransfer.c: 162: if (AKNAKsend) {
  4360                           
  4361                           ; BSR set to: 1
  4362  000474  5036               	movf	_AKNAKsend,w,c
  4363  000476  B4D8               	btfsc	status,2,c
  4364  000478  D0BC               	goto	l6668
  4365                           
  4366                           ; BSR set to: 1
  4367                           ;FastTransfer.c: 163: unsigned char holder[3];
  4368                           ;FastTransfer.c: 164: holder[0] = 255;
  4369  00047A  0101               	movlb	1	; () banked
  4370  00047C  693F               	setf	receiveData@holder& (0+255),b
  4371                           
  4372                           ; BSR set to: 1
  4373                           ;FastTransfer.c: 165: holder[1] = 1;
  4374  00047E  0E01               	movlw	1
  4375  000480  0101               	movlb	1	; () banked
  4376  000482  6F40               	movwf	(receiveData@holder+1)& (0+255),b
  4377                           
  4378                           ; BSR set to: 1
  4379                           ;FastTransfer.c: 166: holder[2] = rx_buffer[rx_array_inx - 1];
  4380  000484  0EFF               	movlw	255
  4381  000486  0101               	movlb	1	; () banked
  4382  000488  6F39               	movwf	??_receiveData& (0+255),b
  4383  00048A  0EFF               	movlw	255
  4384  00048C  0101               	movlb	1	; () banked
  4385  00048E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4386  000490  503D               	movf	_rx_array_inx,w,c
  4387  000492  0101               	movlb	1	; () banked
  4388  000494  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4389  000496  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4390  000498  0101               	movlb	1	; () banked
  4391  00049A  5139               	movf	??_receiveData& (0+255),w,b
  4392  00049C  0101               	movlb	1	; () banked
  4393  00049E  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4394  0004A0  0101               	movlb	1	; () banked
  4395  0004A2  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4396  0004A4  0101               	movlb	1	; () banked
  4397  0004A6  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4398  0004A8  0E00               	movlw	low _rx_buffer
  4399  0004AA  0101               	movlb	1	; () banked
  4400  0004AC  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4401  0004AE  6ED9               	movwf	fsr2l,c
  4402  0004B0  0E03               	movlw	high _rx_buffer
  4403  0004B2  0101               	movlb	1	; () banked
  4404  0004B4  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4405  0004B6  6EDA               	movwf	fsr2h,c
  4406  0004B8  50DF               	movf	indf2,w,c
  4407  0004BA  0101               	movlb	1	; () banked
  4408  0004BC  6F41               	movwf	(receiveData@holder+2)& (0+255),b
  4409                           
  4410                           ; BSR set to: 1
  4411                           ;FastTransfer.c: 167: unsigned char crcHolder = CRC8(holder, 3);
  4412  0004BE  0E3F               	movlw	low receiveData@holder
  4413  0004C0  6E1B               	movwf	CRC8@data,c
  4414  0004C2  0E01               	movlw	high receiveData@holder
  4415  0004C4  6E1C               	movwf	CRC8@data+1,c
  4416  0004C6  0E03               	movlw	3
  4417  0004C8  6E1D               	movwf	CRC8@len,c
  4418  0004CA  EC43  F016         	call	_CRC8	;wreg free
  4419  0004CE  0101               	movlb	1	; () banked
  4420  0004D0  6F45               	movwf	receiveData@crcHolder& (0+255),b
  4421                           
  4422                           ; BSR set to: 1
  4423                           ;FastTransfer.c: 168: serial_write(0x06);
  4424  0004D2  D801               	call	u7458
  4425  0004D4  D00B               	goto	l6652
  4426  0004D6                     u7458:
  4427  0004D6  0005               	push	
  4428  0004D8  6EFA               	movwf	pclath,c
  4429  0004DA  5033               	movf	_serial_write,w,c
  4430  0004DC  6EFD               	movwf	tosl,c
  4431  0004DE  5034               	movf	_serial_write+1,w,c
  4432  0004E0  6EFE               	movwf	tosh,c
  4433  0004E2  50F8               	movf	tblptru,w,c
  4434  0004E4  6EFF               	movwf	tosu,c
  4435  0004E6  50FA               	movf	pclath,w,c
  4436  0004E8  0E06               	movlw	6
  4437  0004EA  0012               	return		;indir
  4438  0004EC                     l6652:
  4439                           
  4440                           ;FastTransfer.c: 169: serial_write(0x85);
  4441  0004EC  D801               	call	u7468
  4442  0004EE  D00B               	goto	l6654
  4443  0004F0                     u7468:
  4444  0004F0  0005               	push	
  4445  0004F2  6EFA               	movwf	pclath,c
  4446  0004F4  5033               	movf	_serial_write,w,c
  4447  0004F6  6EFD               	movwf	tosl,c
  4448  0004F8  5034               	movf	_serial_write+1,w,c
  4449  0004FA  6EFE               	movwf	tosh,c
  4450  0004FC  50F8               	movf	tblptru,w,c
  4451  0004FE  6EFF               	movwf	tosu,c
  4452  000500  50FA               	movf	pclath,w,c
  4453  000502  0E85               	movlw	133
  4454  000504  0012               	return		;indir
  4455  000506                     l6654:
  4456                           
  4457                           ;FastTransfer.c: 170: serial_write(returnAddress);
  4458  000506  D801               	call	u7478
  4459  000508  D00B               	goto	l6656
  4460  00050A                     u7478:
  4461  00050A  0005               	push	
  4462  00050C  6EFA               	movwf	pclath,c
  4463  00050E  5033               	movf	_serial_write,w,c
  4464  000510  6EFD               	movwf	tosl,c
  4465  000512  5034               	movf	_serial_write+1,w,c
  4466  000514  6EFE               	movwf	tosh,c
  4467  000516  50F8               	movf	tblptru,w,c
  4468  000518  6EFF               	movwf	tosu,c
  4469  00051A  50FA               	movf	pclath,w,c
  4470  00051C  503B               	movf	_returnAddress,w,c
  4471  00051E  0012               	return		;indir
  4472  000520                     l6656:
  4473                           
  4474                           ;FastTransfer.c: 171: serial_write(moduleAddress);
  4475  000520  D801               	call	u7488
  4476  000522  D00B               	goto	l6658
  4477  000524                     u7488:
  4478  000524  0005               	push	
  4479  000526  6EFA               	movwf	pclath,c
  4480  000528  5033               	movf	_serial_write,w,c
  4481  00052A  6EFD               	movwf	tosl,c
  4482  00052C  5034               	movf	_serial_write+1,w,c
  4483  00052E  6EFE               	movwf	tosh,c
  4484  000530  50F8               	movf	tblptru,w,c
  4485  000532  6EFF               	movwf	tosu,c
  4486  000534  50FA               	movf	pclath,w,c
  4487  000536  503A               	movf	_moduleAddress,w,c
  4488  000538  0012               	return		;indir
  4489  00053A                     l6658:
  4490                           
  4491                           ;FastTransfer.c: 172: serial_write(3);
  4492  00053A  D801               	call	u7498
  4493  00053C  D00B               	goto	l6660
  4494  00053E                     u7498:
  4495  00053E  0005               	push	
  4496  000540  6EFA               	movwf	pclath,c
  4497  000542  5033               	movf	_serial_write,w,c
  4498  000544  6EFD               	movwf	tosl,c
  4499  000546  5034               	movf	_serial_write+1,w,c
  4500  000548  6EFE               	movwf	tosh,c
  4501  00054A  50F8               	movf	tblptru,w,c
  4502  00054C  6EFF               	movwf	tosu,c
  4503  00054E  50FA               	movf	pclath,w,c
  4504  000550  0E03               	movlw	3
  4505  000552  0012               	return		;indir
  4506  000554                     l6660:
  4507                           
  4508                           ;FastTransfer.c: 173: serial_write(255);
  4509  000554  D801               	call	u7508
  4510  000556  D00B               	goto	l6662
  4511  000558                     u7508:
  4512  000558  0005               	push	
  4513  00055A  6EFA               	movwf	pclath,c
  4514  00055C  5033               	movf	_serial_write,w,c
  4515  00055E  6EFD               	movwf	tosl,c
  4516  000560  5034               	movf	_serial_write+1,w,c
  4517  000562  6EFE               	movwf	tosh,c
  4518  000564  50F8               	movf	tblptru,w,c
  4519  000566  6EFF               	movwf	tosu,c
  4520  000568  50FA               	movf	pclath,w,c
  4521  00056A  0EFF               	movlw	255
  4522  00056C  0012               	return		;indir
  4523  00056E                     l6662:
  4524                           
  4525                           ;FastTransfer.c: 174: serial_write(1);
  4526  00056E  D801               	call	u7518
  4527  000570  D00B               	goto	l6664
  4528  000572                     u7518:
  4529  000572  0005               	push	
  4530  000574  6EFA               	movwf	pclath,c
  4531  000576  5033               	movf	_serial_write,w,c
  4532  000578  6EFD               	movwf	tosl,c
  4533  00057A  5034               	movf	_serial_write+1,w,c
  4534  00057C  6EFE               	movwf	tosh,c
  4535  00057E  50F8               	movf	tblptru,w,c
  4536  000580  6EFF               	movwf	tosu,c
  4537  000582  50FA               	movf	pclath,w,c
  4538  000584  0E01               	movlw	1
  4539  000586  0012               	return		;indir
  4540  000588                     l6664:
  4541                           
  4542                           ;FastTransfer.c: 175: serial_write(rx_buffer[rx_array_inx - 1]);
  4543  000588  D801               	call	u7528
  4544  00058A  D025               	goto	l6666
  4545  00058C                     u7528:
  4546  00058C  0005               	push	
  4547  00058E  6EFA               	movwf	pclath,c
  4548  000590  5033               	movf	_serial_write,w,c
  4549  000592  6EFD               	movwf	tosl,c
  4550  000594  5034               	movf	_serial_write+1,w,c
  4551  000596  6EFE               	movwf	tosh,c
  4552  000598  50F8               	movf	tblptru,w,c
  4553  00059A  6EFF               	movwf	tosu,c
  4554  00059C  50FA               	movf	pclath,w,c
  4555  00059E  0EFF               	movlw	255
  4556  0005A0  0101               	movlb	1	; () banked
  4557  0005A2  6F39               	movwf	??_receiveData& (0+255),b
  4558  0005A4  0EFF               	movlw	255
  4559  0005A6  0101               	movlb	1	; () banked
  4560  0005A8  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4561  0005AA  503D               	movf	_rx_array_inx,w,c
  4562  0005AC  0101               	movlb	1	; () banked
  4563  0005AE  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4564  0005B0  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4565  0005B2  0101               	movlb	1	; () banked
  4566  0005B4  5139               	movf	??_receiveData& (0+255),w,b
  4567  0005B6  0101               	movlb	1	; () banked
  4568  0005B8  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4569  0005BA  0101               	movlb	1	; () banked
  4570  0005BC  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4571  0005BE  0101               	movlb	1	; () banked
  4572  0005C0  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4573  0005C2  0E00               	movlw	low _rx_buffer
  4574  0005C4  0101               	movlb	1	; () banked
  4575  0005C6  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4576  0005C8  6ED9               	movwf	fsr2l,c
  4577  0005CA  0E03               	movlw	high _rx_buffer
  4578  0005CC  0101               	movlb	1	; () banked
  4579  0005CE  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4580  0005D0  6EDA               	movwf	fsr2h,c
  4581  0005D2  50DF               	movf	indf2,w,c
  4582  0005D4  0012               	return		;indir
  4583  0005D6                     l6666:
  4584                           
  4585                           ;FastTransfer.c: 176: serial_write(crcHolder);
  4586  0005D6  D801               	call	u7538
  4587  0005D8  D00C               	goto	l6668
  4588  0005DA                     u7538:
  4589  0005DA  0005               	push	
  4590  0005DC  6EFA               	movwf	pclath,c
  4591  0005DE  5033               	movf	_serial_write,w,c
  4592  0005E0  6EFD               	movwf	tosl,c
  4593  0005E2  5034               	movf	_serial_write+1,w,c
  4594  0005E4  6EFE               	movwf	tosh,c
  4595  0005E6  50F8               	movf	tblptru,w,c
  4596  0005E8  6EFF               	movwf	tosu,c
  4597  0005EA  50FA               	movf	pclath,w,c
  4598  0005EC  0101               	movlb	1	; () banked
  4599  0005EE  5145               	movf	receiveData@crcHolder& (0+255),w,b
  4600  0005F0  0012               	return		;indir
  4601  0005F2                     l6668:
  4602                           
  4603                           ;FastTransfer.c: 177: }
  4604                           ;FastTransfer.c: 181: rx_len = 0;
  4605  0005F2  0E00               	movlw	0
  4606  0005F4  6E3E               	movwf	_rx_len,c
  4607                           
  4608                           ;FastTransfer.c: 182: rx_array_inx = 0;
  4609  0005F6  0E00               	movlw	0
  4610  0005F8  6E3D               	movwf	_rx_array_inx,c
  4611                           
  4612                           ;FastTransfer.c: 183: return 1;
  4613  0005FA  0E01               	movlw	1
  4614  0005FC  0012               	return	
  4615  0005FE                     l6678:
  4616                           
  4617                           ;FastTransfer.c: 185: crcErrorCounter++;
  4618  0005FE  0100               	movlb	0	; () banked
  4619  000600  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  4620  000602  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;FastTransfer.c: 187: if (AKNAKsend) {
  4624  000604  5036               	movf	_AKNAKsend,w,c
  4625  000606  B4D8               	btfsc	status,2,c
  4626  000608  D0BC               	goto	l6708
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;FastTransfer.c: 188: unsigned char holder[3];
  4630                           ;FastTransfer.c: 189: holder[0] = 255;
  4631  00060A  0101               	movlb	1	; () banked
  4632  00060C  6942               	setf	receiveData@holder_2468& (0+255),b
  4633                           
  4634                           ; BSR set to: 1
  4635                           ;FastTransfer.c: 190: holder[1] = 2;
  4636  00060E  0E02               	movlw	2
  4637  000610  0101               	movlb	1	; () banked
  4638  000612  6F43               	movwf	(receiveData@holder_2468+1)& (0+255),b
  4639                           
  4640                           ; BSR set to: 1
  4641                           ;FastTransfer.c: 191: holder[2] = rx_buffer[rx_array_inx - 1];
  4642  000614  0EFF               	movlw	255
  4643  000616  0101               	movlb	1	; () banked
  4644  000618  6F39               	movwf	??_receiveData& (0+255),b
  4645  00061A  0EFF               	movlw	255
  4646  00061C  0101               	movlb	1	; () banked
  4647  00061E  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4648  000620  503D               	movf	_rx_array_inx,w,c
  4649  000622  0101               	movlb	1	; () banked
  4650  000624  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4651  000626  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4652  000628  0101               	movlb	1	; () banked
  4653  00062A  5139               	movf	??_receiveData& (0+255),w,b
  4654  00062C  0101               	movlb	1	; () banked
  4655  00062E  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4656  000630  0101               	movlb	1	; () banked
  4657  000632  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4658  000634  0101               	movlb	1	; () banked
  4659  000636  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4660  000638  0E00               	movlw	low _rx_buffer
  4661  00063A  0101               	movlb	1	; () banked
  4662  00063C  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4663  00063E  6ED9               	movwf	fsr2l,c
  4664  000640  0E03               	movlw	high _rx_buffer
  4665  000642  0101               	movlb	1	; () banked
  4666  000644  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4667  000646  6EDA               	movwf	fsr2h,c
  4668  000648  50DF               	movf	indf2,w,c
  4669  00064A  0101               	movlb	1	; () banked
  4670  00064C  6F44               	movwf	(receiveData@holder_2468+2)& (0+255),b
  4671                           
  4672                           ; BSR set to: 1
  4673                           ;FastTransfer.c: 192: unsigned char crcHolder = CRC8(holder, 3);
  4674  00064E  0E42               	movlw	low receiveData@holder_2468
  4675  000650  6E1B               	movwf	CRC8@data,c
  4676  000652  0E01               	movlw	high receiveData@holder_2468
  4677  000654  6E1C               	movwf	CRC8@data+1,c
  4678  000656  0E03               	movlw	3
  4679  000658  6E1D               	movwf	CRC8@len,c
  4680  00065A  EC43  F016         	call	_CRC8
  4681  00065E  0101               	movlb	1	; () banked
  4682  000660  6F46               	movwf	receiveData@crcHolder_2469& (0+255),b
  4683                           
  4684                           ; BSR set to: 1
  4685                           ;FastTransfer.c: 193: serial_write(0x06);
  4686  000662  D801               	call	u7558
  4687  000664  D00B               	goto	l6692
  4688  000666                     u7558:
  4689  000666  0005               	push	
  4690  000668  6EFA               	movwf	pclath,c
  4691  00066A  5033               	movf	_serial_write,w,c
  4692  00066C  6EFD               	movwf	tosl,c
  4693  00066E  5034               	movf	_serial_write+1,w,c
  4694  000670  6EFE               	movwf	tosh,c
  4695  000672  50F8               	movf	tblptru,w,c
  4696  000674  6EFF               	movwf	tosu,c
  4697  000676  50FA               	movf	pclath,w,c
  4698  000678  0E06               	movlw	6
  4699  00067A  0012               	return		;indir
  4700  00067C                     l6692:
  4701                           
  4702                           ;FastTransfer.c: 194: serial_write(0x85);
  4703  00067C  D801               	call	u7568
  4704  00067E  D00B               	goto	l6694
  4705  000680                     u7568:
  4706  000680  0005               	push	
  4707  000682  6EFA               	movwf	pclath,c
  4708  000684  5033               	movf	_serial_write,w,c
  4709  000686  6EFD               	movwf	tosl,c
  4710  000688  5034               	movf	_serial_write+1,w,c
  4711  00068A  6EFE               	movwf	tosh,c
  4712  00068C  50F8               	movf	tblptru,w,c
  4713  00068E  6EFF               	movwf	tosu,c
  4714  000690  50FA               	movf	pclath,w,c
  4715  000692  0E85               	movlw	133
  4716  000694  0012               	return		;indir
  4717  000696                     l6694:
  4718                           
  4719                           ;FastTransfer.c: 195: serial_write(returnAddress);
  4720  000696  D801               	call	u7578
  4721  000698  D00B               	goto	l6696
  4722  00069A                     u7578:
  4723  00069A  0005               	push	
  4724  00069C  6EFA               	movwf	pclath,c
  4725  00069E  5033               	movf	_serial_write,w,c
  4726  0006A0  6EFD               	movwf	tosl,c
  4727  0006A2  5034               	movf	_serial_write+1,w,c
  4728  0006A4  6EFE               	movwf	tosh,c
  4729  0006A6  50F8               	movf	tblptru,w,c
  4730  0006A8  6EFF               	movwf	tosu,c
  4731  0006AA  50FA               	movf	pclath,w,c
  4732  0006AC  503B               	movf	_returnAddress,w,c
  4733  0006AE  0012               	return		;indir
  4734  0006B0                     l6696:
  4735                           
  4736                           ;FastTransfer.c: 196: serial_write(moduleAddress);
  4737  0006B0  D801               	call	u7588
  4738  0006B2  D00B               	goto	l6698
  4739  0006B4                     u7588:
  4740  0006B4  0005               	push	
  4741  0006B6  6EFA               	movwf	pclath,c
  4742  0006B8  5033               	movf	_serial_write,w,c
  4743  0006BA  6EFD               	movwf	tosl,c
  4744  0006BC  5034               	movf	_serial_write+1,w,c
  4745  0006BE  6EFE               	movwf	tosh,c
  4746  0006C0  50F8               	movf	tblptru,w,c
  4747  0006C2  6EFF               	movwf	tosu,c
  4748  0006C4  50FA               	movf	pclath,w,c
  4749  0006C6  503A               	movf	_moduleAddress,w,c
  4750  0006C8  0012               	return		;indir
  4751  0006CA                     l6698:
  4752                           
  4753                           ;FastTransfer.c: 197: serial_write(3);
  4754  0006CA  D801               	call	u7598
  4755  0006CC  D00B               	goto	l6700
  4756  0006CE                     u7598:
  4757  0006CE  0005               	push	
  4758  0006D0  6EFA               	movwf	pclath,c
  4759  0006D2  5033               	movf	_serial_write,w,c
  4760  0006D4  6EFD               	movwf	tosl,c
  4761  0006D6  5034               	movf	_serial_write+1,w,c
  4762  0006D8  6EFE               	movwf	tosh,c
  4763  0006DA  50F8               	movf	tblptru,w,c
  4764  0006DC  6EFF               	movwf	tosu,c
  4765  0006DE  50FA               	movf	pclath,w,c
  4766  0006E0  0E03               	movlw	3
  4767  0006E2  0012               	return		;indir
  4768  0006E4                     l6700:
  4769                           
  4770                           ;FastTransfer.c: 198: serial_write(255);
  4771  0006E4  D801               	call	u7608
  4772  0006E6  D00B               	goto	l6702
  4773  0006E8                     u7608:
  4774  0006E8  0005               	push	
  4775  0006EA  6EFA               	movwf	pclath,c
  4776  0006EC  5033               	movf	_serial_write,w,c
  4777  0006EE  6EFD               	movwf	tosl,c
  4778  0006F0  5034               	movf	_serial_write+1,w,c
  4779  0006F2  6EFE               	movwf	tosh,c
  4780  0006F4  50F8               	movf	tblptru,w,c
  4781  0006F6  6EFF               	movwf	tosu,c
  4782  0006F8  50FA               	movf	pclath,w,c
  4783  0006FA  0EFF               	movlw	255
  4784  0006FC  0012               	return		;indir
  4785  0006FE                     l6702:
  4786                           
  4787                           ;FastTransfer.c: 199: serial_write(2);
  4788  0006FE  D801               	call	u7618
  4789  000700  D00B               	goto	l6704
  4790  000702                     u7618:
  4791  000702  0005               	push	
  4792  000704  6EFA               	movwf	pclath,c
  4793  000706  5033               	movf	_serial_write,w,c
  4794  000708  6EFD               	movwf	tosl,c
  4795  00070A  5034               	movf	_serial_write+1,w,c
  4796  00070C  6EFE               	movwf	tosh,c
  4797  00070E  50F8               	movf	tblptru,w,c
  4798  000710  6EFF               	movwf	tosu,c
  4799  000712  50FA               	movf	pclath,w,c
  4800  000714  0E02               	movlw	2
  4801  000716  0012               	return		;indir
  4802  000718                     l6704:
  4803                           
  4804                           ;FastTransfer.c: 200: serial_write(rx_buffer[rx_array_inx - 1]);
  4805  000718  D801               	call	u7628
  4806  00071A  D025               	goto	l6706
  4807  00071C                     u7628:
  4808  00071C  0005               	push	
  4809  00071E  6EFA               	movwf	pclath,c
  4810  000720  5033               	movf	_serial_write,w,c
  4811  000722  6EFD               	movwf	tosl,c
  4812  000724  5034               	movf	_serial_write+1,w,c
  4813  000726  6EFE               	movwf	tosh,c
  4814  000728  50F8               	movf	tblptru,w,c
  4815  00072A  6EFF               	movwf	tosu,c
  4816  00072C  50FA               	movf	pclath,w,c
  4817  00072E  0EFF               	movlw	255
  4818  000730  0101               	movlb	1	; () banked
  4819  000732  6F39               	movwf	??_receiveData& (0+255),b
  4820  000734  0EFF               	movlw	255
  4821  000736  0101               	movlb	1	; () banked
  4822  000738  6F3A               	movwf	(??_receiveData+1)& (0+255),b
  4823  00073A  503D               	movf	_rx_array_inx,w,c
  4824  00073C  0101               	movlb	1	; () banked
  4825  00073E  6F3B               	movwf	(??_receiveData+2)& (0+255),b
  4826  000740  6B3C               	clrf	(??_receiveData+3)& (0+255),b
  4827  000742  0101               	movlb	1	; () banked
  4828  000744  5139               	movf	??_receiveData& (0+255),w,b
  4829  000746  0101               	movlb	1	; () banked
  4830  000748  273B               	addwf	(??_receiveData+2)& (0+255),f,b
  4831  00074A  0101               	movlb	1	; () banked
  4832  00074C  513A               	movf	(??_receiveData+1)& (0+255),w,b
  4833  00074E  0101               	movlb	1	; () banked
  4834  000750  233C               	addwfc	(??_receiveData+3)& (0+255),f,b
  4835  000752  0E00               	movlw	low _rx_buffer
  4836  000754  0101               	movlb	1	; () banked
  4837  000756  253B               	addwf	(??_receiveData+2)& (0+255),w,b
  4838  000758  6ED9               	movwf	fsr2l,c
  4839  00075A  0E03               	movlw	high _rx_buffer
  4840  00075C  0101               	movlb	1	; () banked
  4841  00075E  213C               	addwfc	(??_receiveData+3)& (0+255),w,b
  4842  000760  6EDA               	movwf	fsr2h,c
  4843  000762  50DF               	movf	indf2,w,c
  4844  000764  0012               	return		;indir
  4845  000766                     l6706:
  4846                           
  4847                           ;FastTransfer.c: 201: serial_write(crcHolder);
  4848  000766  D801               	call	u7638
  4849  000768  D00C               	goto	l6708
  4850  00076A                     u7638:
  4851  00076A  0005               	push	
  4852  00076C  6EFA               	movwf	pclath,c
  4853  00076E  5033               	movf	_serial_write,w,c
  4854  000770  6EFD               	movwf	tosl,c
  4855  000772  5034               	movf	_serial_write+1,w,c
  4856  000774  6EFE               	movwf	tosh,c
  4857  000776  50F8               	movf	tblptru,w,c
  4858  000778  6EFF               	movwf	tosu,c
  4859  00077A  50FA               	movf	pclath,w,c
  4860  00077C  0101               	movlb	1	; () banked
  4861  00077E  5146               	movf	receiveData@crcHolder_2469& (0+255),w,b
  4862  000780  0012               	return		;indir
  4863  000782                     l6708:
  4864                           
  4865                           ;FastTransfer.c: 202: }
  4866                           ;FastTransfer.c: 205: rx_len = 0;
  4867  000782  0E00               	movlw	0
  4868  000784  6E3E               	movwf	_rx_len,c
  4869                           
  4870                           ;FastTransfer.c: 206: rx_array_inx = 0;
  4871  000786  0E00               	movlw	0
  4872  000788  6E3D               	movwf	_rx_array_inx,c
  4873                           
  4874                           ;FastTransfer.c: 207: return 0;
  4875  00078A  0E00               	movlw	0
  4876  00078C  0012               	return	
  4877  00078E                     l6716:
  4878                           
  4879                           ;FastTransfer.c: 208: }
  4880                           ;FastTransfer.c: 209: }
  4881                           ;FastTransfer.c: 210: }
  4882                           ;FastTransfer.c: 213: return 0;
  4883  00078E  0E00               	movlw	0
  4884  000790  0012               	return	
  4885  000792                     __end_of_receiveData:
  4886                           	opt stack 0
  4887                           tosu	equ	0xFFF
  4888                           tosh	equ	0xFFE
  4889                           tosl	equ	0xFFD
  4890                           pclath	equ	0xFFA
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           prodh	equ	0xFF4
  4896                           prodl	equ	0xFF3
  4897                           intcon	equ	0xFF2
  4898                           postinc0	equ	0xFEE
  4899                           wreg	equ	0xFE8
  4900                           indf2	equ	0xFDF
  4901                           postinc2	equ	0xFDE
  4902                           postdec2	equ	0xFDD
  4903                           plusw2	equ	0xFDB
  4904                           fsr2h	equ	0xFDA
  4905                           fsr2l	equ	0xFD9
  4906                           status	equ	0xFD8
  4907                           
  4908 ;; *************** function _Send_put *****************
  4909 ;; Defined at:
  4910 ;;		line 130 in file "UART.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  _data           1    wreg     unsigned char 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  _data           1   37[COMRAM] unsigned char 
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4924 ;;      Params:         0       0       0       0       0       0       0
  4925 ;;      Locals:         1       0       0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0
  4927 ;;      Totals:         1       0       0       0       0       0       0
  4928 ;;Total ram usage:        1 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    6
  4931 ;; This function calls:
  4932 ;;		_UART_buff_get
  4933 ;;		_UART_buff_put
  4934 ;; This function is called by:
  4935 ;;		_SYSTEM_Initialize
  4936 ;;		_putch
  4937 ;;		_sendData
  4938 ;;		_receiveData
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text13
  4943  002EEC                     __ptext13:
  4944                           	opt stack 0
  4945  002EEC                     _Send_put:
  4946                           	opt stack 21
  4947                           
  4948                           ;incstack = 0
  4949                           ;Send_put@_data stored from wreg
  4950  002EEC  6E26               	movwf	Send_put@_data,c
  4951                           
  4952                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4953  002EEE  0E00               	movlw	low _output_buffer
  4954  002EF0  6E21               	movwf	UART_buff_put@_this,c
  4955  002EF2  0E05               	movlw	high _output_buffer
  4956  002EF4  6E22               	movwf	UART_buff_put@_this+1,c
  4957  002EF6  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4958  002EFA  EC1E  F00C         	call	_UART_buff_put
  4959                           
  4960                           ;UART.c: 132: if (Transmit_stall == 1) {
  4961  002EFE  0444               	decf	_Transmit_stall,w,c
  4962  002F00  A4D8               	btfss	status,2,c
  4963  002F02  0012               	return	
  4964                           
  4965                           ;UART.c: 133: Transmit_stall = 0;
  4966  002F04  0E00               	movlw	0
  4967  002F06  6E44               	movwf	_Transmit_stall,c
  4968                           
  4969                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4970  002F08  0E00               	movlw	low _output_buffer
  4971  002F0A  6E21               	movwf	UART_buff_get@_this,c
  4972  002F0C  0E05               	movlw	high _output_buffer
  4973  002F0E  6E22               	movwf	UART_buff_get@_this+1,c
  4974  002F10  EC88  F012         	call	_UART_buff_get	;wreg free
  4975  002F14  6EAD               	movwf	4013,c	;volatile
  4976                           
  4977                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4978  002F16  889D               	bsf	3997,4,c	;volatile
  4979  002F18  0012               	return	
  4980  002F1A                     __end_of_Send_put:
  4981                           	opt stack 0
  4982                           tosu	equ	0xFFF
  4983                           tosh	equ	0xFFE
  4984                           tosl	equ	0xFFD
  4985                           pclath	equ	0xFFA
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           prodh	equ	0xFF4
  4991                           prodl	equ	0xFF3
  4992                           intcon	equ	0xFF2
  4993                           postinc0	equ	0xFEE
  4994                           wreg	equ	0xFE8
  4995                           indf2	equ	0xFDF
  4996                           postinc2	equ	0xFDE
  4997                           postdec2	equ	0xFDD
  4998                           plusw2	equ	0xFDB
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function _UART_buff_put *****************
  5004 ;; Defined at:
  5005 ;;		line 68 in file "UART.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5008 ;;		 -> output_buffer(206), input_buffer(206), 
  5009 ;;  c               1   34[COMRAM] const unsigned char 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5021 ;;      Params:         3       0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0
  5023 ;;      Temps:          2       0       0       0       0       0       0
  5024 ;;      Totals:         5       0       0       0       0       0       0
  5025 ;;Total ram usage:        5 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    5
  5028 ;; This function calls:
  5029 ;;		_UART_buff_modulo_inc
  5030 ;; This function is called by:
  5031 ;;		_Send_put
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text14
  5036  00183C                     __ptext14:
  5037                           	opt stack 0
  5038  00183C                     _UART_buff_put:
  5039                           	opt stack 21
  5040                           
  5041                           ;UART.c: 69: if (_this->count < 200) {
  5042                           
  5043                           ;incstack = 0
  5044  00183C  EE20 F0CC          	lfsr	2,204
  5045  001840  5021               	movf	UART_buff_put@_this,w,c
  5046  001842  26D9               	addwf	fsr2l,f,c
  5047  001844  5022               	movf	UART_buff_put@_this+1,w,c
  5048  001846  22DA               	addwfc	fsr2h,f,c
  5049  001848  0E01               	movlw	1
  5050  00184A  BEDB               	btfsc	plusw2,7,c
  5051  00184C  D007               	goto	l5898
  5052  00184E  0E01               	movlw	1
  5053  001850  50DB               	movf	plusw2,w,c
  5054  001852  E13A               	bnz	l5904
  5055  001854  0EC8               	movlw	200
  5056  001856  5CDE               	subwf	postinc2,w,c
  5057  001858  B0D8               	btfsc	status,0,c
  5058  00185A  D036               	goto	l5904
  5059  00185C                     l5898:
  5060                           
  5061                           ;UART.c: 70: _this->buf[_this->head] = c;
  5062  00185C  EE20 F0C8          	lfsr	2,200
  5063  001860  5021               	movf	UART_buff_put@_this,w,c
  5064  001862  26D9               	addwf	fsr2l,f,c
  5065  001864  5022               	movf	UART_buff_put@_this+1,w,c
  5066  001866  22DA               	addwfc	fsr2h,f,c
  5067  001868  CFDE F024          	movff	postinc2,??_UART_buff_put
  5068  00186C  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5069  001870  5024               	movf	??_UART_buff_put,w,c
  5070  001872  2421               	addwf	UART_buff_put@_this,w,c
  5071  001874  6ED9               	movwf	fsr2l,c
  5072  001876  5025               	movf	??_UART_buff_put+1,w,c
  5073  001878  2022               	addwfc	UART_buff_put@_this+1,w,c
  5074  00187A  6EDA               	movwf	fsr2h,c
  5075  00187C  C023  FFDF         	movff	UART_buff_put@c,indf2
  5076                           
  5077                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5078  001880  EE20 F0C8          	lfsr	2,200
  5079  001884  5021               	movf	UART_buff_put@_this,w,c
  5080  001886  26D9               	addwf	fsr2l,f,c
  5081  001888  5022               	movf	UART_buff_put@_this+1,w,c
  5082  00188A  22DA               	addwfc	fsr2h,f,c
  5083  00188C  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5084  001890  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5085  001894  0E00               	movlw	0
  5086  001896  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5087  001898  0EC8               	movlw	200
  5088  00189A  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5089  00189C  ECB8  F017         	call	_UART_buff_modulo_inc	;wreg free
  5090  0018A0  EE20 F0C8          	lfsr	2,200
  5091  0018A4  5021               	movf	UART_buff_put@_this,w,c
  5092  0018A6  26D9               	addwf	fsr2l,f,c
  5093  0018A8  5022               	movf	UART_buff_put@_this+1,w,c
  5094  0018AA  22DA               	addwfc	fsr2h,f,c
  5095  0018AC  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5096  0018B0  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5097                           
  5098                           ;UART.c: 72: ++_this->count;
  5099  0018B4  EE20 F0CC          	lfsr	2,204
  5100  0018B8  5021               	movf	UART_buff_put@_this,w,c
  5101  0018BA  26D9               	addwf	fsr2l,f,c
  5102  0018BC  5022               	movf	UART_buff_put@_this+1,w,c
  5103  0018BE  22DA               	addwfc	fsr2h,f,c
  5104  0018C0  2ADE               	incf	postinc2,f,c
  5105  0018C2  0E00               	movlw	0
  5106  0018C4  22DD               	addwfc	postdec2,f,c
  5107                           
  5108                           ;UART.c: 73: } else {
  5109  0018C6  0012               	return	
  5110  0018C8                     l5904:
  5111                           
  5112                           ;UART.c: 74: _this->buf[_this->head] = c;
  5113  0018C8  EE20 F0C8          	lfsr	2,200
  5114  0018CC  5021               	movf	UART_buff_put@_this,w,c
  5115  0018CE  26D9               	addwf	fsr2l,f,c
  5116  0018D0  5022               	movf	UART_buff_put@_this+1,w,c
  5117  0018D2  22DA               	addwfc	fsr2h,f,c
  5118  0018D4  CFDE F024          	movff	postinc2,??_UART_buff_put
  5119  0018D8  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5120  0018DC  5024               	movf	??_UART_buff_put,w,c
  5121  0018DE  2421               	addwf	UART_buff_put@_this,w,c
  5122  0018E0  6ED9               	movwf	fsr2l,c
  5123  0018E2  5025               	movf	??_UART_buff_put+1,w,c
  5124  0018E4  2022               	addwfc	UART_buff_put@_this+1,w,c
  5125  0018E6  6EDA               	movwf	fsr2h,c
  5126  0018E8  C023  FFDF         	movff	UART_buff_put@c,indf2
  5127                           
  5128                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5129  0018EC  EE20 F0C8          	lfsr	2,200
  5130  0018F0  5021               	movf	UART_buff_put@_this,w,c
  5131  0018F2  26D9               	addwf	fsr2l,f,c
  5132  0018F4  5022               	movf	UART_buff_put@_this+1,w,c
  5133  0018F6  22DA               	addwfc	fsr2h,f,c
  5134  0018F8  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5135  0018FC  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5136  001900  0E00               	movlw	0
  5137  001902  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5138  001904  0EC8               	movlw	200
  5139  001906  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5140  001908  ECB8  F017         	call	_UART_buff_modulo_inc	;wreg free
  5141  00190C  EE20 F0C8          	lfsr	2,200
  5142  001910  5021               	movf	UART_buff_put@_this,w,c
  5143  001912  26D9               	addwf	fsr2l,f,c
  5144  001914  5022               	movf	UART_buff_put@_this+1,w,c
  5145  001916  22DA               	addwfc	fsr2h,f,c
  5146  001918  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5147  00191C  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5148                           
  5149                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5150  001920  EE20 F0CA          	lfsr	2,202
  5151  001924  5021               	movf	UART_buff_put@_this,w,c
  5152  001926  26D9               	addwf	fsr2l,f,c
  5153  001928  5022               	movf	UART_buff_put@_this+1,w,c
  5154  00192A  22DA               	addwfc	fsr2h,f,c
  5155  00192C  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5156  001930  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5157  001934  0E00               	movlw	0
  5158  001936  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5159  001938  0EC8               	movlw	200
  5160  00193A  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5161  00193C  ECB8  F017         	call	_UART_buff_modulo_inc	;wreg free
  5162  001940  EE20 F0CA          	lfsr	2,202
  5163  001944  5021               	movf	UART_buff_put@_this,w,c
  5164  001946  26D9               	addwf	fsr2l,f,c
  5165  001948  5022               	movf	UART_buff_put@_this+1,w,c
  5166  00194A  22DA               	addwfc	fsr2h,f,c
  5167  00194C  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5168  001950  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5169  001954  0012               	return	
  5170  001956                     __end_of_UART_buff_put:
  5171                           	opt stack 0
  5172                           tosu	equ	0xFFF
  5173                           tosh	equ	0xFFE
  5174                           tosl	equ	0xFFD
  5175                           pclath	equ	0xFFA
  5176                           tblptru	equ	0xFF8
  5177                           tblptrh	equ	0xFF7
  5178                           tblptrl	equ	0xFF6
  5179                           tablat	equ	0xFF5
  5180                           prodh	equ	0xFF4
  5181                           prodl	equ	0xFF3
  5182                           intcon	equ	0xFF2
  5183                           postinc0	equ	0xFEE
  5184                           wreg	equ	0xFE8
  5185                           indf2	equ	0xFDF
  5186                           postinc2	equ	0xFDE
  5187                           postdec2	equ	0xFDD
  5188                           plusw2	equ	0xFDB
  5189                           fsr2h	equ	0xFDA
  5190                           fsr2l	equ	0xFD9
  5191                           status	equ	0xFD8
  5192                           
  5193 ;; *************** function _Receive_peek *****************
  5194 ;; Defined at:
  5195 ;;		line 118 in file "UART.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      unsigned char 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5209 ;;      Params:         0       0       0       0       0       0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0
  5212 ;;      Totals:         0       0       0       0       0       0       0
  5213 ;;Total ram usage:        0 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    5
  5216 ;; This function calls:
  5217 ;;		_UART_buff_peek
  5218 ;; This function is called by:
  5219 ;;		_SYSTEM_Initialize
  5220 ;;		_receiveData
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text15
  5225  003174                     __ptext15:
  5226                           	opt stack 0
  5227  003174                     _Receive_peek:
  5228                           	opt stack 23
  5229                           
  5230                           ;UART.c: 119: return UART_buff_peek(&input_buffer);
  5231                           
  5232                           ;incstack = 0
  5233  003174  0E00               	movlw	low _input_buffer
  5234  003176  6E1B               	movwf	UART_buff_peek@_this,c
  5235  003178  0E04               	movlw	high _input_buffer
  5236  00317A  6E1C               	movwf	UART_buff_peek@_this+1,c
  5237  00317C  EC1D  F018         	call	_UART_buff_peek	;wreg free
  5238  003180  0012               	return	
  5239  003182                     __end_of_Receive_peek:
  5240                           	opt stack 0
  5241                           tosu	equ	0xFFF
  5242                           tosh	equ	0xFFE
  5243                           tosl	equ	0xFFD
  5244                           pclath	equ	0xFFA
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           indf2	equ	0xFDF
  5255                           postinc2	equ	0xFDE
  5256                           postdec2	equ	0xFDD
  5257                           plusw2	equ	0xFDB
  5258                           fsr2h	equ	0xFDA
  5259                           fsr2l	equ	0xFD9
  5260                           status	equ	0xFD8
  5261                           
  5262 ;; *************** function _UART_buff_peek *****************
  5263 ;; Defined at:
  5264 ;;		line 114 in file "UART.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5267 ;;		 -> input_buffer(206), 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      unsigned char 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5279 ;;      Params:         2       0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0
  5281 ;;      Temps:          2       0       0       0       0       0       0
  5282 ;;      Totals:         4       0       0       0       0       0       0
  5283 ;;Total ram usage:        4 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    4
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_Receive_peek
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text16
  5294  00303A                     __ptext16:
  5295                           	opt stack 0
  5296  00303A                     _UART_buff_peek:
  5297                           	opt stack 23
  5298                           
  5299                           ;UART.c: 115: return _this->buf[_this->tail];
  5300                           
  5301                           ;incstack = 0
  5302  00303A  EE20 F0CA          	lfsr	2,202
  5303  00303E  501B               	movf	UART_buff_peek@_this,w,c
  5304  003040  26D9               	addwf	fsr2l,f,c
  5305  003042  501C               	movf	UART_buff_peek@_this+1,w,c
  5306  003044  22DA               	addwfc	fsr2h,f,c
  5307  003046  CFDE F01D          	movff	postinc2,??_UART_buff_peek
  5308  00304A  CFDD F01E          	movff	postdec2,??_UART_buff_peek+1
  5309  00304E  501D               	movf	??_UART_buff_peek,w,c
  5310  003050  241B               	addwf	UART_buff_peek@_this,w,c
  5311  003052  6ED9               	movwf	fsr2l,c
  5312  003054  501E               	movf	??_UART_buff_peek+1,w,c
  5313  003056  201C               	addwfc	UART_buff_peek@_this+1,w,c
  5314  003058  6EDA               	movwf	fsr2h,c
  5315  00305A  50DF               	movf	indf2,w,c
  5316  00305C  0012               	return	
  5317  00305E                     __end_of_UART_buff_peek:
  5318                           	opt stack 0
  5319                           tosu	equ	0xFFF
  5320                           tosh	equ	0xFFE
  5321                           tosl	equ	0xFFD
  5322                           pclath	equ	0xFFA
  5323                           tblptru	equ	0xFF8
  5324                           tblptrh	equ	0xFF7
  5325                           tblptrl	equ	0xFF6
  5326                           tablat	equ	0xFF5
  5327                           prodh	equ	0xFF4
  5328                           prodl	equ	0xFF3
  5329                           intcon	equ	0xFF2
  5330                           postinc0	equ	0xFEE
  5331                           wreg	equ	0xFE8
  5332                           indf2	equ	0xFDF
  5333                           postinc2	equ	0xFDE
  5334                           postdec2	equ	0xFDD
  5335                           plusw2	equ	0xFDB
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _CRCcheck *****************
  5341 ;; Defined at:
  5342 ;;		line 376 in file "FastTransfer.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  rt              2    5[BANK0 ] int 
  5347 ;;  arrayHolder     3    2[BANK0 ] unsigned char [3]
  5348 ;;  calculatedCR    1    1[BANK0 ] unsigned char 
  5349 ;;  SentCRC         1    0[BANK0 ] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5359 ;;      Params:         0       0       0       0       0       0       0
  5360 ;;      Locals:         0       7       0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0
  5362 ;;      Totals:         0       7       0       0       0       0       0
  5363 ;;Total ram usage:        7 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    7
  5366 ;; This function calls:
  5367 ;;		Absolute function
  5368 ;;		_CRC8
  5369 ;;		_Receive_available
  5370 ;;		_Receive_get
  5371 ;;		_crcBufS_get
  5372 ;;		_crcBufS_status_put
  5373 ;; This function is called by:
  5374 ;;		_receiveData
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text17
  5379  001450                     __ptext17:
  5380                           	opt stack 0
  5381  001450                     _CRCcheck:
  5382                           	opt stack 21
  5383  001450                     l6298:
  5384  001450  D801               	call	u6578
  5385  001452  D00A               	goto	u6579
  5386  001454                     u6578:
  5387  001454  0005               	push	
  5388  001456  6EFA               	movwf	pclath,c
  5389  001458  502F               	movf	_serial_available,w,c
  5390  00145A  6EFD               	movwf	tosl,c
  5391  00145C  5030               	movf	_serial_available+1,w,c
  5392  00145E  6EFE               	movwf	tosh,c
  5393  001460  50F8               	movf	tblptru,w,c
  5394  001462  6EFF               	movwf	tosu,c
  5395  001464  50FA               	movf	pclath,w,c
  5396  001466  0012               	return		;indir
  5397  001468                     u6579:
  5398  001468  BE1E               	btfsc	?_Receive_available+1,7,c
  5399  00146A  D7F2               	goto	l6298
  5400  00146C  501E               	movf	?_Receive_available+1,w,c
  5401  00146E  E104               	bnz	l6300
  5402  001470  0E04               	movlw	4
  5403  001472  5C1D               	subwf	?_Receive_available,w,c
  5404  001474  A0D8               	btfss	status,0,c
  5405  001476  D7EC               	goto	l6298
  5406  001478                     l6300:
  5407                           
  5408                           ;FastTransfer.c: 380: unsigned char arrayHolder[3];
  5409                           ;FastTransfer.c: 381: arrayHolder[0] = serial_read();
  5410  001478  D801               	call	u6598
  5411  00147A  D00A               	goto	u6599
  5412  00147C                     u6598:
  5413  00147C  0005               	push	
  5414  00147E  6EFA               	movwf	pclath,c
  5415  001480  5031               	movf	_serial_read,w,c
  5416  001482  6EFD               	movwf	tosl,c
  5417  001484  5032               	movf	_serial_read+1,w,c
  5418  001486  6EFE               	movwf	tosh,c
  5419  001488  50F8               	movf	tblptru,w,c
  5420  00148A  6EFF               	movwf	tosu,c
  5421  00148C  50FA               	movf	pclath,w,c
  5422  00148E  0012               	return		;indir
  5423  001490                     u6599:
  5424  001490  0100               	movlb	0	; () banked
  5425  001492  6FF4               	movwf	CRCcheck@arrayHolder& (0+255),b
  5426                           
  5427                           ;FastTransfer.c: 382: arrayHolder[1] = serial_read();
  5428  001494  D801               	call	u6608
  5429  001496  D00A               	goto	u6609
  5430  001498                     u6608:
  5431  001498  0005               	push	
  5432  00149A  6EFA               	movwf	pclath,c
  5433  00149C  5031               	movf	_serial_read,w,c
  5434  00149E  6EFD               	movwf	tosl,c
  5435  0014A0  5032               	movf	_serial_read+1,w,c
  5436  0014A2  6EFE               	movwf	tosh,c
  5437  0014A4  50F8               	movf	tblptru,w,c
  5438  0014A6  6EFF               	movwf	tosu,c
  5439  0014A8  50FA               	movf	pclath,w,c
  5440  0014AA  0012               	return		;indir
  5441  0014AC                     u6609:
  5442  0014AC  0100               	movlb	0	; () banked
  5443  0014AE  6FF5               	movwf	(CRCcheck@arrayHolder+1)& (0+255),b
  5444                           
  5445                           ;FastTransfer.c: 383: arrayHolder[2] = serial_read();
  5446  0014B0  D801               	call	u6618
  5447  0014B2  D00A               	goto	u6619
  5448  0014B4                     u6618:
  5449  0014B4  0005               	push	
  5450  0014B6  6EFA               	movwf	pclath,c
  5451  0014B8  5031               	movf	_serial_read,w,c
  5452  0014BA  6EFD               	movwf	tosl,c
  5453  0014BC  5032               	movf	_serial_read+1,w,c
  5454  0014BE  6EFE               	movwf	tosh,c
  5455  0014C0  50F8               	movf	tblptru,w,c
  5456  0014C2  6EFF               	movwf	tosu,c
  5457  0014C4  50FA               	movf	pclath,w,c
  5458  0014C6  0012               	return		;indir
  5459  0014C8                     u6619:
  5460  0014C8  0100               	movlb	0	; () banked
  5461  0014CA  6FF6               	movwf	(CRCcheck@arrayHolder+2)& (0+255),b
  5462                           
  5463                           ;FastTransfer.c: 384: unsigned char SentCRC = serial_read();
  5464  0014CC  D801               	call	u6628
  5465  0014CE  D00A               	goto	u6629
  5466  0014D0                     u6628:
  5467  0014D0  0005               	push	
  5468  0014D2  6EFA               	movwf	pclath,c
  5469  0014D4  5031               	movf	_serial_read,w,c
  5470  0014D6  6EFD               	movwf	tosl,c
  5471  0014D8  5032               	movf	_serial_read+1,w,c
  5472  0014DA  6EFE               	movwf	tosh,c
  5473  0014DC  50F8               	movf	tblptru,w,c
  5474  0014DE  6EFF               	movwf	tosu,c
  5475  0014E0  50FA               	movf	pclath,w,c
  5476  0014E2  0012               	return		;indir
  5477  0014E4                     u6629:
  5478  0014E4  0100               	movlb	0	; () banked
  5479  0014E6  6FF2               	movwf	CRCcheck@SentCRC& (0+255),b
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;FastTransfer.c: 385: unsigned char calculatedCRC = CRC8(arrayHolder, 3);
  5483  0014E8  0EF4               	movlw	low CRCcheck@arrayHolder
  5484  0014EA  6E1B               	movwf	CRC8@data,c
  5485  0014EC  0E00               	movlw	high CRCcheck@arrayHolder
  5486  0014EE  6E1C               	movwf	CRC8@data+1,c
  5487  0014F0  0E03               	movlw	3
  5488  0014F2  6E1D               	movwf	CRC8@len,c
  5489  0014F4  EC43  F016         	call	_CRC8	;wreg free
  5490  0014F8  0100               	movlb	0	; () banked
  5491  0014FA  6FF3               	movwf	CRCcheck@calculatedCRC& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;FastTransfer.c: 388: if (SentCRC == calculatedCRC) {
  5495  0014FC  0100               	movlb	0	; () banked
  5496  0014FE  51F3               	movf	CRCcheck@calculatedCRC& (0+255),w,b
  5497  001500  0100               	movlb	0	; () banked
  5498  001502  19F2               	xorwf	CRCcheck@SentCRC& (0+255),w,b
  5499  001504  A4D8               	btfss	status,2,c
  5500  001506  D04E               	goto	l6330
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;FastTransfer.c: 390: int rt;
  5504                           ;FastTransfer.c: 391: for (rt = 0; rt < 5; rt++) {
  5505  001508  0E00               	movlw	0
  5506  00150A  0100               	movlb	0	; () banked
  5507  00150C  6FF8               	movwf	(CRCcheck@rt+1)& (0+255),b
  5508  00150E  0E00               	movlw	0
  5509  001510  6FF7               	movwf	CRCcheck@rt& (0+255),b
  5510  001512                     l6308:
  5511                           
  5512                           ; BSR set to: 0
  5513  001512  0100               	movlb	0	; () banked
  5514  001514  BFF8               	btfsc	(CRCcheck@rt+1)& (0+255),7,b
  5515  001516  D008               	goto	l6312
  5516  001518  0100               	movlb	0	; () banked
  5517  00151A  51F8               	movf	(CRCcheck@rt+1)& (0+255),w,b
  5518  00151C  E147               	bnz	l1124
  5519  00151E  0E05               	movlw	5
  5520  001520  0100               	movlb	0	; () banked
  5521  001522  5DF7               	subwf	CRCcheck@rt& (0+255),w,b
  5522  001524  B0D8               	btfsc	status,0,c
  5523  001526  0012               	return	
  5524  001528                     l6312:
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;FastTransfer.c: 392: if (returnAddress == crcBufS_get(&crc_buffer, rt, 0)) {
  5528  001528  0E28               	movlw	low _crc_buffer
  5529  00152A  6E1B               	movwf	crcBufS_get@_this,c
  5530  00152C  0E01               	movlw	high _crc_buffer
  5531  00152E  6E1C               	movwf	crcBufS_get@_this+1,c
  5532  001530  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5533  001534  0E00               	movlw	0
  5534  001536  6E1E               	movwf	crcBufS_get@space,c
  5535  001538  EC3C  F00E         	call	_crcBufS_get	;wreg free
  5536  00153C  183B               	xorwf	_returnAddress,w,c
  5537  00153E  A4D8               	btfss	status,2,c
  5538  001540  D02D               	goto	l6326
  5539                           
  5540                           ;FastTransfer.c: 393: if (arrayHolder[2] == crcBufS_get(&crc_buffer, rt, 1)) {
  5541  001542  0E28               	movlw	low _crc_buffer
  5542  001544  6E1B               	movwf	crcBufS_get@_this,c
  5543  001546  0E01               	movlw	high _crc_buffer
  5544  001548  6E1C               	movwf	crcBufS_get@_this+1,c
  5545  00154A  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_get@time
  5546  00154E  0E01               	movlw	1
  5547  001550  6E1E               	movwf	crcBufS_get@space,c
  5548  001552  EC3C  F00E         	call	_crcBufS_get	;wreg free
  5549  001556  0100               	movlb	0	; () banked
  5550  001558  19F6               	xorwf	(CRCcheck@arrayHolder+2)& (0+255),w,b
  5551  00155A  A4D8               	btfss	status,2,c
  5552  00155C  D01F               	goto	l6326
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;FastTransfer.c: 394: if (arrayHolder[1] == 1) {
  5556  00155E  0100               	movlb	0	; () banked
  5557  001560  05F5               	decf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5558  001562  A4D8               	btfss	status,2,c
  5559  001564  D00B               	goto	l6322
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;FastTransfer.c: 395: crcBufS_status_put(&crc_buffer, rt, 1);
  5563  001566  0E28               	movlw	low _crc_buffer
  5564  001568  6E1B               	movwf	crcBufS_status_put@_this,c
  5565  00156A  0E01               	movlw	high _crc_buffer
  5566  00156C  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5567  00156E  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5568  001572  0E01               	movlw	1
  5569  001574  6E1E               	movwf	crcBufS_status_put@status,c
  5570  001576  EC19  F00F         	call	_crcBufS_status_put	;wreg free
  5571                           
  5572                           ;FastTransfer.c: 396: break;
  5573  00157A  0012               	return	
  5574  00157C                     l6322:
  5575  00157C  0E02               	movlw	2
  5576  00157E  0100               	movlb	0	; () banked
  5577  001580  19F5               	xorwf	(CRCcheck@arrayHolder+1)& (0+255),w,b
  5578  001582  A4D8               	btfss	status,2,c
  5579  001584  D00B               	goto	l6326
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;FastTransfer.c: 398: crcBufS_status_put(&crc_buffer, rt, 2);
  5583  001586  0E28               	movlw	low _crc_buffer
  5584  001588  6E1B               	movwf	crcBufS_status_put@_this,c
  5585  00158A  0E01               	movlw	high _crc_buffer
  5586  00158C  6E1C               	movwf	crcBufS_status_put@_this+1,c
  5587  00158E  C0F7  F01D         	movff	CRCcheck@rt,crcBufS_status_put@time
  5588  001592  0E02               	movlw	2
  5589  001594  6E1E               	movwf	crcBufS_status_put@status,c
  5590  001596  EC19  F00F         	call	_crcBufS_status_put	;wreg free
  5591                           
  5592                           ;FastTransfer.c: 399: break;
  5593  00159A  0012               	return	
  5594  00159C                     l6326:
  5595  00159C  0100               	movlb	0	; () banked
  5596  00159E  4BF7               	infsnz	CRCcheck@rt& (0+255),f,b
  5597  0015A0  2BF8               	incf	(CRCcheck@rt+1)& (0+255),f,b
  5598  0015A2  D7B7               	goto	l6308
  5599  0015A4                     l6330:
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;FastTransfer.c: 405: crcErrorCounter++;
  5603  0015A4  0100               	movlb	0	; () banked
  5604  0015A6  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  5605  0015A8  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  5606  0015AA  0012               	return	
  5607  0015AC                     l1124:
  5608  0015AC  0012               	return		;funcret
  5609  0015AE                     __end_of_CRCcheck:
  5610                           	opt stack 0
  5611                           tosu	equ	0xFFF
  5612                           tosh	equ	0xFFE
  5613                           tosl	equ	0xFFD
  5614                           pclath	equ	0xFFA
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           intcon	equ	0xFF2
  5622                           postinc0	equ	0xFEE
  5623                           wreg	equ	0xFE8
  5624                           indf2	equ	0xFDF
  5625                           postinc2	equ	0xFDE
  5626                           postdec2	equ	0xFDD
  5627                           plusw2	equ	0xFDB
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function _crcBufS_status_put *****************
  5633 ;; Defined at:
  5634 ;;		line 339 in file "FastTransfer.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5637 ;;		 -> crc_buffer(17), 
  5638 ;;  time            1   28[COMRAM] unsigned char 
  5639 ;;  status          1   29[COMRAM] unsigned char 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  wantedTime      2   34[COMRAM] int 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      void 
  5644 ;; Registers used:
  5645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5651 ;;      Params:         4       0       0       0       0       0       0
  5652 ;;      Locals:         2       0       0       0       0       0       0
  5653 ;;      Temps:          4       0       0       0       0       0       0
  5654 ;;      Totals:        10       0       0       0       0       0       0
  5655 ;;Total ram usage:       10 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    4
  5658 ;; This function calls:
  5659 ;;		Nothing
  5660 ;; This function is called by:
  5661 ;;		_CRCcheck
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text18
  5666  001E32                     __ptext18:
  5667                           	opt stack 0
  5668  001E32                     _crcBufS_status_put:
  5669                           	opt stack 23
  5670                           
  5671                           ;FastTransfer.c: 340: if (time >= 5) {
  5672                           
  5673                           ;incstack = 0
  5674  001E32  0E04               	movlw	4
  5675  001E34  641D               	cpfsgt	crcBufS_status_put@time,c
  5676  001E36  D002               	goto	l6044
  5677                           
  5678                           ;FastTransfer.c: 341: time = 5 - 1;
  5679  001E38  0E04               	movlw	4
  5680  001E3A  6E1D               	movwf	crcBufS_status_put@time,c
  5681  001E3C                     l6044:
  5682                           
  5683                           ;FastTransfer.c: 342: }
  5684                           ;FastTransfer.c: 343: time = time + 1;
  5685  001E3C  281D               	incf	crcBufS_status_put@time,w,c
  5686  001E3E  6E1D               	movwf	crcBufS_status_put@time,c
  5687                           
  5688                           ;FastTransfer.c: 344: int wantedTime = time * 3;
  5689  001E40  501D               	movf	crcBufS_status_put@time,w,c
  5690  001E42  0D03               	mullw	3
  5691  001E44  CFF3 F023          	movff	prodl,crcBufS_status_put@wantedTime
  5692  001E48  CFF4 F024          	movff	prodh,crcBufS_status_put@wantedTime+1
  5693                           
  5694                           ;FastTransfer.c: 345: if (wantedTime > _this->head) {
  5695  001E4C  EE20 F00F          	lfsr	2,15
  5696  001E50  501B               	movf	crcBufS_status_put@_this,w,c
  5697  001E52  26D9               	addwf	fsr2l,f,c
  5698  001E54  501C               	movf	crcBufS_status_put@_this+1,w,c
  5699  001E56  22DA               	addwfc	fsr2h,f,c
  5700  001E58  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5701  001E5A  5CDE               	subwf	postinc2,w,c
  5702  001E5C  50DE               	movf	postinc2,w,c
  5703  001E5E  0A80               	xorlw	128
  5704  001E60  6E21               	movwf	(??_crcBufS_status_put+2)& (0+255),c
  5705  001E62  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5706  001E64  0A80               	xorlw	128
  5707  001E66  5821               	subwfb	(??_crcBufS_status_put+2)& (0+255),w,c
  5708  001E68  B0D8               	btfsc	status,0,c
  5709  001E6A  D02B               	goto	l6052
  5710                           
  5711                           ;FastTransfer.c: 346: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5712  001E6C  EE20 F00F          	lfsr	2,15
  5713  001E70  501B               	movf	crcBufS_status_put@_this,w,c
  5714  001E72  26D9               	addwf	fsr2l,f,c
  5715  001E74  501C               	movf	crcBufS_status_put@_this+1,w,c
  5716  001E76  22DA               	addwfc	fsr2h,f,c
  5717  001E78  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5718  001E7C  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5719  001E80  1E1F               	comf	??_crcBufS_status_put,f,c
  5720  001E82  1E20               	comf	??_crcBufS_status_put+1,f,c
  5721  001E84  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5722  001E86  2A20               	incf	??_crcBufS_status_put+1,f,c
  5723  001E88  5023               	movf	crcBufS_status_put@wantedTime,w,c
  5724  001E8A  261F               	addwf	??_crcBufS_status_put,f,c
  5725  001E8C  5024               	movf	crcBufS_status_put@wantedTime+1,w,c
  5726  001E8E  2220               	addwfc	??_crcBufS_status_put+1,f,c
  5727  001E90  1E1F               	comf	??_crcBufS_status_put,f,c
  5728  001E92  1E20               	comf	??_crcBufS_status_put+1,f,c
  5729  001E94  4A1F               	infsnz	??_crcBufS_status_put,f,c
  5730  001E96  2A20               	incf	??_crcBufS_status_put+1,f,c
  5731  001E98  0E0F               	movlw	15
  5732  001E9A  241F               	addwf	??_crcBufS_status_put,w,c
  5733  001E9C  6E23               	movwf	crcBufS_status_put@wantedTime,c
  5734  001E9E  0E00               	movlw	0
  5735  001EA0  2020               	addwfc	??_crcBufS_status_put+1,w,c
  5736  001EA2  6E24               	movwf	crcBufS_status_put@wantedTime+1,c
  5737                           
  5738                           ;FastTransfer.c: 347: _this->buf[(wantedTime + 2)] = status;
  5739  001EA4  0E02               	movlw	2
  5740  001EA6  2423               	addwf	crcBufS_status_put@wantedTime,w,c
  5741  001EA8  6E1F               	movwf	??_crcBufS_status_put& (0+255),c
  5742  001EAA  0E00               	movlw	0
  5743  001EAC  2024               	addwfc	crcBufS_status_put@wantedTime+1,w,c
  5744  001EAE  6E20               	movwf	(??_crcBufS_status_put+1)& (0+255),c
  5745  001EB0  501F               	movf	??_crcBufS_status_put,w,c
  5746  001EB2  241B               	addwf	crcBufS_status_put@_this,w,c
  5747  001EB4  6ED9               	movwf	fsr2l,c
  5748  001EB6  5020               	movf	??_crcBufS_status_put+1,w,c
  5749  001EB8  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5750  001EBA  6EDA               	movwf	fsr2h,c
  5751  001EBC  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5752                           
  5753                           ;FastTransfer.c: 348: } else {
  5754  001EC0  0012               	return	
  5755  001EC2                     l6052:
  5756                           
  5757                           ;FastTransfer.c: 349: _this->buf[(_this->head - wantedTime) + 2] = status;
  5758  001EC2  EE20 F00F          	lfsr	2,15
  5759  001EC6  501B               	movf	crcBufS_status_put@_this,w,c
  5760  001EC8  26D9               	addwf	fsr2l,f,c
  5761  001ECA  501C               	movf	crcBufS_status_put@_this+1,w,c
  5762  001ECC  22DA               	addwfc	fsr2h,f,c
  5763  001ECE  CFDE F01F          	movff	postinc2,??_crcBufS_status_put
  5764  001ED2  CFDD F020          	movff	postdec2,??_crcBufS_status_put+1
  5765  001ED6  C023  F021         	movff	crcBufS_status_put@wantedTime,??_crcBufS_status_put+2
  5766  001EDA  C024  F022         	movff	crcBufS_status_put@wantedTime+1,??_crcBufS_status_put+3
  5767  001EDE  1E21               	comf	??_crcBufS_status_put+2,f,c
  5768  001EE0  1E22               	comf	??_crcBufS_status_put+3,f,c
  5769  001EE2  4A21               	infsnz	??_crcBufS_status_put+2,f,c
  5770  001EE4  2A22               	incf	??_crcBufS_status_put+3,f,c
  5771  001EE6  501F               	movf	??_crcBufS_status_put,w,c
  5772  001EE8  2621               	addwf	??_crcBufS_status_put+2,f,c
  5773  001EEA  5020               	movf	??_crcBufS_status_put+1,w,c
  5774  001EEC  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5775  001EEE  0E02               	movlw	2
  5776  001EF0  2621               	addwf	??_crcBufS_status_put+2,f,c
  5777  001EF2  0E00               	movlw	0
  5778  001EF4  2222               	addwfc	??_crcBufS_status_put+3,f,c
  5779  001EF6  5021               	movf	??_crcBufS_status_put+2,w,c
  5780  001EF8  241B               	addwf	crcBufS_status_put@_this,w,c
  5781  001EFA  6ED9               	movwf	fsr2l,c
  5782  001EFC  5022               	movf	??_crcBufS_status_put+3,w,c
  5783  001EFE  201C               	addwfc	crcBufS_status_put@_this+1,w,c
  5784  001F00  6EDA               	movwf	fsr2h,c
  5785  001F02  C01E  FFDF         	movff	crcBufS_status_put@status,indf2
  5786  001F06  0012               	return	
  5787  001F08                     __end_of_crcBufS_status_put:
  5788                           	opt stack 0
  5789                           tosu	equ	0xFFF
  5790                           tosh	equ	0xFFE
  5791                           tosl	equ	0xFFD
  5792                           pclath	equ	0xFFA
  5793                           tblptru	equ	0xFF8
  5794                           tblptrh	equ	0xFF7
  5795                           tblptrl	equ	0xFF6
  5796                           tablat	equ	0xFF5
  5797                           prodh	equ	0xFF4
  5798                           prodl	equ	0xFF3
  5799                           intcon	equ	0xFF2
  5800                           postinc0	equ	0xFEE
  5801                           wreg	equ	0xFE8
  5802                           indf2	equ	0xFDF
  5803                           postinc2	equ	0xFDE
  5804                           postdec2	equ	0xFDD
  5805                           plusw2	equ	0xFDB
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _crcBufS_get *****************
  5811 ;; Defined at:
  5812 ;;		line 356 in file "FastTransfer.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  5815 ;;		 -> crc_buffer(17), 
  5816 ;;  time            1   28[COMRAM] unsigned char 
  5817 ;;  space           1   29[COMRAM] unsigned char 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  wantedTime      2   36[COMRAM] int 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      unsigned char 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5829 ;;      Params:         4       0       0       0       0       0       0
  5830 ;;      Locals:         2       0       0       0       0       0       0
  5831 ;;      Temps:          6       0       0       0       0       0       0
  5832 ;;      Totals:        12       0       0       0       0       0       0
  5833 ;;Total ram usage:       12 bytes
  5834 ;; Hardware stack levels used:    1
  5835 ;; Hardware stack levels required when called:    4
  5836 ;; This function calls:
  5837 ;;		Nothing
  5838 ;; This function is called by:
  5839 ;;		_CRCcheck
  5840 ;;		_AKNAK
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text19
  5845  001C78                     __ptext19:
  5846                           	opt stack 0
  5847  001C78                     _crcBufS_get:
  5848                           	opt stack 23
  5849                           
  5850                           ;FastTransfer.c: 357: if (time >= 5) {
  5851                           
  5852                           ;incstack = 0
  5853  001C78  0E04               	movlw	4
  5854  001C7A  641D               	cpfsgt	crcBufS_get@time,c
  5855  001C7C  D002               	goto	l6020
  5856                           
  5857                           ;FastTransfer.c: 358: time = 5 - 1;
  5858  001C7E  0E04               	movlw	4
  5859  001C80  6E1D               	movwf	crcBufS_get@time,c
  5860  001C82                     l6020:
  5861                           
  5862                           ;FastTransfer.c: 359: }
  5863                           ;FastTransfer.c: 360: if (space >= 3) {
  5864  001C82  0E02               	movlw	2
  5865  001C84  641E               	cpfsgt	crcBufS_get@space,c
  5866  001C86  D002               	goto	l6024
  5867                           
  5868                           ;FastTransfer.c: 361: space = 3 - 1;
  5869  001C88  0E02               	movlw	2
  5870  001C8A  6E1E               	movwf	crcBufS_get@space,c
  5871  001C8C                     l6024:
  5872                           
  5873                           ;FastTransfer.c: 362: }
  5874                           ;FastTransfer.c: 363: time = time + 1;
  5875  001C8C  281D               	incf	crcBufS_get@time,w,c
  5876  001C8E  6E1D               	movwf	crcBufS_get@time,c
  5877                           
  5878                           ;FastTransfer.c: 364: int wantedTime = time * 3;
  5879  001C90  501D               	movf	crcBufS_get@time,w,c
  5880  001C92  0D03               	mullw	3
  5881  001C94  CFF3 F025          	movff	prodl,crcBufS_get@wantedTime
  5882  001C98  CFF4 F026          	movff	prodh,crcBufS_get@wantedTime+1
  5883                           
  5884                           ;FastTransfer.c: 365: if (wantedTime > _this->head) {
  5885  001C9C  EE20 F00F          	lfsr	2,15
  5886  001CA0  501B               	movf	crcBufS_get@_this,w,c
  5887  001CA2  26D9               	addwf	fsr2l,f,c
  5888  001CA4  501C               	movf	crcBufS_get@_this+1,w,c
  5889  001CA6  22DA               	addwfc	fsr2h,f,c
  5890  001CA8  5025               	movf	crcBufS_get@wantedTime,w,c
  5891  001CAA  5CDE               	subwf	postinc2,w,c
  5892  001CAC  50DE               	movf	postinc2,w,c
  5893  001CAE  0A80               	xorlw	128
  5894  001CB0  6E21               	movwf	(??_crcBufS_get+2)& (0+255),c
  5895  001CB2  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5896  001CB4  0A80               	xorlw	128
  5897  001CB6  5821               	subwfb	(??_crcBufS_get+2)& (0+255),w,c
  5898  001CB8  B0D8               	btfsc	status,0,c
  5899  001CBA  D02A               	goto	l6036
  5900                           
  5901                           ;FastTransfer.c: 366: wantedTime = ((5 * 3)) - (wantedTime - _this->head);
  5902  001CBC  EE20 F00F          	lfsr	2,15
  5903  001CC0  501B               	movf	crcBufS_get@_this,w,c
  5904  001CC2  26D9               	addwf	fsr2l,f,c
  5905  001CC4  501C               	movf	crcBufS_get@_this+1,w,c
  5906  001CC6  22DA               	addwfc	fsr2h,f,c
  5907  001CC8  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5908  001CCC  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5909  001CD0  1E1F               	comf	??_crcBufS_get,f,c
  5910  001CD2  1E20               	comf	??_crcBufS_get+1,f,c
  5911  001CD4  4A1F               	infsnz	??_crcBufS_get,f,c
  5912  001CD6  2A20               	incf	??_crcBufS_get+1,f,c
  5913  001CD8  5025               	movf	crcBufS_get@wantedTime,w,c
  5914  001CDA  261F               	addwf	??_crcBufS_get,f,c
  5915  001CDC  5026               	movf	crcBufS_get@wantedTime+1,w,c
  5916  001CDE  2220               	addwfc	??_crcBufS_get+1,f,c
  5917  001CE0  1E1F               	comf	??_crcBufS_get,f,c
  5918  001CE2  1E20               	comf	??_crcBufS_get+1,f,c
  5919  001CE4  4A1F               	infsnz	??_crcBufS_get,f,c
  5920  001CE6  2A20               	incf	??_crcBufS_get+1,f,c
  5921  001CE8  0E0F               	movlw	15
  5922  001CEA  241F               	addwf	??_crcBufS_get,w,c
  5923  001CEC  6E25               	movwf	crcBufS_get@wantedTime,c
  5924  001CEE  0E00               	movlw	0
  5925  001CF0  2020               	addwfc	??_crcBufS_get+1,w,c
  5926  001CF2  6E26               	movwf	crcBufS_get@wantedTime+1,c
  5927                           
  5928                           ;FastTransfer.c: 367: return (_this->buf[(wantedTime + space)]);
  5929  001CF4  501E               	movf	crcBufS_get@space,w,c
  5930  001CF6  2425               	addwf	crcBufS_get@wantedTime,w,c
  5931  001CF8  6E1F               	movwf	??_crcBufS_get& (0+255),c
  5932  001CFA  0E00               	movlw	0
  5933  001CFC  2026               	addwfc	crcBufS_get@wantedTime+1,w,c
  5934  001CFE  6E20               	movwf	(??_crcBufS_get+1)& (0+255),c
  5935  001D00  501F               	movf	??_crcBufS_get,w,c
  5936  001D02  241B               	addwf	crcBufS_get@_this,w,c
  5937  001D04  6ED9               	movwf	fsr2l,c
  5938  001D06  5020               	movf	??_crcBufS_get+1,w,c
  5939  001D08  201C               	addwfc	crcBufS_get@_this+1,w,c
  5940  001D0A  6EDA               	movwf	fsr2h,c
  5941  001D0C  50DF               	movf	indf2,w,c
  5942                           
  5943                           ;FastTransfer.c: 368: } else {
  5944  001D0E  0012               	return	
  5945  001D10                     l6036:
  5946                           
  5947                           ;FastTransfer.c: 369: return (_this->buf[(_this->head - wantedTime) + space]);
  5948  001D10  EE20 F00F          	lfsr	2,15
  5949  001D14  501B               	movf	crcBufS_get@_this,w,c
  5950  001D16  26D9               	addwf	fsr2l,f,c
  5951  001D18  501C               	movf	crcBufS_get@_this+1,w,c
  5952  001D1A  22DA               	addwfc	fsr2h,f,c
  5953  001D1C  CFDE F01F          	movff	postinc2,??_crcBufS_get
  5954  001D20  CFDD F020          	movff	postdec2,??_crcBufS_get+1
  5955  001D24  C025  F021         	movff	crcBufS_get@wantedTime,??_crcBufS_get+2
  5956  001D28  C026  F022         	movff	crcBufS_get@wantedTime+1,??_crcBufS_get+3
  5957  001D2C  1E21               	comf	??_crcBufS_get+2,f,c
  5958  001D2E  1E22               	comf	??_crcBufS_get+3,f,c
  5959  001D30  4A21               	infsnz	??_crcBufS_get+2,f,c
  5960  001D32  2A22               	incf	??_crcBufS_get+3,f,c
  5961  001D34  501E               	movf	crcBufS_get@space,w,c
  5962  001D36  6E23               	movwf	(??_crcBufS_get+4)& (0+255),c
  5963  001D38  6A24               	clrf	(??_crcBufS_get+5)& (0+255),c
  5964  001D3A  5021               	movf	??_crcBufS_get+2,w,c
  5965  001D3C  2623               	addwf	??_crcBufS_get+4,f,c
  5966  001D3E  5022               	movf	??_crcBufS_get+3,w,c
  5967  001D40  2224               	addwfc	??_crcBufS_get+5,f,c
  5968  001D42  501F               	movf	??_crcBufS_get,w,c
  5969  001D44  2623               	addwf	??_crcBufS_get+4,f,c
  5970  001D46  5020               	movf	??_crcBufS_get+1,w,c
  5971  001D48  2224               	addwfc	??_crcBufS_get+5,f,c
  5972  001D4A  5023               	movf	??_crcBufS_get+4,w,c
  5973  001D4C  241B               	addwf	crcBufS_get@_this,w,c
  5974  001D4E  6ED9               	movwf	fsr2l,c
  5975  001D50  5024               	movf	??_crcBufS_get+5,w,c
  5976  001D52  201C               	addwfc	crcBufS_get@_this+1,w,c
  5977  001D54  6EDA               	movwf	fsr2h,c
  5978  001D56  50DF               	movf	indf2,w,c
  5979  001D58  0012               	return	
  5980  001D5A                     __end_of_crcBufS_get:
  5981                           	opt stack 0
  5982                           tosu	equ	0xFFF
  5983                           tosh	equ	0xFFE
  5984                           tosl	equ	0xFFD
  5985                           pclath	equ	0xFFA
  5986                           tblptru	equ	0xFF8
  5987                           tblptrh	equ	0xFF7
  5988                           tblptrl	equ	0xFF6
  5989                           tablat	equ	0xFF5
  5990                           prodh	equ	0xFF4
  5991                           prodl	equ	0xFF3
  5992                           intcon	equ	0xFF2
  5993                           postinc0	equ	0xFEE
  5994                           wreg	equ	0xFE8
  5995                           indf2	equ	0xFDF
  5996                           postinc2	equ	0xFDE
  5997                           postdec2	equ	0xFDD
  5998                           plusw2	equ	0xFDB
  5999                           fsr2h	equ	0xFDA
  6000                           fsr2l	equ	0xFD9
  6001                           status	equ	0xFD8
  6002                           
  6003 ;; *************** function _Receive_get *****************
  6004 ;; Defined at:
  6005 ;;		line 126 in file "UART.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      unsigned char 
  6012 ;; Registers used:
  6013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6019 ;;      Params:         0       0       0       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0
  6022 ;;      Totals:         0       0       0       0       0       0       0
  6023 ;;Total ram usage:        0 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    6
  6026 ;; This function calls:
  6027 ;;		_UART_buff_get
  6028 ;; This function is called by:
  6029 ;;		_SYSTEM_Initialize
  6030 ;;		_getch
  6031 ;;		_CRCcheck
  6032 ;;		_receiveData
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text20
  6037  003182                     __ptext20:
  6038                           	opt stack 0
  6039  003182                     _Receive_get:
  6040                           	opt stack 22
  6041                           
  6042                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  6043                           
  6044                           ;incstack = 0
  6045  003182  0E00               	movlw	low _input_buffer
  6046  003184  6E21               	movwf	UART_buff_get@_this,c
  6047  003186  0E04               	movlw	high _input_buffer
  6048  003188  6E22               	movwf	UART_buff_get@_this+1,c
  6049  00318A  EC88  F012         	call	_UART_buff_get	;wreg free
  6050  00318E  0012               	return	
  6051  003190                     __end_of_Receive_get:
  6052                           	opt stack 0
  6053                           tosu	equ	0xFFF
  6054                           tosh	equ	0xFFE
  6055                           tosl	equ	0xFFD
  6056                           pclath	equ	0xFFA
  6057                           tblptru	equ	0xFF8
  6058                           tblptrh	equ	0xFF7
  6059                           tblptrl	equ	0xFF6
  6060                           tablat	equ	0xFF5
  6061                           prodh	equ	0xFF4
  6062                           prodl	equ	0xFF3
  6063                           intcon	equ	0xFF2
  6064                           postinc0	equ	0xFEE
  6065                           wreg	equ	0xFE8
  6066                           indf2	equ	0xFDF
  6067                           postinc2	equ	0xFDE
  6068                           postdec2	equ	0xFDD
  6069                           plusw2	equ	0xFDB
  6070                           fsr2h	equ	0xFDA
  6071                           fsr2l	equ	0xFD9
  6072                           status	equ	0xFD8
  6073                           
  6074 ;; *************** function _UART_buff_get *****************
  6075 ;; Defined at:
  6076 ;;		line 81 in file "UART.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  6079 ;;		 -> output_buffer(206), input_buffer(206), 
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;  c               1   36[COMRAM] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      unsigned char 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6091 ;;      Params:         2       0       0       0       0       0       0
  6092 ;;      Locals:         1       0       0       0       0       0       0
  6093 ;;      Temps:          2       0       0       0       0       0       0
  6094 ;;      Totals:         5       0       0       0       0       0       0
  6095 ;;Total ram usage:        5 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    5
  6098 ;; This function calls:
  6099 ;;		_UART_buff_modulo_inc
  6100 ;; This function is called by:
  6101 ;;		_Receive_get
  6102 ;;		_Send_put
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text21
  6107  002510                     __ptext21:
  6108                           	opt stack 0
  6109  002510                     _UART_buff_get:
  6110                           	opt stack 21
  6111                           
  6112                           ;UART.c: 82: unsigned char c;
  6113                           ;UART.c: 83: if (_this->count > 0) {
  6114                           
  6115                           ;incstack = 0
  6116  002510  EE20 F0CC          	lfsr	2,204
  6117  002514  5021               	movf	UART_buff_get@_this,w,c
  6118  002516  26D9               	addwf	fsr2l,f,c
  6119  002518  5022               	movf	UART_buff_get@_this+1,w,c
  6120  00251A  22DA               	addwfc	fsr2h,f,c
  6121  00251C  0E01               	movlw	1
  6122  00251E  BEDB               	btfsc	plusw2,7,c
  6123  002520  D03C               	goto	l5918
  6124  002522  0E01               	movlw	1
  6125  002524  50DB               	movf	plusw2,w,c
  6126  002526  E103               	bnz	u6090
  6127  002528  04DE               	decf	postinc2,w,c
  6128  00252A  A0D8               	btfss	status,0,c
  6129  00252C  D036               	goto	l5918
  6130  00252E                     u6090:
  6131                           
  6132                           ;UART.c: 84: c = _this->buf[_this->tail];
  6133  00252E  EE20 F0CA          	lfsr	2,202
  6134  002532  5021               	movf	UART_buff_get@_this,w,c
  6135  002534  26D9               	addwf	fsr2l,f,c
  6136  002536  5022               	movf	UART_buff_get@_this+1,w,c
  6137  002538  22DA               	addwfc	fsr2h,f,c
  6138  00253A  CFDE F023          	movff	postinc2,??_UART_buff_get
  6139  00253E  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  6140  002542  5023               	movf	??_UART_buff_get,w,c
  6141  002544  2421               	addwf	UART_buff_get@_this,w,c
  6142  002546  6ED9               	movwf	fsr2l,c
  6143  002548  5024               	movf	??_UART_buff_get+1,w,c
  6144  00254A  2022               	addwfc	UART_buff_get@_this+1,w,c
  6145  00254C  6EDA               	movwf	fsr2h,c
  6146  00254E  50DF               	movf	indf2,w,c
  6147  002550  6E25               	movwf	UART_buff_get@c,c
  6148                           
  6149                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  6150  002552  EE20 F0CA          	lfsr	2,202
  6151  002556  5021               	movf	UART_buff_get@_this,w,c
  6152  002558  26D9               	addwf	fsr2l,f,c
  6153  00255A  5022               	movf	UART_buff_get@_this+1,w,c
  6154  00255C  22DA               	addwfc	fsr2h,f,c
  6155  00255E  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  6156  002562  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  6157  002566  0E00               	movlw	0
  6158  002568  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  6159  00256A  0EC8               	movlw	200
  6160  00256C  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  6161  00256E  ECB8  F017         	call	_UART_buff_modulo_inc	;wreg free
  6162  002572  EE20 F0CA          	lfsr	2,202
  6163  002576  5021               	movf	UART_buff_get@_this,w,c
  6164  002578  26D9               	addwf	fsr2l,f,c
  6165  00257A  5022               	movf	UART_buff_get@_this+1,w,c
  6166  00257C  22DA               	addwfc	fsr2h,f,c
  6167  00257E  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  6168  002582  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  6169                           
  6170                           ;UART.c: 86: --_this->count;
  6171  002586  EE20 F0CC          	lfsr	2,204
  6172  00258A  5021               	movf	UART_buff_get@_this,w,c
  6173  00258C  26D9               	addwf	fsr2l,f,c
  6174  00258E  5022               	movf	UART_buff_get@_this+1,w,c
  6175  002590  22DA               	addwfc	fsr2h,f,c
  6176  002592  06DE               	decf	postinc2,f,c
  6177  002594  0E00               	movlw	0
  6178  002596  5ADD               	subwfb	postdec2,f,c
  6179                           
  6180                           ;UART.c: 87: } else {
  6181  002598  D002               	goto	l1169
  6182  00259A                     l5918:
  6183                           
  6184                           ;UART.c: 88: c = 0;
  6185  00259A  0E00               	movlw	0
  6186  00259C  6E25               	movwf	UART_buff_get@c,c
  6187  00259E                     l1169:
  6188                           
  6189                           ;UART.c: 89: }
  6190                           ;UART.c: 90: return (c);
  6191  00259E  5025               	movf	UART_buff_get@c,w,c
  6192  0025A0  0012               	return	
  6193  0025A2                     __end_of_UART_buff_get:
  6194                           	opt stack 0
  6195                           tosu	equ	0xFFF
  6196                           tosh	equ	0xFFE
  6197                           tosl	equ	0xFFD
  6198                           pclath	equ	0xFFA
  6199                           tblptru	equ	0xFF8
  6200                           tblptrh	equ	0xFF7
  6201                           tblptrl	equ	0xFF6
  6202                           tablat	equ	0xFF5
  6203                           prodh	equ	0xFF4
  6204                           prodl	equ	0xFF3
  6205                           intcon	equ	0xFF2
  6206                           postinc0	equ	0xFEE
  6207                           wreg	equ	0xFE8
  6208                           indf2	equ	0xFDF
  6209                           postinc2	equ	0xFDE
  6210                           postdec2	equ	0xFDD
  6211                           plusw2	equ	0xFDB
  6212                           fsr2h	equ	0xFDA
  6213                           fsr2l	equ	0xFD9
  6214                           status	equ	0xFD8
  6215                           
  6216 ;; *************** function _UART_buff_modulo_inc *****************
  6217 ;; Defined at:
  6218 ;;		line 106 in file "UART.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  value           2   26[COMRAM] const unsigned int 
  6221 ;;  modulus         2   28[COMRAM] const unsigned int 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  my_value        2   30[COMRAM] unsigned int 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  2   26[COMRAM] unsigned int 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6233 ;;      Params:         4       0       0       0       0       0       0
  6234 ;;      Locals:         2       0       0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0
  6236 ;;      Totals:         6       0       0       0       0       0       0
  6237 ;;Total ram usage:        6 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    4
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_UART_buff_put
  6244 ;;		_UART_buff_get
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text22
  6249  002F70                     __ptext22:
  6250                           	opt stack 0
  6251  002F70                     _UART_buff_modulo_inc:
  6252                           	opt stack 21
  6253                           
  6254                           ;UART.c: 107: unsigned int my_value = value + 1;
  6255                           
  6256                           ;incstack = 0
  6257  002F70  0E01               	movlw	1
  6258  002F72  241B               	addwf	UART_buff_modulo_inc@value,w,c
  6259  002F74  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6260  002F76  0E00               	movlw	0
  6261  002F78  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  6262  002F7A  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6263                           
  6264                           ;UART.c: 108: if (my_value >= modulus) {
  6265  002F7C  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  6266  002F7E  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  6267  002F80  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  6268  002F82  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  6269  002F84  A0D8               	btfss	status,0,c
  6270  002F86  D004               	goto	l5878
  6271                           
  6272                           ;UART.c: 109: my_value = 0;
  6273  002F88  0E00               	movlw	0
  6274  002F8A  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  6275  002F8C  0E00               	movlw	0
  6276  002F8E  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  6277  002F90                     l5878:
  6278                           
  6279                           ;UART.c: 110: }
  6280                           ;UART.c: 111: return (my_value);
  6281  002F90  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  6282  002F94  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  6283  002F98  0012               	return	
  6284  002F9A                     __end_of_UART_buff_modulo_inc:
  6285                           	opt stack 0
  6286                           tosu	equ	0xFFF
  6287                           tosh	equ	0xFFE
  6288                           tosl	equ	0xFFD
  6289                           pclath	equ	0xFFA
  6290                           tblptru	equ	0xFF8
  6291                           tblptrh	equ	0xFF7
  6292                           tblptrl	equ	0xFF6
  6293                           tablat	equ	0xFF5
  6294                           prodh	equ	0xFF4
  6295                           prodl	equ	0xFF3
  6296                           intcon	equ	0xFF2
  6297                           postinc0	equ	0xFEE
  6298                           wreg	equ	0xFE8
  6299                           indf2	equ	0xFDF
  6300                           postinc2	equ	0xFDE
  6301                           postdec2	equ	0xFDD
  6302                           plusw2	equ	0xFDB
  6303                           fsr2h	equ	0xFDA
  6304                           fsr2l	equ	0xFD9
  6305                           status	equ	0xFD8
  6306                           
  6307 ;; *************** function _Receive_available *****************
  6308 ;; Defined at:
  6309 ;;		line 122 in file "UART.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  2   28[COMRAM] int 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6323 ;;      Params:         2       0       0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0
  6326 ;;      Totals:         2       0       0       0       0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    5
  6330 ;; This function calls:
  6331 ;;		_UART_buff_size
  6332 ;; This function is called by:
  6333 ;;		_SYSTEM_Initialize
  6334 ;;		_CRCcheck
  6335 ;;		_receiveData
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text23
  6340  00310E                     __ptext23:
  6341                           	opt stack 0
  6342  00310E                     _Receive_available:
  6343                           	opt stack 23
  6344                           
  6345                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  6346                           
  6347                           ;incstack = 0
  6348  00310E  0E00               	movlw	low _input_buffer
  6349  003110  6E1B               	movwf	UART_buff_size@_this,c
  6350  003112  0E04               	movlw	high _input_buffer
  6351  003114  6E1C               	movwf	UART_buff_size@_this+1,c
  6352  003116  EC92  F018         	call	_UART_buff_size	;wreg free
  6353  00311A  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  6354  00311E  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  6355  003122  0012               	return	
  6356  003124                     __end_of_Receive_available:
  6357                           	opt stack 0
  6358                           tosu	equ	0xFFF
  6359                           tosh	equ	0xFFE
  6360                           tosl	equ	0xFFD
  6361                           pclath	equ	0xFFA
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           postinc0	equ	0xFEE
  6370                           wreg	equ	0xFE8
  6371                           indf2	equ	0xFDF
  6372                           postinc2	equ	0xFDE
  6373                           postdec2	equ	0xFDD
  6374                           plusw2	equ	0xFDB
  6375                           fsr2h	equ	0xFDA
  6376                           fsr2l	equ	0xFD9
  6377                           status	equ	0xFD8
  6378                           
  6379 ;; *************** function _UART_buff_size *****************
  6380 ;; Defined at:
  6381 ;;		line 102 in file "UART.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  6384 ;;		 -> output_buffer(206), input_buffer(206), 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  2   26[COMRAM] int 
  6389 ;; Registers used:
  6390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6396 ;;      Params:         2       0       0       0       0       0       0
  6397 ;;      Locals:         0       0       0       0       0       0       0
  6398 ;;      Temps:          0       0       0       0       0       0       0
  6399 ;;      Totals:         2       0       0       0       0       0       0
  6400 ;;Total ram usage:        2 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    4
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_Receive_available
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text24
  6411  003124                     __ptext24:
  6412                           	opt stack 0
  6413  003124                     _UART_buff_size:
  6414                           	opt stack 23
  6415                           
  6416                           ;UART.c: 103: return (_this->count);
  6417                           
  6418                           ;incstack = 0
  6419  003124  EE20 F0CC          	lfsr	2,204
  6420  003128  501B               	movf	UART_buff_size@_this,w,c
  6421  00312A  26D9               	addwf	fsr2l,f,c
  6422  00312C  501C               	movf	UART_buff_size@_this+1,w,c
  6423  00312E  22DA               	addwfc	fsr2h,f,c
  6424  003130  CFDE F01B          	movff	postinc2,?_UART_buff_size
  6425  003134  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  6426  003138  0012               	return	
  6427  00313A                     __end_of_UART_buff_size:
  6428                           	opt stack 0
  6429                           tosu	equ	0xFFF
  6430                           tosh	equ	0xFFE
  6431                           tosl	equ	0xFFD
  6432                           pclath	equ	0xFFA
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           postinc0	equ	0xFEE
  6441                           wreg	equ	0xFE8
  6442                           indf2	equ	0xFDF
  6443                           postinc2	equ	0xFDE
  6444                           postdec2	equ	0xFDD
  6445                           plusw2	equ	0xFDB
  6446                           fsr2h	equ	0xFDA
  6447                           fsr2l	equ	0xFD9
  6448                           status	equ	0xFD8
  6449                           
  6450 ;; *************** function _CRC8 *****************
  6451 ;; Defined at:
  6452 ;;		line 35 in file "FastTransfer.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  data            2   26[COMRAM] PTR const unsigned char 
  6455 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2468(3), receiveData@holder(3), rx_buffer(200), 
  6456 ;;		 -> ring_buffer(206), NULL(0), 
  6457 ;;  len             1   28[COMRAM] unsigned char 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  sum             1   29[COMRAM] unsigned char 
  6460 ;;  tempI           1   31[COMRAM] unsigned char 
  6461 ;;  extract         1   30[COMRAM] unsigned char 
  6462 ;;  crc             1   32[COMRAM] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      unsigned char 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6472 ;;      Params:         3       0       0       0       0       0       0
  6473 ;;      Locals:         4       0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0
  6475 ;;      Totals:         7       0       0       0       0       0       0
  6476 ;;Total ram usage:        7 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    4
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_sendData
  6483 ;;		_receiveData
  6484 ;;		_CRCcheck
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text25
  6489  002C86                     __ptext25:
  6490                           	opt stack 0
  6491  002C86                     _CRC8:
  6492                           	opt stack 23
  6493                           
  6494                           ;FastTransfer.c: 36: unsigned char crc = 0x00;
  6495                           
  6496                           ;incstack = 0
  6497  002C86  0E00               	movlw	0
  6498  002C88  6E21               	movwf	CRC8@crc,c
  6499                           
  6500                           ;FastTransfer.c: 37: while (len--) {
  6501  002C8A  D01C               	goto	l6000
  6502  002C8C                     l5984:
  6503                           
  6504                           ;FastTransfer.c: 38: unsigned char extract = *data++;
  6505  002C8C  C01B  FFD9         	movff	CRC8@data,fsr2l
  6506  002C90  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  6507  002C94  50DF               	movf	indf2,w,c
  6508  002C96  6E1F               	movwf	CRC8@extract,c
  6509  002C98  4A1B               	infsnz	CRC8@data,f,c
  6510  002C9A  2A1C               	incf	CRC8@data+1,f,c
  6511                           
  6512                           ;FastTransfer.c: 39: unsigned char tempI;
  6513                           ;FastTransfer.c: 40: for (tempI = 8; tempI; tempI--) {
  6514  002C9C  0E08               	movlw	8
  6515  002C9E  6E20               	movwf	CRC8@tempI,c
  6516  002CA0  D00E               	goto	l5998
  6517  002CA2                     l5990:
  6518                           
  6519                           ;FastTransfer.c: 41: unsigned char sum = (crc ^ extract) & 0x01;
  6520  002CA2  5021               	movf	CRC8@crc,w,c
  6521  002CA4  181F               	xorwf	CRC8@extract,w,c
  6522  002CA6  0B01               	andlw	1
  6523  002CA8  6E1E               	movwf	CRC8@sum,c
  6524                           
  6525                           ;FastTransfer.c: 42: crc >>= 1;
  6526  002CAA  90D8               	bcf	status,0,c
  6527  002CAC  3221               	rrcf	CRC8@crc,f,c
  6528                           
  6529                           ;FastTransfer.c: 43: if (sum) {
  6530  002CAE  501E               	movf	CRC8@sum,w,c
  6531  002CB0  B4D8               	btfsc	status,2,c
  6532  002CB2  D002               	goto	l1008
  6533                           
  6534                           ;FastTransfer.c: 44: crc ^= 0x8C;
  6535  002CB4  0E8C               	movlw	140
  6536  002CB6  1A21               	xorwf	CRC8@crc,f,c
  6537  002CB8                     l1008:
  6538                           
  6539                           ;FastTransfer.c: 45: }
  6540                           ;FastTransfer.c: 46: extract >>= 1;
  6541  002CB8  90D8               	bcf	status,0,c
  6542  002CBA  321F               	rrcf	CRC8@extract,f,c
  6543  002CBC  0620               	decf	CRC8@tempI,f,c
  6544  002CBE                     l5998:
  6545  002CBE  5020               	movf	CRC8@tempI,w,c
  6546  002CC0  A4D8               	btfss	status,2,c
  6547  002CC2  D7EF               	goto	l5990
  6548  002CC4                     l6000:
  6549  002CC4  061D               	decf	CRC8@len,f,c
  6550  002CC6  281D               	incf	CRC8@len,w,c
  6551  002CC8  A4D8               	btfss	status,2,c
  6552  002CCA  D7E0               	goto	l5984
  6553                           
  6554                           ;FastTransfer.c: 47: }
  6555                           ;FastTransfer.c: 48: }
  6556                           ;FastTransfer.c: 49: return crc;
  6557  002CCC  5021               	movf	CRC8@crc,w,c
  6558  002CCE  0012               	return	
  6559  002CD0                     __end_of_CRC8:
  6560                           	opt stack 0
  6561                           tosu	equ	0xFFF
  6562                           tosh	equ	0xFFE
  6563                           tosl	equ	0xFFD
  6564                           pclath	equ	0xFFA
  6565                           tblptru	equ	0xFF8
  6566                           tblptrh	equ	0xFF7
  6567                           tblptrl	equ	0xFF6
  6568                           tablat	equ	0xFF5
  6569                           prodh	equ	0xFF4
  6570                           prodl	equ	0xFF3
  6571                           intcon	equ	0xFF2
  6572                           postinc0	equ	0xFEE
  6573                           wreg	equ	0xFE8
  6574                           indf2	equ	0xFDF
  6575                           postinc2	equ	0xFDE
  6576                           postdec2	equ	0xFDD
  6577                           plusw2	equ	0xFDB
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function _handleIndicators *****************
  6583 ;; Defined at:
  6584 ;;		line 36 in file "Communications.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  receivedIndi    2   36[COMRAM] int 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  i               2    0[BANK0 ] int 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6598 ;;      Params:         2       0       0       0       0       0       0
  6599 ;;      Locals:         0       2       0       0       0       0       0
  6600 ;;      Temps:          3       0       0       0       0       0       0
  6601 ;;      Totals:         5       2       0       0       0       0       0
  6602 ;;Total ram usage:        7 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    6
  6605 ;; This function calls:
  6606 ;;		_SetLEDOut
  6607 ;; This function is called by:
  6608 ;;		_updateComms
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text26
  6613  0026C0                     __ptext26:
  6614                           	opt stack 0
  6615  0026C0                     _handleIndicators:
  6616                           	opt stack 23
  6617                           
  6618                           ;Communications.c: 37: static int oldIndicators = 0;
  6619                           ;Communications.c: 38: if (receivedIndicators != oldIndicators) {
  6620                           
  6621                           ;incstack = 0
  6622  0026C0  0100               	movlb	0	; () banked
  6623  0026C2  51DF               	movf	handleIndicators@oldIndicators& (0+255),w,b
  6624  0026C4  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  6625  0026C6  E105               	bnz	u7640
  6626  0026C8  0100               	movlb	0	; () banked
  6627  0026CA  51E0               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  6628  0026CC  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  6629  0026CE  B4D8               	btfsc	status,2,c
  6630  0026D0  0012               	return	
  6631  0026D2                     u7640:
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;Communications.c: 39: int i = 0;
  6635  0026D2  0E00               	movlw	0
  6636  0026D4  0100               	movlb	0	; () banked
  6637  0026D6  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  6638  0026D8  0E00               	movlw	0
  6639  0026DA  6FF2               	movwf	handleIndicators@i& (0+255),b
  6640                           
  6641                           ;Communications.c: 40: for (i = 0; i < 6; i++) {
  6642  0026DC  0E00               	movlw	0
  6643  0026DE  0100               	movlb	0	; () banked
  6644  0026E0  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  6645  0026E2  0E00               	movlw	0
  6646  0026E4  6FF2               	movwf	handleIndicators@i& (0+255),b
  6647                           
  6648                           ; BSR set to: 0
  6649  0026E6  0100               	movlb	0	; () banked
  6650  0026E8  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  6651  0026EA  D008               	goto	l6740
  6652  0026EC  0100               	movlb	0	; () banked
  6653  0026EE  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  6654  0026F0  E126               	bnz	l921
  6655  0026F2  0E06               	movlw	6
  6656  0026F4  0100               	movlb	0	; () banked
  6657  0026F6  5DF2               	subwf	handleIndicators@i& (0+255),w,b
  6658  0026F8  B0D8               	btfsc	status,0,c
  6659  0026FA  D021               	goto	l921
  6660  0026FC                     l6740:
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;Communications.c: 41: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  6664  0026FC  C0F2  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  6665  002700  C0F3  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  6666  002704  C0F2  F027         	movff	handleIndicators@i,??_handleIndicators
  6667  002708  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  6668  00270C  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  6669  002710  2A27               	incf	??_handleIndicators,f,c
  6670  002712  D003               	goto	u7664
  6671  002714                     u7665:
  6672  002714  3429               	rlcf	??_handleIndicators+2,w,c
  6673  002716  3229               	rrcf	??_handleIndicators+2,f,c
  6674  002718  3228               	rrcf	??_handleIndicators+1,f,c
  6675  00271A                     u7664:
  6676  00271A  2E27               	decfsz	??_handleIndicators,f,c
  6677  00271C  D7FB               	goto	u7665
  6678  00271E  0E01               	movlw	1
  6679  002720  1428               	andwf	??_handleIndicators+1,w,c
  6680  002722  6E21               	movwf	SetLEDOut@state,c
  6681  002724  6A22               	clrf	SetLEDOut@state+1,c
  6682  002726  EC3C  F007         	call	_SetLEDOut	;wreg free
  6683  00272A  0100               	movlb	0	; () banked
  6684  00272C  4BF2               	infsnz	handleIndicators@i& (0+255),f,b
  6685  00272E  2BF3               	incf	(handleIndicators@i+1)& (0+255),f,b
  6686                           
  6687                           ; BSR set to: 0
  6688  002730  0100               	movlb	0	; () banked
  6689  002732  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  6690  002734  D7E3               	goto	l6740
  6691  002736  0100               	movlb	0	; () banked
  6692  002738  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  6693  00273A  E101               	bnz	u7670
  6694  00273C  D7DA               	goto	L2
  6695  00273E                     u7670:
  6696  00273E                     l921:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;Communications.c: 42: }
  6700                           ;Communications.c: 43: oldIndicators = receivedIndicators;
  6701  00273E  C025  F0DF         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  6702  002742  C026  F0E0         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  6703  002746  0012               	return	
  6704  002748                     __end_of_handleIndicators:
  6705                           	opt stack 0
  6706                           tosu	equ	0xFFF
  6707                           tosh	equ	0xFFE
  6708                           tosl	equ	0xFFD
  6709                           pclath	equ	0xFFA
  6710                           tblptru	equ	0xFF8
  6711                           tblptrh	equ	0xFF7
  6712                           tblptrl	equ	0xFF6
  6713                           tablat	equ	0xFF5
  6714                           prodh	equ	0xFF4
  6715                           prodl	equ	0xFF3
  6716                           intcon	equ	0xFF2
  6717                           postinc0	equ	0xFEE
  6718                           wreg	equ	0xFE8
  6719                           indf2	equ	0xFDF
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           plusw2	equ	0xFDB
  6723                           fsr2h	equ	0xFDA
  6724                           fsr2l	equ	0xFD9
  6725                           status	equ	0xFD8
  6726                           
  6727 ;; *************** function _SetLEDOut *****************
  6728 ;; Defined at:
  6729 ;;		line 25 in file "IO.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  lednum          2   30[COMRAM] int 
  6732 ;;  state           2   32[COMRAM] int 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;		None
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1    wreg      void 
  6737 ;; Registers used:
  6738 ;;		wreg, status,2, status,0, cstack
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6744 ;;      Params:         4       0       0       0       0       0       0
  6745 ;;      Locals:         0       0       0       0       0       0       0
  6746 ;;      Temps:          2       0       0       0       0       0       0
  6747 ;;      Totals:         6       0       0       0       0       0       0
  6748 ;;Total ram usage:        6 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    5
  6751 ;; This function calls:
  6752 ;;		_Off_Led
  6753 ;;		_setLED
  6754 ;; This function is called by:
  6755 ;;		_handleIndicators
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text27
  6760  000E78                     __ptext27:
  6761                           	opt stack 0
  6762  000E78                     _SetLEDOut:
  6763                           	opt stack 23
  6764                           
  6765                           ;IO.c: 26: switch (lednum) {
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;incstack = 0
  6769  000E78  D138               	goto	l6262
  6770  000E7A                     l6128:
  6771                           
  6772                           ;IO.c: 28: if (state == 1) {
  6773  000E7A  0421               	decf	SetLEDOut@state,w,c
  6774  000E7C  1022               	iorwf	SetLEDOut@state+1,w,c
  6775  000E7E  A4D8               	btfss	status,2,c
  6776  000E80  D00D               	goto	l6136
  6777                           
  6778                           ;IO.c: 29: Off_Led(0);
  6779  000E82  0E00               	movlw	0
  6780  000E84  6E1C               	movwf	Off_Led@led+1,c
  6781  000E86  0E00               	movlw	0
  6782  000E88  6E1B               	movwf	Off_Led@led,c
  6783  000E8A  EC84  F00F         	call	_Off_Led	;wreg free
  6784                           
  6785                           ;IO.c: 30: do { LATC1 = 1; } while(0);
  6786  000E8E  828B               	bsf	3979,1,c	;volatile
  6787                           
  6788                           ;IO.c: 31: LED_array[0] = 1;
  6789  000E90  0E00               	movlw	0
  6790  000E92  0100               	movlb	0	; () banked
  6791  000E94  6F89               	movwf	(_LED_array+1)& (0+255),b
  6792  000E96  0E01               	movlw	1
  6793  000E98  6F88               	movwf	_LED_array& (0+255),b
  6794                           
  6795                           ;IO.c: 32: } else if (state == 0) {
  6796  000E9A  0012               	return	
  6797  000E9C                     l6136:
  6798  000E9C  5021               	movf	SetLEDOut@state,w,c
  6799  000E9E  1022               	iorwf	SetLEDOut@state+1,w,c
  6800  000EA0  A4D8               	btfss	status,2,c
  6801  000EA2  D00D               	goto	l6144
  6802                           
  6803                           ;IO.c: 33: Off_Led(0);
  6804  000EA4  0E00               	movlw	0
  6805  000EA6  6E1C               	movwf	Off_Led@led+1,c
  6806  000EA8  0E00               	movlw	0
  6807  000EAA  6E1B               	movwf	Off_Led@led,c
  6808  000EAC  EC84  F00F         	call	_Off_Led	;wreg free
  6809                           
  6810                           ;IO.c: 34: do { LATC1 = 0; } while(0);
  6811  000EB0  928B               	bcf	3979,1,c	;volatile
  6812                           
  6813                           ;IO.c: 35: LED_array[0] = 0;
  6814  000EB2  0E00               	movlw	0
  6815  000EB4  0100               	movlb	0	; () banked
  6816  000EB6  6F89               	movwf	(_LED_array+1)& (0+255),b
  6817  000EB8  0E00               	movlw	0
  6818  000EBA  6F88               	movwf	_LED_array& (0+255),b
  6819                           
  6820                           ;IO.c: 36: }
  6821  000EBC  0012               	return	
  6822  000EBE                     l6144:
  6823                           
  6824                           ;IO.c: 37: else if (state == 2) {
  6825  000EBE  0E02               	movlw	2
  6826  000EC0  1821               	xorwf	SetLEDOut@state,w,c
  6827  000EC2  1022               	iorwf	SetLEDOut@state+1,w,c
  6828  000EC4  A4D8               	btfss	status,2,c
  6829  000EC6  0012               	return	
  6830                           
  6831                           ;IO.c: 39: do { LATC1 = 0; } while(0);
  6832  000EC8  928B               	bcf	3979,1,c	;volatile
  6833                           
  6834                           ;IO.c: 40: setLED(0);
  6835  000ECA  0E00               	movlw	0
  6836  000ECC  6E1C               	movwf	setLED@led+1,c
  6837  000ECE  0E00               	movlw	0
  6838  000ED0  6E1B               	movwf	setLED@led,c
  6839  000ED2  ECE9  F00F         	call	_setLED	;wreg free
  6840                           
  6841                           ;IO.c: 41: LED_array[0] = 2;
  6842  000ED6  0E00               	movlw	0
  6843  000ED8  0100               	movlb	0	; () banked
  6844  000EDA  6F89               	movwf	(_LED_array+1)& (0+255),b
  6845  000EDC  0E02               	movlw	2
  6846  000EDE  6F88               	movwf	_LED_array& (0+255),b
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;IO.c: 43: }
  6850                           ;IO.c: 44: break;
  6851                           
  6852                           ; BSR set to: 0
  6853                           
  6854                           ; BSR set to: 0
  6855  000EE0  0012               	return	
  6856  000EE2                     l6150:
  6857                           
  6858                           ;IO.c: 47: if (state == 1) {
  6859  000EE2  0421               	decf	SetLEDOut@state,w,c
  6860  000EE4  1022               	iorwf	SetLEDOut@state+1,w,c
  6861  000EE6  A4D8               	btfss	status,2,c
  6862  000EE8  D00D               	goto	l6158
  6863                           
  6864                           ;IO.c: 48: Off_Led(1);
  6865  000EEA  0E00               	movlw	0
  6866  000EEC  6E1C               	movwf	Off_Led@led+1,c
  6867  000EEE  0E01               	movlw	1
  6868  000EF0  6E1B               	movwf	Off_Led@led,c
  6869  000EF2  EC84  F00F         	call	_Off_Led	;wreg free
  6870                           
  6871                           ;IO.c: 49: do { LATA6 = 1; } while(0);
  6872  000EF6  8C89               	bsf	3977,6,c	;volatile
  6873                           
  6874                           ;IO.c: 50: LED_array[1] = 1;
  6875  000EF8  0E00               	movlw	0
  6876  000EFA  0100               	movlb	0	; () banked
  6877  000EFC  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6878  000EFE  0E01               	movlw	1
  6879  000F00  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6880                           
  6881                           ;IO.c: 51: } else if (state == 0) {
  6882  000F02  0012               	return	
  6883  000F04                     l6158:
  6884  000F04  5021               	movf	SetLEDOut@state,w,c
  6885  000F06  1022               	iorwf	SetLEDOut@state+1,w,c
  6886  000F08  A4D8               	btfss	status,2,c
  6887  000F0A  D00D               	goto	l6166
  6888                           
  6889                           ;IO.c: 52: Off_Led(1);
  6890  000F0C  0E00               	movlw	0
  6891  000F0E  6E1C               	movwf	Off_Led@led+1,c
  6892  000F10  0E01               	movlw	1
  6893  000F12  6E1B               	movwf	Off_Led@led,c
  6894  000F14  EC84  F00F         	call	_Off_Led	;wreg free
  6895                           
  6896                           ;IO.c: 53: do { LATA6 = 0; } while(0);
  6897  000F18  9C89               	bcf	3977,6,c	;volatile
  6898                           
  6899                           ;IO.c: 54: LED_array[1] = 0;
  6900  000F1A  0E00               	movlw	0
  6901  000F1C  0100               	movlb	0	; () banked
  6902  000F1E  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6903  000F20  0E00               	movlw	0
  6904  000F22  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6905                           
  6906                           ;IO.c: 55: } else if (state == 2) {
  6907  000F24  0012               	return	
  6908  000F26                     l6166:
  6909  000F26  0E02               	movlw	2
  6910  000F28  1821               	xorwf	SetLEDOut@state,w,c
  6911  000F2A  1022               	iorwf	SetLEDOut@state+1,w,c
  6912  000F2C  A4D8               	btfss	status,2,c
  6913  000F2E  0012               	return	
  6914                           
  6915                           ;IO.c: 57: do { LATA6 = 0; } while(0);
  6916  000F30  9C89               	bcf	3977,6,c	;volatile
  6917                           
  6918                           ;IO.c: 58: setLED(1);
  6919  000F32  0E00               	movlw	0
  6920  000F34  6E1C               	movwf	setLED@led+1,c
  6921  000F36  0E01               	movlw	1
  6922  000F38  6E1B               	movwf	setLED@led,c
  6923  000F3A  ECE9  F00F         	call	_setLED	;wreg free
  6924                           
  6925                           ;IO.c: 59: LED_array[1] = 2;
  6926  000F3E  0E00               	movlw	0
  6927  000F40  0100               	movlb	0	; () banked
  6928  000F42  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6929  000F44  0E02               	movlw	2
  6930  000F46  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;IO.c: 61: }
  6934                           ;IO.c: 62: break;
  6935                           
  6936                           ; BSR set to: 0
  6937                           
  6938                           ; BSR set to: 0
  6939  000F48  0012               	return	
  6940  000F4A                     l6172:
  6941                           
  6942                           ;IO.c: 64: if (state == 1) {
  6943  000F4A  0421               	decf	SetLEDOut@state,w,c
  6944  000F4C  1022               	iorwf	SetLEDOut@state+1,w,c
  6945  000F4E  A4D8               	btfss	status,2,c
  6946  000F50  D00D               	goto	l6180
  6947                           
  6948                           ;IO.c: 65: Off_Led(2);
  6949  000F52  0E00               	movlw	0
  6950  000F54  6E1C               	movwf	Off_Led@led+1,c
  6951  000F56  0E02               	movlw	2
  6952  000F58  6E1B               	movwf	Off_Led@led,c
  6953  000F5A  EC84  F00F         	call	_Off_Led	;wreg free
  6954                           
  6955                           ;IO.c: 66: do { LATA7 = 1; } while(0);
  6956  000F5E  8E89               	bsf	3977,7,c	;volatile
  6957                           
  6958                           ;IO.c: 67: LED_array[2] = 1;
  6959  000F60  0E00               	movlw	0
  6960  000F62  0100               	movlb	0	; () banked
  6961  000F64  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6962  000F66  0E01               	movlw	1
  6963  000F68  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6964                           
  6965                           ;IO.c: 68: } else if (state == 0) {
  6966  000F6A  0012               	return	
  6967  000F6C                     l6180:
  6968  000F6C  5021               	movf	SetLEDOut@state,w,c
  6969  000F6E  1022               	iorwf	SetLEDOut@state+1,w,c
  6970  000F70  A4D8               	btfss	status,2,c
  6971  000F72  D00D               	goto	l6188
  6972                           
  6973                           ;IO.c: 69: Off_Led(2);
  6974  000F74  0E00               	movlw	0
  6975  000F76  6E1C               	movwf	Off_Led@led+1,c
  6976  000F78  0E02               	movlw	2
  6977  000F7A  6E1B               	movwf	Off_Led@led,c
  6978  000F7C  EC84  F00F         	call	_Off_Led	;wreg free
  6979                           
  6980                           ;IO.c: 70: do { LATA7 = 0; } while(0);
  6981  000F80  9E89               	bcf	3977,7,c	;volatile
  6982                           
  6983                           ;IO.c: 71: LED_array[2] = 0;
  6984  000F82  0E00               	movlw	0
  6985  000F84  0100               	movlb	0	; () banked
  6986  000F86  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6987  000F88  0E00               	movlw	0
  6988  000F8A  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6989                           
  6990                           ;IO.c: 72: } else if (state == 2) {
  6991  000F8C  0012               	return	
  6992  000F8E                     l6188:
  6993  000F8E  0E02               	movlw	2
  6994  000F90  1821               	xorwf	SetLEDOut@state,w,c
  6995  000F92  1022               	iorwf	SetLEDOut@state+1,w,c
  6996  000F94  A4D8               	btfss	status,2,c
  6997  000F96  0012               	return	
  6998                           
  6999                           ;IO.c: 74: do { LATA7 = 0; } while(0);
  7000  000F98  9E89               	bcf	3977,7,c	;volatile
  7001                           
  7002                           ;IO.c: 75: setLED(2);
  7003  000F9A  0E00               	movlw	0
  7004  000F9C  6E1C               	movwf	setLED@led+1,c
  7005  000F9E  0E02               	movlw	2
  7006  000FA0  6E1B               	movwf	setLED@led,c
  7007  000FA2  ECE9  F00F         	call	_setLED	;wreg free
  7008                           
  7009                           ;IO.c: 77: LED_array[2] = 2;
  7010  000FA6  0E00               	movlw	0
  7011  000FA8  0100               	movlb	0	; () banked
  7012  000FAA  6F8D               	movwf	(_LED_array+5)& (0+255),b
  7013  000FAC  0E02               	movlw	2
  7014  000FAE  6F8C               	movwf	(_LED_array+4)& (0+255),b
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;IO.c: 79: }
  7018                           ;IO.c: 82: break;
  7019                           
  7020                           ; BSR set to: 0
  7021                           
  7022                           ; BSR set to: 0
  7023  000FB0  0012               	return	
  7024  000FB2                     l6194:
  7025                           
  7026                           ;IO.c: 85: if (state == 1) {
  7027  000FB2  0421               	decf	SetLEDOut@state,w,c
  7028  000FB4  1022               	iorwf	SetLEDOut@state+1,w,c
  7029  000FB6  A4D8               	btfss	status,2,c
  7030  000FB8  D00D               	goto	l6202
  7031                           
  7032                           ;IO.c: 86: Off_Led(3);
  7033  000FBA  0E00               	movlw	0
  7034  000FBC  6E1C               	movwf	Off_Led@led+1,c
  7035  000FBE  0E03               	movlw	3
  7036  000FC0  6E1B               	movwf	Off_Led@led,c
  7037  000FC2  EC84  F00F         	call	_Off_Led	;wreg free
  7038                           
  7039                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  7040  000FC6  848D               	bsf	3981,2,c	;volatile
  7041                           
  7042                           ;IO.c: 88: LED_array[3] = 1;
  7043  000FC8  0E00               	movlw	0
  7044  000FCA  0100               	movlb	0	; () banked
  7045  000FCC  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7046  000FCE  0E01               	movlw	1
  7047  000FD0  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7048                           
  7049                           ;IO.c: 89: } else if (state == 0) {
  7050  000FD2  0012               	return	
  7051  000FD4                     l6202:
  7052  000FD4  5021               	movf	SetLEDOut@state,w,c
  7053  000FD6  1022               	iorwf	SetLEDOut@state+1,w,c
  7054  000FD8  A4D8               	btfss	status,2,c
  7055  000FDA  D00D               	goto	l6210
  7056                           
  7057                           ;IO.c: 90: Off_Led(3);
  7058  000FDC  0E00               	movlw	0
  7059  000FDE  6E1C               	movwf	Off_Led@led+1,c
  7060  000FE0  0E03               	movlw	3
  7061  000FE2  6E1B               	movwf	Off_Led@led,c
  7062  000FE4  EC84  F00F         	call	_Off_Led	;wreg free
  7063                           
  7064                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  7065  000FE8  948D               	bcf	3981,2,c	;volatile
  7066                           
  7067                           ;IO.c: 92: LED_array[3] = 0;
  7068  000FEA  0E00               	movlw	0
  7069  000FEC  0100               	movlb	0	; () banked
  7070  000FEE  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7071  000FF0  0E00               	movlw	0
  7072  000FF2  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7073                           
  7074                           ;IO.c: 93: }
  7075  000FF4  0012               	return	
  7076  000FF6                     l6210:
  7077                           
  7078                           ;IO.c: 94: else if (state == 2) {
  7079  000FF6  0E02               	movlw	2
  7080  000FF8  1821               	xorwf	SetLEDOut@state,w,c
  7081  000FFA  1022               	iorwf	SetLEDOut@state+1,w,c
  7082  000FFC  A4D8               	btfss	status,2,c
  7083  000FFE  0012               	return	
  7084                           
  7085                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  7086  001000  948D               	bcf	3981,2,c	;volatile
  7087                           
  7088                           ;IO.c: 96: setLED(3);
  7089  001002  0E00               	movlw	0
  7090  001004  6E1C               	movwf	setLED@led+1,c
  7091  001006  0E03               	movlw	3
  7092  001008  6E1B               	movwf	setLED@led,c
  7093  00100A  ECE9  F00F         	call	_setLED	;wreg free
  7094                           
  7095                           ;IO.c: 97: LED_array[3] = 2;
  7096  00100E  0E00               	movlw	0
  7097  001010  0100               	movlb	0	; () banked
  7098  001012  6F8F               	movwf	(_LED_array+7)& (0+255),b
  7099  001014  0E02               	movlw	2
  7100  001016  6F8E               	movwf	(_LED_array+6)& (0+255),b
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;IO.c: 99: }
  7104                           ;IO.c: 101: break;
  7105                           
  7106                           ; BSR set to: 0
  7107                           
  7108                           ; BSR set to: 0
  7109  001018  0012               	return	
  7110  00101A                     l6216:
  7111                           
  7112                           ;IO.c: 103: if (state == 1) {
  7113  00101A  0421               	decf	SetLEDOut@state,w,c
  7114  00101C  1022               	iorwf	SetLEDOut@state+1,w,c
  7115  00101E  A4D8               	btfss	status,2,c
  7116  001020  D00D               	goto	l6224
  7117                           
  7118                           ;IO.c: 104: Off_Led(4);
  7119  001022  0E00               	movlw	0
  7120  001024  6E1C               	movwf	Off_Led@led+1,c
  7121  001026  0E04               	movlw	4
  7122  001028  6E1B               	movwf	Off_Led@led,c
  7123  00102A  EC84  F00F         	call	_Off_Led	;wreg free
  7124                           
  7125                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  7126  00102E  828D               	bsf	3981,1,c	;volatile
  7127                           
  7128                           ;IO.c: 106: LED_array[4] = 1;
  7129  001030  0E00               	movlw	0
  7130  001032  0100               	movlb	0	; () banked
  7131  001034  6F91               	movwf	(_LED_array+9)& (0+255),b
  7132  001036  0E01               	movlw	1
  7133  001038  6F90               	movwf	(_LED_array+8)& (0+255),b
  7134                           
  7135                           ;IO.c: 107: } else if (state == 0) {
  7136  00103A  0012               	return	
  7137  00103C                     l6224:
  7138  00103C  5021               	movf	SetLEDOut@state,w,c
  7139  00103E  1022               	iorwf	SetLEDOut@state+1,w,c
  7140  001040  A4D8               	btfss	status,2,c
  7141  001042  D00D               	goto	l6232
  7142                           
  7143                           ;IO.c: 108: Off_Led(4);
  7144  001044  0E00               	movlw	0
  7145  001046  6E1C               	movwf	Off_Led@led+1,c
  7146  001048  0E04               	movlw	4
  7147  00104A  6E1B               	movwf	Off_Led@led,c
  7148  00104C  EC84  F00F         	call	_Off_Led	;wreg free
  7149                           
  7150                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  7151  001050  928D               	bcf	3981,1,c	;volatile
  7152                           
  7153                           ;IO.c: 110: LED_array[4] = 0;
  7154  001052  0E00               	movlw	0
  7155  001054  0100               	movlb	0	; () banked
  7156  001056  6F91               	movwf	(_LED_array+9)& (0+255),b
  7157  001058  0E00               	movlw	0
  7158  00105A  6F90               	movwf	(_LED_array+8)& (0+255),b
  7159                           
  7160                           ;IO.c: 111: }
  7161  00105C  0012               	return	
  7162  00105E                     l6232:
  7163                           
  7164                           ;IO.c: 112: else if (state == 2) {
  7165  00105E  0E02               	movlw	2
  7166  001060  1821               	xorwf	SetLEDOut@state,w,c
  7167  001062  1022               	iorwf	SetLEDOut@state+1,w,c
  7168  001064  A4D8               	btfss	status,2,c
  7169  001066  0012               	return	
  7170                           
  7171                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  7172  001068  928D               	bcf	3981,1,c	;volatile
  7173                           
  7174                           ;IO.c: 114: setLED(4);
  7175  00106A  0E00               	movlw	0
  7176  00106C  6E1C               	movwf	setLED@led+1,c
  7177  00106E  0E04               	movlw	4
  7178  001070  6E1B               	movwf	setLED@led,c
  7179  001072  ECE9  F00F         	call	_setLED	;wreg free
  7180                           
  7181                           ;IO.c: 115: LED_array[4] = 2;
  7182  001076  0E00               	movlw	0
  7183  001078  0100               	movlb	0	; () banked
  7184  00107A  6F91               	movwf	(_LED_array+9)& (0+255),b
  7185  00107C  0E02               	movlw	2
  7186  00107E  6F90               	movwf	(_LED_array+8)& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;IO.c: 116: }
  7190                           ;IO.c: 118: break;
  7191                           
  7192                           ; BSR set to: 0
  7193                           
  7194                           ; BSR set to: 0
  7195  001080  0012               	return	
  7196  001082                     l6238:
  7197                           
  7198                           ;IO.c: 120: if (state == 1) {
  7199  001082  0421               	decf	SetLEDOut@state,w,c
  7200  001084  1022               	iorwf	SetLEDOut@state+1,w,c
  7201  001086  A4D8               	btfss	status,2,c
  7202  001088  D00D               	goto	l6246
  7203                           
  7204                           ;IO.c: 121: Off_Led(5);
  7205  00108A  0E00               	movlw	0
  7206  00108C  6E1C               	movwf	Off_Led@led+1,c
  7207  00108E  0E05               	movlw	5
  7208  001090  6E1B               	movwf	Off_Led@led,c
  7209  001092  EC84  F00F         	call	_Off_Led	;wreg free
  7210                           
  7211                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  7212  001096  808D               	bsf	3981,0,c	;volatile
  7213                           
  7214                           ;IO.c: 123: LED_array[5] = 1;
  7215  001098  0E00               	movlw	0
  7216  00109A  0100               	movlb	0	; () banked
  7217  00109C  6F93               	movwf	(_LED_array+11)& (0+255),b
  7218  00109E  0E01               	movlw	1
  7219  0010A0  6F92               	movwf	(_LED_array+10)& (0+255),b
  7220                           
  7221                           ;IO.c: 124: } else if (state == 0) {
  7222  0010A2  0012               	return	
  7223  0010A4                     l6246:
  7224  0010A4  5021               	movf	SetLEDOut@state,w,c
  7225  0010A6  1022               	iorwf	SetLEDOut@state+1,w,c
  7226  0010A8  A4D8               	btfss	status,2,c
  7227  0010AA  D00D               	goto	l6254
  7228                           
  7229                           ;IO.c: 125: Off_Led(5);
  7230  0010AC  0E00               	movlw	0
  7231  0010AE  6E1C               	movwf	Off_Led@led+1,c
  7232  0010B0  0E05               	movlw	5
  7233  0010B2  6E1B               	movwf	Off_Led@led,c
  7234  0010B4  EC84  F00F         	call	_Off_Led	;wreg free
  7235                           
  7236                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  7237  0010B8  908D               	bcf	3981,0,c	;volatile
  7238                           
  7239                           ;IO.c: 127: LED_array[5] = 0;
  7240  0010BA  0E00               	movlw	0
  7241  0010BC  0100               	movlb	0	; () banked
  7242  0010BE  6F93               	movwf	(_LED_array+11)& (0+255),b
  7243  0010C0  0E00               	movlw	0
  7244  0010C2  6F92               	movwf	(_LED_array+10)& (0+255),b
  7245                           
  7246                           ;IO.c: 128: }
  7247  0010C4  0012               	return	
  7248  0010C6                     l6254:
  7249                           
  7250                           ;IO.c: 129: else if (state == 2) {
  7251  0010C6  0E02               	movlw	2
  7252  0010C8  1821               	xorwf	SetLEDOut@state,w,c
  7253  0010CA  1022               	iorwf	SetLEDOut@state+1,w,c
  7254  0010CC  A4D8               	btfss	status,2,c
  7255  0010CE  0012               	return	
  7256                           
  7257                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  7258  0010D0  908D               	bcf	3981,0,c	;volatile
  7259                           
  7260                           ;IO.c: 131: setLED(5);
  7261  0010D2  0E00               	movlw	0
  7262  0010D4  6E1C               	movwf	setLED@led+1,c
  7263  0010D6  0E05               	movlw	5
  7264  0010D8  6E1B               	movwf	setLED@led,c
  7265  0010DA  ECE9  F00F         	call	_setLED	;wreg free
  7266                           
  7267                           ;IO.c: 132: LED_array[5] = 2;
  7268  0010DE  0E00               	movlw	0
  7269  0010E0  0100               	movlb	0	; () banked
  7270  0010E2  6F93               	movwf	(_LED_array+11)& (0+255),b
  7271  0010E4  0E02               	movlw	2
  7272  0010E6  6F92               	movwf	(_LED_array+10)& (0+255),b
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;IO.c: 138: }
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;IO.c: 134: }
  7279                           ;IO.c: 137: break;
  7280                           
  7281                           ; BSR set to: 0
  7282                           
  7283                           ; BSR set to: 0
  7284  0010E8  0012               	return	
  7285  0010EA                     l6262:
  7286  0010EA  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  7287  0010EE  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  7288                           
  7289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7290                           ; Switch size 1, requested type "space"
  7291                           ; Number of cases is 1, Range of values is 0 to 0
  7292                           ; switch strategies available:
  7293                           ; Name         Instructions Cycles
  7294                           ; simple_byte            4     3 (average)
  7295                           ;	Chosen strategy is simple_byte
  7296  0010F2  5024               	movf	??_SetLEDOut+1,w,c
  7297  0010F4  0A00               	xorlw	0	; case 0
  7298  0010F6  A4D8               	btfss	status,2,c
  7299  0010F8  0012               	return	
  7300                           
  7301                           ; Switch size 1, requested type "space"
  7302                           ; Number of cases is 6, Range of values is 0 to 5
  7303                           ; switch strategies available:
  7304                           ; Name         Instructions Cycles
  7305                           ; simple_byte           19    10 (average)
  7306                           ;	Chosen strategy is simple_byte
  7307  0010FA  5023               	movf	??_SetLEDOut,w,c
  7308  0010FC  0A00               	xorlw	0	; case 0
  7309  0010FE  B4D8               	btfsc	status,2,c
  7310  001100  D6BC               	goto	l6128
  7311  001102  0A01               	xorlw	1	; case 1
  7312  001104  B4D8               	btfsc	status,2,c
  7313  001106  D6ED               	goto	l6150
  7314  001108  0A03               	xorlw	3	; case 2
  7315  00110A  B4D8               	btfsc	status,2,c
  7316  00110C  D71E               	goto	l6172
  7317  00110E  0A01               	xorlw	1	; case 3
  7318  001110  B4D8               	btfsc	status,2,c
  7319  001112  D74F               	goto	l6194
  7320  001114  0A07               	xorlw	7	; case 4
  7321  001116  B4D8               	btfsc	status,2,c
  7322  001118  D780               	goto	l6216
  7323  00111A  0A01               	xorlw	1	; case 5
  7324  00111C  A4D8               	btfss	status,2,c
  7325  00111E  0012               	return	
  7326  001120  D7B0               	goto	l6238
  7327  001122                     __end_of_SetLEDOut:
  7328                           	opt stack 0
  7329                           tosu	equ	0xFFF
  7330                           tosh	equ	0xFFE
  7331                           tosl	equ	0xFFD
  7332                           pclath	equ	0xFFA
  7333                           tblptru	equ	0xFF8
  7334                           tblptrh	equ	0xFF7
  7335                           tblptrl	equ	0xFF6
  7336                           tablat	equ	0xFF5
  7337                           prodh	equ	0xFF4
  7338                           prodl	equ	0xFF3
  7339                           intcon	equ	0xFF2
  7340                           postinc0	equ	0xFEE
  7341                           wreg	equ	0xFE8
  7342                           indf2	equ	0xFDF
  7343                           postinc2	equ	0xFDE
  7344                           postdec2	equ	0xFDD
  7345                           plusw2	equ	0xFDB
  7346                           fsr2h	equ	0xFDA
  7347                           fsr2l	equ	0xFD9
  7348                           status	equ	0xFD8
  7349                           
  7350 ;; *************** function _setLED *****************
  7351 ;; Defined at:
  7352 ;;		line 202 in file "tmr2.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  led             2   26[COMRAM] int 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7366 ;;      Params:         2       0       0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0
  7368 ;;      Temps:          2       0       0       0       0       0       0
  7369 ;;      Totals:         4       0       0       0       0       0       0
  7370 ;;Total ram usage:        4 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    4
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_SetLEDOut
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text28
  7381  001FD2                     __ptext28:
  7382                           	opt stack 0
  7383  001FD2                     _setLED:
  7384                           	opt stack 23
  7385                           
  7386                           ;tmr2.c: 203: switch (led){
  7387                           
  7388                           ;incstack = 0
  7389  001FD2  D042               	goto	l5942
  7390  001FD4                     l5928:
  7391                           
  7392                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  7393  001FD4  0E00               	movlw	0
  7394  001FD6  0100               	movlb	0	; () banked
  7395  001FD8  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7396  001FDA  0E01               	movlw	1
  7397  001FDC  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7398                           
  7399                           ;tmr2.c: 206: LEDState[0]=0;
  7400  001FDE  0E00               	movlw	0
  7401  001FE0  0100               	movlb	0	; () banked
  7402  001FE2  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7403  001FE4  0E00               	movlw	0
  7404  001FE6  6FA4               	movwf	_LEDState& (0+255),b
  7405                           
  7406                           ;tmr2.c: 207: break;
  7407  001FE8  0012               	return	
  7408  001FEA                     l5930:
  7409                           
  7410                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  7411  001FEA  0E00               	movlw	0
  7412  001FEC  0100               	movlb	0	; () banked
  7413  001FEE  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7414  001FF0  0E01               	movlw	1
  7415  001FF2  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7416                           
  7417                           ;tmr2.c: 210: LEDState[1]=0;
  7418  001FF4  0E00               	movlw	0
  7419  001FF6  0100               	movlb	0	; () banked
  7420  001FF8  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7421  001FFA  0E00               	movlw	0
  7422  001FFC  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7423                           
  7424                           ;tmr2.c: 211: break;
  7425  001FFE  0012               	return	
  7426  002000                     l5932:
  7427                           
  7428                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  7429  002000  0E00               	movlw	0
  7430  002002  0100               	movlb	0	; () banked
  7431  002004  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7432  002006  0E01               	movlw	1
  7433  002008  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7434                           
  7435                           ;tmr2.c: 214: LEDState[2]=0;
  7436  00200A  0E00               	movlw	0
  7437  00200C  0100               	movlb	0	; () banked
  7438  00200E  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7439  002010  0E00               	movlw	0
  7440  002012  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7441                           
  7442                           ;tmr2.c: 215: break;
  7443  002014  0012               	return	
  7444  002016                     l5934:
  7445                           
  7446                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  7447  002016  0E00               	movlw	0
  7448  002018  0100               	movlb	0	; () banked
  7449  00201A  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7450  00201C  0E01               	movlw	1
  7451  00201E  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7452                           
  7453                           ;tmr2.c: 218: LEDState[3]=0;
  7454  002020  0E00               	movlw	0
  7455  002022  0100               	movlb	0	; () banked
  7456  002024  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7457  002026  0E00               	movlw	0
  7458  002028  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7459                           
  7460                           ;tmr2.c: 219: break;
  7461  00202A  0012               	return	
  7462  00202C                     l5936:
  7463                           
  7464                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  7465  00202C  0E00               	movlw	0
  7466  00202E  0100               	movlb	0	; () banked
  7467  002030  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7468  002032  0E01               	movlw	1
  7469  002034  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7470                           
  7471                           ;tmr2.c: 222: LEDState[4]=0;
  7472  002036  0E00               	movlw	0
  7473  002038  0100               	movlb	0	; () banked
  7474  00203A  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7475  00203C  0E00               	movlw	0
  7476  00203E  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7477                           
  7478                           ;tmr2.c: 223: break;
  7479  002040  0012               	return	
  7480  002042                     l5938:
  7481                           
  7482                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  7483  002042  0E00               	movlw	0
  7484  002044  0100               	movlb	0	; () banked
  7485  002046  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7486  002048  0E01               	movlw	1
  7487  00204A  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7488                           
  7489                           ;tmr2.c: 226: LEDState[5]=0;
  7490  00204C  0E00               	movlw	0
  7491  00204E  0100               	movlb	0	; () banked
  7492  002050  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7493  002052  0E00               	movlw	0
  7494  002054  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;tmr2.c: 228: }
  7498                           
  7499                           ;tmr2.c: 227: break;
  7500  002056  0012               	return	
  7501  002058                     l5942:
  7502  002058  C01B  F01D         	movff	setLED@led,??_setLED
  7503  00205C  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  7504                           
  7505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7506                           ; Switch size 1, requested type "space"
  7507                           ; Number of cases is 1, Range of values is 0 to 0
  7508                           ; switch strategies available:
  7509                           ; Name         Instructions Cycles
  7510                           ; simple_byte            4     3 (average)
  7511                           ;	Chosen strategy is simple_byte
  7512  002060  501E               	movf	??_setLED+1,w,c
  7513  002062  0A00               	xorlw	0	; case 0
  7514  002064  A4D8               	btfss	status,2,c
  7515  002066  0012               	return	
  7516                           
  7517                           ; Switch size 1, requested type "space"
  7518                           ; Number of cases is 6, Range of values is 0 to 5
  7519                           ; switch strategies available:
  7520                           ; Name         Instructions Cycles
  7521                           ; simple_byte           19    10 (average)
  7522                           ;	Chosen strategy is simple_byte
  7523  002068  501D               	movf	??_setLED,w,c
  7524  00206A  0A00               	xorlw	0	; case 0
  7525  00206C  B4D8               	btfsc	status,2,c
  7526  00206E  D7B2               	goto	l5928
  7527  002070  0A01               	xorlw	1	; case 1
  7528  002072  B4D8               	btfsc	status,2,c
  7529  002074  D7BA               	goto	l5930
  7530  002076  0A03               	xorlw	3	; case 2
  7531  002078  B4D8               	btfsc	status,2,c
  7532  00207A  D7C2               	goto	l5932
  7533  00207C  0A01               	xorlw	1	; case 3
  7534  00207E  B4D8               	btfsc	status,2,c
  7535  002080  D7CA               	goto	l5934
  7536  002082  0A07               	xorlw	7	; case 4
  7537  002084  B4D8               	btfsc	status,2,c
  7538  002086  D7D2               	goto	l5936
  7539  002088  0A01               	xorlw	1	; case 5
  7540  00208A  A4D8               	btfss	status,2,c
  7541  00208C  0012               	return	
  7542  00208E  D7D9               	goto	l5938
  7543  002090                     __end_of_setLED:
  7544                           	opt stack 0
  7545                           tosu	equ	0xFFF
  7546                           tosh	equ	0xFFE
  7547                           tosl	equ	0xFFD
  7548                           pclath	equ	0xFFA
  7549                           tblptru	equ	0xFF8
  7550                           tblptrh	equ	0xFF7
  7551                           tblptrl	equ	0xFF6
  7552                           tablat	equ	0xFF5
  7553                           prodh	equ	0xFF4
  7554                           prodl	equ	0xFF3
  7555                           intcon	equ	0xFF2
  7556                           postinc0	equ	0xFEE
  7557                           wreg	equ	0xFE8
  7558                           indf2	equ	0xFDF
  7559                           postinc2	equ	0xFDE
  7560                           postdec2	equ	0xFDD
  7561                           plusw2	equ	0xFDB
  7562                           fsr2h	equ	0xFDA
  7563                           fsr2l	equ	0xFD9
  7564                           status	equ	0xFD8
  7565                           
  7566 ;; *************** function _Off_Led *****************
  7567 ;; Defined at:
  7568 ;;		line 230 in file "tmr2.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  led             2   26[COMRAM] int 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7582 ;;      Params:         2       0       0       0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0
  7584 ;;      Temps:          2       0       0       0       0       0       0
  7585 ;;      Totals:         4       0       0       0       0       0       0
  7586 ;;Total ram usage:        4 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    4
  7589 ;; This function calls:
  7590 ;;		Nothing
  7591 ;; This function is called by:
  7592 ;;		_SetLEDOut
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596                           	psect	text29
  7597  001F08                     __ptext29:
  7598                           	opt stack 0
  7599  001F08                     _Off_Led:
  7600                           	opt stack 23
  7601                           
  7602                           ;tmr2.c: 231: switch (led){
  7603                           
  7604                           ;incstack = 0
  7605  001F08  D048               	goto	l5976
  7606  001F0A                     l5950:
  7607                           
  7608                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  7609  001F0A  0E00               	movlw	0
  7610  001F0C  0100               	movlb	0	; () banked
  7611  001F0E  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  7612  001F10  0E00               	movlw	0
  7613  001F12  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  7614                           
  7615                           ;tmr2.c: 234: LEDState[0]=0;
  7616  001F14  0E00               	movlw	0
  7617  001F16  0100               	movlb	0	; () banked
  7618  001F18  6FA5               	movwf	(_LEDState+1)& (0+255),b
  7619  001F1A  0E00               	movlw	0
  7620  001F1C  6FA4               	movwf	_LEDState& (0+255),b
  7621                           
  7622                           ; BSR set to: 0
  7623                           
  7624                           ; BSR set to: 0
  7625                           
  7626                           ;tmr2.c: 235: do { LATC1 = 0; } while(0);
  7627  001F1E  928B               	bcf	3979,1,c	;volatile
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;tmr2.c: 236: break;
  7631  001F20  0012               	return	
  7632  001F22                     l5954:
  7633                           
  7634                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  7635  001F22  0E00               	movlw	0
  7636  001F24  0100               	movlb	0	; () banked
  7637  001F26  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  7638  001F28  0E00               	movlw	0
  7639  001F2A  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  7640                           
  7641                           ;tmr2.c: 239: LEDState[1]=0;
  7642  001F2C  0E00               	movlw	0
  7643  001F2E  0100               	movlb	0	; () banked
  7644  001F30  6FA7               	movwf	(_LEDState+3)& (0+255),b
  7645  001F32  0E00               	movlw	0
  7646  001F34  6FA6               	movwf	(_LEDState+2)& (0+255),b
  7647                           
  7648                           ; BSR set to: 0
  7649                           
  7650                           ; BSR set to: 0
  7651                           
  7652                           ;tmr2.c: 240: do { LATA6 = 0; } while(0);
  7653  001F36  9C89               	bcf	3977,6,c	;volatile
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;tmr2.c: 241: break;
  7657  001F38  0012               	return	
  7658  001F3A                     l5958:
  7659                           
  7660                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  7661  001F3A  0E00               	movlw	0
  7662  001F3C  0100               	movlb	0	; () banked
  7663  001F3E  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  7664  001F40  0E00               	movlw	0
  7665  001F42  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  7666                           
  7667                           ;tmr2.c: 244: LEDState[2]=0;
  7668  001F44  0E00               	movlw	0
  7669  001F46  0100               	movlb	0	; () banked
  7670  001F48  6FA9               	movwf	(_LEDState+5)& (0+255),b
  7671  001F4A  0E00               	movlw	0
  7672  001F4C  6FA8               	movwf	(_LEDState+4)& (0+255),b
  7673                           
  7674                           ; BSR set to: 0
  7675                           
  7676                           ; BSR set to: 0
  7677                           
  7678                           ;tmr2.c: 245: do { LATA7 = 0; } while(0);
  7679  001F4E  9E89               	bcf	3977,7,c	;volatile
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;tmr2.c: 246: break;
  7683  001F50  0012               	return	
  7684  001F52                     l5962:
  7685                           
  7686                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  7687  001F52  0E00               	movlw	0
  7688  001F54  0100               	movlb	0	; () banked
  7689  001F56  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  7690  001F58  0E00               	movlw	0
  7691  001F5A  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  7692                           
  7693                           ;tmr2.c: 249: LEDState[3]=0;
  7694  001F5C  0E00               	movlw	0
  7695  001F5E  0100               	movlb	0	; () banked
  7696  001F60  6FAB               	movwf	(_LEDState+7)& (0+255),b
  7697  001F62  0E00               	movlw	0
  7698  001F64  6FAA               	movwf	(_LEDState+6)& (0+255),b
  7699                           
  7700                           ; BSR set to: 0
  7701                           
  7702                           ; BSR set to: 0
  7703                           
  7704                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  7705  001F66  948D               	bcf	3981,2,c	;volatile
  7706                           
  7707                           ; BSR set to: 0
  7708                           ;tmr2.c: 251: break;
  7709  001F68  0012               	return	
  7710  001F6A                     l5966:
  7711                           
  7712                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  7713  001F6A  0E00               	movlw	0
  7714  001F6C  0100               	movlb	0	; () banked
  7715  001F6E  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  7716  001F70  0E00               	movlw	0
  7717  001F72  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  7718                           
  7719                           ;tmr2.c: 254: LEDState[4]=0;
  7720  001F74  0E00               	movlw	0
  7721  001F76  0100               	movlb	0	; () banked
  7722  001F78  6FAD               	movwf	(_LEDState+9)& (0+255),b
  7723  001F7A  0E00               	movlw	0
  7724  001F7C  6FAC               	movwf	(_LEDState+8)& (0+255),b
  7725                           
  7726                           ; BSR set to: 0
  7727                           
  7728                           ; BSR set to: 0
  7729                           
  7730                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  7731  001F7E  928D               	bcf	3981,1,c	;volatile
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;tmr2.c: 256: break;
  7735  001F80  0012               	return	
  7736  001F82                     l5970:
  7737                           
  7738                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  7739  001F82  0E00               	movlw	0
  7740  001F84  0100               	movlb	0	; () banked
  7741  001F86  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  7742  001F88  0E00               	movlw	0
  7743  001F8A  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  7744                           
  7745                           ;tmr2.c: 259: LEDState[5]=0;
  7746  001F8C  0E00               	movlw	0
  7747  001F8E  0100               	movlb	0	; () banked
  7748  001F90  6FAF               	movwf	(_LEDState+11)& (0+255),b
  7749  001F92  0E00               	movlw	0
  7750  001F94  6FAE               	movwf	(_LEDState+10)& (0+255),b
  7751                           
  7752                           ; BSR set to: 0
  7753                           
  7754                           ; BSR set to: 0
  7755                           
  7756                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  7757  001F96  908D               	bcf	3981,0,c	;volatile
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;tmr2.c: 262: }
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;tmr2.c: 261: break;
  7764  001F98  0012               	return	
  7765  001F9A                     l5976:
  7766  001F9A  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  7767  001F9E  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  7768                           
  7769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7770                           ; Switch size 1, requested type "space"
  7771                           ; Number of cases is 1, Range of values is 0 to 0
  7772                           ; switch strategies available:
  7773                           ; Name         Instructions Cycles
  7774                           ; simple_byte            4     3 (average)
  7775                           ;	Chosen strategy is simple_byte
  7776  001FA2  501E               	movf	??_Off_Led+1,w,c
  7777  001FA4  0A00               	xorlw	0	; case 0
  7778  001FA6  A4D8               	btfss	status,2,c
  7779  001FA8  0012               	return	
  7780                           
  7781                           ; Switch size 1, requested type "space"
  7782                           ; Number of cases is 6, Range of values is 0 to 5
  7783                           ; switch strategies available:
  7784                           ; Name         Instructions Cycles
  7785                           ; simple_byte           19    10 (average)
  7786                           ;	Chosen strategy is simple_byte
  7787  001FAA  501D               	movf	??_Off_Led,w,c
  7788  001FAC  0A00               	xorlw	0	; case 0
  7789  001FAE  B4D8               	btfsc	status,2,c
  7790  001FB0  D7AC               	goto	l5950
  7791  001FB2  0A01               	xorlw	1	; case 1
  7792  001FB4  B4D8               	btfsc	status,2,c
  7793  001FB6  D7B5               	goto	l5954
  7794  001FB8  0A03               	xorlw	3	; case 2
  7795  001FBA  B4D8               	btfsc	status,2,c
  7796  001FBC  D7BE               	goto	l5958
  7797  001FBE  0A01               	xorlw	1	; case 3
  7798  001FC0  B4D8               	btfsc	status,2,c
  7799  001FC2  D7C7               	goto	l5962
  7800  001FC4  0A07               	xorlw	7	; case 4
  7801  001FC6  B4D8               	btfsc	status,2,c
  7802  001FC8  D7D0               	goto	l5966
  7803  001FCA  0A01               	xorlw	1	; case 5
  7804  001FCC  A4D8               	btfss	status,2,c
  7805  001FCE  0012               	return	
  7806  001FD0  D7D8               	goto	l5970
  7807  001FD2                     __end_of_Off_Led:
  7808                           	opt stack 0
  7809                           tosu	equ	0xFFF
  7810                           tosh	equ	0xFFE
  7811                           tosl	equ	0xFFD
  7812                           pclath	equ	0xFFA
  7813                           tblptru	equ	0xFF8
  7814                           tblptrh	equ	0xFF7
  7815                           tblptrl	equ	0xFF6
  7816                           tablat	equ	0xFF5
  7817                           prodh	equ	0xFF4
  7818                           prodl	equ	0xFF3
  7819                           intcon	equ	0xFF2
  7820                           postinc0	equ	0xFEE
  7821                           wreg	equ	0xFE8
  7822                           indf2	equ	0xFDF
  7823                           postinc2	equ	0xFDE
  7824                           postdec2	equ	0xFDD
  7825                           plusw2	equ	0xFDB
  7826                           fsr2h	equ	0xFDA
  7827                           fsr2l	equ	0xFD9
  7828                           status	equ	0xFD8
  7829                           
  7830 ;; *************** function _DataBarGraphs *****************
  7831 ;; Defined at:
  7832 ;;		line 48 in file "Communications.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  BGA             2   26[COMRAM] int 
  7835 ;;  BGB             2   28[COMRAM] int 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      void 
  7840 ;; Registers used:
  7841 ;;		None
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7847 ;;      Params:         4       0       0       0       0       0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0
  7850 ;;      Totals:         4       0       0       0       0       0       0
  7851 ;;Total ram usage:        4 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    4
  7854 ;; This function calls:
  7855 ;;		Nothing
  7856 ;; This function is called by:
  7857 ;;		_updateComms
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text30
  7862  003150                     __ptext30:
  7863                           	opt stack 0
  7864  003150                     _DataBarGraphs:
  7865                           	opt stack 25
  7866                           
  7867                           ;Communications.c: 49: DataBarGraphA = BGA;
  7868                           
  7869                           ;incstack = 0
  7870  003150  C01B  F0C3         	movff	DataBarGraphs@BGA,_DataBarGraphA
  7871  003154  C01C  F0C4         	movff	DataBarGraphs@BGA+1,_DataBarGraphA+1
  7872                           
  7873                           ;Communications.c: 50: DataBarGraphB = BGB;
  7874  003158  C01D  F0C5         	movff	DataBarGraphs@BGB,_DataBarGraphB
  7875  00315C  C01E  F0C6         	movff	DataBarGraphs@BGB+1,_DataBarGraphB+1
  7876  003160  0012               	return		;funcret
  7877  003162                     __end_of_DataBarGraphs:
  7878                           	opt stack 0
  7879                           tosu	equ	0xFFF
  7880                           tosh	equ	0xFFE
  7881                           tosl	equ	0xFFD
  7882                           pclath	equ	0xFFA
  7883                           tblptru	equ	0xFF8
  7884                           tblptrh	equ	0xFF7
  7885                           tblptrl	equ	0xFF6
  7886                           tablat	equ	0xFF5
  7887                           prodh	equ	0xFF4
  7888                           prodl	equ	0xFF3
  7889                           intcon	equ	0xFF2
  7890                           postinc0	equ	0xFEE
  7891                           wreg	equ	0xFE8
  7892                           indf2	equ	0xFDF
  7893                           postinc2	equ	0xFDE
  7894                           postdec2	equ	0xFDD
  7895                           plusw2	equ	0xFDB
  7896                           fsr2h	equ	0xFDA
  7897                           fsr2l	equ	0xFD9
  7898                           status	equ	0xFD8
  7899                           
  7900 ;; *************** function ___wmul *****************
  7901 ;; Defined at:
  7902 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;  multiplier      2   28[COMRAM] unsigned int 
  7905 ;;  multiplicand    2   30[COMRAM] unsigned int 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  product         2   32[COMRAM] unsigned int 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2   28[COMRAM] unsigned int 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0, prodl, prodh
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7917 ;;      Params:         4       0       0       0       0       0       0
  7918 ;;      Locals:         2       0       0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0
  7920 ;;      Totals:         6       0       0       0       0       0       0
  7921 ;;Total ram usage:        6 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; Hardware stack levels required when called:    4
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text31
  7932  003014                     __ptext31:
  7933                           	opt stack 0
  7934  003014                     ___wmul:
  7935                           	opt stack 26
  7936                           
  7937                           ;incstack = 0
  7938  003014  501D               	movf	___wmul@multiplier,w,c
  7939  003016  021F               	mulwf	___wmul@multiplicand,c
  7940  003018  CFF3 F021          	movff	prodl,___wmul@product
  7941  00301C  CFF4 F022          	movff	prodh,___wmul@product+1
  7942  003020  501D               	movf	___wmul@multiplier,w,c
  7943  003022  0220               	mulwf	___wmul@multiplicand+1,c
  7944  003024  50F3               	movf	prodl,w,c
  7945  003026  2622               	addwf	___wmul@product+1,f,c
  7946  003028  501E               	movf	___wmul@multiplier+1,w,c
  7947  00302A  021F               	mulwf	___wmul@multiplicand,c
  7948  00302C  50F3               	movf	prodl,w,c
  7949  00302E  2622               	addwf	___wmul@product+1,f,c
  7950  003030  C021  F01D         	movff	___wmul@product,?___wmul
  7951  003034  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  7952  003038  0012               	return	
  7953  00303A                     __end_of___wmul:
  7954                           	opt stack 0
  7955                           tosu	equ	0xFFF
  7956                           tosh	equ	0xFFE
  7957                           tosl	equ	0xFFD
  7958                           pclath	equ	0xFFA
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           prodh	equ	0xFF4
  7964                           prodl	equ	0xFF3
  7965                           intcon	equ	0xFF2
  7966                           postinc0	equ	0xFEE
  7967                           wreg	equ	0xFE8
  7968                           indf2	equ	0xFDF
  7969                           postinc2	equ	0xFDE
  7970                           postdec2	equ	0xFDD
  7971                           plusw2	equ	0xFDB
  7972                           fsr2h	equ	0xFDA
  7973                           fsr2l	equ	0xFD9
  7974                           status	equ	0xFD8
  7975                           
  7976 ;; *************** function _Splash *****************
  7977 ;; Defined at:
  7978 ;;		line 35 in file "Display.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;		None
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7992 ;;      Params:         0       0       0       0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0
  7995 ;;      Totals:         0       0       0       0       0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:    8
  7999 ;; This function calls:
  8000 ;;		_oledGotoYX
  8001 ;;		_oledPrint
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text32
  8008  0029A0                     __ptext32:
  8009                           	opt stack 0
  8010  0029A0                     _Splash:
  8011                           	opt stack 22
  8012                           
  8013                           ;Display.c: 36: oledGotoYX(2,3);
  8014                           
  8015                           ;incstack = 0
  8016  0029A0  0E03               	movlw	3
  8017  0029A2  6E27               	movwf	oledGotoYX@Column,c
  8018  0029A4  0E02               	movlw	2
  8019  0029A6  EC05  F015         	call	_oledGotoYX
  8020                           
  8021                           ;Display.c: 37: oledPrint("University");
  8022  0029AA  0EE3               	movlw	low STR_1
  8023  0029AC  0100               	movlb	0	; () banked
  8024  0029AE  6FFA               	movwf	oledPrint@s& (0+255),b
  8025  0029B0  0E7F               	movlw	high STR_1
  8026  0029B2  0100               	movlb	0	; () banked
  8027  0029B4  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8028  0029B6  EC19  F016         	call	_oledPrint	;wreg free
  8029                           
  8030                           ;Display.c: 38: oledGotoYX(3,3);
  8031  0029BA  0E03               	movlw	3
  8032  0029BC  6E27               	movwf	oledGotoYX@Column,c
  8033  0029BE  0E03               	movlw	3
  8034  0029C0  EC05  F015         	call	_oledGotoYX
  8035                           
  8036                           ;Display.c: 39: oledPrint("OF");
  8037  0029C4  0EFC               	movlw	low STR_2
  8038  0029C6  0100               	movlb	0	; () banked
  8039  0029C8  6FFA               	movwf	oledPrint@s& (0+255),b
  8040  0029CA  0E7F               	movlw	high STR_2
  8041  0029CC  0100               	movlb	0	; () banked
  8042  0029CE  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8043  0029D0  EC19  F016         	call	_oledPrint	;wreg free
  8044                           
  8045                           ;Display.c: 40: oledGotoYX(4,3);
  8046  0029D4  0E03               	movlw	3
  8047  0029D6  6E27               	movwf	oledGotoYX@Column,c
  8048  0029D8  0E04               	movlw	4
  8049  0029DA  EC05  F015         	call	_oledGotoYX
  8050                           
  8051                           ;Display.c: 41: oledPrint("Akron");
  8052  0029DE  0EF6               	movlw	low STR_3
  8053  0029E0  0100               	movlb	0	; () banked
  8054  0029E2  6FFA               	movwf	oledPrint@s& (0+255),b
  8055  0029E4  0E7F               	movlw	high STR_3
  8056  0029E6  0100               	movlb	0	; () banked
  8057  0029E8  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8058  0029EA  EC19  F016         	call	_oledPrint	;wreg free
  8059                           
  8060                           ;Display.c: 42: oledGotoYX(5,3);
  8061  0029EE  0E03               	movlw	3
  8062  0029F0  6E27               	movwf	oledGotoYX@Column,c
  8063  0029F2  0E05               	movlw	5
  8064  0029F4  EC05  F015         	call	_oledGotoYX
  8065                           
  8066                           ;Display.c: 43: oledPrint("ZIPS-EV");
  8067  0029F8  0EEE               	movlw	low STR_4
  8068  0029FA  0100               	movlb	0	; () banked
  8069  0029FC  6FFA               	movwf	oledPrint@s& (0+255),b
  8070  0029FE  0E7F               	movlw	high STR_4
  8071  002A00  0100               	movlb	0	; () banked
  8072  002A02  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  8073  002A04  EC19  F016         	call	_oledPrint	;wreg free
  8074  002A08  0012               	return		;funcret
  8075  002A0A                     __end_of_Splash:
  8076                           	opt stack 0
  8077                           tosu	equ	0xFFF
  8078                           tosh	equ	0xFFE
  8079                           tosl	equ	0xFFD
  8080                           pclath	equ	0xFFA
  8081                           tblptru	equ	0xFF8
  8082                           tblptrh	equ	0xFF7
  8083                           tblptrl	equ	0xFF6
  8084                           tablat	equ	0xFF5
  8085                           prodh	equ	0xFF4
  8086                           prodl	equ	0xFF3
  8087                           intcon	equ	0xFF2
  8088                           postinc0	equ	0xFEE
  8089                           wreg	equ	0xFE8
  8090                           indf2	equ	0xFDF
  8091                           postinc2	equ	0xFDE
  8092                           postdec2	equ	0xFDD
  8093                           plusw2	equ	0xFDB
  8094                           fsr2h	equ	0xFDA
  8095                           fsr2l	equ	0xFD9
  8096                           status	equ	0xFD8
  8097                           
  8098 ;; *************** function _oledPrint *****************
  8099 ;; Defined at:
  8100 ;;		line 222 in file "OLED_Display.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  8103 ;;		 -> STR_4(8), STR_3(6), STR_2(3), STR_1(11), 
  8104 ;;		 -> SetData@s(20), 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8116 ;;      Params:         0       2       0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0
  8119 ;;      Totals:         0       2       0       0       0       0       0
  8120 ;;Total ram usage:        2 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    7
  8123 ;; This function calls:
  8124 ;;		_oledPutChar
  8125 ;; This function is called by:
  8126 ;;		_Splash
  8127 ;;		_SetData
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text33
  8132  002C32                     __ptext33:
  8133                           	opt stack 0
  8134  002C32                     _oledPrint:
  8135                           	opt stack 22
  8136                           
  8137                           ;OLED_Display.c: 224: while (*s) oledPutChar( *s++);
  8138                           
  8139                           ;incstack = 0
  8140  002C32  D015               	goto	l6778
  8141  002C34                     l6774:
  8142  002C34  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8143  002C38  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8144  002C3C  6AF8               	clrf	tblptru,c
  8145  002C3E  0E05               	movlw	(high __ramtop+-1)
  8146  002C40  64F7               	cpfsgt	tblptrh,c
  8147  002C42  D003               	bra	u7727
  8148  002C44  0008               	tblrd		*
  8149  002C46  50F5               	movf	tablat,w,c
  8150  002C48  D005               	bra	u7720
  8151  002C4A                     u7727:
  8152  002C4A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8153  002C4E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8154  002C52  50EF               	movf	indf0,w,c
  8155  002C54                     u7720:
  8156  002C54  ECC3  F00D         	call	_oledPutChar
  8157  002C58  0100               	movlb	0	; () banked
  8158  002C5A  4BFA               	infsnz	oledPrint@s& (0+255),f,b
  8159  002C5C  2BFB               	incf	(oledPrint@s+1)& (0+255),f,b
  8160  002C5E                     l6778:
  8161  002C5E  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8162  002C62  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8163  002C66  6AF8               	clrf	tblptru,c
  8164  002C68  0E05               	movlw	(high __ramtop+-1)
  8165  002C6A  64F7               	cpfsgt	tblptrh,c
  8166  002C6C  D003               	bra	u7737
  8167  002C6E  0008               	tblrd		*
  8168  002C70  50F5               	movf	tablat,w,c
  8169  002C72  D005               	bra	u7730
  8170  002C74                     u7737:
  8171  002C74  CFF6 FFE9          	movff	tblptrl,fsr0l
  8172  002C78  CFF7 FFEA          	movff	tblptrh,fsr0h
  8173  002C7C  50EF               	movf	indf0,w,c
  8174  002C7E                     u7730:
  8175  002C7E  0900               	iorlw	0
  8176  002C80  B4D8               	btfsc	status,2,c
  8177  002C82  0012               	return	
  8178  002C84  D7D7               	goto	l6774
  8179  002C86                     __end_of_oledPrint:
  8180                           	opt stack 0
  8181                           tosu	equ	0xFFF
  8182                           tosh	equ	0xFFE
  8183                           tosl	equ	0xFFD
  8184                           pclath	equ	0xFFA
  8185                           tblptru	equ	0xFF8
  8186                           tblptrh	equ	0xFF7
  8187                           tblptrl	equ	0xFF6
  8188                           tablat	equ	0xFF5
  8189                           prodh	equ	0xFF4
  8190                           prodl	equ	0xFF3
  8191                           intcon	equ	0xFF2
  8192                           indf0	equ	0xFEF
  8193                           postinc0	equ	0xFEE
  8194                           fsr0h	equ	0xFEA
  8195                           fsr0l	equ	0xFE9
  8196                           wreg	equ	0xFE8
  8197                           indf2	equ	0xFDF
  8198                           postinc2	equ	0xFDE
  8199                           postdec2	equ	0xFDD
  8200                           plusw2	equ	0xFDB
  8201                           fsr2h	equ	0xFDA
  8202                           fsr2l	equ	0xFD9
  8203                           status	equ	0xFD8
  8204                           
  8205 ;; *************** function _Setupdisplay *****************
  8206 ;; Defined at:
  8207 ;;		line 30 in file "Display.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;		None
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;		None
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  1    wreg      void 
  8214 ;; Registers used:
  8215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8221 ;;      Params:         0       0       0       0       0       0       0
  8222 ;;      Locals:         0       0       0       0       0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0
  8224 ;;      Totals:         0       0       0       0       0       0       0
  8225 ;;Total ram usage:        0 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:    9
  8228 ;; This function calls:
  8229 ;;		_OLED_init
  8230 ;;		_oledClear
  8231 ;; This function is called by:
  8232 ;;		_main
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text34
  8237  00319E                     __ptext34:
  8238                           	opt stack 0
  8239  00319E                     _Setupdisplay:
  8240                           	opt stack 21
  8241                           
  8242                           ;Display.c: 31: OLED_init();
  8243                           
  8244                           ;incstack = 0
  8245  00319E  EC1A  F013         	call	_OLED_init	;wreg free
  8246                           
  8247                           ;Display.c: 32: oledClear();
  8248  0031A2  EC97  F015         	call	_oledClear	;wreg free
  8249  0031A6  0012               	return		;funcret
  8250  0031A8                     __end_of_Setupdisplay:
  8251                           	opt stack 0
  8252                           tosu	equ	0xFFF
  8253                           tosh	equ	0xFFE
  8254                           tosl	equ	0xFFD
  8255                           pclath	equ	0xFFA
  8256                           tblptru	equ	0xFF8
  8257                           tblptrh	equ	0xFF7
  8258                           tblptrl	equ	0xFF6
  8259                           tablat	equ	0xFF5
  8260                           prodh	equ	0xFF4
  8261                           prodl	equ	0xFF3
  8262                           intcon	equ	0xFF2
  8263                           indf0	equ	0xFEF
  8264                           postinc0	equ	0xFEE
  8265                           fsr0h	equ	0xFEA
  8266                           fsr0l	equ	0xFE9
  8267                           wreg	equ	0xFE8
  8268                           indf2	equ	0xFDF
  8269                           postinc2	equ	0xFDE
  8270                           postdec2	equ	0xFDD
  8271                           plusw2	equ	0xFDB
  8272                           fsr2h	equ	0xFDA
  8273                           fsr2l	equ	0xFD9
  8274                           status	equ	0xFD8
  8275                           
  8276 ;; *************** function _oledClear *****************
  8277 ;; Defined at:
  8278 ;;		line 212 in file "OLED_Display.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  col             2   10[BANK0 ] unsigned int 
  8283 ;;  row             2    8[BANK0 ] unsigned int 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8293 ;;      Params:         0       0       0       0       0       0       0
  8294 ;;      Locals:         0       4       0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0
  8296 ;;      Totals:         0       4       0       0       0       0       0
  8297 ;;Total ram usage:        4 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    8
  8300 ;; This function calls:
  8301 ;;		_oledGotoYX
  8302 ;;		_oledPutChar
  8303 ;; This function is called by:
  8304 ;;		_Setupdisplay
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text35
  8309  002B2E                     __ptext35:
  8310                           	opt stack 0
  8311  002B2E                     _oledClear:
  8312                           	opt stack 21
  8313                           
  8314                           ;OLED_Display.c: 214: for ( uint16_t row = 0; row < 8; row++ ) {
  8315                           
  8316                           ;incstack = 0
  8317  002B2E  0E00               	movlw	0
  8318  002B30  0100               	movlb	0	; () banked
  8319  002B32  6FFB               	movwf	(oledClear@row+1)& (0+255),b
  8320  002B34  0E00               	movlw	0
  8321  002B36  6FFA               	movwf	oledClear@row& (0+255),b
  8322  002B38                     l6750:
  8323                           
  8324                           ; BSR set to: 0
  8325  002B38  0100               	movlb	0	; () banked
  8326  002B3A  51FB               	movf	(oledClear@row+1)& (0+255),w,b
  8327  002B3C  E123               	bnz	l1266
  8328  002B3E  0E08               	movlw	8
  8329  002B40  0100               	movlb	0	; () banked
  8330  002B42  5DFA               	subwf	oledClear@row& (0+255),w,b
  8331  002B44  B0D8               	btfsc	status,0,c
  8332  002B46  0012               	return	
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;OLED_Display.c: 215: for ( uint16_t col = 0; col < 16; col++ ) {
  8336                           
  8337                           ; BSR set to: 0
  8338                           
  8339                           ; BSR set to: 0
  8340  002B48  0E00               	movlw	0
  8341  002B4A  0100               	movlb	0	; () banked
  8342  002B4C  6FFD               	movwf	(oledClear@col+1)& (0+255),b
  8343  002B4E  0E00               	movlw	0
  8344  002B50  6FFC               	movwf	oledClear@col& (0+255),b
  8345  002B52                     l6756:
  8346                           
  8347                           ; BSR set to: 0
  8348  002B52  0100               	movlb	0	; () banked
  8349  002B54  51FD               	movf	(oledClear@col+1)& (0+255),w,b
  8350  002B56  E112               	bnz	l6768
  8351  002B58  0E10               	movlw	16
  8352  002B5A  0100               	movlb	0	; () banked
  8353  002B5C  5DFC               	subwf	oledClear@col& (0+255),w,b
  8354  002B5E  B0D8               	btfsc	status,0,c
  8355  002B60  D00D               	goto	l6768
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;OLED_Display.c: 216: oledGotoYX( row, col );
  8359                           
  8360                           ; BSR set to: 0
  8361                           
  8362                           ; BSR set to: 0
  8363  002B62  C0FC  F027         	movff	oledClear@col,oledGotoYX@Column
  8364  002B66  0100               	movlb	0	; () banked
  8365  002B68  51FA               	movf	oledClear@row& (0+255),w,b
  8366  002B6A  EC05  F015         	call	_oledGotoYX
  8367                           
  8368                           ;OLED_Display.c: 217: oledPutChar( ' ' );
  8369  002B6E  0E20               	movlw	32
  8370  002B70  ECC3  F00D         	call	_oledPutChar
  8371  002B74  0100               	movlb	0	; () banked
  8372  002B76  4BFC               	infsnz	oledClear@col& (0+255),f,b
  8373  002B78  2BFD               	incf	(oledClear@col+1)& (0+255),f,b
  8374  002B7A  D7EB               	goto	l6756
  8375  002B7C                     l6768:
  8376                           
  8377                           ; BSR set to: 0
  8378  002B7C  0100               	movlb	0	; () banked
  8379  002B7E  4BFA               	infsnz	oledClear@row& (0+255),f,b
  8380  002B80  2BFB               	incf	(oledClear@row+1)& (0+255),f,b
  8381  002B82  D7DA               	goto	l6750
  8382  002B84                     l1266:
  8383                           
  8384                           ; BSR set to: 0
  8385  002B84  0012               	return		;funcret
  8386  002B86                     __end_of_oledClear:
  8387                           	opt stack 0
  8388                           tosu	equ	0xFFF
  8389                           tosh	equ	0xFFE
  8390                           tosl	equ	0xFFD
  8391                           pclath	equ	0xFFA
  8392                           tblptru	equ	0xFF8
  8393                           tblptrh	equ	0xFF7
  8394                           tblptrl	equ	0xFF6
  8395                           tablat	equ	0xFF5
  8396                           prodh	equ	0xFF4
  8397                           prodl	equ	0xFF3
  8398                           intcon	equ	0xFF2
  8399                           indf0	equ	0xFEF
  8400                           postinc0	equ	0xFEE
  8401                           fsr0h	equ	0xFEA
  8402                           fsr0l	equ	0xFE9
  8403                           wreg	equ	0xFE8
  8404                           indf2	equ	0xFDF
  8405                           postinc2	equ	0xFDE
  8406                           postdec2	equ	0xFDD
  8407                           plusw2	equ	0xFDB
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function _oledPutChar *****************
  8413 ;; Defined at:
  8414 ;;		line 178 in file "OLED_Display.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  ch              1    wreg     unsigned char 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  ch              1   11[BANK1 ] unsigned char 
  8419 ;;  bytes           9    0[BANK1 ] unsigned char [9]
  8420 ;;  base            2    9[BANK1 ] PTR const unsigned char 
  8421 ;;		 -> OledFont(768), 
  8422 ;;  status          1   12[BANK1 ] enum E8858
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8432 ;;      Params:         0       0       0       0       0       0       0
  8433 ;;      Locals:         0       0      13       0       0       0       0
  8434 ;;      Temps:          4       0       0       0       0       0       0
  8435 ;;      Totals:         4       0      13       0       0       0       0
  8436 ;;Total ram usage:       17 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    6
  8439 ;; This function calls:
  8440 ;;		_I2C1_MasterWrite
  8441 ;;		_memmove
  8442 ;; This function is called by:
  8443 ;;		_oledClear
  8444 ;;		_oledPrint
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text36
  8449  001B86                     __ptext36:
  8450                           	opt stack 0
  8451  001B86                     _oledPutChar:
  8452                           	opt stack 22
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;incstack = 0
  8456                           ;oledPutChar@ch stored from wreg
  8457  001B86  0101               	movlb	1	; () banked
  8458  001B88  6F44               	movwf	oledPutChar@ch& (0+255),b
  8459                           
  8460                           ;OLED_Display.c: 179: if ( ( ch < 32 ) || ( ch > 127 ) )
  8461  001B8A  0E1F               	movlw	31
  8462  001B8C  0101               	movlb	1	; () banked
  8463  001B8E  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8464  001B90  D004               	goto	l6352
  8465                           
  8466                           ; BSR set to: 1
  8467  001B92  0E7F               	movlw	127
  8468  001B94  0101               	movlb	1	; () banked
  8469  001B96  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8470  001B98  D003               	goto	l6354
  8471  001B9A                     l6352:
  8472                           
  8473                           ; BSR set to: 1
  8474                           ;OLED_Display.c: 180: ch = ' ';
  8475  001B9A  0E20               	movlw	32
  8476  001B9C  0101               	movlb	1	; () banked
  8477  001B9E  6F44               	movwf	oledPutChar@ch& (0+255),b
  8478  001BA0                     l6354:
  8479                           
  8480                           ; BSR set to: 1
  8481                           ;OLED_Display.c: 182: const uint8_t *base = &OledFont[ch - 32][0];
  8482  001BA0  0E00               	movlw	0
  8483  001BA2  6E27               	movwf	??_oledPutChar& (0+255),c
  8484  001BA4  0EFF               	movlw	255
  8485  001BA6  6E28               	movwf	(??_oledPutChar+1)& (0+255),c
  8486  001BA8  0101               	movlb	1	; () banked
  8487  001BAA  5144               	movf	oledPutChar@ch& (0+255),w,b
  8488  001BAC  6E29               	movwf	(??_oledPutChar+2)& (0+255),c
  8489  001BAE  6A2A               	clrf	(??_oledPutChar+3)& (0+255),c
  8490  001BB0  90D8               	bcf	status,0,c
  8491  001BB2  3629               	rlcf	??_oledPutChar+2,f,c
  8492  001BB4  362A               	rlcf	??_oledPutChar+3,f,c
  8493  001BB6  90D8               	bcf	status,0,c
  8494  001BB8  3629               	rlcf	??_oledPutChar+2,f,c
  8495  001BBA  362A               	rlcf	??_oledPutChar+3,f,c
  8496  001BBC  90D8               	bcf	status,0,c
  8497  001BBE  3629               	rlcf	??_oledPutChar+2,f,c
  8498  001BC0  362A               	rlcf	??_oledPutChar+3,f,c
  8499  001BC2  5027               	movf	??_oledPutChar,w,c
  8500  001BC4  2629               	addwf	??_oledPutChar+2,f,c
  8501  001BC6  5028               	movf	??_oledPutChar+1,w,c
  8502  001BC8  222A               	addwfc	??_oledPutChar+3,f,c
  8503  001BCA  0ED3               	movlw	low _OledFont
  8504  001BCC  2429               	addwf	??_oledPutChar+2,w,c
  8505  001BCE  0101               	movlb	1	; () banked
  8506  001BD0  6F42               	movwf	oledPutChar@base& (0+255),b
  8507  001BD2  0E7B               	movlw	high _OledFont
  8508  001BD4  202A               	addwfc	??_oledPutChar+3,w,c
  8509  001BD6  0101               	movlb	1	; () banked
  8510  001BD8  6F43               	movwf	(oledPutChar@base+1)& (0+255),b
  8511                           
  8512                           ; BSR set to: 1
  8513                           ;OLED_Display.c: 184: uint8_t bytes[9];
  8514                           ;OLED_Display.c: 185: bytes[0] = 0x40;
  8515  001BDA  0E40               	movlw	64
  8516  001BDC  0101               	movlb	1	; () banked
  8517  001BDE  6F39               	movwf	oledPutChar@bytes& (0+255),b
  8518                           
  8519                           ; BSR set to: 1
  8520                           ;OLED_Display.c: 186: memmove( bytes + 1, base, 8 );
  8521  001BE0  0E3A               	movlw	low (oledPutChar@bytes+1)
  8522  001BE2  6E1B               	movwf	memmove@d1,c
  8523  001BE4  0E01               	movlw	high (oledPutChar@bytes+1)
  8524  001BE6  6E1C               	movwf	memmove@d1+1,c
  8525  001BE8  C142  F01D         	movff	oledPutChar@base,memmove@s1
  8526  001BEC  C143  F01E         	movff	oledPutChar@base+1,memmove@s1+1
  8527  001BF0  0E00               	movlw	0
  8528  001BF2  6E20               	movwf	memmove@n+1,c
  8529  001BF4  0E08               	movlw	8
  8530  001BF6  6E1F               	movwf	memmove@n,c
  8531  001BF8  ECF7  F010         	call	_memmove	;wreg free
  8532                           
  8533                           ;OLED_Display.c: 188: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8534  001BFC  0E02               	movlw	2
  8535  001BFE  0101               	movlb	1	; () banked
  8536  001C00  6F45               	movwf	oledPutChar@status& (0+255),b
  8537                           
  8538                           ; BSR set to: 1
  8539                           ;OLED_Display.c: 190: timeOut = 0;
  8540  001C02  0E00               	movlw	0
  8541  001C04  0100               	movlb	0	; () banked
  8542  001C06  6FDE               	movwf	(_timeOut+1)& (0+255),b
  8543  001C08  0E00               	movlw	0
  8544  001C0A  6FDD               	movwf	_timeOut& (0+255),b
  8545                           
  8546                           ;OLED_Display.c: 191: while (status != I2C1_MESSAGE_FAIL) {
  8547  001C0C  D030               	goto	l6384
  8548  001C0E                     l6364:
  8549                           
  8550                           ;OLED_Display.c: 193: I2C1_MasterWrite(bytes,
  8551                           ;OLED_Display.c: 194: 9,
  8552                           ;OLED_Display.c: 195: 0x3C,
  8553                           ;OLED_Display.c: 196: &status);
  8554  001C0E  0E39               	movlw	low oledPutChar@bytes
  8555  001C10  0100               	movlb	0	; () banked
  8556  001C12  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8557  001C14  0E01               	movlw	high oledPutChar@bytes
  8558  001C16  0100               	movlb	0	; () banked
  8559  001C18  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8560  001C1A  0E00               	movlw	0
  8561  001C1C  0100               	movlb	0	; () banked
  8562  001C1E  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8563  001C20  0E09               	movlw	9
  8564  001C22  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  8565  001C24  0E00               	movlw	0
  8566  001C26  0100               	movlb	0	; () banked
  8567  001C28  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  8568  001C2A  0E3C               	movlw	60
  8569  001C2C  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  8570  001C2E  0E45               	movlw	low oledPutChar@status
  8571  001C30  0100               	movlb	0	; () banked
  8572  001C32  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8573  001C34  0E01               	movlw	high oledPutChar@status
  8574  001C36  0100               	movlb	0	; () banked
  8575  001C38  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8576  001C3A  ECEE  F015         	call	_I2C1_MasterWrite	;wreg free
  8577  001C3E                     l6366:
  8578  001C3E  0E02               	movlw	2
  8579  001C40  0101               	movlb	1	; () banked
  8580  001C42  1945               	xorwf	oledPutChar@status& (0+255),w,b
  8581  001C44  B4D8               	btfsc	status,2,c
  8582  001C46  D7FB               	goto	l6366
  8583                           
  8584                           ; BSR set to: 1
  8585                           ;OLED_Display.c: 201: if (status == I2C1_MESSAGE_COMPLETE)
  8586                           
  8587                           ; BSR set to: 1
  8588  001C48  0101               	movlb	1	; () banked
  8589  001C4A  5145               	movf	oledPutChar@status& (0+255),w,b
  8590  001C4C  0101               	movlb	1	; () banked
  8591  001C4E  B4D8               	btfsc	status,2,c
  8592  001C50  0012               	return	
  8593                           
  8594                           ; BSR set to: 1
  8595                           ;OLED_Display.c: 203: if (timeOut == 100)
  8596                           
  8597                           ; BSR set to: 1
  8598                           
  8599                           ; BSR set to: 1
  8600                           ;OLED_Display.c: 202: break;
  8601  001C52  0E64               	movlw	100
  8602  001C54  0100               	movlb	0	; () banked
  8603  001C56  19DD               	xorwf	_timeOut& (0+255),w,b
  8604  001C58  0100               	movlb	0	; () banked
  8605  001C5A  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  8606  001C5C  B4D8               	btfsc	status,2,c
  8607  001C5E  0012               	return	
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;OLED_Display.c: 205: if (status == I2C1_MESSAGE_FAIL)
  8611                           
  8612                           ; BSR set to: 0
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;OLED_Display.c: 204: break;
  8616  001C60  0101               	movlb	1	; () banked
  8617  001C62  0545               	decf	oledPutChar@status& (0+255),w,b
  8618  001C64  B4D8               	btfsc	status,2,c
  8619  001C66  0012               	return	
  8620                           
  8621                           ; BSR set to: 1
  8622                           ;OLED_Display.c: 207: else
  8623                           ;OLED_Display.c: 208: timeOut++;
  8624                           
  8625                           ; BSR set to: 1
  8626                           
  8627                           ; BSR set to: 1
  8628                           
  8629                           ; BSR set to: 1
  8630                           ;OLED_Display.c: 206: break;
  8631  001C68  0100               	movlb	0	; () banked
  8632  001C6A  4BDD               	infsnz	_timeOut& (0+255),f,b
  8633  001C6C  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  8634  001C6E                     l6384:
  8635  001C6E  0101               	movlb	1	; () banked
  8636  001C70  0545               	decf	oledPutChar@status& (0+255),w,b
  8637  001C72  B4D8               	btfsc	status,2,c
  8638  001C74  0012               	return	
  8639  001C76  D7CB               	goto	l6364
  8640  001C78                     __end_of_oledPutChar:
  8641                           	opt stack 0
  8642                           tosu	equ	0xFFF
  8643                           tosh	equ	0xFFE
  8644                           tosl	equ	0xFFD
  8645                           pclath	equ	0xFFA
  8646                           tblptru	equ	0xFF8
  8647                           tblptrh	equ	0xFF7
  8648                           tblptrl	equ	0xFF6
  8649                           tablat	equ	0xFF5
  8650                           prodh	equ	0xFF4
  8651                           prodl	equ	0xFF3
  8652                           intcon	equ	0xFF2
  8653                           indf0	equ	0xFEF
  8654                           postinc0	equ	0xFEE
  8655                           fsr0h	equ	0xFEA
  8656                           fsr0l	equ	0xFE9
  8657                           wreg	equ	0xFE8
  8658                           indf2	equ	0xFDF
  8659                           postinc2	equ	0xFDE
  8660                           postdec2	equ	0xFDD
  8661                           plusw2	equ	0xFDB
  8662                           fsr2h	equ	0xFDA
  8663                           fsr2l	equ	0xFD9
  8664                           status	equ	0xFD8
  8665                           
  8666 ;; *************** function _memmove *****************
  8667 ;; Defined at:
  8668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memmove.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  d1              2   26[COMRAM] PTR void 
  8671 ;;		 -> oledPutChar@bytes(9), 
  8672 ;;  s1              2   28[COMRAM] PTR const void 
  8673 ;;		 -> OledFont(768), 
  8674 ;;  n               2   30[COMRAM] unsigned int 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  s               2   36[COMRAM] PTR const unsigned char 
  8677 ;;		 -> OledFont(768), 
  8678 ;;  d               2   34[COMRAM] PTR unsigned char 
  8679 ;;		 -> oledPutChar@bytes(9), 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  2   26[COMRAM] PTR void 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8689 ;;      Params:         6       0       0       0       0       0       0
  8690 ;;      Locals:         4       0       0       0       0       0       0
  8691 ;;      Temps:          2       0       0       0       0       0       0
  8692 ;;      Totals:        12       0       0       0       0       0       0
  8693 ;;Total ram usage:       12 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:    4
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_oledPutChar
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text37
  8704  0021EE                     __ptext37:
  8705                           	opt stack 0
  8706  0021EE                     _memmove:
  8707                           	opt stack 23
  8708                           
  8709                           ;incstack = 0
  8710  0021EE  C01D  F025         	movff	memmove@s1,memmove@s
  8711  0021F2  C01E  F026         	movff	memmove@s1+1,memmove@s+1
  8712  0021F6  C01B  F023         	movff	memmove@d1,memmove@d
  8713  0021FA  C01C  F024         	movff	memmove@d1+1,memmove@d+1
  8714  0021FE  5023               	movf	memmove@d,w,c
  8715  002200  5C25               	subwf	memmove@s,w,c
  8716  002202  5024               	movf	memmove@d+1,w,c
  8717  002204  5826               	subwfb	memmove@s+1,w,c
  8718  002206  B0D8               	btfsc	status,0,c
  8719  002208  D02D               	goto	l6116
  8720  00220A  501F               	movf	memmove@n,w,c
  8721  00220C  2425               	addwf	memmove@s,w,c
  8722  00220E  6E21               	movwf	??_memmove& (0+255),c
  8723  002210  5020               	movf	memmove@n+1,w,c
  8724  002212  2026               	addwfc	memmove@s+1,w,c
  8725  002214  6E22               	movwf	(??_memmove+1)& (0+255),c
  8726  002216  5021               	movf	??_memmove,w,c
  8727  002218  5C23               	subwf	memmove@d,w,c
  8728  00221A  5022               	movf	??_memmove+1,w,c
  8729  00221C  5824               	subwfb	memmove@d+1,w,c
  8730  00221E  B0D8               	btfsc	status,0,c
  8731  002220  D021               	goto	l6116
  8732  002222  501F               	movf	memmove@n,w,c
  8733  002224  2625               	addwf	memmove@s,f,c
  8734  002226  5020               	movf	memmove@n+1,w,c
  8735  002228  2226               	addwfc	memmove@s+1,f,c
  8736  00222A  501F               	movf	memmove@n,w,c
  8737  00222C  2623               	addwf	memmove@d,f,c
  8738  00222E  5020               	movf	memmove@n+1,w,c
  8739  002230  2224               	addwfc	memmove@d+1,f,c
  8740  002232                     l6112:
  8741  002232  0625               	decf	memmove@s,f,c
  8742  002234  A0D8               	btfss	status,0,c
  8743  002236  0626               	decf	memmove@s+1,f,c
  8744  002238  C025  FFF6         	movff	memmove@s,tblptrl
  8745  00223C  C026  FFF7         	movff	memmove@s+1,tblptrh
  8746  002240                     	if	0	;tblptru may be non-zero
  8747  002240                     	endif
  8748  002240                     	if	0	;tblptru may be non-zero
  8749  002240                     	endif
  8750  002240  0623               	decf	memmove@d,f,c
  8751  002242  A0D8               	btfss	status,0,c
  8752  002244  0624               	decf	memmove@d+1,f,c
  8753  002246  C023  FFD9         	movff	memmove@d,fsr2l
  8754  00224A  C024  FFDA         	movff	memmove@d+1,fsr2h
  8755  00224E  0008               	tblrd		*
  8756  002250  CFF5 FFDF          	movff	tablat,indf2
  8757  002254  061F               	decf	memmove@n,f,c
  8758  002256  A0D8               	btfss	status,0,c
  8759  002258  0620               	decf	memmove@n+1,f,c
  8760  00225A  501F               	movf	memmove@n,w,c
  8761  00225C  1020               	iorwf	memmove@n+1,w,c
  8762  00225E  B4D8               	btfsc	status,2,c
  8763  002260  0012               	return	
  8764  002262  D7E7               	goto	l6112
  8765  002264                     l6116:
  8766  002264  501F               	movf	memmove@n,w,c
  8767  002266  1020               	iorwf	memmove@n+1,w,c
  8768  002268  B4D8               	btfsc	status,2,c
  8769  00226A  0012               	return	
  8770  00226C  C025  FFF6         	movff	memmove@s,tblptrl
  8771  002270  C026  FFF7         	movff	memmove@s+1,tblptrh
  8772  002274                     	if	0	;tblptru may be non-zero
  8773  002274                     	endif
  8774  002274                     	if	0	;tblptru may be non-zero
  8775  002274                     	endif
  8776  002274  C023  FFD9         	movff	memmove@d,fsr2l
  8777  002278  C024  FFDA         	movff	memmove@d+1,fsr2h
  8778  00227C  0008               	tblrd		*
  8779  00227E  CFF5 FFDF          	movff	tablat,indf2
  8780  002282  4A25               	infsnz	memmove@s,f,c
  8781  002284  2A26               	incf	memmove@s+1,f,c
  8782  002286  4A23               	infsnz	memmove@d,f,c
  8783  002288  2A24               	incf	memmove@d+1,f,c
  8784  00228A  061F               	decf	memmove@n,f,c
  8785  00228C  A0D8               	btfss	status,0,c
  8786  00228E  0620               	decf	memmove@n+1,f,c
  8787  002290  D7E9               	goto	l6116
  8788  002292                     __end_of_memmove:
  8789                           	opt stack 0
  8790                           tosu	equ	0xFFF
  8791                           tosh	equ	0xFFE
  8792                           tosl	equ	0xFFD
  8793                           pclath	equ	0xFFA
  8794                           tblptru	equ	0xFF8
  8795                           tblptrh	equ	0xFF7
  8796                           tblptrl	equ	0xFF6
  8797                           tablat	equ	0xFF5
  8798                           prodh	equ	0xFF4
  8799                           prodl	equ	0xFF3
  8800                           intcon	equ	0xFF2
  8801                           indf0	equ	0xFEF
  8802                           postinc0	equ	0xFEE
  8803                           fsr0h	equ	0xFEA
  8804                           fsr0l	equ	0xFE9
  8805                           wreg	equ	0xFE8
  8806                           indf2	equ	0xFDF
  8807                           postinc2	equ	0xFDE
  8808                           postdec2	equ	0xFDD
  8809                           plusw2	equ	0xFDB
  8810                           fsr2h	equ	0xFDA
  8811                           fsr2l	equ	0xFD9
  8812                           status	equ	0xFD8
  8813                           
  8814 ;; *************** function _oledGotoYX *****************
  8815 ;; Defined at:
  8816 ;;		line 39 in file "OLED_Display.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  Row             1    wreg     unsigned char 
  8819 ;;  Column          1   38[COMRAM] unsigned char 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  Row             1   40[COMRAM] unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8831 ;;      Params:         1       0       0       0       0       0       0
  8832 ;;      Locals:         1       0       0       0       0       0       0
  8833 ;;      Temps:          1       0       0       0       0       0       0
  8834 ;;      Totals:         3       0       0       0       0       0       0
  8835 ;;Total ram usage:        3 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    7
  8838 ;; This function calls:
  8839 ;;		_OLED_command
  8840 ;; This function is called by:
  8841 ;;		_oledClear
  8842 ;;		_Splash
  8843 ;;		_SetData
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text38
  8848  002A0A                     __ptext38:
  8849                           	opt stack 0
  8850  002A0A                     _oledGotoYX:
  8851                           	opt stack 22
  8852                           
  8853                           ;incstack = 0
  8854                           ;oledGotoYX@Row stored from wreg
  8855  002A0A  6E29               	movwf	oledGotoYX@Row,c
  8856                           
  8857                           ;OLED_Display.c: 41: OLED_command( 0xB0 + Row);
  8858  002A0C  5029               	movf	oledGotoYX@Row,w,c
  8859  002A0E  0FB0               	addlw	176
  8860  002A10  ECE6  F013         	call	_OLED_command
  8861                           
  8862                           ;OLED_Display.c: 42: OLED_command( 0xB0 + Row);
  8863  002A14  5029               	movf	oledGotoYX@Row,w,c
  8864  002A16  0FB0               	addlw	176
  8865  002A18  ECE6  F013         	call	_OLED_command
  8866                           
  8867                           ;OLED_Display.c: 43: OLED_command( 0x00 + (8*Column & 0x0F) );
  8868  002A1C  5027               	movf	oledGotoYX@Column,w,c
  8869  002A1E  0D08               	mullw	8
  8870  002A20  50F3               	movf	prodl,w,c
  8871  002A22  0B0F               	andlw	15
  8872  002A24  ECE6  F013         	call	_OLED_command
  8873                           
  8874                           ;OLED_Display.c: 44: OLED_command( 0x00 + (8*Column & 0x0F) );
  8875  002A28  5027               	movf	oledGotoYX@Column,w,c
  8876  002A2A  0D08               	mullw	8
  8877  002A2C  50F3               	movf	prodl,w,c
  8878  002A2E  0B0F               	andlw	15
  8879  002A30  ECE6  F013         	call	_OLED_command
  8880                           
  8881                           ;OLED_Display.c: 45: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8882  002A34  5027               	movf	oledGotoYX@Column,w,c
  8883  002A36  0D08               	mullw	8
  8884  002A38  0E04               	movlw	4
  8885  002A3A  6E28               	movwf	??_oledGotoYX& (0+255),c
  8886  002A3C                     u6705:
  8887  002A3C  34F4               	rlcf	prodh,w,c
  8888  002A3E  32F4               	rrcf	prodh,f,c
  8889  002A40  32F3               	rrcf	prodl,f,c
  8890  002A42  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8891  002A44  D7FB               	goto	u6705
  8892  002A46  50F3               	movf	prodl,w,c
  8893  002A48  0B0F               	andlw	15
  8894  002A4A  0F10               	addlw	16
  8895  002A4C  ECE6  F013         	call	_OLED_command
  8896                           
  8897                           ;OLED_Display.c: 46: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8898  002A50  5027               	movf	oledGotoYX@Column,w,c
  8899  002A52  0D08               	mullw	8
  8900  002A54  0E04               	movlw	4
  8901  002A56  6E28               	movwf	??_oledGotoYX& (0+255),c
  8902  002A58                     u6715:
  8903  002A58  34F4               	rlcf	prodh,w,c
  8904  002A5A  32F4               	rrcf	prodh,f,c
  8905  002A5C  32F3               	rrcf	prodl,f,c
  8906  002A5E  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8907  002A60  D7FB               	goto	u6715
  8908  002A62  50F3               	movf	prodl,w,c
  8909  002A64  0B0F               	andlw	15
  8910  002A66  0F10               	addlw	16
  8911  002A68  ECE6  F013         	call	_OLED_command
  8912  002A6C  0012               	return		;funcret
  8913  002A6E                     __end_of_oledGotoYX:
  8914                           	opt stack 0
  8915                           tosu	equ	0xFFF
  8916                           tosh	equ	0xFFE
  8917                           tosl	equ	0xFFD
  8918                           pclath	equ	0xFFA
  8919                           tblptru	equ	0xFF8
  8920                           tblptrh	equ	0xFF7
  8921                           tblptrl	equ	0xFF6
  8922                           tablat	equ	0xFF5
  8923                           prodh	equ	0xFF4
  8924                           prodl	equ	0xFF3
  8925                           intcon	equ	0xFF2
  8926                           indf0	equ	0xFEF
  8927                           postinc0	equ	0xFEE
  8928                           fsr0h	equ	0xFEA
  8929                           fsr0l	equ	0xFE9
  8930                           wreg	equ	0xFE8
  8931                           indf2	equ	0xFDF
  8932                           postinc2	equ	0xFDE
  8933                           postdec2	equ	0xFDD
  8934                           plusw2	equ	0xFDB
  8935                           fsr2h	equ	0xFDA
  8936                           fsr2l	equ	0xFD9
  8937                           status	equ	0xFD8
  8938                           
  8939 ;; *************** function _OLED_init *****************
  8940 ;; Defined at:
  8941 ;;		line 146 in file "OLED_Display.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8955 ;;      Params:         0       0       0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used:    1
  8961 ;; Hardware stack levels required when called:    7
  8962 ;; This function calls:
  8963 ;;		_OLED_command
  8964 ;; This function is called by:
  8965 ;;		_Setupdisplay
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text39
  8970  002634                     __ptext39:
  8971                           	opt stack 0
  8972  002634                     _OLED_init:
  8973                           	opt stack 22
  8974                           
  8975                           ;OLED_Display.c: 148: OLED_command (0xae);
  8976                           
  8977                           ;incstack = 0
  8978  002634  0EAE               	movlw	174
  8979  002636  ECE6  F013         	call	_OLED_command
  8980                           
  8981                           ;OLED_Display.c: 149: OLED_command (0xa8);
  8982  00263A  0EA8               	movlw	168
  8983  00263C  ECE6  F013         	call	_OLED_command
  8984                           
  8985                           ;OLED_Display.c: 150: OLED_command (0x3f);
  8986  002640  0E3F               	movlw	63
  8987  002642  ECE6  F013         	call	_OLED_command
  8988                           
  8989                           ;OLED_Display.c: 151: OLED_command (0xd3);
  8990  002646  0ED3               	movlw	211
  8991  002648  ECE6  F013         	call	_OLED_command
  8992                           
  8993                           ;OLED_Display.c: 152: OLED_command (0x00);
  8994  00264C  0E00               	movlw	0
  8995  00264E  ECE6  F013         	call	_OLED_command
  8996                           
  8997                           ;OLED_Display.c: 153: OLED_command (0x40);
  8998  002652  0E40               	movlw	64
  8999  002654  ECE6  F013         	call	_OLED_command
  9000                           
  9001                           ;OLED_Display.c: 155: OLED_command (0xa0);
  9002  002658  0EA0               	movlw	160
  9003  00265A  ECE6  F013         	call	_OLED_command
  9004                           
  9005                           ;OLED_Display.c: 156: OLED_command (0xa1);
  9006  00265E  0EA1               	movlw	161
  9007  002660  ECE6  F013         	call	_OLED_command
  9008                           
  9009                           ;OLED_Display.c: 157: OLED_command (0xc0);
  9010  002664  0EC0               	movlw	192
  9011  002666  ECE6  F013         	call	_OLED_command
  9012                           
  9013                           ;OLED_Display.c: 159: OLED_command (0xc8);
  9014  00266A  0EC8               	movlw	200
  9015  00266C  ECE6  F013         	call	_OLED_command
  9016                           
  9017                           ;OLED_Display.c: 160: OLED_command (0xda);
  9018  002670  0EDA               	movlw	218
  9019  002672  ECE6  F013         	call	_OLED_command
  9020                           
  9021                           ;OLED_Display.c: 161: OLED_command (0x12);
  9022  002676  0E12               	movlw	18
  9023  002678  ECE6  F013         	call	_OLED_command
  9024                           
  9025                           ;OLED_Display.c: 162: OLED_command (0x81);
  9026  00267C  0E81               	movlw	129
  9027  00267E  ECE6  F013         	call	_OLED_command
  9028                           
  9029                           ;OLED_Display.c: 163: OLED_command (0xfF);
  9030  002682  0EFF               	movlw	255
  9031  002684  ECE6  F013         	call	_OLED_command
  9032                           
  9033                           ;OLED_Display.c: 164: OLED_command (0xa4);
  9034  002688  0EA4               	movlw	164
  9035  00268A  ECE6  F013         	call	_OLED_command
  9036                           
  9037                           ;OLED_Display.c: 165: OLED_command (0xa6);
  9038  00268E  0EA6               	movlw	166
  9039  002690  ECE6  F013         	call	_OLED_command
  9040                           
  9041                           ;OLED_Display.c: 166: OLED_command (0xd5);
  9042  002694  0ED5               	movlw	213
  9043  002696  ECE6  F013         	call	_OLED_command
  9044                           
  9045                           ;OLED_Display.c: 167: OLED_command (0x80);
  9046  00269A  0E80               	movlw	128
  9047  00269C  ECE6  F013         	call	_OLED_command
  9048                           
  9049                           ;OLED_Display.c: 168: OLED_command (0x8d);
  9050  0026A0  0E8D               	movlw	141
  9051  0026A2  ECE6  F013         	call	_OLED_command
  9052                           
  9053                           ;OLED_Display.c: 169: OLED_command (0x14);
  9054  0026A6  0E14               	movlw	20
  9055  0026A8  ECE6  F013         	call	_OLED_command
  9056                           
  9057                           ;OLED_Display.c: 170: OLED_command (0xAF);
  9058  0026AC  0EAF               	movlw	175
  9059  0026AE  ECE6  F013         	call	_OLED_command
  9060                           
  9061                           ;OLED_Display.c: 171: OLED_command (0x20);
  9062  0026B2  0E20               	movlw	32
  9063  0026B4  ECE6  F013         	call	_OLED_command
  9064                           
  9065                           ;OLED_Display.c: 172: OLED_command (0x00);
  9066  0026B8  0E00               	movlw	0
  9067  0026BA  ECE6  F013         	call	_OLED_command
  9068  0026BE  0012               	return		;funcret
  9069  0026C0                     __end_of_OLED_init:
  9070                           	opt stack 0
  9071                           tosu	equ	0xFFF
  9072                           tosh	equ	0xFFE
  9073                           tosl	equ	0xFFD
  9074                           pclath	equ	0xFFA
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           indf0	equ	0xFEF
  9083                           postinc0	equ	0xFEE
  9084                           fsr0h	equ	0xFEA
  9085                           fsr0l	equ	0xFE9
  9086                           wreg	equ	0xFE8
  9087                           indf2	equ	0xFDF
  9088                           postinc2	equ	0xFDE
  9089                           postdec2	equ	0xFDD
  9090                           plusw2	equ	0xFDB
  9091                           fsr2h	equ	0xFDA
  9092                           fsr2l	equ	0xFD9
  9093                           status	equ	0xFD8
  9094                           
  9095 ;; *************** function _OLED_command *****************
  9096 ;; Defined at:
  9097 ;;		line 10 in file "OLED_Display.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;  com             1    wreg     unsigned char 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;  com             1   36[COMRAM] unsigned char 
  9102 ;;  status          1   37[COMRAM] enum E8858
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  1    wreg      void 
  9105 ;; Registers used:
  9106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9112 ;;      Params:         0       0       0       0       0       0       0
  9113 ;;      Locals:         2       0       0       0       0       0       0
  9114 ;;      Temps:          0       0       0       0       0       0       0
  9115 ;;      Totals:         2       0       0       0       0       0       0
  9116 ;;Total ram usage:        2 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    6
  9119 ;; This function calls:
  9120 ;;		_I2C1_MasterWrite
  9121 ;; This function is called by:
  9122 ;;		_oledGotoYX
  9123 ;;		_OLED_init
  9124 ;;		_Display
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128                           	psect	text40
  9129  0027CC                     __ptext40:
  9130                           	opt stack 0
  9131  0027CC                     _OLED_command:
  9132                           	opt stack 22
  9133                           
  9134                           ;incstack = 0
  9135                           ;OLED_command@com stored from wreg
  9136  0027CC  6E25               	movwf	OLED_command@com,c
  9137                           
  9138                           ;OLED_Display.c: 12: Buff[0] = 0x80;
  9139  0027CE  0E80               	movlw	128
  9140  0027D0  0100               	movlb	0	; () banked
  9141  0027D2  6FF0               	movwf	_Buff& (0+255),b
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;OLED_Display.c: 14: Buff[1] = com;
  9145  0027D4  C025  F0F1         	movff	OLED_command@com,_Buff+1
  9146                           
  9147                           ; BSR set to: 0
  9148                           ;OLED_Display.c: 15: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9149  0027D8  0E02               	movlw	2
  9150  0027DA  6E26               	movwf	OLED_command@status,c
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;OLED_Display.c: 17: timeOut = 0;
  9154  0027DC  0E00               	movlw	0
  9155  0027DE  0100               	movlb	0	; () banked
  9156  0027E0  6FDE               	movwf	(_timeOut+1)& (0+255),b
  9157  0027E2  0E00               	movlw	0
  9158  0027E4  6FDD               	movwf	_timeOut& (0+255),b
  9159                           
  9160                           ;OLED_Display.c: 18: while (status != I2C1_MESSAGE_FAIL) {
  9161  0027E6  D02C               	goto	l6104
  9162  0027E8                     l6084:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;OLED_Display.c: 20: I2C1_MasterWrite(Buff,
  9166                           ;OLED_Display.c: 21: 2,
  9167                           ;OLED_Display.c: 22: 0x3C,
  9168                           ;OLED_Display.c: 23: &status);
  9169  0027E8  0EF0               	movlw	low _Buff
  9170  0027EA  0100               	movlb	0	; () banked
  9171  0027EC  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  9172  0027EE  0E00               	movlw	high _Buff
  9173  0027F0  0100               	movlb	0	; () banked
  9174  0027F2  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  9175  0027F4  0E00               	movlw	0
  9176  0027F6  0100               	movlb	0	; () banked
  9177  0027F8  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  9178  0027FA  0E02               	movlw	2
  9179  0027FC  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  9180  0027FE  0E00               	movlw	0
  9181  002800  0100               	movlb	0	; () banked
  9182  002802  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  9183  002804  0E3C               	movlw	60
  9184  002806  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  9185  002808  0E26               	movlw	low OLED_command@status
  9186  00280A  0100               	movlb	0	; () banked
  9187  00280C  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  9188  00280E  0E00               	movlw	high OLED_command@status
  9189  002810  0100               	movlb	0	; () banked
  9190  002812  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  9191  002814  ECEE  F015         	call	_I2C1_MasterWrite	;wreg free
  9192  002818                     l6086:
  9193  002818  0E02               	movlw	2
  9194  00281A  1826               	xorwf	OLED_command@status,w,c
  9195  00281C  B4D8               	btfsc	status,2,c
  9196  00281E  D7FC               	goto	l6086
  9197                           
  9198                           ;OLED_Display.c: 28: if (status == I2C1_MESSAGE_COMPLETE)
  9199  002820  5026               	movf	OLED_command@status,w,c
  9200  002822  B4D8               	btfsc	status,2,c
  9201  002824  0012               	return	
  9202                           
  9203                           ;OLED_Display.c: 30: if (timeOut == 100)
  9204                           
  9205                           ;OLED_Display.c: 29: break;
  9206  002826  0E64               	movlw	100
  9207  002828  0100               	movlb	0	; () banked
  9208  00282A  19DD               	xorwf	_timeOut& (0+255),w,b
  9209  00282C  0100               	movlb	0	; () banked
  9210  00282E  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  9211  002830  B4D8               	btfsc	status,2,c
  9212  002832  0012               	return	
  9213                           
  9214                           ; BSR set to: 0
  9215                           ;OLED_Display.c: 32: if (status == I2C1_MESSAGE_FAIL)
  9216                           
  9217                           ; BSR set to: 0
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;OLED_Display.c: 31: break;
  9221  002834  0426               	decf	OLED_command@status,w,c
  9222  002836  B4D8               	btfsc	status,2,c
  9223  002838  0012               	return	
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;OLED_Display.c: 34: else
  9227                           ;OLED_Display.c: 35: timeOut++;
  9228                           
  9229                           ; BSR set to: 0
  9230                           
  9231                           ; BSR set to: 0
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;OLED_Display.c: 33: break;
  9235  00283A  0100               	movlb	0	; () banked
  9236  00283C  4BDD               	infsnz	_timeOut& (0+255),f,b
  9237  00283E  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  9238  002840                     l6104:
  9239                           
  9240                           ; BSR set to: 0
  9241  002840  0426               	decf	OLED_command@status,w,c
  9242  002842  B4D8               	btfsc	status,2,c
  9243  002844  0012               	return	
  9244  002846  D7D0               	goto	l6084
  9245  002848                     __end_of_OLED_command:
  9246                           	opt stack 0
  9247                           tosu	equ	0xFFF
  9248                           tosh	equ	0xFFE
  9249                           tosl	equ	0xFFD
  9250                           pclath	equ	0xFFA
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodh	equ	0xFF4
  9256                           prodl	equ	0xFF3
  9257                           intcon	equ	0xFF2
  9258                           indf0	equ	0xFEF
  9259                           postinc0	equ	0xFEE
  9260                           fsr0h	equ	0xFEA
  9261                           fsr0l	equ	0xFE9
  9262                           wreg	equ	0xFE8
  9263                           indf2	equ	0xFDF
  9264                           postinc2	equ	0xFDE
  9265                           postdec2	equ	0xFDD
  9266                           plusw2	equ	0xFDB
  9267                           fsr2h	equ	0xFDA
  9268                           fsr2l	equ	0xFD9
  9269                           status	equ	0xFD8
  9270                           
  9271 ;; *************** function _SYSTEM_Initialize *****************
  9272 ;; Defined at:
  9273 ;;		line 112 in file "mcc_generated_files/mcc.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;		None
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;		None
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9287 ;;      Params:         0       0       0       0       0       0       0
  9288 ;;      Locals:         0       0       0       0       0       0       0
  9289 ;;      Temps:          0       0       0       0       0       0       0
  9290 ;;      Totals:         0       0       0       0       0       0       0
  9291 ;;Total ram usage:        0 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    7
  9294 ;; This function calls:
  9295 ;;		_ADC_Initialize
  9296 ;;		_EUSART1_Initialize
  9297 ;;		_I2C1_Initialize
  9298 ;;		_INTERRUPT_Initialize
  9299 ;;		_OSCILLATOR_Initialize
  9300 ;;		_PIN_MANAGER_Initialize
  9301 ;;		_TMR0_Initialize
  9302 ;;		_TMR2_Initialize
  9303 ;;		_begin
  9304 ;; This function is called by:
  9305 ;;		_main
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           	psect	text41
  9310  0028BC                     __ptext41:
  9311                           	opt stack 0
  9312  0028BC                     _SYSTEM_Initialize:
  9313                           	opt stack 23
  9314                           
  9315                           ;mcc.c: 114: OSCILLATOR_Initialize();
  9316                           
  9317                           ;incstack = 0
  9318  0028BC  ECC8  F018         	call	_OSCILLATOR_Initialize	;wreg free
  9319                           
  9320                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9321  0028C0  ECC3  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  9322                           
  9323                           ;mcc.c: 116: INTERRUPT_Initialize();
  9324  0028C4  ECB1  F018         	call	_INTERRUPT_Initialize	;wreg free
  9325                           
  9326                           ;mcc.c: 117: ADC_Initialize();
  9327  0028C8  EC7B  F018         	call	_ADC_Initialize	;wreg free
  9328                           
  9329                           ;mcc.c: 118: TMR0_Initialize();
  9330  0028CC  EC40  F018         	call	_TMR0_Initialize	;wreg free
  9331                           
  9332                           ;mcc.c: 119: TMR2_Initialize();
  9333  0028D0  EC2F  F018         	call	_TMR2_Initialize	;wreg free
  9334                           
  9335                           ;mcc.c: 120: EUSART1_Initialize();
  9336  0028D4  ECEC  F016         	call	_EUSART1_Initialize	;wreg free
  9337                           
  9338                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  9339  0028D8  0E00               	movlw	low _receiveArray
  9340  0028DA  0101               	movlb	1	; () banked
  9341  0028DC  6F39               	movwf	begin@ptr& (0+255),b
  9342  0028DE  0E01               	movlw	high _receiveArray
  9343  0028E0  0101               	movlb	1	; () banked
  9344  0028E2  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  9345  0028E4  0E28               	movlw	40
  9346  0028E6  0101               	movlb	1	; () banked
  9347  0028E8  6F3B               	movwf	begin@maxSize& (0+255),b
  9348  0028EA  0E03               	movlw	3
  9349  0028EC  0101               	movlb	1	; () banked
  9350  0028EE  6F3C               	movwf	begin@givenAddress& (0+255),b
  9351  0028F0  0E00               	movlw	0
  9352  0028F2  0101               	movlb	1	; () banked
  9353  0028F4  6F3D               	movwf	begin@error& (0+255),b
  9354  0028F6  0EEC               	movlw	low _Send_put
  9355  0028F8  0101               	movlb	1	; () banked
  9356  0028FA  6F3E               	movwf	begin@stufftosend& (0+255),b
  9357  0028FC  0E2E               	movlw	high _Send_put
  9358  0028FE  0101               	movlb	1	; () banked
  9359  002900  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  9360  002902  0E82               	movlw	low _Receive_get
  9361  002904  0101               	movlb	1	; () banked
  9362  002906  6F40               	movwf	begin@stufftoreceive& (0+255),b
  9363  002908  0E31               	movlw	high _Receive_get
  9364  00290A  0101               	movlb	1	; () banked
  9365  00290C  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  9366  00290E  0E0E               	movlw	low _Receive_available
  9367  002910  0101               	movlb	1	; () banked
  9368  002912  6F42               	movwf	begin@stuffavailable& (0+255),b
  9369  002914  0E31               	movlw	high _Receive_available
  9370  002916  0101               	movlb	1	; () banked
  9371  002918  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  9372  00291A  0E74               	movlw	low _Receive_peek
  9373  00291C  0101               	movlb	1	; () banked
  9374  00291E  6F44               	movwf	begin@stuffpeek& (0+255),b
  9375  002920  0E31               	movlw	high _Receive_peek
  9376  002922  0101               	movlb	1	; () banked
  9377  002924  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  9378  002926  EC68  F015         	call	_begin	;wreg free
  9379                           
  9380                           ;mcc.c: 122: I2C1_Initialize();
  9381  00292A  ECCE  F016         	call	_I2C1_Initialize	;wreg free
  9382  00292E  0012               	return		;funcret
  9383  002930                     __end_of_SYSTEM_Initialize:
  9384                           	opt stack 0
  9385                           tosu	equ	0xFFF
  9386                           tosh	equ	0xFFE
  9387                           tosl	equ	0xFFD
  9388                           pclath	equ	0xFFA
  9389                           tblptru	equ	0xFF8
  9390                           tblptrh	equ	0xFF7
  9391                           tblptrl	equ	0xFF6
  9392                           tablat	equ	0xFF5
  9393                           prodh	equ	0xFF4
  9394                           prodl	equ	0xFF3
  9395                           intcon	equ	0xFF2
  9396                           indf0	equ	0xFEF
  9397                           postinc0	equ	0xFEE
  9398                           fsr0h	equ	0xFEA
  9399                           fsr0l	equ	0xFE9
  9400                           wreg	equ	0xFE8
  9401                           indf2	equ	0xFDF
  9402                           postinc2	equ	0xFDE
  9403                           postdec2	equ	0xFDD
  9404                           plusw2	equ	0xFDB
  9405                           fsr2h	equ	0xFDA
  9406                           fsr2l	equ	0xFD9
  9407                           status	equ	0xFD8
  9408                           
  9409 ;; *************** function _begin *****************
  9410 ;; Defined at:
  9411 ;;		line 19 in file "FastTransfer.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  9414 ;;		 -> receiveArray(40), 
  9415 ;;  maxSize         1    2[BANK1 ] unsigned char 
  9416 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  9417 ;;  error           1    4[BANK1 ] unsigned char 
  9418 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  9419 ;;		 -> Send_put(1), 
  9420 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  9421 ;;		 -> Receive_get(1), 
  9422 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  9423 ;;		 -> Receive_available(2), 
  9424 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  9425 ;;		 -> Receive_peek(1), 
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;		None
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      void 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9437 ;;      Params:         0       0      13       0       0       0       0
  9438 ;;      Locals:         0       0       0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0
  9440 ;;      Totals:         0       0      13       0       0       0       0
  9441 ;;Total ram usage:       13 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:    5
  9444 ;; This function calls:
  9445 ;;		___awdiv
  9446 ;; This function is called by:
  9447 ;;		_SYSTEM_Initialize
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text42
  9452  002AD0                     __ptext42:
  9453                           	opt stack 0
  9454  002AD0                     _begin:
  9455                           	opt stack 24
  9456                           
  9457                           ;FastTransfer.c: 20: receiveArrayAddress = ptr;
  9458                           
  9459                           ;incstack = 0
  9460  002AD0  C139  F0D7         	movff	begin@ptr,_receiveArrayAddress
  9461  002AD4  C13A  F0D8         	movff	begin@ptr+1,_receiveArrayAddress+1
  9462                           
  9463                           ;FastTransfer.c: 21: moduleAddress = givenAddress;
  9464  002AD8  C13C  F03A         	movff	begin@givenAddress,_moduleAddress
  9465                           
  9466                           ;FastTransfer.c: 22: serial_write = stufftosend;
  9467  002ADC  C13E  F033         	movff	begin@stufftosend,_serial_write
  9468  002AE0  C13F  F034         	movff	begin@stufftosend+1,_serial_write+1
  9469                           
  9470                           ;FastTransfer.c: 23: serial_available = stuffavailable;
  9471  002AE4  C142  F02F         	movff	begin@stuffavailable,_serial_available
  9472  002AE8  C143  F030         	movff	begin@stuffavailable+1,_serial_available+1
  9473                           
  9474                           ;FastTransfer.c: 24: serial_peek = stuffpeek;
  9475  002AEC  C144  F0DB         	movff	begin@stuffpeek,_serial_peek
  9476  002AF0  C145  F0DC         	movff	begin@stuffpeek+1,_serial_peek+1
  9477                           
  9478                           ;FastTransfer.c: 25: serial_read = stufftoreceive;
  9479  002AF4  C140  F031         	movff	begin@stufftoreceive,_serial_read
  9480  002AF8  C141  F032         	movff	begin@stufftoreceive+1,_serial_read+1
  9481                           
  9482                           ;FastTransfer.c: 26: maxDataAddress = maxSize / 2;
  9483  002AFC  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  9484  002B00  6A1C               	clrf	___awdiv@dividend+1,c
  9485  002B02  0E00               	movlw	0
  9486  002B04  6E1E               	movwf	___awdiv@divisor+1,c
  9487  002B06  0E02               	movlw	2
  9488  002B08  6E1D               	movwf	___awdiv@divisor,c
  9489  002B0A  ECA4  F013         	call	___awdiv	;wreg free
  9490  002B0E  501B               	movf	?___awdiv,w,c
  9491  002B10  6E39               	movwf	_maxDataAddress,c
  9492                           
  9493                           ;FastTransfer.c: 27: sendStructAddress = (unsigned char*) & ring_buffer;
  9494  002B12  0E00               	movlw	low _ring_buffer
  9495  002B14  0100               	movlb	0	; () banked
  9496  002B16  6FD9               	movwf	_sendStructAddress& (0+255),b
  9497  002B18  0E02               	movlw	high _ring_buffer
  9498  002B1A  0100               	movlb	0	; () banked
  9499  002B1C  6FDA               	movwf	(_sendStructAddress+1)& (0+255),b
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;FastTransfer.c: 28: AKNAKsend = error;
  9503  002B1E  C13D  F036         	movff	begin@error,_AKNAKsend
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;FastTransfer.c: 29: alignErrorCounter = 0;
  9507  002B22  0E00               	movlw	0
  9508  002B24  0100               	movlb	0	; () banked
  9509  002B26  6FCA               	movwf	(_alignErrorCounter+1)& (0+255),b
  9510  002B28  0E00               	movlw	0
  9511  002B2A  6FC9               	movwf	_alignErrorCounter& (0+255),b
  9512                           
  9513                           ; BSR set to: 0
  9514  002B2C  0012               	return		;funcret
  9515  002B2E                     __end_of_begin:
  9516                           	opt stack 0
  9517                           tosu	equ	0xFFF
  9518                           tosh	equ	0xFFE
  9519                           tosl	equ	0xFFD
  9520                           pclath	equ	0xFFA
  9521                           tblptru	equ	0xFF8
  9522                           tblptrh	equ	0xFF7
  9523                           tblptrl	equ	0xFF6
  9524                           tablat	equ	0xFF5
  9525                           prodh	equ	0xFF4
  9526                           prodl	equ	0xFF3
  9527                           intcon	equ	0xFF2
  9528                           indf0	equ	0xFEF
  9529                           postinc0	equ	0xFEE
  9530                           fsr0h	equ	0xFEA
  9531                           fsr0l	equ	0xFE9
  9532                           wreg	equ	0xFE8
  9533                           indf2	equ	0xFDF
  9534                           postinc2	equ	0xFDE
  9535                           postdec2	equ	0xFDD
  9536                           plusw2	equ	0xFDB
  9537                           fsr2h	equ	0xFDA
  9538                           fsr2l	equ	0xFD9
  9539                           status	equ	0xFD8
  9540                           
  9541 ;; *************** function _TMR2_Initialize *****************
  9542 ;; Defined at:
  9543 ;;		line 62 in file "tmr2.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, status,2, status,0, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9557 ;;      Params:         0       0       0       0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0
  9559 ;;      Temps:          0       0       0       0       0       0       0
  9560 ;;      Totals:         0       0       0       0       0       0       0
  9561 ;;Total ram usage:        0 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:    5
  9564 ;; This function calls:
  9565 ;;		_TMR2_SetInterruptHandler
  9566 ;;		_TMR2_StartTimer
  9567 ;; This function is called by:
  9568 ;;		_SYSTEM_Initialize
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text43
  9573  00305E                     __ptext43:
  9574                           	opt stack 0
  9575  00305E                     _TMR2_Initialize:
  9576                           	opt stack 24
  9577                           
  9578                           ;tmr2.c: 67: T2CON = 0x7E;
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;incstack = 0
  9582  00305E  0E7E               	movlw	126
  9583  003060  6EBA               	movwf	4026,c	;volatile
  9584                           
  9585                           ;tmr2.c: 70: PR2 = 0x30;
  9586  003062  0E30               	movlw	48
  9587  003064  6EBB               	movwf	4027,c	;volatile
  9588                           
  9589                           ;tmr2.c: 73: TMR2 = 0x00;
  9590  003066  0E00               	movlw	0
  9591  003068  6EBC               	movwf	4028,c	;volatile
  9592                           
  9593                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  9594  00306A  929E               	bcf	3998,1,c	;volatile
  9595                           
  9596                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  9597  00306C  829D               	bsf	3997,1,c	;volatile
  9598                           
  9599                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  9600  00306E  0EE8               	movlw	low _TMR2_DefaultInterruptHandler
  9601  003070  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  9602  003072  0E31               	movlw	high _TMR2_DefaultInterruptHandler
  9603  003074  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  9604  003076  ECD4  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  9605                           
  9606                           ;tmr2.c: 85: TMR2_StartTimer();
  9607  00307A  ECEE  F018         	call	_TMR2_StartTimer	;wreg free
  9608  00307E  0012               	return		;funcret
  9609  003080                     __end_of_TMR2_Initialize:
  9610                           	opt stack 0
  9611                           tosu	equ	0xFFF
  9612                           tosh	equ	0xFFE
  9613                           tosl	equ	0xFFD
  9614                           pclath	equ	0xFFA
  9615                           tblptru	equ	0xFF8
  9616                           tblptrh	equ	0xFF7
  9617                           tblptrl	equ	0xFF6
  9618                           tablat	equ	0xFF5
  9619                           prodh	equ	0xFF4
  9620                           prodl	equ	0xFF3
  9621                           intcon	equ	0xFF2
  9622                           indf0	equ	0xFEF
  9623                           postinc0	equ	0xFEE
  9624                           fsr0h	equ	0xFEA
  9625                           fsr0l	equ	0xFE9
  9626                           wreg	equ	0xFE8
  9627                           indf2	equ	0xFDF
  9628                           postinc2	equ	0xFDE
  9629                           postdec2	equ	0xFDD
  9630                           plusw2	equ	0xFDB
  9631                           fsr2h	equ	0xFDA
  9632                           fsr2l	equ	0xFD9
  9633                           status	equ	0xFD8
  9634                           
  9635 ;; *************** function _TMR2_StartTimer *****************
  9636 ;; Defined at:
  9637 ;;		line 88 in file "tmr2.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;		None
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;		None
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  1    wreg      void 
  9644 ;; Registers used:
  9645 ;;		None
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/0
  9648 ;;		On exit  : 0/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9651 ;;      Params:         0       0       0       0       0       0       0
  9652 ;;      Locals:         0       0       0       0       0       0       0
  9653 ;;      Temps:          0       0       0       0       0       0       0
  9654 ;;      Totals:         0       0       0       0       0       0       0
  9655 ;;Total ram usage:        0 bytes
  9656 ;; Hardware stack levels used:    1
  9657 ;; Hardware stack levels required when called:    4
  9658 ;; This function calls:
  9659 ;;		Nothing
  9660 ;; This function is called by:
  9661 ;;		_TMR2_Initialize
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text44
  9666  0031DC                     __ptext44:
  9667                           	opt stack 0
  9668  0031DC                     _TMR2_StartTimer:
  9669                           	opt stack 24
  9670                           
  9671                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  9672                           
  9673                           ;incstack = 0
  9674  0031DC  84BA               	bsf	4026,2,c	;volatile
  9675  0031DE  0012               	return		;funcret
  9676  0031E0                     __end_of_TMR2_StartTimer:
  9677                           	opt stack 0
  9678                           tosu	equ	0xFFF
  9679                           tosh	equ	0xFFE
  9680                           tosl	equ	0xFFD
  9681                           pclath	equ	0xFFA
  9682                           tblptru	equ	0xFF8
  9683                           tblptrh	equ	0xFF7
  9684                           tblptrl	equ	0xFF6
  9685                           tablat	equ	0xFF5
  9686                           prodh	equ	0xFF4
  9687                           prodl	equ	0xFF3
  9688                           intcon	equ	0xFF2
  9689                           indf0	equ	0xFEF
  9690                           postinc0	equ	0xFEE
  9691                           fsr0h	equ	0xFEA
  9692                           fsr0l	equ	0xFE9
  9693                           wreg	equ	0xFE8
  9694                           indf2	equ	0xFDF
  9695                           postinc2	equ	0xFDE
  9696                           postdec2	equ	0xFDD
  9697                           plusw2	equ	0xFDB
  9698                           fsr2h	equ	0xFDA
  9699                           fsr2l	equ	0xFD9
  9700                           status	equ	0xFD8
  9701                           
  9702 ;; *************** function _TMR2_SetInterruptHandler *****************
  9703 ;; Defined at:
  9704 ;;		line 291 in file "tmr2.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  InterruptHan    2   26[COMRAM] PTR void 
  9707 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;		None
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9719 ;;      Params:         2       0       0       0       0       0       0
  9720 ;;      Locals:         0       0       0       0       0       0       0
  9721 ;;      Temps:          0       0       0       0       0       0       0
  9722 ;;      Totals:         2       0       0       0       0       0       0
  9723 ;;Total ram usage:        2 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:    4
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_TMR2_Initialize
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text45
  9734  0031A8                     __ptext45:
  9735                           	opt stack 0
  9736  0031A8                     _TMR2_SetInterruptHandler:
  9737                           	opt stack 24
  9738                           
  9739                           ;tmr2.c: 292: TMR2_InterruptHandler = InterruptHandler;
  9740                           
  9741                           ;incstack = 0
  9742  0031A8  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9743  0031AC  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9744  0031B0  0012               	return		;funcret
  9745  0031B2                     __end_of_TMR2_SetInterruptHandler:
  9746                           	opt stack 0
  9747                           tosu	equ	0xFFF
  9748                           tosh	equ	0xFFE
  9749                           tosl	equ	0xFFD
  9750                           pclath	equ	0xFFA
  9751                           tblptru	equ	0xFF8
  9752                           tblptrh	equ	0xFF7
  9753                           tblptrl	equ	0xFF6
  9754                           tablat	equ	0xFF5
  9755                           prodh	equ	0xFF4
  9756                           prodl	equ	0xFF3
  9757                           intcon	equ	0xFF2
  9758                           indf0	equ	0xFEF
  9759                           postinc0	equ	0xFEE
  9760                           fsr0h	equ	0xFEA
  9761                           fsr0l	equ	0xFE9
  9762                           wreg	equ	0xFE8
  9763                           indf2	equ	0xFDF
  9764                           postinc2	equ	0xFDE
  9765                           postdec2	equ	0xFDD
  9766                           plusw2	equ	0xFDB
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8
  9770                           
  9771 ;; *************** function _TMR0_Initialize *****************
  9772 ;; Defined at:
  9773 ;;		line 23 in file "tmr0.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;		None
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;		None
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      void 
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9787 ;;      Params:         0       0       0       0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0       0       0
  9790 ;;      Totals:         0       0       0       0       0       0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    5
  9794 ;; This function calls:
  9795 ;;		_TMR0_StartTimer
  9796 ;; This function is called by:
  9797 ;;		_SYSTEM_Initialize
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           	psect	text46
  9802  003080                     __ptext46:
  9803                           	opt stack 0
  9804  003080                     _TMR0_Initialize:
  9805                           	opt stack 24
  9806                           
  9807                           ;tmr0.c: 27: T0CON = 0x94;
  9808                           
  9809                           ;incstack = 0
  9810  003080  0E94               	movlw	148
  9811  003082  6ED5               	movwf	4053,c	;volatile
  9812                           
  9813                           ;tmr0.c: 30: TMR0H = 0xCF;
  9814  003084  0ECF               	movlw	207
  9815  003086  6ED7               	movwf	4055,c	;volatile
  9816                           
  9817                           ;tmr0.c: 33: TMR0L = 0x2C;
  9818  003088  0E2C               	movlw	44
  9819  00308A  6ED6               	movwf	4054,c	;volatile
  9820                           
  9821                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  9822  00308C  0ECF               	movlw	207
  9823  00308E  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  9824  003090  0E2C               	movlw	44
  9825  003092  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  9826                           
  9827                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  9828  003094  94F2               	bcf	intcon,2,c	;volatile
  9829                           
  9830                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  9831  003096  8AF2               	bsf	intcon,5,c	;volatile
  9832                           
  9833                           ;tmr0.c: 45: TMR0_StartTimer();
  9834  003098  ECF0  F018         	call	_TMR0_StartTimer	;wreg free
  9835  00309C  0012               	return		;funcret
  9836  00309E                     __end_of_TMR0_Initialize:
  9837                           	opt stack 0
  9838                           tosu	equ	0xFFF
  9839                           tosh	equ	0xFFE
  9840                           tosl	equ	0xFFD
  9841                           pclath	equ	0xFFA
  9842                           tblptru	equ	0xFF8
  9843                           tblptrh	equ	0xFF7
  9844                           tblptrl	equ	0xFF6
  9845                           tablat	equ	0xFF5
  9846                           prodh	equ	0xFF4
  9847                           prodl	equ	0xFF3
  9848                           intcon	equ	0xFF2
  9849                           indf0	equ	0xFEF
  9850                           postinc0	equ	0xFEE
  9851                           fsr0h	equ	0xFEA
  9852                           fsr0l	equ	0xFE9
  9853                           wreg	equ	0xFE8
  9854                           indf2	equ	0xFDF
  9855                           postinc2	equ	0xFDE
  9856                           postdec2	equ	0xFDD
  9857                           plusw2	equ	0xFDB
  9858                           fsr2h	equ	0xFDA
  9859                           fsr2l	equ	0xFD9
  9860                           status	equ	0xFD8
  9861                           
  9862 ;; *************** function _TMR0_StartTimer *****************
  9863 ;; Defined at:
  9864 ;;		line 48 in file "tmr0.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		None
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9878 ;;      Params:         0       0       0       0       0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0
  9881 ;;      Totals:         0       0       0       0       0       0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:    4
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_TMR0_Initialize
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text47
  9893  0031E0                     __ptext47:
  9894                           	opt stack 0
  9895  0031E0                     _TMR0_StartTimer:
  9896                           	opt stack 24
  9897                           
  9898                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
  9899                           
  9900                           ;incstack = 0
  9901  0031E0  8ED5               	bsf	4053,7,c	;volatile
  9902  0031E2  0012               	return		;funcret
  9903  0031E4                     __end_of_TMR0_StartTimer:
  9904                           	opt stack 0
  9905                           tosu	equ	0xFFF
  9906                           tosh	equ	0xFFE
  9907                           tosl	equ	0xFFD
  9908                           pclath	equ	0xFFA
  9909                           tblptru	equ	0xFF8
  9910                           tblptrh	equ	0xFF7
  9911                           tblptrl	equ	0xFF6
  9912                           tablat	equ	0xFF5
  9913                           prodh	equ	0xFF4
  9914                           prodl	equ	0xFF3
  9915                           intcon	equ	0xFF2
  9916                           indf0	equ	0xFEF
  9917                           postinc0	equ	0xFEE
  9918                           fsr0h	equ	0xFEA
  9919                           fsr0l	equ	0xFE9
  9920                           wreg	equ	0xFE8
  9921                           indf2	equ	0xFDF
  9922                           postinc2	equ	0xFDE
  9923                           postdec2	equ	0xFDD
  9924                           plusw2	equ	0xFDB
  9925                           fsr2h	equ	0xFDA
  9926                           fsr2l	equ	0xFD9
  9927                           status	equ	0xFD8
  9928                           
  9929 ;; *************** function _PIN_MANAGER_Initialize *****************
  9930 ;; Defined at:
  9931 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;		None
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9945 ;;      Params:         0       0       0       0       0       0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0
  9948 ;;      Totals:         0       0       0       0       0       0       0
  9949 ;;Total ram usage:        0 bytes
  9950 ;; Hardware stack levels used:    1
  9951 ;; Hardware stack levels required when called:    4
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_SYSTEM_Initialize
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text48
  9960  002B86                     __ptext48:
  9961                           	opt stack 0
  9962  002B86                     _PIN_MANAGER_Initialize:
  9963                           	opt stack 25
  9964                           
  9965                           ;pin_manager.c: 52: LATA = 0x00;
  9966                           
  9967                           ;incstack = 0
  9968  002B86  0E00               	movlw	0
  9969  002B88  6E89               	movwf	3977,c	;volatile
  9970                           
  9971                           ;pin_manager.c: 53: TRISA = 0xF7;
  9972  002B8A  0EF7               	movlw	247
  9973  002B8C  6E92               	movwf	3986,c	;volatile
  9974                           
  9975                           ;pin_manager.c: 54: ANSELA = 0x20;
  9976  002B8E  0E20               	movlw	32
  9977  002B90  010F               	movlb	15	; () banked
  9978  002B92  6F38               	movwf	56,b	;volatile
  9979                           
  9980                           ;pin_manager.c: 56: LATB = 0x00;
  9981  002B94  0E00               	movlw	0
  9982  002B96  6E8A               	movwf	3978,c	;volatile
  9983                           
  9984                           ;pin_manager.c: 57: TRISB = 0xD7;
  9985  002B98  0ED7               	movlw	215
  9986  002B9A  6E93               	movwf	3987,c	;volatile
  9987                           
  9988                           ;pin_manager.c: 58: ANSELB = 0x00;
  9989  002B9C  0E00               	movlw	0
  9990  002B9E  010F               	movlb	15	; () banked
  9991  002BA0  6F39               	movwf	57,b	;volatile
  9992                           
  9993                           ;pin_manager.c: 59: WPUB = 0x00;
  9994  002BA2  0E00               	movlw	0
  9995  002BA4  6E61               	movwf	3937,c	;volatile
  9996                           
  9997                           ;pin_manager.c: 61: LATC = 0x18;
  9998  002BA6  0E18               	movlw	24
  9999  002BA8  6E8B               	movwf	3979,c	;volatile
 10000                           
 10001                           ;pin_manager.c: 62: TRISC = 0xDF;
 10002  002BAA  0EDF               	movlw	223
 10003  002BAC  6E94               	movwf	3988,c	;volatile
 10004                           
 10005                           ;pin_manager.c: 65: LATD = 0x00;
 10006  002BAE  0E00               	movlw	0
 10007  002BB0  6E8C               	movwf	3980,c	;volatile
 10008                           
 10009                           ;pin_manager.c: 66: TRISD = 0xFD;
 10010  002BB2  0EFD               	movlw	253
 10011  002BB4  6E95               	movwf	3989,c	;volatile
 10012                           
 10013                           ;pin_manager.c: 67: ANSELD = 0xDD;
 10014  002BB6  0EDD               	movlw	221
 10015  002BB8  010F               	movlb	15	; () banked
 10016  002BBA  6F3B               	movwf	59,b	;volatile
 10017                           
 10018                           ;pin_manager.c: 69: LATE = 0x00;
 10019  002BBC  0E00               	movlw	0
 10020  002BBE  6E8D               	movwf	3981,c	;volatile
 10021                           
 10022                           ;pin_manager.c: 70: TRISE = 0x00;
 10023  002BC0  0E00               	movlw	0
 10024  002BC2  6E96               	movwf	3990,c	;volatile
 10025                           
 10026                           ;pin_manager.c: 71: ANSELE = 0x00;
 10027  002BC4  0E00               	movlw	0
 10028  002BC6  010F               	movlb	15	; () banked
 10029  002BC8  6F3C               	movwf	60,b	;volatile
 10030                           
 10031                           ;pin_manager.c: 73: ANSELC = 0xE4;
 10032  002BCA  0EE4               	movlw	228
 10033  002BCC  010F               	movlb	15	; () banked
 10034  002BCE  6F3A               	movwf	58,b	;volatile
 10035                           
 10036                           ; BSR set to: 15
 10037                           ;pin_manager.c: 77: TRISCbits.TRISC5=0;
 10038  002BD0  9A94               	bcf	3988,5,c	;volatile
 10039                           
 10040                           ; BSR set to: 15
 10041                           ;pin_manager.c: 78: INTCON2bits.nRBPU = 0x01;
 10042  002BD2  8EF1               	bsf	intcon2,7,c	;volatile
 10043                           
 10044                           ; BSR set to: 15
 10045                           ;pin_manager.c: 81: LATCbits.LATC5 = 0;
 10046  002BD4  9A8B               	bcf	3979,5,c	;volatile
 10047                           
 10048                           ; BSR set to: 15
 10049                           ;pin_manager.c: 82: TRISCbits.RC1 = 0;
 10050  002BD6  9294               	bcf	3988,1,c	;volatile
 10051                           
 10052                           ; BSR set to: 15
 10053                           ;pin_manager.c: 83: TRISAbits.RA6 = 0;
 10054  002BD8  9C92               	bcf	3986,6,c	;volatile
 10055                           
 10056                           ; BSR set to: 15
 10057  002BDA  0012               	return		;funcret
 10058  002BDC                     __end_of_PIN_MANAGER_Initialize:
 10059                           	opt stack 0
 10060                           tosu	equ	0xFFF
 10061                           tosh	equ	0xFFE
 10062                           tosl	equ	0xFFD
 10063                           pclath	equ	0xFFA
 10064                           tblptru	equ	0xFF8
 10065                           tblptrh	equ	0xFF7
 10066                           tblptrl	equ	0xFF6
 10067                           tablat	equ	0xFF5
 10068                           prodh	equ	0xFF4
 10069                           prodl	equ	0xFF3
 10070                           intcon	equ	0xFF2
 10071                           intcon2	equ	0xFF1
 10072                           indf0	equ	0xFEF
 10073                           postinc0	equ	0xFEE
 10074                           fsr0h	equ	0xFEA
 10075                           fsr0l	equ	0xFE9
 10076                           wreg	equ	0xFE8
 10077                           indf2	equ	0xFDF
 10078                           postinc2	equ	0xFDE
 10079                           postdec2	equ	0xFDD
 10080                           plusw2	equ	0xFDB
 10081                           fsr2h	equ	0xFDA
 10082                           fsr2l	equ	0xFD9
 10083                           status	equ	0xFD8
 10084                           
 10085 ;; *************** function _OSCILLATOR_Initialize *****************
 10086 ;; Defined at:
 10087 ;;		line 125 in file "mcc_generated_files/mcc.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;		None
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;		None
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg, status,2
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10101 ;;      Params:         0       0       0       0       0       0       0
 10102 ;;      Locals:         0       0       0       0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0       0       0
 10104 ;;      Totals:         0       0       0       0       0       0       0
 10105 ;;Total ram usage:        0 bytes
 10106 ;; Hardware stack levels used:    1
 10107 ;; Hardware stack levels required when called:    4
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		_SYSTEM_Initialize
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           	psect	text49
 10116  003190                     __ptext49:
 10117                           	opt stack 0
 10118  003190                     _OSCILLATOR_Initialize:
 10119                           	opt stack 25
 10120                           
 10121                           ;mcc.c: 128: OSCCON = 0x72;
 10122                           
 10123                           ; BSR set to: 15
 10124                           ;incstack = 0
 10125  003190  0E72               	movlw	114
 10126  003192  6ED3               	movwf	4051,c	;volatile
 10127                           
 10128                           ;mcc.c: 130: OSCCON2 = 0x04;
 10129  003194  0E04               	movlw	4
 10130  003196  6ED2               	movwf	4050,c	;volatile
 10131                           
 10132                           ;mcc.c: 132: OSCTUNE = 0x00;
 10133  003198  0E00               	movlw	0
 10134  00319A  6E9B               	movwf	3995,c	;volatile
 10135  00319C  0012               	return		;funcret
 10136  00319E                     __end_of_OSCILLATOR_Initialize:
 10137                           	opt stack 0
 10138                           tosu	equ	0xFFF
 10139                           tosh	equ	0xFFE
 10140                           tosl	equ	0xFFD
 10141                           pclath	equ	0xFFA
 10142                           tblptru	equ	0xFF8
 10143                           tblptrh	equ	0xFF7
 10144                           tblptrl	equ	0xFF6
 10145                           tablat	equ	0xFF5
 10146                           prodh	equ	0xFF4
 10147                           prodl	equ	0xFF3
 10148                           intcon	equ	0xFF2
 10149                           intcon2	equ	0xFF1
 10150                           indf0	equ	0xFEF
 10151                           postinc0	equ	0xFEE
 10152                           fsr0h	equ	0xFEA
 10153                           fsr0l	equ	0xFE9
 10154                           wreg	equ	0xFE8
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           plusw2	equ	0xFDB
 10159                           fsr2h	equ	0xFDA
 10160                           fsr2l	equ	0xFD9
 10161                           status	equ	0xFD8
 10162                           
 10163 ;; *************** function _INTERRUPT_Initialize *****************
 10164 ;; Defined at:
 10165 ;;		line 8 in file "mcc_generated_files/interrupt_manager.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;		None
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  1    wreg      void 
 10172 ;; Registers used:
 10173 ;;		None
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10179 ;;      Params:         0       0       0       0       0       0       0
 10180 ;;      Locals:         0       0       0       0       0       0       0
 10181 ;;      Temps:          0       0       0       0       0       0       0
 10182 ;;      Totals:         0       0       0       0       0       0       0
 10183 ;;Total ram usage:        0 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; Hardware stack levels required when called:    4
 10186 ;; This function calls:
 10187 ;;		Nothing
 10188 ;; This function is called by:
 10189 ;;		_SYSTEM_Initialize
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text50
 10194  003162                     __ptext50:
 10195                           	opt stack 0
 10196  003162                     _INTERRUPT_Initialize:
 10197                           	opt stack 25
 10198                           
 10199                           ;interrupt_manager.c: 11: RCONbits.IPEN = 0;
 10200                           
 10201                           ;incstack = 0
 10202  003162  9ED0               	bcf	4048,7,c	;volatile
 10203                           
 10204                           ;interrupt_manager.c: 16: IPR1bits.RC1IP = 0;
 10205  003164  9A9F               	bcf	3999,5,c	;volatile
 10206                           
 10207                           ;interrupt_manager.c: 18: IPR1bits.TX1IP = 0;
 10208  003166  989F               	bcf	3999,4,c	;volatile
 10209                           
 10210                           ;interrupt_manager.c: 20: INTCON2bits.TMR0IP = 0;
 10211  003168  94F1               	bcf	intcon2,2,c	;volatile
 10212                           
 10213                           ;interrupt_manager.c: 22: IPR1bits.ADIP = 0;
 10214  00316A  9C9F               	bcf	3999,6,c	;volatile
 10215                           
 10216                           ;interrupt_manager.c: 24: IPR1bits.SSP1IP = 0;
 10217  00316C  969F               	bcf	3999,3,c	;volatile
 10218                           
 10219                           ;interrupt_manager.c: 26: IPR2bits.BCL1IP = 0;
 10220  00316E  96A2               	bcf	4002,3,c	;volatile
 10221                           
 10222                           ;interrupt_manager.c: 27: IPR1bits.TMR2IP=0;
 10223  003170  929F               	bcf	3999,1,c	;volatile
 10224  003172  0012               	return		;funcret
 10225  003174                     __end_of_INTERRUPT_Initialize:
 10226                           	opt stack 0
 10227                           tosu	equ	0xFFF
 10228                           tosh	equ	0xFFE
 10229                           tosl	equ	0xFFD
 10230                           pclath	equ	0xFFA
 10231                           tblptru	equ	0xFF8
 10232                           tblptrh	equ	0xFF7
 10233                           tblptrl	equ	0xFF6
 10234                           tablat	equ	0xFF5
 10235                           prodh	equ	0xFF4
 10236                           prodl	equ	0xFF3
 10237                           intcon	equ	0xFF2
 10238                           intcon2	equ	0xFF1
 10239                           indf0	equ	0xFEF
 10240                           postinc0	equ	0xFEE
 10241                           fsr0h	equ	0xFEA
 10242                           fsr0l	equ	0xFE9
 10243                           wreg	equ	0xFE8
 10244                           indf2	equ	0xFDF
 10245                           postinc2	equ	0xFDE
 10246                           postdec2	equ	0xFDD
 10247                           plusw2	equ	0xFDB
 10248                           fsr2h	equ	0xFDA
 10249                           fsr2l	equ	0xFD9
 10250                           status	equ	0xFD8
 10251                           
 10252 ;; *************** function _I2C1_Initialize *****************
 10253 ;; Defined at:
 10254 ;;		line 151 in file "mcc_generated_files/i2c1.c"
 10255 ;; Parameters:    Size  Location     Type
 10256 ;;		None
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;		None
 10259 ;; Return value:  Size  Location     Type
 10260 ;;                  1    wreg      void 
 10261 ;; Registers used:
 10262 ;;		wreg, status,2, status,0
 10263 ;; Tracked objects:
 10264 ;;		On entry : 0/0
 10265 ;;		On exit  : 0/0
 10266 ;;		Unchanged: 0/0
 10267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10268 ;;      Params:         0       0       0       0       0       0       0
 10269 ;;      Locals:         0       0       0       0       0       0       0
 10270 ;;      Temps:          0       0       0       0       0       0       0
 10271 ;;      Totals:         0       0       0       0       0       0       0
 10272 ;;Total ram usage:        0 bytes
 10273 ;; Hardware stack levels used:    1
 10274 ;; Hardware stack levels required when called:    4
 10275 ;; This function calls:
 10276 ;;		Nothing
 10277 ;; This function is called by:
 10278 ;;		_SYSTEM_Initialize
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           	psect	text51
 10283  002D9C                     __ptext51:
 10284                           	opt stack 0
 10285  002D9C                     _I2C1_Initialize:
 10286                           	opt stack 25
 10287                           
 10288                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
 10289                           
 10290                           ;incstack = 0
 10291  002D9C  0EEB               	movlw	low _i2c1_tr_queue
 10292  002D9E  0100               	movlb	0	; () banked
 10293  002DA0  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 10294  002DA2  0E00               	movlw	high _i2c1_tr_queue
 10295  002DA4  0100               	movlb	0	; () banked
 10296  002DA6  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 10297                           
 10298                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
 10299  002DA8  0EEB               	movlw	low _i2c1_tr_queue
 10300  002DAA  0100               	movlb	0	; () banked
 10301  002DAC  6FB8               	movwf	_i2c1_object& (0+255),b
 10302  002DAE  0E00               	movlw	high _i2c1_tr_queue
 10303  002DB0  0100               	movlb	0	; () banked
 10304  002DB2  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
 10308  002DB4  0100               	movlb	0	; () banked
 10309  002DB6  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
 10313  002DB8  0100               	movlb	0	; () banked
 10314  002DBA  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
 10318  002DBC  0E00               	movlw	0
 10319  002DBE  0100               	movlb	0	; () banked
 10320  002DC0  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;i2c1.c: 161: SSP1STAT = 0x80;
 10324  002DC2  0E80               	movlw	128
 10325  002DC4  6EC7               	movwf	4039,c	;volatile
 10326                           
 10327                           ; BSR set to: 0
 10328                           ;i2c1.c: 163: SSP1CON1 = 0x28;
 10329  002DC6  0E28               	movlw	40
 10330  002DC8  6EC6               	movwf	4038,c	;volatile
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;i2c1.c: 165: SSP1CON3 = 0x00;
 10334  002DCA  0E00               	movlw	0
 10335  002DCC  6ECB               	movwf	4043,c	;volatile
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;i2c1.c: 167: SSP1ADD = 0x03;
 10339  002DCE  0E03               	movlw	3
 10340  002DD0  6EC8               	movwf	4040,c	;volatile
 10341                           
 10342                           ; BSR set to: 0
 10343                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
 10344  002DD2  969E               	bcf	3998,3,c	;volatile
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
 10348  002DD4  869D               	bsf	3997,3,c	;volatile
 10349                           
 10350                           ; BSR set to: 0
 10351  002DD6  0012               	return		;funcret
 10352  002DD8                     __end_of_I2C1_Initialize:
 10353                           	opt stack 0
 10354                           tosu	equ	0xFFF
 10355                           tosh	equ	0xFFE
 10356                           tosl	equ	0xFFD
 10357                           pclath	equ	0xFFA
 10358                           tblptru	equ	0xFF8
 10359                           tblptrh	equ	0xFF7
 10360                           tblptrl	equ	0xFF6
 10361                           tablat	equ	0xFF5
 10362                           prodh	equ	0xFF4
 10363                           prodl	equ	0xFF3
 10364                           intcon	equ	0xFF2
 10365                           intcon2	equ	0xFF1
 10366                           indf0	equ	0xFEF
 10367                           postinc0	equ	0xFEE
 10368                           fsr0h	equ	0xFEA
 10369                           fsr0l	equ	0xFE9
 10370                           wreg	equ	0xFE8
 10371                           indf2	equ	0xFDF
 10372                           postinc2	equ	0xFDE
 10373                           postdec2	equ	0xFDD
 10374                           plusw2	equ	0xFDB
 10375                           fsr2h	equ	0xFDA
 10376                           fsr2l	equ	0xFD9
 10377                           status	equ	0xFD8
 10378                           
 10379 ;; *************** function _EUSART1_Initialize *****************
 10380 ;; Defined at:
 10381 ;;		line 21 in file "UART.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;		None
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;		None
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  1    wreg      void 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10395 ;;      Params:         0       0       0       0       0       0       0
 10396 ;;      Locals:         0       0       0       0       0       0       0
 10397 ;;      Temps:          0       0       0       0       0       0       0
 10398 ;;      Totals:         0       0       0       0       0       0       0
 10399 ;;Total ram usage:        0 bytes
 10400 ;; Hardware stack levels used:    1
 10401 ;; Hardware stack levels required when called:    6
 10402 ;; This function calls:
 10403 ;;		_UART_buff_init
 10404 ;; This function is called by:
 10405 ;;		_SYSTEM_Initialize
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text52
 10410  002DD8                     __ptext52:
 10411                           	opt stack 0
 10412  002DD8                     _EUSART1_Initialize:
 10413                           	opt stack 23
 10414                           
 10415                           ;UART.c: 23: PIE1bits.RC1IE = 0;
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;incstack = 0
 10419  002DD8  9A9D               	bcf	3997,5,c	;volatile
 10420                           
 10421                           ;UART.c: 24: PIE1bits.TX1IE = 0;
 10422  002DDA  989D               	bcf	3997,4,c	;volatile
 10423                           
 10424                           ;UART.c: 29: BAUD1CON = 0x48;
 10425  002DDC  0E48               	movlw	72
 10426  002DDE  6EB8               	movwf	4024,c	;volatile
 10427                           
 10428                           ;UART.c: 32: RC1STA = 0x98;
 10429  002DE0  0E98               	movlw	152
 10430  002DE2  6EAB               	movwf	4011,c	;volatile
 10431                           
 10432                           ;UART.c: 35: TX1STA = 0x26;
 10433  002DE4  0E26               	movlw	38
 10434  002DE6  6EAC               	movwf	4012,c	;volatile
 10435                           
 10436                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
 10437  002DE8  0E67               	movlw	103
 10438  002DEA  6EAF               	movwf	4015,c	;volatile
 10439                           
 10440                           ;UART.c: 41: SPBRGH1 = 0x00;
 10441  002DEC  0E00               	movlw	0
 10442  002DEE  6EB0               	movwf	4016,c	;volatile
 10443                           
 10444                           ;UART.c: 44: TXREG1 = 0x00;
 10445  002DF0  0E00               	movlw	0
 10446  002DF2  6EAD               	movwf	4013,c	;volatile
 10447                           
 10448                           ;UART.c: 47: RCREG1 = 0x00;
 10449  002DF4  0E00               	movlw	0
 10450  002DF6  6EAE               	movwf	4014,c	;volatile
 10451                           
 10452                           ;UART.c: 49: UART_buff_init(&input_buffer);
 10453  002DF8  0E00               	movlw	low _input_buffer
 10454  002DFA  6E23               	movwf	UART_buff_init@_this,c
 10455  002DFC  0E04               	movlw	high _input_buffer
 10456  002DFE  6E24               	movwf	UART_buff_init@_this+1,c
 10457  002E00  EC4F  F018         	call	_UART_buff_init	;wreg free
 10458                           
 10459                           ;UART.c: 50: UART_buff_init(&output_buffer);
 10460  002E04  0E00               	movlw	low _output_buffer
 10461  002E06  6E23               	movwf	UART_buff_init@_this,c
 10462  002E08  0E05               	movlw	high _output_buffer
 10463  002E0A  6E24               	movwf	UART_buff_init@_this+1,c
 10464  002E0C  EC4F  F018         	call	_UART_buff_init	;wreg free
 10465                           
 10466                           ;UART.c: 52: PIE1bits.RC1IE = 1;
 10467  002E10  8A9D               	bsf	3997,5,c	;volatile
 10468  002E12  0012               	return		;funcret
 10469  002E14                     __end_of_EUSART1_Initialize:
 10470                           	opt stack 0
 10471                           tosu	equ	0xFFF
 10472                           tosh	equ	0xFFE
 10473                           tosl	equ	0xFFD
 10474                           pclath	equ	0xFFA
 10475                           tblptru	equ	0xFF8
 10476                           tblptrh	equ	0xFF7
 10477                           tblptrl	equ	0xFF6
 10478                           tablat	equ	0xFF5
 10479                           prodh	equ	0xFF4
 10480                           prodl	equ	0xFF3
 10481                           intcon	equ	0xFF2
 10482                           intcon2	equ	0xFF1
 10483                           indf0	equ	0xFEF
 10484                           postinc0	equ	0xFEE
 10485                           fsr0h	equ	0xFEA
 10486                           fsr0l	equ	0xFE9
 10487                           wreg	equ	0xFE8
 10488                           indf2	equ	0xFDF
 10489                           postinc2	equ	0xFDE
 10490                           postdec2	equ	0xFDD
 10491                           plusw2	equ	0xFDB
 10492                           fsr2h	equ	0xFDA
 10493                           fsr2l	equ	0xFD9
 10494                           status	equ	0xFD8
 10495                           
 10496 ;; *************** function _UART_buff_init *****************
 10497 ;; Defined at:
 10498 ;;		line 56 in file "UART.c"
 10499 ;; Parameters:    Size  Location     Type
 10500 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
 10501 ;;		 -> output_buffer(206), input_buffer(206), 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10513 ;;      Params:         2       0       0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0
 10516 ;;      Totals:         2       0       0       0       0       0       0
 10517 ;;Total ram usage:        2 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    5
 10520 ;; This function calls:
 10521 ;;		_memset
 10522 ;; This function is called by:
 10523 ;;		_EUSART1_Initialize
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text53
 10528  00309E                     __ptext53:
 10529                           	opt stack 0
 10530  00309E                     _UART_buff_init:
 10531                           	opt stack 23
 10532                           
 10533                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
 10534                           
 10535                           ;incstack = 0
 10536  00309E  C023  F01B         	movff	UART_buff_init@_this,memset@p1
 10537  0030A2  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
 10538  0030A6  0E00               	movlw	0
 10539  0030A8  6E1E               	movwf	memset@c+1,c
 10540  0030AA  0E00               	movlw	0
 10541  0030AC  6E1D               	movwf	memset@c,c
 10542  0030AE  0E00               	movlw	0
 10543  0030B0  6E20               	movwf	memset@n+1,c
 10544  0030B2  0ECE               	movlw	206
 10545  0030B4  6E1F               	movwf	memset@n,c
 10546  0030B6  EC8D  F017         	call	_memset	;wreg free
 10547  0030BA  0012               	return		;funcret
 10548  0030BC                     __end_of_UART_buff_init:
 10549                           	opt stack 0
 10550                           tosu	equ	0xFFF
 10551                           tosh	equ	0xFFE
 10552                           tosl	equ	0xFFD
 10553                           pclath	equ	0xFFA
 10554                           tblptru	equ	0xFF8
 10555                           tblptrh	equ	0xFF7
 10556                           tblptrl	equ	0xFF6
 10557                           tablat	equ	0xFF5
 10558                           prodh	equ	0xFF4
 10559                           prodl	equ	0xFF3
 10560                           intcon	equ	0xFF2
 10561                           intcon2	equ	0xFF1
 10562                           indf0	equ	0xFEF
 10563                           postinc0	equ	0xFEE
 10564                           fsr0h	equ	0xFEA
 10565                           fsr0l	equ	0xFE9
 10566                           wreg	equ	0xFE8
 10567                           indf2	equ	0xFDF
 10568                           postinc2	equ	0xFDE
 10569                           postdec2	equ	0xFDD
 10570                           plusw2	equ	0xFDB
 10571                           fsr2h	equ	0xFDA
 10572                           fsr2l	equ	0xFD9
 10573                           status	equ	0xFD8
 10574                           
 10575 ;; *************** function _memset *****************
 10576 ;; Defined at:
 10577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\memset.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  p1              2   26[COMRAM] PTR void 
 10580 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10581 ;;  c               2   28[COMRAM] int 
 10582 ;;  n               2   30[COMRAM] unsigned int 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  p               2   32[COMRAM] PTR unsigned char 
 10585 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  2   26[COMRAM] PTR void 
 10588 ;; Registers used:
 10589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10595 ;;      Params:         6       0       0       0       0       0       0
 10596 ;;      Locals:         2       0       0       0       0       0       0
 10597 ;;      Temps:          0       0       0       0       0       0       0
 10598 ;;      Totals:         8       0       0       0       0       0       0
 10599 ;;Total ram usage:        8 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    4
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_FastTransfer_buffer_flush
 10606 ;;		_UART_buff_init
 10607 ;;		_UART_buff_flush
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text54
 10612  002F1A                     __ptext54:
 10613                           	opt stack 0
 10614  002F1A                     _memset:
 10615                           	opt stack 22
 10616                           
 10617                           ;incstack = 0
 10618  002F1A  C01B  F021         	movff	memset@p1,memset@p
 10619  002F1E  C01C  F022         	movff	memset@p1+1,memset@p+1
 10620  002F22  D008               	goto	l5894
 10621  002F24                     l5890:
 10622  002F24  C021  FFD9         	movff	memset@p,fsr2l
 10623  002F28  C022  FFDA         	movff	memset@p+1,fsr2h
 10624  002F2C  C01D  FFDF         	movff	memset@c,indf2
 10625  002F30  4A21               	infsnz	memset@p,f,c
 10626  002F32  2A22               	incf	memset@p+1,f,c
 10627  002F34                     l5894:
 10628  002F34  061F               	decf	memset@n,f,c
 10629  002F36  A0D8               	btfss	status,0,c
 10630  002F38  0620               	decf	memset@n+1,f,c
 10631  002F3A  281F               	incf	memset@n,w,c
 10632  002F3C  E1F3               	bnz	l5890
 10633  002F3E  2820               	incf	memset@n+1,w,c
 10634  002F40  B4D8               	btfsc	status,2,c
 10635  002F42  0012               	return	
 10636  002F44  D7EF               	goto	l5890
 10637  002F46                     __end_of_memset:
 10638                           	opt stack 0
 10639                           tosu	equ	0xFFF
 10640                           tosh	equ	0xFFE
 10641                           tosl	equ	0xFFD
 10642                           pclath	equ	0xFFA
 10643                           tblptru	equ	0xFF8
 10644                           tblptrh	equ	0xFF7
 10645                           tblptrl	equ	0xFF6
 10646                           tablat	equ	0xFF5
 10647                           prodh	equ	0xFF4
 10648                           prodl	equ	0xFF3
 10649                           intcon	equ	0xFF2
 10650                           intcon2	equ	0xFF1
 10651                           indf0	equ	0xFEF
 10652                           postinc0	equ	0xFEE
 10653                           fsr0h	equ	0xFEA
 10654                           fsr0l	equ	0xFE9
 10655                           wreg	equ	0xFE8
 10656                           indf2	equ	0xFDF
 10657                           postinc2	equ	0xFDE
 10658                           postdec2	equ	0xFDD
 10659                           plusw2	equ	0xFDB
 10660                           fsr2h	equ	0xFDA
 10661                           fsr2l	equ	0xFD9
 10662                           status	equ	0xFD8
 10663                           
 10664 ;; *************** function _ADC_Initialize *****************
 10665 ;; Defined at:
 10666 ;;		line 59 in file "mcc_generated_files/adc.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;		None
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		wreg, status,2
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10680 ;;      Params:         0       0       0       0       0       0       0
 10681 ;;      Locals:         0       0       0       0       0       0       0
 10682 ;;      Temps:          0       0       0       0       0       0       0
 10683 ;;      Totals:         0       0       0       0       0       0       0
 10684 ;;Total ram usage:        0 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:    4
 10687 ;; This function calls:
 10688 ;;		Nothing
 10689 ;; This function is called by:
 10690 ;;		_SYSTEM_Initialize
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text55
 10695  0030F6                     __ptext55:
 10696                           	opt stack 0
 10697  0030F6                     _ADC_Initialize:
 10698                           	opt stack 25
 10699                           
 10700                           ;adc.c: 64: ADCON0 = 0x01;
 10701                           
 10702                           ;incstack = 0
 10703  0030F6  0E01               	movlw	1
 10704  0030F8  6EC2               	movwf	4034,c	;volatile
 10705                           
 10706                           ;adc.c: 67: ADCON1 = 0x80;
 10707  0030FA  0E80               	movlw	128
 10708  0030FC  6EC1               	movwf	4033,c	;volatile
 10709                           
 10710                           ;adc.c: 70: ADCON2 = 0x05;
 10711  0030FE  0E05               	movlw	5
 10712  003100  6EC0               	movwf	4032,c	;volatile
 10713                           
 10714                           ;adc.c: 73: ADRESL = 0x00;
 10715  003102  0E00               	movlw	0
 10716  003104  6EC3               	movwf	4035,c	;volatile
 10717                           
 10718                           ;adc.c: 76: ADRESH = 0x00;
 10719  003106  0E00               	movlw	0
 10720  003108  6EC4               	movwf	4036,c	;volatile
 10721                           
 10722                           ;adc.c: 79: PIE1bits.ADIE = 1;
 10723  00310A  8C9D               	bsf	3997,6,c	;volatile
 10724  00310C  0012               	return		;funcret
 10725  00310E                     __end_of_ADC_Initialize:
 10726                           	opt stack 0
 10727                           tosu	equ	0xFFF
 10728                           tosh	equ	0xFFE
 10729                           tosl	equ	0xFFD
 10730                           pclath	equ	0xFFA
 10731                           tblptru	equ	0xFF8
 10732                           tblptrh	equ	0xFF7
 10733                           tblptrl	equ	0xFF6
 10734                           tablat	equ	0xFF5
 10735                           prodh	equ	0xFF4
 10736                           prodl	equ	0xFF3
 10737                           intcon	equ	0xFF2
 10738                           intcon2	equ	0xFF1
 10739                           indf0	equ	0xFEF
 10740                           postinc0	equ	0xFEE
 10741                           fsr0h	equ	0xFEA
 10742                           fsr0l	equ	0xFE9
 10743                           wreg	equ	0xFE8
 10744                           indf2	equ	0xFDF
 10745                           postinc2	equ	0xFDE
 10746                           postdec2	equ	0xFDD
 10747                           plusw2	equ	0xFDB
 10748                           fsr2h	equ	0xFDA
 10749                           fsr2l	equ	0xFD9
 10750                           status	equ	0xFD8
 10751                           
 10752 ;; *************** function _LEDwriteDisplay *****************
 10753 ;; Defined at:
 10754 ;;		line 116 in file "LED_BarGraph.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;  i2c_addr        1    wreg     unsigned char 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
 10759 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
 10760 ;;  timeOut         2   21[BANK1 ] unsigned int 
 10761 ;;  status          1   23[BANK1 ] enum E8697
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  1    wreg      void 
 10764 ;; Registers used:
 10765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10771 ;;      Params:         0       0       0       0       0       0       0
 10772 ;;      Locals:         0       0      24       0       0       0       0
 10773 ;;      Temps:          0       0       0       0       0       0       0
 10774 ;;      Totals:         0       0      24       0       0       0       0
 10775 ;;Total ram usage:       24 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    6
 10778 ;; This function calls:
 10779 ;;		_I2C1_MasterWrite
 10780 ;; This function is called by:
 10781 ;;		_main
 10782 ;;		_TestBarGraph
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           	psect	text56
 10787  0015AE                     __ptext56:
 10788                           	opt stack 0
 10789  0015AE                     _LEDwriteDisplay:
 10790                           	opt stack 24
 10791                           
 10792                           ;incstack = 0
 10793                           ;LEDwriteDisplay@i2c_addr stored from wreg
 10794  0015AE  0101               	movlb	1	; () banked
 10795  0015B0  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
 10796                           
 10797                           ;LED_BarGraph.c: 117: uint8_t writeBuffer[20];
 10798                           ;LED_BarGraph.c: 118: uint16_t timeOut;
 10799                           ;LED_BarGraph.c: 119: writeBuffer[0] = 0x00;
 10800  0015B2  0E00               	movlw	0
 10801  0015B4  0101               	movlb	1	; () banked
 10802  0015B6  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10803                           
 10804                           ;LED_BarGraph.c: 120: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10805  0015B8  0E02               	movlw	2
 10806  0015BA  0101               	movlb	1	; () banked
 10807  0015BC  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10808                           
 10809                           ;LED_BarGraph.c: 122: timeOut = 0;
 10810  0015BE  0E00               	movlw	0
 10811  0015C0  0101               	movlb	1	; () banked
 10812  0015C2  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10813  0015C4  0E00               	movlw	0
 10814  0015C6  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10815                           
 10816                           ;LED_BarGraph.c: 123: while (status != I2C1_MESSAGE_FAIL) {
 10817  0015C8  D02F               	goto	l7020
 10818  0015CA                     l7000:
 10819                           
 10820                           ; BSR set to: 1
 10821                           ;LED_BarGraph.c: 125: I2C1_MasterWrite(&writeBuffer,
 10822                           ;LED_BarGraph.c: 126: 1,
 10823                           ;LED_BarGraph.c: 127: i2c_addr,
 10824                           ;LED_BarGraph.c: 128: &status);
 10825  0015CA  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10826  0015CC  0100               	movlb	0	; () banked
 10827  0015CE  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10828  0015D0  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10829  0015D2  0100               	movlb	0	; () banked
 10830  0015D4  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10831  0015D6  0E00               	movlw	0
 10832  0015D8  0100               	movlb	0	; () banked
 10833  0015DA  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10834  0015DC  0E01               	movlw	1
 10835  0015DE  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10836  0015E0  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10837  0015E4  0100               	movlb	0	; () banked
 10838  0015E6  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10839  0015E8  0E50               	movlw	low LEDwriteDisplay@status
 10840  0015EA  0100               	movlb	0	; () banked
 10841  0015EC  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10842  0015EE  0E01               	movlw	high LEDwriteDisplay@status
 10843  0015F0  0100               	movlb	0	; () banked
 10844  0015F2  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10845  0015F4  ECEE  F015         	call	_I2C1_MasterWrite	;wreg free
 10846  0015F8                     l7002:
 10847  0015F8  0E02               	movlw	2
 10848  0015FA  0101               	movlb	1	; () banked
 10849  0015FC  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10850  0015FE  B4D8               	btfsc	status,2,c
 10851  001600  D7FB               	goto	l7002
 10852                           
 10853                           ; BSR set to: 1
 10854                           ;LED_BarGraph.c: 133: if (status == I2C1_MESSAGE_COMPLETE)
 10855                           
 10856                           ; BSR set to: 1
 10857  001602  0101               	movlb	1	; () banked
 10858  001604  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10859  001606  0101               	movlb	1	; () banked
 10860  001608  B4D8               	btfsc	status,2,c
 10861  00160A  D012               	goto	l7022
 10862                           
 10863                           ; BSR set to: 1
 10864                           ;LED_BarGraph.c: 135: if (timeOut == 100)
 10865                           
 10866                           ; BSR set to: 1
 10867                           
 10868                           ; BSR set to: 1
 10869                           ;LED_BarGraph.c: 134: break;
 10870  00160C  0E64               	movlw	100
 10871  00160E  0101               	movlb	1	; () banked
 10872  001610  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10873  001612  0101               	movlb	1	; () banked
 10874  001614  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10875  001616  B4D8               	btfsc	status,2,c
 10876  001618  D00B               	goto	l7022
 10877                           
 10878                           ; BSR set to: 1
 10879                           ;LED_BarGraph.c: 137: if (status == I2C1_MESSAGE_FAIL)
 10880                           
 10881                           ; BSR set to: 1
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;LED_BarGraph.c: 136: break;
 10885  00161A  0101               	movlb	1	; () banked
 10886  00161C  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10887  00161E  B4D8               	btfsc	status,2,c
 10888  001620  D007               	goto	l7022
 10889                           
 10890                           ; BSR set to: 1
 10891                           ;LED_BarGraph.c: 139: else
 10892                           ;LED_BarGraph.c: 140: timeOut++;
 10893                           
 10894                           ; BSR set to: 1
 10895                           
 10896                           ; BSR set to: 1
 10897                           
 10898                           ; BSR set to: 1
 10899                           ;LED_BarGraph.c: 138: break;
 10900  001622  0101               	movlb	1	; () banked
 10901  001624  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10902  001626  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10903  001628                     l7020:
 10904                           
 10905                           ; BSR set to: 1
 10906  001628  0101               	movlb	1	; () banked
 10907  00162A  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10908  00162C  A4D8               	btfss	status,2,c
 10909  00162E  D7CD               	goto	l7000
 10910  001630                     l7022:
 10911                           
 10912                           ; BSR set to: 1
 10913                           ;LED_BarGraph.c: 141: }
 10914                           ;LED_BarGraph.c: 142: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10915  001630  0E02               	movlw	2
 10916  001632  0101               	movlb	1	; () banked
 10917  001634  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10918                           
 10919                           ;LED_BarGraph.c: 147: writeBuffer[0] = 0;
 10920  001636  0E00               	movlw	0
 10921  001638  0101               	movlb	1	; () banked
 10922  00163A  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10923                           
 10924                           ; BSR set to: 1
 10925                           ;LED_BarGraph.c: 148: writeBuffer[1] = displaybuffer[0] & 0xFF;
 10926  00163C  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;LED_BarGraph.c: 149: writeBuffer[2] = displaybuffer[0] >> 8;
 10930  001640  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
 10931                           
 10932                           ; BSR set to: 1
 10933                           ;LED_BarGraph.c: 150: writeBuffer[3] = displaybuffer[1] & 0xFF;
 10934  001644  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
 10935                           
 10936                           ; BSR set to: 1
 10937                           ;LED_BarGraph.c: 151: writeBuffer[4] = displaybuffer[1] >> 8;
 10938  001648  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
 10939                           
 10940                           ; BSR set to: 1
 10941                           ;LED_BarGraph.c: 152: writeBuffer[5] = displaybuffer[2] & 0xFF;
 10942  00164C  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
 10943                           
 10944                           ; BSR set to: 1
 10945                           ;LED_BarGraph.c: 153: writeBuffer[6] = displaybuffer[2] >> 8;
 10946  001650  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
 10947                           
 10948                           ; BSR set to: 1
 10949                           ;LED_BarGraph.c: 154: writeBuffer[7] = displaybuffer[3] & 0xFF;
 10950  001654  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
 10951                           
 10952                           ; BSR set to: 1
 10953                           ;LED_BarGraph.c: 155: writeBuffer[8] = displaybuffer[3] >> 8;
 10954  001658  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
 10955                           
 10956                           ; BSR set to: 1
 10957                           ;LED_BarGraph.c: 156: writeBuffer[9] = displaybuffer[4] & 0xFF;
 10958  00165C  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;LED_BarGraph.c: 157: writeBuffer[10] = displaybuffer[4] >> 8;
 10962  001660  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
 10963                           
 10964                           ; BSR set to: 1
 10965                           ;LED_BarGraph.c: 158: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10966  001664  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10967                           
 10968                           ; BSR set to: 1
 10969                           ;LED_BarGraph.c: 159: writeBuffer[12] = displaybuffer[5] >> 8;
 10970  001668  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10971                           
 10972                           ; BSR set to: 1
 10973                           ;LED_BarGraph.c: 160: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10974  00166C  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 10975                           
 10976                           ; BSR set to: 1
 10977                           ;LED_BarGraph.c: 161: writeBuffer[14] = displaybuffer[6] >> 8;
 10978  001670  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 10979                           
 10980                           ; BSR set to: 1
 10981                           ;LED_BarGraph.c: 162: writeBuffer[15] = displaybuffer[7] & 0xFF;
 10982  001674  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 10983                           
 10984                           ; BSR set to: 1
 10985                           ;LED_BarGraph.c: 163: writeBuffer[16] = displaybuffer[7] >> 8;
 10986  001678  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 10987                           
 10988                           ; BSR set to: 1
 10989                           ;LED_BarGraph.c: 164: writeBuffer[17] = displaybuffer[8] & 0xFF;
 10990  00167C  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 10991                           
 10992                           ; BSR set to: 1
 10993                           ;LED_BarGraph.c: 165: writeBuffer[18] = displaybuffer[8] >> 8;
 10994  001680  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 10995                           
 10996                           ;LED_BarGraph.c: 167: timeOut = 0;
 10997  001684  0E00               	movlw	0
 10998  001686  0101               	movlb	1	; () banked
 10999  001688  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 11000  00168A  0E00               	movlw	0
 11001  00168C  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 11002                           
 11003                           ;LED_BarGraph.c: 168: while (status != I2C1_MESSAGE_FAIL) {
 11004  00168E  D02F               	goto	l7080
 11005  001690                     l7060:
 11006                           
 11007                           ; BSR set to: 1
 11008                           ;LED_BarGraph.c: 170: I2C1_MasterWrite(&writeBuffer,
 11009                           ;LED_BarGraph.c: 171: 17,
 11010                           ;LED_BarGraph.c: 172: i2c_addr,
 11011                           ;LED_BarGraph.c: 173: &status);
 11012  001690  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 11013  001692  0100               	movlb	0	; () banked
 11014  001694  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 11015  001696  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 11016  001698  0100               	movlb	0	; () banked
 11017  00169A  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 11018  00169C  0E00               	movlw	0
 11019  00169E  0100               	movlb	0	; () banked
 11020  0016A0  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 11021  0016A2  0E11               	movlw	17
 11022  0016A4  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 11023  0016A6  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 11024  0016AA  0100               	movlb	0	; () banked
 11025  0016AC  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 11026  0016AE  0E50               	movlw	low LEDwriteDisplay@status
 11027  0016B0  0100               	movlb	0	; () banked
 11028  0016B2  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 11029  0016B4  0E01               	movlw	high LEDwriteDisplay@status
 11030  0016B6  0100               	movlb	0	; () banked
 11031  0016B8  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 11032  0016BA  ECEE  F015         	call	_I2C1_MasterWrite	;wreg free
 11033  0016BE                     l7062:
 11034  0016BE  0E02               	movlw	2
 11035  0016C0  0101               	movlb	1	; () banked
 11036  0016C2  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 11037  0016C4  B4D8               	btfsc	status,2,c
 11038  0016C6  D7FB               	goto	l7062
 11039                           
 11040                           ; BSR set to: 1
 11041                           ;LED_BarGraph.c: 178: if (status == I2C1_MESSAGE_COMPLETE)
 11042                           
 11043                           ; BSR set to: 1
 11044  0016C8  0101               	movlb	1	; () banked
 11045  0016CA  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 11046  0016CC  0101               	movlb	1	; () banked
 11047  0016CE  B4D8               	btfsc	status,2,c
 11048  0016D0  0012               	return	
 11049                           
 11050                           ; BSR set to: 1
 11051                           ;LED_BarGraph.c: 180: if (timeOut == 100)
 11052                           
 11053                           ; BSR set to: 1
 11054                           
 11055                           ; BSR set to: 1
 11056                           ;LED_BarGraph.c: 179: break;
 11057  0016D2  0E64               	movlw	100
 11058  0016D4  0101               	movlb	1	; () banked
 11059  0016D6  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 11060  0016D8  0101               	movlb	1	; () banked
 11061  0016DA  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 11062  0016DC  B4D8               	btfsc	status,2,c
 11063  0016DE  0012               	return	
 11064                           
 11065                           ; BSR set to: 1
 11066                           ;LED_BarGraph.c: 182: if (status == I2C1_MESSAGE_FAIL)
 11067                           
 11068                           ; BSR set to: 1
 11069                           
 11070                           ; BSR set to: 1
 11071                           ;LED_BarGraph.c: 181: break;
 11072  0016E0  0101               	movlb	1	; () banked
 11073  0016E2  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 11074  0016E4  B4D8               	btfsc	status,2,c
 11075  0016E6  0012               	return	
 11076                           
 11077                           ; BSR set to: 1
 11078                           ;LED_BarGraph.c: 184: else
 11079                           ;LED_BarGraph.c: 185: timeOut++;
 11080                           
 11081                           ; BSR set to: 1
 11082                           
 11083                           ; BSR set to: 1
 11084                           
 11085                           ; BSR set to: 1
 11086                           ;LED_BarGraph.c: 183: break;
 11087  0016E8  0101               	movlb	1	; () banked
 11088  0016EA  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 11089  0016EC  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 11090  0016EE                     l7080:
 11091                           
 11092                           ; BSR set to: 1
 11093  0016EE  0101               	movlb	1	; () banked
 11094  0016F0  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 11095  0016F2  B4D8               	btfsc	status,2,c
 11096  0016F4  0012               	return	
 11097  0016F6  D7CC               	goto	l7060
 11098  0016F8                     __end_of_LEDwriteDisplay:
 11099                           	opt stack 0
 11100                           tosu	equ	0xFFF
 11101                           tosh	equ	0xFFE
 11102                           tosl	equ	0xFFD
 11103                           pclath	equ	0xFFA
 11104                           tblptru	equ	0xFF8
 11105                           tblptrh	equ	0xFF7
 11106                           tblptrl	equ	0xFF6
 11107                           tablat	equ	0xFF5
 11108                           prodh	equ	0xFF4
 11109                           prodl	equ	0xFF3
 11110                           intcon	equ	0xFF2
 11111                           intcon2	equ	0xFF1
 11112                           indf0	equ	0xFEF
 11113                           postinc0	equ	0xFEE
 11114                           fsr0h	equ	0xFEA
 11115                           fsr0l	equ	0xFE9
 11116                           wreg	equ	0xFE8
 11117                           indf2	equ	0xFDF
 11118                           postinc2	equ	0xFDE
 11119                           postdec2	equ	0xFDD
 11120                           plusw2	equ	0xFDB
 11121                           fsr2h	equ	0xFDA
 11122                           fsr2l	equ	0xFD9
 11123                           status	equ	0xFD8
 11124                           
 11125 ;; *************** function _LEDsetValue *****************
 11126 ;; Defined at:
 11127 ;;		line 11 in file "LED_BarGraph.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  value           2    0[BANK0 ] int 
 11130 ;;  color           2    2[BANK0 ] int 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;  k               2    5[BANK0 ] int 
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      void 
 11135 ;; Registers used:
 11136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11142 ;;      Params:         0       4       0       0       0       0       0
 11143 ;;      Locals:         0       2       0       0       0       0       0
 11144 ;;      Temps:          0       1       0       0       0       0       0
 11145 ;;      Totals:         0       7       0       0       0       0       0
 11146 ;;Total ram usage:        7 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    6
 11149 ;; This function calls:
 11150 ;;		_LEDsetBar
 11151 ;; This function is called by:
 11152 ;;		_main
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           	psect	text57
 11157  002292                     __ptext57:
 11158                           	opt stack 0
 11159  002292                     _LEDsetValue:
 11160                           	opt stack 24
 11161                           
 11162                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 11163                           
 11164                           ; BSR set to: 1
 11165                           ;incstack = 0
 11166  002292  0100               	movlb	0	; () banked
 11167  002294  BFF3               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 11168  002296  D00D               	goto	l6980
 11169  002298  0100               	movlb	0	; () banked
 11170  00229A  51F3               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11171  00229C  E105               	bnz	u7990
 11172  00229E  0E19               	movlw	25
 11173  0022A0  0100               	movlb	0	; () banked
 11174  0022A2  5DF2               	subwf	LEDsetValue@value& (0+255),w,b
 11175  0022A4  A0D8               	btfss	status,0,c
 11176  0022A6  D005               	goto	l6980
 11177  0022A8                     u7990:
 11178                           
 11179                           ; BSR set to: 0
 11180  0022A8  0E00               	movlw	0
 11181  0022AA  0100               	movlb	0	; () banked
 11182  0022AC  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
 11183  0022AE  0E18               	movlw	24
 11184  0022B0  6FF2               	movwf	LEDsetValue@value& (0+255),b
 11185  0022B2                     l6980:
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 11189  0022B2  0100               	movlb	0	; () banked
 11190  0022B4  AFF3               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 11191  0022B6  D005               	goto	l613
 11192                           
 11193                           ; BSR set to: 0
 11194  0022B8  0E00               	movlw	0
 11195  0022BA  0100               	movlb	0	; () banked
 11196  0022BC  6FF3               	movwf	(LEDsetValue@value+1)& (0+255),b
 11197  0022BE  0E00               	movlw	0
 11198  0022C0  6FF2               	movwf	LEDsetValue@value& (0+255),b
 11199  0022C2                     l613:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;LED_BarGraph.c: 14: int k;
 11203                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 11204  0022C2  0E00               	movlw	0
 11205  0022C4  0100               	movlb	0	; () banked
 11206  0022C6  6FF8               	movwf	(LEDsetValue@k+1)& (0+255),b
 11207  0022C8  0E00               	movlw	0
 11208  0022CA  6FF7               	movwf	LEDsetValue@k& (0+255),b
 11209  0022CC                     l6984:
 11210                           
 11211                           ; BSR set to: 0
 11212  0022CC  0100               	movlb	0	; () banked
 11213  0022CE  BFF8               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 11214  0022D0  D008               	goto	l6988
 11215  0022D2  0100               	movlb	0	; () banked
 11216  0022D4  51F8               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11217  0022D6  E12E               	bnz	l618
 11218  0022D8  0E18               	movlw	24
 11219  0022DA  0100               	movlb	0	; () banked
 11220  0022DC  5DF7               	subwf	LEDsetValue@k& (0+255),w,b
 11221  0022DE  B0D8               	btfsc	status,0,c
 11222  0022E0  0012               	return	
 11223  0022E2                     l6988:
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;LED_BarGraph.c: 16: if (k < value){
 11227  0022E2  0100               	movlb	0	; () banked
 11228  0022E4  51F2               	movf	LEDsetValue@value& (0+255),w,b
 11229  0022E6  0100               	movlb	0	; () banked
 11230  0022E8  5DF7               	subwf	LEDsetValue@k& (0+255),w,b
 11231  0022EA  0100               	movlb	0	; () banked
 11232  0022EC  51F8               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11233  0022EE  0A80               	xorlw	128
 11234  0022F0  0100               	movlb	0	; () banked
 11235  0022F2  6FF6               	movwf	??_LEDsetValue& (0+255),b
 11236  0022F4  0100               	movlb	0	; () banked
 11237  0022F6  51F3               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11238  0022F8  0A80               	xorlw	128
 11239  0022FA  0100               	movlb	0	; () banked
 11240  0022FC  59F6               	subwfb	??_LEDsetValue& (0+255),w,b
 11241  0022FE  B0D8               	btfsc	status,0,c
 11242  002300  D00B               	goto	l6992
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;LED_BarGraph.c: 18: LEDsetBar(k, color);}
 11246  002302  C0F7  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11247  002306  C0F8  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11248  00230A  C0F4  F025         	movff	LEDsetValue@color,LEDsetBar@color
 11249  00230E  C0F5  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 11250  002312  ECC9  F003         	call	_LEDsetBar	;wreg free
 11251  002316  D00A               	goto	l6994
 11252  002318                     l6992:
 11253                           
 11254                           ;LED_BarGraph.c: 19: else LEDsetBar(k, 0);
 11255  002318  C0F7  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11256  00231C  C0F8  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11257  002320  0E00               	movlw	0
 11258  002322  6E26               	movwf	LEDsetBar@color+1,c
 11259  002324  0E00               	movlw	0
 11260  002326  6E25               	movwf	LEDsetBar@color,c
 11261  002328  ECC9  F003         	call	_LEDsetBar	;wreg free
 11262  00232C                     l6994:
 11263  00232C  0100               	movlb	0	; () banked
 11264  00232E  4BF7               	infsnz	LEDsetValue@k& (0+255),f,b
 11265  002330  2BF8               	incf	(LEDsetValue@k+1)& (0+255),f,b
 11266  002332  D7CC               	goto	l6984
 11267  002334                     l618:
 11268                           
 11269                           ; BSR set to: 0
 11270  002334  0012               	return		;funcret
 11271  002336                     __end_of_LEDsetValue:
 11272                           	opt stack 0
 11273                           tosu	equ	0xFFF
 11274                           tosh	equ	0xFFE
 11275                           tosl	equ	0xFFD
 11276                           pclath	equ	0xFFA
 11277                           tblptru	equ	0xFF8
 11278                           tblptrh	equ	0xFF7
 11279                           tblptrl	equ	0xFF6
 11280                           tablat	equ	0xFF5
 11281                           prodh	equ	0xFF4
 11282                           prodl	equ	0xFF3
 11283                           intcon	equ	0xFF2
 11284                           intcon2	equ	0xFF1
 11285                           indf0	equ	0xFEF
 11286                           postinc0	equ	0xFEE
 11287                           fsr0h	equ	0xFEA
 11288                           fsr0l	equ	0xFE9
 11289                           wreg	equ	0xFE8
 11290                           indf2	equ	0xFDF
 11291                           postinc2	equ	0xFDE
 11292                           postdec2	equ	0xFDD
 11293                           plusw2	equ	0xFDB
 11294                           fsr2h	equ	0xFDA
 11295                           fsr2l	equ	0xFD9
 11296                           status	equ	0xFD8
 11297                           
 11298 ;; *************** function _LEDsetBar *****************
 11299 ;; Defined at:
 11300 ;;		line 195 in file "LED_BarGraph.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;  bar             2   34[COMRAM] int 
 11303 ;;  color           2   36[COMRAM] int 
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;  a               2   40[COMRAM] unsigned int 
 11306 ;;  c               2   38[COMRAM] unsigned int 
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  1    wreg      void 
 11309 ;; Registers used:
 11310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11316 ;;      Params:         4       0       0       0       0       0       0
 11317 ;;      Locals:         4       0       0       0       0       0       0
 11318 ;;      Temps:          0       0      16       0       0       0       0
 11319 ;;      Totals:         8       0      16       0       0       0       0
 11320 ;;Total ram usage:       24 bytes
 11321 ;; Hardware stack levels used:    1
 11322 ;; Hardware stack levels required when called:    5
 11323 ;; This function calls:
 11324 ;;		___awdiv
 11325 ;; This function is called by:
 11326 ;;		_LEDsetValue
 11327 ;;		_TestBarGraph
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text58
 11332  000792                     __ptext58:
 11333                           	opt stack 0
 11334  000792                     _LEDsetBar:
 11335                           	opt stack 24
 11336                           
 11337                           ;LED_BarGraph.c: 196: uint16_t a, c;
 11338                           ;LED_BarGraph.c: 198: if (bar < 12)
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;incstack = 0
 11342  000792  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11343  000794  D006               	goto	l6468
 11344  000796  5024               	movf	LEDsetBar@bar+1,w,c
 11345  000798  E10F               	bnz	l6470
 11346  00079A  0E0C               	movlw	12
 11347  00079C  5C23               	subwf	LEDsetBar@bar,w,c
 11348  00079E  B0D8               	btfsc	status,0,c
 11349  0007A0  D00B               	goto	l6470
 11350  0007A2                     l6468:
 11351                           
 11352                           ;LED_BarGraph.c: 199: c = bar / 4;
 11353  0007A2  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 11354  0007A6  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 11355  0007AA  0E00               	movlw	0
 11356  0007AC  6E1E               	movwf	___awdiv@divisor+1,c
 11357  0007AE  0E04               	movlw	4
 11358  0007B0  6E1D               	movwf	___awdiv@divisor,c
 11359  0007B2  ECA4  F013         	call	___awdiv	;wreg free
 11360  0007B6  D00C               	goto	L3
 11361  0007B8                     l6470:
 11362                           
 11363                           ;LED_BarGraph.c: 200: else
 11364                           ;LED_BarGraph.c: 201: c = (bar - 12) / 4;
 11365  0007B8  0EF4               	movlw	244
 11366  0007BA  2423               	addwf	LEDsetBar@bar,w,c
 11367  0007BC  6E1B               	movwf	___awdiv@dividend,c
 11368  0007BE  0EFF               	movlw	255
 11369  0007C0  2024               	addwfc	LEDsetBar@bar+1,w,c
 11370  0007C2  6E1C               	movwf	___awdiv@dividend+1,c
 11371  0007C4  0E00               	movlw	0
 11372  0007C6  6E1E               	movwf	___awdiv@divisor+1,c
 11373  0007C8  0E04               	movlw	4
 11374  0007CA  6E1D               	movwf	___awdiv@divisor,c
 11375  0007CC  ECA4  F013         	call	___awdiv	;wreg free
 11376  0007D0                     L3:
 11377  0007D0  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 11378  0007D4  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 11379                           
 11380                           ;LED_BarGraph.c: 203: a = bar % 4;
 11381  0007D8  0E03               	movlw	3
 11382  0007DA  1423               	andwf	LEDsetBar@bar,w,c
 11383  0007DC  6E29               	movwf	LEDsetBar@a,c
 11384  0007DE  6A2A               	clrf	LEDsetBar@a+1,c
 11385                           
 11386                           ;LED_BarGraph.c: 204: if (bar >= 12)
 11387  0007E0  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11388  0007E2  D00A               	goto	l692
 11389  0007E4  5024               	movf	LEDsetBar@bar+1,w,c
 11390  0007E6  E104               	bnz	u6880
 11391  0007E8  0E0C               	movlw	12
 11392  0007EA  5C23               	subwf	LEDsetBar@bar,w,c
 11393  0007EC  A0D8               	btfss	status,0,c
 11394  0007EE  D004               	goto	l692
 11395  0007F0                     u6880:
 11396                           
 11397                           ;LED_BarGraph.c: 205: a += 4;
 11398  0007F0  0E04               	movlw	4
 11399  0007F2  2629               	addwf	LEDsetBar@a,f,c
 11400  0007F4  0E00               	movlw	0
 11401  0007F6  222A               	addwfc	LEDsetBar@a+1,f,c
 11402  0007F8                     l692:
 11403                           
 11404                           ;LED_BarGraph.c: 208: if (color == 1) {
 11405  0007F8  0425               	decf	LEDsetBar@color,w,c
 11406  0007FA  1026               	iorwf	LEDsetBar@color+1,w,c
 11407  0007FC  A4D8               	btfss	status,2,c
 11408  0007FE  D07D               	goto	l6480
 11409                           
 11410                           ;LED_BarGraph.c: 210: displaybuffer[c] |= (1<<(a));
 11411  000800  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11412  000804  0E01               	movlw	1
 11413  000806  0101               	movlb	1	; () banked
 11414  000808  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11415  00080A  0E00               	movlw	0
 11416  00080C  0101               	movlb	1	; () banked
 11417  00080E  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11418  000810  0101               	movlb	1	; () banked
 11419  000812  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11420  000814  D004               	goto	u6904
 11421  000816                     u6905:
 11422  000816  90D8               	bcf	status,0,c
 11423  000818  0101               	movlb	1	; () banked
 11424  00081A  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11425  00081C  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11426  00081E                     u6904:
 11427  00081E  0101               	movlb	1	; () banked
 11428  000820  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11429  000822  D7F9               	goto	u6905
 11430  000824  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11431  000828  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11432  00082C  0E00               	movlw	0
 11433  00082E  0101               	movlb	1	; () banked
 11434  000830  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11435  000832  0EFF               	movlw	255
 11436  000834  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11437  000836  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11438  000838  0E60               	movlw	low _displaybuffer
 11439  00083A  0101               	movlb	1	; () banked
 11440  00083C  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11441  00083E  0E00               	movlw	high _displaybuffer
 11442  000840  0101               	movlb	1	; () banked
 11443  000842  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11444  000844  90D8               	bcf	status,0,c
 11445  000846  3427               	rlcf	LEDsetBar@c,w,c
 11446  000848  6ED9               	movwf	fsr2l,c
 11447  00084A  3428               	rlcf	LEDsetBar@c+1,w,c
 11448  00084C  6EDA               	movwf	fsr2h,c
 11449  00084E  90D8               	bcf	status,0,c
 11450  000850  36D9               	rlcf	fsr2l,f,c
 11451  000852  36DA               	rlcf	fsr2h,f,c
 11452  000854  0101               	movlb	1	; () banked
 11453  000856  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11454  000858  26D9               	addwf	fsr2l,f,c
 11455  00085A  0101               	movlb	1	; () banked
 11456  00085C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11457  00085E  22DA               	addwfc	fsr2h,f,c
 11458  000860  0101               	movlb	1	; () banked
 11459  000862  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11460  000864  12DE               	iorwf	postinc2,f,c
 11461  000866  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11462  000868  12DE               	iorwf	postinc2,f,c
 11463  00086A  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11464  00086C  12DE               	iorwf	postinc2,f,c
 11465  00086E  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11466  000870  12DE               	iorwf	postinc2,f,c
 11467                           
 11468                           ;LED_BarGraph.c: 212: displaybuffer[c] &= ~(1<<(a + 8));
 11469  000872  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11470  000876  0E08               	movlw	8
 11471  000878  0101               	movlb	1	; () banked
 11472  00087A  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11473  00087C  0E01               	movlw	1
 11474  00087E  0101               	movlb	1	; () banked
 11475  000880  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11476  000882  0E00               	movlw	0
 11477  000884  0101               	movlb	1	; () banked
 11478  000886  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11479  000888  0101               	movlb	1	; () banked
 11480  00088A  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11481  00088C  D004               	goto	u6914
 11482  00088E                     u6915:
 11483  00088E  90D8               	bcf	status,0,c
 11484  000890  0101               	movlb	1	; () banked
 11485  000892  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11486  000894  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11487  000896                     u6914:
 11488  000896  0101               	movlb	1	; () banked
 11489  000898  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11490  00089A  D7F9               	goto	u6915
 11491  00089C  0101               	movlb	1	; () banked
 11492  00089E  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11493  0008A0  0101               	movlb	1	; () banked
 11494  0008A2  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11495  0008A4  0101               	movlb	1	; () banked
 11496  0008A6  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11497  0008A8  0101               	movlb	1	; () banked
 11498  0008AA  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11499  0008AC  0101               	movlb	1	; () banked
 11500  0008AE  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11501  0008B0  0101               	movlb	1	; () banked
 11502  0008B2  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11503  0008B4  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11504  0008B6  0101               	movlb	1	; () banked
 11505  0008B8  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11506  0008BA  0101               	movlb	1	; () banked
 11507  0008BC  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11508  0008BE  0E60               	movlw	low _displaybuffer
 11509  0008C0  0101               	movlb	1	; () banked
 11510  0008C2  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11511  0008C4  0E00               	movlw	high _displaybuffer
 11512  0008C6  0101               	movlb	1	; () banked
 11513  0008C8  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11514  0008CA  90D8               	bcf	status,0,c
 11515  0008CC  3427               	rlcf	LEDsetBar@c,w,c
 11516  0008CE  6ED9               	movwf	fsr2l,c
 11517  0008D0  3428               	rlcf	LEDsetBar@c+1,w,c
 11518  0008D2  6EDA               	movwf	fsr2h,c
 11519  0008D4  90D8               	bcf	status,0,c
 11520  0008D6  36D9               	rlcf	fsr2l,f,c
 11521  0008D8  36DA               	rlcf	fsr2h,f,c
 11522  0008DA  0101               	movlb	1	; () banked
 11523  0008DC  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11524  0008DE  26D9               	addwf	fsr2l,f,c
 11525  0008E0  0101               	movlb	1	; () banked
 11526  0008E2  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11527  0008E4  22DA               	addwfc	fsr2h,f,c
 11528  0008E6  0101               	movlb	1	; () banked
 11529  0008E8  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11530  0008EA  16DE               	andwf	postinc2,f,c
 11531  0008EC  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11532  0008EE  16DE               	andwf	postinc2,f,c
 11533  0008F0  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11534  0008F2  16DE               	andwf	postinc2,f,c
 11535  0008F4  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11536  0008F6  16DE               	andwf	postinc2,f,c
 11537                           
 11538                           ;LED_BarGraph.c: 213: } else if (color == 2) {
 11539  0008F8  0012               	return	
 11540  0008FA                     l6480:
 11541  0008FA  0E02               	movlw	2
 11542  0008FC  1825               	xorwf	LEDsetBar@color,w,c
 11543  0008FE  1026               	iorwf	LEDsetBar@color+1,w,c
 11544  000900  A4D8               	btfss	status,2,c
 11545  000902  D05A               	goto	l6484
 11546                           
 11547                           ;LED_BarGraph.c: 215: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 11548  000904  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11549  000908  0E08               	movlw	8
 11550  00090A  0101               	movlb	1	; () banked
 11551  00090C  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11552  00090E  0E01               	movlw	1
 11553  000910  0101               	movlb	1	; () banked
 11554  000912  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11555  000914  0E00               	movlw	0
 11556  000916  0101               	movlb	1	; () banked
 11557  000918  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11558  00091A  0101               	movlb	1	; () banked
 11559  00091C  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11560  00091E  D004               	goto	u6934
 11561  000920                     u6935:
 11562  000920  90D8               	bcf	status,0,c
 11563  000922  0101               	movlb	1	; () banked
 11564  000924  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11565  000926  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11566  000928                     u6934:
 11567  000928  0101               	movlb	1	; () banked
 11568  00092A  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11569  00092C  D7F9               	goto	u6935
 11570  00092E  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 11571  000932  0E01               	movlw	1
 11572  000934  0101               	movlb	1	; () banked
 11573  000936  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11574  000938  0E00               	movlw	0
 11575  00093A  0101               	movlb	1	; () banked
 11576  00093C  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11577  00093E  0101               	movlb	1	; () banked
 11578  000940  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 11579  000942  D004               	goto	u6944
 11580  000944                     u6945:
 11581  000944  90D8               	bcf	status,0,c
 11582  000946  0101               	movlb	1	; () banked
 11583  000948  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 11584  00094A  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 11585  00094C                     u6944:
 11586  00094C  0101               	movlb	1	; () banked
 11587  00094E  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 11588  000950  D7F9               	goto	u6945
 11589  000952  0101               	movlb	1	; () banked
 11590  000954  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 11591  000956  0101               	movlb	1	; () banked
 11592  000958  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 11593  00095A  0101               	movlb	1	; () banked
 11594  00095C  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11595  00095E  0101               	movlb	1	; () banked
 11596  000960  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 11597  000962  0101               	movlb	1	; () banked
 11598  000964  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 11599  000966  0101               	movlb	1	; () banked
 11600  000968  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11601  00096A  0101               	movlb	1	; () banked
 11602  00096C  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 11603  00096E  0101               	movlb	1	; () banked
 11604  000970  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 11605  000972  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 11606  000974  0101               	movlb	1	; () banked
 11607  000976  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11608  000978  0101               	movlb	1	; () banked
 11609  00097A  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11610  00097C  0E60               	movlw	low _displaybuffer
 11611  00097E  0101               	movlb	1	; () banked
 11612  000980  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11613  000982  0E00               	movlw	high _displaybuffer
 11614  000984  0101               	movlb	1	; () banked
 11615  000986  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11616  000988  90D8               	bcf	status,0,c
 11617  00098A  3427               	rlcf	LEDsetBar@c,w,c
 11618  00098C  6ED9               	movwf	fsr2l,c
 11619  00098E  3428               	rlcf	LEDsetBar@c+1,w,c
 11620  000990  6EDA               	movwf	fsr2h,c
 11621  000992  90D8               	bcf	status,0,c
 11622  000994  36D9               	rlcf	fsr2l,f,c
 11623  000996  36DA               	rlcf	fsr2h,f,c
 11624  000998  0101               	movlb	1	; () banked
 11625  00099A  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11626  00099C  26D9               	addwf	fsr2l,f,c
 11627  00099E  0101               	movlb	1	; () banked
 11628  0009A0  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11629  0009A2  22DA               	addwfc	fsr2h,f,c
 11630  0009A4  0101               	movlb	1	; () banked
 11631  0009A6  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11632  0009A8  12DE               	iorwf	postinc2,f,c
 11633  0009AA  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11634  0009AC  12DE               	iorwf	postinc2,f,c
 11635  0009AE  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11636  0009B0  12DE               	iorwf	postinc2,f,c
 11637  0009B2  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 11638  0009B4  12DE               	iorwf	postinc2,f,c
 11639                           
 11640                           ;LED_BarGraph.c: 216: } else if (color == 0) {
 11641  0009B6  0012               	return	
 11642  0009B8                     l6484:
 11643  0009B8  5025               	movf	LEDsetBar@color,w,c
 11644  0009BA  1026               	iorwf	LEDsetBar@color+1,w,c
 11645  0009BC  A4D8               	btfss	status,2,c
 11646  0009BE  D06A               	goto	l6488
 11647                           
 11648                           ;LED_BarGraph.c: 218: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 11649  0009C0  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11650  0009C4  0E08               	movlw	8
 11651  0009C6  0101               	movlb	1	; () banked
 11652  0009C8  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11653  0009CA  0E01               	movlw	1
 11654  0009CC  0101               	movlb	1	; () banked
 11655  0009CE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11656  0009D0  0E00               	movlw	0
 11657  0009D2  0101               	movlb	1	; () banked
 11658  0009D4  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11659  0009D6  0101               	movlb	1	; () banked
 11660  0009D8  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11661  0009DA  D004               	goto	u6964
 11662  0009DC                     u6965:
 11663  0009DC  90D8               	bcf	status,0,c
 11664  0009DE  0101               	movlb	1	; () banked
 11665  0009E0  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11666  0009E2  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11667  0009E4                     u6964:
 11668  0009E4  0101               	movlb	1	; () banked
 11669  0009E6  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11670  0009E8  D7F9               	goto	u6965
 11671  0009EA  0101               	movlb	1	; () banked
 11672  0009EC  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11673  0009EE  0101               	movlb	1	; () banked
 11674  0009F0  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11675  0009F2  0101               	movlb	1	; () banked
 11676  0009F4  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11677  0009F6  0101               	movlb	1	; () banked
 11678  0009F8  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11679  0009FA  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 11680  0009FE  0E01               	movlw	1
 11681  000A00  0101               	movlb	1	; () banked
 11682  000A02  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11683  000A04  0E00               	movlw	0
 11684  000A06  0101               	movlb	1	; () banked
 11685  000A08  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11686  000A0A  0101               	movlb	1	; () banked
 11687  000A0C  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 11688  000A0E  D004               	goto	u6974
 11689  000A10                     u6975:
 11690  000A10  90D8               	bcf	status,0,c
 11691  000A12  0101               	movlb	1	; () banked
 11692  000A14  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 11693  000A16  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 11694  000A18                     u6974:
 11695  000A18  0101               	movlb	1	; () banked
 11696  000A1A  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 11697  000A1C  D7F9               	goto	u6975
 11698  000A1E  0101               	movlb	1	; () banked
 11699  000A20  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 11700  000A22  0101               	movlb	1	; () banked
 11701  000A24  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11702  000A26  0101               	movlb	1	; () banked
 11703  000A28  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 11704  000A2A  0101               	movlb	1	; () banked
 11705  000A2C  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11706  000A2E  0101               	movlb	1	; () banked
 11707  000A30  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11708  000A32  0101               	movlb	1	; () banked
 11709  000A34  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 11710  000A36  0101               	movlb	1	; () banked
 11711  000A38  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11712  000A3A  0101               	movlb	1	; () banked
 11713  000A3C  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11714  000A3E  0101               	movlb	1	; () banked
 11715  000A40  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 11716  000A42  0101               	movlb	1	; () banked
 11717  000A44  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11718  000A46  0101               	movlb	1	; () banked
 11719  000A48  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 11720  000A4A  0101               	movlb	1	; () banked
 11721  000A4C  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 11722  000A4E  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 11723  000A50  0101               	movlb	1	; () banked
 11724  000A52  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11725  000A54  0101               	movlb	1	; () banked
 11726  000A56  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 11727  000A58  0E60               	movlw	low _displaybuffer
 11728  000A5A  0101               	movlb	1	; () banked
 11729  000A5C  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 11730  000A5E  0E00               	movlw	high _displaybuffer
 11731  000A60  0101               	movlb	1	; () banked
 11732  000A62  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 11733  000A64  90D8               	bcf	status,0,c
 11734  000A66  3427               	rlcf	LEDsetBar@c,w,c
 11735  000A68  6ED9               	movwf	fsr2l,c
 11736  000A6A  3428               	rlcf	LEDsetBar@c+1,w,c
 11737  000A6C  6EDA               	movwf	fsr2h,c
 11738  000A6E  90D8               	bcf	status,0,c
 11739  000A70  36D9               	rlcf	fsr2l,f,c
 11740  000A72  36DA               	rlcf	fsr2h,f,c
 11741  000A74  0101               	movlb	1	; () banked
 11742  000A76  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 11743  000A78  26D9               	addwf	fsr2l,f,c
 11744  000A7A  0101               	movlb	1	; () banked
 11745  000A7C  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 11746  000A7E  22DA               	addwfc	fsr2h,f,c
 11747  000A80  0101               	movlb	1	; () banked
 11748  000A82  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11749  000A84  16DE               	andwf	postinc2,f,c
 11750  000A86  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11751  000A88  16DE               	andwf	postinc2,f,c
 11752  000A8A  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11753  000A8C  16DE               	andwf	postinc2,f,c
 11754  000A8E  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 11755  000A90  16DE               	andwf	postinc2,f,c
 11756                           
 11757                           ;LED_BarGraph.c: 219: } else if (color == 3) {
 11758  000A92  0012               	return	
 11759  000A94                     l6488:
 11760  000A94  0E03               	movlw	3
 11761  000A96  1825               	xorwf	LEDsetBar@color,w,c
 11762  000A98  1026               	iorwf	LEDsetBar@color+1,w,c
 11763  000A9A  A4D8               	btfss	status,2,c
 11764  000A9C  0012               	return	
 11765                           
 11766                           ;LED_BarGraph.c: 221: displaybuffer[c] |= (1<<(a + 8));
 11767  000A9E  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11768  000AA2  0E08               	movlw	8
 11769  000AA4  0101               	movlb	1	; () banked
 11770  000AA6  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11771  000AA8  0E01               	movlw	1
 11772  000AAA  0101               	movlb	1	; () banked
 11773  000AAC  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11774  000AAE  0E00               	movlw	0
 11775  000AB0  0101               	movlb	1	; () banked
 11776  000AB2  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11777  000AB4  0101               	movlb	1	; () banked
 11778  000AB6  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11779  000AB8  D004               	goto	u6994
 11780  000ABA                     u6995:
 11781  000ABA  90D8               	bcf	status,0,c
 11782  000ABC  0101               	movlb	1	; () banked
 11783  000ABE  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11784  000AC0  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11785  000AC2                     u6994:
 11786  000AC2  0101               	movlb	1	; () banked
 11787  000AC4  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11788  000AC6  D7F9               	goto	u6995
 11789  000AC8  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11790  000ACC  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11791  000AD0  0E00               	movlw	0
 11792  000AD2  0101               	movlb	1	; () banked
 11793  000AD4  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11794  000AD6  0EFF               	movlw	255
 11795  000AD8  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11796  000ADA  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11797  000ADC  0E60               	movlw	low _displaybuffer
 11798  000ADE  0101               	movlb	1	; () banked
 11799  000AE0  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11800  000AE2  0E00               	movlw	high _displaybuffer
 11801  000AE4  0101               	movlb	1	; () banked
 11802  000AE6  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11803  000AE8  90D8               	bcf	status,0,c
 11804  000AEA  3427               	rlcf	LEDsetBar@c,w,c
 11805  000AEC  6ED9               	movwf	fsr2l,c
 11806  000AEE  3428               	rlcf	LEDsetBar@c+1,w,c
 11807  000AF0  6EDA               	movwf	fsr2h,c
 11808  000AF2  90D8               	bcf	status,0,c
 11809  000AF4  36D9               	rlcf	fsr2l,f,c
 11810  000AF6  36DA               	rlcf	fsr2h,f,c
 11811  000AF8  0101               	movlb	1	; () banked
 11812  000AFA  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11813  000AFC  26D9               	addwf	fsr2l,f,c
 11814  000AFE  0101               	movlb	1	; () banked
 11815  000B00  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11816  000B02  22DA               	addwfc	fsr2h,f,c
 11817  000B04  0101               	movlb	1	; () banked
 11818  000B06  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11819  000B08  12DE               	iorwf	postinc2,f,c
 11820  000B0A  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11821  000B0C  12DE               	iorwf	postinc2,f,c
 11822  000B0E  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11823  000B10  12DE               	iorwf	postinc2,f,c
 11824  000B12  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11825  000B14  12DE               	iorwf	postinc2,f,c
 11826                           
 11827                           ;LED_BarGraph.c: 223: displaybuffer[c] &= ~(1<<(a));
 11828  000B16  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11829  000B1A  0E01               	movlw	1
 11830  000B1C  0101               	movlb	1	; () banked
 11831  000B1E  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11832  000B20  0E00               	movlw	0
 11833  000B22  0101               	movlb	1	; () banked
 11834  000B24  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11835  000B26  0101               	movlb	1	; () banked
 11836  000B28  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11837  000B2A  D004               	goto	u7004
 11838  000B2C                     u7005:
 11839  000B2C  90D8               	bcf	status,0,c
 11840  000B2E  0101               	movlb	1	; () banked
 11841  000B30  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11842  000B32  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11843  000B34                     u7004:
 11844  000B34  0101               	movlb	1	; () banked
 11845  000B36  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11846  000B38  D7F9               	goto	u7005
 11847  000B3A  0101               	movlb	1	; () banked
 11848  000B3C  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11849  000B3E  0101               	movlb	1	; () banked
 11850  000B40  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11851  000B42  0101               	movlb	1	; () banked
 11852  000B44  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11853  000B46  0101               	movlb	1	; () banked
 11854  000B48  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11855  000B4A  0101               	movlb	1	; () banked
 11856  000B4C  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11857  000B4E  0101               	movlb	1	; () banked
 11858  000B50  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11859  000B52  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11860  000B54  0101               	movlb	1	; () banked
 11861  000B56  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11862  000B58  0101               	movlb	1	; () banked
 11863  000B5A  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11864  000B5C  0E60               	movlw	low _displaybuffer
 11865  000B5E  0101               	movlb	1	; () banked
 11866  000B60  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11867  000B62  0E00               	movlw	high _displaybuffer
 11868  000B64  0101               	movlb	1	; () banked
 11869  000B66  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11870  000B68  90D8               	bcf	status,0,c
 11871  000B6A  3427               	rlcf	LEDsetBar@c,w,c
 11872  000B6C  6ED9               	movwf	fsr2l,c
 11873  000B6E  3428               	rlcf	LEDsetBar@c+1,w,c
 11874  000B70  6EDA               	movwf	fsr2h,c
 11875  000B72  90D8               	bcf	status,0,c
 11876  000B74  36D9               	rlcf	fsr2l,f,c
 11877  000B76  36DA               	rlcf	fsr2h,f,c
 11878  000B78  0101               	movlb	1	; () banked
 11879  000B7A  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11880  000B7C  26D9               	addwf	fsr2l,f,c
 11881  000B7E  0101               	movlb	1	; () banked
 11882  000B80  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11883  000B82  22DA               	addwfc	fsr2h,f,c
 11884  000B84  0101               	movlb	1	; () banked
 11885  000B86  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11886  000B88  16DE               	andwf	postinc2,f,c
 11887  000B8A  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11888  000B8C  16DE               	andwf	postinc2,f,c
 11889  000B8E  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11890  000B90  16DE               	andwf	postinc2,f,c
 11891  000B92  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11892  000B94  16DE               	andwf	postinc2,f,c
 11893                           
 11894                           ; BSR set to: 1
 11895                           
 11896                           ; BSR set to: 1
 11897                           
 11898                           ; BSR set to: 1
 11899  000B96  0012               	return	
 11900  000B98                     __end_of_LEDsetBar:
 11901                           	opt stack 0
 11902                           tosu	equ	0xFFF
 11903                           tosh	equ	0xFFE
 11904                           tosl	equ	0xFFD
 11905                           pclath	equ	0xFFA
 11906                           tblptru	equ	0xFF8
 11907                           tblptrh	equ	0xFF7
 11908                           tblptrl	equ	0xFF6
 11909                           tablat	equ	0xFF5
 11910                           prodh	equ	0xFF4
 11911                           prodl	equ	0xFF3
 11912                           intcon	equ	0xFF2
 11913                           intcon2	equ	0xFF1
 11914                           indf0	equ	0xFEF
 11915                           postinc0	equ	0xFEE
 11916                           fsr0h	equ	0xFEA
 11917                           fsr0l	equ	0xFE9
 11918                           wreg	equ	0xFE8
 11919                           indf2	equ	0xFDF
 11920                           postinc2	equ	0xFDE
 11921                           postdec2	equ	0xFDD
 11922                           plusw2	equ	0xFDB
 11923                           fsr2h	equ	0xFDA
 11924                           fsr2l	equ	0xFD9
 11925                           status	equ	0xFD8
 11926                           
 11927 ;; *************** function ___awdiv *****************
 11928 ;; Defined at:
 11929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  dividend        2   26[COMRAM] int 
 11932 ;;  divisor         2   28[COMRAM] int 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  quotient        2   32[COMRAM] int 
 11935 ;;  sign            1   31[COMRAM] unsigned char 
 11936 ;;  counter         1   30[COMRAM] unsigned char 
 11937 ;; Return value:  Size  Location     Type
 11938 ;;                  2   26[COMRAM] int 
 11939 ;; Registers used:
 11940 ;;		wreg, status,2, status,0
 11941 ;; Tracked objects:
 11942 ;;		On entry : 0/0
 11943 ;;		On exit  : 0/0
 11944 ;;		Unchanged: 0/0
 11945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11946 ;;      Params:         4       0       0       0       0       0       0
 11947 ;;      Locals:         4       0       0       0       0       0       0
 11948 ;;      Temps:          0       0       0       0       0       0       0
 11949 ;;      Totals:         8       0       0       0       0       0       0
 11950 ;;Total ram usage:        8 bytes
 11951 ;; Hardware stack levels used:    1
 11952 ;; Hardware stack levels required when called:    4
 11953 ;; This function calls:
 11954 ;;		Nothing
 11955 ;; This function is called by:
 11956 ;;		_LEDsetBar
 11957 ;;		_begin
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961                           	psect	text59
 11962  002748                     __ptext59:
 11963                           	opt stack 0
 11964  002748                     ___awdiv:
 11965                           	opt stack 24
 11966                           
 11967                           ;incstack = 0
 11968  002748  0E00               	movlw	0
 11969  00274A  6E20               	movwf	___awdiv@sign,c
 11970  00274C  AE1E               	btfss	___awdiv@divisor+1,7,c
 11971  00274E  D006               	goto	l6394
 11972  002750  6C1D               	negf	___awdiv@divisor,c
 11973  002752  1E1E               	comf	___awdiv@divisor+1,f,c
 11974  002754  B0D8               	btfsc	status,0,c
 11975  002756  2A1E               	incf	___awdiv@divisor+1,f,c
 11976  002758  0E01               	movlw	1
 11977  00275A  6E20               	movwf	___awdiv@sign,c
 11978  00275C                     l6394:
 11979  00275C  AE1C               	btfss	___awdiv@dividend+1,7,c
 11980  00275E  D006               	goto	l6400
 11981  002760  6C1B               	negf	___awdiv@dividend,c
 11982  002762  1E1C               	comf	___awdiv@dividend+1,f,c
 11983  002764  B0D8               	btfsc	status,0,c
 11984  002766  2A1C               	incf	___awdiv@dividend+1,f,c
 11985  002768  0E01               	movlw	1
 11986  00276A  1A20               	xorwf	___awdiv@sign,f,c
 11987  00276C                     l6400:
 11988  00276C  0E00               	movlw	0
 11989  00276E  6E22               	movwf	___awdiv@quotient+1,c
 11990  002770  0E00               	movlw	0
 11991  002772  6E21               	movwf	___awdiv@quotient,c
 11992  002774  501D               	movf	___awdiv@divisor,w,c
 11993  002776  101E               	iorwf	___awdiv@divisor+1,w,c
 11994  002778  B4D8               	btfsc	status,2,c
 11995  00277A  D01C               	goto	l6422
 11996  00277C  0E01               	movlw	1
 11997  00277E  6E1F               	movwf	___awdiv@counter,c
 11998  002780  D004               	goto	l6408
 11999  002782                     l6406:
 12000  002782  90D8               	bcf	status,0,c
 12001  002784  361D               	rlcf	___awdiv@divisor,f,c
 12002  002786  361E               	rlcf	___awdiv@divisor+1,f,c
 12003  002788  2A1F               	incf	___awdiv@counter,f,c
 12004  00278A                     l6408:
 12005  00278A  AE1E               	btfss	___awdiv@divisor+1,7,c
 12006  00278C  D7FA               	goto	l6406
 12007  00278E                     l6410:
 12008  00278E  90D8               	bcf	status,0,c
 12009  002790  3621               	rlcf	___awdiv@quotient,f,c
 12010  002792  3622               	rlcf	___awdiv@quotient+1,f,c
 12011  002794  501D               	movf	___awdiv@divisor,w,c
 12012  002796  5C1B               	subwf	___awdiv@dividend,w,c
 12013  002798  501E               	movf	___awdiv@divisor+1,w,c
 12014  00279A  581C               	subwfb	___awdiv@dividend+1,w,c
 12015  00279C  A0D8               	btfss	status,0,c
 12016  00279E  D005               	goto	l6418
 12017  0027A0  501D               	movf	___awdiv@divisor,w,c
 12018  0027A2  5E1B               	subwf	___awdiv@dividend,f,c
 12019  0027A4  501E               	movf	___awdiv@divisor+1,w,c
 12020  0027A6  5A1C               	subwfb	___awdiv@dividend+1,f,c
 12021  0027A8  8021               	bsf	___awdiv@quotient,0,c
 12022  0027AA                     l6418:
 12023  0027AA  90D8               	bcf	status,0,c
 12024  0027AC  321E               	rrcf	___awdiv@divisor+1,f,c
 12025  0027AE  321D               	rrcf	___awdiv@divisor,f,c
 12026  0027B0  2E1F               	decfsz	___awdiv@counter,f,c
 12027  0027B2  D7ED               	goto	l6410
 12028  0027B4                     l6422:
 12029  0027B4  5020               	movf	___awdiv@sign,w,c
 12030  0027B6  B4D8               	btfsc	status,2,c
 12031  0027B8  D004               	goto	l6426
 12032  0027BA  6C21               	negf	___awdiv@quotient,c
 12033  0027BC  1E22               	comf	___awdiv@quotient+1,f,c
 12034  0027BE  B0D8               	btfsc	status,0,c
 12035  0027C0  2A22               	incf	___awdiv@quotient+1,f,c
 12036  0027C2                     l6426:
 12037  0027C2  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 12038  0027C6  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 12039  0027CA  0012               	return	
 12040  0027CC                     __end_of___awdiv:
 12041                           	opt stack 0
 12042                           tosu	equ	0xFFF
 12043                           tosh	equ	0xFFE
 12044                           tosl	equ	0xFFD
 12045                           pclath	equ	0xFFA
 12046                           tblptru	equ	0xFF8
 12047                           tblptrh	equ	0xFF7
 12048                           tblptrl	equ	0xFF6
 12049                           tablat	equ	0xFF5
 12050                           prodh	equ	0xFF4
 12051                           prodl	equ	0xFF3
 12052                           intcon	equ	0xFF2
 12053                           intcon2	equ	0xFF1
 12054                           indf0	equ	0xFEF
 12055                           postinc0	equ	0xFEE
 12056                           fsr0h	equ	0xFEA
 12057                           fsr0l	equ	0xFE9
 12058                           wreg	equ	0xFE8
 12059                           indf2	equ	0xFDF
 12060                           postinc2	equ	0xFDE
 12061                           postdec2	equ	0xFDD
 12062                           plusw2	equ	0xFDB
 12063                           fsr2h	equ	0xFDA
 12064                           fsr2l	equ	0xFD9
 12065                           status	equ	0xFD8
 12066                           
 12067 ;; *************** function _LEDbegin *****************
 12068 ;; Defined at:
 12069 ;;		line 85 in file "LED_BarGraph.c"
 12070 ;; Parameters:    Size  Location     Type
 12071 ;;  i2c_addr        1    wreg     unsigned char 
 12072 ;; Auto vars:     Size  Location     Type
 12073 ;;  i2c_addr        1   10[BANK1 ] unsigned char 
 12074 ;;  writeBuffer     3    5[BANK1 ] unsigned char [3]
 12075 ;;  timeOut         2    8[BANK1 ] unsigned int 
 12076 ;;  status          1   11[BANK1 ] enum E8697
 12077 ;; Return value:  Size  Location     Type
 12078 ;;                  1    wreg      void 
 12079 ;; Registers used:
 12080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12081 ;; Tracked objects:
 12082 ;;		On entry : 0/0
 12083 ;;		On exit  : 0/0
 12084 ;;		Unchanged: 0/0
 12085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12086 ;;      Params:         0       0       0       0       0       0       0
 12087 ;;      Locals:         0       0       7       0       0       0       0
 12088 ;;      Temps:          0       0       0       0       0       0       0
 12089 ;;      Totals:         0       0       7       0       0       0       0
 12090 ;;Total ram usage:        7 bytes
 12091 ;; Hardware stack levels used:    1
 12092 ;; Hardware stack levels required when called:    7
 12093 ;; This function calls:
 12094 ;;		_I2C1_MasterWrite
 12095 ;;		_LEDBsetBrightness
 12096 ;;		_LEDblinkRate
 12097 ;; This function is called by:
 12098 ;;		_main
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text60
 12103  002336                     __ptext60:
 12104                           	opt stack 0
 12105  002336                     _LEDbegin:
 12106                           	opt stack 23
 12107                           
 12108                           ;incstack = 0
 12109                           ;LEDbegin@i2c_addr stored from wreg
 12110  002336  0101               	movlb	1	; () banked
 12111  002338  6F43               	movwf	LEDbegin@i2c_addr& (0+255),b
 12112                           
 12113                           ;LED_BarGraph.c: 86: uint8_t writeBuffer[3];
 12114                           ;LED_BarGraph.c: 87: uint16_t timeOut;
 12115                           ;LED_BarGraph.c: 88: writeBuffer[0] = 0x21;
 12116  00233A  0E21               	movlw	33
 12117  00233C  0101               	movlb	1	; () banked
 12118  00233E  6F3E               	movwf	LEDbegin@writeBuffer& (0+255),b
 12119                           
 12120                           ;LED_BarGraph.c: 89: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12121  002340  0E02               	movlw	2
 12122  002342  0101               	movlb	1	; () banked
 12123  002344  6F44               	movwf	LEDbegin@status& (0+255),b
 12124                           
 12125                           ;LED_BarGraph.c: 91: timeOut = 0;
 12126  002346  0E00               	movlw	0
 12127  002348  0101               	movlb	1	; () banked
 12128  00234A  6F42               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 12129  00234C  0E00               	movlw	0
 12130  00234E  6F41               	movwf	LEDbegin@timeOut& (0+255),b
 12131                           
 12132                           ;LED_BarGraph.c: 92: while (status != I2C1_MESSAGE_FAIL) {
 12133  002350  D02F               	goto	l6946
 12134  002352                     l6926:
 12135                           
 12136                           ; BSR set to: 1
 12137                           ;LED_BarGraph.c: 94: I2C1_MasterWrite(&writeBuffer,
 12138                           ;LED_BarGraph.c: 95: 1,
 12139                           ;LED_BarGraph.c: 96: i2c_addr,
 12140                           ;LED_BarGraph.c: 97: &status);
 12141  002352  0E3E               	movlw	low LEDbegin@writeBuffer
 12142  002354  0100               	movlb	0	; () banked
 12143  002356  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12144  002358  0E01               	movlw	high LEDbegin@writeBuffer
 12145  00235A  0100               	movlb	0	; () banked
 12146  00235C  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12147  00235E  0E00               	movlw	0
 12148  002360  0100               	movlb	0	; () banked
 12149  002362  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12150  002364  0E01               	movlw	1
 12151  002366  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12152  002368  C143  F0F6         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 12153  00236C  0100               	movlb	0	; () banked
 12154  00236E  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12155  002370  0E44               	movlw	low LEDbegin@status
 12156  002372  0100               	movlb	0	; () banked
 12157  002374  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12158  002376  0E01               	movlw	high LEDbegin@status
 12159  002378  0100               	movlb	0	; () banked
 12160  00237A  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12161  00237C  ECEE  F015         	call	_I2C1_MasterWrite	;wreg free
 12162  002380                     l6928:
 12163  002380  0E02               	movlw	2
 12164  002382  0101               	movlb	1	; () banked
 12165  002384  1944               	xorwf	LEDbegin@status& (0+255),w,b
 12166  002386  B4D8               	btfsc	status,2,c
 12167  002388  D7FB               	goto	l6928
 12168                           
 12169                           ; BSR set to: 1
 12170                           ;LED_BarGraph.c: 102: if (status == I2C1_MESSAGE_COMPLETE)
 12171                           
 12172                           ; BSR set to: 1
 12173  00238A  0101               	movlb	1	; () banked
 12174  00238C  5144               	movf	LEDbegin@status& (0+255),w,b
 12175  00238E  0101               	movlb	1	; () banked
 12176  002390  B4D8               	btfsc	status,2,c
 12177  002392  D012               	goto	l6948
 12178                           
 12179                           ; BSR set to: 1
 12180                           ;LED_BarGraph.c: 104: if (timeOut == 100)
 12181                           
 12182                           ; BSR set to: 1
 12183                           
 12184                           ; BSR set to: 1
 12185                           ;LED_BarGraph.c: 103: break;
 12186  002394  0E64               	movlw	100
 12187  002396  0101               	movlb	1	; () banked
 12188  002398  1941               	xorwf	LEDbegin@timeOut& (0+255),w,b
 12189  00239A  0101               	movlb	1	; () banked
 12190  00239C  1142               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 12191  00239E  B4D8               	btfsc	status,2,c
 12192  0023A0  D00B               	goto	l6948
 12193                           
 12194                           ; BSR set to: 1
 12195                           ;LED_BarGraph.c: 106: if (status == I2C1_MESSAGE_FAIL)
 12196                           
 12197                           ; BSR set to: 1
 12198                           
 12199                           ; BSR set to: 1
 12200                           ;LED_BarGraph.c: 105: break;
 12201  0023A2  0101               	movlb	1	; () banked
 12202  0023A4  0544               	decf	LEDbegin@status& (0+255),w,b
 12203  0023A6  B4D8               	btfsc	status,2,c
 12204  0023A8  D007               	goto	l6948
 12205                           
 12206                           ; BSR set to: 1
 12207                           ;LED_BarGraph.c: 108: else
 12208                           ;LED_BarGraph.c: 109: timeOut++;
 12209                           
 12210                           ; BSR set to: 1
 12211                           
 12212                           ; BSR set to: 1
 12213                           
 12214                           ; BSR set to: 1
 12215                           ;LED_BarGraph.c: 107: break;
 12216  0023AA  0101               	movlb	1	; () banked
 12217  0023AC  4B41               	infsnz	LEDbegin@timeOut& (0+255),f,b
 12218  0023AE  2B42               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 12219  0023B0                     l6946:
 12220                           
 12221                           ; BSR set to: 1
 12222  0023B0  0101               	movlb	1	; () banked
 12223  0023B2  0544               	decf	LEDbegin@status& (0+255),w,b
 12224  0023B4  A4D8               	btfss	status,2,c
 12225  0023B6  D7CD               	goto	l6926
 12226  0023B8                     l6948:
 12227                           
 12228                           ; BSR set to: 1
 12229                           ;LED_BarGraph.c: 110: }
 12230                           ;LED_BarGraph.c: 112: LEDblinkRate(0, i2c_addr);
 12231  0023B8  0E00               	movlw	0
 12232  0023BA  6E26               	movwf	LEDblinkRate@b+1,c
 12233  0023BC  0E00               	movlw	0
 12234  0023BE  6E25               	movwf	LEDblinkRate@b,c
 12235  0023C0  C143  F027         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 12236  0023C4  ECED  F011         	call	_LEDblinkRate	;wreg free
 12237                           
 12238                           ;LED_BarGraph.c: 113: LEDBsetBrightness(15, i2c_addr);
 12239  0023C8  0E00               	movlw	0
 12240  0023CA  6E26               	movwf	LEDBsetBrightness@b+1,c
 12241  0023CC  0E0F               	movlw	15
 12242  0023CE  6E25               	movwf	LEDBsetBrightness@b,c
 12243  0023D0  C143  F027         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 12244  0023D4  EC3B  F012         	call	_LEDBsetBrightness	;wreg free
 12245  0023D8  0012               	return		;funcret
 12246  0023DA                     __end_of_LEDbegin:
 12247                           	opt stack 0
 12248                           tosu	equ	0xFFF
 12249                           tosh	equ	0xFFE
 12250                           tosl	equ	0xFFD
 12251                           pclath	equ	0xFFA
 12252                           tblptru	equ	0xFF8
 12253                           tblptrh	equ	0xFF7
 12254                           tblptrl	equ	0xFF6
 12255                           tablat	equ	0xFF5
 12256                           prodh	equ	0xFF4
 12257                           prodl	equ	0xFF3
 12258                           intcon	equ	0xFF2
 12259                           intcon2	equ	0xFF1
 12260                           indf0	equ	0xFEF
 12261                           postinc0	equ	0xFEE
 12262                           fsr0h	equ	0xFEA
 12263                           fsr0l	equ	0xFE9
 12264                           wreg	equ	0xFE8
 12265                           indf2	equ	0xFDF
 12266                           postinc2	equ	0xFDE
 12267                           postdec2	equ	0xFDD
 12268                           plusw2	equ	0xFDB
 12269                           fsr2h	equ	0xFDA
 12270                           fsr2l	equ	0xFD9
 12271                           status	equ	0xFD8
 12272                           
 12273 ;; *************** function _LEDblinkRate *****************
 12274 ;; Defined at:
 12275 ;;		line 55 in file "LED_BarGraph.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;  b               2   36[COMRAM] int 
 12278 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12281 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12282 ;;  status          1    4[BANK1 ] enum E8697
 12283 ;; Return value:  Size  Location     Type
 12284 ;;                  1    wreg      void 
 12285 ;; Registers used:
 12286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12287 ;; Tracked objects:
 12288 ;;		On entry : 0/0
 12289 ;;		On exit  : 0/0
 12290 ;;		Unchanged: 0/0
 12291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12292 ;;      Params:         3       0       0       0       0       0       0
 12293 ;;      Locals:         0       0       5       0       0       0       0
 12294 ;;      Temps:          0       0       0       0       0       0       0
 12295 ;;      Totals:         3       0       5       0       0       0       0
 12296 ;;Total ram usage:        8 bytes
 12297 ;; Hardware stack levels used:    1
 12298 ;; Hardware stack levels required when called:    6
 12299 ;; This function calls:
 12300 ;;		_I2C1_MasterWrite
 12301 ;; This function is called by:
 12302 ;;		_LEDbegin
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306                           	psect	text61
 12307  0023DA                     __ptext61:
 12308                           	opt stack 0
 12309  0023DA                     _LEDblinkRate:
 12310                           	opt stack 23
 12311                           
 12312                           ;LED_BarGraph.c: 56: if (b > 3) b = 0;
 12313                           
 12314                           ;incstack = 0
 12315  0023DA  BE26               	btfsc	LEDblinkRate@b+1,7,c
 12316  0023DC  D00A               	goto	l6528
 12317  0023DE  5026               	movf	LEDblinkRate@b+1,w,c
 12318  0023E0  E104               	bnz	u7070
 12319  0023E2  0E04               	movlw	4
 12320  0023E4  5C25               	subwf	LEDblinkRate@b,w,c
 12321  0023E6  A0D8               	btfss	status,0,c
 12322  0023E8  D004               	goto	l6528
 12323  0023EA                     u7070:
 12324  0023EA  0E00               	movlw	0
 12325  0023EC  6E26               	movwf	LEDblinkRate@b+1,c
 12326  0023EE  0E00               	movlw	0
 12327  0023F0  6E25               	movwf	LEDblinkRate@b,c
 12328  0023F2                     l6528:
 12329                           
 12330                           ;LED_BarGraph.c: 57: uint8_t writeBuffer[2];
 12331                           ;LED_BarGraph.c: 58: uint16_t timeOut;
 12332                           ;LED_BarGraph.c: 59: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 12333  0023F2  5025               	movf	LEDblinkRate@b,w,c
 12334  0023F4  2425               	addwf	LEDblinkRate@b,w,c
 12335  0023F6  0981               	iorlw	129
 12336  0023F8  0101               	movlb	1	; () banked
 12337  0023FA  6F39               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 12338                           
 12339                           ; BSR set to: 1
 12340                           ;LED_BarGraph.c: 60: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12341  0023FC  0E02               	movlw	2
 12342  0023FE  0101               	movlb	1	; () banked
 12343  002400  6F3D               	movwf	LEDblinkRate@status& (0+255),b
 12344                           
 12345                           ; BSR set to: 1
 12346                           ;LED_BarGraph.c: 62: timeOut = 0;
 12347  002402  0E00               	movlw	0
 12348  002404  0101               	movlb	1	; () banked
 12349  002406  6F3C               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 12350  002408  0E00               	movlw	0
 12351  00240A  6F3B               	movwf	LEDblinkRate@timeOut& (0+255),b
 12352                           
 12353                           ;LED_BarGraph.c: 63: while (status != I2C1_MESSAGE_FAIL) {
 12354  00240C  D02F               	goto	l6554
 12355  00240E                     l6534:
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;LED_BarGraph.c: 65: I2C1_MasterWrite(&writeBuffer,
 12359                           ;LED_BarGraph.c: 66: 1,
 12360                           ;LED_BarGraph.c: 67: i2c_addr,
 12361                           ;LED_BarGraph.c: 68: &status);
 12362  00240E  0E39               	movlw	low LEDblinkRate@writeBuffer
 12363  002410  0100               	movlb	0	; () banked
 12364  002412  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12365  002414  0E01               	movlw	high LEDblinkRate@writeBuffer
 12366  002416  0100               	movlb	0	; () banked
 12367  002418  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12368  00241A  0E00               	movlw	0
 12369  00241C  0100               	movlb	0	; () banked
 12370  00241E  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12371  002420  0E01               	movlw	1
 12372  002422  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12373  002424  C027  F0F6         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 12374  002428  0100               	movlb	0	; () banked
 12375  00242A  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12376  00242C  0E3D               	movlw	low LEDblinkRate@status
 12377  00242E  0100               	movlb	0	; () banked
 12378  002430  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12379  002432  0E01               	movlw	high LEDblinkRate@status
 12380  002434  0100               	movlb	0	; () banked
 12381  002436  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12382  002438  ECEE  F015         	call	_I2C1_MasterWrite	;wreg free
 12383  00243C                     l6536:
 12384  00243C  0E02               	movlw	2
 12385  00243E  0101               	movlb	1	; () banked
 12386  002440  193D               	xorwf	LEDblinkRate@status& (0+255),w,b
 12387  002442  B4D8               	btfsc	status,2,c
 12388  002444  D7FB               	goto	l6536
 12389                           
 12390                           ; BSR set to: 1
 12391                           ;LED_BarGraph.c: 73: if (status == I2C1_MESSAGE_COMPLETE)
 12392                           
 12393                           ; BSR set to: 1
 12394  002446  0101               	movlb	1	; () banked
 12395  002448  513D               	movf	LEDblinkRate@status& (0+255),w,b
 12396  00244A  0101               	movlb	1	; () banked
 12397  00244C  B4D8               	btfsc	status,2,c
 12398  00244E  0012               	return	
 12399                           
 12400                           ; BSR set to: 1
 12401                           ;LED_BarGraph.c: 75: if (timeOut == 100)
 12402                           
 12403                           ; BSR set to: 1
 12404                           
 12405                           ; BSR set to: 1
 12406                           ;LED_BarGraph.c: 74: break;
 12407  002450  0E64               	movlw	100
 12408  002452  0101               	movlb	1	; () banked
 12409  002454  193B               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 12410  002456  0101               	movlb	1	; () banked
 12411  002458  113C               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 12412  00245A  B4D8               	btfsc	status,2,c
 12413  00245C  0012               	return	
 12414                           
 12415                           ; BSR set to: 1
 12416                           ;LED_BarGraph.c: 77: if (status == I2C1_MESSAGE_FAIL)
 12417                           
 12418                           ; BSR set to: 1
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;LED_BarGraph.c: 76: break;
 12422  00245E  0101               	movlb	1	; () banked
 12423  002460  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12424  002462  B4D8               	btfsc	status,2,c
 12425  002464  0012               	return	
 12426                           
 12427                           ; BSR set to: 1
 12428                           ;LED_BarGraph.c: 79: else
 12429                           ;LED_BarGraph.c: 80: timeOut++;
 12430                           
 12431                           ; BSR set to: 1
 12432                           
 12433                           ; BSR set to: 1
 12434                           
 12435                           ; BSR set to: 1
 12436                           ;LED_BarGraph.c: 78: break;
 12437  002466  0101               	movlb	1	; () banked
 12438  002468  4B3B               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 12439  00246A  2B3C               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 12440  00246C                     l6554:
 12441                           
 12442                           ; BSR set to: 1
 12443  00246C  0101               	movlb	1	; () banked
 12444  00246E  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12445  002470  B4D8               	btfsc	status,2,c
 12446  002472  0012               	return	
 12447  002474  D7CC               	goto	l6534
 12448  002476                     __end_of_LEDblinkRate:
 12449                           	opt stack 0
 12450                           tosu	equ	0xFFF
 12451                           tosh	equ	0xFFE
 12452                           tosl	equ	0xFFD
 12453                           pclath	equ	0xFFA
 12454                           tblptru	equ	0xFF8
 12455                           tblptrh	equ	0xFF7
 12456                           tblptrl	equ	0xFF6
 12457                           tablat	equ	0xFF5
 12458                           prodh	equ	0xFF4
 12459                           prodl	equ	0xFF3
 12460                           intcon	equ	0xFF2
 12461                           intcon2	equ	0xFF1
 12462                           indf0	equ	0xFEF
 12463                           postinc0	equ	0xFEE
 12464                           fsr0h	equ	0xFEA
 12465                           fsr0l	equ	0xFE9
 12466                           wreg	equ	0xFE8
 12467                           indf2	equ	0xFDF
 12468                           postinc2	equ	0xFDE
 12469                           postdec2	equ	0xFDD
 12470                           plusw2	equ	0xFDB
 12471                           fsr2h	equ	0xFDA
 12472                           fsr2l	equ	0xFD9
 12473                           status	equ	0xFD8
 12474                           
 12475 ;; *************** function _LEDBsetBrightness *****************
 12476 ;; Defined at:
 12477 ;;		line 25 in file "LED_BarGraph.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;  b               2   36[COMRAM] int 
 12480 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12481 ;; Auto vars:     Size  Location     Type
 12482 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12483 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12484 ;;  status          1    4[BANK1 ] enum E8697
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  1    wreg      void 
 12487 ;; Registers used:
 12488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12489 ;; Tracked objects:
 12490 ;;		On entry : 0/0
 12491 ;;		On exit  : 0/0
 12492 ;;		Unchanged: 0/0
 12493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12494 ;;      Params:         3       0       0       0       0       0       0
 12495 ;;      Locals:         0       0       5       0       0       0       0
 12496 ;;      Temps:          0       0       0       0       0       0       0
 12497 ;;      Totals:         3       0       5       0       0       0       0
 12498 ;;Total ram usage:        8 bytes
 12499 ;; Hardware stack levels used:    1
 12500 ;; Hardware stack levels required when called:    6
 12501 ;; This function calls:
 12502 ;;		_I2C1_MasterWrite
 12503 ;; This function is called by:
 12504 ;;		_LEDbegin
 12505 ;; This function uses a non-reentrant model
 12506 ;;
 12507                           
 12508                           	psect	text62
 12509  002476                     __ptext62:
 12510                           	opt stack 0
 12511  002476                     _LEDBsetBrightness:
 12512                           	opt stack 23
 12513                           
 12514                           ;LED_BarGraph.c: 26: if (b > 15) b = 15;
 12515                           
 12516                           ; BSR set to: 1
 12517                           ;incstack = 0
 12518  002476  BE26               	btfsc	LEDBsetBrightness@b+1,7,c
 12519  002478  D00A               	goto	l6496
 12520  00247A  5026               	movf	LEDBsetBrightness@b+1,w,c
 12521  00247C  E104               	bnz	u7010
 12522  00247E  0E10               	movlw	16
 12523  002480  5C25               	subwf	LEDBsetBrightness@b,w,c
 12524  002482  A0D8               	btfss	status,0,c
 12525  002484  D004               	goto	l6496
 12526  002486                     u7010:
 12527  002486  0E00               	movlw	0
 12528  002488  6E26               	movwf	LEDBsetBrightness@b+1,c
 12529  00248A  0E0F               	movlw	15
 12530  00248C  6E25               	movwf	LEDBsetBrightness@b,c
 12531  00248E                     l6496:
 12532                           
 12533                           ;LED_BarGraph.c: 27: uint8_t writeBuffer[2];
 12534                           ;LED_BarGraph.c: 28: uint16_t timeOut;
 12535                           ;LED_BarGraph.c: 29: writeBuffer[0] = (0xE0 | b);
 12536  00248E  5025               	movf	LEDBsetBrightness@b,w,c
 12537  002490  09E0               	iorlw	224
 12538  002492  0101               	movlb	1	; () banked
 12539  002494  6F39               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 12540                           
 12541                           ; BSR set to: 1
 12542                           ;LED_BarGraph.c: 30: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12543  002496  0E02               	movlw	2
 12544  002498  0101               	movlb	1	; () banked
 12545  00249A  6F3D               	movwf	LEDBsetBrightness@status& (0+255),b
 12546                           
 12547                           ; BSR set to: 1
 12548                           ;LED_BarGraph.c: 32: timeOut = 0;
 12549  00249C  0E00               	movlw	0
 12550  00249E  0101               	movlb	1	; () banked
 12551  0024A0  6F3C               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 12552  0024A2  0E00               	movlw	0
 12553  0024A4  6F3B               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 12554                           
 12555                           ;LED_BarGraph.c: 33: while (status != I2C1_MESSAGE_FAIL) {
 12556  0024A6  D02F               	goto	l6522
 12557  0024A8                     l6502:
 12558                           
 12559                           ; BSR set to: 1
 12560                           ;LED_BarGraph.c: 35: I2C1_MasterWrite(&writeBuffer,
 12561                           ;LED_BarGraph.c: 36: 1,
 12562                           ;LED_BarGraph.c: 37: i2c_addr,
 12563                           ;LED_BarGraph.c: 38: &status);
 12564  0024A8  0E39               	movlw	low LEDBsetBrightness@writeBuffer
 12565  0024AA  0100               	movlb	0	; () banked
 12566  0024AC  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12567  0024AE  0E01               	movlw	high LEDBsetBrightness@writeBuffer
 12568  0024B0  0100               	movlb	0	; () banked
 12569  0024B2  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12570  0024B4  0E00               	movlw	0
 12571  0024B6  0100               	movlb	0	; () banked
 12572  0024B8  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12573  0024BA  0E01               	movlw	1
 12574  0024BC  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12575  0024BE  C027  F0F6         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 12576  0024C2  0100               	movlb	0	; () banked
 12577  0024C4  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12578  0024C6  0E3D               	movlw	low LEDBsetBrightness@status
 12579  0024C8  0100               	movlb	0	; () banked
 12580  0024CA  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12581  0024CC  0E01               	movlw	high LEDBsetBrightness@status
 12582  0024CE  0100               	movlb	0	; () banked
 12583  0024D0  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12584  0024D2  ECEE  F015         	call	_I2C1_MasterWrite	;wreg free
 12585  0024D6                     l6504:
 12586  0024D6  0E02               	movlw	2
 12587  0024D8  0101               	movlb	1	; () banked
 12588  0024DA  193D               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 12589  0024DC  B4D8               	btfsc	status,2,c
 12590  0024DE  D7FB               	goto	l6504
 12591                           
 12592                           ; BSR set to: 1
 12593                           ;LED_BarGraph.c: 43: if (status == I2C1_MESSAGE_COMPLETE)
 12594                           
 12595                           ; BSR set to: 1
 12596  0024E0  0101               	movlb	1	; () banked
 12597  0024E2  513D               	movf	LEDBsetBrightness@status& (0+255),w,b
 12598  0024E4  0101               	movlb	1	; () banked
 12599  0024E6  B4D8               	btfsc	status,2,c
 12600  0024E8  0012               	return	
 12601                           
 12602                           ; BSR set to: 1
 12603                           ;LED_BarGraph.c: 45: if (timeOut == 100)
 12604                           
 12605                           ; BSR set to: 1
 12606                           
 12607                           ; BSR set to: 1
 12608                           ;LED_BarGraph.c: 44: break;
 12609  0024EA  0E64               	movlw	100
 12610  0024EC  0101               	movlb	1	; () banked
 12611  0024EE  193B               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 12612  0024F0  0101               	movlb	1	; () banked
 12613  0024F2  113C               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 12614  0024F4  B4D8               	btfsc	status,2,c
 12615  0024F6  0012               	return	
 12616                           
 12617                           ; BSR set to: 1
 12618                           ;LED_BarGraph.c: 47: if (status == I2C1_MESSAGE_FAIL)
 12619                           
 12620                           ; BSR set to: 1
 12621                           
 12622                           ; BSR set to: 1
 12623                           ;LED_BarGraph.c: 46: break;
 12624  0024F8  0101               	movlb	1	; () banked
 12625  0024FA  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12626  0024FC  B4D8               	btfsc	status,2,c
 12627  0024FE  0012               	return	
 12628                           
 12629                           ; BSR set to: 1
 12630                           ;LED_BarGraph.c: 49: else
 12631                           ;LED_BarGraph.c: 50: timeOut++;
 12632                           
 12633                           ; BSR set to: 1
 12634                           
 12635                           ; BSR set to: 1
 12636                           
 12637                           ; BSR set to: 1
 12638                           ;LED_BarGraph.c: 48: break;
 12639  002500  0101               	movlb	1	; () banked
 12640  002502  4B3B               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 12641  002504  2B3C               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 12642  002506                     l6522:
 12643                           
 12644                           ; BSR set to: 1
 12645  002506  0101               	movlb	1	; () banked
 12646  002508  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12647  00250A  B4D8               	btfsc	status,2,c
 12648  00250C  0012               	return	
 12649  00250E  D7CC               	goto	l6502
 12650  002510                     __end_of_LEDBsetBrightness:
 12651                           	opt stack 0
 12652                           tosu	equ	0xFFF
 12653                           tosh	equ	0xFFE
 12654                           tosl	equ	0xFFD
 12655                           pclath	equ	0xFFA
 12656                           tblptru	equ	0xFF8
 12657                           tblptrh	equ	0xFF7
 12658                           tblptrl	equ	0xFF6
 12659                           tablat	equ	0xFF5
 12660                           prodh	equ	0xFF4
 12661                           prodl	equ	0xFF3
 12662                           intcon	equ	0xFF2
 12663                           intcon2	equ	0xFF1
 12664                           indf0	equ	0xFEF
 12665                           postinc0	equ	0xFEE
 12666                           fsr0h	equ	0xFEA
 12667                           fsr0l	equ	0xFE9
 12668                           wreg	equ	0xFE8
 12669                           indf2	equ	0xFDF
 12670                           postinc2	equ	0xFDE
 12671                           postdec2	equ	0xFDD
 12672                           plusw2	equ	0xFDB
 12673                           fsr2h	equ	0xFDA
 12674                           fsr2l	equ	0xFD9
 12675                           status	equ	0xFD8
 12676                           
 12677 ;; *************** function _I2C1_MasterWrite *****************
 12678 ;; Defined at:
 12679 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 12680 ;; Parameters:    Size  Location     Type
 12681 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 12682 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12683 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12684 ;;  length          2    2[BANK0 ] int 
 12685 ;;  address         2    4[BANK0 ] unsigned int 
 12686 ;;  pflag           2    6[BANK0 ] PTR enum E8678
 12687 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12688 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12689 ;; Auto vars:     Size  Location     Type
 12690 ;;		None
 12691 ;; Return value:  Size  Location     Type
 12692 ;;                  1    wreg      void 
 12693 ;; Registers used:
 12694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12695 ;; Tracked objects:
 12696 ;;		On entry : 0/0
 12697 ;;		On exit  : 0/0
 12698 ;;		Unchanged: 0/0
 12699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12700 ;;      Params:         0       8       0       0       0       0       0
 12701 ;;      Locals:         0       0       0       0       0       0       0
 12702 ;;      Temps:          0       0       0       0       0       0       0
 12703 ;;      Totals:         0       8       0       0       0       0       0
 12704 ;;Total ram usage:        8 bytes
 12705 ;; Hardware stack levels used:    1
 12706 ;; Hardware stack levels required when called:    5
 12707 ;; This function calls:
 12708 ;;		_I2C1_MasterTRBInsert
 12709 ;;		_I2C1_MasterWriteTRBBuild
 12710 ;; This function is called by:
 12711 ;;		_LEDBsetBrightness
 12712 ;;		_LEDblinkRate
 12713 ;;		_LEDbegin
 12714 ;;		_LEDwriteDisplay
 12715 ;;		_OLED_command
 12716 ;;		_oledPutChar
 12717 ;;		_Display
 12718 ;; This function uses a non-reentrant model
 12719 ;;
 12720                           
 12721                           	psect	text63
 12722  002BDC                     __ptext63:
 12723                           	opt stack 0
 12724  002BDC                     _I2C1_MasterWrite:
 12725                           	opt stack 22
 12726                           
 12727                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 12728                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 12729                           
 12730                           ; BSR set to: 1
 12731                           ;incstack = 0
 12732  002BDC  0100               	movlb	0	; () banked
 12733  002BDE  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12734  002BE0  D021               	goto	l5886
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;i2c1.c: 561: {
 12738                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 12739  002BE2  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12740  002BE4  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 12741  002BE6  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12742  002BE8  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 12743  002BEA  C0F2  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 12744  002BEE  C0F3  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 12745  002BF2  C0F4  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 12746  002BF6  C0F5  F020         	movff	I2C1_MasterWrite@length+1,I2C1_MasterWriteTRBBuild@length+1
 12747  002BFA  C0F6  F021         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 12748  002BFE  C0F7  F022         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 12749  002C02  EC8B  F016         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 12750                           
 12751                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12752  002C06  0E00               	movlw	0
 12753  002C08  6E1C               	movwf	I2C1_MasterTRBInsert@count+1,c
 12754  002C0A  0E01               	movlw	1
 12755  002C0C  6E1B               	movwf	I2C1_MasterTRBInsert@count,c
 12756  002C0E  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12757  002C10  6E1D               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 12758  002C12  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12759  002C14  6E1E               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 12760  002C16  C0F8  F01F         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 12761  002C1A  C0F9  F020         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 12762  002C1E  EC48  F010         	call	_I2C1_MasterTRBInsert	;wreg free
 12763                           
 12764                           ;i2c1.c: 564: }
 12765  002C22  0012               	return	
 12766  002C24                     l5886:
 12767                           
 12768                           ;i2c1.c: 565: else
 12769                           ;i2c1.c: 566: {
 12770                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 12771  002C24  C0F8  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 12772  002C28  C0F9  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 12773  002C2C  0E01               	movlw	1
 12774  002C2E  6EDF               	movwf	indf2,c
 12775  002C30  0012               	return	
 12776  002C32                     __end_of_I2C1_MasterWrite:
 12777                           	opt stack 0
 12778                           tosu	equ	0xFFF
 12779                           tosh	equ	0xFFE
 12780                           tosl	equ	0xFFD
 12781                           pclath	equ	0xFFA
 12782                           tblptru	equ	0xFF8
 12783                           tblptrh	equ	0xFF7
 12784                           tblptrl	equ	0xFF6
 12785                           tablat	equ	0xFF5
 12786                           prodh	equ	0xFF4
 12787                           prodl	equ	0xFF3
 12788                           intcon	equ	0xFF2
 12789                           intcon2	equ	0xFF1
 12790                           indf0	equ	0xFEF
 12791                           postinc0	equ	0xFEE
 12792                           fsr0h	equ	0xFEA
 12793                           fsr0l	equ	0xFE9
 12794                           wreg	equ	0xFE8
 12795                           indf2	equ	0xFDF
 12796                           postinc2	equ	0xFDE
 12797                           postdec2	equ	0xFDD
 12798                           plusw2	equ	0xFDB
 12799                           fsr2h	equ	0xFDA
 12800                           fsr2l	equ	0xFD9
 12801                           status	equ	0xFD8
 12802                           
 12803 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 12804 ;; Defined at:
 12805 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  ptrb            2   26[COMRAM] PTR struct .
 12808 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 12809 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 12810 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12811 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12812 ;;  length          2   30[COMRAM] int 
 12813 ;;  address         2   32[COMRAM] unsigned int 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;		None
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  1    wreg      void 
 12818 ;; Registers used:
 12819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12820 ;; Tracked objects:
 12821 ;;		On entry : 0/0
 12822 ;;		On exit  : 0/0
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12825 ;;      Params:         8       0       0       0       0       0       0
 12826 ;;      Locals:         0       0       0       0       0       0       0
 12827 ;;      Temps:          2       0       0       0       0       0       0
 12828 ;;      Totals:        10       0       0       0       0       0       0
 12829 ;;Total ram usage:       10 bytes
 12830 ;; Hardware stack levels used:    1
 12831 ;; Hardware stack levels required when called:    4
 12832 ;; This function calls:
 12833 ;;		Nothing
 12834 ;; This function is called by:
 12835 ;;		_I2C1_MasterWrite
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text64
 12840  002D16                     __ptext64:
 12841                           	opt stack 0
 12842  002D16                     _I2C1_MasterWriteTRBBuild:
 12843                           	opt stack 22
 12844                           
 12845                           ;i2c1.c: 666: ptrb->address = address << 1;
 12846                           
 12847                           ;incstack = 0
 12848  002D16  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 12849  002D1A  C022  F024         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 12850  002D1E  90D8               	bcf	status,0,c
 12851  002D20  3623               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 12852  002D22  3624               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 12853  002D24  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 12854  002D28  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 12855  002D2C  C023  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 12856  002D30  C024  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 12857                           
 12858                           ;i2c1.c: 667: ptrb->length = length;
 12859  002D34  EE20 F002          	lfsr	2,2
 12860  002D38  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12861  002D3A  26D9               	addwf	fsr2l,f,c
 12862  002D3C  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12863  002D3E  22DA               	addwfc	fsr2h,f,c
 12864  002D40  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 12865                           
 12866                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 12867  002D44  EE20 F003          	lfsr	2,3
 12868  002D48  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12869  002D4A  26D9               	addwf	fsr2l,f,c
 12870  002D4C  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12871  002D4E  22DA               	addwfc	fsr2h,f,c
 12872  002D50  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 12873  002D54  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 12874  002D58  0012               	return		;funcret
 12875  002D5A                     __end_of_I2C1_MasterWriteTRBBuild:
 12876                           	opt stack 0
 12877                           tosu	equ	0xFFF
 12878                           tosh	equ	0xFFE
 12879                           tosl	equ	0xFFD
 12880                           pclath	equ	0xFFA
 12881                           tblptru	equ	0xFF8
 12882                           tblptrh	equ	0xFF7
 12883                           tblptrl	equ	0xFF6
 12884                           tablat	equ	0xFF5
 12885                           prodh	equ	0xFF4
 12886                           prodl	equ	0xFF3
 12887                           intcon	equ	0xFF2
 12888                           intcon2	equ	0xFF1
 12889                           indf0	equ	0xFEF
 12890                           postinc0	equ	0xFEE
 12891                           fsr0h	equ	0xFEA
 12892                           fsr0l	equ	0xFE9
 12893                           wreg	equ	0xFE8
 12894                           indf2	equ	0xFDF
 12895                           postinc2	equ	0xFDE
 12896                           postdec2	equ	0xFDD
 12897                           plusw2	equ	0xFDB
 12898                           fsr2h	equ	0xFDA
 12899                           fsr2l	equ	0xFD9
 12900                           status	equ	0xFD8
 12901                           
 12902 ;; *************** function _I2C1_MasterTRBInsert *****************
 12903 ;; Defined at:
 12904 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;  count           2   26[COMRAM] int 
 12907 ;;  ptrb_list       2   28[COMRAM] PTR struct .
 12908 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 12909 ;;  pflag           2   30[COMRAM] PTR enum E8678
 12910 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12911 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;		None
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  1    wreg      void 
 12916 ;; Registers used:
 12917 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12923 ;;      Params:         6       0       0       0       0       0       0
 12924 ;;      Locals:         0       0       0       0       0       0       0
 12925 ;;      Temps:          1       0       0       0       0       0       0
 12926 ;;      Totals:         7       0       0       0       0       0       0
 12927 ;;Total ram usage:        7 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    4
 12930 ;; This function calls:
 12931 ;;		Nothing
 12932 ;; This function is called by:
 12933 ;;		_I2C1_MasterWrite
 12934 ;;		_I2C1_MasterRead
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           
 12938                           	psect	text65
 12939  002090                     __ptext65:
 12940                           	opt stack 0
 12941  002090                     _I2C1_MasterTRBInsert:
 12942                           	opt stack 22
 12943                           
 12944                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 12945                           
 12946                           ;incstack = 0
 12947  002090  0100               	movlb	0	; () banked
 12948  002092  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12949  002094  D046               	goto	l5866
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;i2c1.c: 602: {
 12953                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 12954  002096  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12955  00209A  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12956  00209E  0E02               	movlw	2
 12957  0020A0  6EDF               	movwf	indf2,c
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 12961  0020A2  0100               	movlb	0	; () banked
 12962  0020A4  EE20 F001          	lfsr	2,1
 12963  0020A8  51B8               	movf	_i2c1_object& (0+255),w,b
 12964  0020AA  26D9               	addwf	fsr2l,f,c
 12965  0020AC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12966  0020AE  22DA               	addwfc	fsr2h,f,c
 12967  0020B0  C01D  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 12968  0020B4  C01E  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 12972  0020B8  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 12973  0020BC  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 12974  0020C0  C01B  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 12978  0020C4  0100               	movlb	0	; () banked
 12979  0020C6  EE20 F003          	lfsr	2,3
 12980  0020CA  51B8               	movf	_i2c1_object& (0+255),w,b
 12981  0020CC  26D9               	addwf	fsr2l,f,c
 12982  0020CE  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12983  0020D0  22DA               	addwfc	fsr2h,f,c
 12984  0020D2  C01F  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 12985  0020D6  C020  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 12989  0020DA  0E05               	movlw	5
 12990  0020DC  0100               	movlb	0	; () banked
 12991  0020DE  27B8               	addwf	_i2c1_object& (0+255),f,b
 12992  0020E0  0E00               	movlw	0
 12993  0020E2  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 12997  0020E4  0EF0               	movlw	low (_i2c1_tr_queue+5)
 12998  0020E6  0100               	movlb	0	; () banked
 12999  0020E8  19B8               	xorwf	_i2c1_object& (0+255),w,b
 13000  0020EA  E10B               	bnz	l5862
 13001  0020EC  0E00               	movlw	high (_i2c1_tr_queue+5)
 13002  0020EE  0100               	movlb	0	; () banked
 13003  0020F0  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 13004  0020F2  A4D8               	btfss	status,2,c
 13005  0020F4  D006               	goto	l5862
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;i2c1.c: 612: {
 13009                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 13010  0020F6  0EEB               	movlw	low _i2c1_tr_queue
 13011  0020F8  0100               	movlb	0	; () banked
 13012  0020FA  6FB8               	movwf	_i2c1_object& (0+255),b
 13013  0020FC  0E00               	movlw	high _i2c1_tr_queue
 13014  0020FE  0100               	movlb	0	; () banked
 13015  002100  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 13016  002102                     l5862:
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;i2c1.c: 615: }
 13020                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 13021  002102  0100               	movlb	0	; () banked
 13022  002104  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 13023                           
 13024                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 13025  002106  0100               	movlb	0	; () banked
 13026  002108  51B8               	movf	_i2c1_object& (0+255),w,b
 13027  00210A  0100               	movlb	0	; () banked
 13028  00210C  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 13029  00210E  E10F               	bnz	l5868
 13030  002110  0100               	movlb	0	; () banked
 13031  002112  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 13032  002114  0100               	movlb	0	; () banked
 13033  002116  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 13034  002118  A4D8               	btfss	status,2,c
 13035  00211A  D009               	goto	l5868
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;i2c1.c: 623: {
 13039                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 13040  00211C  0100               	movlb	0	; () banked
 13041  00211E  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;i2c1.c: 626: }
 13045                           ;i2c1.c: 628: }
 13046  002120  D006               	goto	l5868
 13047  002122                     l5866:
 13048                           
 13049                           ; BSR set to: 0
 13050                           ;i2c1.c: 629: else
 13051                           ;i2c1.c: 630: {
 13052                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 13053  002122  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 13054  002126  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 13055  00212A  0E01               	movlw	1
 13056  00212C  6EDF               	movwf	indf2,c
 13057  00212E                     l5868:
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;i2c1.c: 632: }
 13061                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 13062  00212E  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 13063  002132  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 13064  002136  0E02               	movlw	2
 13065  002138  18DE               	xorwf	postinc2,w,c
 13066  00213A  A4D8               	btfss	status,2,c
 13067  00213C  0012               	return	
 13068  00213E                     l5872:
 13069  00213E  5038               	movf	_i2c1_state,w,c
 13070  002140  A4D8               	btfss	status,2,c
 13071  002142  D7FD               	goto	l5872
 13072                           
 13073                           ;i2c1.c: 638: {
 13074                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 13075  002144  869E               	bsf	3998,3,c	;volatile
 13076  002146  0012               	return	
 13077  002148                     __end_of_I2C1_MasterTRBInsert:
 13078                           	opt stack 0
 13079                           tosu	equ	0xFFF
 13080                           tosh	equ	0xFFE
 13081                           tosl	equ	0xFFD
 13082                           pclath	equ	0xFFA
 13083                           tblptru	equ	0xFF8
 13084                           tblptrh	equ	0xFF7
 13085                           tblptrl	equ	0xFF6
 13086                           tablat	equ	0xFF5
 13087                           prodh	equ	0xFF4
 13088                           prodl	equ	0xFF3
 13089                           intcon	equ	0xFF2
 13090                           intcon2	equ	0xFF1
 13091                           indf0	equ	0xFEF
 13092                           postinc0	equ	0xFEE
 13093                           fsr0h	equ	0xFEA
 13094                           fsr0l	equ	0xFE9
 13095                           wreg	equ	0xFE8
 13096                           indf2	equ	0xFDF
 13097                           postinc2	equ	0xFDE
 13098                           postdec2	equ	0xFDD
 13099                           plusw2	equ	0xFDB
 13100                           fsr2h	equ	0xFDA
 13101                           fsr2l	equ	0xFD9
 13102                           status	equ	0xFD8
 13103                           
 13104 ;; *************** function _GetTime *****************
 13105 ;; Defined at:
 13106 ;;		line 97 in file "tmr0.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;		None
 13109 ;; Auto vars:     Size  Location     Type
 13110 ;;		None
 13111 ;; Return value:  Size  Location     Type
 13112 ;;                  2   26[COMRAM] int 
 13113 ;; Registers used:
 13114 ;;		None
 13115 ;; Tracked objects:
 13116 ;;		On entry : 0/0
 13117 ;;		On exit  : 0/0
 13118 ;;		Unchanged: 0/0
 13119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13120 ;;      Params:         2       0       0       0       0       0       0
 13121 ;;      Locals:         0       0       0       0       0       0       0
 13122 ;;      Temps:          0       0       0       0       0       0       0
 13123 ;;      Totals:         2       0       0       0       0       0       0
 13124 ;;Total ram usage:        2 bytes
 13125 ;; Hardware stack levels used:    1
 13126 ;; Hardware stack levels required when called:    4
 13127 ;; This function calls:
 13128 ;;		Nothing
 13129 ;; This function is called by:
 13130 ;;		_main
 13131 ;; This function uses a non-reentrant model
 13132 ;;
 13133                           
 13134                           	psect	text66
 13135  0031C6                     __ptext66:
 13136                           	opt stack 0
 13137  0031C6                     _GetTime:
 13138                           	opt stack 26
 13139                           
 13140                           ;tmr0.c: 98: return time;
 13141                           
 13142                           ;incstack = 0
 13143  0031C6  C03F  F01B         	movff	_time,?_GetTime	;volatile
 13144  0031CA  6A1C               	clrf	?_GetTime+1,c
 13145  0031CC  0012               	return		;funcret
 13146  0031CE                     __end_of_GetTime:
 13147                           	opt stack 0
 13148                           tosu	equ	0xFFF
 13149                           tosh	equ	0xFFE
 13150                           tosl	equ	0xFFD
 13151                           pclath	equ	0xFFA
 13152                           tblptru	equ	0xFF8
 13153                           tblptrh	equ	0xFF7
 13154                           tblptrl	equ	0xFF6
 13155                           tablat	equ	0xFF5
 13156                           prodh	equ	0xFF4
 13157                           prodl	equ	0xFF3
 13158                           intcon	equ	0xFF2
 13159                           intcon2	equ	0xFF1
 13160                           indf0	equ	0xFEF
 13161                           postinc0	equ	0xFEE
 13162                           fsr0h	equ	0xFEA
 13163                           fsr0l	equ	0xFE9
 13164                           wreg	equ	0xFE8
 13165                           indf2	equ	0xFDF
 13166                           postinc2	equ	0xFDE
 13167                           postdec2	equ	0xFDD
 13168                           plusw2	equ	0xFDB
 13169                           fsr2h	equ	0xFDA
 13170                           fsr2l	equ	0xFD9
 13171                           status	equ	0xFD8
 13172                           
 13173 ;; *************** function _GetDataBarGraphB *****************
 13174 ;; Defined at:
 13175 ;;		line 57 in file "Communications.c"
 13176 ;; Parameters:    Size  Location     Type
 13177 ;;		None
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;		None
 13180 ;; Return value:  Size  Location     Type
 13181 ;;                  2   26[COMRAM] unsigned int 
 13182 ;; Registers used:
 13183 ;;		None
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13189 ;;      Params:         2       0       0       0       0       0       0
 13190 ;;      Locals:         0       0       0       0       0       0       0
 13191 ;;      Temps:          0       0       0       0       0       0       0
 13192 ;;      Totals:         2       0       0       0       0       0       0
 13193 ;;Total ram usage:        2 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; Hardware stack levels required when called:    4
 13196 ;; This function calls:
 13197 ;;		Nothing
 13198 ;; This function is called by:
 13199 ;;		_main
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	text67
 13204  0031B2                     __ptext67:
 13205                           	opt stack 0
 13206  0031B2                     _GetDataBarGraphB:
 13207                           	opt stack 26
 13208                           
 13209                           ;Communications.c: 58: return DataBarGraphA;
 13210                           
 13211                           ;incstack = 0
 13212  0031B2  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphB
 13213  0031B6  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphB+1
 13214  0031BA  0012               	return		;funcret
 13215  0031BC                     __end_of_GetDataBarGraphB:
 13216                           	opt stack 0
 13217                           tosu	equ	0xFFF
 13218                           tosh	equ	0xFFE
 13219                           tosl	equ	0xFFD
 13220                           pclath	equ	0xFFA
 13221                           tblptru	equ	0xFF8
 13222                           tblptrh	equ	0xFF7
 13223                           tblptrl	equ	0xFF6
 13224                           tablat	equ	0xFF5
 13225                           prodh	equ	0xFF4
 13226                           prodl	equ	0xFF3
 13227                           intcon	equ	0xFF2
 13228                           intcon2	equ	0xFF1
 13229                           indf0	equ	0xFEF
 13230                           postinc0	equ	0xFEE
 13231                           fsr0h	equ	0xFEA
 13232                           fsr0l	equ	0xFE9
 13233                           wreg	equ	0xFE8
 13234                           indf2	equ	0xFDF
 13235                           postinc2	equ	0xFDE
 13236                           postdec2	equ	0xFDD
 13237                           plusw2	equ	0xFDB
 13238                           fsr2h	equ	0xFDA
 13239                           fsr2l	equ	0xFD9
 13240                           status	equ	0xFD8
 13241                           
 13242 ;; *************** function _GetDataBarGraphA *****************
 13243 ;; Defined at:
 13244 ;;		line 53 in file "Communications.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;		None
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;		None
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  2   26[COMRAM] unsigned int 
 13251 ;; Registers used:
 13252 ;;		None
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13258 ;;      Params:         2       0       0       0       0       0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0
 13261 ;;      Totals:         2       0       0       0       0       0       0
 13262 ;;Total ram usage:        2 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:    4
 13265 ;; This function calls:
 13266 ;;		Nothing
 13267 ;; This function is called by:
 13268 ;;		_main
 13269 ;; This function uses a non-reentrant model
 13270 ;;
 13271                           
 13272                           	psect	text68
 13273  0031BC                     __ptext68:
 13274                           	opt stack 0
 13275  0031BC                     _GetDataBarGraphA:
 13276                           	opt stack 26
 13277                           
 13278                           ;Communications.c: 54: return DataBarGraphA;
 13279                           
 13280                           ;incstack = 0
 13281  0031BC  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphA
 13282  0031C0  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphA+1
 13283  0031C4  0012               	return		;funcret
 13284  0031C6                     __end_of_GetDataBarGraphA:
 13285                           	opt stack 0
 13286                           tosu	equ	0xFFF
 13287                           tosh	equ	0xFFE
 13288                           tosl	equ	0xFFD
 13289                           pclath	equ	0xFFA
 13290                           tblptru	equ	0xFF8
 13291                           tblptrh	equ	0xFF7
 13292                           tblptrl	equ	0xFF6
 13293                           tablat	equ	0xFF5
 13294                           prodh	equ	0xFF4
 13295                           prodl	equ	0xFF3
 13296                           intcon	equ	0xFF2
 13297                           intcon2	equ	0xFF1
 13298                           indf0	equ	0xFEF
 13299                           postinc0	equ	0xFEE
 13300                           fsr0h	equ	0xFEA
 13301                           fsr0l	equ	0xFE9
 13302                           wreg	equ	0xFE8
 13303                           indf2	equ	0xFDF
 13304                           postinc2	equ	0xFDE
 13305                           postdec2	equ	0xFDD
 13306                           plusw2	equ	0xFDB
 13307                           fsr2h	equ	0xFDA
 13308                           fsr2l	equ	0xFD9
 13309                           status	equ	0xFD8
 13310                           
 13311 ;; *************** function _ClearTime *****************
 13312 ;; Defined at:
 13313 ;;		line 102 in file "tmr0.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      void 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13327 ;;      Params:         0       0       0       0       0       0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    4
 13334 ;; This function calls:
 13335 ;;		Nothing
 13336 ;; This function is called by:
 13337 ;;		_main
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text69
 13342  0031D6                     __ptext69:
 13343                           	opt stack 0
 13344  0031D6                     _ClearTime:
 13345                           	opt stack 26
 13346                           
 13347                           ;tmr0.c: 103: time = 0;
 13348                           
 13349                           ;incstack = 0
 13350  0031D6  0E00               	movlw	0
 13351  0031D8  6E3F               	movwf	_time,c	;volatile
 13352  0031DA  0012               	return		;funcret
 13353  0031DC                     __end_of_ClearTime:
 13354                           	opt stack 0
 13355                           tosu	equ	0xFFF
 13356                           tosh	equ	0xFFE
 13357                           tosl	equ	0xFFD
 13358                           pclath	equ	0xFFA
 13359                           tblptru	equ	0xFF8
 13360                           tblptrh	equ	0xFF7
 13361                           tblptrl	equ	0xFF6
 13362                           tablat	equ	0xFF5
 13363                           prodh	equ	0xFF4
 13364                           prodl	equ	0xFF3
 13365                           intcon	equ	0xFF2
 13366                           intcon2	equ	0xFF1
 13367                           indf0	equ	0xFEF
 13368                           postinc0	equ	0xFEE
 13369                           fsr0h	equ	0xFEA
 13370                           fsr0l	equ	0xFE9
 13371                           wreg	equ	0xFE8
 13372                           indf2	equ	0xFDF
 13373                           postinc2	equ	0xFDE
 13374                           postdec2	equ	0xFDD
 13375                           plusw2	equ	0xFDB
 13376                           fsr2h	equ	0xFDA
 13377                           fsr2l	equ	0xFD9
 13378                           status	equ	0xFD8
 13379                           
 13380 ;; *************** function _INTERRUPT_InterruptManager *****************
 13381 ;; Defined at:
 13382 ;;		line 31 in file "mcc_generated_files/interrupt_manager.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;		None
 13385 ;; Auto vars:     Size  Location     Type
 13386 ;;		None
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  1    wreg      void 
 13389 ;; Registers used:
 13390 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13396 ;;      Params:         0       0       0       0       0       0       0
 13397 ;;      Locals:         0       0       0       0       0       0       0
 13398 ;;      Temps:         14       0       0       0       0       0       0
 13399 ;;      Totals:        14       0       0       0       0       0       0
 13400 ;;Total ram usage:       14 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:    3
 13403 ;; This function calls:
 13404 ;;		_ADC_ISR
 13405 ;;		_EUSART1_Receive_ISR
 13406 ;;		_EUSART1_Transmit_ISR
 13407 ;;		_I2C1_BusCollisionISR
 13408 ;;		_I2C1_ISR
 13409 ;;		_TMR0_ISR
 13410 ;;		_TMR2_ISR
 13411 ;; This function is called by:
 13412 ;;		Interrupt level 2
 13413 ;; This function uses a non-reentrant model
 13414 ;;
 13415                           
 13416                           	psect	intcode
 13417  000008                     __pintcode:
 13418                           	opt stack 0
 13419  000008                     _INTERRUPT_InterruptManager:
 13420                           	opt stack 21
 13421                           
 13422                           ;incstack = 0
 13423  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13424  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 13425  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13426  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13427  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13428  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13429  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13430  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13431  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13432  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13433  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13434  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 13435  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 13436  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 13437  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 13438                           
 13439                           ;interrupt_manager.c: 34: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 13440  000042  BA9D               	btfsc	3997,5,c	;volatile
 13441  000044  AA9E               	btfss	3998,5,c	;volatile
 13442  000046  D003               	goto	i2l273
 13443                           
 13444                           ;interrupt_manager.c: 35: {
 13445                           ;interrupt_manager.c: 36: EUSART1_Receive_ISR();
 13446  000048  EC5E  F018         	call	_EUSART1_Receive_ISR	;wreg free
 13447                           
 13448                           ;interrupt_manager.c: 37: }
 13449  00004C  D023               	goto	i2l287
 13450  00004E                     i2l273:
 13451                           
 13452                           ;interrupt_manager.c: 38: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13453  00004E  B89D               	btfsc	3997,4,c	;volatile
 13454  000050  A89E               	btfss	3998,4,c	;volatile
 13455  000052  D003               	goto	i2l275
 13456                           
 13457                           ;interrupt_manager.c: 39: {
 13458                           ;interrupt_manager.c: 40: EUSART1_Transmit_ISR();
 13459  000054  EC5D  F017         	call	_EUSART1_Transmit_ISR	;wreg free
 13460                           
 13461                           ;interrupt_manager.c: 41: }
 13462  000058  D01D               	goto	i2l287
 13463  00005A                     i2l275:
 13464                           
 13465                           ;interrupt_manager.c: 42: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 13466  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 13467  00005C  A4F2               	btfss	intcon,2,c	;volatile
 13468  00005E  D003               	goto	i2l277
 13469                           
 13470                           ;interrupt_manager.c: 43: {
 13471                           ;interrupt_manager.c: 44: TMR0_ISR();
 13472  000060  EC27  F017         	call	_TMR0_ISR	;wreg free
 13473                           
 13474                           ;interrupt_manager.c: 45: }
 13475  000064  D017               	goto	i2l287
 13476  000066                     i2l277:
 13477                           
 13478                           ;interrupt_manager.c: 46: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 13479  000066  B29D               	btfsc	3997,1,c	;volatile
 13480  000068  A29E               	btfss	3998,1,c	;volatile
 13481  00006A  D003               	goto	i2l279
 13482                           
 13483                           ;interrupt_manager.c: 47: {
 13484                           ;interrupt_manager.c: 48: TMR2_ISR();
 13485  00006C  ECE7  F018         	call	_TMR2_ISR	;wreg free
 13486                           
 13487                           ;interrupt_manager.c: 49: }
 13488  000070  D011               	goto	i2l287
 13489  000072                     i2l279:
 13490                           
 13491                           ;interrupt_manager.c: 50: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 13492  000072  BC9D               	btfsc	3997,6,c	;volatile
 13493  000074  AC9E               	btfss	3998,6,c	;volatile
 13494  000076  D003               	goto	i2l281
 13495                           
 13496                           ;interrupt_manager.c: 51: {
 13497                           ;interrupt_manager.c: 52: ADC_ISR();
 13498  000078  ECF2  F018         	call	_ADC_ISR	;wreg free
 13499                           
 13500                           ;interrupt_manager.c: 53: }
 13501  00007C  D00B               	goto	i2l287
 13502  00007E                     i2l281:
 13503                           
 13504                           ;interrupt_manager.c: 54: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 13505  00007E  B69D               	btfsc	3997,3,c	;volatile
 13506  000080  A69E               	btfss	3998,3,c	;volatile
 13507  000082  D003               	goto	i2l283
 13508                           
 13509                           ;interrupt_manager.c: 55: {
 13510                           ;interrupt_manager.c: 56: I2C1_ISR();
 13511  000084  ECCC  F005         	call	_I2C1_ISR	;wreg free
 13512                           
 13513                           ;interrupt_manager.c: 57: }
 13514  000088  D005               	goto	i2l287
 13515  00008A                     i2l283:
 13516                           
 13517                           ;interrupt_manager.c: 58: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 13518  00008A  B6A0               	btfsc	4000,3,c	;volatile
 13519  00008C  A6A1               	btfss	4001,3,c	;volatile
 13520  00008E  D002               	goto	i2l287
 13521                           
 13522                           ;interrupt_manager.c: 59: {
 13523                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
 13524  000090  ECF5  F018         	call	_I2C1_BusCollisionISR	;wreg free
 13525  000094                     i2l287:
 13526  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 13527  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 13528  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 13529  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 13530  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 13531  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 13532  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 13533  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 13534  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 13535  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 13536  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 13537  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 13538  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13539  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13540  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13541  0000CE  0011               	retfie		f
 13542  0000D0                     __end_of_INTERRUPT_InterruptManager:
 13543                           	opt stack 0
 13544                           tosu	equ	0xFFF
 13545                           tosh	equ	0xFFE
 13546                           tosl	equ	0xFFD
 13547                           pclatu	equ	0xFFB
 13548                           pclath	equ	0xFFA
 13549                           tblptru	equ	0xFF8
 13550                           tblptrh	equ	0xFF7
 13551                           tblptrl	equ	0xFF6
 13552                           tablat	equ	0xFF5
 13553                           prodh	equ	0xFF4
 13554                           prodl	equ	0xFF3
 13555                           intcon	equ	0xFF2
 13556                           intcon2	equ	0xFF1
 13557                           indf0	equ	0xFEF
 13558                           postinc0	equ	0xFEE
 13559                           fsr0h	equ	0xFEA
 13560                           fsr0l	equ	0xFE9
 13561                           wreg	equ	0xFE8
 13562                           fsr1h	equ	0xFE2
 13563                           fsr1l	equ	0xFE1
 13564                           indf2	equ	0xFDF
 13565                           postinc2	equ	0xFDE
 13566                           postdec2	equ	0xFDD
 13567                           plusw2	equ	0xFDB
 13568                           fsr2h	equ	0xFDA
 13569                           fsr2l	equ	0xFD9
 13570                           status	equ	0xFD8
 13571                           
 13572 ;; *************** function _TMR2_ISR *****************
 13573 ;; Defined at:
 13574 ;;		line 120 in file "tmr2.c"
 13575 ;; Parameters:    Size  Location     Type
 13576 ;;		None
 13577 ;; Auto vars:     Size  Location     Type
 13578 ;;		None
 13579 ;; Return value:  Size  Location     Type
 13580 ;;                  1    wreg      void 
 13581 ;; Registers used:
 13582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/0
 13585 ;;		On exit  : 0/0
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13588 ;;      Params:         0       0       0       0       0       0       0
 13589 ;;      Locals:         0       0       0       0       0       0       0
 13590 ;;      Temps:          0       0       0       0       0       0       0
 13591 ;;      Totals:         0       0       0       0       0       0       0
 13592 ;;Total ram usage:        0 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:    2
 13595 ;; This function calls:
 13596 ;;		_TMR2_CallBack
 13597 ;; This function is called by:
 13598 ;;		_INTERRUPT_InterruptManager
 13599 ;; This function uses a non-reentrant model
 13600 ;;
 13601                           
 13602                           	psect	text71
 13603  0031CE                     __ptext71:
 13604                           	opt stack 0
 13605  0031CE                     _TMR2_ISR:
 13606                           	opt stack 21
 13607                           
 13608                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 13609                           
 13610                           ;incstack = 0
 13611  0031CE  929E               	bcf	3998,1,c	;volatile
 13612                           
 13613                           ;tmr2.c: 128: TMR2_CallBack();
 13614  0031D0  EC91  F008         	call	_TMR2_CallBack	;wreg free
 13615  0031D4  0012               	return		;funcret
 13616  0031D6                     __end_of_TMR2_ISR:
 13617                           	opt stack 0
 13618                           tosu	equ	0xFFF
 13619                           tosh	equ	0xFFE
 13620                           tosl	equ	0xFFD
 13621                           pclatu	equ	0xFFB
 13622                           pclath	equ	0xFFA
 13623                           tblptru	equ	0xFF8
 13624                           tblptrh	equ	0xFF7
 13625                           tblptrl	equ	0xFF6
 13626                           tablat	equ	0xFF5
 13627                           prodh	equ	0xFF4
 13628                           prodl	equ	0xFF3
 13629                           intcon	equ	0xFF2
 13630                           intcon2	equ	0xFF1
 13631                           indf0	equ	0xFEF
 13632                           postinc0	equ	0xFEE
 13633                           fsr0h	equ	0xFEA
 13634                           fsr0l	equ	0xFE9
 13635                           wreg	equ	0xFE8
 13636                           fsr1h	equ	0xFE2
 13637                           fsr1l	equ	0xFE1
 13638                           indf2	equ	0xFDF
 13639                           postinc2	equ	0xFDE
 13640                           postdec2	equ	0xFDD
 13641                           plusw2	equ	0xFDB
 13642                           fsr2h	equ	0xFDA
 13643                           fsr2l	equ	0xFD9
 13644                           status	equ	0xFD8
 13645                           
 13646 ;; *************** function _TMR2_CallBack *****************
 13647 ;; Defined at:
 13648 ;;		line 131 in file "tmr2.c"
 13649 ;; Parameters:    Size  Location     Type
 13650 ;;		None
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;  i               2    2[COMRAM] int 
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      void 
 13655 ;; Registers used:
 13656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13662 ;;      Params:         0       0       0       0       0       0       0
 13663 ;;      Locals:         2       0       0       0       0       0       0
 13664 ;;      Temps:          2       0       0       0       0       0       0
 13665 ;;      Totals:         4       0       0       0       0       0       0
 13666 ;;Total ram usage:        4 bytes
 13667 ;; Hardware stack levels used:    1
 13668 ;; Hardware stack levels required when called:    1
 13669 ;; This function calls:
 13670 ;;		Absolute function
 13671 ;;		_TMR2_DefaultInterruptHandler
 13672 ;; This function is called by:
 13673 ;;		_TMR2_ISR
 13674 ;; This function uses a non-reentrant model
 13675 ;;
 13676                           
 13677                           	psect	text72
 13678  001122                     __ptext72:
 13679                           	opt stack 0
 13680  001122                     _TMR2_CallBack:
 13681                           	opt stack 21
 13682                           
 13683                           ;tmr2.c: 133: int i = 0;
 13684                           
 13685                           ;incstack = 0
 13686  001122  0E00               	movlw	0
 13687  001124  6E04               	movwf	TMR2_CallBack@i+1,c
 13688  001126  0E00               	movlw	0
 13689  001128  6E03               	movwf	TMR2_CallBack@i,c
 13690                           
 13691                           ;tmr2.c: 134: while (i <= 5) {
 13692  00112A  D0C3               	goto	i2l452
 13693  00112C                     i2l4724:
 13694                           
 13695                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 13696  00112C  90D8               	bcf	status,0,c
 13697  00112E  3403               	rlcf	TMR2_CallBack@i,w,c
 13698  001130  6ED9               	movwf	fsr2l,c
 13699  001132  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13700  001134  6EDA               	movwf	fsr2h,c
 13701  001136  0E98               	movlw	low _LEDNUM_ENAB
 13702  001138  26D9               	addwf	fsr2l,f,c
 13703  00113A  0E00               	movlw	high _LEDNUM_ENAB
 13704  00113C  22DA               	addwfc	fsr2h,f,c
 13705  00113E  04DE               	decf	postinc2,w,c
 13706  001140  10DE               	iorwf	postinc2,w,c
 13707  001142  B4D8               	btfsc	status,2,c
 13708  001144  D098               	goto	i2l4742
 13709  001146  D0AF               	goto	i2l4744
 13710  001148                     i2l459:
 13711  001148  B28B               	btfsc	3979,1,c	;volatile
 13712  00114A  D002               	goto	i2u404_40
 13713  00114C  828B               	bsf	3979,1,c	;volatile
 13714  00114E  D03B               	goto	i2l4732
 13715  001150                     i2u404_40:
 13716  001150  928B               	bcf	3979,1,c	;volatile
 13717                           
 13718                           ;tmr2.c: 142: break;
 13719  001152  D039               	goto	i2l4732
 13720  001154                     i2l463:
 13721  001154  BC89               	btfsc	3977,6,c	;volatile
 13722  001156  D002               	goto	i2u406_40
 13723  001158  8C89               	bsf	3977,6,c	;volatile
 13724  00115A  D035               	goto	i2l4732
 13725  00115C                     i2u406_40:
 13726  00115C  9C89               	bcf	3977,6,c	;volatile
 13727                           
 13728                           ;tmr2.c: 145: break;
 13729  00115E  D033               	goto	i2l4732
 13730  001160                     i2l466:
 13731  001160  BE89               	btfsc	3977,7,c	;volatile
 13732  001162  D002               	goto	i2u408_40
 13733  001164  8E89               	bsf	3977,7,c	;volatile
 13734  001166  D02F               	goto	i2l4732
 13735  001168                     i2u408_40:
 13736  001168  9E89               	bcf	3977,7,c	;volatile
 13737                           
 13738                           ;tmr2.c: 148: break;
 13739  00116A  D02D               	goto	i2l4732
 13740  00116C                     i2l469:
 13741  00116C  B48D               	btfsc	3981,2,c	;volatile
 13742  00116E  D002               	goto	i2u410_40
 13743  001170  848D               	bsf	3981,2,c	;volatile
 13744  001172  D029               	goto	i2l4732
 13745  001174                     i2u410_40:
 13746  001174  948D               	bcf	3981,2,c	;volatile
 13747                           
 13748                           ;tmr2.c: 151: break;
 13749  001176  D027               	goto	i2l4732
 13750  001178                     i2l472:
 13751  001178  B28D               	btfsc	3981,1,c	;volatile
 13752  00117A  D002               	goto	i2u412_40
 13753  00117C  828D               	bsf	3981,1,c	;volatile
 13754  00117E  D023               	goto	i2l4732
 13755  001180                     i2u412_40:
 13756  001180  928D               	bcf	3981,1,c	;volatile
 13757                           
 13758                           ;tmr2.c: 154: break;
 13759  001182  D021               	goto	i2l4732
 13760  001184                     i2l475:
 13761  001184  B08D               	btfsc	3981,0,c	;volatile
 13762  001186  D002               	goto	i2u414_40
 13763  001188  808D               	bsf	3981,0,c	;volatile
 13764  00118A  D01D               	goto	i2l4732
 13765  00118C                     i2u414_40:
 13766  00118C  908D               	bcf	3981,0,c	;volatile
 13767                           
 13768                           ;tmr2.c: 158: }
 13769                           
 13770                           ;tmr2.c: 157: break;
 13771  00118E  D01B               	goto	i2l4732
 13772  001190                     i2l4730:
 13773  001190  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13774  001194  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13775                           
 13776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13777                           ; Switch size 1, requested type "space"
 13778                           ; Number of cases is 1, Range of values is 0 to 0
 13779                           ; switch strategies available:
 13780                           ; Name         Instructions Cycles
 13781                           ; simple_byte            4     3 (average)
 13782                           ;	Chosen strategy is simple_byte
 13783  001198  5002               	movf	??_TMR2_CallBack+1,w,c
 13784  00119A  0A00               	xorlw	0	; case 0
 13785  00119C  A4D8               	btfss	status,2,c
 13786  00119E  D013               	goto	i2l4732
 13787                           
 13788                           ; Switch size 1, requested type "space"
 13789                           ; Number of cases is 6, Range of values is 0 to 5
 13790                           ; switch strategies available:
 13791                           ; Name         Instructions Cycles
 13792                           ; simple_byte           19    10 (average)
 13793                           ;	Chosen strategy is simple_byte
 13794  0011A0  5001               	movf	??_TMR2_CallBack,w,c
 13795  0011A2  0A00               	xorlw	0	; case 0
 13796  0011A4  B4D8               	btfsc	status,2,c
 13797  0011A6  D7D0               	goto	i2l459
 13798  0011A8  0A01               	xorlw	1	; case 1
 13799  0011AA  B4D8               	btfsc	status,2,c
 13800  0011AC  D7D3               	goto	i2l463
 13801  0011AE  0A03               	xorlw	3	; case 2
 13802  0011B0  B4D8               	btfsc	status,2,c
 13803  0011B2  D7D6               	goto	i2l466
 13804  0011B4  0A01               	xorlw	1	; case 3
 13805  0011B6  B4D8               	btfsc	status,2,c
 13806  0011B8  D7D9               	goto	i2l469
 13807  0011BA  0A07               	xorlw	7	; case 4
 13808  0011BC  B4D8               	btfsc	status,2,c
 13809  0011BE  D7DC               	goto	i2l472
 13810  0011C0  0A01               	xorlw	1	; case 5
 13811  0011C2  B4D8               	btfsc	status,2,c
 13812  0011C4  D7DF               	goto	i2l475
 13813  0011C6                     i2l4732:
 13814                           
 13815                           ;tmr2.c: 159: LEDState[i] = 1;
 13816  0011C6  90D8               	bcf	status,0,c
 13817  0011C8  3403               	rlcf	TMR2_CallBack@i,w,c
 13818  0011CA  6ED9               	movwf	fsr2l,c
 13819  0011CC  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13820  0011CE  6EDA               	movwf	fsr2h,c
 13821  0011D0  0EA4               	movlw	low _LEDState
 13822  0011D2  26D9               	addwf	fsr2l,f,c
 13823  0011D4  0E00               	movlw	high _LEDState
 13824  0011D6  22DA               	addwfc	fsr2h,f,c
 13825  0011D8  0E01               	movlw	1
 13826  0011DA  D049               	goto	L4
 13827  0011DC                     i2l481:
 13828  0011DC  B28B               	btfsc	3979,1,c	;volatile
 13829  0011DE  D002               	goto	i2u416_40
 13830  0011E0  828B               	bsf	3979,1,c	;volatile
 13831  0011E2  D03B               	goto	i2l4738
 13832  0011E4                     i2u416_40:
 13833  0011E4  928B               	bcf	3979,1,c	;volatile
 13834                           
 13835                           ;tmr2.c: 165: break;
 13836  0011E6  D039               	goto	i2l4738
 13837  0011E8                     i2l485:
 13838  0011E8  BC89               	btfsc	3977,6,c	;volatile
 13839  0011EA  D002               	goto	i2u418_40
 13840  0011EC  8C89               	bsf	3977,6,c	;volatile
 13841  0011EE  D035               	goto	i2l4738
 13842  0011F0                     i2u418_40:
 13843  0011F0  9C89               	bcf	3977,6,c	;volatile
 13844                           
 13845                           ;tmr2.c: 168: break;
 13846  0011F2  D033               	goto	i2l4738
 13847  0011F4                     i2l488:
 13848  0011F4  BE89               	btfsc	3977,7,c	;volatile
 13849  0011F6  D002               	goto	i2u420_40
 13850  0011F8  8E89               	bsf	3977,7,c	;volatile
 13851  0011FA  D02F               	goto	i2l4738
 13852  0011FC                     i2u420_40:
 13853  0011FC  9E89               	bcf	3977,7,c	;volatile
 13854                           
 13855                           ;tmr2.c: 171: break;
 13856  0011FE  D02D               	goto	i2l4738
 13857  001200                     i2l491:
 13858  001200  B48D               	btfsc	3981,2,c	;volatile
 13859  001202  D002               	goto	i2u422_40
 13860  001204  848D               	bsf	3981,2,c	;volatile
 13861  001206  D029               	goto	i2l4738
 13862  001208                     i2u422_40:
 13863  001208  948D               	bcf	3981,2,c	;volatile
 13864                           
 13865                           ;tmr2.c: 174: break;
 13866  00120A  D027               	goto	i2l4738
 13867  00120C                     i2l494:
 13868  00120C  B28D               	btfsc	3981,1,c	;volatile
 13869  00120E  D002               	goto	i2u424_40
 13870  001210  828D               	bsf	3981,1,c	;volatile
 13871  001212  D023               	goto	i2l4738
 13872  001214                     i2u424_40:
 13873  001214  928D               	bcf	3981,1,c	;volatile
 13874                           
 13875                           ;tmr2.c: 177: break;
 13876  001216  D021               	goto	i2l4738
 13877  001218                     i2l497:
 13878  001218  B08D               	btfsc	3981,0,c	;volatile
 13879  00121A  D002               	goto	i2u426_40
 13880  00121C  808D               	bsf	3981,0,c	;volatile
 13881  00121E  D01D               	goto	i2l4738
 13882  001220                     i2u426_40:
 13883  001220  908D               	bcf	3981,0,c	;volatile
 13884                           
 13885                           ;tmr2.c: 181: }
 13886                           
 13887                           ;tmr2.c: 180: break;
 13888  001222  D01B               	goto	i2l4738
 13889  001224                     i2l4736:
 13890  001224  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13891  001228  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13892                           
 13893                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13894                           ; Switch size 1, requested type "space"
 13895                           ; Number of cases is 1, Range of values is 0 to 0
 13896                           ; switch strategies available:
 13897                           ; Name         Instructions Cycles
 13898                           ; simple_byte            4     3 (average)
 13899                           ;	Chosen strategy is simple_byte
 13900  00122C  5002               	movf	??_TMR2_CallBack+1,w,c
 13901  00122E  0A00               	xorlw	0	; case 0
 13902  001230  A4D8               	btfss	status,2,c
 13903  001232  D013               	goto	i2l4738
 13904                           
 13905                           ; Switch size 1, requested type "space"
 13906                           ; Number of cases is 6, Range of values is 0 to 5
 13907                           ; switch strategies available:
 13908                           ; Name         Instructions Cycles
 13909                           ; simple_byte           19    10 (average)
 13910                           ;	Chosen strategy is simple_byte
 13911  001234  5001               	movf	??_TMR2_CallBack,w,c
 13912  001236  0A00               	xorlw	0	; case 0
 13913  001238  B4D8               	btfsc	status,2,c
 13914  00123A  D7D0               	goto	i2l481
 13915  00123C  0A01               	xorlw	1	; case 1
 13916  00123E  B4D8               	btfsc	status,2,c
 13917  001240  D7D3               	goto	i2l485
 13918  001242  0A03               	xorlw	3	; case 2
 13919  001244  B4D8               	btfsc	status,2,c
 13920  001246  D7D6               	goto	i2l488
 13921  001248  0A01               	xorlw	1	; case 3
 13922  00124A  B4D8               	btfsc	status,2,c
 13923  00124C  D7D9               	goto	i2l491
 13924  00124E  0A07               	xorlw	7	; case 4
 13925  001250  B4D8               	btfsc	status,2,c
 13926  001252  D7DC               	goto	i2l494
 13927  001254  0A01               	xorlw	1	; case 5
 13928  001256  B4D8               	btfsc	status,2,c
 13929  001258  D7DF               	goto	i2l497
 13930  00125A                     i2l4738:
 13931                           
 13932                           ;tmr2.c: 182: LEDState[i] = 0;
 13933  00125A  90D8               	bcf	status,0,c
 13934  00125C  3403               	rlcf	TMR2_CallBack@i,w,c
 13935  00125E  6ED9               	movwf	fsr2l,c
 13936  001260  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13937  001262  6EDA               	movwf	fsr2h,c
 13938  001264  0EA4               	movlw	low _LEDState
 13939  001266  26D9               	addwf	fsr2l,f,c
 13940  001268  0E00               	movlw	high _LEDState
 13941  00126A  22DA               	addwfc	fsr2h,f,c
 13942  00126C  0E00               	movlw	0
 13943  00126E                     L4:
 13944  00126E  6EDE               	movwf	postinc2,c
 13945  001270  0E00               	movlw	0
 13946  001272  6EDD               	movwf	postdec2,c
 13947                           
 13948                           ;tmr2.c: 184: }
 13949                           
 13950                           ;tmr2.c: 183: break;
 13951  001274  D018               	goto	i2l4744
 13952  001276                     i2l4742:
 13953  001276  90D8               	bcf	status,0,c
 13954  001278  3403               	rlcf	TMR2_CallBack@i,w,c
 13955  00127A  6ED9               	movwf	fsr2l,c
 13956  00127C  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13957  00127E  6EDA               	movwf	fsr2h,c
 13958  001280  0EA4               	movlw	low _LEDState
 13959  001282  26D9               	addwf	fsr2l,f,c
 13960  001284  0E00               	movlw	high _LEDState
 13961  001286  22DA               	addwfc	fsr2h,f,c
 13962  001288  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 13963  00128C  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 13964                           
 13965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13966                           ; Switch size 1, requested type "space"
 13967                           ; Number of cases is 1, Range of values is 0 to 0
 13968                           ; switch strategies available:
 13969                           ; Name         Instructions Cycles
 13970                           ; simple_byte            4     3 (average)
 13971                           ;	Chosen strategy is simple_byte
 13972  001290  5002               	movf	??_TMR2_CallBack+1,w,c
 13973  001292  0A00               	xorlw	0	; case 0
 13974  001294  A4D8               	btfss	status,2,c
 13975  001296  D007               	goto	i2l4744
 13976                           
 13977                           ; Switch size 1, requested type "space"
 13978                           ; Number of cases is 2, Range of values is 0 to 1
 13979                           ; switch strategies available:
 13980                           ; Name         Instructions Cycles
 13981                           ; simple_byte            7     4 (average)
 13982                           ;	Chosen strategy is simple_byte
 13983  001298  5001               	movf	??_TMR2_CallBack,w,c
 13984  00129A  0A00               	xorlw	0	; case 0
 13985  00129C  B4D8               	btfsc	status,2,c
 13986  00129E  D778               	goto	i2l4730
 13987  0012A0  0A01               	xorlw	1	; case 1
 13988  0012A2  B4D8               	btfsc	status,2,c
 13989  0012A4  D7BF               	goto	i2l4736
 13990  0012A6                     i2l4744:
 13991                           
 13992                           ;tmr2.c: 185: }
 13993                           ;tmr2.c: 186: i = i + 1;
 13994  0012A6  0E01               	movlw	1
 13995  0012A8  2403               	addwf	TMR2_CallBack@i,w,c
 13996  0012AA  6E03               	movwf	TMR2_CallBack@i,c
 13997  0012AC  0E00               	movlw	0
 13998  0012AE  2004               	addwfc	TMR2_CallBack@i+1,w,c
 13999  0012B0  6E04               	movwf	TMR2_CallBack@i+1,c
 14000  0012B2                     i2l452:
 14001  0012B2  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 14002  0012B4  D73B               	goto	i2l4724
 14003  0012B6  5004               	movf	TMR2_CallBack@i+1,w,c
 14004  0012B8  E104               	bnz	i2l4746
 14005  0012BA  0E06               	movlw	6
 14006  0012BC  5C03               	subwf	TMR2_CallBack@i,w,c
 14007  0012BE  A0D8               	btfss	status,0,c
 14008  0012C0  D735               	goto	i2l4724
 14009  0012C2                     i2l4746:
 14010                           
 14011                           ;tmr2.c: 187: }
 14012                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 14013  0012C2  0100               	movlb	0	; () banked
 14014  0012C4  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14015  0012C6  0100               	movlb	0	; () banked
 14016  0012C8  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14017  0012CA  B4D8               	btfsc	status,2,c
 14018  0012CC  0012               	return	
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;tmr2.c: 192: {
 14022                           ;tmr2.c: 193: TMR2_InterruptHandler();
 14023  0012CE  D801               	call	i2u430_48
 14024  0012D0  0012               	return	
 14025  0012D2                     i2u430_48:
 14026  0012D2  0005               	push	
 14027  0012D4  0100               	movlb	0	; () banked
 14028  0012D6  6EFA               	movwf	pclath,c
 14029  0012D8  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14030  0012DA  6EFD               	movwf	tosl,c
 14031  0012DC  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14032  0012DE  6EFE               	movwf	tosh,c
 14033  0012E0  50F8               	movf	tblptru,w,c
 14034  0012E2  6EFF               	movwf	tosu,c
 14035  0012E4  50FA               	movf	pclath,w,c
 14036  0012E6  0012               	return		;indir
 14037  0012E8                     __end_of_TMR2_CallBack:
 14038                           	opt stack 0
 14039                           tosu	equ	0xFFF
 14040                           tosh	equ	0xFFE
 14041                           tosl	equ	0xFFD
 14042                           pclatu	equ	0xFFB
 14043                           pclath	equ	0xFFA
 14044                           tblptru	equ	0xFF8
 14045                           tblptrh	equ	0xFF7
 14046                           tblptrl	equ	0xFF6
 14047                           tablat	equ	0xFF5
 14048                           prodh	equ	0xFF4
 14049                           prodl	equ	0xFF3
 14050                           intcon	equ	0xFF2
 14051                           intcon2	equ	0xFF1
 14052                           indf0	equ	0xFEF
 14053                           postinc0	equ	0xFEE
 14054                           fsr0h	equ	0xFEA
 14055                           fsr0l	equ	0xFE9
 14056                           wreg	equ	0xFE8
 14057                           fsr1h	equ	0xFE2
 14058                           fsr1l	equ	0xFE1
 14059                           indf2	equ	0xFDF
 14060                           postinc2	equ	0xFDE
 14061                           postdec2	equ	0xFDD
 14062                           plusw2	equ	0xFDB
 14063                           fsr2h	equ	0xFDA
 14064                           fsr2l	equ	0xFD9
 14065                           status	equ	0xFD8
 14066                           
 14067 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 14068 ;; Defined at:
 14069 ;;		line 295 in file "tmr2.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;		None
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;		None
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  1    wreg      void 
 14076 ;; Registers used:
 14077 ;;		None
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14083 ;;      Params:         0       0       0       0       0       0       0
 14084 ;;      Locals:         0       0       0       0       0       0       0
 14085 ;;      Temps:          0       0       0       0       0       0       0
 14086 ;;      Totals:         0       0       0       0       0       0       0
 14087 ;;Total ram usage:        0 bytes
 14088 ;; Hardware stack levels used:    1
 14089 ;; This function calls:
 14090 ;;		Nothing
 14091 ;; This function is called by:
 14092 ;;		_TMR2_Initialize
 14093 ;;		_TMR2_CallBack
 14094 ;; This function uses a non-reentrant model
 14095 ;;
 14096                           
 14097                           	psect	text73
 14098  0031E8                     __ptext73:
 14099                           	opt stack 0
 14100  0031E8                     _TMR2_DefaultInterruptHandler:
 14101                           	opt stack 21
 14102                           
 14103                           ;incstack = 0
 14104  0031E8  0012               	return		;funcret
 14105  0031EA                     __end_of_TMR2_DefaultInterruptHandler:
 14106                           	opt stack 0
 14107                           tosu	equ	0xFFF
 14108                           tosh	equ	0xFFE
 14109                           tosl	equ	0xFFD
 14110                           pclatu	equ	0xFFB
 14111                           pclath	equ	0xFFA
 14112                           tblptru	equ	0xFF8
 14113                           tblptrh	equ	0xFF7
 14114                           tblptrl	equ	0xFF6
 14115                           tablat	equ	0xFF5
 14116                           prodh	equ	0xFF4
 14117                           prodl	equ	0xFF3
 14118                           intcon	equ	0xFF2
 14119                           intcon2	equ	0xFF1
 14120                           indf0	equ	0xFEF
 14121                           postinc0	equ	0xFEE
 14122                           fsr0h	equ	0xFEA
 14123                           fsr0l	equ	0xFE9
 14124                           wreg	equ	0xFE8
 14125                           fsr1h	equ	0xFE2
 14126                           fsr1l	equ	0xFE1
 14127                           indf2	equ	0xFDF
 14128                           postinc2	equ	0xFDE
 14129                           postdec2	equ	0xFDD
 14130                           plusw2	equ	0xFDB
 14131                           fsr2h	equ	0xFDA
 14132                           fsr2l	equ	0xFD9
 14133                           status	equ	0xFD8
 14134                           
 14135 ;; *************** function _TMR0_ISR *****************
 14136 ;; Defined at:
 14137 ;;		line 82 in file "tmr0.c"
 14138 ;; Parameters:    Size  Location     Type
 14139 ;;		None
 14140 ;; Auto vars:     Size  Location     Type
 14141 ;;  x               2    4[COMRAM] int 
 14142 ;; Return value:  Size  Location     Type
 14143 ;;                  1    wreg      void 
 14144 ;; Registers used:
 14145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14146 ;; Tracked objects:
 14147 ;;		On entry : 0/0
 14148 ;;		On exit  : 0/0
 14149 ;;		Unchanged: 0/0
 14150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14151 ;;      Params:         0       0       0       0       0       0       0
 14152 ;;      Locals:         2       0       0       0       0       0       0
 14153 ;;      Temps:          0       0       0       0       0       0       0
 14154 ;;      Totals:         2       0       0       0       0       0       0
 14155 ;;Total ram usage:        2 bytes
 14156 ;; Hardware stack levels used:    1
 14157 ;; Hardware stack levels required when called:    1
 14158 ;; This function calls:
 14159 ;;		_ReadButtonState
 14160 ;; This function is called by:
 14161 ;;		_INTERRUPT_InterruptManager
 14162 ;; This function uses a non-reentrant model
 14163 ;;
 14164                           
 14165                           	psect	text74
 14166  002E4E                     __ptext74:
 14167                           	opt stack 0
 14168  002E4E                     _TMR0_ISR:
 14169                           	opt stack 22
 14170                           
 14171                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 14172                           
 14173                           ;incstack = 0
 14174  002E4E  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 14175  002E50  6ED7               	movwf	4055,c	;volatile
 14176                           
 14177                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 14178  002E52  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 14179                           
 14180                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 14181  002E56  0E00               	movlw	0
 14182  002E58  6E06               	movwf	TMR0_ISR@x+1,c
 14183  002E5A  0E00               	movlw	0
 14184  002E5C  6E05               	movwf	TMR0_ISR@x,c
 14185  002E5E                     i2l5254:
 14186  002E5E  BE06               	btfsc	TMR0_ISR@x+1,7,c
 14187  002E60  D006               	goto	i2l5258
 14188  002E62  5006               	movf	TMR0_ISR@x+1,w,c
 14189  002E64  E10D               	bnz	i2l5264
 14190  002E66  0E08               	movlw	8
 14191  002E68  5C05               	subwf	TMR0_ISR@x,w,c
 14192  002E6A  B0D8               	btfsc	status,0,c
 14193  002E6C  D009               	goto	i2l5264
 14194  002E6E                     i2l5258:
 14195                           
 14196                           ;tmr0.c: 89: ReadButtonState(x);
 14197  002E6E  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 14198  002E72  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 14199  002E76  EC38  F00D         	call	_ReadButtonState	;wreg free
 14200  002E7A  4A05               	infsnz	TMR0_ISR@x,f,c
 14201  002E7C  2A06               	incf	TMR0_ISR@x+1,f,c
 14202  002E7E  D7EF               	goto	i2l5254
 14203  002E80                     i2l5264:
 14204                           
 14205                           ;tmr0.c: 90: }
 14206                           ;tmr0.c: 91: time++;
 14207  002E80  2A3F               	incf	_time,f,c	;volatile
 14208                           
 14209                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
 14210  002E82  94F2               	bcf	intcon,2,c	;volatile
 14211  002E84  0012               	return		;funcret
 14212  002E86                     __end_of_TMR0_ISR:
 14213                           	opt stack 0
 14214                           tosu	equ	0xFFF
 14215                           tosh	equ	0xFFE
 14216                           tosl	equ	0xFFD
 14217                           pclatu	equ	0xFFB
 14218                           pclath	equ	0xFFA
 14219                           tblptru	equ	0xFF8
 14220                           tblptrh	equ	0xFF7
 14221                           tblptrl	equ	0xFF6
 14222                           tablat	equ	0xFF5
 14223                           prodh	equ	0xFF4
 14224                           prodl	equ	0xFF3
 14225                           intcon	equ	0xFF2
 14226                           intcon2	equ	0xFF1
 14227                           indf0	equ	0xFEF
 14228                           postinc0	equ	0xFEE
 14229                           fsr0h	equ	0xFEA
 14230                           fsr0l	equ	0xFE9
 14231                           wreg	equ	0xFE8
 14232                           fsr1h	equ	0xFE2
 14233                           fsr1l	equ	0xFE1
 14234                           indf2	equ	0xFDF
 14235                           postinc2	equ	0xFDE
 14236                           postdec2	equ	0xFDD
 14237                           plusw2	equ	0xFDB
 14238                           fsr2h	equ	0xFDA
 14239                           fsr2l	equ	0xFD9
 14240                           status	equ	0xFD8
 14241                           
 14242 ;; *************** function _ReadButtonState *****************
 14243 ;; Defined at:
 14244 ;;		line 154 in file "IO.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;  btnnum          2    0[COMRAM] int 
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;		None
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  1    wreg      void 
 14251 ;; Registers used:
 14252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14253 ;; Tracked objects:
 14254 ;;		On entry : 0/0
 14255 ;;		On exit  : 0/0
 14256 ;;		Unchanged: 0/0
 14257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14258 ;;      Params:         2       0       0       0       0       0       0
 14259 ;;      Locals:         0       0       0       0       0       0       0
 14260 ;;      Temps:          2       0       0       0       0       0       0
 14261 ;;      Totals:         4       0       0       0       0       0       0
 14262 ;;Total ram usage:        4 bytes
 14263 ;; Hardware stack levels used:    1
 14264 ;; This function calls:
 14265 ;;		Nothing
 14266 ;; This function is called by:
 14267 ;;		_TMR0_ISR
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text75
 14272  001A70                     __ptext75:
 14273                           	opt stack 0
 14274  001A70                     _ReadButtonState:
 14275                           	opt stack 22
 14276                           
 14277                           ;IO.c: 155: switch (btnnum) {
 14278                           
 14279                           ;incstack = 0
 14280  001A70  D068               	goto	i2l4716
 14281  001A72                     i2l4698:
 14282                           
 14283                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 14284  001A72  0EB0               	movlw	low _butnarray
 14285  001A74  2401               	addwf	ReadButtonState@btnnum,w,c
 14286  001A76  6ED9               	movwf	fsr2l,c
 14287  001A78  0E00               	movlw	high _butnarray
 14288  001A7A  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14289  001A7C  6EDA               	movwf	fsr2h,c
 14290  001A7E  AA83               	btfss	3971,5,c	;volatile
 14291  001A80  D002               	goto	i2u395_40
 14292  001A82  0E01               	movlw	1
 14293  001A84  D001               	goto	i2u395_46
 14294  001A86                     i2u395_40:
 14295  001A86  0E00               	movlw	0
 14296  001A88                     i2u395_46:
 14297  001A88  6EDF               	movwf	indf2,c
 14298                           
 14299                           ;IO.c: 158: break;
 14300  001A8A  0012               	return	
 14301  001A8C                     i2l4700:
 14302                           
 14303                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 14304  001A8C  0EB0               	movlw	low _butnarray
 14305  001A8E  2401               	addwf	ReadButtonState@btnnum,w,c
 14306  001A90  6ED9               	movwf	fsr2l,c
 14307  001A92  0E00               	movlw	high _butnarray
 14308  001A94  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14309  001A96  6EDA               	movwf	fsr2h,c
 14310  001A98  A081               	btfss	3969,0,c	;volatile
 14311  001A9A  D002               	goto	i2u396_40
 14312  001A9C  0E01               	movlw	1
 14313  001A9E  D001               	goto	i2u396_46
 14314  001AA0                     i2u396_40:
 14315  001AA0  0E00               	movlw	0
 14316  001AA2                     i2u396_46:
 14317  001AA2  6EDF               	movwf	indf2,c
 14318                           
 14319                           ;IO.c: 161: break;
 14320  001AA4  0012               	return	
 14321  001AA6                     i2l4702:
 14322                           
 14323                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 14324  001AA6  0EB0               	movlw	low _butnarray
 14325  001AA8  2401               	addwf	ReadButtonState@btnnum,w,c
 14326  001AAA  6ED9               	movwf	fsr2l,c
 14327  001AAC  0E00               	movlw	high _butnarray
 14328  001AAE  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14329  001AB0  6EDA               	movwf	fsr2h,c
 14330  001AB2  A281               	btfss	3969,1,c	;volatile
 14331  001AB4  D002               	goto	i2u397_40
 14332  001AB6  0E01               	movlw	1
 14333  001AB8  D001               	goto	i2u397_46
 14334  001ABA                     i2u397_40:
 14335  001ABA  0E00               	movlw	0
 14336  001ABC                     i2u397_46:
 14337  001ABC  6EDF               	movwf	indf2,c
 14338                           
 14339                           ;IO.c: 164: break;
 14340  001ABE  0012               	return	
 14341  001AC0                     i2l4704:
 14342                           
 14343                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 14344  001AC0  0EB0               	movlw	low _butnarray
 14345  001AC2  2401               	addwf	ReadButtonState@btnnum,w,c
 14346  001AC4  6ED9               	movwf	fsr2l,c
 14347  001AC6  0E00               	movlw	high _butnarray
 14348  001AC8  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14349  001ACA  6EDA               	movwf	fsr2h,c
 14350  001ACC  A481               	btfss	3969,2,c	;volatile
 14351  001ACE  D002               	goto	i2u398_40
 14352  001AD0  0E01               	movlw	1
 14353  001AD2  D001               	goto	i2u398_46
 14354  001AD4                     i2u398_40:
 14355  001AD4  0E00               	movlw	0
 14356  001AD6                     i2u398_46:
 14357  001AD6  6EDF               	movwf	indf2,c
 14358                           
 14359                           ;IO.c: 167: break;
 14360  001AD8  0012               	return	
 14361  001ADA                     i2l4706:
 14362                           
 14363                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 14364  001ADA  0EB0               	movlw	low _butnarray
 14365  001ADC  2401               	addwf	ReadButtonState@btnnum,w,c
 14366  001ADE  6ED9               	movwf	fsr2l,c
 14367  001AE0  0E00               	movlw	high _butnarray
 14368  001AE2  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14369  001AE4  6EDA               	movwf	fsr2h,c
 14370  001AE6  A881               	btfss	3969,4,c	;volatile
 14371  001AE8  D002               	goto	i2u399_40
 14372  001AEA  0E01               	movlw	1
 14373  001AEC  D001               	goto	i2u399_46
 14374  001AEE                     i2u399_40:
 14375  001AEE  0E00               	movlw	0
 14376  001AF0                     i2u399_46:
 14377  001AF0  6EDF               	movwf	indf2,c
 14378                           
 14379                           ;IO.c: 170: break;
 14380  001AF2  0012               	return	
 14381  001AF4                     i2l4708:
 14382                           
 14383                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 14384  001AF4  0EB0               	movlw	low _butnarray
 14385  001AF6  2401               	addwf	ReadButtonState@btnnum,w,c
 14386  001AF8  6ED9               	movwf	fsr2l,c
 14387  001AFA  0E00               	movlw	high _butnarray
 14388  001AFC  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14389  001AFE  6EDA               	movwf	fsr2h,c
 14390  001B00  A080               	btfss	3968,0,c	;volatile
 14391  001B02  D002               	goto	i2u400_40
 14392  001B04  0E01               	movlw	1
 14393  001B06  D001               	goto	i2u400_46
 14394  001B08                     i2u400_40:
 14395  001B08  0E00               	movlw	0
 14396  001B0A                     i2u400_46:
 14397  001B0A  6EDF               	movwf	indf2,c
 14398                           
 14399                           ;IO.c: 173: break;
 14400  001B0C  0012               	return	
 14401  001B0E                     i2l4710:
 14402                           
 14403                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 14404  001B0E  0EB0               	movlw	low _butnarray
 14405  001B10  2401               	addwf	ReadButtonState@btnnum,w,c
 14406  001B12  6ED9               	movwf	fsr2l,c
 14407  001B14  0E00               	movlw	high _butnarray
 14408  001B16  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14409  001B18  6EDA               	movwf	fsr2h,c
 14410  001B1A  A280               	btfss	3968,1,c	;volatile
 14411  001B1C  D002               	goto	i2u401_40
 14412  001B1E  0E01               	movlw	1
 14413  001B20  D001               	goto	i2u401_46
 14414  001B22                     i2u401_40:
 14415  001B22  0E00               	movlw	0
 14416  001B24                     i2u401_46:
 14417  001B24  6EDF               	movwf	indf2,c
 14418                           
 14419                           ;IO.c: 176: break;
 14420  001B26  0012               	return	
 14421  001B28                     i2l4712:
 14422                           
 14423                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 14424  001B28  0EB0               	movlw	low _butnarray
 14425  001B2A  2401               	addwf	ReadButtonState@btnnum,w,c
 14426  001B2C  6ED9               	movwf	fsr2l,c
 14427  001B2E  0E00               	movlw	high _butnarray
 14428  001B30  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14429  001B32  6EDA               	movwf	fsr2h,c
 14430  001B34  A480               	btfss	3968,2,c	;volatile
 14431  001B36  D002               	goto	i2u402_40
 14432  001B38  0E01               	movlw	1
 14433  001B3A  D001               	goto	i2u402_46
 14434  001B3C                     i2u402_40:
 14435  001B3C  0E00               	movlw	0
 14436  001B3E                     i2u402_46:
 14437  001B3E  6EDF               	movwf	indf2,c
 14438                           
 14439                           ;IO.c: 181: }
 14440                           
 14441                           ;IO.c: 179: break;
 14442  001B40  0012               	return	
 14443  001B42                     i2l4716:
 14444  001B42  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 14445  001B46  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 14446                           
 14447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14448                           ; Switch size 1, requested type "space"
 14449                           ; Number of cases is 1, Range of values is 0 to 0
 14450                           ; switch strategies available:
 14451                           ; Name         Instructions Cycles
 14452                           ; simple_byte            4     3 (average)
 14453                           ;	Chosen strategy is simple_byte
 14454  001B4A  5004               	movf	??_ReadButtonState+1,w,c
 14455  001B4C  0A00               	xorlw	0	; case 0
 14456  001B4E  A4D8               	btfss	status,2,c
 14457  001B50  0012               	return	
 14458                           
 14459                           ; Switch size 1, requested type "space"
 14460                           ; Number of cases is 8, Range of values is 0 to 7
 14461                           ; switch strategies available:
 14462                           ; Name         Instructions Cycles
 14463                           ; simple_byte           25    13 (average)
 14464                           ;	Chosen strategy is simple_byte
 14465  001B52  5003               	movf	??_ReadButtonState,w,c
 14466  001B54  0A00               	xorlw	0	; case 0
 14467  001B56  B4D8               	btfsc	status,2,c
 14468  001B58  D78C               	goto	i2l4698
 14469  001B5A  0A01               	xorlw	1	; case 1
 14470  001B5C  B4D8               	btfsc	status,2,c
 14471  001B5E  D796               	goto	i2l4700
 14472  001B60  0A03               	xorlw	3	; case 2
 14473  001B62  B4D8               	btfsc	status,2,c
 14474  001B64  D7A0               	goto	i2l4702
 14475  001B66  0A01               	xorlw	1	; case 3
 14476  001B68  B4D8               	btfsc	status,2,c
 14477  001B6A  D7AA               	goto	i2l4704
 14478  001B6C  0A07               	xorlw	7	; case 4
 14479  001B6E  B4D8               	btfsc	status,2,c
 14480  001B70  D7B4               	goto	i2l4706
 14481  001B72  0A01               	xorlw	1	; case 5
 14482  001B74  B4D8               	btfsc	status,2,c
 14483  001B76  D7BE               	goto	i2l4708
 14484  001B78  0A03               	xorlw	3	; case 6
 14485  001B7A  B4D8               	btfsc	status,2,c
 14486  001B7C  D7C8               	goto	i2l4710
 14487  001B7E  0A01               	xorlw	1	; case 7
 14488  001B80  A4D8               	btfss	status,2,c
 14489  001B82  0012               	return	
 14490  001B84  D7D1               	goto	i2l4712
 14491  001B86                     __end_of_ReadButtonState:
 14492                           	opt stack 0
 14493                           tosu	equ	0xFFF
 14494                           tosh	equ	0xFFE
 14495                           tosl	equ	0xFFD
 14496                           pclatu	equ	0xFFB
 14497                           pclath	equ	0xFFA
 14498                           tblptru	equ	0xFF8
 14499                           tblptrh	equ	0xFF7
 14500                           tblptrl	equ	0xFF6
 14501                           tablat	equ	0xFF5
 14502                           prodh	equ	0xFF4
 14503                           prodl	equ	0xFF3
 14504                           intcon	equ	0xFF2
 14505                           intcon2	equ	0xFF1
 14506                           indf0	equ	0xFEF
 14507                           postinc0	equ	0xFEE
 14508                           fsr0h	equ	0xFEA
 14509                           fsr0l	equ	0xFE9
 14510                           wreg	equ	0xFE8
 14511                           fsr1h	equ	0xFE2
 14512                           fsr1l	equ	0xFE1
 14513                           indf2	equ	0xFDF
 14514                           postinc2	equ	0xFDE
 14515                           postdec2	equ	0xFDD
 14516                           plusw2	equ	0xFDB
 14517                           fsr2h	equ	0xFDA
 14518                           fsr2l	equ	0xFD9
 14519                           status	equ	0xFD8
 14520                           
 14521 ;; *************** function _I2C1_ISR *****************
 14522 ;; Defined at:
 14523 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;		None
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;		None
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1    wreg      void 
 14530 ;; Registers used:
 14531 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14532 ;; Tracked objects:
 14533 ;;		On entry : 0/0
 14534 ;;		On exit  : 0/0
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14537 ;;      Params:         0       0       0       0       0       0       0
 14538 ;;      Locals:         0       0       0       0       0       0       0
 14539 ;;      Temps:          2       0       0       0       0       0       0
 14540 ;;      Totals:         2       0       0       0       0       0       0
 14541 ;;Total ram usage:        2 bytes
 14542 ;; Hardware stack levels used:    1
 14543 ;; Hardware stack levels required when called:    1
 14544 ;; This function calls:
 14545 ;;		_I2C1_FunctionComplete
 14546 ;;		_I2C1_Stop
 14547 ;; This function is called by:
 14548 ;;		_INTERRUPT_InterruptManager
 14549 ;; This function uses a non-reentrant model
 14550 ;;
 14551                           
 14552                           	psect	text76
 14553  000B98                     __ptext76:
 14554                           	opt stack 0
 14555  000B98                     _I2C1_ISR:
 14556                           	opt stack 22
 14557                           
 14558                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 14559                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 14560                           ;i2c1.c: 191: static int i2c_bytes_left = 0;
 14561                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 14562                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 14563                           
 14564                           ;incstack = 0
 14565  000B98  969E               	bcf	3998,3,c	;volatile
 14566                           
 14567                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 14568  000B9A  AEC6               	btfss	4038,7,c	;volatile
 14569  000B9C  D14A               	goto	i2l6906
 14570                           
 14571                           ;i2c1.c: 199: {
 14572                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 14573  000B9E  9EC6               	bcf	4038,7,c	;volatile
 14574                           
 14575                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 14576  000BA0  0E00               	movlw	0
 14577  000BA2  6E38               	movwf	_i2c1_state,c
 14578                           
 14579                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 14580  000BA4  0100               	movlb	0	; () banked
 14581  000BA6  EE20 F003          	lfsr	2,3
 14582  000BAA  51D5               	movf	_p_i2c1_current& (0+255),w,b
 14583  000BAC  26D9               	addwf	fsr2l,f,c
 14584  000BAE  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14585  000BB0  22DA               	addwfc	fsr2h,f,c
 14586  000BB2  CFDE F004          	movff	postinc2,??_I2C1_ISR
 14587  000BB6  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 14588  000BBA  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 14589  000BBE  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 14590  000BC2  0E01               	movlw	1
 14591  000BC4  6EDF               	movwf	indf2,c
 14592                           
 14593                           ; BSR set to: 0
 14594                           ;i2c1.c: 206: p_i2c1_current = (0);
 14595  000BC6  0E00               	movlw	0
 14596  000BC8  0100               	movlb	0	; () banked
 14597  000BCA  6FD5               	movwf	_p_i2c1_current& (0+255),b
 14598  000BCC  0E00               	movlw	0
 14599  000BCE  0100               	movlb	0	; () banked
 14600  000BD0  6FD6               	movwf	(_p_i2c1_current+1)& (0+255),b
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;i2c1.c: 208: return;
 14604  000BD2  0012               	return	
 14605  000BD4                     i2l60:
 14606                           
 14607                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 14608  000BD4  0100               	movlb	0	; () banked
 14609  000BD6  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 14610  000BD8  0012               	return	
 14611                           
 14612                           ; BSR set to: 0
 14613                           ;i2c1.c: 217: {
 14614                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 14615  000BDA  C0BA  F0D5         	movff	_i2c1_object+2,_p_i2c1_current
 14616  000BDE  C0BB  F0D6         	movff	_i2c1_object+3,_p_i2c1_current+1
 14617                           
 14618                           ; BSR set to: 0
 14619                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 14620  000BE2  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 14621  000BE6  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 14622  000BEA  50DF               	movf	indf2,w,c
 14623  000BEC  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14624  000BEE  5004               	movf	??_I2C1_ISR,w,c
 14625  000BF0  0100               	movlb	0	; () banked
 14626  000BF2  6FD1               	movwf	_i2c1_trb_count& (0+255),b
 14627  000BF4  6BD2               	clrf	(_i2c1_trb_count+1)& (0+255),b
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 14631  000BF6  0100               	movlb	0	; () banked
 14632  000BF8  EE20 F001          	lfsr	2,1
 14633  000BFC  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 14634  000BFE  26D9               	addwf	fsr2l,f,c
 14635  000C00  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 14636  000C02  22DA               	addwfc	fsr2h,f,c
 14637  000C04  CFDE F02D          	movff	postinc2,_p_i2c1_trb_current
 14638  000C08  CFDD F02E          	movff	postdec2,_p_i2c1_trb_current+1
 14639                           
 14640                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 14641  000C0C  0E05               	movlw	5
 14642  000C0E  0100               	movlb	0	; () banked
 14643  000C10  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 14644  000C12  0E00               	movlw	0
 14645  000C14  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 14646                           
 14647                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 14648  000C16  0EF0               	movlw	low (_i2c1_tr_queue+5)
 14649  000C18  0100               	movlb	0	; () banked
 14650  000C1A  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14651  000C1C  E10B               	bnz	i2l6800
 14652  000C1E  0E00               	movlw	high (_i2c1_tr_queue+5)
 14653  000C20  0100               	movlb	0	; () banked
 14654  000C22  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14655  000C24  A4D8               	btfss	status,2,c
 14656  000C26  D006               	goto	i2l6800
 14657                           
 14658                           ; BSR set to: 0
 14659                           ;i2c1.c: 227: {
 14660                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 14661  000C28  0EEB               	movlw	low _i2c1_tr_queue
 14662  000C2A  0100               	movlb	0	; () banked
 14663  000C2C  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 14664  000C2E  0E00               	movlw	high _i2c1_tr_queue
 14665  000C30  0100               	movlb	0	; () banked
 14666  000C32  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 14667  000C34                     i2l6800:
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;i2c1.c: 230: }
 14671                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 14672  000C34  0100               	movlb	0	; () banked
 14673  000C36  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 14674                           
 14675                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 14676  000C38  0100               	movlb	0	; () banked
 14677  000C3A  51B8               	movf	_i2c1_object& (0+255),w,b
 14678  000C3C  0100               	movlb	0	; () banked
 14679  000C3E  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14680  000C40  E108               	bnz	i2l63
 14681  000C42  0100               	movlb	0	; () banked
 14682  000C44  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 14683  000C46  0100               	movlb	0	; () banked
 14684  000C48  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14685  000C4A  A4D8               	btfss	status,2,c
 14686  000C4C  D002               	goto	i2l63
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;i2c1.c: 238: {
 14690                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 14691  000C4E  0100               	movlb	0	; () banked
 14692  000C50  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 14693  000C52                     i2l63:
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;i2c1.c: 241: }
 14697                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 14698  000C52  80C5               	bsf	4037,0,c	;volatile
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 14702  000C54  0E02               	movlw	2
 14703  000C56  6E38               	movwf	_i2c1_state,c
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;i2c1.c: 248: }
 14707                           ;i2c1.c: 250: break;
 14708  000C58  0012               	return	
 14709  000C5A                     i2l65:
 14710                           
 14711                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 14712  000C5A  82C5               	bsf	4037,1,c	;volatile
 14713                           
 14714                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 14715  000C5C  0E02               	movlw	2
 14716  000C5E  6E38               	movwf	_i2c1_state,c
 14717                           
 14718                           ;i2c1.c: 262: break;
 14719  000C60  0012               	return	
 14720  000C62                     i2l66:
 14721                           
 14722                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 14723  000C62  ACC5               	btfss	4037,6,c	;volatile
 14724  000C64  D006               	goto	i2l6812
 14725                           
 14726                           ;i2c1.c: 267: {
 14727                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 14728  000C66  0100               	movlb	0	; () banked
 14729  000C68  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14730                           
 14731                           ; BSR set to: 0
 14732                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14733  000C6A  0E04               	movlw	4
 14734  000C6C  ECAD  F016         	call	_I2C1_Stop
 14735                           
 14736                           ;i2c1.c: 270: }
 14737  000C70  0012               	return	
 14738  000C72                     i2l6812:
 14739                           
 14740                           ;i2c1.c: 271: else
 14741                           ;i2c1.c: 272: {
 14742                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 14743  000C72  90D8               	bcf	status,0,c
 14744  000C74  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 14745  000C76  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14746  000C78  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 14747  000C7A  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14748  000C7C  5004               	movf	??_I2C1_ISR,w,c
 14749  000C7E  6EC9               	movwf	4041,c	;volatile
 14750                           
 14751                           ;i2c1.c: 277: if(i2c_address & 0x01)
 14752  000C80  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14753  000C82  D003               	goto	i2l6818
 14754                           
 14755                           ;i2c1.c: 278: {
 14756                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 14757  000C84  0E0B               	movlw	11
 14758  000C86  6E38               	movwf	_i2c1_state,c
 14759                           
 14760                           ;i2c1.c: 282: }
 14761  000C88  0012               	return	
 14762  000C8A                     i2l6818:
 14763                           
 14764                           ;i2c1.c: 283: else
 14765                           ;i2c1.c: 284: {
 14766                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 14767  000C8A  0E03               	movlw	3
 14768  000C8C  6E38               	movwf	_i2c1_state,c
 14769                           
 14770                           ;i2c1.c: 287: }
 14771                           ;i2c1.c: 288: }
 14772                           ;i2c1.c: 290: break;
 14773  000C8E  0012               	return	
 14774  000C90                     i2l71:
 14775                           
 14776                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 14777  000C90  ACC5               	btfss	4037,6,c	;volatile
 14778  000C92  D006               	goto	i2l72
 14779                           
 14780                           ;i2c1.c: 295: {
 14781                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 14782  000C94  0100               	movlb	0	; () banked
 14783  000C96  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14784                           
 14785                           ; BSR set to: 0
 14786                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14787  000C98  0E04               	movlw	4
 14788  000C9A  ECAD  F016         	call	_I2C1_Stop
 14789                           
 14790                           ;i2c1.c: 298: }
 14791  000C9E  0012               	return	
 14792  000CA0                     i2l72:
 14793                           
 14794                           ;i2c1.c: 299: else
 14795                           ;i2c1.c: 300: {
 14796                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 14797  000CA0  82C5               	bsf	4037,1,c	;volatile
 14798                           
 14799                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 14800  000CA2  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 14801  000CA6  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 14802  000CAA  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 14803  000CAE  6A05               	clrf	??_I2C1_ISR+1,c
 14804  000CB0  0E06               	movlw	6
 14805  000CB2  1604               	andwf	??_I2C1_ISR,f,c
 14806  000CB4  0E00               	movlw	0
 14807  000CB6  1605               	andwf	??_I2C1_ISR+1,f,c
 14808  000CB8  0EF0               	movlw	240
 14809  000CBA  1004               	iorwf	??_I2C1_ISR,w,c
 14810  000CBC  6E40               	movwf	I2C1_ISR@i2c_address,c
 14811  000CBE  5005               	movf	??_I2C1_ISR+1,w,c
 14812  000CC0  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 14813                           
 14814                           ;i2c1.c: 310: i2c_address |= 0x0001;
 14815  000CC2  8040               	bsf	I2C1_ISR@i2c_address,0,c
 14816                           
 14817                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 14818  000CC4  0E01               	movlw	1
 14819  000CC6  6E35               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 14820                           
 14821                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 14822  000CC8  0E02               	movlw	2
 14823  000CCA  6E38               	movwf	_i2c1_state,c
 14824                           
 14825                           ;i2c1.c: 317: }
 14826                           ;i2c1.c: 319: break;
 14827  000CCC  0012               	return	
 14828  000CCE                     i2l6832:
 14829                           
 14830                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 14831  000CCE  0435               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 14832  000CD0  B4D8               	btfsc	status,2,c
 14833  000CD2  D01E               	goto	i2l76
 14834                           
 14835                           ;i2c1.c: 335: {
 14836                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 14837  000CD4  C02D  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 14838  000CD8  C02E  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 14839  000CDC  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 14840  000CE0  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 14841                           
 14842                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 14843  000CE4  EE20 F003          	lfsr	2,3
 14844  000CE8  502D               	movf	_p_i2c1_trb_current,w,c
 14845  000CEA  26D9               	addwf	fsr2l,f,c
 14846  000CEC  502E               	movf	_p_i2c1_trb_current+1,w,c
 14847  000CEE  22DA               	addwfc	fsr2h,f,c
 14848  000CF0  CFDE F0C1          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 14849  000CF4  CFDD F0C2          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 14850                           
 14851                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 14852  000CF8  EE20 F002          	lfsr	2,2
 14853  000CFC  502D               	movf	_p_i2c1_trb_current,w,c
 14854  000CFE  26D9               	addwf	fsr2l,f,c
 14855  000D00  502E               	movf	_p_i2c1_trb_current+1,w,c
 14856  000D02  22DA               	addwfc	fsr2h,f,c
 14857  000D04  50DF               	movf	indf2,w,c
 14858  000D06  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14859  000D08  5004               	movf	??_I2C1_ISR,w,c
 14860  000D0A  0100               	movlb	0	; () banked
 14861  000D0C  6FBF               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 14862  000D0E  6BC0               	clrf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),b
 14863  000D10                     i2l76:
 14864                           
 14865                           ;i2c1.c: 362: else
 14866                           ;i2c1.c: 363: {
 14867                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 14868  000D10  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 14869                           
 14870                           ;i2c1.c: 366: if(i2c_address & 0x01)
 14871  000D14  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14872  000D16  D003               	goto	i2l6852
 14873                           
 14874                           ;i2c1.c: 367: {
 14875                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 14876  000D18  0E05               	movlw	5
 14877  000D1A  6E38               	movwf	_i2c1_state,c
 14878                           
 14879                           ;i2c1.c: 370: }
 14880  000D1C  0012               	return	
 14881  000D1E                     i2l6852:
 14882                           
 14883                           ;i2c1.c: 371: else
 14884                           ;i2c1.c: 372: {
 14885                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 14886  000D1E  0E03               	movlw	3
 14887  000D20  6E38               	movwf	_i2c1_state,c
 14888                           
 14889                           ;i2c1.c: 375: }
 14890                           ;i2c1.c: 376: }
 14891                           ;i2c1.c: 377: break;
 14892  000D22  0012               	return	
 14893  000D24                     i2l82:
 14894                           
 14895                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 14896  000D24  ACC5               	btfss	4037,6,c	;volatile
 14897  000D26  D007               	goto	i2l6860
 14898                           
 14899                           ;i2c1.c: 383: {
 14900                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 14901  000D28  0100               	movlb	0	; () banked
 14902  000D2A  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14903                           
 14904                           ; BSR set to: 0
 14905                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 14906  000D2C  9CC5               	bcf	4037,6,c	;volatile
 14907                           
 14908                           ; BSR set to: 0
 14909                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 14910  000D2E  0E05               	movlw	5
 14911  000D30  ECAD  F016         	call	_I2C1_Stop
 14912                           
 14913                           ;i2c1.c: 393: }
 14914  000D34  0012               	return	
 14915  000D36                     i2l6860:
 14916                           
 14917                           ;i2c1.c: 394: else
 14918                           ;i2c1.c: 395: {
 14919                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 14920  000D36  0100               	movlb	0	; () banked
 14921  000D38  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14922  000D3A  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14923  000D3C  0100               	movlb	0	; () banked
 14924  000D3E  51C0               	movf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14925  000D40  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14926  000D42  0E01               	movlw	1
 14927  000D44  0100               	movlb	0	; () banked
 14928  000D46  5FBF               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14929  000D48  0E00               	movlw	0
 14930  000D4A  0100               	movlb	0	; () banked
 14931  000D4C  5BC0               	subwfb	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14932  000D4E  5004               	movf	??_I2C1_ISR,w,c
 14933  000D50  1005               	iorwf	??_I2C1_ISR+1,w,c
 14934  000D52  A4D8               	btfss	status,2,c
 14935  000D54  D016               	goto	i2l6868
 14936                           
 14937                           ; BSR set to: 0
 14938                           ;i2c1.c: 398: {
 14939                           ;i2c1.c: 402: p_i2c1_trb_current++;
 14940  000D56  0E05               	movlw	5
 14941  000D58  262D               	addwf	_p_i2c1_trb_current,f,c
 14942  000D5A  0E00               	movlw	0
 14943  000D5C  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 14944                           
 14945                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 14946  000D5E  0100               	movlb	0	; () banked
 14947  000D60  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 14948  000D62  A0D8               	btfss	status,0,c
 14949  000D64  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 14950  000D66  0100               	movlb	0	; () banked
 14951  000D68  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 14952  000D6A  0100               	movlb	0	; () banked
 14953  000D6C  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 14954  000D6E  A4D8               	btfss	status,2,c
 14955  000D70  D004               	goto	i2l86
 14956                           
 14957                           ; BSR set to: 0
 14958                           ;i2c1.c: 406: {
 14959                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14960  000D72  0E00               	movlw	0
 14961  000D74  ECAD  F016         	call	_I2C1_Stop
 14962                           
 14963                           ;i2c1.c: 408: }
 14964  000D78  0012               	return	
 14965  000D7A                     i2l86:
 14966                           
 14967                           ; BSR set to: 0
 14968                           ;i2c1.c: 409: else
 14969                           ;i2c1.c: 410: {
 14970                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 14971  000D7A  82C5               	bsf	4037,1,c	;volatile
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 14975  000D7C  0E02               	movlw	2
 14976  000D7E  6E38               	movwf	_i2c1_state,c
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;i2c1.c: 422: }
 14980                           ;i2c1.c: 423: }
 14981  000D80  0012               	return	
 14982  000D82                     i2l6868:
 14983                           
 14984                           ; BSR set to: 0
 14985                           ;i2c1.c: 424: else
 14986                           ;i2c1.c: 425: {
 14987                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 14988  000D82  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 14989  000D86  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 14990  000D8A  6AF8               	clrf	tblptru,c
 14991  000D8C  0E05               	movlw	(high __ramtop+-1)
 14992  000D8E  64F7               	cpfsgt	tblptrh,c
 14993  000D90  D003               	bra	i2u789_47
 14994  000D92  0008               	tblrd		*
 14995  000D94  50F5               	movf	tablat,w,c
 14996  000D96  D005               	bra	i2u789_40
 14997  000D98                     i2u789_47:
 14998  000D98  CFF6 FFE9          	movff	tblptrl,fsr0l
 14999  000D9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15000  000DA0  50EF               	movf	indf0,w,c
 15001  000DA2                     i2u789_40:
 15002  000DA2  6EC9               	movwf	4041,c	;volatile
 15003  000DA4  0100               	movlb	0	; () banked
 15004  000DA6  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 15005  000DA8  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;i2c1.c: 428: }
 15009                           ;i2c1.c: 429: }
 15010                           ;i2c1.c: 430: break;
 15011                           
 15012                           ; BSR set to: 0
 15013  000DAA  0012               	return	
 15014  000DAC                     i2l89:
 15015                           
 15016                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 15017  000DAC  ACC5               	btfss	4037,6,c	;volatile
 15018  000DAE  D007               	goto	i2l90
 15019                           
 15020                           ;i2c1.c: 436: {
 15021                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 15022  000DB0  0100               	movlb	0	; () banked
 15023  000DB2  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 15024                           
 15025                           ; BSR set to: 0
 15026                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 15027  000DB4  0E04               	movlw	4
 15028  000DB6  ECAD  F016         	call	_I2C1_Stop
 15029                           
 15030                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 15031  000DBA  9CC5               	bcf	4037,6,c	;volatile
 15032                           
 15033                           ;i2c1.c: 446: }
 15034  000DBC  0012               	return	
 15035  000DBE                     i2l90:
 15036                           
 15037                           ;i2c1.c: 447: else
 15038                           ;i2c1.c: 448: {
 15039                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 15040  000DBE  86C5               	bsf	4037,3,c	;volatile
 15041                           
 15042                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 15043  000DC0  0E08               	movlw	8
 15044  000DC2  6E38               	movwf	_i2c1_state,c
 15045                           
 15046                           ;i2c1.c: 451: }
 15047                           ;i2c1.c: 452: break;
 15048  000DC4  0012               	return	
 15049  000DC6                     i2l6880:
 15050                           
 15051                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 15052  000DC6  0E08               	movlw	8
 15053  000DC8  6E38               	movwf	_i2c1_state,c
 15054                           
 15055                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 15056  000DCA  86C5               	bsf	4037,3,c	;volatile
 15057                           
 15058                           ;i2c1.c: 464: break;
 15059  000DCC  0012               	return	
 15060  000DCE                     i2l6884:
 15061                           
 15062                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 15063  000DCE  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 15064  000DD2  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 15065  000DD6  6AF8               	clrf	tblptru,c
 15066  000DD8  0E05               	movlw	(high __ramtop+-1)
 15067  000DDA  64F7               	cpfsgt	tblptrh,c
 15068  000DDC  D004               	bra	i2u791_47
 15069  000DDE  CFC9 FFF5          	movff	4041,tablat	;volatile
 15070  000DE2  000C               	tblwt		*
 15071  000DE4  D006               	bra	i2u791_40
 15072  000DE6                     i2u791_47:
 15073  000DE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 15074  000DEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 15075  000DEE  CFC9 FFEF          	movff	4041,indf0	;volatile
 15076  000DF2                     i2u791_40:
 15077  000DF2  0100               	movlb	0	; () banked
 15078  000DF4  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 15079  000DF6  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;i2c1.c: 472: if(--i2c_bytes_left)
 15083  000DF8  0100               	movlb	0	; () banked
 15084  000DFA  07BF               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 15085  000DFC  A0D8               	btfss	status,0,c
 15086  000DFE  07C0               	decf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 15087  000E00  0100               	movlb	0	; () banked
 15088  000E02  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 15089  000E04  0100               	movlb	0	; () banked
 15090  000E06  11C0               	iorwf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 15091  000E08  B4D8               	btfsc	status,2,c
 15092  000E0A  D004               	goto	i2l94
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;i2c1.c: 473: {
 15096                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 15097  000E0C  9AC5               	bcf	4037,5,c	;volatile
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 15101  000E0E  0E06               	movlw	6
 15102  000E10  6E38               	movwf	_i2c1_state,c
 15103                           
 15104                           ;i2c1.c: 483: }
 15105  000E12  D003               	goto	i2l6896
 15106  000E14                     i2l94:
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;i2c1.c: 484: else
 15110                           ;i2c1.c: 485: {
 15111                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 15112  000E14  8AC5               	bsf	4037,5,c	;volatile
 15113                           
 15114                           ; BSR set to: 0
 15115                           ;i2c1.c: 491: I2C1_FunctionComplete();
 15116  000E16  ECF6  F017         	call	_I2C1_FunctionComplete	;wreg free
 15117  000E1A                     i2l6896:
 15118                           
 15119                           ;i2c1.c: 492: }
 15120                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 15121  000E1A  88C5               	bsf	4037,4,c	;volatile
 15122                           
 15123                           ;i2c1.c: 496: break;
 15124  000E1C  0012               	return	
 15125  000E1E                     i2l6898:
 15126                           
 15127                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 15128                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15129  000E1E  0E00               	movlw	0
 15130  000E20  ECAD  F016         	call	_I2C1_Stop
 15131                           
 15132                           ;i2c1.c: 503: break;
 15133  000E24  0012               	return	
 15134  000E26                     i2l6900:
 15135                           
 15136                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 15137  000E26  0100               	movlb	0	; () banked
 15138  000E28  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 15139                           
 15140                           ; BSR set to: 0
 15141                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 15142  000E2A  0E06               	movlw	6
 15143  000E2C  ECAD  F016         	call	_I2C1_Stop
 15144                           
 15145                           ;i2c1.c: 513: }
 15146                           
 15147                           ;i2c1.c: 511: break;
 15148  000E30  0012               	return	
 15149  000E32                     i2l6906:
 15150  000E32  5038               	movf	_i2c1_state,w,c
 15151                           
 15152                           ; Switch size 1, requested type "space"
 15153                           ; Number of cases is 11, Range of values is 0 to 11
 15154                           ; switch strategies available:
 15155                           ; Name         Instructions Cycles
 15156                           ; simple_byte           34    18 (average)
 15157                           ;	Chosen strategy is simple_byte
 15158  000E34  0A00               	xorlw	0	; case 0
 15159  000E36  B4D8               	btfsc	status,2,c
 15160  000E38  D6CD               	goto	i2l60
 15161  000E3A  0A01               	xorlw	1	; case 1
 15162  000E3C  B4D8               	btfsc	status,2,c
 15163  000E3E  D70D               	goto	i2l65
 15164  000E40  0A03               	xorlw	3	; case 2
 15165  000E42  B4D8               	btfsc	status,2,c
 15166  000E44  D744               	goto	i2l6832
 15167  000E46  0A01               	xorlw	1	; case 3
 15168  000E48  B4D8               	btfsc	status,2,c
 15169  000E4A  D76C               	goto	i2l82
 15170  000E4C  0A07               	xorlw	7	; case 4
 15171  000E4E  B4D8               	btfsc	status,2,c
 15172  000E50  D7E6               	goto	i2l6898
 15173  000E52  0A01               	xorlw	1	; case 5
 15174  000E54  B4D8               	btfsc	status,2,c
 15175  000E56  D7AA               	goto	i2l89
 15176  000E58  0A03               	xorlw	3	; case 6
 15177  000E5A  B4D8               	btfsc	status,2,c
 15178  000E5C  D7B4               	goto	i2l6880
 15179  000E5E  0A01               	xorlw	1	; case 7
 15180  000E60  B4D8               	btfsc	status,2,c
 15181  000E62  D7DD               	goto	i2l6898
 15182  000E64  0A0F               	xorlw	15	; case 8
 15183  000E66  B4D8               	btfsc	status,2,c
 15184  000E68  D7B2               	goto	i2l6884
 15185  000E6A  0A02               	xorlw	2	; case 10
 15186  000E6C  B4D8               	btfsc	status,2,c
 15187  000E6E  D6F9               	goto	i2l66
 15188  000E70  0A01               	xorlw	1	; case 11
 15189  000E72  B4D8               	btfsc	status,2,c
 15190  000E74  D70D               	goto	i2l71
 15191  000E76  D7D7               	goto	i2l6900
 15192  000E78                     __end_of_I2C1_ISR:
 15193                           	opt stack 0
 15194                           tosu	equ	0xFFF
 15195                           tosh	equ	0xFFE
 15196                           tosl	equ	0xFFD
 15197                           pclatu	equ	0xFFB
 15198                           pclath	equ	0xFFA
 15199                           tblptru	equ	0xFF8
 15200                           tblptrh	equ	0xFF7
 15201                           tblptrl	equ	0xFF6
 15202                           tablat	equ	0xFF5
 15203                           prodh	equ	0xFF4
 15204                           prodl	equ	0xFF3
 15205                           intcon	equ	0xFF2
 15206                           intcon2	equ	0xFF1
 15207                           indf0	equ	0xFEF
 15208                           postinc0	equ	0xFEE
 15209                           fsr0h	equ	0xFEA
 15210                           fsr0l	equ	0xFE9
 15211                           wreg	equ	0xFE8
 15212                           fsr1h	equ	0xFE2
 15213                           fsr1l	equ	0xFE1
 15214                           indf2	equ	0xFDF
 15215                           postinc2	equ	0xFDE
 15216                           postdec2	equ	0xFDD
 15217                           plusw2	equ	0xFDB
 15218                           fsr2h	equ	0xFDA
 15219                           fsr2l	equ	0xFD9
 15220                           status	equ	0xFD8
 15221                           
 15222 ;; *************** function _I2C1_Stop *****************
 15223 ;; Defined at:
 15224 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 15225 ;; Parameters:    Size  Location     Type
 15226 ;;  completion_c    1    wreg     enum E8678
 15227 ;; Auto vars:     Size  Location     Type
 15228 ;;  completion_c    1    2[COMRAM] enum E8678
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  1    wreg      void 
 15231 ;; Registers used:
 15232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15238 ;;      Params:         0       0       0       0       0       0       0
 15239 ;;      Locals:         1       0       0       0       0       0       0
 15240 ;;      Temps:          2       0       0       0       0       0       0
 15241 ;;      Totals:         3       0       0       0       0       0       0
 15242 ;;Total ram usage:        3 bytes
 15243 ;; Hardware stack levels used:    1
 15244 ;; This function calls:
 15245 ;;		Nothing
 15246 ;; This function is called by:
 15247 ;;		_I2C1_ISR
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           
 15251                           	psect	text77
 15252  002D5A                     __ptext77:
 15253                           	opt stack 0
 15254  002D5A                     _I2C1_Stop:
 15255                           	opt stack 22
 15256                           
 15257                           ;incstack = 0
 15258                           ;I2C1_Stop@completion_code stored from wreg
 15259  002D5A  6E03               	movwf	I2C1_Stop@completion_code,c
 15260                           
 15261                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 15262  002D5C  84C5               	bsf	4037,2,c	;volatile
 15263                           
 15264                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 15265  002D5E  0100               	movlb	0	; () banked
 15266  002D60  EE20 F003          	lfsr	2,3
 15267  002D64  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15268  002D66  26D9               	addwf	fsr2l,f,c
 15269  002D68  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15270  002D6A  22DA               	addwfc	fsr2h,f,c
 15271  002D6C  50DE               	movf	postinc2,w,c
 15272  002D6E  10DE               	iorwf	postinc2,w,c
 15273  002D70  B4D8               	btfsc	status,2,c
 15274  002D72  D011               	goto	i2l6436
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;i2c1.c: 541: {
 15278                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 15279  002D74  0100               	movlb	0	; () banked
 15280  002D76  EE20 F003          	lfsr	2,3
 15281  002D7A  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15282  002D7C  26D9               	addwf	fsr2l,f,c
 15283  002D7E  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15284  002D80  22DA               	addwfc	fsr2h,f,c
 15285  002D82  CFDE F001          	movff	postinc2,??_I2C1_Stop
 15286  002D86  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 15287  002D8A  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 15288  002D8E  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 15289  002D92  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 15290  002D96                     i2l6436:
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;i2c1.c: 544: }
 15294                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 15295  002D96  0E00               	movlw	0
 15296  002D98  6E38               	movwf	_i2c1_state,c
 15297                           
 15298                           ; BSR set to: 0
 15299  002D9A  0012               	return		;funcret
 15300  002D9C                     __end_of_I2C1_Stop:
 15301                           	opt stack 0
 15302                           tosu	equ	0xFFF
 15303                           tosh	equ	0xFFE
 15304                           tosl	equ	0xFFD
 15305                           pclatu	equ	0xFFB
 15306                           pclath	equ	0xFFA
 15307                           tblptru	equ	0xFF8
 15308                           tblptrh	equ	0xFF7
 15309                           tblptrl	equ	0xFF6
 15310                           tablat	equ	0xFF5
 15311                           prodh	equ	0xFF4
 15312                           prodl	equ	0xFF3
 15313                           intcon	equ	0xFF2
 15314                           intcon2	equ	0xFF1
 15315                           indf0	equ	0xFEF
 15316                           postinc0	equ	0xFEE
 15317                           fsr0h	equ	0xFEA
 15318                           fsr0l	equ	0xFE9
 15319                           wreg	equ	0xFE8
 15320                           fsr1h	equ	0xFE2
 15321                           fsr1l	equ	0xFE1
 15322                           indf2	equ	0xFDF
 15323                           postinc2	equ	0xFDE
 15324                           postdec2	equ	0xFDD
 15325                           plusw2	equ	0xFDB
 15326                           fsr2h	equ	0xFDA
 15327                           fsr2l	equ	0xFD9
 15328                           status	equ	0xFD8
 15329                           
 15330 ;; *************** function _I2C1_FunctionComplete *****************
 15331 ;; Defined at:
 15332 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 15333 ;; Parameters:    Size  Location     Type
 15334 ;;		None
 15335 ;; Auto vars:     Size  Location     Type
 15336 ;;		None
 15337 ;; Return value:  Size  Location     Type
 15338 ;;                  1    wreg      void 
 15339 ;; Registers used:
 15340 ;;		wreg, status,2, status,0
 15341 ;; Tracked objects:
 15342 ;;		On entry : 0/0
 15343 ;;		On exit  : 0/0
 15344 ;;		Unchanged: 0/0
 15345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15346 ;;      Params:         0       0       0       0       0       0       0
 15347 ;;      Locals:         0       0       0       0       0       0       0
 15348 ;;      Temps:          0       0       0       0       0       0       0
 15349 ;;      Totals:         0       0       0       0       0       0       0
 15350 ;;Total ram usage:        0 bytes
 15351 ;; Hardware stack levels used:    1
 15352 ;; This function calls:
 15353 ;;		Nothing
 15354 ;; This function is called by:
 15355 ;;		_I2C1_ISR
 15356 ;; This function uses a non-reentrant model
 15357 ;;
 15358                           
 15359                           	psect	text78
 15360  002FEC                     __ptext78:
 15361                           	opt stack 0
 15362  002FEC                     _I2C1_FunctionComplete:
 15363                           	opt stack 22
 15364                           
 15365                           ;i2c1.c: 520: p_i2c1_trb_current++;
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;incstack = 0
 15369  002FEC  0E05               	movlw	5
 15370  002FEE  262D               	addwf	_p_i2c1_trb_current,f,c
 15371  002FF0  0E00               	movlw	0
 15372  002FF2  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 15373                           
 15374                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 15375  002FF4  0100               	movlb	0	; () banked
 15376  002FF6  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 15377  002FF8  A0D8               	btfss	status,0,c
 15378  002FFA  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 15379  002FFC  0100               	movlb	0	; () banked
 15380  002FFE  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 15381  003000  0100               	movlb	0	; () banked
 15382  003002  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 15383  003004  A4D8               	btfss	status,2,c
 15384  003006  D003               	goto	i2l6442
 15385                           
 15386                           ; BSR set to: 0
 15387                           ;i2c1.c: 524: {
 15388                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 15389  003008  0E04               	movlw	4
 15390  00300A  6E38               	movwf	_i2c1_state,c
 15391                           
 15392                           ;i2c1.c: 526: }
 15393  00300C  0012               	return	
 15394  00300E                     i2l6442:
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;i2c1.c: 527: else
 15398                           ;i2c1.c: 528: {
 15399                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 15400  00300E  0E01               	movlw	1
 15401  003010  6E38               	movwf	_i2c1_state,c
 15402  003012  0012               	return	
 15403  003014                     __end_of_I2C1_FunctionComplete:
 15404                           	opt stack 0
 15405                           tosu	equ	0xFFF
 15406                           tosh	equ	0xFFE
 15407                           tosl	equ	0xFFD
 15408                           pclatu	equ	0xFFB
 15409                           pclath	equ	0xFFA
 15410                           tblptru	equ	0xFF8
 15411                           tblptrh	equ	0xFF7
 15412                           tblptrl	equ	0xFF6
 15413                           tablat	equ	0xFF5
 15414                           prodh	equ	0xFF4
 15415                           prodl	equ	0xFF3
 15416                           intcon	equ	0xFF2
 15417                           intcon2	equ	0xFF1
 15418                           indf0	equ	0xFEF
 15419                           postinc0	equ	0xFEE
 15420                           fsr0h	equ	0xFEA
 15421                           fsr0l	equ	0xFE9
 15422                           wreg	equ	0xFE8
 15423                           fsr1h	equ	0xFE2
 15424                           fsr1l	equ	0xFE1
 15425                           indf2	equ	0xFDF
 15426                           postinc2	equ	0xFDE
 15427                           postdec2	equ	0xFDD
 15428                           plusw2	equ	0xFDB
 15429                           fsr2h	equ	0xFDA
 15430                           fsr2l	equ	0xFD9
 15431                           status	equ	0xFD8
 15432                           
 15433 ;; *************** function _I2C1_BusCollisionISR *****************
 15434 ;; Defined at:
 15435 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 15436 ;; Parameters:    Size  Location     Type
 15437 ;;		None
 15438 ;; Auto vars:     Size  Location     Type
 15439 ;;		None
 15440 ;; Return value:  Size  Location     Type
 15441 ;;                  1    wreg      void 
 15442 ;; Registers used:
 15443 ;;		None
 15444 ;; Tracked objects:
 15445 ;;		On entry : 0/0
 15446 ;;		On exit  : 0/0
 15447 ;;		Unchanged: 0/0
 15448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15449 ;;      Params:         0       0       0       0       0       0       0
 15450 ;;      Locals:         0       0       0       0       0       0       0
 15451 ;;      Temps:          0       0       0       0       0       0       0
 15452 ;;      Totals:         0       0       0       0       0       0       0
 15453 ;;Total ram usage:        0 bytes
 15454 ;; Hardware stack levels used:    1
 15455 ;; This function calls:
 15456 ;;		Nothing
 15457 ;; This function is called by:
 15458 ;;		_INTERRUPT_InterruptManager
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           
 15462                           	psect	text79
 15463  0031EA                     __ptext79:
 15464                           	opt stack 0
 15465  0031EA                     _I2C1_BusCollisionISR:
 15466                           	opt stack 23
 15467                           
 15468                           ; BSR set to: 0
 15469                           ;incstack = 0
 15470  0031EA  0012               	return		;funcret
 15471  0031EC                     __end_of_I2C1_BusCollisionISR:
 15472                           	opt stack 0
 15473                           tosu	equ	0xFFF
 15474                           tosh	equ	0xFFE
 15475                           tosl	equ	0xFFD
 15476                           pclatu	equ	0xFFB
 15477                           pclath	equ	0xFFA
 15478                           tblptru	equ	0xFF8
 15479                           tblptrh	equ	0xFF7
 15480                           tblptrl	equ	0xFF6
 15481                           tablat	equ	0xFF5
 15482                           prodh	equ	0xFF4
 15483                           prodl	equ	0xFF3
 15484                           intcon	equ	0xFF2
 15485                           intcon2	equ	0xFF1
 15486                           indf0	equ	0xFEF
 15487                           postinc0	equ	0xFEE
 15488                           fsr0h	equ	0xFEA
 15489                           fsr0l	equ	0xFE9
 15490                           wreg	equ	0xFE8
 15491                           fsr1h	equ	0xFE2
 15492                           fsr1l	equ	0xFE1
 15493                           indf2	equ	0xFDF
 15494                           postinc2	equ	0xFDE
 15495                           postdec2	equ	0xFDD
 15496                           plusw2	equ	0xFDB
 15497                           fsr2h	equ	0xFDA
 15498                           fsr2l	equ	0xFD9
 15499                           status	equ	0xFD8
 15500                           
 15501 ;; *************** function _EUSART1_Transmit_ISR *****************
 15502 ;; Defined at:
 15503 ;;		line 150 in file "UART.c"
 15504 ;; Parameters:    Size  Location     Type
 15505 ;;		None
 15506 ;; Auto vars:     Size  Location     Type
 15507 ;;		None
 15508 ;; Return value:  Size  Location     Type
 15509 ;;                  1    wreg      void 
 15510 ;; Registers used:
 15511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15512 ;; Tracked objects:
 15513 ;;		On entry : 0/0
 15514 ;;		On exit  : 0/0
 15515 ;;		Unchanged: 0/0
 15516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15517 ;;      Params:         0       0       0       0       0       0       0
 15518 ;;      Locals:         0       0       0       0       0       0       0
 15519 ;;      Temps:          0       0       0       0       0       0       0
 15520 ;;      Totals:         0       0       0       0       0       0       0
 15521 ;;Total ram usage:        0 bytes
 15522 ;; Hardware stack levels used:    1
 15523 ;; Hardware stack levels required when called:    2
 15524 ;; This function calls:
 15525 ;;		i2_UART_buff_get
 15526 ;;		i2_UART_buff_size
 15527 ;; This function is called by:
 15528 ;;		_INTERRUPT_InterruptManager
 15529 ;; This function uses a non-reentrant model
 15530 ;;
 15531                           
 15532                           	psect	text80
 15533  002EBA                     __ptext80:
 15534                           	opt stack 0
 15535  002EBA                     _EUSART1_Transmit_ISR:
 15536                           	opt stack 21
 15537                           
 15538                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 15539                           
 15540                           ;incstack = 0
 15541  002EBA  0E00               	movlw	low _output_buffer
 15542  002EBC  6E01               	movwf	i2UART_buff_size@_this,c
 15543  002EBE  0E05               	movlw	high _output_buffer
 15544  002EC0  6E02               	movwf	i2UART_buff_size@_this+1,c
 15545  002EC2  EC9D  F018         	call	i2_UART_buff_size	;wreg free
 15546  002EC6  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 15547  002EC8  D00D               	goto	i2l5246
 15548  002ECA  5002               	movf	?i2_UART_buff_size+1,w,c
 15549  002ECC  E103               	bnz	i2u540_40
 15550  002ECE  0401               	decf	?i2_UART_buff_size,w,c
 15551  002ED0  A0D8               	btfss	status,0,c
 15552  002ED2  D008               	goto	i2l5246
 15553  002ED4                     i2u540_40:
 15554                           
 15555                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 15556  002ED4  0E00               	movlw	low _output_buffer
 15557  002ED6  6E07               	movwf	i2UART_buff_get@_this,c
 15558  002ED8  0E05               	movlw	high _output_buffer
 15559  002EDA  6E08               	movwf	i2UART_buff_get@_this+1,c
 15560  002EDC  ECD1  F012         	call	i2_UART_buff_get	;wreg free
 15561  002EE0  6EAD               	movwf	4013,c	;volatile
 15562                           
 15563                           ;UART.c: 154: } else {
 15564  002EE2  0012               	return	
 15565  002EE4                     i2l5246:
 15566                           
 15567                           ;UART.c: 155: Transmit_stall = 1;
 15568  002EE4  0E01               	movlw	1
 15569  002EE6  6E44               	movwf	_Transmit_stall,c
 15570                           
 15571                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 15572  002EE8  989D               	bcf	3997,4,c	;volatile
 15573  002EEA  0012               	return	
 15574  002EEC                     __end_of_EUSART1_Transmit_ISR:
 15575                           	opt stack 0
 15576                           tosu	equ	0xFFF
 15577                           tosh	equ	0xFFE
 15578                           tosl	equ	0xFFD
 15579                           pclatu	equ	0xFFB
 15580                           pclath	equ	0xFFA
 15581                           tblptru	equ	0xFF8
 15582                           tblptrh	equ	0xFF7
 15583                           tblptrl	equ	0xFF6
 15584                           tablat	equ	0xFF5
 15585                           prodh	equ	0xFF4
 15586                           prodl	equ	0xFF3
 15587                           intcon	equ	0xFF2
 15588                           intcon2	equ	0xFF1
 15589                           indf0	equ	0xFEF
 15590                           postinc0	equ	0xFEE
 15591                           fsr0h	equ	0xFEA
 15592                           fsr0l	equ	0xFE9
 15593                           wreg	equ	0xFE8
 15594                           fsr1h	equ	0xFE2
 15595                           fsr1l	equ	0xFE1
 15596                           indf2	equ	0xFDF
 15597                           postinc2	equ	0xFDE
 15598                           postdec2	equ	0xFDD
 15599                           plusw2	equ	0xFDB
 15600                           fsr2h	equ	0xFDA
 15601                           fsr2l	equ	0xFD9
 15602                           status	equ	0xFD8
 15603                           
 15604 ;; *************** function i2_UART_buff_size *****************
 15605 ;; Defined at:
 15606 ;;		line 102 in file "UART.c"
 15607 ;; Parameters:    Size  Location     Type
 15608 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 15609 ;;		 -> output_buffer(206), input_buffer(206), 
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;                  2    0[COMRAM] int 
 15614 ;; Registers used:
 15615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15621 ;;      Params:         2       0       0       0       0       0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0
 15624 ;;      Totals:         2       0       0       0       0       0       0
 15625 ;;Total ram usage:        2 bytes
 15626 ;; Hardware stack levels used:    1
 15627 ;; This function calls:
 15628 ;;		Nothing
 15629 ;; This function is called by:
 15630 ;;		_EUSART1_Transmit_ISR
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           	psect	text81
 15635  00313A                     __ptext81:
 15636                           	opt stack 0
 15637  00313A                     i2_UART_buff_size:
 15638                           	opt stack 22
 15639                           
 15640                           ;UART.c: 103: return (_this->count);
 15641                           
 15642                           ;incstack = 0
 15643  00313A  EE20 F0CC          	lfsr	2,204
 15644  00313E  5001               	movf	i2UART_buff_size@_this,w,c
 15645  003140  26D9               	addwf	fsr2l,f,c
 15646  003142  5002               	movf	i2UART_buff_size@_this+1,w,c
 15647  003144  22DA               	addwfc	fsr2h,f,c
 15648  003146  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 15649  00314A  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 15650  00314E  0012               	return	
 15651  003150                     __end_ofi2_UART_buff_size:
 15652                           	opt stack 0
 15653                           tosu	equ	0xFFF
 15654                           tosh	equ	0xFFE
 15655                           tosl	equ	0xFFD
 15656                           pclatu	equ	0xFFB
 15657                           pclath	equ	0xFFA
 15658                           tblptru	equ	0xFF8
 15659                           tblptrh	equ	0xFF7
 15660                           tblptrl	equ	0xFF6
 15661                           tablat	equ	0xFF5
 15662                           prodh	equ	0xFF4
 15663                           prodl	equ	0xFF3
 15664                           intcon	equ	0xFF2
 15665                           intcon2	equ	0xFF1
 15666                           indf0	equ	0xFEF
 15667                           postinc0	equ	0xFEE
 15668                           fsr0h	equ	0xFEA
 15669                           fsr0l	equ	0xFE9
 15670                           wreg	equ	0xFE8
 15671                           fsr1h	equ	0xFE2
 15672                           fsr1l	equ	0xFE1
 15673                           indf2	equ	0xFDF
 15674                           postinc2	equ	0xFDE
 15675                           postdec2	equ	0xFDD
 15676                           plusw2	equ	0xFDB
 15677                           fsr2h	equ	0xFDA
 15678                           fsr2l	equ	0xFD9
 15679                           status	equ	0xFD8
 15680                           
 15681 ;; *************** function i2_UART_buff_get *****************
 15682 ;; Defined at:
 15683 ;;		line 81 in file "UART.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15686 ;;		 -> output_buffer(206), input_buffer(206), 
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      unsigned char 
 15691 ;; Registers used:
 15692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15698 ;;      Params:         2       0       0       0       0       0       0
 15699 ;;      Locals:         1       0       0       0       0       0       0
 15700 ;;      Temps:          2       0       0       0       0       0       0
 15701 ;;      Totals:         5       0       0       0       0       0       0
 15702 ;;Total ram usage:        5 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; Hardware stack levels required when called:    1
 15705 ;; This function calls:
 15706 ;;		i2_UART_buff_modulo_inc
 15707 ;; This function is called by:
 15708 ;;		_EUSART1_Transmit_ISR
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text82
 15713  0025A2                     __ptext82:
 15714                           	opt stack 0
 15715  0025A2                     i2_UART_buff_get:
 15716                           	opt stack 21
 15717                           
 15718                           ;UART.c: 82: unsigned char c;
 15719                           ;UART.c: 83: if (_this->count > 0) {
 15720                           
 15721                           ;incstack = 0
 15722  0025A2  EE20 F0CC          	lfsr	2,204
 15723  0025A6  5007               	movf	i2UART_buff_get@_this,w,c
 15724  0025A8  26D9               	addwf	fsr2l,f,c
 15725  0025AA  5008               	movf	i2UART_buff_get@_this+1,w,c
 15726  0025AC  22DA               	addwfc	fsr2h,f,c
 15727  0025AE  0E01               	movlw	1
 15728  0025B0  BEDB               	btfsc	plusw2,7,c
 15729  0025B2  D03C               	goto	i2l5100
 15730  0025B4  0E01               	movlw	1
 15731  0025B6  50DB               	movf	plusw2,w,c
 15732  0025B8  E103               	bnz	i2u520_40
 15733  0025BA  04DE               	decf	postinc2,w,c
 15734  0025BC  A0D8               	btfss	status,0,c
 15735  0025BE  D036               	goto	i2l5100
 15736  0025C0                     i2u520_40:
 15737                           
 15738                           ;UART.c: 84: c = _this->buf[_this->tail];
 15739  0025C0  EE20 F0CA          	lfsr	2,202
 15740  0025C4  5007               	movf	i2UART_buff_get@_this,w,c
 15741  0025C6  26D9               	addwf	fsr2l,f,c
 15742  0025C8  5008               	movf	i2UART_buff_get@_this+1,w,c
 15743  0025CA  22DA               	addwfc	fsr2h,f,c
 15744  0025CC  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 15745  0025D0  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 15746  0025D4  5009               	movf	??i2_UART_buff_get,w,c
 15747  0025D6  2407               	addwf	i2UART_buff_get@_this,w,c
 15748  0025D8  6ED9               	movwf	fsr2l,c
 15749  0025DA  500A               	movf	??i2_UART_buff_get+1,w,c
 15750  0025DC  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 15751  0025DE  6EDA               	movwf	fsr2h,c
 15752  0025E0  50DF               	movf	indf2,w,c
 15753  0025E2  6E0B               	movwf	i2UART_buff_get@c,c
 15754                           
 15755                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15756  0025E4  EE20 F0CA          	lfsr	2,202
 15757  0025E8  5007               	movf	i2UART_buff_get@_this,w,c
 15758  0025EA  26D9               	addwf	fsr2l,f,c
 15759  0025EC  5008               	movf	i2UART_buff_get@_this+1,w,c
 15760  0025EE  22DA               	addwfc	fsr2h,f,c
 15761  0025F0  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15762  0025F4  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15763  0025F8  0E00               	movlw	0
 15764  0025FA  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15765  0025FC  0EC8               	movlw	200
 15766  0025FE  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15767  002600  ECCD  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15768  002604  EE20 F0CA          	lfsr	2,202
 15769  002608  5007               	movf	i2UART_buff_get@_this,w,c
 15770  00260A  26D9               	addwf	fsr2l,f,c
 15771  00260C  5008               	movf	i2UART_buff_get@_this+1,w,c
 15772  00260E  22DA               	addwfc	fsr2h,f,c
 15773  002610  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15774  002614  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15775                           
 15776                           ;UART.c: 86: --_this->count;
 15777  002618  EE20 F0CC          	lfsr	2,204
 15778  00261C  5007               	movf	i2UART_buff_get@_this,w,c
 15779  00261E  26D9               	addwf	fsr2l,f,c
 15780  002620  5008               	movf	i2UART_buff_get@_this+1,w,c
 15781  002622  22DA               	addwfc	fsr2h,f,c
 15782  002624  06DE               	decf	postinc2,f,c
 15783  002626  0E00               	movlw	0
 15784  002628  5ADD               	subwfb	postdec2,f,c
 15785                           
 15786                           ;UART.c: 87: } else {
 15787  00262A  D002               	goto	i2l1169
 15788  00262C                     i2l5100:
 15789                           
 15790                           ;UART.c: 88: c = 0;
 15791  00262C  0E00               	movlw	0
 15792  00262E  6E0B               	movwf	i2UART_buff_get@c,c
 15793  002630                     i2l1169:
 15794                           
 15795                           ;UART.c: 89: }
 15796                           ;UART.c: 90: return (c);
 15797  002630  500B               	movf	i2UART_buff_get@c,w,c
 15798  002632  0012               	return	
 15799  002634                     __end_ofi2_UART_buff_get:
 15800                           	opt stack 0
 15801                           tosu	equ	0xFFF
 15802                           tosh	equ	0xFFE
 15803                           tosl	equ	0xFFD
 15804                           pclatu	equ	0xFFB
 15805                           pclath	equ	0xFFA
 15806                           tblptru	equ	0xFF8
 15807                           tblptrh	equ	0xFF7
 15808                           tblptrl	equ	0xFF6
 15809                           tablat	equ	0xFF5
 15810                           prodh	equ	0xFF4
 15811                           prodl	equ	0xFF3
 15812                           intcon	equ	0xFF2
 15813                           intcon2	equ	0xFF1
 15814                           indf0	equ	0xFEF
 15815                           postinc0	equ	0xFEE
 15816                           fsr0h	equ	0xFEA
 15817                           fsr0l	equ	0xFE9
 15818                           wreg	equ	0xFE8
 15819                           fsr1h	equ	0xFE2
 15820                           fsr1l	equ	0xFE1
 15821                           indf2	equ	0xFDF
 15822                           postinc2	equ	0xFDE
 15823                           postdec2	equ	0xFDD
 15824                           plusw2	equ	0xFDB
 15825                           fsr2h	equ	0xFDA
 15826                           fsr2l	equ	0xFD9
 15827                           status	equ	0xFD8
 15828                           
 15829 ;; *************** function _EUSART1_Receive_ISR *****************
 15830 ;; Defined at:
 15831 ;;		line 139 in file "UART.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;		None
 15834 ;; Auto vars:     Size  Location     Type
 15835 ;;  data            1   11[COMRAM] unsigned char 
 15836 ;; Return value:  Size  Location     Type
 15837 ;;                  1    wreg      void 
 15838 ;; Registers used:
 15839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15840 ;; Tracked objects:
 15841 ;;		On entry : 0/0
 15842 ;;		On exit  : 0/0
 15843 ;;		Unchanged: 0/0
 15844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15845 ;;      Params:         0       0       0       0       0       0       0
 15846 ;;      Locals:         1       0       0       0       0       0       0
 15847 ;;      Temps:          0       0       0       0       0       0       0
 15848 ;;      Totals:         1       0       0       0       0       0       0
 15849 ;;Total ram usage:        1 bytes
 15850 ;; Hardware stack levels used:    1
 15851 ;; Hardware stack levels required when called:    2
 15852 ;; This function calls:
 15853 ;;		i2_UART_buff_put
 15854 ;; This function is called by:
 15855 ;;		_INTERRUPT_InterruptManager
 15856 ;; This function uses a non-reentrant model
 15857 ;;
 15858                           
 15859                           	psect	text83
 15860  0030BC                     __ptext83:
 15861                           	opt stack 0
 15862  0030BC                     _EUSART1_Receive_ISR:
 15863                           	opt stack 21
 15864                           
 15865                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 15866                           
 15867                           ;incstack = 0
 15868  0030BC  A2AB               	btfss	4011,1,c	;volatile
 15869  0030BE  D002               	goto	i2l1200
 15870                           
 15871                           ;UART.c: 143: RC1STAbits.CREN = 0;
 15872  0030C0  98AB               	bcf	4011,4,c	;volatile
 15873                           
 15874                           ;UART.c: 144: RC1STAbits.CREN = 1;
 15875  0030C2  88AB               	bsf	4011,4,c	;volatile
 15876  0030C4                     i2l1200:
 15877                           
 15878                           ;UART.c: 145: }
 15879                           ;UART.c: 146: unsigned char data = RCREG1;
 15880  0030C4  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 15881                           
 15882                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 15883  0030C8  0E00               	movlw	low _input_buffer
 15884  0030CA  6E07               	movwf	i2UART_buff_put@_this,c
 15885  0030CC  0E04               	movlw	high _input_buffer
 15886  0030CE  6E08               	movwf	i2UART_buff_put@_this+1,c
 15887  0030D0  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 15888  0030D4  ECAB  F00C         	call	i2_UART_buff_put	;wreg free
 15889  0030D8  0012               	return		;funcret
 15890  0030DA                     __end_of_EUSART1_Receive_ISR:
 15891                           	opt stack 0
 15892                           tosu	equ	0xFFF
 15893                           tosh	equ	0xFFE
 15894                           tosl	equ	0xFFD
 15895                           pclatu	equ	0xFFB
 15896                           pclath	equ	0xFFA
 15897                           tblptru	equ	0xFF8
 15898                           tblptrh	equ	0xFF7
 15899                           tblptrl	equ	0xFF6
 15900                           tablat	equ	0xFF5
 15901                           prodh	equ	0xFF4
 15902                           prodl	equ	0xFF3
 15903                           intcon	equ	0xFF2
 15904                           intcon2	equ	0xFF1
 15905                           indf0	equ	0xFEF
 15906                           postinc0	equ	0xFEE
 15907                           fsr0h	equ	0xFEA
 15908                           fsr0l	equ	0xFE9
 15909                           wreg	equ	0xFE8
 15910                           fsr1h	equ	0xFE2
 15911                           fsr1l	equ	0xFE1
 15912                           indf2	equ	0xFDF
 15913                           postinc2	equ	0xFDE
 15914                           postdec2	equ	0xFDD
 15915                           plusw2	equ	0xFDB
 15916                           fsr2h	equ	0xFDA
 15917                           fsr2l	equ	0xFD9
 15918                           status	equ	0xFD8
 15919                           
 15920 ;; *************** function i2_UART_buff_put *****************
 15921 ;; Defined at:
 15922 ;;		line 68 in file "UART.c"
 15923 ;; Parameters:    Size  Location     Type
 15924 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15925 ;;		 -> output_buffer(206), input_buffer(206), 
 15926 ;;  c               1    8[COMRAM] const unsigned char 
 15927 ;; Auto vars:     Size  Location     Type
 15928 ;;		None
 15929 ;; Return value:  Size  Location     Type
 15930 ;;                  1    wreg      void 
 15931 ;; Registers used:
 15932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15933 ;; Tracked objects:
 15934 ;;		On entry : 0/0
 15935 ;;		On exit  : 0/0
 15936 ;;		Unchanged: 0/0
 15937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15938 ;;      Params:         3       0       0       0       0       0       0
 15939 ;;      Locals:         0       0       0       0       0       0       0
 15940 ;;      Temps:          2       0       0       0       0       0       0
 15941 ;;      Totals:         5       0       0       0       0       0       0
 15942 ;;Total ram usage:        5 bytes
 15943 ;; Hardware stack levels used:    1
 15944 ;; Hardware stack levels required when called:    1
 15945 ;; This function calls:
 15946 ;;		i2_UART_buff_modulo_inc
 15947 ;; This function is called by:
 15948 ;;		_EUSART1_Receive_ISR
 15949 ;; This function uses a non-reentrant model
 15950 ;;
 15951                           
 15952                           	psect	text84
 15953  001956                     __ptext84:
 15954                           	opt stack 0
 15955  001956                     i2_UART_buff_put:
 15956                           	opt stack 21
 15957                           
 15958                           ;UART.c: 69: if (_this->count < 200) {
 15959                           
 15960                           ;incstack = 0
 15961  001956  EE20 F0CC          	lfsr	2,204
 15962  00195A  5007               	movf	i2UART_buff_put@_this,w,c
 15963  00195C  26D9               	addwf	fsr2l,f,c
 15964  00195E  5008               	movf	i2UART_buff_put@_this+1,w,c
 15965  001960  22DA               	addwfc	fsr2h,f,c
 15966  001962  0E01               	movlw	1
 15967  001964  BEDB               	btfsc	plusw2,7,c
 15968  001966  D007               	goto	i2l5080
 15969  001968  0E01               	movlw	1
 15970  00196A  50DB               	movf	plusw2,w,c
 15971  00196C  E13A               	bnz	i2l5086
 15972  00196E  0EC8               	movlw	200
 15973  001970  5CDE               	subwf	postinc2,w,c
 15974  001972  B0D8               	btfsc	status,0,c
 15975  001974  D036               	goto	i2l5086
 15976  001976                     i2l5080:
 15977                           
 15978                           ;UART.c: 70: _this->buf[_this->head] = c;
 15979  001976  EE20 F0C8          	lfsr	2,200
 15980  00197A  5007               	movf	i2UART_buff_put@_this,w,c
 15981  00197C  26D9               	addwf	fsr2l,f,c
 15982  00197E  5008               	movf	i2UART_buff_put@_this+1,w,c
 15983  001980  22DA               	addwfc	fsr2h,f,c
 15984  001982  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 15985  001986  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 15986  00198A  500A               	movf	??i2_UART_buff_put,w,c
 15987  00198C  2407               	addwf	i2UART_buff_put@_this,w,c
 15988  00198E  6ED9               	movwf	fsr2l,c
 15989  001990  500B               	movf	??i2_UART_buff_put+1,w,c
 15990  001992  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 15991  001994  6EDA               	movwf	fsr2h,c
 15992  001996  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 15993                           
 15994                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 15995  00199A  EE20 F0C8          	lfsr	2,200
 15996  00199E  5007               	movf	i2UART_buff_put@_this,w,c
 15997  0019A0  26D9               	addwf	fsr2l,f,c
 15998  0019A2  5008               	movf	i2UART_buff_put@_this+1,w,c
 15999  0019A4  22DA               	addwfc	fsr2h,f,c
 16000  0019A6  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 16001  0019AA  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 16002  0019AE  0E00               	movlw	0
 16003  0019B0  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 16004  0019B2  0EC8               	movlw	200
 16005  0019B4  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 16006  0019B6  ECCD  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 16007  0019BA  EE20 F0C8          	lfsr	2,200
 16008  0019BE  5007               	movf	i2UART_buff_put@_this,w,c
 16009  0019C0  26D9               	addwf	fsr2l,f,c
 16010  0019C2  5008               	movf	i2UART_buff_put@_this+1,w,c
 16011  0019C4  22DA               	addwfc	fsr2h,f,c
 16012  0019C6  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 16013  0019CA  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 16014                           
 16015                           ;UART.c: 72: ++_this->count;
 16016  0019CE  EE20 F0CC          	lfsr	2,204
 16017  0019D2  5007               	movf	i2UART_buff_put@_this,w,c
 16018  0019D4  26D9               	addwf	fsr2l,f,c
 16019  0019D6  5008               	movf	i2UART_buff_put@_this+1,w,c
 16020  0019D8  22DA               	addwfc	fsr2h,f,c
 16021  0019DA  2ADE               	incf	postinc2,f,c
 16022  0019DC  0E00               	movlw	0
 16023  0019DE  22DD               	addwfc	postdec2,f,c
 16024                           
 16025                           ;UART.c: 73: } else {
 16026  0019E0  0012               	return	
 16027  0019E2                     i2l5086:
 16028                           
 16029                           ;UART.c: 74: _this->buf[_this->head] = c;
 16030  0019E2  EE20 F0C8          	lfsr	2,200
 16031  0019E6  5007               	movf	i2UART_buff_put@_this,w,c
 16032  0019E8  26D9               	addwf	fsr2l,f,c
 16033  0019EA  5008               	movf	i2UART_buff_put@_this+1,w,c
 16034  0019EC  22DA               	addwfc	fsr2h,f,c
 16035  0019EE  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 16036  0019F2  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 16037  0019F6  500A               	movf	??i2_UART_buff_put,w,c
 16038  0019F8  2407               	addwf	i2UART_buff_put@_this,w,c
 16039  0019FA  6ED9               	movwf	fsr2l,c
 16040  0019FC  500B               	movf	??i2_UART_buff_put+1,w,c
 16041  0019FE  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 16042  001A00  6EDA               	movwf	fsr2h,c
 16043  001A02  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 16044                           
 16045                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 16046  001A06  EE20 F0C8          	lfsr	2,200
 16047  001A0A  5007               	movf	i2UART_buff_put@_this,w,c
 16048  001A0C  26D9               	addwf	fsr2l,f,c
 16049  001A0E  5008               	movf	i2UART_buff_put@_this+1,w,c
 16050  001A10  22DA               	addwfc	fsr2h,f,c
 16051  001A12  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 16052  001A16  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 16053  001A1A  0E00               	movlw	0
 16054  001A1C  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 16055  001A1E  0EC8               	movlw	200
 16056  001A20  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 16057  001A22  ECCD  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 16058  001A26  EE20 F0C8          	lfsr	2,200
 16059  001A2A  5007               	movf	i2UART_buff_put@_this,w,c
 16060  001A2C  26D9               	addwf	fsr2l,f,c
 16061  001A2E  5008               	movf	i2UART_buff_put@_this+1,w,c
 16062  001A30  22DA               	addwfc	fsr2h,f,c
 16063  001A32  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 16064  001A36  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 16065                           
 16066                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 16067  001A3A  EE20 F0CA          	lfsr	2,202
 16068  001A3E  5007               	movf	i2UART_buff_put@_this,w,c
 16069  001A40  26D9               	addwf	fsr2l,f,c
 16070  001A42  5008               	movf	i2UART_buff_put@_this+1,w,c
 16071  001A44  22DA               	addwfc	fsr2h,f,c
 16072  001A46  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 16073  001A4A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 16074  001A4E  0E00               	movlw	0
 16075  001A50  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 16076  001A52  0EC8               	movlw	200
 16077  001A54  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 16078  001A56  ECCD  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 16079  001A5A  EE20 F0CA          	lfsr	2,202
 16080  001A5E  5007               	movf	i2UART_buff_put@_this,w,c
 16081  001A60  26D9               	addwf	fsr2l,f,c
 16082  001A62  5008               	movf	i2UART_buff_put@_this+1,w,c
 16083  001A64  22DA               	addwfc	fsr2h,f,c
 16084  001A66  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 16085  001A6A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 16086  001A6E  0012               	return	
 16087  001A70                     __end_ofi2_UART_buff_put:
 16088                           	opt stack 0
 16089                           tosu	equ	0xFFF
 16090                           tosh	equ	0xFFE
 16091                           tosl	equ	0xFFD
 16092                           pclatu	equ	0xFFB
 16093                           pclath	equ	0xFFA
 16094                           tblptru	equ	0xFF8
 16095                           tblptrh	equ	0xFF7
 16096                           tblptrl	equ	0xFF6
 16097                           tablat	equ	0xFF5
 16098                           prodh	equ	0xFF4
 16099                           prodl	equ	0xFF3
 16100                           intcon	equ	0xFF2
 16101                           intcon2	equ	0xFF1
 16102                           indf0	equ	0xFEF
 16103                           postinc0	equ	0xFEE
 16104                           fsr0h	equ	0xFEA
 16105                           fsr0l	equ	0xFE9
 16106                           wreg	equ	0xFE8
 16107                           fsr1h	equ	0xFE2
 16108                           fsr1l	equ	0xFE1
 16109                           indf2	equ	0xFDF
 16110                           postinc2	equ	0xFDE
 16111                           postdec2	equ	0xFDD
 16112                           plusw2	equ	0xFDB
 16113                           fsr2h	equ	0xFDA
 16114                           fsr2l	equ	0xFD9
 16115                           status	equ	0xFD8
 16116                           
 16117 ;; *************** function i2_UART_buff_modulo_inc *****************
 16118 ;; Defined at:
 16119 ;;		line 106 in file "UART.c"
 16120 ;; Parameters:    Size  Location     Type
 16121 ;;  value           2    0[COMRAM] const unsigned int 
 16122 ;;  modulus         2    2[COMRAM] const unsigned int 
 16123 ;; Auto vars:     Size  Location     Type
 16124 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 16125 ;; Return value:  Size  Location     Type
 16126 ;;                  2    0[COMRAM] unsigned int 
 16127 ;; Registers used:
 16128 ;;		wreg, status,2, status,0
 16129 ;; Tracked objects:
 16130 ;;		On entry : 0/0
 16131 ;;		On exit  : 0/0
 16132 ;;		Unchanged: 0/0
 16133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16134 ;;      Params:         4       0       0       0       0       0       0
 16135 ;;      Locals:         2       0       0       0       0       0       0
 16136 ;;      Temps:          0       0       0       0       0       0       0
 16137 ;;      Totals:         6       0       0       0       0       0       0
 16138 ;;Total ram usage:        6 bytes
 16139 ;; Hardware stack levels used:    1
 16140 ;; This function calls:
 16141 ;;		Nothing
 16142 ;; This function is called by:
 16143 ;;		i2_UART_buff_put
 16144 ;;		i2_UART_buff_get
 16145 ;; This function uses a non-reentrant model
 16146 ;;
 16147                           
 16148                           	psect	text85
 16149  002F9A                     __ptext85:
 16150                           	opt stack 0
 16151  002F9A                     i2_UART_buff_modulo_inc:
 16152                           	opt stack 21
 16153                           
 16154                           ;UART.c: 107: unsigned int my_value = value + 1;
 16155                           
 16156                           ;incstack = 0
 16157  002F9A  0E01               	movlw	1
 16158  002F9C  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 16159  002F9E  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 16160  002FA0  0E00               	movlw	0
 16161  002FA2  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 16162  002FA4  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 16163                           
 16164                           ;UART.c: 108: if (my_value >= modulus) {
 16165  002FA6  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 16166  002FA8  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 16167  002FAA  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 16168  002FAC  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 16169  002FAE  A0D8               	btfss	status,0,c
 16170  002FB0  D004               	goto	i2l4598
 16171                           
 16172                           ;UART.c: 109: my_value = 0;
 16173  002FB2  0E00               	movlw	0
 16174  002FB4  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 16175  002FB6  0E00               	movlw	0
 16176  002FB8  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 16177  002FBA                     i2l4598:
 16178                           
 16179                           ;UART.c: 110: }
 16180                           ;UART.c: 111: return (my_value);
 16181  002FBA  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 16182  002FBE  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 16183  002FC2  0012               	return	
 16184  002FC4                     __end_ofi2_UART_buff_modulo_inc:
 16185                           	opt stack 0
 16186                           tosu	equ	0xFFF
 16187                           tosh	equ	0xFFE
 16188                           tosl	equ	0xFFD
 16189                           pclatu	equ	0xFFB
 16190                           pclath	equ	0xFFA
 16191                           tblptru	equ	0xFF8
 16192                           tblptrh	equ	0xFF7
 16193                           tblptrl	equ	0xFF6
 16194                           tablat	equ	0xFF5
 16195                           prodh	equ	0xFF4
 16196                           prodl	equ	0xFF3
 16197                           intcon	equ	0xFF2
 16198                           intcon2	equ	0xFF1
 16199                           indf0	equ	0xFEF
 16200                           postinc0	equ	0xFEE
 16201                           fsr0h	equ	0xFEA
 16202                           fsr0l	equ	0xFE9
 16203                           wreg	equ	0xFE8
 16204                           fsr1h	equ	0xFE2
 16205                           fsr1l	equ	0xFE1
 16206                           indf2	equ	0xFDF
 16207                           postinc2	equ	0xFDE
 16208                           postdec2	equ	0xFDD
 16209                           plusw2	equ	0xFDB
 16210                           fsr2h	equ	0xFDA
 16211                           fsr2l	equ	0xFD9
 16212                           status	equ	0xFD8
 16213                           
 16214 ;; *************** function _ADC_ISR *****************
 16215 ;; Defined at:
 16216 ;;		line 128 in file "mcc_generated_files/adc.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;		None
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;		None
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		None
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16230 ;;      Params:         0       0       0       0       0       0       0
 16231 ;;      Locals:         0       0       0       0       0       0       0
 16232 ;;      Temps:          0       0       0       0       0       0       0
 16233 ;;      Totals:         0       0       0       0       0       0       0
 16234 ;;Total ram usage:        0 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		_INTERRUPT_InterruptManager
 16240 ;; This function uses a non-reentrant model
 16241 ;;
 16242                           
 16243                           	psect	text86
 16244  0031E4                     __ptext86:
 16245                           	opt stack 0
 16246  0031E4                     _ADC_ISR:
 16247                           	opt stack 23
 16248                           
 16249                           ;adc.c: 131: PIR1bits.ADIF = 0;
 16250                           
 16251                           ;incstack = 0
 16252  0031E4  9C9E               	bcf	3998,6,c	;volatile
 16253  0031E6  0012               	return		;funcret
 16254  0031E8                     __end_of_ADC_ISR:
 16255                           	opt stack 0
 16256                           tosu	equ	0xFFF
 16257                           tosh	equ	0xFFE
 16258                           tosl	equ	0xFFD
 16259                           pclatu	equ	0xFFB
 16260                           pclath	equ	0xFFA
 16261                           tblptru	equ	0xFF8
 16262                           tblptrh	equ	0xFF7
 16263                           tblptrl	equ	0xFF6
 16264                           tablat	equ	0xFF5
 16265                           prodh	equ	0xFF4
 16266                           prodl	equ	0xFF3
 16267                           intcon	equ	0xFF2
 16268                           intcon2	equ	0xFF1
 16269                           indf0	equ	0xFEF
 16270                           postinc0	equ	0xFEE
 16271                           fsr0h	equ	0xFEA
 16272                           fsr0l	equ	0xFE9
 16273                           wreg	equ	0xFE8
 16274                           fsr1h	equ	0xFE2
 16275                           fsr1l	equ	0xFE1
 16276                           indf2	equ	0xFDF
 16277                           postinc2	equ	0xFDE
 16278                           postdec2	equ	0xFDD
 16279                           plusw2	equ	0xFDB
 16280                           fsr2h	equ	0xFDA
 16281                           fsr2l	equ	0xFD9
 16282                           status	equ	0xFD8
 16283                           tosu	equ	0xFFF
 16284                           tosh	equ	0xFFE
 16285                           tosl	equ	0xFFD
 16286                           pclatu	equ	0xFFB
 16287                           pclath	equ	0xFFA
 16288                           tblptru	equ	0xFF8
 16289                           tblptrh	equ	0xFF7
 16290                           tblptrl	equ	0xFF6
 16291                           tablat	equ	0xFF5
 16292                           prodh	equ	0xFF4
 16293                           prodl	equ	0xFF3
 16294                           intcon	equ	0xFF2
 16295                           intcon2	equ	0xFF1
 16296                           indf0	equ	0xFEF
 16297                           postinc0	equ	0xFEE
 16298                           fsr0h	equ	0xFEA
 16299                           fsr0l	equ	0xFE9
 16300                           wreg	equ	0xFE8
 16301                           fsr1h	equ	0xFE2
 16302                           fsr1l	equ	0xFE1
 16303                           indf2	equ	0xFDF
 16304                           postinc2	equ	0xFDE
 16305                           postdec2	equ	0xFDD
 16306                           plusw2	equ	0xFDB
 16307                           fsr2h	equ	0xFDA
 16308                           fsr2l	equ	0xFD9
 16309                           status	equ	0xFD8
 16310                           
 16311                           	psect	text87
 16312  000000                     __ptext87:
 16313                           	opt stack 0
 16314                           tosu	equ	0xFFF
 16315                           tosh	equ	0xFFE
 16316                           tosl	equ	0xFFD
 16317                           pclatu	equ	0xFFB
 16318                           pclath	equ	0xFFA
 16319                           tblptru	equ	0xFF8
 16320                           tblptrh	equ	0xFF7
 16321                           tblptrl	equ	0xFF6
 16322                           tablat	equ	0xFF5
 16323                           prodh	equ	0xFF4
 16324                           prodl	equ	0xFF3
 16325                           intcon	equ	0xFF2
 16326                           intcon2	equ	0xFF1
 16327                           indf0	equ	0xFEF
 16328                           postinc0	equ	0xFEE
 16329                           fsr0h	equ	0xFEA
 16330                           fsr0l	equ	0xFE9
 16331                           wreg	equ	0xFE8
 16332                           fsr1h	equ	0xFE2
 16333                           fsr1l	equ	0xFE1
 16334                           indf2	equ	0xFDF
 16335                           postinc2	equ	0xFDE
 16336                           postdec2	equ	0xFDD
 16337                           plusw2	equ	0xFDB
 16338                           fsr2h	equ	0xFDA
 16339                           fsr2l	equ	0xFD9
 16340                           status	equ	0xFD8
 16341                           
 16342                           	psect	rparam
 16343  0000                     tosu	equ	0xFFF
 16344                           tosh	equ	0xFFE
 16345                           tosl	equ	0xFFD
 16346                           pclatu	equ	0xFFB
 16347                           pclath	equ	0xFFA
 16348                           tblptru	equ	0xFF8
 16349                           tblptrh	equ	0xFF7
 16350                           tblptrl	equ	0xFF6
 16351                           tablat	equ	0xFF5
 16352                           prodh	equ	0xFF4
 16353                           prodl	equ	0xFF3
 16354                           intcon	equ	0xFF2
 16355                           intcon2	equ	0xFF1
 16356                           indf0	equ	0xFEF
 16357                           postinc0	equ	0xFEE
 16358                           fsr0h	equ	0xFEA
 16359                           fsr0l	equ	0xFE9
 16360                           wreg	equ	0xFE8
 16361                           fsr1h	equ	0xFE2
 16362                           fsr1l	equ	0xFE1
 16363                           indf2	equ	0xFDF
 16364                           postinc2	equ	0xFDE
 16365                           postdec2	equ	0xFDD
 16366                           plusw2	equ	0xFDB
 16367                           fsr2h	equ	0xFDA
 16368                           fsr2l	equ	0xFD9
 16369                           status	equ	0xFD8
 16370                           
 16371                           	psect	temp
 16372  000045                     btemp:
 16373                           	opt stack 0
 16374  000045                     	ds	1
 16375  0000                     int$flags	set	btemp
 16376                           tosu	equ	0xFFF
 16377                           tosh	equ	0xFFE
 16378                           tosl	equ	0xFFD
 16379                           pclatu	equ	0xFFB
 16380                           pclath	equ	0xFFA
 16381                           tblptru	equ	0xFF8
 16382                           tblptrh	equ	0xFF7
 16383                           tblptrl	equ	0xFF6
 16384                           tablat	equ	0xFF5
 16385                           prodh	equ	0xFF4
 16386                           prodl	equ	0xFF3
 16387                           intcon	equ	0xFF2
 16388                           intcon2	equ	0xFF1
 16389                           indf0	equ	0xFEF
 16390                           postinc0	equ	0xFEE
 16391                           fsr0h	equ	0xFEA
 16392                           fsr0l	equ	0xFE9
 16393                           wreg	equ	0xFE8
 16394                           fsr1h	equ	0xFE2
 16395                           fsr1l	equ	0xFE1
 16396                           indf2	equ	0xFDF
 16397                           postinc2	equ	0xFDE
 16398                           postdec2	equ	0xFDD
 16399                           plusw2	equ	0xFDB
 16400                           fsr2h	equ	0xFDA
 16401                           fsr2l	equ	0xFD9
 16402                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    1040
    Data        1
    BSS         1044
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      68
    BANK0           160     12     160
    BANK1           256     24      81
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E8678 size(2) Largest target is 0
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    oledPrint@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[8]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[11]), 
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    oledPutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    UART_buff_peek@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> input_buffer(BANK4[206]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_get@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_status_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(BANK0[3]), receiveData@holder_2468(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    F8790.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    F8785.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDblinkRate@b(COMRAM[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 
		 -> LEDBsetBrightness@b(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    p_i2c1_current.pTrFlag	PTR enum E8678 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_peek->_UART_buff_peek
    _CRCcheck->_crcBufS_get
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___wmul->_GetDataBarGraphA
    ___wmul->_GetDataBarGraphB
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _oledPutChar->_memmove
    _oledGotoYX->_OLED_command
    _OLED_init->_OLED_command
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDsetValue->_LEDsetBar
    _LEDsetBar->___awdiv
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _respondECU->_sendData
    _receiveData->_CRCcheck
    _Splash->_oledPrint
    _Setupdisplay->_oledClear
    _oledPutChar->_I2C1_MasterWrite
    _OLED_command->_I2C1_MasterWrite
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69681
                          _ClearTime
                   _GetDataBarGraphA
                   _GetDataBarGraphB
                            _GetTime
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                       _Setupdisplay
                             _Splash
                             ___wmul
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   21016
                      _DataBarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7635
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     223
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2      86
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1406
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     302
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0   10715
                                              0 BANK1     18    18      0
                   Absolute function *
                               _CRC8
                           _CRCcheck
                  _Receive_available *
                        _Receive_get *
                       _Receive_peek *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_peek                                         0     0      0     139
                     _UART_buff_peek
 ---------------------------------------------------------------------------------
 (4) _UART_buff_peek                                       4     2      2     139
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _CRCcheck                                             7     7      0    5114
                                              0 BANK0      7     7      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                        _crcBufS_get
                 _crcBufS_status_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_status_put                                  10     6      4     908
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) _crcBufS_get                                         12     8      4    1404
                                             26 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     5     3      2
                                              0 BANK0      2     2      0
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DataBarGraphs                                        4     0      4     172
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     415
                                             28 COMRAM     6     2      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
 ---------------------------------------------------------------------------------
 (1) _Splash                                               0     0      0   10386
                         _oledGotoYX
                          _oledPrint
 ---------------------------------------------------------------------------------
 (2) _oledPrint                                            2     0      2    5370
                                              8 BANK0      2     0      2
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (1) _Setupdisplay                                         0     0      0   14117
                          _OLED_init
                          _oledClear
 ---------------------------------------------------------------------------------
 (2) _oledClear                                            4     4      0   10134
                                              8 BANK0      4     4      0
                         _oledGotoYX
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (3) _oledPutChar                                         17    17      0    4920
                                             38 COMRAM     4     4      0
                                              0 BANK1     13    13      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     752
                                             26 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _oledGotoYX                                           3     2      1    5016
                                             38 COMRAM     3     2      1
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_init                                            0     0      0    3983
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_command                                         2     2      0    3983
                                             36 COMRAM     2     2      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2872
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4989
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    3155
                                              0 BANK0      7     3      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                          _LEDsetBar
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    2556
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   12731
                                              5 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     8     0      8    3761
                                              0 BANK0      8     0      8
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                            10     2      8     494
                                             26 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 7     1      6     648
                                             26 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphB                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphA                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearTime
   _GetDataBarGraphA
   _GetDataBarGraphB
   _GetTime
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     _LEDsetBar (ARG)
       ___awdiv
     ___wmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   _Setupdisplay
     _OLED_init
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledClear
       _oledGotoYX
         _OLED_command
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   _Splash
     _oledGotoYX
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledPrint
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   ___wmul
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
   _updateComms
     _DataBarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _CRCcheck *
         Absolute function(Fake) *
         _CRC8 *
         _Receive_available *
           _UART_buff_size
         _Receive_get *
           _UART_buff_get
             _UART_buff_modulo_inc
         _crcBufS_get *
         _crcBufS_status_put *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Receive_peek *
         _UART_buff_peek
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     18      51       6       31.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     467       9        0.0%
DATA                 0      0     467      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Aug 29 01:39:03 2016

       __end_of_FastTransfer_buffer_flush 2AD0                    i2_UART_buff_modulo_inc 2F9A  
        __end_of_TMR2_SetInterruptHandler 31B2                                         _i 00CF  
                                       _k 00D3                              _rx_array_inx 003D  
                            ___awdiv@sign 0020                       ___wmul@multiplicand 001F  
                LEDBsetBrightness@timeOut 013B                                Off_Led@led 001B  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                                     l613 22C2                                       l618 2334  
                                     l921 273E                                       l692 07F8  
                                     l935 2996                              __CFG_CPB$OFF 000000  
                                     _PR2 000FBB                              __CFG_CPD$OFF 000000  
                         __end_of_ADC_ISR 31E8      FastTransfer_buffer_flush@clearBuffer 0025  
                         _TMR2_Initialize 305E                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
           i2UART_buff_modulo_inc@modulus 0003                              __CFG_LVP$OFF 000000  
                        __end_of_I2C1_ISR 0E78                                      l1008 2CB8  
                                    l1124 15AC                                      l1334 2EA4  
                                    l1169 259E                                      l1266 2B84  
                                    l4002 2F66                                      l4142 1310  
                                    l6000 2CC4                                      l6020 1C82  
                                    l4430 2E90                                      l4422 2958  
                                    l7000 15CA                                      l6104 2840  
                                    l6112 2232                                      l6024 1C8C  
                                    l7002 15F8                                      l6210 0FF6  
                                    l6202 0FD4                                      l7020 1628  
                                    l6116 2264                                      l6036 1D10  
                                    l6052 1EC2                                      l6044 1E3C  
                                    l6300 1478                                      l7022 1630  
                                    l6150 0EE2                                      l6400 276C  
                                    l6232 105E                                      l6224 103C  
                                    l6216 101A                                      l6144 0EBE  
                                    l6136 0E9C                                      l6128 0E7A  
                                    l6312 1528                                      l6410 278E  
                                    l6322 157C                                      l6330 15A4  
                                    l7130 2168                                      l7060 1690  
                                    l6084 27E8                                      l6180 0F6C  
                                    l6172 0F4A                                      l6308 1512  
                                    l6502 24A8                                      l6406 2782  
                                    l6422 27B4                                      l7062 16BE  
                                    l6086 2818                                      l6254 10C6  
                                    l6246 10A4                                      l6238 1082  
                                    l6166 0F26                                      l6158 0F04  
                                    l6262 10EA                                      l6326 159C  
                                    l6504 24D6                                      l6408 278A  
                                    l7080 16EE                                      l6352 1B9A  
                                    l6600 026E                                      l6280 177A  
                    receiveData@crcHolder 0145                                      l6522 2506  
                                    l6426 27C2                                      l6418 27AA  
                                    l6354 1BA0                                      l6194 0FB2  
                                    l6282 1796                                      l6274 172A  
                                    l6364 1C0E                                      l6188 0F8E  
                                    l6700 06E4                                      l6620 02F8  
                                    l6612 029E                                      l6292 180E  
                                    l6284 17A2                                      l6276 1744  
                                    l6534 240E                                      l6470 07B8  
                                    l6366 1C3E                                      l6702 06FE  
                                    l6286 17D0                                      l6278 1760  
                                    l6536 243C                                      l6528 23F2  
                                    l6480 08FA                                      l6384 1C6E  
                                    l5904 18C8                                      l6704 0718  
                                    l6616 02D0                                      l6560 010E  
                                    l6288 17D6                                      l6554 246C  
                                    l6394 275C                                      l5930 1FEA  
                                    l6298 1450                                      l6706 0766  
                                    l6634 0432                                      l6484 09B8  
                                    l6468 07A2                                      l5932 2000  
                                    l6740 26FC                                      l6708 0782  
                                    l6660 0554                                      l6652 04EC  
                                    l6636 0438                                      l6628 0394  
                                    l6716 078E                                      l6580 01E4  
                                    l6564 013C                                      l5862 2102  
                                    l6750 2B38                                      l5950 1F0A  
                                    l5934 2016                                      l5942 2058  
                                    l5918 259A                                      l6662 056E  
                                    l6654 0506                                      l6638 044C  
                                    l6582 01FC                                      l5872 213E  
                                    l6496 248E                                      l6488 0A94  
                                    l5936 202C                                      l5928 1FD4  
                                    l6664 0588                                      l6656 0520  
                                    l6584 0202                                      l6568 0140  
                                    l6592 023C                                      l5866 2122  
                                    l5890 2F24                                      l5970 1F82  
                                    l5962 1F52                                      l5954 1F22  
                                    l5938 2042                                      l6666 05D6  
                                    l6658 053A                                      l5868 212E  
                                    l6756 2B52                                      l6692 067C  
                                    l6668 05F2                                      l5886 2C24  
                                    l6926 2352                                      l5894 2F34  
                                    l6774 2C34                                      l5966 1F6A  
                                    l5958 1F3A                                      l5990 2CA2  
                                    l5878 2F90                                      l6694 0696  
                                    l6678 05FE                                      l6598 0248  
                                    l6928 2380                                      l6768 2B7C  
                                    l5976 1F9A                                      l5984 2C8C  
                                    l6696 06B0                                      l6946 23B0  
                                    l6778 2C5E                                      l5898 185C  
                                    l6698 06CA                                      l6948 23B8  
                                    l6980 22B2                                      l5998 2CBE  
                                    l6992 2318                                      l6984 22CC  
                                    l6994 232C                                      l6988 22E2  
                                    STR_1 7FE3                                      STR_2 7FFC  
                                    STR_3 7FF6                                      STR_4 7FEE  
                                    _CRC8 2C86                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u3171 130E                                      u3540 2996  
                                    u3534 2978                                      u3535 2972  
                                    u7010 2486                                      u6130 1E1C  
                                    u7004 0B34                                      u7005 0B2C  
                                    u6090 252E                                      u7070 23EA  
                                    u7150 0102                                      u7208 0144  
                                    u7160 010A                                      u7401 0338  
                                    u7209 0158                                      i2l60 0BD4  
                                    u7228 0162                                      u7148 00DE  
                                    u6508 172E                                      u7229 0176  
                                    u7149 00F2                                      u6518 1748  
                                    i2l71 0C90                                      i2l63 0C52  
                                    i2l72 0CA0                                      u6608 1498  
                                    u7328 024C                                      u7248 0180  
                                    u6528 1764                                      i2l65 0C5A  
                                    u6705 2A3C                                      u6609 14AC  
                                    u7329 0260                                      u7249 0194  
                                    i2l90 0DBE                                      i2l82 0D24  
                                    i2l66 0C62                                      u6618 14B4  
                                    u7258 019A                                      u6538 177E  
                                    u6715 2A58                                      u6619 14C8  
                                    u7259 01AE                                      i2l76 0D10  
                                    u6628 14D0                                      u7508 0558  
                                    u7348 0272                                      u7268 01B4  
                                    u7188 0118                                      u6548 17A6  
                                    u6629 14E4                                      u7349 0288  
                                    u7269 01C8                                      u7189 012C  
                                    i2l94 0E14                                      i2l86 0D7A  
                                    u7518 0572                                      u6904 081E  
                                    u7720 2C54                                      u7640 26D2  
                                    u7608 06E8                                      u7528 058C  
                                    u7368 02A2                                      u7288 01E8  
                                    u6568 17F6                                      i2l89 0DAC  
                                    u6905 0816                                      u7369 02B6  
                                    u6914 0896                                      u7730 2C7E  
                                    u6578 1454                                      u7618 0702  
                                    u7538 05DA                                      u7458 04D6  
                                    u7378 02D4                                      u6498 1714  
                                    u8290 2180                                      u6915 088E  
                                    u6579 1468                                      u7379 02E8  
                                    u7628 071C                                      u7468 04F0  
                                    u6934 0928                                      u7670 273E  
                                    u6598 147C                                      u7638 076A  
                                    u7558 0666                                      u7478 050A  
                                    u6935 0920                                      u7727 2C4A  
                                    u6599 1490                                      u6944 094C  
                                    u6880 07F0                                      u7664 271A  
                                    u7568 0680                                      u7488 0524  
                                    u6945 0944                                      u7737 2C74  
                                    u7665 2714                                      u7578 069A  
                                    u7498 053E                                      u6964 09E4  
                                    u7588 06B4                                      u6965 09DC  
                                    u8477 2E96                                      u6974 0A18  
                                    u7598 06CE                                      u6975 0A10  
                                    u6994 0AC2                                      u6995 0ABA  
                                    u7990 22A8                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _Buff 00F0  
                __end_of_GetDataBarGraphA 31C6                  __end_of_GetDataBarGraphB 31BC  
                           oledPutChar@ch 0144                                      _main 2148  
                         _TMR0_StartTimer 31E0                                      _time 003F  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 0021                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                         OLED_command@com 0025                                      prodh 000FF4  
                                    prodl 000FF3           __end_of_FastTransfer_buffer_put 1450  
                                    start 00D0                             __CFG_IESO$OFF 000000  
                         __end_of_GetTime 31CE                              ___param_bank 000010  
                         __end_of_Off_Led 1FD2            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 26C0  
                      __size_of_LEDsetBar 0406                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 309E                                _i2c1_state 0038  
                        __end_of_CRCcheck 15AE                        __size_of_OLED_init 008C  
          __size_of_OSCILLATOR_Initialize 000E                 I2C1_MasterTRBInsert@count 001B  
           __end_of_OSCILLATOR_Initialize 319E                 I2C1_MasterTRBInsert@pflag 001F  
                        LEDbegin@i2c_addr 0143                        crcBufS_put@address 001D  
                        __end_of_LEDbegin 23DA                                     ?_main 0001  
                         __end_of___awdiv 27CC                         __end_of_I2C1_Stop 2D9C  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                                   _T2CON 000FBA                                     _LATA3 007C4B  
                                   _LATC1 007C59                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     _LATE0 007C68  
                                   _LATE1 007C69                                     _LATE2 007C6A  
                          __CFG_DEBUG$OFF 000000                                     i2l281 007E  
                                   i2l273 004E                                     i2l283 008A  
                                   i2l275 005A                                     i2l452 12B2  
                                   i2l277 0066                                     i2l463 1154  
                                   i2l279 0072                                     i2l287 0094  
                                   i2l472 1178                                     i2l481 11DC  
                                   i2l466 1160                                     i2l491 1200  
                                   i2l475 1184                                     i2l459 1148  
                                   i2l485 11E8                                     i2l469 116C  
                                   i2l494 120C                                     i2l488 11F4  
                                   i2l497 1218                           ___awdiv@counter 001F  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                                     _Delay 2E86  
            __end_of_I2C1_BusCollisionISR 31EC                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                         ?_buttonsCollector 0021  
                    _EUSART1_Transmit_ISR 2EBA                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                       ??_I2C1_Initialize 001B                          __end_of_TMR0_ISR 2E86  
                        __end_of_TMR2_ISR 31D6                             __CFG_WRTB$OFF 000000  
                            ?_LEDsetValue 00F2                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                                     _begin 2AD0  
                          __CFG_EBTRB$OFF 000000                        ??_buttonsCollector 0023  
                                   _group 002B                           __end_of_memmove 2292  
                      __CFG_MCLRE$EXTMCLR 000000                           __end_of_picture 7FE3  
                                   pclath 000FFA                              ?_oledPutChar 0001  
                                   tablat 000FF5                             ??_Receive_get 0026  
                    __size_of_crcBufS_get 00E2                                     plusw2 000FDB  
                          begin@stuffpeek 0144                      __size_of_crcBufS_put 00D8  
                                   status 000FD8                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 31DC                              ?_receiveData 0001  
                          SetLEDOut@state 0021                         ??_ReadButtonState 0003  
                          __CFG_PBADEN$ON 000000           I2C1_MasterWriteTRBBuild@address 0021  
                            __end_of_CRC8 2CD0                           CRCcheck@SentCRC 00F2  
                         __initialization 2848                     I2C1_MasterWrite@pdata 00F2  
                   I2C1_MasterWrite@pflag 00F8                __end_of_EUSART1_Initialize 2E14  
                            __end_of_main 21EE                    __size_of_DataBarGraphs 0012  
                              ToSend@what 00F2                                    ??_CRC8 001E  
                           ?_LEDblinkRate 0025                   __end_of_TMR2_Initialize 3080  
                               ??_ADC_ISR 0001               ?_INTERRUPT_InterruptManager 0001  
                        __end_of_OledFont 7ED3                        __size_of_ClearTime 0006  
                             _i2c1_object 00B8                  _TMR2_SetInterruptHandler 31A8  
                                  ??_main 002B                             __activetblptr 000002  
                        __end_of_Send_put 2F1A                 __size_ofi2_UART_buff_size 0016  
                                  ?_Delay 001B                     ?_EUSART1_Transmit_ISR 0001  
           FastTransfer_buffer_put@towhat 0024                             ?_Receive_peek 0001  
                                  ?_begin 0139                   __end_of_TMR0_StartTimer 31E4  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 001B  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                         __end_of_LEDsetBar 0B98  
                         i2_UART_buff_get 25A2                                    _RC1STA 000FAB  
                                  i2l1200 30C4                           i2_UART_buff_put 1956  
                                  i2l1169 2630                                    i2l5100 262C  
                          __CFG_WDTEN$OFF 000000                                    Delay@x 001E  
                                  i2l5080 1976               UART_buff_modulo_inc@modulus 001D  
                                  i2l4700 1A8C                                    i2l5086 19E2  
                                  i2l5246 2EE4                                    i2l4710 1B0E  
                                  i2l4702 1AA6                                    i2l5254 2E5E  
                                  i2l4712 1B28                                    i2l4704 1AC0  
                                  i2l5264 2E80                                    i2l4706 1ADA  
                                  i2l5258 2E6E                                    i2l4730 1190  
                                  i2l4708 1AF4                                    i2l4716 1B42  
                                  i2l4732 11C6                                    i2l4724 112C  
                                  i2l4742 1276                                    i2l4736 1224  
                                  i2l4744 12A6                                    i2l6442 300E  
                                  i2l4746 12C2                                    i2l4738 125A  
                                  i2l6436 2D96                                    i2l4598 2FBA  
                                  i2l6800 0C34                                    i2l4698 1A72  
                                  i2l6900 0E26                                    i2l6812 0C72  
                          _GetButtonState 2FC4                                    i2l6832 0CCE  
                                  i2l6818 0C8A                                    i2l6906 0E32  
                                  i2l6860 0D36                                    i2l6852 0D1E  
                                  i2l6880 0DC6                                    i2l6884 0DCE  
                                  i2l6868 0D82                                    i2l6896 0E1A  
                                  i2l6898 0E1E                                    _RCREG1 000FAE  
                       __end_of_OLED_init 26C0                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                 ??_GetTime 001D  
                                  _TX1STA 000FAC                                    _TXREG1 000FAD  
                               ??_Off_Led 001D                        __size_of_SetLEDOut 02AA  
                       ?_I2C1_MasterWrite 00F2                            __CFG_XINST$OFF 000000  
                                  _ToSend 30DA                        ??_I2C1_MasterWrite 0025  
                     __end_of_Receive_get 3190                          crcBufS_get@_this 001B  
             ??_FastTransfer_buffer_flush 0027                                    _Splash 29A0  
                          _p_i2c1_current 00D5                             _output_buffer 0500  
                        crcBufS_get@space 001E                                    ___wmul 3014  
                               ??___awdiv 001F                                 CRC8@tempI 0020  
                         oledPutChar@base 0142                            __CFG_STVREN$ON 000000  
                          ??_LEDblinkRate 0028                ??_I2C1_MasterWriteTRBBuild 0023  
                        ?_TMR0_Initialize 0001                                    _setLED 1FD2  
                                  _memset 2F1A                                 ?_I2C1_ISR 0001  
                                  clear_0 284E                                    clear_1 285A  
                                  clear_2 2866                                    clear_3 2872  
                                  clear_4 287E                                    clear_5 288A  
                                  clear_6 2896                          ___awdiv@quotient 0021  
                           ?_OLED_command 0001                                    _rx_len 003E  
                        __end_of_sendData 183C                              __pdataCOMRAM 0044  
                               ??_memmove 0021                             Send_put@_data 0026  
                            __mediumconst 7BD2                            ??_Receive_peek 001F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8          __size_of_FastTransfer_buffer_put 0168  
            __end_of_UART_buff_modulo_inc 2F9A                             _DataBarGraphA 00C3  
                           _DataBarGraphB 00C5                             _DataBarGraphs 3150  
                 __end_of_TMR2_StartTimer 31E0  TMR2_SetInterruptHandler@InterruptHandler 001B  
                  __end_of_GetButtonState 2FEC             I2C1_MasterWriteTRBBuild@pdata 001D  
                      LEDblinkRate@status 013D             __size_of_INTERRUPT_Initialize 0012  
                         SetLEDOut@lednum 001F                         _SYSTEM_Initialize 28BC  
                       __end_of_ClearTime 31DC                                __accesstop 0060  
                 __end_of__initialization 28AE                                 ?_CRCcheck 0001  
                   __end_of_TMR2_CallBack 12E8                        ?_SYSTEM_Initialize 0001  
                               ?_LEDbegin 0001                             ___rparam_used 000001  
                 ?i2_UART_buff_modulo_inc 0001                            _i2c1_trb_count 00D1  
                            ?_updateComms 0001                             __end_of_Delay 2EBA  
                   _I2C1_FunctionComplete 2FEC                      _I2C1_BusCollisionISR 31EA  
                  LEDwriteDisplay@timeOut 014E                            __pcstackCOMRAM 0001  
                  I2C1_MasterWrite@length 00F4                        _crcBufS_status_put 1E32  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2B2E                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2F70  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2F46  
                              ??_I2C1_ISR 0004                            ??_OLED_command 0025  
                        ?_TMR2_Initialize 0001              FastTransfer_buffer_put@_this 0021  
                             ToSend@where 002A                        UART_buff_get@_this 0021  
                     ?_crcBufS_status_put 001B                     __end_of_UART_buff_get 25A2  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1956  
                       __end_of_SetLEDOut 1122                                   ??_Delay 001D  
                          LEDbegin@status 0144                   __end_ofi2_UART_buff_get 2634  
                 __end_ofi2_UART_buff_put 1A70               __end_of_EUSART1_Receive_ISR 30DA  
               _FastTransfer_buffer_flush 2A6E                                   CRC8@crc 0021  
                          ?_DataBarGraphs 001B                                   CRC8@len 001D  
                                 CRC8@sum 001E                                   ??_begin 0023  
                        ?_TMR0_StartTimer 0001                           ?_GetButtonState 001B  
               __end_of_SYSTEM_Initialize 2930                  __end_of_handleIndicators 2748  
                  receiveData@holder_2468 0142                       _addressErrorCounter 00C7  
                    __size_of_LEDsetValue 00A4                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                              __pbssBANK5 0500                           __CFG_PLLCFG$OFF 000000  
                             _Receive_get 3182                                ??_CRCcheck 0027  
                       ?_GetDataBarGraphA 001B                         ?_GetDataBarGraphB 001B  
                    ??_crcBufS_status_put 001F            __end_ofi2_UART_buff_modulo_inc 2FC4  
                              __pnvCOMRAM 0042                         begin@givenAddress 013C  
                    __size_of_oledPutChar 00F2                   __size_of_UART_buff_init 001E  
                 __size_of_UART_buff_peek 0024                                ??_LEDbegin 0028  
                 __size_of_UART_buff_size 0016                        __size_of_oledClear 0058  
                      ??_GetDataBarGraphA 001D                        ??_GetDataBarGraphB 001D  
                               ?_Send_put 0001                     ?_I2C1_BusCollisionISR 0001  
                      __size_of_oledPrint 0054                      __size_of_receiveData 06BE  
                                 ?_ToSend 00F2                        __CFG_CCP2MX$PORTC1 000000  
                                 ?_Splash 0001                  __size_of_LEDwriteDisplay 014A  
                                 ?___wmul 001D                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2D9C  
                                 _ADC_ISR 31E4                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               TMR0_ISR@x 0005                   __size_of_ADC_Initialize 0018  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 313A  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2D5A                         _Receive_available 310E  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 00F2  
                         _ReadButtonState 1A70                       _receiveArrayAddress 00D7  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 013D  
                    __end_of_LEDblinkRate 2476             I2C1_MasterTRBInsert@ptrb_list 001D  
                                 _GetTime 31C6                                   _Off_Led 1F08  
                     ??_Receive_available 001F                                 ?_sendData 0001  
                       _alignErrorCounter 00C9                           __CFG_PWRTEN$OFF 000000  
               __size_of_buttonsCollector 0070                    ?_I2C1_FunctionComplete 0001  
                              ??_Send_put 0026                                   __Hparam 0000  
           __size_of_I2C1_MasterTRBInsert 00B8                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 001D                           __size_of_ToSend 001C  
                      _p_i2c1_trb_current 002D                      __end_of_Receive_peek 3182  
                               _AKNAKsend 0036                           __size_of_Splash 006A  
                                 ___awdiv 2748                      _UART_buff_modulo_inc 2F70  
                         __size_of___wmul 0026                                   _calc_CS 0037  
                                 __pcinit 2848                           __size_of_setLED 00BE  
                         __size_of_memset 002C                                   __ramtop 0600  
                        oledPutChar@bytes 0139                          i2UART_buff_get@c 000B  
                           ?_Setupdisplay 0001                                   __ptext0 2148  
                                 __ptext1 2E14                                   __ptext2 2CD0  
                                 __ptext3 16F8                                   __ptext4 1D5A  
                                 __ptext5 2A6E                                   __ptext6 2930  
                                 __ptext7 2FC4                                   __ptext8 30DA  
                                 __ptext9 12E8                                _oledGotoYX 2A0A  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 3190                 __end_of_Receive_available 3124  
                               _T2CONbits 000FBA                           ??_DataBarGraphs 001F  
                                 _memmove 21EE                   _FastTransfer_buffer_put 12E8  
                       __end_of_oledClear 2B86                     CRCcheck@calculatedCRC 00F3  
                      _EUSART1_Initialize 2DD8                          ?i2_UART_buff_get 0007  
                ??_PIN_MANAGER_Initialize 001B                                   _picture 7ED3  
                        ?i2_UART_buff_put 0007                                ?_I2C1_Stop 0001  
                       __end_of_oledPrint 2C86              crcBufS_status_put@wantedTime 0023  
                                 _timeOut 00DD                            TMR2_CallBack@i 0003  
                           ??_crcBufS_get 001F                             ??_crcBufS_put 0020  
              __size_of_SYSTEM_Initialize 0074                      I2C1_ISR@pi2c_buf_ptr 00C1  
                    end_of_initialization 28AE                                 Delay@wait 001B  
                     ?_EUSART1_Initialize 0001                   LEDwriteDisplay@i2c_addr 014D  
                               _LED_array 0088                              oledClear@col 00FC  
                    __end_of_OLED_command 2848                              oledClear@row 00FA  
                                 memset@c 001D                                   memset@n 001F  
                                 memset@p 0021                              LEDsetBar@bar 0023  
                           __Lmediumconst 7BD2                                 _LEDsetBar 0792  
                  ??_I2C1_BusCollisionISR 0001                                ??_sendData 0027  
                 __end_of_I2C1_Initialize 2DD8                                 _OLED_init 2634  
                   ?_UART_buff_modulo_inc 001B                      __size_of_updateComms 003A  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                                _respondECU 2CD0  
                   ReadButtonState@btnnum 0001                        OLED_command@status 0026  
                        begin@stufftosend 013E                       CRCcheck@arrayHolder 00F4  
                            LEDsetValue@k 00F7                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 013B                            ??_Setupdisplay 002B  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                               _PORTDbits 000F83                         ??_LEDwriteDisplay 0025  
                 __end_of_ReadButtonState 1B86                 __size_of_I2C1_MasterWrite 0056  
                  _dataAdressErrorCounter 00CD                         __size_of_I2C1_ISR 02E0  
                              _rx_address 003C                                 _TRISAbits 000F92  
                               _TRISCbits 000F94                   LEDBsetBrightness@status 013D  
       I2C1_ISR@i2c_10bit_address_restart 0035                       LEDbegin@writeBuffer 013E  
                            begin@maxSize 013B        __size_of_FastTransfer_buffer_flush 0062  
                   i2UART_buff_size@_this 0001                            _UART_buff_init 309E  
                          _UART_buff_peek 303A                            _UART_buff_size 3124  
                     __end_of_crcBufS_get 1D5A                                ?_LEDsetBar 0023  
                     __end_of_crcBufS_put 1E32                                ?_OLED_init 0001  
                 I2C1_MasterWrite@address 00F6                         __size_of_CRCcheck 015E  
                               _ClearTime 31D6                 LEDBsetBrightness@i2c_addr 0027  
                       __size_of_LEDbegin 00A4                             _moduleAddress 003A  
                    _timer0ReloadVal16bit 0042                                CRCcheck@rt 00F7  
                          __end_of_ToSend 30F6              __end_of_INTERRUPT_Initialize 3174  
    __end_of_TMR2_DefaultInterruptHandler 31EA     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 31E8                            __end_of_Splash 2A0A  
                         _crcErrorCounter 00CB                            __end_of___wmul 303A  
                 I2C1_MasterWrite@trBlock 00E6                         crcBufS_put@oldCRC 001E  
                           __pidataCOMRAM 31EC                         __size_of_TMR0_ISR 0038  
                I2C1_Stop@completion_code 0003                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 30F6                 ??_FastTransfer_buffer_put 0026  
                             ?_oledGotoYX 0027                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_setLED 2090                            __end_of_memset 2F46  
                       crcBufS_put@status 001F                   buttonsCollector@sendVal 0026  
                            receiveData@r 0149                __size_of_Receive_available 0016  
                            receiveData@u 0147                          ??_GetButtonState 001D  
                       _LEDBsetBrightness 2476                       start_initialization 2848  
                   __size_of_LEDblinkRate 009C                               ??_I2C1_Stop 0001  
                __size_of_TMR0_Initialize 001E           __size_of_PIN_MANAGER_Initialize 0056  
                   crcBufS_get@wantedTime 0025                        ?_LEDBsetBrightness 0025  
                               _SetLEDOut 0E78         __size_of_I2C1_MasterWriteTRBBuild 0044  
                       ?_handleIndicators 0025                 ?_I2C1_MasterWriteTRBBuild 001B  
                  __end_of_UART_buff_init 30BC                    __end_of_UART_buff_peek 305E  
                          UART_buff_get@c 0025                    __end_of_UART_buff_size 313A  
                            ?_Receive_get 0001                            UART_buff_put@c 0023  
                      ??_handleIndicators 0027                           LEDbegin@timeOut 0141  
                     ??_LEDBsetBrightness 0028                     __size_of_Receive_peek 000E  
                        _buttonsCollector 2930                  __end_ofi2_UART_buff_size 3150  
                              ?_ClearTime 0001                          ?_I2C1_Initialize 0001  
                                ??_ToSend 002A                    ??_UART_buff_modulo_inc 001F  
                                CRC8@data 001B                                  ??_Splash 002B  
                         crcBufS_get@time 001D                         __size_of_Send_put 002E  
                             ?_respondECU 0001                                  ??___wmul 0021  
              LEDwriteDisplay@writeBuffer 0139                    __end_of_ADC_Initialize 310E  
                              LEDsetBar@a 0029                                LEDsetBar@c 0027  
                                ?_ADC_ISR 0001                                  ??_setLED 001D  
                                ??_memset 0021                              _LEDblinkRate 23DA  
                       handleIndicators@i 00F2                 __size_of_GetDataBarGraphA 000A  
               __size_of_GetDataBarGraphB 000A             ?_TMR2_DefaultInterruptHandler 0001  
               __end_of_LEDBsetBrightness 2510              I2C1_MasterWriteTRBBuild@ptrb 001B  
                        ?_ReadButtonState 0001                    __size_of_TMR2_CallBack 01C6  
                             __pbssCOMRAM 002B             __size_of_EUSART1_Transmit_ISR 0032  
                           __pcstackBANK0 00F2                             __pcstackBANK1 0139  
                              oledPrint@s 00FA                             ??_LEDsetValue 00F6  
                __size_of_TMR2_Initialize 0022                             _i2c1_tr_queue 00EB  
                   LEDwriteDisplay@status 0150                     __size_of_OLED_command 007C  
                            _Receive_peek 3174                                ?_SetLEDOut 001F  
                     UART_buff_init@_this 0023                               _crcBufS_get 1C78  
                     UART_buff_peek@_this 001B                               _crcBufS_put 1D5A  
                           ??_oledPutChar 0027                          LEDsetValue@color 00F4  
                         ?_UART_buff_init 0023                           ?_UART_buff_peek 001B  
                         ?_UART_buff_size 001B                          LEDsetValue@value 00F2  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                    __end_of_Setupdisplay 31A8                                  ?_GetTime 001B  
                           ??_receiveData 0139               __size_of_crcBufS_status_put 00D6  
                              sendData@CS 00F3                                  ?_Off_Led 001B  
                             ??_LEDsetBar 0139                       __size_of_oledGotoYX 0064  
                               __pnvBANK0 00FE                  __size_of_TMR0_StartTimer 0004  
                             ??_OLED_init 0027                    __size_of_UART_buff_get 0092  
                  __size_of_UART_buff_put 011A                    _PIN_MANAGER_Initialize 2B86  
                       __size_of_sendData 0144                                 __pintcode 0008  
                           __pmediumconst 7BD2                                  ?___awdiv 001B  
                         ?_ADC_Initialize 0001                                  _I2C1_ISR 0B98  
            ??_INTERRUPT_InterruptManager 000D              LEDBsetBrightness@writeBuffer 0139  
                    i2UART_buff_get@_this 0007                              _OLED_command 27CC  
                        _I2C1_MasterWrite 2BDC                                  _BAUD1CON 000FB8  
            __end_of_I2C1_MasterTRBInsert 2148                                  ?_memmove 001B  
                       buttonsCollector@i 0028                            __size_of_Delay 0034  
                               _butnarray 00B0                            __size_of_begin 005E  
                               _oledClear 2B2E                       __size_of_respondECU 0046  
                    _INTERRUPT_Initialize 3162                      GetButtonState@btnnum 001B  
                               _oledPrint 2C32                              _receiveArray 0100  
                             _LEDNUM_ENAB 0098                    I2C1_MasterRead@trBlock 00E1  
                       ??_TMR0_Initialize 001B                       __end_of_LEDsetValue 2336  
                                _CRCcheck 1450                            ___wmul@product 0021  
                                _LATCbits 000F8B                                  _LEDState 00A4  
                     UART_buff_size@_this 001B                             _TMR2_CallBack 1122  
                                _IPR1bits 000F9F                                  _LEDbegin 2336  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                             LEDblinkRate@b 0025  
                __size_of_TMR2_StartTimer 0004                               ??_ClearTime 001B  
                     __end_of_oledPutChar 1C78                           _LEDwriteDisplay 15AE  
     __size_of_INTERRUPT_InterruptManager 00C8                                  i2u400_40 1B08  
                                i2u400_46 1B0A                                  i2u401_40 1B22  
                                i2u401_46 1B24                                  i2u402_40 1B3C  
                                i2u410_40 1174                                  i2u402_46 1B3E  
                                i2u420_40 11FC                                  i2u412_40 1180  
                                i2u404_40 1150                                  i2u422_40 1208  
                                i2u414_40 118C                                  i2u406_40 115C  
                                i2u430_48 12D2                                  i2u520_40 25C0  
                                i2u424_40 1214                                  i2u416_40 11E4  
                                i2u408_40 1168                                  _PIR1bits 000F9E  
                                i2u426_40 1220                                  i2u418_40 11F0  
                                _PIR2bits 000FA1                                  i2u540_40 2ED4  
                                i2u395_40 1A86                                  i2u395_46 1A88  
                                i2u396_40 1AA0                                  i2u396_46 1AA2  
                                i2u397_40 1ABA                                  i2u397_46 1ABC  
                                i2u398_40 1AD4                                  i2u398_46 1AD6  
                                i2u399_40 1AEE                                  i2u399_46 1AF0  
                     begin@stuffavailable 0142                                  i2u791_40 0DF2  
                                i2u791_47 0DE6                                  i2u789_40 0DA2  
                                i2u789_47 0D98                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                       __end_of_receiveData 0792  
                                _SSP1CON1 000FC6                                  _SSP1CON3 000FCB  
                                _TMR0_ISR 2E4E                                  _TMR2_ISR 31CE  
                                _SSP1STAT 000FC7            FastTransfer_buffer_flush@_this 0023  
                            _input_buffer 0400                                 _rx_buffer 0300  
                        __size_of_ADC_ISR 0004                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 001D                __size_of_LEDBsetBrightness 009A  
                    i2UART_buff_put@_this 0007                             _UART_buff_get 2510  
                           _UART_buff_put 183C            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 001B  
                   __end_of_DataBarGraphs 3162                  ??i2_UART_buff_modulo_inc 0005  
                             ??_SetLEDOut 0023                                ?_oledClear 0001  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                              ?_oledPrint 00FA                         _sendStructAddress 00D9  
                __size_ofi2_UART_buff_get 0092                         ??_TMR2_Initialize 001D  
                __size_ofi2_UART_buff_put 011A                                  _OledFont 7BD3  
                          ?_TMR2_CallBack 0001                          __size_of_GetTime 0008  
                           ??_updateComms 002B                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 00CA                                  __Hrparam 0000  
                                _Send_put 2EEC             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 00BF  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 0139  
                 ??_OSCILLATOR_Initialize 001B                                 memmove@d1 001B  
                               memmove@s1 001D                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
             __size_of_EUSART1_Initialize 003C                          _GetDataBarGraphA 31BC  
                        _GetDataBarGraphB 31B2                       begin@stufftoreceive 0140  
        __end_of_I2C1_MasterWriteTRBBuild 2D5A                              ??_oledGotoYX 0028  
                          ?_UART_buff_get 0021                            ?_UART_buff_put 0021  
                             CRC8@extract 001F                  __end_of_buttonsCollector 29A0  
                               sendData@i 00F4                          __size_of_memmove 00A4  
                     I2C1_ISR@i2c_address 0040                               _LEDsetValue 2292  
                crcBufS_status_put@status 001E                                  __ptext10 2F46  
                                __ptext11 2E86                                  __ptext20 3182  
                                __ptext12 00D4                                  __ptext21 2510  
                                __ptext13 2EEC                     __size_of_Setupdisplay 000A  
                                __ptext30 3150                                  __ptext22 2F70  
                                __ptext14 183C                                  __ptext31 3014  
                                __ptext23 310E                                  __ptext15 3174  
                                __ptext40 27CC                                  __ptext32 29A0  
                                __ptext24 3124                                  __ptext16 303A  
                                __ptext41 28BC                                  __ptext33 2C32  
                                __ptext25 2C86                                  __ptext17 1450  
                                __ptext50 3162                                  __ptext42 2AD0  
                                __ptext34 319E                                  __ptext26 26C0  
                                __ptext18 1E32                                  __ptext51 2D9C  
                                __ptext43 305E                                  __ptext35 2B2E  
                                __ptext27 0E78                                  __ptext19 1C78  
                                __ptext60 2336                                  __ptext52 2DD8  
                                __ptext44 31DC                                  __ptext36 1B86  
                                __ptext28 1FD2                                  __ptext61 23DA  
                                __ptext53 309E                                  __ptext45 31A8  
                                __ptext37 21EE                                  __ptext29 1F08  
                                __ptext62 2476                                  __ptext54 2F1A  
                                __ptext46 3080                                  __ptext38 2A0A  
                                __ptext71 31CE                                  __ptext63 2BDC  
                                __ptext55 30F6                                  __ptext47 31E0  
                                __ptext39 2634                                  __ptext80 2EBA  
                                __ptext72 1122                                  __ptext64 2D16  
                                __ptext56 15AE                                  __ptext48 2B86  
                                __ptext81 313A                                  __ptext73 31E8  
                                __ptext65 2090                                  __ptext57 2292  
                                __ptext49 3190                                  __ptext82 25A2  
                                __ptext74 2E4E                                  __ptext66 31C6  
                                __ptext58 0792                                  __ptext83 30BC  
                                __ptext75 1A70                                  __ptext67 31B2  
                                __ptext59 2748                                  __ptext84 1956  
                                __ptext76 0B98                                  __ptext68 31BC  
                                __ptext85 2F9A                                  __ptext77 2D5A  
                                __ptext69 31D6                                  __ptext86 31E4  
                                __ptext78 2FEC                                  __ptext87 0000  
                                __ptext79 31EA                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                         oledPutChar@status 0145  
                           __size_of_CRC8 004A                          oledGotoYX@Column 0027  
                                begin@ptr 0139                   EUSART1_Receive_ISR@data 000C  
                 __end_of_LEDwriteDisplay 16F8                               _oledPutChar 1B86  
                           _returnAddress 003B                             __size_of_main 00A6  
                             _receiveData 00D4                            _Transmit_stall 0044  
                                _sendData 16F8                        __end_of_oledGotoYX 2A6E  
                    _I2C1_MasterTRBInsert 2090                         ?i2_UART_buff_size 0001  
                              _RC1STAbits 000FAB                      LEDblinkRate@i2c_addr 0027  
                            ??_respondECU 002B                        ??i2_UART_buff_size 0003  
                                int$flags 0045                 __size_of_handleIndicators 0088  
           handleIndicators@oldIndicators 00DF                              _serial_write 0033  
                       ??_TMR2_StartTimer 001B                       __end_of_updateComms 2E4E  
      __end_of_INTERRUPT_InterruptManager 00D0                _INTERRUPT_InterruptManager 0008  
                     _EUSART1_Receive_ISR 30BC                         receiveData@holder 013F  
                            _Setupdisplay 319E                        LEDBsetBrightness@b 0025  
                              _INTCONbits 000FF2                 UART_buff_modulo_inc@value 001B  
      handleIndicators@receivedIndicators 0025                          ??_UART_buff_init 0025  
                        ??_UART_buff_peek 001D                          ??_UART_buff_size 001D  
                  ??_INTERRUPT_Initialize 001B                                  memset@p1 001B  
                        _serial_available 002F                                  memmove@d 0023  
                                memmove@n 001F                                  memmove@s 0025  
                             ??_oledClear 002B           __size_ofi2_UART_buff_modulo_inc 002A  
                            ?_crcBufS_get 001B                              ?_crcBufS_put 001B  
                             ??_oledPrint 002B                                  intlevel2 0000  
                 crcBufS_status_put@_this 001B                           ??_TMR2_CallBack 0001  
                      __end_of_respondECU 2D16                      ?_EUSART1_Receive_ISR 0001  
  FastTransfer_buffer_modulo_inc@my_value 001F            FastTransfer_buffer_put@towhere 0023  
                 ?_PIN_MANAGER_Initialize 0001                  __end_of_I2C1_MasterWrite 2C32  
          __size_of_I2C1_FunctionComplete 0028             __end_of_I2C1_FunctionComplete 3014  
                   ?_I2C1_MasterTRBInsert 001B              __end_of_EUSART1_Transmit_ISR 2EEC  
                             _ring_buffer 0200                          ??_ADC_Initialize 001B  
              ?_FastTransfer_buffer_flush 0023                         ??i2_UART_buff_get 0009  
                             _serial_peek 00DB                               _serial_read 0031  
                       ??i2_UART_buff_put 000A                  ?_FastTransfer_buffer_put 0021  
           __size_of_UART_buff_modulo_inc 002A                  __size_of_I2C1_Initialize 003C  
                         ??_UART_buff_get 0023                           ??_UART_buff_put 0024  
   FastTransfer_buffer_modulo_inc@modulus 001D                          DataBarGraphs@BGA 001B  
                        DataBarGraphs@BGB 001D                    crcBufS_status_put@time 001D  
                         _TMR0_Initialize 3080                 receiveData@crcHolder_2469 0146  
                _I2C1_MasterWriteTRBBuild 2D16                         __CFG_T3CMX$PORTC0 000000  
                          _maxDataAddress 0039                  __size_of_ReadButtonState 0116  
              __end_of_crcBufS_status_put 1F08                     ??_EUSART1_Receive_ISR 000C  
          __end_of_PIN_MANAGER_Initialize 2BDC          ??_FastTransfer_buffer_modulo_inc 001F  
         ?_FastTransfer_buffer_modulo_inc 001B                             oledGotoYX@Row 0029  
                        ?_LEDwriteDisplay 0001                   __size_of_GetButtonState 0028  
                      __size_of_I2C1_Stop 0042                             _displaybuffer 0060  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 00FE  
                             _updateComms 2E14  
