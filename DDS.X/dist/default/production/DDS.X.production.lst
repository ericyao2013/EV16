

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Oct 29 02:19:45 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110  0000                     
   111 ;; Function _Receive_peek is unused but had its address taken
   112  0000                     
   113                           	psect	idataCOMRAM
   114  0031FE                     __pidataCOMRAM:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _Transmit_stall
   118  0031FE  01                 	db	1
   119                           
   120                           	psect	mediumconst
   121  007BD2                     __pmediumconst:
   122                           	opt stack 0
   123  007BD2  00                 	db	0
   124  007BD3                     _OledFont:
   125                           	opt stack 0
   126  007BD3  00                 	db	0
   127  007BD4  00                 	db	0
   128  007BD5  00                 	db	0
   129  007BD6  00                 	db	0
   130  007BD7  00                 	db	0
   131  007BD8  00                 	db	0
   132  007BD9  00                 	db	0
   133  007BDA  00                 	db	0
   134  007BDB  00                 	db	0
   135  007BDC  00                 	db	0
   136  007BDD  5F                 	db	95
   137  007BDE  00                 	db	0
   138  007BDF  00                 	db	0
   139  007BE0  00                 	db	0
   140  007BE1  00                 	db	0
   141  007BE2  00                 	db	0
   142  007BE3  00                 	db	0
   143  007BE4  00                 	db	0
   144  007BE5  07                 	db	7
   145  007BE6  00                 	db	0
   146  007BE7  07                 	db	7
   147  007BE8  00                 	db	0
   148  007BE9  00                 	db	0
   149  007BEA  00                 	db	0
   150  007BEB  00                 	db	0
   151  007BEC  14                 	db	20
   152  007BED  7F                 	db	127
   153  007BEE  14                 	db	20
   154  007BEF  7F                 	db	127
   155  007BF0  14                 	db	20
   156  007BF1  00                 	db	0
   157  007BF2  00                 	db	0
   158  007BF3  00                 	db	0
   159  007BF4  24                 	db	36
   160  007BF5  2A                 	db	42
   161  007BF6  7F                 	db	127
   162  007BF7  2A                 	db	42
   163  007BF8  12                 	db	18
   164  007BF9  00                 	db	0
   165  007BFA  00                 	db	0
   166  007BFB  00                 	db	0
   167  007BFC  23                 	db	35
   168  007BFD  13                 	db	19
   169  007BFE  08                 	db	8
   170  007BFF  64                 	db	100
   171  007C00  62                 	db	98
   172  007C01  00                 	db	0
   173  007C02  00                 	db	0
   174  007C03  00                 	db	0
   175  007C04  36                 	db	54
   176  007C05  49                 	db	73
   177  007C06  55                 	db	85
   178  007C07  22                 	db	34
   179  007C08  50                 	db	80
   180  007C09  00                 	db	0
   181  007C0A  00                 	db	0
   182  007C0B  00                 	db	0
   183  007C0C  00                 	db	0
   184  007C0D  05                 	db	5
   185  007C0E  03                 	db	3
   186  007C0F  00                 	db	0
   187  007C10  00                 	db	0
   188  007C11  00                 	db	0
   189  007C12  00                 	db	0
   190  007C13  00                 	db	0
   191  007C14  1C                 	db	28
   192  007C15  22                 	db	34
   193  007C16  41                 	db	65
   194  007C17  00                 	db	0
   195  007C18  00                 	db	0
   196  007C19  00                 	db	0
   197  007C1A  00                 	db	0
   198  007C1B  00                 	db	0
   199  007C1C  41                 	db	65
   200  007C1D  22                 	db	34
   201  007C1E  1C                 	db	28
   202  007C1F  00                 	db	0
   203  007C20  00                 	db	0
   204  007C21  00                 	db	0
   205  007C22  00                 	db	0
   206  007C23  00                 	db	0
   207  007C24  08                 	db	8
   208  007C25  2A                 	db	42
   209  007C26  1C                 	db	28
   210  007C27  2A                 	db	42
   211  007C28  08                 	db	8
   212  007C29  00                 	db	0
   213  007C2A  00                 	db	0
   214  007C2B  00                 	db	0
   215  007C2C  08                 	db	8
   216  007C2D  08                 	db	8
   217  007C2E  3E                 	db	62
   218  007C2F  08                 	db	8
   219  007C30  08                 	db	8
   220  007C31  00                 	db	0
   221  007C32  00                 	db	0
   222  007C33  00                 	db	0
   223  007C34  A0                 	db	160
   224  007C35  60                 	db	96
   225  007C36  00                 	db	0
   226  007C37  00                 	db	0
   227  007C38  00                 	db	0
   228  007C39  00                 	db	0
   229  007C3A  00                 	db	0
   230  007C3B  00                 	db	0
   231  007C3C  08                 	db	8
   232  007C3D  08                 	db	8
   233  007C3E  08                 	db	8
   234  007C3F  08                 	db	8
   235  007C40  08                 	db	8
   236  007C41  00                 	db	0
   237  007C42  00                 	db	0
   238  007C43  00                 	db	0
   239  007C44  60                 	db	96
   240  007C45  60                 	db	96
   241  007C46  00                 	db	0
   242  007C47  00                 	db	0
   243  007C48  00                 	db	0
   244  007C49  00                 	db	0
   245  007C4A  00                 	db	0
   246  007C4B  00                 	db	0
   247  007C4C  20                 	db	32
   248  007C4D  10                 	db	16
   249  007C4E  08                 	db	8
   250  007C4F  04                 	db	4
   251  007C50  02                 	db	2
   252  007C51  00                 	db	0
   253  007C52  00                 	db	0
   254  007C53  00                 	db	0
   255  007C54  3E                 	db	62
   256  007C55  51                 	db	81
   257  007C56  49                 	db	73
   258  007C57  45                 	db	69
   259  007C58  3E                 	db	62
   260  007C59  00                 	db	0
   261  007C5A  00                 	db	0
   262  007C5B  00                 	db	0
   263  007C5C  00                 	db	0
   264  007C5D  42                 	db	66
   265  007C5E  7F                 	db	127
   266  007C5F  40                 	db	64
   267  007C60  00                 	db	0
   268  007C61  00                 	db	0
   269  007C62  00                 	db	0
   270  007C63  00                 	db	0
   271  007C64  62                 	db	98
   272  007C65  51                 	db	81
   273  007C66  49                 	db	73
   274  007C67  49                 	db	73
   275  007C68  46                 	db	70
   276  007C69  00                 	db	0
   277  007C6A  00                 	db	0
   278  007C6B  00                 	db	0
   279  007C6C  22                 	db	34
   280  007C6D  41                 	db	65
   281  007C6E  49                 	db	73
   282  007C6F  49                 	db	73
   283  007C70  36                 	db	54
   284  007C71  00                 	db	0
   285  007C72  00                 	db	0
   286  007C73  00                 	db	0
   287  007C74  18                 	db	24
   288  007C75  14                 	db	20
   289  007C76  12                 	db	18
   290  007C77  7F                 	db	127
   291  007C78  10                 	db	16
   292  007C79  00                 	db	0
   293  007C7A  00                 	db	0
   294  007C7B  00                 	db	0
   295  007C7C  27                 	db	39
   296  007C7D  45                 	db	69
   297  007C7E  45                 	db	69
   298  007C7F  45                 	db	69
   299  007C80  39                 	db	57
   300  007C81  00                 	db	0
   301  007C82  00                 	db	0
   302  007C83  00                 	db	0
   303  007C84  3C                 	db	60
   304  007C85  4A                 	db	74
   305  007C86  49                 	db	73
   306  007C87  49                 	db	73
   307  007C88  30                 	db	48
   308  007C89  00                 	db	0
   309  007C8A  00                 	db	0
   310  007C8B  00                 	db	0
   311  007C8C  01                 	db	1
   312  007C8D  71                 	db	113
   313  007C8E  09                 	db	9
   314  007C8F  05                 	db	5
   315  007C90  03                 	db	3
   316  007C91  00                 	db	0
   317  007C92  00                 	db	0
   318  007C93  00                 	db	0
   319  007C94  36                 	db	54
   320  007C95  49                 	db	73
   321  007C96  49                 	db	73
   322  007C97  49                 	db	73
   323  007C98  36                 	db	54
   324  007C99  00                 	db	0
   325  007C9A  00                 	db	0
   326  007C9B  00                 	db	0
   327  007C9C  06                 	db	6
   328  007C9D  49                 	db	73
   329  007C9E  49                 	db	73
   330  007C9F  29                 	db	41
   331  007CA0  1E                 	db	30
   332  007CA1  00                 	db	0
   333  007CA2  00                 	db	0
   334  007CA3  00                 	db	0
   335  007CA4  00                 	db	0
   336  007CA5  36                 	db	54
   337  007CA6  36                 	db	54
   338  007CA7  00                 	db	0
   339  007CA8  00                 	db	0
   340  007CA9  00                 	db	0
   341  007CAA  00                 	db	0
   342  007CAB  00                 	db	0
   343  007CAC  00                 	db	0
   344  007CAD  AC                 	db	172
   345  007CAE  6C                 	db	108
   346  007CAF  00                 	db	0
   347  007CB0  00                 	db	0
   348  007CB1  00                 	db	0
   349  007CB2  00                 	db	0
   350  007CB3  00                 	db	0
   351  007CB4  08                 	db	8
   352  007CB5  14                 	db	20
   353  007CB6  22                 	db	34
   354  007CB7  41                 	db	65
   355  007CB8  00                 	db	0
   356  007CB9  00                 	db	0
   357  007CBA  00                 	db	0
   358  007CBB  00                 	db	0
   359  007CBC  14                 	db	20
   360  007CBD  14                 	db	20
   361  007CBE  14                 	db	20
   362  007CBF  14                 	db	20
   363  007CC0  14                 	db	20
   364  007CC1  00                 	db	0
   365  007CC2  00                 	db	0
   366  007CC3  00                 	db	0
   367  007CC4  41                 	db	65
   368  007CC5  22                 	db	34
   369  007CC6  14                 	db	20
   370  007CC7  08                 	db	8
   371  007CC8  00                 	db	0
   372  007CC9  00                 	db	0
   373  007CCA  00                 	db	0
   374  007CCB  00                 	db	0
   375  007CCC  02                 	db	2
   376  007CCD  01                 	db	1
   377  007CCE  51                 	db	81
   378  007CCF  09                 	db	9
   379  007CD0  06                 	db	6
   380  007CD1  00                 	db	0
   381  007CD2  00                 	db	0
   382  007CD3  00                 	db	0
   383  007CD4  32                 	db	50
   384  007CD5  49                 	db	73
   385  007CD6  79                 	db	121
   386  007CD7  41                 	db	65
   387  007CD8  3E                 	db	62
   388  007CD9  00                 	db	0
   389  007CDA  00                 	db	0
   390  007CDB  00                 	db	0
   391  007CDC  7E                 	db	126
   392  007CDD  09                 	db	9
   393  007CDE  09                 	db	9
   394  007CDF  09                 	db	9
   395  007CE0  7E                 	db	126
   396  007CE1  00                 	db	0
   397  007CE2  00                 	db	0
   398  007CE3  00                 	db	0
   399  007CE4  7F                 	db	127
   400  007CE5  49                 	db	73
   401  007CE6  49                 	db	73
   402  007CE7  49                 	db	73
   403  007CE8  36                 	db	54
   404  007CE9  00                 	db	0
   405  007CEA  00                 	db	0
   406  007CEB  00                 	db	0
   407  007CEC  3E                 	db	62
   408  007CED  41                 	db	65
   409  007CEE  41                 	db	65
   410  007CEF  41                 	db	65
   411  007CF0  22                 	db	34
   412  007CF1  00                 	db	0
   413  007CF2  00                 	db	0
   414  007CF3  00                 	db	0
   415  007CF4  7F                 	db	127
   416  007CF5  41                 	db	65
   417  007CF6  41                 	db	65
   418  007CF7  22                 	db	34
   419  007CF8  1C                 	db	28
   420  007CF9  00                 	db	0
   421  007CFA  00                 	db	0
   422  007CFB  00                 	db	0
   423  007CFC  7F                 	db	127
   424  007CFD  49                 	db	73
   425  007CFE  49                 	db	73
   426  007CFF  49                 	db	73
   427  007D00  41                 	db	65
   428  007D01  00                 	db	0
   429  007D02  00                 	db	0
   430  007D03  00                 	db	0
   431  007D04  7F                 	db	127
   432  007D05  09                 	db	9
   433  007D06  09                 	db	9
   434  007D07  09                 	db	9
   435  007D08  01                 	db	1
   436  007D09  00                 	db	0
   437  007D0A  00                 	db	0
   438  007D0B  00                 	db	0
   439  007D0C  3E                 	db	62
   440  007D0D  41                 	db	65
   441  007D0E  41                 	db	65
   442  007D0F  51                 	db	81
   443  007D10  72                 	db	114
   444  007D11  00                 	db	0
   445  007D12  00                 	db	0
   446  007D13  00                 	db	0
   447  007D14  7F                 	db	127
   448  007D15  08                 	db	8
   449  007D16  08                 	db	8
   450  007D17  08                 	db	8
   451  007D18  7F                 	db	127
   452  007D19  00                 	db	0
   453  007D1A  00                 	db	0
   454  007D1B  00                 	db	0
   455  007D1C  41                 	db	65
   456  007D1D  7F                 	db	127
   457  007D1E  41                 	db	65
   458  007D1F  00                 	db	0
   459  007D20  00                 	db	0
   460  007D21  00                 	db	0
   461  007D22  00                 	db	0
   462  007D23  00                 	db	0
   463  007D24  20                 	db	32
   464  007D25  40                 	db	64
   465  007D26  41                 	db	65
   466  007D27  3F                 	db	63
   467  007D28  01                 	db	1
   468  007D29  00                 	db	0
   469  007D2A  00                 	db	0
   470  007D2B  00                 	db	0
   471  007D2C  7F                 	db	127
   472  007D2D  08                 	db	8
   473  007D2E  14                 	db	20
   474  007D2F  22                 	db	34
   475  007D30  41                 	db	65
   476  007D31  00                 	db	0
   477  007D32  00                 	db	0
   478  007D33  00                 	db	0
   479  007D34  7F                 	db	127
   480  007D35  40                 	db	64
   481  007D36  40                 	db	64
   482  007D37  40                 	db	64
   483  007D38  40                 	db	64
   484  007D39  00                 	db	0
   485  007D3A  00                 	db	0
   486  007D3B  00                 	db	0
   487  007D3C  7F                 	db	127
   488  007D3D  02                 	db	2
   489  007D3E  0C                 	db	12
   490  007D3F  02                 	db	2
   491  007D40  7F                 	db	127
   492  007D41  00                 	db	0
   493  007D42  00                 	db	0
   494  007D43  00                 	db	0
   495  007D44  7F                 	db	127
   496  007D45  04                 	db	4
   497  007D46  08                 	db	8
   498  007D47  10                 	db	16
   499  007D48  7F                 	db	127
   500  007D49  00                 	db	0
   501  007D4A  00                 	db	0
   502  007D4B  00                 	db	0
   503  007D4C  3E                 	db	62
   504  007D4D  41                 	db	65
   505  007D4E  41                 	db	65
   506  007D4F  41                 	db	65
   507  007D50  3E                 	db	62
   508  007D51  00                 	db	0
   509  007D52  00                 	db	0
   510  007D53  00                 	db	0
   511  007D54  7F                 	db	127
   512  007D55  09                 	db	9
   513  007D56  09                 	db	9
   514  007D57  09                 	db	9
   515  007D58  06                 	db	6
   516  007D59  00                 	db	0
   517  007D5A  00                 	db	0
   518  007D5B  00                 	db	0
   519  007D5C  3E                 	db	62
   520  007D5D  41                 	db	65
   521  007D5E  51                 	db	81
   522  007D5F  21                 	db	33
   523  007D60  5E                 	db	94
   524  007D61  00                 	db	0
   525  007D62  00                 	db	0
   526  007D63  00                 	db	0
   527  007D64  7F                 	db	127
   528  007D65  09                 	db	9
   529  007D66  19                 	db	25
   530  007D67  29                 	db	41
   531  007D68  46                 	db	70
   532  007D69  00                 	db	0
   533  007D6A  00                 	db	0
   534  007D6B  00                 	db	0
   535  007D6C  26                 	db	38
   536  007D6D  49                 	db	73
   537  007D6E  49                 	db	73
   538  007D6F  49                 	db	73
   539  007D70  32                 	db	50
   540  007D71  00                 	db	0
   541  007D72  00                 	db	0
   542  007D73  00                 	db	0
   543  007D74  01                 	db	1
   544  007D75  01                 	db	1
   545  007D76  7F                 	db	127
   546  007D77  01                 	db	1
   547  007D78  01                 	db	1
   548  007D79  00                 	db	0
   549  007D7A  00                 	db	0
   550  007D7B  00                 	db	0
   551  007D7C  3F                 	db	63
   552  007D7D  40                 	db	64
   553  007D7E  40                 	db	64
   554  007D7F  40                 	db	64
   555  007D80  3F                 	db	63
   556  007D81  00                 	db	0
   557  007D82  00                 	db	0
   558  007D83  00                 	db	0
   559  007D84  1F                 	db	31
   560  007D85  20                 	db	32
   561  007D86  40                 	db	64
   562  007D87  20                 	db	32
   563  007D88  1F                 	db	31
   564  007D89  00                 	db	0
   565  007D8A  00                 	db	0
   566  007D8B  00                 	db	0
   567  007D8C  3F                 	db	63
   568  007D8D  40                 	db	64
   569  007D8E  38                 	db	56
   570  007D8F  40                 	db	64
   571  007D90  3F                 	db	63
   572  007D91  00                 	db	0
   573  007D92  00                 	db	0
   574  007D93  00                 	db	0
   575  007D94  63                 	db	99
   576  007D95  14                 	db	20
   577  007D96  08                 	db	8
   578  007D97  14                 	db	20
   579  007D98  63                 	db	99
   580  007D99  00                 	db	0
   581  007D9A  00                 	db	0
   582  007D9B  00                 	db	0
   583  007D9C  03                 	db	3
   584  007D9D  04                 	db	4
   585  007D9E  78                 	db	120
   586  007D9F  04                 	db	4
   587  007DA0  03                 	db	3
   588  007DA1  00                 	db	0
   589  007DA2  00                 	db	0
   590  007DA3  00                 	db	0
   591  007DA4  61                 	db	97
   592  007DA5  51                 	db	81
   593  007DA6  49                 	db	73
   594  007DA7  45                 	db	69
   595  007DA8  43                 	db	67
   596  007DA9  00                 	db	0
   597  007DAA  00                 	db	0
   598  007DAB  00                 	db	0
   599  007DAC  7F                 	db	127
   600  007DAD  41                 	db	65
   601  007DAE  41                 	db	65
   602  007DAF  00                 	db	0
   603  007DB0  00                 	db	0
   604  007DB1  00                 	db	0
   605  007DB2  00                 	db	0
   606  007DB3  00                 	db	0
   607  007DB4  02                 	db	2
   608  007DB5  04                 	db	4
   609  007DB6  08                 	db	8
   610  007DB7  10                 	db	16
   611  007DB8  20                 	db	32
   612  007DB9  00                 	db	0
   613  007DBA  00                 	db	0
   614  007DBB  00                 	db	0
   615  007DBC  41                 	db	65
   616  007DBD  41                 	db	65
   617  007DBE  7F                 	db	127
   618  007DBF  00                 	db	0
   619  007DC0  00                 	db	0
   620  007DC1  00                 	db	0
   621  007DC2  00                 	db	0
   622  007DC3  00                 	db	0
   623  007DC4  04                 	db	4
   624  007DC5  02                 	db	2
   625  007DC6  01                 	db	1
   626  007DC7  02                 	db	2
   627  007DC8  04                 	db	4
   628  007DC9  00                 	db	0
   629  007DCA  00                 	db	0
   630  007DCB  00                 	db	0
   631  007DCC  80                 	db	128
   632  007DCD  80                 	db	128
   633  007DCE  80                 	db	128
   634  007DCF  80                 	db	128
   635  007DD0  80                 	db	128
   636  007DD1  00                 	db	0
   637  007DD2  00                 	db	0
   638  007DD3  00                 	db	0
   639  007DD4  01                 	db	1
   640  007DD5  02                 	db	2
   641  007DD6  04                 	db	4
   642  007DD7  00                 	db	0
   643  007DD8  00                 	db	0
   644  007DD9  00                 	db	0
   645  007DDA  00                 	db	0
   646  007DDB  00                 	db	0
   647  007DDC  20                 	db	32
   648  007DDD  54                 	db	84
   649  007DDE  54                 	db	84
   650  007DDF  54                 	db	84
   651  007DE0  78                 	db	120
   652  007DE1  00                 	db	0
   653  007DE2  00                 	db	0
   654  007DE3  00                 	db	0
   655  007DE4  7F                 	db	127
   656  007DE5  48                 	db	72
   657  007DE6  44                 	db	68
   658  007DE7  44                 	db	68
   659  007DE8  38                 	db	56
   660  007DE9  00                 	db	0
   661  007DEA  00                 	db	0
   662  007DEB  00                 	db	0
   663  007DEC  38                 	db	56
   664  007DED  44                 	db	68
   665  007DEE  44                 	db	68
   666  007DEF  28                 	db	40
   667  007DF0  00                 	db	0
   668  007DF1  00                 	db	0
   669  007DF2  00                 	db	0
   670  007DF3  00                 	db	0
   671  007DF4  38                 	db	56
   672  007DF5  44                 	db	68
   673  007DF6  44                 	db	68
   674  007DF7  48                 	db	72
   675  007DF8  7F                 	db	127
   676  007DF9  00                 	db	0
   677  007DFA  00                 	db	0
   678  007DFB  00                 	db	0
   679  007DFC  38                 	db	56
   680  007DFD  54                 	db	84
   681  007DFE  54                 	db	84
   682  007DFF  54                 	db	84
   683  007E00  18                 	db	24
   684  007E01  00                 	db	0
   685  007E02  00                 	db	0
   686  007E03  00                 	db	0
   687  007E04  08                 	db	8
   688  007E05  7E                 	db	126
   689  007E06  09                 	db	9
   690  007E07  02                 	db	2
   691  007E08  00                 	db	0
   692  007E09  00                 	db	0
   693  007E0A  00                 	db	0
   694  007E0B  00                 	db	0
   695  007E0C  18                 	db	24
   696  007E0D  A4                 	db	164
   697  007E0E  A4                 	db	164
   698  007E0F  A4                 	db	164
   699  007E10  7C                 	db	124
   700  007E11  00                 	db	0
   701  007E12  00                 	db	0
   702  007E13  00                 	db	0
   703  007E14  7F                 	db	127
   704  007E15  08                 	db	8
   705  007E16  04                 	db	4
   706  007E17  04                 	db	4
   707  007E18  78                 	db	120
   708  007E19  00                 	db	0
   709  007E1A  00                 	db	0
   710  007E1B  00                 	db	0
   711  007E1C  00                 	db	0
   712  007E1D  7D                 	db	125
   713  007E1E  00                 	db	0
   714  007E1F  00                 	db	0
   715  007E20  00                 	db	0
   716  007E21  00                 	db	0
   717  007E22  00                 	db	0
   718  007E23  00                 	db	0
   719  007E24  80                 	db	128
   720  007E25  84                 	db	132
   721  007E26  7D                 	db	125
   722  007E27  00                 	db	0
   723  007E28  00                 	db	0
   724  007E29  00                 	db	0
   725  007E2A  00                 	db	0
   726  007E2B  00                 	db	0
   727  007E2C  7F                 	db	127
   728  007E2D  10                 	db	16
   729  007E2E  28                 	db	40
   730  007E2F  44                 	db	68
   731  007E30  00                 	db	0
   732  007E31  00                 	db	0
   733  007E32  00                 	db	0
   734  007E33  00                 	db	0
   735  007E34  41                 	db	65
   736  007E35  7F                 	db	127
   737  007E36  40                 	db	64
   738  007E37  00                 	db	0
   739  007E38  00                 	db	0
   740  007E39  00                 	db	0
   741  007E3A  00                 	db	0
   742  007E3B  00                 	db	0
   743  007E3C  7C                 	db	124
   744  007E3D  04                 	db	4
   745  007E3E  18                 	db	24
   746  007E3F  04                 	db	4
   747  007E40  78                 	db	120
   748  007E41  00                 	db	0
   749  007E42  00                 	db	0
   750  007E43  00                 	db	0
   751  007E44  7C                 	db	124
   752  007E45  08                 	db	8
   753  007E46  04                 	db	4
   754  007E47  7C                 	db	124
   755  007E48  00                 	db	0
   756  007E49  00                 	db	0
   757  007E4A  00                 	db	0
   758  007E4B  00                 	db	0
   759  007E4C  38                 	db	56
   760  007E4D  44                 	db	68
   761  007E4E  44                 	db	68
   762  007E4F  38                 	db	56
   763  007E50  00                 	db	0
   764  007E51  00                 	db	0
   765  007E52  00                 	db	0
   766  007E53  00                 	db	0
   767  007E54  FC                 	db	252
   768  007E55  24                 	db	36
   769  007E56  24                 	db	36
   770  007E57  18                 	db	24
   771  007E58  00                 	db	0
   772  007E59  00                 	db	0
   773  007E5A  00                 	db	0
   774  007E5B  00                 	db	0
   775  007E5C  18                 	db	24
   776  007E5D  24                 	db	36
   777  007E5E  24                 	db	36
   778  007E5F  FC                 	db	252
   779  007E60  00                 	db	0
   780  007E61  00                 	db	0
   781  007E62  00                 	db	0
   782  007E63  00                 	db	0
   783  007E64  00                 	db	0
   784  007E65  7C                 	db	124
   785  007E66  08                 	db	8
   786  007E67  04                 	db	4
   787  007E68  00                 	db	0
   788  007E69  00                 	db	0
   789  007E6A  00                 	db	0
   790  007E6B  00                 	db	0
   791  007E6C  48                 	db	72
   792  007E6D  54                 	db	84
   793  007E6E  54                 	db	84
   794  007E6F  24                 	db	36
   795  007E70  00                 	db	0
   796  007E71  00                 	db	0
   797  007E72  00                 	db	0
   798  007E73  00                 	db	0
   799  007E74  04                 	db	4
   800  007E75  7F                 	db	127
   801  007E76  44                 	db	68
   802  007E77  00                 	db	0
   803  007E78  00                 	db	0
   804  007E79  00                 	db	0
   805  007E7A  00                 	db	0
   806  007E7B  00                 	db	0
   807  007E7C  3C                 	db	60
   808  007E7D  40                 	db	64
   809  007E7E  40                 	db	64
   810  007E7F  7C                 	db	124
   811  007E80  00                 	db	0
   812  007E81  00                 	db	0
   813  007E82  00                 	db	0
   814  007E83  00                 	db	0
   815  007E84  1C                 	db	28
   816  007E85  20                 	db	32
   817  007E86  40                 	db	64
   818  007E87  20                 	db	32
   819  007E88  1C                 	db	28
   820  007E89  00                 	db	0
   821  007E8A  00                 	db	0
   822  007E8B  00                 	db	0
   823  007E8C  3C                 	db	60
   824  007E8D  40                 	db	64
   825  007E8E  30                 	db	48
   826  007E8F  40                 	db	64
   827  007E90  3C                 	db	60
   828  007E91  00                 	db	0
   829  007E92  00                 	db	0
   830  007E93  00                 	db	0
   831  007E94  44                 	db	68
   832  007E95  28                 	db	40
   833  007E96  10                 	db	16
   834  007E97  28                 	db	40
   835  007E98  44                 	db	68
   836  007E99  00                 	db	0
   837  007E9A  00                 	db	0
   838  007E9B  00                 	db	0
   839  007E9C  1C                 	db	28
   840  007E9D  A0                 	db	160
   841  007E9E  A0                 	db	160
   842  007E9F  7C                 	db	124
   843  007EA0  00                 	db	0
   844  007EA1  00                 	db	0
   845  007EA2  00                 	db	0
   846  007EA3  00                 	db	0
   847  007EA4  44                 	db	68
   848  007EA5  64                 	db	100
   849  007EA6  54                 	db	84
   850  007EA7  4C                 	db	76
   851  007EA8  44                 	db	68
   852  007EA9  00                 	db	0
   853  007EAA  00                 	db	0
   854  007EAB  00                 	db	0
   855  007EAC  08                 	db	8
   856  007EAD  36                 	db	54
   857  007EAE  41                 	db	65
   858  007EAF  00                 	db	0
   859  007EB0  00                 	db	0
   860  007EB1  00                 	db	0
   861  007EB2  00                 	db	0
   862  007EB3  00                 	db	0
   863  007EB4  00                 	db	0
   864  007EB5  7F                 	db	127
   865  007EB6  00                 	db	0
   866  007EB7  00                 	db	0
   867  007EB8  00                 	db	0
   868  007EB9  00                 	db	0
   869  007EBA  00                 	db	0
   870  007EBB  00                 	db	0
   871  007EBC  41                 	db	65
   872  007EBD  36                 	db	54
   873  007EBE  08                 	db	8
   874  007EBF  00                 	db	0
   875  007EC0  00                 	db	0
   876  007EC1  00                 	db	0
   877  007EC2  00                 	db	0
   878  007EC3  00                 	db	0
   879  007EC4  02                 	db	2
   880  007EC5  01                 	db	1
   881  007EC6  01                 	db	1
   882  007EC7  02                 	db	2
   883  007EC8  01                 	db	1
   884  007EC9  00                 	db	0
   885  007ECA  00                 	db	0
   886  007ECB  00                 	db	0
   887  007ECC  02                 	db	2
   888  007ECD  05                 	db	5
   889  007ECE  05                 	db	5
   890  007ECF  02                 	db	2
   891  007ED0  00                 	db	0
   892  007ED1  00                 	db	0
   893  007ED2  00                 	db	0
   894  007ED3                     __end_of_OledFont:
   895                           	opt stack 0
   896  007ED3                     _picture:
   897                           	opt stack 0
   898  007ED3  00                 	db	0
   899  007ED4  00                 	db	0
   900  007ED5  00                 	db	0
   901  007ED6  00                 	db	0
   902  007ED7  00                 	db	0
   903  007ED8  00                 	db	0
   904  007ED9  00                 	db	0
   905  007EDA  00                 	db	0
   906  007EDB  00                 	db	0
   907  007EDC  00                 	db	0
   908  007EDD  00                 	db	0
   909  007EDE  00                 	db	0
   910  007EDF  00                 	db	0
   911  007EE0  00                 	db	0
   912  007EE1  00                 	db	0
   913  007EE2  00                 	db	0
   914  007EE3  3F                 	db	63
   915  007EE4  80                 	db	128
   916  007EE5  00                 	db	0
   917  007EE6  C0                 	db	192
   918  007EE7  00                 	db	0
   919  007EE8  7F                 	db	127
   920  007EE9  E0                 	db	224
   921  007EEA  00                 	db	0
   922  007EEB  30                 	db	48
   923  007EEC  00                 	db	0
   924  007EED  1F                 	db	31
   925  007EEE  FF                 	db	255
   926  007EEF  F8                 	db	248
   927  007EF0  03                 	db	3
   928  007EF1  FF                 	db	255
   929  007EF2  F8                 	db	248
   930  007EF3  24                 	db	36
   931  007EF4  80                 	db	128
   932  007EF5  00                 	db	0
   933  007EF6  A0                 	db	160
   934  007EF7  00                 	db	0
   935  007EF8  7F                 	db	127
   936  007EF9  E0                 	db	224
   937  007EFA  00                 	db	0
   938  007EFB  78                 	db	120
   939  007EFC  00                 	db	0
   940  007EFD  1F                 	db	31
   941  007EFE  FF                 	db	255
   942  007EFF  F8                 	db	248
   943  007F00  02                 	db	2
   944  007F01  00                 	db	0
   945  007F02  08                 	db	8
   946  007F03  15                 	db	21
   947  007F04  00                 	db	0
   948  007F05  02                 	db	2
   949  007F06  90                 	db	144
   950  007F07  00                 	db	0
   951  007F08  66                 	db	102
   952  007F09  60                 	db	96
   953  007F0A  60                 	db	96
   954  007F0B  FC                 	db	252
   955  007F0C  00                 	db	0
   956  007F0D  17                 	db	23
   957  007F0E  A3                 	db	163
   958  007F0F  18                 	db	24
   959  007F10  0E                 	db	14
   960  007F11  EE                 	db	238
   961  007F12  E8                 	db	232
   962  007F13  0E                 	db	14
   963  007F14  01                 	db	1
   964  007F15  01                 	db	1
   965  007F16  A0                 	db	160
   966  007F17  00                 	db	0
   967  007F18  66                 	db	102
   968  007F19  60                 	db	96
   969  007F1A  61                 	db	97
   970  007F1B  FE                 	db	254
   971  007F1C  00                 	db	0
   972  007F1D  13                 	db	19
   973  007F1E  2D                 	db	45
   974  007F1F  E8                 	db	232
   975  007F20  08                 	db	8
   976  007F21  EE                 	db	238
   977  007F22  E8                 	db	232
   978  007F23  04                 	db	4
   979  007F24  05                 	db	5
   980  007F25  00                 	db	0
   981  007F26  C0                 	db	192
   982  007F27  00                 	db	0
   983  007F28  66                 	db	102
   984  007F29  60                 	db	96
   985  007F2A  60                 	db	96
   986  007F2B  30                 	db	48
   987  007F2C  00                 	db	0
   988  007F2D  14                 	db	20
   989  007F2E  AD                 	db	173
   990  007F2F  E8                 	db	232
   991  007F30  08                 	db	8
   992  007F31  EE                 	db	238
   993  007F32  E8                 	db	232
   994  007F33  04                 	db	4
   995  007F34  15                 	db	21
   996  007F35  01                 	db	1
   997  007F36  A0                 	db	160
   998  007F37  00                 	db	0
   999  007F38  66                 	db	102
  1000  007F39  60                 	db	96
  1001  007F3A  60                 	db	96
  1002  007F3B  30                 	db	48
  1003  007F3C  00                 	db	0
  1004  007F3D  17                 	db	23
  1005  007F3E  AD                 	db	173
  1006  007F3F  98                 	db	152
  1007  007F40  08                 	db	8
  1008  007F41  EE                 	db	238
  1009  007F42  E8                 	db	232
  1010  007F43  04                 	db	4
  1011  007F44  55                 	db	85
  1012  007F45  02                 	db	2
  1013  007F46  90                 	db	144
  1014  007F47  00                 	db	0
  1015  007F48  66                 	db	102
  1016  007F49  60                 	db	96
  1017  007F4A  60                 	db	96
  1018  007F4B  30                 	db	48
  1019  007F4C  00                 	db	0
  1020  007F4D  17                 	db	23
  1021  007F4E  A3                 	db	163
  1022  007F4F  E8                 	db	232
  1023  007F50  08                 	db	8
  1024  007F51  EE                 	db	238
  1025  007F52  E8                 	db	232
  1026  007F53  05                 	db	5
  1027  007F54  55                 	db	85
  1028  007F55  00                 	db	0
  1029  007F56  A0                 	db	160
  1030  007F57  00                 	db	0
  1031  007F58  7F                 	db	127
  1032  007F59  E0                 	db	224
  1033  007F5A  60                 	db	96
  1034  007F5B  30                 	db	48
  1035  007F5C  00                 	db	0
  1036  007F5D  17                 	db	23
  1037  007F5E  AF                 	db	175
  1038  007F5F  E8                 	db	232
  1039  007F60  08                 	db	8
  1040  007F61  EE                 	db	238
  1041  007F62  E8                 	db	232
  1042  007F63  05                 	db	5
  1043  007F64  55                 	db	85
  1044  007F65  00                 	db	0
  1045  007F66  C0                 	db	192
  1046  007F67  00                 	db	0
  1047  007F68  7F                 	db	127
  1048  007F69  E0                 	db	224
  1049  007F6A  60                 	db	96
  1050  007F6B  30                 	db	48
  1051  007F6C  00                 	db	0
  1052  007F6D  17                 	db	23
  1053  007F6E  AF                 	db	175
  1054  007F6F  18                 	db	24
  1055  007F70  0E                 	db	14
  1056  007F71  EE                 	db	238
  1057  007F72  E8                 	db	232
  1058  007F73  00                 	db	0
  1059  007F74  00                 	db	0
  1060  007F75  00                 	db	0
  1061  007F76  00                 	db	0
  1062  007F77  00                 	db	0
  1063  007F78  00                 	db	0
  1064  007F79  03                 	db	3
  1065  007F7A  FC                 	db	252
  1066  007F7B  30                 	db	48
  1067  007F7C  00                 	db	0
  1068  007F7D  1F                 	db	31
  1069  007F7E  FF                 	db	255
  1070  007F7F  F8                 	db	248
  1071  007F80  02                 	db	2
  1072  007F81  00                 	db	0
  1073  007F82  08                 	db	8
  1074  007F83  00                 	db	0
  1075  007F84  00                 	db	0
  1076  007F85  00                 	db	0
  1077  007F86  00                 	db	0
  1078  007F87  00                 	db	0
  1079  007F88  00                 	db	0
  1080  007F89  01                 	db	1
  1081  007F8A  F8                 	db	248
  1082  007F8B  30                 	db	48
  1083  007F8C  00                 	db	0
  1084  007F8D  1F                 	db	31
  1085  007F8E  FF                 	db	255
  1086  007F8F  F8                 	db	248
  1087  007F90  03                 	db	3
  1088  007F91  FF                 	db	255
  1089  007F92  F8                 	db	248
  1090  007F93  00                 	db	0
  1091  007F94  00                 	db	0
  1092  007F95  00                 	db	0
  1093  007F96  00                 	db	0
  1094  007F97  00                 	db	0
  1095  007F98  00                 	db	0
  1096  007F99  00                 	db	0
  1097  007F9A  F0                 	db	240
  1098  007F9B  00                 	db	0
  1099  007F9C  00                 	db	0
  1100  007F9D  00                 	db	0
  1101  007F9E  00                 	db	0
  1102  007F9F  00                 	db	0
  1103  007FA0  00                 	db	0
  1104  007FA1  00                 	db	0
  1105  007FA2  00                 	db	0
  1106  007FA3  00                 	db	0
  1107  007FA4  00                 	db	0
  1108  007FA5  00                 	db	0
  1109  007FA6  00                 	db	0
  1110  007FA7  00                 	db	0
  1111  007FA8  00                 	db	0
  1112  007FA9  00                 	db	0
  1113  007FAA  60                 	db	96
  1114  007FAB  00                 	db	0
  1115  007FAC  00                 	db	0
  1116  007FAD  00                 	db	0
  1117  007FAE  00                 	db	0
  1118  007FAF  00                 	db	0
  1119  007FB0  00                 	db	0
  1120  007FB1  00                 	db	0
  1121  007FB2  00                 	db	0
  1122  007FB3  00                 	db	0
  1123  007FB4  00                 	db	0
  1124  007FB5  00                 	db	0
  1125  007FB6  00                 	db	0
  1126  007FB7  00                 	db	0
  1127  007FB8  00                 	db	0
  1128  007FB9  00                 	db	0
  1129  007FBA  00                 	db	0
  1130  007FBB  00                 	db	0
  1131  007FBC  00                 	db	0
  1132  007FBD  00                 	db	0
  1133  007FBE  00                 	db	0
  1134  007FBF  00                 	db	0
  1135  007FC0  00                 	db	0
  1136  007FC1  00                 	db	0
  1137  007FC2  00                 	db	0
  1138  007FC3  00                 	db	0
  1139  007FC4  00                 	db	0
  1140  007FC5  00                 	db	0
  1141  007FC6  00                 	db	0
  1142  007FC7  00                 	db	0
  1143  007FC8  00                 	db	0
  1144  007FC9  00                 	db	0
  1145  007FCA  00                 	db	0
  1146  007FCB  00                 	db	0
  1147  007FCC  00                 	db	0
  1148  007FCD  00                 	db	0
  1149  007FCE  00                 	db	0
  1150  007FCF  00                 	db	0
  1151  007FD0  00                 	db	0
  1152  007FD1  00                 	db	0
  1153  007FD2  00                 	db	0
  1154  007FD3  39                 	db	57
  1155  007FD4  80                 	db	128
  1156  007FD5  00                 	db	0
  1157  007FD6  00                 	db	0
  1158  007FD7  00                 	db	0
  1159  007FD8  00                 	db	0
  1160  007FD9  00                 	db	0
  1161  007FDA  00                 	db	0
  1162  007FDB  00                 	db	0
  1163  007FDC  00                 	db	0
  1164  007FDD  00                 	db	0
  1165  007FDE  00                 	db	0
  1166  007FDF  00                 	db	0
  1167  007FE0  00                 	db	0
  1168  007FE1  00                 	db	0
  1169  007FE2  00                 	db	0
  1170  007FE3                     __end_of_picture:
  1171                           	opt stack 0
  1172  007FE3                     STR_1:
  1173  007FE3  55                 	db	85	;'U'
  1174  007FE4  6E                 	db	110	;'n'
  1175  007FE5  69                 	db	105	;'i'
  1176  007FE6  76                 	db	118	;'v'
  1177  007FE7  65                 	db	101	;'e'
  1178  007FE8  72                 	db	114	;'r'
  1179  007FE9  73                 	db	115	;'s'
  1180  007FEA  69                 	db	105	;'i'
  1181  007FEB  74                 	db	116	;'t'
  1182  007FEC  79                 	db	121	;'y'
  1183  007FED  00                 	db	0
  1184  007FEE                     STR_4:
  1185  007FEE  5A                 	db	90	;'Z'
  1186  007FEF  49                 	db	73	;'I'
  1187  007FF0  50                 	db	80	;'P'
  1188  007FF1  53                 	db	83	;'S'
  1189  007FF2  2D                 	db	45
  1190  007FF3  45                 	db	69	;'E'
  1191  007FF4  56                 	db	86	;'V'
  1192  007FF5  00                 	db	0
  1193  007FF6                     STR_3:
  1194  007FF6  41                 	db	65	;'A'
  1195  007FF7  6B                 	db	107	;'k'
  1196  007FF8  72                 	db	114	;'r'
  1197  007FF9  6F                 	db	111	;'o'
  1198  007FFA  6E                 	db	110	;'n'
  1199  007FFB  00                 	db	0
  1200  007FFC                     STR_2:
  1201  007FFC  4F                 	db	79	;'O'
  1202  007FFD  46                 	db	70	;'F'
  1203  007FFE  00                 	db	0
  1204                           
  1205                           ; #config settings
  1206  007FFF  00                 	db	0	; dummy byte at the end
  1207  0000                     
  1208                           	psect	nvCOMRAM
  1209  000042                     __pnvCOMRAM:
  1210                           	opt stack 0
  1211  000042                     _timer0ReloadVal16bit:
  1212                           	opt stack 0
  1213  000042                     	ds	2
  1214                           
  1215                           	psect	nvBANK0
  1216  0000FE                     __pnvBANK0:
  1217                           	opt stack 0
  1218  0000FE                     _TMR2_InterruptHandler:
  1219                           	opt stack 0
  1220  0000FE                     	ds	2
  1221  0000                     _ANSELA	set	3896
  1222  0000                     _ANSELAbits	set	3896
  1223  0000                     _ANSELB	set	3897
  1224  0000                     _ANSELC	set	3898
  1225  0000                     _ANSELCbits	set	3898
  1226  0000                     _ANSELD	set	3899
  1227  0000                     _ANSELE	set	3900
  1228  0000                     _ADCON0	set	4034
  1229  0000                     _ADCON0bits	set	4034
  1230  0000                     _ADCON1	set	4033
  1231  0000                     _ADCON2	set	4032
  1232  0000                     _ADRESH	set	4036
  1233  0000                     _ADRESL	set	4035
  1234  0000                     _BAUD1CON	set	4024
  1235  0000                     _INTCON2bits	set	4081
  1236  0000                     _INTCONbits	set	4082
  1237  0000                     _IPR1bits	set	3999
  1238  0000                     _IPR2bits	set	4002
  1239  0000                     _LATA	set	3977
  1240  0000                     _LATB	set	3978
  1241  0000                     _LATC	set	3979
  1242  0000                     _LATCbits	set	3979
  1243  0000                     _LATD	set	3980
  1244  0000                     _LATE	set	3981
  1245  0000                     _OSCCON	set	4051
  1246  0000                     _OSCCON2	set	4050
  1247  0000                     _OSCTUNE	set	3995
  1248  0000                     _PIE1bits	set	3997
  1249  0000                     _PIE2bits	set	4000
  1250  0000                     _PIR1bits	set	3998
  1251  0000                     _PIR2bits	set	4001
  1252  0000                     _PORTAbits	set	3968
  1253  0000                     _PORTBbits	set	3969
  1254  0000                     _PORTDbits	set	3971
  1255  0000                     _PR2	set	4027
  1256  0000                     _RC1STA	set	4011
  1257  0000                     _RC1STAbits	set	4011
  1258  0000                     _RCONbits	set	4048
  1259  0000                     _RCREG1	set	4014
  1260  0000                     _SPBRG1	set	4015
  1261  0000                     _SPBRGH1	set	4016
  1262  0000                     _SSP1ADD	set	4040
  1263  0000                     _SSP1BUF	set	4041
  1264  0000                     _SSP1CON1	set	4038
  1265  0000                     _SSP1CON1bits	set	4038
  1266  0000                     _SSP1CON2bits	set	4037
  1267  0000                     _SSP1CON3	set	4043
  1268  0000                     _SSP1STAT	set	4039
  1269  0000                     _T0CON	set	4053
  1270  0000                     _T0CONbits	set	4053
  1271  0000                     _T2CON	set	4026
  1272  0000                     _T2CONbits	set	4026
  1273  0000                     _TMR0H	set	4055
  1274  0000                     _TMR0L	set	4054
  1275  0000                     _TMR2	set	4028
  1276  0000                     _TRISA	set	3986
  1277  0000                     _TRISAbits	set	3986
  1278  0000                     _TRISB	set	3987
  1279  0000                     _TRISC	set	3988
  1280  0000                     _TRISCbits	set	3988
  1281  0000                     _TRISD	set	3989
  1282  0000                     _TRISE	set	3990
  1283  0000                     _TX1STA	set	4012
  1284  0000                     _TXREG1	set	4013
  1285  0000                     _WPUB	set	3937
  1286  0000                     _LATA3	set	31819
  1287  0000                     _LATA6	set	31822
  1288  0000                     _LATA7	set	31823
  1289  0000                     _LATC1	set	31833
  1290  0000                     _LATE0	set	31848
  1291  0000                     _LATE1	set	31849
  1292  0000                     _LATE2	set	31850
  1293                           
  1294                           	psect	cinit
  1295  00286E                     __pcinit:
  1296                           	opt stack 0
  1297  00286E                     start_initialization:
  1298                           	opt stack 0
  1299  00286E                     __initialization:
  1300                           	opt stack 0
  1301                           
  1302                           ; Clear objects allocated to BANK5 (206 bytes)
  1303  00286E  EE05  F000         	lfsr	0,__pbssBANK5
  1304  002872  0ECE               	movlw	206
  1305  002874                     clear_0:
  1306  002874  6AEE               	clrf	postinc0,c
  1307  002876  06E8               	decf	wreg,f,c
  1308  002878  E1FD               	bnz	clear_0
  1309                           
  1310                           ; Clear objects allocated to BANK4 (206 bytes)
  1311  00287A  EE04  F000         	lfsr	0,__pbssBANK4
  1312  00287E  0ECE               	movlw	206
  1313  002880                     clear_1:
  1314  002880  6AEE               	clrf	postinc0,c
  1315  002882  06E8               	decf	wreg,f,c
  1316  002884  E1FD               	bnz	clear_1
  1317                           
  1318                           ; Clear objects allocated to BANK3 (200 bytes)
  1319  002886  EE03  F000         	lfsr	0,__pbssBANK3
  1320  00288A  0EC8               	movlw	200
  1321  00288C                     clear_2:
  1322  00288C  6AEE               	clrf	postinc0,c
  1323  00288E  06E8               	decf	wreg,f,c
  1324  002890  E1FD               	bnz	clear_2
  1325                           
  1326                           ; Clear objects allocated to BANK2 (206 bytes)
  1327  002892  EE02  F000         	lfsr	0,__pbssBANK2
  1328  002896  0ECE               	movlw	206
  1329  002898                     clear_3:
  1330  002898  6AEE               	clrf	postinc0,c
  1331  00289A  06E8               	decf	wreg,f,c
  1332  00289C  E1FD               	bnz	clear_3
  1333                           
  1334                           ; Clear objects allocated to BANK1 (57 bytes)
  1335  00289E  EE01  F000         	lfsr	0,__pbssBANK1
  1336  0028A2  0E39               	movlw	57
  1337  0028A4                     clear_4:
  1338  0028A4  6AEE               	clrf	postinc0,c
  1339  0028A6  06E8               	decf	wreg,f,c
  1340  0028A8  E1FD               	bnz	clear_4
  1341                           
  1342                           ; Clear objects allocated to BANK0 (146 bytes)
  1343  0028AA  EE00  F060         	lfsr	0,__pbssBANK0
  1344  0028AE  0E92               	movlw	146
  1345  0028B0                     clear_5:
  1346  0028B0  6AEE               	clrf	postinc0,c
  1347  0028B2  06E8               	decf	wreg,f,c
  1348  0028B4  E1FD               	bnz	clear_5
  1349                           
  1350                           ; Clear objects allocated to COMRAM (23 bytes)
  1351  0028B6  EE00  F02B         	lfsr	0,__pbssCOMRAM
  1352  0028BA  0E17               	movlw	23
  1353  0028BC                     clear_6:
  1354  0028BC  6AEE               	clrf	postinc0,c
  1355  0028BE  06E8               	decf	wreg,f,c
  1356  0028C0  E1FD               	bnz	clear_6
  1357                           
  1358                           ; Initialize objects allocated to COMRAM (1 bytes)
  1359                           ; load TBLPTR registers with __pidataCOMRAM
  1360  0028C2  0EFE               	movlw	low __pidataCOMRAM
  1361  0028C4  6EF6               	movwf	tblptrl,c
  1362  0028C6  0E31               	movlw	high __pidataCOMRAM
  1363  0028C8  6EF7               	movwf	tblptrh,c
  1364  0028CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1365  0028CC  6EF8               	movwf	tblptru,c
  1366  0028CE  0009               	tblrd		*+	;fetch initializer
  1367  0028D0  CFF5 F044          	movff	tablat,__pdataCOMRAM
  1368  0028D4                     end_of_initialization:
  1369                           	opt stack 0
  1370  0028D4                     __end_of__initialization:
  1371                           	opt stack 0
  1372  0028D4  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1373  0028D6  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1374  0028D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1375  0028DA  6EF8               	movwf	tblptru,c
  1376  0028DC  0100               	movlb	0
  1377  0028DE  EF2D  F00E         	goto	_main	;jump to C main() function
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           postinc0	equ	0xFEE
  1383                           wreg	equ	0xFE8
  1384                           
  1385                           	psect	bssCOMRAM
  1386  00002B                     __pbssCOMRAM:
  1387                           	opt stack 0
  1388  00002B                     _group:
  1389                           	opt stack 0
  1390  00002B                     	ds	2
  1391  00002D                     _p_i2c1_trb_current:
  1392                           	opt stack 0
  1393  00002D                     	ds	2
  1394  00002F                     _serial_available:
  1395                           	opt stack 0
  1396  00002F                     	ds	2
  1397  000031                     _serial_read:
  1398                           	opt stack 0
  1399  000031                     	ds	2
  1400  000033                     _serial_write:
  1401                           	opt stack 0
  1402  000033                     	ds	2
  1403  000035                     I2C1_ISR@i2c_10bit_address_restart:
  1404                           	opt stack 0
  1405  000035                     	ds	1
  1406  000036                     _AKNAKsend:
  1407                           	opt stack 0
  1408  000036                     	ds	1
  1409  000037                     _calc_CS:
  1410                           	opt stack 0
  1411  000037                     	ds	1
  1412  000038                     _i2c1_state:
  1413                           	opt stack 0
  1414  000038                     	ds	1
  1415  000039                     _maxDataAddress:
  1416                           	opt stack 0
  1417  000039                     	ds	1
  1418  00003A                     _moduleAddress:
  1419                           	opt stack 0
  1420  00003A                     	ds	1
  1421  00003B                     _returnAddress:
  1422                           	opt stack 0
  1423  00003B                     	ds	1
  1424  00003C                     _rx_address:
  1425                           	opt stack 0
  1426  00003C                     	ds	1
  1427  00003D                     _rx_array_inx:
  1428                           	opt stack 0
  1429  00003D                     	ds	1
  1430  00003E                     _rx_len:
  1431                           	opt stack 0
  1432  00003E                     	ds	1
  1433  00003F                     _time:
  1434                           	opt stack 0
  1435  00003F                     	ds	1
  1436  000040                     I2C1_ISR@i2c_address:
  1437                           	opt stack 0
  1438  000040                     	ds	2
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           
  1446                           	psect	dataCOMRAM
  1447  000044                     __pdataCOMRAM:
  1448                           	opt stack 0
  1449  000044                     _Transmit_stall:
  1450                           	opt stack 0
  1451  000044                     	ds	1
  1452                           tblptru	equ	0xFF8
  1453                           tblptrh	equ	0xFF7
  1454                           tblptrl	equ	0xFF6
  1455                           tablat	equ	0xFF5
  1456                           postinc0	equ	0xFEE
  1457                           wreg	equ	0xFE8
  1458                           
  1459                           	psect	bssBANK0
  1460  000060                     __pbssBANK0:
  1461                           	opt stack 0
  1462  000060                     _displaybuffer:
  1463                           	opt stack 0
  1464  000060                     	ds	40
  1465  000088                     _LED_array:
  1466                           	opt stack 0
  1467  000088                     	ds	16
  1468  000098                     _LEDNUM_ENAB:
  1469                           	opt stack 0
  1470  000098                     	ds	12
  1471  0000A4                     _LEDState:
  1472                           	opt stack 0
  1473  0000A4                     	ds	12
  1474  0000B0                     _butnarray:
  1475                           	opt stack 0
  1476  0000B0                     	ds	8
  1477  0000B8                     _i2c1_object:
  1478                           	opt stack 0
  1479  0000B8                     	ds	7
  1480  0000BF                     I2C1_ISR@i2c_bytes_left:
  1481                           	opt stack 0
  1482  0000BF                     	ds	2
  1483  0000C1                     I2C1_ISR@pi2c_buf_ptr:
  1484                           	opt stack 0
  1485  0000C1                     	ds	2
  1486  0000C3                     _DataBarGraphA:
  1487                           	opt stack 0
  1488  0000C3                     	ds	2
  1489  0000C5                     _DataBarGraphB:
  1490                           	opt stack 0
  1491  0000C5                     	ds	2
  1492  0000C7                     _addressErrorCounter:
  1493                           	opt stack 0
  1494  0000C7                     	ds	2
  1495  0000C9                     _alignErrorCounter:
  1496                           	opt stack 0
  1497  0000C9                     	ds	2
  1498  0000CB                     _crcErrorCounter:
  1499                           	opt stack 0
  1500  0000CB                     	ds	2
  1501  0000CD                     _dataAdressErrorCounter:
  1502                           	opt stack 0
  1503  0000CD                     	ds	2
  1504  0000CF                     _i:
  1505                           	opt stack 0
  1506  0000CF                     	ds	2
  1507  0000D1                     _i2c1_trb_count:
  1508                           	opt stack 0
  1509  0000D1                     	ds	2
  1510  0000D3                     _k:
  1511                           	opt stack 0
  1512  0000D3                     	ds	2
  1513  0000D5                     _p_i2c1_current:
  1514                           	opt stack 0
  1515  0000D5                     	ds	2
  1516  0000D7                     _receiveArrayAddress:
  1517                           	opt stack 0
  1518  0000D7                     	ds	2
  1519  0000D9                     _sendStructAddress:
  1520                           	opt stack 0
  1521  0000D9                     	ds	2
  1522  0000DB                     _serial_peek:
  1523                           	opt stack 0
  1524  0000DB                     	ds	2
  1525  0000DD                     _timeOut:
  1526                           	opt stack 0
  1527  0000DD                     	ds	2
  1528  0000DF                     handleIndicators@oldIndicators:
  1529                           	opt stack 0
  1530  0000DF                     	ds	2
  1531  0000E1                     I2C1_MasterRead@trBlock:
  1532                           	opt stack 0
  1533  0000E1                     	ds	5
  1534  0000E6                     I2C1_MasterWrite@trBlock:
  1535                           	opt stack 0
  1536  0000E6                     	ds	5
  1537  0000EB                     _i2c1_tr_queue:
  1538                           	opt stack 0
  1539  0000EB                     	ds	5
  1540  0000F0                     _Buff:
  1541                           	opt stack 0
  1542  0000F0                     	ds	2
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           postinc0	equ	0xFEE
  1548                           wreg	equ	0xFE8
  1549                           
  1550                           	psect	bssBANK1
  1551  000100                     __pbssBANK1:
  1552                           	opt stack 0
  1553  000100                     _receiveArray:
  1554                           	opt stack 0
  1555  000100                     	ds	40
  1556  000128                     _crc_buffer:
  1557                           	opt stack 0
  1558  000128                     	ds	17
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           
  1566                           	psect	bssBANK2
  1567  000200                     __pbssBANK2:
  1568                           	opt stack 0
  1569  000200                     _ring_buffer:
  1570                           	opt stack 0
  1571  000200                     	ds	206
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           
  1579                           	psect	bssBANK3
  1580  000300                     __pbssBANK3:
  1581                           	opt stack 0
  1582  000300                     _rx_buffer:
  1583                           	opt stack 0
  1584  000300                     	ds	200
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           
  1592                           	psect	bssBANK4
  1593  000400                     __pbssBANK4:
  1594                           	opt stack 0
  1595  000400                     _input_buffer:
  1596                           	opt stack 0
  1597  000400                     	ds	206
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           
  1605                           	psect	bssBANK5
  1606  000500                     __pbssBANK5:
  1607                           	opt stack 0
  1608  000500                     _output_buffer:
  1609                           	opt stack 0
  1610  000500                     	ds	206
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           
  1618                           	psect	cstackBANK1
  1619  000139                     __pcstackBANK1:
  1620                           	opt stack 0
  1621  000139                     ??_LEDsetBar:
  1622  000139                     ?___fttol:
  1623                           	opt stack 0
  1624  000139                     LEDBsetBrightness@writeBuffer:
  1625                           	opt stack 0
  1626  000139                     LEDblinkRate@writeBuffer:
  1627                           	opt stack 0
  1628  000139                     begin@ptr:
  1629                           	opt stack 0
  1630  000139                     receiveData@holder:
  1631                           	opt stack 0
  1632  000139                     ___fttol@f1:
  1633                           	opt stack 0
  1634  000139                     oledPutChar@bytes:
  1635                           	opt stack 0
  1636  000139                     LEDwriteDisplay@writeBuffer:
  1637                           	opt stack 0
  1638                           
  1639                           ; 20 bytes @ 0x0
  1640  000139                     	ds	2
  1641  00013B                     begin@maxSize:
  1642                           	opt stack 0
  1643  00013B                     LEDBsetBrightness@timeOut:
  1644                           	opt stack 0
  1645  00013B                     LEDblinkRate@timeOut:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x2
  1649  00013B                     	ds	1
  1650  00013C                     begin@givenAddress:
  1651                           	opt stack 0
  1652  00013C                     receiveData@holder_2468:
  1653                           	opt stack 0
  1654                           
  1655                           ; 3 bytes @ 0x3
  1656  00013C                     	ds	1
  1657  00013D                     ??___fttol:
  1658  00013D                     LEDBsetBrightness@status:
  1659                           	opt stack 0
  1660  00013D                     LEDblinkRate@status:
  1661                           	opt stack 0
  1662  00013D                     begin@error:
  1663                           	opt stack 0
  1664                           
  1665                           ; 1 bytes @ 0x4
  1666  00013D                     	ds	1
  1667  00013E                     begin@stufftosend:
  1668                           	opt stack 0
  1669  00013E                     LEDbegin@writeBuffer:
  1670                           	opt stack 0
  1671                           
  1672                           ; 3 bytes @ 0x5
  1673  00013E                     	ds	1
  1674  00013F                     receiveData@crcHolder:
  1675                           	opt stack 0
  1676                           
  1677                           ; 1 bytes @ 0x6
  1678  00013F                     	ds	1
  1679  000140                     receiveData@crcHolder_2469:
  1680                           	opt stack 0
  1681  000140                     begin@stufftoreceive:
  1682                           	opt stack 0
  1683                           
  1684                           ; 2 bytes @ 0x7
  1685  000140                     	ds	1
  1686  000141                     LEDbegin@timeOut:
  1687                           	opt stack 0
  1688  000141                     receiveData@u:
  1689                           	opt stack 0
  1690                           
  1691                           ; 2 bytes @ 0x8
  1692  000141                     	ds	1
  1693  000142                     ___fttol@sign1:
  1694                           	opt stack 0
  1695  000142                     begin@stuffavailable:
  1696                           	opt stack 0
  1697  000142                     oledPutChar@base:
  1698                           	opt stack 0
  1699                           
  1700                           ; 2 bytes @ 0x9
  1701  000142                     	ds	1
  1702  000143                     LEDbegin@i2c_addr:
  1703                           	opt stack 0
  1704  000143                     receiveData@r:
  1705                           	opt stack 0
  1706  000143                     ___fttol@lval:
  1707                           	opt stack 0
  1708                           
  1709                           ; 4 bytes @ 0xA
  1710  000143                     	ds	1
  1711  000144                     LEDbegin@status:
  1712                           	opt stack 0
  1713  000144                     oledPutChar@ch:
  1714                           	opt stack 0
  1715  000144                     begin@stuffpeek:
  1716                           	opt stack 0
  1717                           
  1718                           ; 2 bytes @ 0xB
  1719  000144                     	ds	1
  1720  000145                     oledPutChar@status:
  1721                           	opt stack 0
  1722                           
  1723                           ; 1 bytes @ 0xC
  1724  000145                     	ds	2
  1725  000147                     ___fttol@exp1:
  1726                           	opt stack 0
  1727                           
  1728                           ; 1 bytes @ 0xE
  1729  000147                     	ds	2
  1730  000149                     LEDsetValue@value:
  1731                           	opt stack 0
  1732                           
  1733                           ; 2 bytes @ 0x10
  1734  000149                     	ds	2
  1735  00014B                     LEDsetValue@color:
  1736                           	opt stack 0
  1737                           
  1738                           ; 2 bytes @ 0x12
  1739  00014B                     	ds	2
  1740  00014D                     ??_LEDsetValue:
  1741  00014D                     LEDwriteDisplay@i2c_addr:
  1742                           	opt stack 0
  1743                           
  1744                           ; 1 bytes @ 0x14
  1745  00014D                     	ds	1
  1746  00014E                     LEDsetValue@k:
  1747                           	opt stack 0
  1748  00014E                     LEDwriteDisplay@timeOut:
  1749                           	opt stack 0
  1750                           
  1751                           ; 2 bytes @ 0x15
  1752  00014E                     	ds	2
  1753  000150                     LEDwriteDisplay@status:
  1754                           	opt stack 0
  1755                           
  1756                           ; 1 bytes @ 0x17
  1757  000150                     	ds	1
  1758                           tblptru	equ	0xFF8
  1759                           tblptrh	equ	0xFF7
  1760                           tblptrl	equ	0xFF6
  1761                           tablat	equ	0xFF5
  1762                           postinc0	equ	0xFEE
  1763                           wreg	equ	0xFE8
  1764                           
  1765                           	psect	cstackBANK0
  1766  0000F2                     __pcstackBANK0:
  1767                           	opt stack 0
  1768  0000F2                     ??_receiveData:
  1769  0000F2                     ?___ftmul:
  1770                           	opt stack 0
  1771  0000F2                     sendData@whereToSend:
  1772                           	opt stack 0
  1773  0000F2                     I2C1_MasterWrite@pdata:
  1774                           	opt stack 0
  1775  0000F2                     handleIndicators@i:
  1776                           	opt stack 0
  1777  0000F2                     ToSend@what:
  1778                           	opt stack 0
  1779  0000F2                     ___ftmul@f1:
  1780                           	opt stack 0
  1781                           
  1782                           ; 3 bytes @ 0x0
  1783  0000F2                     	ds	1
  1784  0000F3                     sendData@CS:
  1785                           	opt stack 0
  1786                           
  1787                           ; 1 bytes @ 0x1
  1788  0000F3                     	ds	1
  1789  0000F4                     I2C1_MasterWrite@length:
  1790                           	opt stack 0
  1791  0000F4                     sendData@i:
  1792                           	opt stack 0
  1793                           
  1794                           ; 2 bytes @ 0x2
  1795  0000F4                     	ds	1
  1796  0000F5                     ___ftmul@f2:
  1797                           	opt stack 0
  1798                           
  1799                           ; 3 bytes @ 0x3
  1800  0000F5                     	ds	1
  1801  0000F6                     I2C1_MasterWrite@address:
  1802                           	opt stack 0
  1803                           
  1804                           ; 2 bytes @ 0x4
  1805  0000F6                     	ds	2
  1806  0000F8                     ___ftmul@exp:
  1807                           	opt stack 0
  1808  0000F8                     I2C1_MasterWrite@pflag:
  1809                           	opt stack 0
  1810                           
  1811                           ; 2 bytes @ 0x6
  1812  0000F8                     	ds	1
  1813  0000F9                     ___ftmul@f3_as_product:
  1814                           	opt stack 0
  1815                           
  1816                           ; 3 bytes @ 0x7
  1817  0000F9                     	ds	1
  1818  0000FA                     oledClear@row:
  1819                           	opt stack 0
  1820  0000FA                     oledPrint@s:
  1821                           	opt stack 0
  1822                           
  1823                           ; 2 bytes @ 0x8
  1824  0000FA                     	ds	2
  1825  0000FC                     ___ftmul@cntr:
  1826                           	opt stack 0
  1827  0000FC                     oledClear@col:
  1828                           	opt stack 0
  1829                           
  1830                           ; 2 bytes @ 0xA
  1831  0000FC                     	ds	1
  1832  0000FD                     ___ftmul@sign:
  1833                           	opt stack 0
  1834                           
  1835                           ; 1 bytes @ 0xB
  1836  0000FD                     	ds	1
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           
  1844                           	psect	cstackCOMRAM
  1845  000001                     __pcstackCOMRAM:
  1846                           	opt stack 0
  1847  000001                     ??_I2C1_Stop:
  1848  000001                     ??_TMR2_CallBack:
  1849  000001                     ?i2_UART_buff_size:
  1850                           	opt stack 0
  1851  000001                     ?i2_UART_buff_modulo_inc:
  1852                           	opt stack 0
  1853  000001                     ReadButtonState@btnnum:
  1854                           	opt stack 0
  1855  000001                     i2UART_buff_size@_this:
  1856                           	opt stack 0
  1857  000001                     i2UART_buff_modulo_inc@value:
  1858                           	opt stack 0
  1859                           
  1860                           ; 2 bytes @ 0x0
  1861  000001                     	ds	2
  1862  000003                     ??_ReadButtonState:
  1863  000003                     I2C1_Stop@completion_code:
  1864                           	opt stack 0
  1865  000003                     TMR2_CallBack@i:
  1866                           	opt stack 0
  1867  000003                     i2UART_buff_modulo_inc@modulus:
  1868                           	opt stack 0
  1869                           
  1870                           ; 2 bytes @ 0x2
  1871  000003                     	ds	1
  1872  000004                     ??_I2C1_ISR:
  1873                           
  1874                           ; 1 bytes @ 0x3
  1875  000004                     	ds	1
  1876  000005                     TMR0_ISR@x:
  1877                           	opt stack 0
  1878  000005                     i2UART_buff_modulo_inc@my_value:
  1879                           	opt stack 0
  1880                           
  1881                           ; 2 bytes @ 0x4
  1882  000005                     	ds	2
  1883  000007                     i2UART_buff_put@_this:
  1884                           	opt stack 0
  1885  000007                     i2UART_buff_get@_this:
  1886                           	opt stack 0
  1887                           
  1888                           ; 2 bytes @ 0x6
  1889  000007                     	ds	2
  1890  000009                     ??i2_UART_buff_get:
  1891  000009                     i2UART_buff_put@c:
  1892                           	opt stack 0
  1893                           
  1894                           ; 1 bytes @ 0x8
  1895  000009                     	ds	1
  1896  00000A                     ??i2_UART_buff_put:
  1897                           
  1898                           ; 1 bytes @ 0x9
  1899  00000A                     	ds	1
  1900  00000B                     i2UART_buff_get@c:
  1901                           	opt stack 0
  1902                           
  1903                           ; 1 bytes @ 0xA
  1904  00000B                     	ds	1
  1905  00000C                     EUSART1_Receive_ISR@data:
  1906                           	opt stack 0
  1907                           
  1908                           ; 1 bytes @ 0xB
  1909  00000C                     	ds	1
  1910  00000D                     ??_INTERRUPT_InterruptManager:
  1911                           
  1912                           ; 1 bytes @ 0xC
  1913  00000D                     	ds	14
  1914  00001B                     ?_GetDataBarGraphA:
  1915                           	opt stack 0
  1916  00001B                     ?_GetDataBarGraphB:
  1917                           	opt stack 0
  1918  00001B                     ?_FastTransfer_buffer_modulo_inc:
  1919                           	opt stack 0
  1920  00001B                     ?_UART_buff_modulo_inc:
  1921                           	opt stack 0
  1922  00001B                     ?_GetTime:
  1923                           	opt stack 0
  1924  00001B                     ?_UART_buff_size:
  1925                           	opt stack 0
  1926  00001B                     ?___awdiv:
  1927                           	opt stack 0
  1928  00001B                     ?___ftpack:
  1929                           	opt stack 0
  1930  00001B                     I2C1_MasterTRBInsert@count:
  1931                           	opt stack 0
  1932  00001B                     I2C1_MasterWriteTRBBuild@ptrb:
  1933                           	opt stack 0
  1934  00001B                     setLED@led:
  1935                           	opt stack 0
  1936  00001B                     Off_Led@led:
  1937                           	opt stack 0
  1938  00001B                     TMR2_SetInterruptHandler@InterruptHandler:
  1939                           	opt stack 0
  1940  00001B                     GetButtonState@btnnum:
  1941                           	opt stack 0
  1942  00001B                     DataBarGraphs@BGA:
  1943                           	opt stack 0
  1944  00001B                     CRC8@data:
  1945                           	opt stack 0
  1946  00001B                     FastTransfer_buffer_modulo_inc@value:
  1947                           	opt stack 0
  1948  00001B                     crcBufS_put@_this:
  1949                           	opt stack 0
  1950  00001B                     UART_buff_size@_this:
  1951                           	opt stack 0
  1952  00001B                     UART_buff_modulo_inc@value:
  1953                           	opt stack 0
  1954  00001B                     Delay@wait:
  1955                           	opt stack 0
  1956  00001B                     ___awdiv@dividend:
  1957                           	opt stack 0
  1958  00001B                     memmove@d1:
  1959                           	opt stack 0
  1960  00001B                     memset@p1:
  1961                           	opt stack 0
  1962  00001B                     ___ftpack@arg:
  1963                           	opt stack 0
  1964                           
  1965                           ; 3 bytes @ 0x1A
  1966  00001B                     	ds	2
  1967  00001D                     ??_Delay:
  1968  00001D                     ??_setLED:
  1969  00001D                     ??_Off_Led:
  1970  00001D                     ??_GetButtonState:
  1971  00001D                     ?_Receive_available:
  1972                           	opt stack 0
  1973  00001D                     CRC8@len:
  1974                           	opt stack 0
  1975  00001D                     crcBufS_put@address:
  1976                           	opt stack 0
  1977  00001D                     I2C1_MasterTRBInsert@ptrb_list:
  1978                           	opt stack 0
  1979  00001D                     I2C1_MasterWriteTRBBuild@pdata:
  1980                           	opt stack 0
  1981  00001D                     DataBarGraphs@BGB:
  1982                           	opt stack 0
  1983  00001D                     FastTransfer_buffer_modulo_inc@modulus:
  1984                           	opt stack 0
  1985  00001D                     UART_buff_modulo_inc@modulus:
  1986                           	opt stack 0
  1987  00001D                     ___awdiv@divisor:
  1988                           	opt stack 0
  1989  00001D                     memmove@s1:
  1990                           	opt stack 0
  1991  00001D                     memset@c:
  1992                           	opt stack 0
  1993                           
  1994                           ; 2 bytes @ 0x1C
  1995  00001D                     	ds	1
  1996  00001E                     CRC8@sum:
  1997                           	opt stack 0
  1998  00001E                     crcBufS_put@oldCRC:
  1999                           	opt stack 0
  2000  00001E                     ___ftpack@exp:
  2001                           	opt stack 0
  2002  00001E                     Delay@x:
  2003                           	opt stack 0
  2004                           
  2005                           ; 2 bytes @ 0x1D
  2006  00001E                     	ds	1
  2007  00001F                     CRC8@extract:
  2008                           	opt stack 0
  2009  00001F                     crcBufS_put@status:
  2010                           	opt stack 0
  2011  00001F                     ___awdiv@counter:
  2012                           	opt stack 0
  2013  00001F                     ___ftpack@sign:
  2014                           	opt stack 0
  2015  00001F                     I2C1_MasterTRBInsert@pflag:
  2016                           	opt stack 0
  2017  00001F                     I2C1_MasterWriteTRBBuild@length:
  2018                           	opt stack 0
  2019  00001F                     SetLEDOut@lednum:
  2020                           	opt stack 0
  2021  00001F                     FastTransfer_buffer_modulo_inc@my_value:
  2022                           	opt stack 0
  2023  00001F                     UART_buff_modulo_inc@my_value:
  2024                           	opt stack 0
  2025  00001F                     memmove@n:
  2026                           	opt stack 0
  2027  00001F                     memset@n:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x1E
  2031  00001F                     	ds	1
  2032  000020                     ??_crcBufS_put:
  2033  000020                     ??___ftpack:
  2034  000020                     CRC8@tempI:
  2035                           	opt stack 0
  2036  000020                     ___awdiv@sign:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x1F
  2040  000020                     	ds	1
  2041  000021                     ??_memmove:
  2042  000021                     ?_buttonsCollector:
  2043                           	opt stack 0
  2044  000021                     CRC8@crc:
  2045                           	opt stack 0
  2046  000021                     I2C1_MasterWriteTRBBuild@address:
  2047                           	opt stack 0
  2048  000021                     SetLEDOut@state:
  2049                           	opt stack 0
  2050  000021                     FastTransfer_buffer_put@_this:
  2051                           	opt stack 0
  2052  000021                     UART_buff_put@_this:
  2053                           	opt stack 0
  2054  000021                     UART_buff_get@_this:
  2055                           	opt stack 0
  2056  000021                     ___awdiv@quotient:
  2057                           	opt stack 0
  2058  000021                     memset@p:
  2059                           	opt stack 0
  2060                           
  2061                           ; 2 bytes @ 0x20
  2062  000021                     	ds	2
  2063  000023                     ??_I2C1_MasterWriteTRBBuild:
  2064  000023                     ??_buttonsCollector:
  2065  000023                     ??_SetLEDOut:
  2066  000023                     ??_UART_buff_get:
  2067  000023                     ?___lwtoft:
  2068                           	opt stack 0
  2069  000023                     FastTransfer_buffer_put@towhere:
  2070                           	opt stack 0
  2071  000023                     UART_buff_put@c:
  2072                           	opt stack 0
  2073  000023                     LEDsetBar@bar:
  2074                           	opt stack 0
  2075  000023                     FastTransfer_buffer_flush@_this:
  2076                           	opt stack 0
  2077  000023                     UART_buff_init@_this:
  2078                           	opt stack 0
  2079  000023                     ___lwtoft@c:
  2080                           	opt stack 0
  2081  000023                     memmove@d:
  2082                           	opt stack 0
  2083                           
  2084                           ; 2 bytes @ 0x22
  2085  000023                     	ds	1
  2086  000024                     ??_UART_buff_put:
  2087  000024                     FastTransfer_buffer_put@towhat:
  2088                           	opt stack 0
  2089                           
  2090                           ; 2 bytes @ 0x23
  2091  000024                     	ds	1
  2092  000025                     UART_buff_get@c:
  2093                           	opt stack 0
  2094  000025                     OLED_command@com:
  2095                           	opt stack 0
  2096  000025                     LEDBsetBrightness@b:
  2097                           	opt stack 0
  2098  000025                     LEDblinkRate@b:
  2099                           	opt stack 0
  2100  000025                     LEDsetBar@color:
  2101                           	opt stack 0
  2102  000025                     handleIndicators@receivedIndicators:
  2103                           	opt stack 0
  2104  000025                     FastTransfer_buffer_flush@clearBuffer:
  2105                           	opt stack 0
  2106  000025                     memmove@s:
  2107                           	opt stack 0
  2108                           
  2109                           ; 2 bytes @ 0x24
  2110  000025                     	ds	1
  2111  000026                     ??_FastTransfer_buffer_put:
  2112  000026                     ??___ftmul:
  2113  000026                     Send_put@_data:
  2114                           	opt stack 0
  2115  000026                     OLED_command@status:
  2116                           	opt stack 0
  2117  000026                     buttonsCollector@sendVal:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x25
  2121  000026                     	ds	1
  2122  000027                     ??_handleIndicators:
  2123  000027                     ??_sendData:
  2124  000027                     ??_oledPutChar:
  2125  000027                     LEDBsetBrightness@i2c_addr:
  2126                           	opt stack 0
  2127  000027                     LEDblinkRate@i2c_addr:
  2128                           	opt stack 0
  2129  000027                     oledGotoYX@Column:
  2130                           	opt stack 0
  2131  000027                     LEDsetBar@c:
  2132                           	opt stack 0
  2133                           
  2134                           ; 2 bytes @ 0x26
  2135  000027                     	ds	1
  2136  000028                     ??_oledGotoYX:
  2137  000028                     buttonsCollector@i:
  2138                           	opt stack 0
  2139                           
  2140                           ; 2 bytes @ 0x27
  2141  000028                     	ds	1
  2142  000029                     oledGotoYX@Row:
  2143                           	opt stack 0
  2144  000029                     LEDsetBar@a:
  2145                           	opt stack 0
  2146                           
  2147                           ; 2 bytes @ 0x28
  2148  000029                     	ds	1
  2149  00002A                     ToSend@where:
  2150                           	opt stack 0
  2151                           
  2152                           ; 1 bytes @ 0x29
  2153  00002A                     	ds	1
  2154  00002B                     tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           postinc0	equ	0xFEE
  2159                           wreg	equ	0xFE8
  2160                           
  2161                           ; 1 bytes @ 0x2A
  2162 ;;
  2163 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2164 ;;
  2165 ;; *************** function _main *****************
  2166 ;; Defined at:
  2167 ;;		line 37 in file "main.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2181 ;;      Params:         0       0       0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels required when called:   10
  2187 ;; This function calls:
  2188 ;;		_ClearTime
  2189 ;;		_GetDataBarGraphA
  2190 ;;		_GetDataBarGraphB
  2191 ;;		_GetTime
  2192 ;;		_LEDbegin
  2193 ;;		_LEDsetValue
  2194 ;;		_LEDwriteDisplay
  2195 ;;		_SYSTEM_Initialize
  2196 ;;		_Setupdisplay
  2197 ;;		_Splash
  2198 ;;		___ftmul
  2199 ;;		___fttol
  2200 ;;		___lwtoft
  2201 ;;		_updateComms
  2202 ;; This function is called by:
  2203 ;;		Startup code after reset
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text0
  2208  001C5A                     __ptext0:
  2209                           	opt stack 0
  2210  001C5A                     _main:
  2211                           	opt stack 21
  2212                           
  2213                           ;main.c: 39: SYSTEM_Initialize();
  2214                           
  2215                           ;incstack = 0
  2216  001C5A  EC71  F014         	call	_SYSTEM_Initialize	;wreg free
  2217                           
  2218                           ;main.c: 58: (INTCONbits.GIE = 1);
  2219  001C5E  8EF2               	bsf	intcon,7,c	;volatile
  2220                           
  2221                           ;main.c: 61: (INTCONbits.PEIE = 1);
  2222  001C60  8CF2               	bsf	intcon,6,c	;volatile
  2223                           
  2224                           ;main.c: 69: LEDbegin(0x70);
  2225  001C62  0E70               	movlw	112
  2226  001C64  ECAE  F011         	call	_LEDbegin
  2227                           
  2228                           ;main.c: 70: LEDbegin(0x71);
  2229  001C68  0E71               	movlw	113
  2230  001C6A  ECAE  F011         	call	_LEDbegin
  2231                           
  2232                           ;main.c: 71: Setupdisplay();
  2233  001C6E  ECD8  F018         	call	_Setupdisplay	;wreg free
  2234                           
  2235                           ;main.c: 72: Splash();
  2236  001C72  ECE3  F014         	call	_Splash	;wreg free
  2237                           
  2238                           ;main.c: 74: do { LATA3 = 1; } while(0);
  2239  001C76  8689               	bsf	3977,3,c	;volatile
  2240  001C78                     l7410:
  2241                           
  2242                           ;main.c: 76: updateComms();
  2243  001C78  EC85  F016         	call	_updateComms	;wreg free
  2244                           
  2245                           ;main.c: 78: if (GetTime() > 2) {
  2246  001C7C  ECEC  F018         	call	_GetTime	;wreg free
  2247  001C80  BE1C               	btfsc	?_GetTime+1,7,c
  2248  001C82  D7FA               	goto	l7410
  2249  001C84  501C               	movf	?_GetTime+1,w,c
  2250  001C86  E104               	bnz	u8630
  2251  001C88  0E03               	movlw	3
  2252  001C8A  5C1B               	subwf	?_GetTime,w,c
  2253  001C8C  A0D8               	btfss	status,0,c
  2254  001C8E  D7F4               	goto	l7410
  2255  001C90                     u8630:
  2256                           
  2257                           ;main.c: 79: LEDsetValue(GetDataBarGraphA()*0.24, 1);
  2258  001C90  0EC3               	movlw	195
  2259  001C92  0100               	movlb	0	; () banked
  2260  001C94  6FF5               	movwf	___ftmul@f2& (0+255),b
  2261  001C96  0E75               	movlw	117
  2262  001C98  0100               	movlb	0	; () banked
  2263  001C9A  6FF6               	movwf	(___ftmul@f2+1)& (0+255),b
  2264  001C9C  0E3E               	movlw	62
  2265  001C9E  0100               	movlb	0	; () banked
  2266  001CA0  6FF7               	movwf	(___ftmul@f2+2)& (0+255),b
  2267  001CA2  ECE7  F018         	call	_GetDataBarGraphA	;wreg free
  2268  001CA6  C01B  F023         	movff	?_GetDataBarGraphA,___lwtoft@c
  2269  001CAA  C01C  F024         	movff	?_GetDataBarGraphA+1,___lwtoft@c+1
  2270  001CAE  EC2D  F018         	call	___lwtoft	;wreg free
  2271  001CB2  C023  F0F2         	movff	?___lwtoft,___ftmul@f1
  2272  001CB6  C024  F0F3         	movff	?___lwtoft+1,___ftmul@f1+1
  2273  001CBA  C025  F0F4         	movff	?___lwtoft+2,___ftmul@f1+2
  2274  001CBE  ECF6  F009         	call	___ftmul	;wreg free
  2275  001CC2  C0F2  F139         	movff	?___ftmul,___fttol@f1
  2276  001CC6  C0F3  F13A         	movff	?___ftmul+1,___fttol@f1+1
  2277  001CCA  C0F4  F13B         	movff	?___ftmul+2,___fttol@f1+2
  2278  001CCE  ECE6  F00B         	call	___fttol	;wreg free
  2279  001CD2  C139  F149         	movff	?___fttol,LEDsetValue@value
  2280  001CD6  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  2281  001CDA  0E00               	movlw	0
  2282  001CDC  0101               	movlb	1	; () banked
  2283  001CDE  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  2284  001CE0  0E01               	movlw	1
  2285  001CE2  6F4B               	movwf	LEDsetValue@color& (0+255),b
  2286  001CE4  EC5C  F011         	call	_LEDsetValue	;wreg free
  2287                           
  2288                           ;main.c: 80: LEDwriteDisplay(0x70);
  2289  001CE8  0E70               	movlw	112
  2290  001CEA  EC9F  F00A         	call	_LEDwriteDisplay
  2291                           
  2292                           ;main.c: 81: LEDsetValue(GetDataBarGraphB()*0.24, 1);
  2293  001CEE  0EC3               	movlw	195
  2294  001CF0  0100               	movlb	0	; () banked
  2295  001CF2  6FF5               	movwf	___ftmul@f2& (0+255),b
  2296  001CF4  0E75               	movlw	117
  2297  001CF6  0100               	movlb	0	; () banked
  2298  001CF8  6FF6               	movwf	(___ftmul@f2+1)& (0+255),b
  2299  001CFA  0E3E               	movlw	62
  2300  001CFC  0100               	movlb	0	; () banked
  2301  001CFE  6FF7               	movwf	(___ftmul@f2+2)& (0+255),b
  2302  001D00  ECE2  F018         	call	_GetDataBarGraphB	;wreg free
  2303  001D04  C01B  F023         	movff	?_GetDataBarGraphB,___lwtoft@c
  2304  001D08  C01C  F024         	movff	?_GetDataBarGraphB+1,___lwtoft@c+1
  2305  001D0C  EC2D  F018         	call	___lwtoft	;wreg free
  2306  001D10  C023  F0F2         	movff	?___lwtoft,___ftmul@f1
  2307  001D14  C024  F0F3         	movff	?___lwtoft+1,___ftmul@f1+1
  2308  001D18  C025  F0F4         	movff	?___lwtoft+2,___ftmul@f1+2
  2309  001D1C  ECF6  F009         	call	___ftmul	;wreg free
  2310  001D20  C0F2  F139         	movff	?___ftmul,___fttol@f1
  2311  001D24  C0F3  F13A         	movff	?___ftmul+1,___fttol@f1+1
  2312  001D28  C0F4  F13B         	movff	?___ftmul+2,___fttol@f1+2
  2313  001D2C  ECE6  F00B         	call	___fttol	;wreg free
  2314  001D30  C139  F149         	movff	?___fttol,LEDsetValue@value
  2315  001D34  C13A  F14A         	movff	?___fttol+1,LEDsetValue@value+1
  2316  001D38  0E00               	movlw	0
  2317  001D3A  0101               	movlb	1	; () banked
  2318  001D3C  6F4C               	movwf	(LEDsetValue@color+1)& (0+255),b
  2319  001D3E  0E01               	movlw	1
  2320  001D40  6F4B               	movwf	LEDsetValue@color& (0+255),b
  2321  001D42  EC5C  F011         	call	_LEDsetValue	;wreg free
  2322                           
  2323                           ;main.c: 82: LEDwriteDisplay(0x71);
  2324  001D46  0E71               	movlw	113
  2325  001D48  EC9F  F00A         	call	_LEDwriteDisplay
  2326                           
  2327                           ;main.c: 83: do { LATA3 = ~LATA3; } while(0);
  2328  001D4C  B689               	btfsc	3977,3,c	;volatile
  2329  001D4E  D002               	goto	u8640
  2330  001D50  8689               	bsf	3977,3,c	;volatile
  2331  001D52  D001               	goto	l7418
  2332  001D54                     u8640:
  2333  001D54  9689               	bcf	3977,3,c	;volatile
  2334  001D56                     l7418:
  2335                           
  2336                           ;main.c: 84: ClearTime();
  2337  001D56  ECF4  F018         	call	_ClearTime	;wreg free
  2338  001D5A  D78E               	goto	l7410
  2339  001D5C                     __end_of_main:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           intcon	equ	0xFF2
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           status	equ	0xFD8
  2349                           
  2350 ;; *************** function _updateComms *****************
  2351 ;; Defined at:
  2352 ;;		line 12 in file "Communications.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2366 ;;      Params:         0       0       0       0       0       0       0
  2367 ;;      Locals:         0       0       0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0
  2369 ;;      Totals:         0       0       0       0       0       0       0
  2370 ;;Total ram usage:        0 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    9
  2373 ;; This function calls:
  2374 ;;		_DataBarGraphs
  2375 ;;		_handleIndicators
  2376 ;;		_receiveData
  2377 ;;		_respondECU
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text1
  2384  002D0A                     __ptext1:
  2385                           	opt stack 0
  2386  002D0A                     _updateComms:
  2387                           	opt stack 21
  2388                           
  2389                           ;Communications.c: 14: if (receiveData()) {
  2390                           
  2391                           ;incstack = 0
  2392  002D0A  EC6A  F000         	call	_receiveData	;wreg free
  2393  002D0E  0900               	iorlw	0
  2394  002D10  B4D8               	btfsc	status,2,c
  2395  002D12  0012               	return	
  2396                           
  2397                           ;Communications.c: 16: if (receiveArray[0] == 1) {
  2398  002D14  0101               	movlb	1	; () banked
  2399  002D16  0500               	decf	_receiveArray& (0+255),w,b	;volatile
  2400  002D18  0101               	movlb	1	; () banked
  2401  002D1A  1101               	iorwf	(_receiveArray+1)& (0+255),w,b	;volatile
  2402  002D1C  A4D8               	btfss	status,2,c
  2403  002D1E  0012               	return	
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;Communications.c: 17: respondECU();
  2407  002D20  ECA8  F016         	call	_respondECU	;wreg free
  2408                           
  2409                           ;Communications.c: 18: handleIndicators(receiveArray[2]);
  2410  002D24  C104  F025         	movff	_receiveArray+4,handleIndicators@receivedIndicators	;volatile
  2411  002D28  C105  F026         	movff	_receiveArray+5,handleIndicators@receivedIndicators+1	;volatile
  2412  002D2C  EC73  F013         	call	_handleIndicators	;wreg free
  2413                           
  2414                           ;Communications.c: 19: DataBarGraphs(receiveArray[3], receiveArray[4]);
  2415  002D30  C106  F01B         	movff	_receiveArray+6,DataBarGraphs@BGA	;volatile
  2416  002D34  C107  F01C         	movff	_receiveArray+7,DataBarGraphs@BGA+1	;volatile
  2417  002D38  C108  F01D         	movff	_receiveArray+8,DataBarGraphs@BGB	;volatile
  2418  002D3C  C109  F01E         	movff	_receiveArray+9,DataBarGraphs@BGB+1	;volatile
  2419  002D40  ECB8  F018         	call	_DataBarGraphs	;wreg free
  2420                           
  2421                           ;Communications.c: 20: receiveArray[0] = 0;
  2422  002D44  0E00               	movlw	0
  2423  002D46  0101               	movlb	1	; () banked
  2424  002D48  6F01               	movwf	(_receiveArray+1)& (0+255),b	;volatile
  2425  002D4A  0E00               	movlw	0
  2426  002D4C  6F00               	movwf	_receiveArray& (0+255),b	;volatile
  2427                           
  2428                           ; BSR set to: 1
  2429  002D4E  0012               	return	
  2430  002D50                     __end_of_updateComms:
  2431                           	opt stack 0
  2432                           tblptru	equ	0xFF8
  2433                           tblptrh	equ	0xFF7
  2434                           tblptrl	equ	0xFF6
  2435                           tablat	equ	0xFF5
  2436                           intcon	equ	0xFF2
  2437                           postinc0	equ	0xFEE
  2438                           wreg	equ	0xFE8
  2439                           status	equ	0xFD8
  2440                           
  2441 ;; *************** function _respondECU *****************
  2442 ;; Defined at:
  2443 ;;		line 26 in file "Communications.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    8
  2464 ;; This function calls:
  2465 ;;		_Delay
  2466 ;;		_ToSend
  2467 ;;		_buttonsCollector
  2468 ;;		_sendData
  2469 ;; This function is called by:
  2470 ;;		_updateComms
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text2
  2475  002D50                     __ptext2:
  2476                           	opt stack 0
  2477  002D50                     _respondECU:
  2478                           	opt stack 21
  2479                           
  2480                           ;Communications.c: 27: LATCbits.LATC5 = 1;
  2481                           
  2482                           ;incstack = 0
  2483  002D50  8A8B               	bsf	3979,5,c	;volatile
  2484                           
  2485                           ;Communications.c: 28: ToSend(0, 3);
  2486  002D52  0E00               	movlw	0
  2487  002D54  0100               	movlb	0	; () banked
  2488  002D56  6FF3               	movwf	(ToSend@what+1)& (0+255),b
  2489  002D58  0E03               	movlw	3
  2490  002D5A  6FF2               	movwf	ToSend@what& (0+255),b
  2491  002D5C  0E00               	movlw	0
  2492  002D5E  EC7D  F018         	call	_ToSend
  2493                           
  2494                           ;Communications.c: 29: ToSend(8, buttonsCollector());
  2495  002D62  ECAB  F014         	call	_buttonsCollector	;wreg free
  2496  002D66  C021  F0F2         	movff	?_buttonsCollector,ToSend@what
  2497  002D6A  C022  F0F3         	movff	?_buttonsCollector+1,ToSend@what+1
  2498  002D6E  0E08               	movlw	8
  2499  002D70  EC7D  F018         	call	_ToSend
  2500                           
  2501                           ;Communications.c: 30: Delay(5);
  2502  002D74  0E00               	movlw	0
  2503  002D76  6E1C               	movwf	Delay@wait+1,c
  2504  002D78  0E05               	movlw	5
  2505  002D7A  6E1B               	movwf	Delay@wait,c
  2506  002D7C  EC66  F017         	call	_Delay	;wreg free
  2507                           
  2508                           ;Communications.c: 31: sendData(1);
  2509  002D80  0E01               	movlw	1
  2510  002D82  EC44  F00B         	call	_sendData
  2511                           
  2512                           ;Communications.c: 32: Delay(3);
  2513  002D86  0E00               	movlw	0
  2514  002D88  6E1C               	movwf	Delay@wait+1,c
  2515  002D8A  0E03               	movlw	3
  2516  002D8C  6E1B               	movwf	Delay@wait,c
  2517  002D8E  EC66  F017         	call	_Delay	;wreg free
  2518                           
  2519                           ;Communications.c: 33: LATCbits.LATC5 = 0;
  2520  002D92  9A8B               	bcf	3979,5,c	;volatile
  2521  002D94  0012               	return		;funcret
  2522  002D96                     __end_of_respondECU:
  2523                           	opt stack 0
  2524                           tblptru	equ	0xFF8
  2525                           tblptrh	equ	0xFF7
  2526                           tblptrl	equ	0xFF6
  2527                           tablat	equ	0xFF5
  2528                           intcon	equ	0xFF2
  2529                           postinc0	equ	0xFEE
  2530                           wreg	equ	0xFE8
  2531                           status	equ	0xFD8
  2532                           
  2533 ;; *************** function _sendData *****************
  2534 ;; Defined at:
  2535 ;;		line 54 in file "FastTransfer.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  whereToSend     1    wreg     unsigned char 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  whereToSend     1    0[BANK0 ] unsigned char 
  2540 ;;  i               2    2[BANK0 ] int 
  2541 ;;  CS              1    1[BANK0 ] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2551 ;;      Params:         0       0       0       0       0       0       0
  2552 ;;      Locals:         0       4       0       0       0       0       0
  2553 ;;      Temps:          1       0       0       0       0       0       0
  2554 ;;      Totals:         1       4       0       0       0       0       0
  2555 ;;Total ram usage:        5 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    7
  2558 ;; This function calls:
  2559 ;;		Absolute function
  2560 ;;		_CRC8
  2561 ;;		_FastTransfer_buffer_flush
  2562 ;;		_Send_put
  2563 ;;		_crcBufS_put
  2564 ;; This function is called by:
  2565 ;;		_respondECU
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text3
  2570  001688                     __ptext3:
  2571                           	opt stack 0
  2572  001688                     _sendData:
  2573                           	opt stack 21
  2574                           
  2575                           ;incstack = 0
  2576                           ;sendData@whereToSend stored from wreg
  2577  001688  0100               	movlb	0	; () banked
  2578  00168A  6FF2               	movwf	sendData@whereToSend& (0+255),b
  2579                           
  2580                           ;FastTransfer.c: 57: unsigned char CS = CRC8(sendStructAddress, ring_buffer.count);
  2581  00168C  C0D9  F01B         	movff	_sendStructAddress,CRC8@data
  2582  001690  C0DA  F01C         	movff	_sendStructAddress+1,CRC8@data+1
  2583  001694  C2CC  F01D         	movff	_ring_buffer+204,CRC8@len
  2584  001698  EC60  F016         	call	_CRC8	;wreg free
  2585  00169C  0100               	movlb	0	; () banked
  2586  00169E  6FF3               	movwf	sendData@CS& (0+255),b
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;FastTransfer.c: 59: serial_write(0x06);
  2590  0016A0  D801               	call	u6808
  2591  0016A2  D00B               	goto	l6466
  2592  0016A4                     u6808:
  2593  0016A4  0005               	push	
  2594  0016A6  6EFA               	movwf	pclath,c
  2595  0016A8  5033               	movf	_serial_write,w,c
  2596  0016AA  6EFD               	movwf	tosl,c
  2597  0016AC  5034               	movf	_serial_write+1,w,c
  2598  0016AE  6EFE               	movwf	tosh,c
  2599  0016B0  50F8               	movf	tblptru,w,c
  2600  0016B2  6EFF               	movwf	tosu,c
  2601  0016B4  50FA               	movf	pclath,w,c
  2602  0016B6  0E06               	movlw	6
  2603  0016B8  0012               	return		;indir
  2604  0016BA                     l6466:
  2605                           
  2606                           ;FastTransfer.c: 60: serial_write(0x85);
  2607  0016BA  D801               	call	u6818
  2608  0016BC  D00B               	goto	l6468
  2609  0016BE                     u6818:
  2610  0016BE  0005               	push	
  2611  0016C0  6EFA               	movwf	pclath,c
  2612  0016C2  5033               	movf	_serial_write,w,c
  2613  0016C4  6EFD               	movwf	tosl,c
  2614  0016C6  5034               	movf	_serial_write+1,w,c
  2615  0016C8  6EFE               	movwf	tosh,c
  2616  0016CA  50F8               	movf	tblptru,w,c
  2617  0016CC  6EFF               	movwf	tosu,c
  2618  0016CE  50FA               	movf	pclath,w,c
  2619  0016D0  0E85               	movlw	133
  2620  0016D2  0012               	return		;indir
  2621  0016D4                     l6468:
  2622                           
  2623                           ;FastTransfer.c: 61: serial_write(whereToSend);
  2624  0016D4  D801               	call	u6828
  2625  0016D6  D00C               	goto	l6470
  2626  0016D8                     u6828:
  2627  0016D8  0005               	push	
  2628  0016DA  6EFA               	movwf	pclath,c
  2629  0016DC  5033               	movf	_serial_write,w,c
  2630  0016DE  6EFD               	movwf	tosl,c
  2631  0016E0  5034               	movf	_serial_write+1,w,c
  2632  0016E2  6EFE               	movwf	tosh,c
  2633  0016E4  50F8               	movf	tblptru,w,c
  2634  0016E6  6EFF               	movwf	tosu,c
  2635  0016E8  50FA               	movf	pclath,w,c
  2636  0016EA  0100               	movlb	0	; () banked
  2637  0016EC  51F2               	movf	sendData@whereToSend& (0+255),w,b
  2638  0016EE  0012               	return		;indir
  2639  0016F0                     l6470:
  2640                           
  2641                           ;FastTransfer.c: 62: serial_write(moduleAddress);
  2642  0016F0  D801               	call	u6838
  2643  0016F2  D00B               	goto	l6472
  2644  0016F4                     u6838:
  2645  0016F4  0005               	push	
  2646  0016F6  6EFA               	movwf	pclath,c
  2647  0016F8  5033               	movf	_serial_write,w,c
  2648  0016FA  6EFD               	movwf	tosl,c
  2649  0016FC  5034               	movf	_serial_write+1,w,c
  2650  0016FE  6EFE               	movwf	tosh,c
  2651  001700  50F8               	movf	tblptru,w,c
  2652  001702  6EFF               	movwf	tosu,c
  2653  001704  50FA               	movf	pclath,w,c
  2654  001706  503A               	movf	_moduleAddress,w,c
  2655  001708  0012               	return		;indir
  2656  00170A                     l6472:
  2657                           
  2658                           ;FastTransfer.c: 63: serial_write(ring_buffer.count);
  2659  00170A  D801               	call	u6848
  2660  00170C  D00C               	goto	l6474
  2661  00170E                     u6848:
  2662  00170E  0005               	push	
  2663  001710  6EFA               	movwf	pclath,c
  2664  001712  5033               	movf	_serial_write,w,c
  2665  001714  6EFD               	movwf	tosl,c
  2666  001716  5034               	movf	_serial_write+1,w,c
  2667  001718  6EFE               	movwf	tosh,c
  2668  00171A  50F8               	movf	tblptru,w,c
  2669  00171C  6EFF               	movwf	tosu,c
  2670  00171E  50FA               	movf	pclath,w,c
  2671  001720  0102               	movlb	2	; () banked
  2672  001722  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2673  001724  0012               	return		;indir
  2674  001726                     l6474:
  2675                           
  2676                           ;FastTransfer.c: 67: int i;
  2677                           ;FastTransfer.c: 68: for (i = 0; i < ring_buffer.count; i++) {
  2678  001726  0E00               	movlw	0
  2679  001728  0100               	movlb	0	; () banked
  2680  00172A  6FF5               	movwf	(sendData@i+1)& (0+255),b
  2681  00172C  0E00               	movlw	0
  2682  00172E  6FF4               	movwf	sendData@i& (0+255),b
  2683  001730  D01A               	goto	l6480
  2684  001732                     l6476:
  2685                           
  2686                           ;FastTransfer.c: 69: serial_write(*(sendStructAddress + i));
  2687  001732  D801               	call	u6858
  2688  001734  D015               	goto	l6478
  2689  001736                     u6858:
  2690  001736  0005               	push	
  2691  001738  6EFA               	movwf	pclath,c
  2692  00173A  5033               	movf	_serial_write,w,c
  2693  00173C  6EFD               	movwf	tosl,c
  2694  00173E  5034               	movf	_serial_write+1,w,c
  2695  001740  6EFE               	movwf	tosh,c
  2696  001742  50F8               	movf	tblptru,w,c
  2697  001744  6EFF               	movwf	tosu,c
  2698  001746  50FA               	movf	pclath,w,c
  2699  001748  0100               	movlb	0	; () banked
  2700  00174A  51F4               	movf	sendData@i& (0+255),w,b
  2701  00174C  0100               	movlb	0	; () banked
  2702  00174E  25D9               	addwf	_sendStructAddress& (0+255),w,b
  2703  001750  6ED9               	movwf	fsr2l,c
  2704  001752  0100               	movlb	0	; () banked
  2705  001754  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2706  001756  0100               	movlb	0	; () banked
  2707  001758  21DA               	addwfc	(_sendStructAddress+1)& (0+255),w,b
  2708  00175A  6EDA               	movwf	fsr2h,c
  2709  00175C  50DF               	movf	indf2,w,c
  2710  00175E  0012               	return		;indir
  2711  001760                     l6478:
  2712  001760  0100               	movlb	0	; () banked
  2713  001762  4BF4               	infsnz	sendData@i& (0+255),f,b
  2714  001764  2BF5               	incf	(sendData@i+1)& (0+255),f,b
  2715  001766                     l6480:
  2716                           
  2717                           ; BSR set to: 0
  2718  001766  0102               	movlb	2	; () banked
  2719  001768  51CC               	movf	(_ring_buffer+204)& (0+255),w,b
  2720  00176A  0100               	movlb	0	; () banked
  2721  00176C  5DF4               	subwf	sendData@i& (0+255),w,b
  2722  00176E  0100               	movlb	0	; () banked
  2723  001770  51F5               	movf	(sendData@i+1)& (0+255),w,b
  2724  001772  0A80               	xorlw	128
  2725  001774  6E27               	movwf	??_sendData& (0+255),c
  2726  001776  0102               	movlb	2	; () banked
  2727  001778  51CD               	movf	(_ring_buffer+205)& (0+255),w,b
  2728  00177A  0A80               	xorlw	128
  2729  00177C  5827               	subwfb	??_sendData& (0+255),w,c
  2730  00177E  A0D8               	btfss	status,0,c
  2731  001780  D7D8               	goto	l6476
  2732                           
  2733                           ; BSR set to: 2
  2734                           ;FastTransfer.c: 70: }
  2735                           ;FastTransfer.c: 73: serial_write(CS);
  2736                           
  2737                           ; BSR set to: 2
  2738  001782  D801               	call	u6878
  2739  001784  D00C               	goto	l6484
  2740  001786                     u6878:
  2741  001786  0005               	push	
  2742  001788  6EFA               	movwf	pclath,c
  2743  00178A  5033               	movf	_serial_write,w,c
  2744  00178C  6EFD               	movwf	tosl,c
  2745  00178E  5034               	movf	_serial_write+1,w,c
  2746  001790  6EFE               	movwf	tosh,c
  2747  001792  50F8               	movf	tblptru,w,c
  2748  001794  6EFF               	movwf	tosu,c
  2749  001796  50FA               	movf	pclath,w,c
  2750  001798  0100               	movlb	0	; () banked
  2751  00179A  51F3               	movf	sendData@CS& (0+255),w,b
  2752  00179C  0012               	return		;indir
  2753  00179E                     l6484:
  2754                           
  2755                           ;FastTransfer.c: 76: crcBufS_put(&crc_buffer, whereToSend, CS, 0);
  2756  00179E  0E28               	movlw	low _crc_buffer
  2757  0017A0  6E1B               	movwf	crcBufS_put@_this,c
  2758  0017A2  0E01               	movlw	high _crc_buffer
  2759  0017A4  6E1C               	movwf	crcBufS_put@_this+1,c
  2760  0017A6  C0F2  F01D         	movff	sendData@whereToSend,crcBufS_put@address
  2761  0017AA  C0F3  F01E         	movff	sendData@CS,crcBufS_put@oldCRC
  2762  0017AE  0E00               	movlw	0
  2763  0017B0  6E1F               	movwf	crcBufS_put@status,c
  2764  0017B2  EC27  F00F         	call	_crcBufS_put
  2765                           
  2766                           ;FastTransfer.c: 79: FastTransfer_buffer_flush(&ring_buffer, 1);
  2767  0017B6  0E00               	movlw	low _ring_buffer
  2768  0017B8  6E23               	movwf	FastTransfer_buffer_flush@_this,c
  2769  0017BA  0E02               	movlw	high _ring_buffer
  2770  0017BC  6E24               	movwf	FastTransfer_buffer_flush@_this+1,c
  2771  0017BE  0E00               	movlw	0
  2772  0017C0  6E26               	movwf	FastTransfer_buffer_flush@clearBuffer+1,c
  2773  0017C2  0E01               	movlw	1
  2774  0017C4  6E25               	movwf	FastTransfer_buffer_flush@clearBuffer,c
  2775  0017C6  EC7F  F015         	call	_FastTransfer_buffer_flush	;wreg free
  2776  0017CA  0012               	return		;funcret
  2777  0017CC                     __end_of_sendData:
  2778                           	opt stack 0
  2779                           tosu	equ	0xFFF
  2780                           tosh	equ	0xFFE
  2781                           tosl	equ	0xFFD
  2782                           pclath	equ	0xFFA
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           intcon	equ	0xFF2
  2788                           postinc0	equ	0xFEE
  2789                           wreg	equ	0xFE8
  2790                           indf2	equ	0xFDF
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _crcBufS_put *****************
  2796 ;; Defined at:
  2797 ;;		line 326 in file "FastTransfer.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  _this           2   26[COMRAM] PTR struct crcBufS
  2800 ;;		 -> crc_buffer(17), 
  2801 ;;  address         1   28[COMRAM] unsigned char 
  2802 ;;  oldCRC          1   29[COMRAM] unsigned char 
  2803 ;;  status          1   30[COMRAM] unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2815 ;;      Params:         5       0       0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0
  2817 ;;      Temps:          2       0       0       0       0       0       0
  2818 ;;      Totals:         7       0       0       0       0       0       0
  2819 ;;Total ram usage:        7 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    4
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_sendData
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text4
  2830  001E4E                     __ptext4:
  2831                           	opt stack 0
  2832  001E4E                     _crcBufS_put:
  2833                           	opt stack 23
  2834                           
  2835                           ;FastTransfer.c: 327: _this->buf[_this->head] = address;
  2836                           
  2837                           ;incstack = 0
  2838  001E4E  EE20 F00F          	lfsr	2,15
  2839  001E52  501B               	movf	crcBufS_put@_this,w,c
  2840  001E54  26D9               	addwf	fsr2l,f,c
  2841  001E56  501C               	movf	crcBufS_put@_this+1,w,c
  2842  001E58  22DA               	addwfc	fsr2h,f,c
  2843  001E5A  CFDE F020          	movff	postinc2,??_crcBufS_put
  2844  001E5E  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2845  001E62  5020               	movf	??_crcBufS_put,w,c
  2846  001E64  241B               	addwf	crcBufS_put@_this,w,c
  2847  001E66  6ED9               	movwf	fsr2l,c
  2848  001E68  5021               	movf	??_crcBufS_put+1,w,c
  2849  001E6A  201C               	addwfc	crcBufS_put@_this+1,w,c
  2850  001E6C  6EDA               	movwf	fsr2h,c
  2851  001E6E  C01D  FFDF         	movff	crcBufS_put@address,indf2
  2852                           
  2853                           ;FastTransfer.c: 328: _this->head++;
  2854  001E72  EE20 F00F          	lfsr	2,15
  2855  001E76  501B               	movf	crcBufS_put@_this,w,c
  2856  001E78  26D9               	addwf	fsr2l,f,c
  2857  001E7A  501C               	movf	crcBufS_put@_this+1,w,c
  2858  001E7C  22DA               	addwfc	fsr2h,f,c
  2859  001E7E  2ADE               	incf	postinc2,f,c
  2860  001E80  0E00               	movlw	0
  2861  001E82  22DD               	addwfc	postdec2,f,c
  2862                           
  2863                           ;FastTransfer.c: 329: _this->buf[_this->head] = oldCRC;
  2864  001E84  EE20 F00F          	lfsr	2,15
  2865  001E88  501B               	movf	crcBufS_put@_this,w,c
  2866  001E8A  26D9               	addwf	fsr2l,f,c
  2867  001E8C  501C               	movf	crcBufS_put@_this+1,w,c
  2868  001E8E  22DA               	addwfc	fsr2h,f,c
  2869  001E90  CFDE F020          	movff	postinc2,??_crcBufS_put
  2870  001E94  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2871  001E98  5020               	movf	??_crcBufS_put,w,c
  2872  001E9A  241B               	addwf	crcBufS_put@_this,w,c
  2873  001E9C  6ED9               	movwf	fsr2l,c
  2874  001E9E  5021               	movf	??_crcBufS_put+1,w,c
  2875  001EA0  201C               	addwfc	crcBufS_put@_this+1,w,c
  2876  001EA2  6EDA               	movwf	fsr2h,c
  2877  001EA4  C01E  FFDF         	movff	crcBufS_put@oldCRC,indf2
  2878                           
  2879                           ;FastTransfer.c: 330: _this->head++;
  2880  001EA8  EE20 F00F          	lfsr	2,15
  2881  001EAC  501B               	movf	crcBufS_put@_this,w,c
  2882  001EAE  26D9               	addwf	fsr2l,f,c
  2883  001EB0  501C               	movf	crcBufS_put@_this+1,w,c
  2884  001EB2  22DA               	addwfc	fsr2h,f,c
  2885  001EB4  2ADE               	incf	postinc2,f,c
  2886  001EB6  0E00               	movlw	0
  2887  001EB8  22DD               	addwfc	postdec2,f,c
  2888                           
  2889                           ;FastTransfer.c: 331: _this->buf[_this->head] = status;
  2890  001EBA  EE20 F00F          	lfsr	2,15
  2891  001EBE  501B               	movf	crcBufS_put@_this,w,c
  2892  001EC0  26D9               	addwf	fsr2l,f,c
  2893  001EC2  501C               	movf	crcBufS_put@_this+1,w,c
  2894  001EC4  22DA               	addwfc	fsr2h,f,c
  2895  001EC6  CFDE F020          	movff	postinc2,??_crcBufS_put
  2896  001ECA  CFDD F021          	movff	postdec2,??_crcBufS_put+1
  2897  001ECE  5020               	movf	??_crcBufS_put,w,c
  2898  001ED0  241B               	addwf	crcBufS_put@_this,w,c
  2899  001ED2  6ED9               	movwf	fsr2l,c
  2900  001ED4  5021               	movf	??_crcBufS_put+1,w,c
  2901  001ED6  201C               	addwfc	crcBufS_put@_this+1,w,c
  2902  001ED8  6EDA               	movwf	fsr2h,c
  2903  001EDA  C01F  FFDF         	movff	crcBufS_put@status,indf2
  2904                           
  2905                           ;FastTransfer.c: 332: _this->head++;
  2906  001EDE  EE20 F00F          	lfsr	2,15
  2907  001EE2  501B               	movf	crcBufS_put@_this,w,c
  2908  001EE4  26D9               	addwf	fsr2l,f,c
  2909  001EE6  501C               	movf	crcBufS_put@_this+1,w,c
  2910  001EE8  22DA               	addwfc	fsr2h,f,c
  2911  001EEA  2ADE               	incf	postinc2,f,c
  2912  001EEC  0E00               	movlw	0
  2913  001EEE  22DD               	addwfc	postdec2,f,c
  2914                           
  2915                           ;FastTransfer.c: 333: if (_this->head >= (5 * 3)) {
  2916  001EF0  EE20 F00F          	lfsr	2,15
  2917  001EF4  501B               	movf	crcBufS_put@_this,w,c
  2918  001EF6  26D9               	addwf	fsr2l,f,c
  2919  001EF8  501C               	movf	crcBufS_put@_this+1,w,c
  2920  001EFA  22DA               	addwfc	fsr2h,f,c
  2921  001EFC  0E01               	movlw	1
  2922  001EFE  BEDB               	btfsc	plusw2,7,c
  2923  001F00  0012               	return	
  2924  001F02  0E01               	movlw	1
  2925  001F04  50DB               	movf	plusw2,w,c
  2926  001F06  E104               	bnz	u6490
  2927  001F08  0E0F               	movlw	15
  2928  001F0A  5CDE               	subwf	postinc2,w,c
  2929  001F0C  A0D8               	btfss	status,0,c
  2930  001F0E  0012               	return	
  2931  001F10                     u6490:
  2932                           
  2933                           ;FastTransfer.c: 334: _this->head = 0;
  2934  001F10  EE20 F00F          	lfsr	2,15
  2935  001F14  501B               	movf	crcBufS_put@_this,w,c
  2936  001F16  26D9               	addwf	fsr2l,f,c
  2937  001F18  501C               	movf	crcBufS_put@_this+1,w,c
  2938  001F1A  22DA               	addwfc	fsr2h,f,c
  2939  001F1C  0E00               	movlw	0
  2940  001F1E  6EDE               	movwf	postinc2,c
  2941  001F20  0E00               	movlw	0
  2942  001F22  6EDD               	movwf	postdec2,c
  2943  001F24  0012               	return	
  2944  001F26                     __end_of_crcBufS_put:
  2945                           	opt stack 0
  2946                           tosu	equ	0xFFF
  2947                           tosh	equ	0xFFE
  2948                           tosl	equ	0xFFD
  2949                           pclath	equ	0xFFA
  2950                           tblptru	equ	0xFF8
  2951                           tblptrh	equ	0xFF7
  2952                           tblptrl	equ	0xFF6
  2953                           tablat	equ	0xFF5
  2954                           intcon	equ	0xFF2
  2955                           postinc0	equ	0xFEE
  2956                           wreg	equ	0xFE8
  2957                           indf2	equ	0xFDF
  2958                           postinc2	equ	0xFDE
  2959                           postdec2	equ	0xFDD
  2960                           plusw2	equ	0xFDB
  2961                           fsr2h	equ	0xFDA
  2962                           fsr2l	equ	0xFD9
  2963                           status	equ	0xFD8
  2964                           
  2965 ;; *************** function _FastTransfer_buffer_flush *****************
  2966 ;; Defined at:
  2967 ;;		line 266 in file "FastTransfer.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  _this           2   34[COMRAM] PTR struct ringBufS
  2970 ;;		 -> ring_buffer(206), 
  2971 ;;  clearBuffer     2   36[COMRAM] const int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2983 ;;      Params:         4       0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0
  2986 ;;      Totals:         4       0       0       0       0       0       0
  2987 ;;Total ram usage:        4 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    5
  2990 ;; This function calls:
  2991 ;;		_memset
  2992 ;; This function is called by:
  2993 ;;		_sendData
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text5
  2998  002AFE                     __ptext5:
  2999                           	opt stack 0
  3000  002AFE                     _FastTransfer_buffer_flush:
  3001                           	opt stack 22
  3002                           
  3003                           ;FastTransfer.c: 267: _this->count = 0;
  3004                           
  3005                           ;incstack = 0
  3006  002AFE  EE20 F0CC          	lfsr	2,204
  3007  002B02  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  3008  002B04  26D9               	addwf	fsr2l,f,c
  3009  002B06  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  3010  002B08  22DA               	addwfc	fsr2h,f,c
  3011  002B0A  0E00               	movlw	0
  3012  002B0C  6EDE               	movwf	postinc2,c
  3013  002B0E  0E00               	movlw	0
  3014  002B10  6EDD               	movwf	postdec2,c
  3015                           
  3016                           ;FastTransfer.c: 268: _this->head = 0;
  3017  002B12  EE20 F0C8          	lfsr	2,200
  3018  002B16  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  3019  002B18  26D9               	addwf	fsr2l,f,c
  3020  002B1A  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  3021  002B1C  22DA               	addwfc	fsr2h,f,c
  3022  002B1E  0E00               	movlw	0
  3023  002B20  6EDE               	movwf	postinc2,c
  3024  002B22  0E00               	movlw	0
  3025  002B24  6EDD               	movwf	postdec2,c
  3026                           
  3027                           ;FastTransfer.c: 269: _this->tail = 0;
  3028  002B26  EE20 F0CA          	lfsr	2,202
  3029  002B2A  5023               	movf	FastTransfer_buffer_flush@_this,w,c
  3030  002B2C  26D9               	addwf	fsr2l,f,c
  3031  002B2E  5024               	movf	FastTransfer_buffer_flush@_this+1,w,c
  3032  002B30  22DA               	addwfc	fsr2h,f,c
  3033  002B32  0E00               	movlw	0
  3034  002B34  6EDE               	movwf	postinc2,c
  3035  002B36  0E00               	movlw	0
  3036  002B38  6EDD               	movwf	postdec2,c
  3037                           
  3038                           ;FastTransfer.c: 270: if (clearBuffer) {
  3039  002B3A  5025               	movf	FastTransfer_buffer_flush@clearBuffer,w,c
  3040  002B3C  1026               	iorwf	FastTransfer_buffer_flush@clearBuffer+1,w,c
  3041  002B3E  B4D8               	btfsc	status,2,c
  3042  002B40  0012               	return	
  3043                           
  3044                           ;FastTransfer.c: 271: memset(_this->buf, 0, sizeof (_this->buf));
  3045  002B42  C023  F01B         	movff	FastTransfer_buffer_flush@_this,memset@p1
  3046  002B46  C024  F01C         	movff	FastTransfer_buffer_flush@_this+1,memset@p1+1
  3047  002B4A  0E00               	movlw	0
  3048  002B4C  6E1E               	movwf	memset@c+1,c
  3049  002B4E  0E00               	movlw	0
  3050  002B50  6E1D               	movwf	memset@c,c
  3051  002B52  0E00               	movlw	0
  3052  002B54  6E20               	movwf	memset@n+1,c
  3053  002B56  0EC8               	movlw	200
  3054  002B58  6E1F               	movwf	memset@n,c
  3055  002B5A  ECB0  F017         	call	_memset	;wreg free
  3056  002B5E  0012               	return	
  3057  002B60                     __end_of_FastTransfer_buffer_flush:
  3058                           	opt stack 0
  3059                           tosu	equ	0xFFF
  3060                           tosh	equ	0xFFE
  3061                           tosl	equ	0xFFD
  3062                           pclath	equ	0xFFA
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           intcon	equ	0xFF2
  3068                           postinc0	equ	0xFEE
  3069                           wreg	equ	0xFE8
  3070                           indf2	equ	0xFDF
  3071                           postinc2	equ	0xFDE
  3072                           postdec2	equ	0xFDD
  3073                           plusw2	equ	0xFDB
  3074                           fsr2h	equ	0xFDA
  3075                           fsr2l	equ	0xFD9
  3076                           status	equ	0xFD8
  3077                           
  3078 ;; *************** function _buttonsCollector *****************
  3079 ;; Defined at:
  3080 ;;		line 61 in file "Communications.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  i               2   39[COMRAM] int 
  3085 ;;  sendVal         2   37[COMRAM] unsigned int 
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  2   32[COMRAM] unsigned int 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3095 ;;      Params:         2       0       0       0       0       0       0
  3096 ;;      Locals:         4       0       0       0       0       0       0
  3097 ;;      Temps:          3       0       0       0       0       0       0
  3098 ;;      Totals:         9       0       0       0       0       0       0
  3099 ;;Total ram usage:        9 bytes
  3100 ;; Hardware stack levels used:    1
  3101 ;; Hardware stack levels required when called:    5
  3102 ;; This function calls:
  3103 ;;		_GetButtonState
  3104 ;; This function is called by:
  3105 ;;		_respondECU
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text6
  3110  002956                     __ptext6:
  3111                           	opt stack 0
  3112  002956                     _buttonsCollector:
  3113                           	opt stack 23
  3114                           
  3115                           ;Communications.c: 62: unsigned int sendVal = 0;
  3116                           
  3117                           ;incstack = 0
  3118  002956  0E00               	movlw	0
  3119  002958  6E27               	movwf	buttonsCollector@sendVal+1,c
  3120  00295A  0E00               	movlw	0
  3121  00295C  6E26               	movwf	buttonsCollector@sendVal,c
  3122                           
  3123                           ;Communications.c: 63: int i = 0;
  3124  00295E  0E00               	movlw	0
  3125  002960  6E29               	movwf	buttonsCollector@i+1,c
  3126  002962  0E00               	movlw	0
  3127  002964  6E28               	movwf	buttonsCollector@i,c
  3128                           
  3129                           ;Communications.c: 64: for (i = 0; i < 8; i++) {
  3130  002966  0E00               	movlw	0
  3131  002968  6E29               	movwf	buttonsCollector@i+1,c
  3132  00296A  0E00               	movlw	0
  3133  00296C  6E28               	movwf	buttonsCollector@i,c
  3134  00296E  BE29               	btfsc	buttonsCollector@i+1,7,c
  3135  002970  D006               	goto	l4490
  3136  002972  5029               	movf	buttonsCollector@i+1,w,c
  3137  002974  E123               	bnz	l940
  3138  002976  0E08               	movlw	8
  3139  002978  5C28               	subwf	buttonsCollector@i,w,c
  3140  00297A  B0D8               	btfsc	status,0,c
  3141  00297C  D01F               	goto	l940
  3142  00297E                     l4490:
  3143                           
  3144                           ;Communications.c: 65: sendVal = sendVal | ((GetButtonState(i)&0x01) << i);
  3145  00297E  C028  F023         	movff	buttonsCollector@i,??_buttonsCollector
  3146  002982  C028  F01B         	movff	buttonsCollector@i,GetButtonState@btnnum
  3147  002986  C029  F01C         	movff	buttonsCollector@i+1,GetButtonState@btnnum+1
  3148  00298A  EC05  F018         	call	_GetButtonState	;wreg free
  3149  00298E  0B01               	andlw	1
  3150  002990  6E24               	movwf	(??_buttonsCollector+1)& (0+255),c
  3151  002992  6A25               	clrf	(??_buttonsCollector+2)& (0+255),c
  3152  002994  2A23               	incf	??_buttonsCollector,f,c
  3153  002996  D003               	goto	u3664
  3154  002998                     u3665:
  3155  002998  90D8               	bcf	status,0,c
  3156  00299A  3624               	rlcf	??_buttonsCollector+1,f,c
  3157  00299C  3625               	rlcf	??_buttonsCollector+2,f,c
  3158  00299E                     u3664:
  3159  00299E  2E23               	decfsz	??_buttonsCollector,f,c
  3160  0029A0  D7FB               	goto	u3665
  3161  0029A2  5026               	movf	buttonsCollector@sendVal,w,c
  3162  0029A4  1024               	iorwf	??_buttonsCollector+1,w,c
  3163  0029A6  6E26               	movwf	buttonsCollector@sendVal,c
  3164  0029A8  5027               	movf	buttonsCollector@sendVal+1,w,c
  3165  0029AA  1025               	iorwf	??_buttonsCollector+2,w,c
  3166  0029AC  6E27               	movwf	buttonsCollector@sendVal+1,c
  3167  0029AE  4A28               	infsnz	buttonsCollector@i,f,c
  3168  0029B0  2A29               	incf	buttonsCollector@i+1,f,c
  3169  0029B2  BE29               	btfsc	buttonsCollector@i+1,7,c
  3170  0029B4  D7E4               	goto	l4490
  3171  0029B6  5029               	movf	buttonsCollector@i+1,w,c
  3172  0029B8  E101               	bnz	u3670
  3173  0029BA  D7DD               	goto	L1
  3174  0029BC                     u3670:
  3175  0029BC                     l940:
  3176                           
  3177                           ;Communications.c: 66: }
  3178                           ;Communications.c: 67: return sendVal;
  3179  0029BC  C026  F021         	movff	buttonsCollector@sendVal,?_buttonsCollector
  3180  0029C0  C027  F022         	movff	buttonsCollector@sendVal+1,?_buttonsCollector+1
  3181  0029C4  0012               	return		;funcret
  3182  0029C6                     __end_of_buttonsCollector:
  3183                           	opt stack 0
  3184                           tosu	equ	0xFFF
  3185                           tosh	equ	0xFFE
  3186                           tosl	equ	0xFFD
  3187                           pclath	equ	0xFFA
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           intcon	equ	0xFF2
  3193                           postinc0	equ	0xFEE
  3194                           wreg	equ	0xFE8
  3195                           indf2	equ	0xFDF
  3196                           postinc2	equ	0xFDE
  3197                           postdec2	equ	0xFDD
  3198                           plusw2	equ	0xFDB
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _GetButtonState *****************
  3204 ;; Defined at:
  3205 ;;		line 184 in file "IO.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  btnnum          2   26[COMRAM] int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      unsigned char 
  3212 ;; Registers used:
  3213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3219 ;;      Params:         2       0       0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0
  3221 ;;      Temps:          4       0       0       0       0       0       0
  3222 ;;      Totals:         6       0       0       0       0       0       0
  3223 ;;Total ram usage:        6 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    4
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_buttonsCollector
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text7
  3234  00300A                     __ptext7:
  3235                           	opt stack 0
  3236  00300A                     _GetButtonState:
  3237                           	opt stack 23
  3238                           
  3239                           ;IO.c: 185: return butnarray[btnnum - 1];
  3240                           
  3241                           ;incstack = 0
  3242  00300A  0EFF               	movlw	255
  3243  00300C  6E1D               	movwf	??_GetButtonState& (0+255),c
  3244  00300E  0EFF               	movlw	255
  3245  003010  6E1E               	movwf	(??_GetButtonState+1)& (0+255),c
  3246  003012  C01B  F01F         	movff	GetButtonState@btnnum,??_GetButtonState+2
  3247  003016  C01C  F020         	movff	GetButtonState@btnnum+1,??_GetButtonState+3
  3248  00301A  501D               	movf	??_GetButtonState,w,c
  3249  00301C  261F               	addwf	??_GetButtonState+2,f,c
  3250  00301E  501E               	movf	??_GetButtonState+1,w,c
  3251  003020  2220               	addwfc	??_GetButtonState+3,f,c
  3252  003022  0EB0               	movlw	low _butnarray
  3253  003024  241F               	addwf	??_GetButtonState+2,w,c
  3254  003026  6ED9               	movwf	fsr2l,c
  3255  003028  0E00               	movlw	high _butnarray
  3256  00302A  2020               	addwfc	??_GetButtonState+3,w,c
  3257  00302C  6EDA               	movwf	fsr2h,c
  3258  00302E  50DF               	movf	indf2,w,c
  3259  003030  0012               	return	
  3260  003032                     __end_of_GetButtonState:
  3261                           	opt stack 0
  3262                           tosu	equ	0xFFF
  3263                           tosh	equ	0xFFE
  3264                           tosl	equ	0xFFD
  3265                           pclath	equ	0xFFA
  3266                           tblptru	equ	0xFF8
  3267                           tblptrh	equ	0xFF7
  3268                           tblptrl	equ	0xFF6
  3269                           tablat	equ	0xFF5
  3270                           intcon	equ	0xFF2
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           indf2	equ	0xFDF
  3274                           postinc2	equ	0xFDE
  3275                           postdec2	equ	0xFDD
  3276                           plusw2	equ	0xFDB
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _ToSend *****************
  3282 ;; Defined at:
  3283 ;;		line 221 in file "FastTransfer.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  where           1    wreg     unsigned char 
  3286 ;;  what            2    0[BANK0 ] unsigned int 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  where           1   41[COMRAM] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3298 ;;      Params:         0       2       0       0       0       0       0
  3299 ;;      Locals:         1       0       0       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0
  3301 ;;      Totals:         1       2       0       0       0       0       0
  3302 ;;Total ram usage:        3 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    6
  3305 ;; This function calls:
  3306 ;;		_FastTransfer_buffer_put
  3307 ;; This function is called by:
  3308 ;;		_respondECU
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text8
  3313  0030FA                     __ptext8:
  3314                           	opt stack 0
  3315  0030FA                     _ToSend:
  3316                           	opt stack 22
  3317                           
  3318                           ;incstack = 0
  3319                           ;ToSend@where stored from wreg
  3320  0030FA  6E2A               	movwf	ToSend@where,c
  3321                           
  3322                           ;FastTransfer.c: 222: FastTransfer_buffer_put(&ring_buffer, where, what);
  3323  0030FC  0E00               	movlw	low _ring_buffer
  3324  0030FE  6E21               	movwf	FastTransfer_buffer_put@_this,c
  3325  003100  0E02               	movlw	high _ring_buffer
  3326  003102  6E22               	movwf	FastTransfer_buffer_put@_this+1,c
  3327  003104  C02A  F023         	movff	ToSend@where,FastTransfer_buffer_put@towhere
  3328  003108  C0F2  F024         	movff	ToSend@what,FastTransfer_buffer_put@towhat
  3329  00310C  C0F3  F025         	movff	ToSend@what+1,FastTransfer_buffer_put@towhat+1
  3330  003110  EC42  F009         	call	_FastTransfer_buffer_put	;wreg free
  3331  003114  0012               	return		;funcret
  3332  003116                     __end_of_ToSend:
  3333                           	opt stack 0
  3334                           tosu	equ	0xFFF
  3335                           tosh	equ	0xFFE
  3336                           tosl	equ	0xFFD
  3337                           pclath	equ	0xFFA
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           intcon	equ	0xFF2
  3343                           postinc0	equ	0xFEE
  3344                           wreg	equ	0xFE8
  3345                           indf2	equ	0xFDF
  3346                           postinc2	equ	0xFDE
  3347                           postdec2	equ	0xFDD
  3348                           plusw2	equ	0xFDB
  3349                           fsr2h	equ	0xFDA
  3350                           fsr2l	equ	0xFD9
  3351                           status	equ	0xFD8
  3352                           
  3353 ;; *************** function _FastTransfer_buffer_put *****************
  3354 ;; Defined at:
  3355 ;;		line 228 in file "FastTransfer.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  _this           2   32[COMRAM] PTR struct ringBufS
  3358 ;;		 -> ring_buffer(206), 
  3359 ;;  towhere         1   34[COMRAM] unsigned char 
  3360 ;;  towhat          2   35[COMRAM] unsigned int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3372 ;;      Params:         5       0       0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0
  3374 ;;      Temps:          2       0       0       0       0       0       0
  3375 ;;      Totals:         7       0       0       0       0       0       0
  3376 ;;Total ram usage:        7 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    5
  3379 ;; This function calls:
  3380 ;;		_FastTransfer_buffer_modulo_inc
  3381 ;; This function is called by:
  3382 ;;		_ToSend
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text9
  3387  001284                     __ptext9:
  3388                           	opt stack 0
  3389  001284                     _FastTransfer_buffer_put:
  3390                           	opt stack 22
  3391                           
  3392                           ;FastTransfer.c: 230: group.integer = towhat;
  3393                           
  3394                           ;incstack = 0
  3395  001284  C024  F02B         	movff	FastTransfer_buffer_put@towhat,_group
  3396  001288  C025  F02C         	movff	FastTransfer_buffer_put@towhat+1,_group+1
  3397                           
  3398                           ;FastTransfer.c: 232: if (_this->count < (200 - 3)) {
  3399  00128C  EE20 F0CC          	lfsr	2,204
  3400  001290  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3401  001292  26D9               	addwf	fsr2l,f,c
  3402  001294  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3403  001296  22DA               	addwfc	fsr2h,f,c
  3404  001298  0E01               	movlw	1
  3405  00129A  BEDB               	btfsc	plusw2,7,c
  3406  00129C  D007               	goto	l4256
  3407  00129E  0E01               	movlw	1
  3408  0012A0  50DB               	movf	plusw2,w,c
  3409  0012A2  E103               	bnz	u3351
  3410  0012A4  0EC5               	movlw	197
  3411  0012A6  5CDE               	subwf	postinc2,w,c
  3412  0012A8  B0D8               	btfsc	status,0,c
  3413  0012AA                     u3351:
  3414  0012AA  0012               	return	
  3415  0012AC                     l4256:
  3416                           
  3417                           ;FastTransfer.c: 233: _this->buf[_this->head] = towhere;
  3418  0012AC  EE20 F0C8          	lfsr	2,200
  3419  0012B0  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3420  0012B2  26D9               	addwf	fsr2l,f,c
  3421  0012B4  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3422  0012B6  22DA               	addwfc	fsr2h,f,c
  3423  0012B8  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3424  0012BC  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3425  0012C0  5026               	movf	??_FastTransfer_buffer_put,w,c
  3426  0012C2  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3427  0012C4  6ED9               	movwf	fsr2l,c
  3428  0012C6  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3429  0012C8  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3430  0012CA  6EDA               	movwf	fsr2h,c
  3431  0012CC  C023  FFDF         	movff	FastTransfer_buffer_put@towhere,indf2
  3432                           
  3433                           ;FastTransfer.c: 234: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3434  0012D0  EE20 F0C8          	lfsr	2,200
  3435  0012D4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3436  0012D6  26D9               	addwf	fsr2l,f,c
  3437  0012D8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3438  0012DA  22DA               	addwfc	fsr2h,f,c
  3439  0012DC  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3440  0012E0  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3441  0012E4  0E00               	movlw	0
  3442  0012E6  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3443  0012E8  0EC8               	movlw	200
  3444  0012EA  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3445  0012EC  ECC6  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3446  0012F0  EE20 F0C8          	lfsr	2,200
  3447  0012F4  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3448  0012F6  26D9               	addwf	fsr2l,f,c
  3449  0012F8  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3450  0012FA  22DA               	addwfc	fsr2h,f,c
  3451  0012FC  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3452  001300  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3453                           
  3454                           ;FastTransfer.c: 235: ++_this->count;
  3455  001304  EE20 F0CC          	lfsr	2,204
  3456  001308  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3457  00130A  26D9               	addwf	fsr2l,f,c
  3458  00130C  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3459  00130E  22DA               	addwfc	fsr2h,f,c
  3460  001310  2ADE               	incf	postinc2,f,c
  3461  001312  0E00               	movlw	0
  3462  001314  22DD               	addwfc	postdec2,f,c
  3463                           
  3464                           ;FastTransfer.c: 236: _this->buf[_this->head] = group.parts[0];
  3465  001316  EE20 F0C8          	lfsr	2,200
  3466  00131A  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3467  00131C  26D9               	addwf	fsr2l,f,c
  3468  00131E  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3469  001320  22DA               	addwfc	fsr2h,f,c
  3470  001322  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3471  001326  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3472  00132A  5026               	movf	??_FastTransfer_buffer_put,w,c
  3473  00132C  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3474  00132E  6ED9               	movwf	fsr2l,c
  3475  001330  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3476  001332  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3477  001334  6EDA               	movwf	fsr2h,c
  3478  001336  C02B  FFDF         	movff	_group,indf2
  3479                           
  3480                           ;FastTransfer.c: 237: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3481  00133A  EE20 F0C8          	lfsr	2,200
  3482  00133E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3483  001340  26D9               	addwf	fsr2l,f,c
  3484  001342  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3485  001344  22DA               	addwfc	fsr2h,f,c
  3486  001346  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3487  00134A  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3488  00134E  0E00               	movlw	0
  3489  001350  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3490  001352  0EC8               	movlw	200
  3491  001354  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3492  001356  ECC6  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3493  00135A  EE20 F0C8          	lfsr	2,200
  3494  00135E  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3495  001360  26D9               	addwf	fsr2l,f,c
  3496  001362  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3497  001364  22DA               	addwfc	fsr2h,f,c
  3498  001366  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3499  00136A  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3500                           
  3501                           ;FastTransfer.c: 238: ++_this->count;
  3502  00136E  EE20 F0CC          	lfsr	2,204
  3503  001372  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3504  001374  26D9               	addwf	fsr2l,f,c
  3505  001376  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3506  001378  22DA               	addwfc	fsr2h,f,c
  3507  00137A  2ADE               	incf	postinc2,f,c
  3508  00137C  0E00               	movlw	0
  3509  00137E  22DD               	addwfc	postdec2,f,c
  3510                           
  3511                           ;FastTransfer.c: 239: _this->buf[_this->head] = group.parts[1];
  3512  001380  EE20 F0C8          	lfsr	2,200
  3513  001384  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3514  001386  26D9               	addwf	fsr2l,f,c
  3515  001388  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3516  00138A  22DA               	addwfc	fsr2h,f,c
  3517  00138C  CFDE F026          	movff	postinc2,??_FastTransfer_buffer_put
  3518  001390  CFDD F027          	movff	postdec2,??_FastTransfer_buffer_put+1
  3519  001394  5026               	movf	??_FastTransfer_buffer_put,w,c
  3520  001396  2421               	addwf	FastTransfer_buffer_put@_this,w,c
  3521  001398  6ED9               	movwf	fsr2l,c
  3522  00139A  5027               	movf	??_FastTransfer_buffer_put+1,w,c
  3523  00139C  2022               	addwfc	FastTransfer_buffer_put@_this+1,w,c
  3524  00139E  6EDA               	movwf	fsr2h,c
  3525  0013A0  C02C  FFDF         	movff	_group+1,indf2
  3526                           
  3527                           ;FastTransfer.c: 240: _this->head = FastTransfer_buffer_modulo_inc(_this->head, 200);
  3528  0013A4  EE20 F0C8          	lfsr	2,200
  3529  0013A8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3530  0013AA  26D9               	addwf	fsr2l,f,c
  3531  0013AC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3532  0013AE  22DA               	addwfc	fsr2h,f,c
  3533  0013B0  CFDE F01B          	movff	postinc2,FastTransfer_buffer_modulo_inc@value
  3534  0013B4  CFDD F01C          	movff	postdec2,FastTransfer_buffer_modulo_inc@value+1
  3535  0013B8  0E00               	movlw	0
  3536  0013BA  6E1E               	movwf	FastTransfer_buffer_modulo_inc@modulus+1,c
  3537  0013BC  0EC8               	movlw	200
  3538  0013BE  6E1D               	movwf	FastTransfer_buffer_modulo_inc@modulus,c
  3539  0013C0  ECC6  F017         	call	_FastTransfer_buffer_modulo_inc	;wreg free
  3540  0013C4  EE20 F0C8          	lfsr	2,200
  3541  0013C8  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3542  0013CA  26D9               	addwf	fsr2l,f,c
  3543  0013CC  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3544  0013CE  22DA               	addwfc	fsr2h,f,c
  3545  0013D0  C01B  FFDE         	movff	?_FastTransfer_buffer_modulo_inc,postinc2
  3546  0013D4  C01C  FFDD         	movff	?_FastTransfer_buffer_modulo_inc+1,postdec2
  3547                           
  3548                           ;FastTransfer.c: 241: ++_this->count;
  3549  0013D8  EE20 F0CC          	lfsr	2,204
  3550  0013DC  5021               	movf	FastTransfer_buffer_put@_this,w,c
  3551  0013DE  26D9               	addwf	fsr2l,f,c
  3552  0013E0  5022               	movf	FastTransfer_buffer_put@_this+1,w,c
  3553  0013E2  22DA               	addwfc	fsr2h,f,c
  3554  0013E4  2ADE               	incf	postinc2,f,c
  3555  0013E6  0E00               	movlw	0
  3556  0013E8  22DD               	addwfc	postdec2,f,c
  3557  0013EA  0012               	return	
  3558  0013EC                     __end_of_FastTransfer_buffer_put:
  3559                           	opt stack 0
  3560                           tosu	equ	0xFFF
  3561                           tosh	equ	0xFFE
  3562                           tosl	equ	0xFFD
  3563                           pclath	equ	0xFFA
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           intcon	equ	0xFF2
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           plusw2	equ	0xFDB
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8
  3578                           
  3579 ;; *************** function _FastTransfer_buffer_modulo_inc *****************
  3580 ;; Defined at:
  3581 ;;		line 278 in file "FastTransfer.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  value           2   26[COMRAM] const unsigned int 
  3584 ;;  modulus         2   28[COMRAM] const unsigned int 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  my_value        2   30[COMRAM] unsigned int 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  2   26[COMRAM] unsigned int 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3596 ;;      Params:         4       0       0       0       0       0       0
  3597 ;;      Locals:         2       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0
  3599 ;;      Totals:         6       0       0       0       0       0       0
  3600 ;;Total ram usage:        6 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    4
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_FastTransfer_buffer_put
  3607 ;;		_FastTransfer_buffer_get
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text10
  3612  002F8C                     __ptext10:
  3613                           	opt stack 0
  3614  002F8C                     _FastTransfer_buffer_modulo_inc:
  3615                           	opt stack 22
  3616                           
  3617                           ;FastTransfer.c: 279: unsigned int my_value = value + 1;
  3618                           
  3619                           ;incstack = 0
  3620  002F8C  0E01               	movlw	1
  3621  002F8E  241B               	addwf	FastTransfer_buffer_modulo_inc@value,w,c
  3622  002F90  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3623  002F92  0E00               	movlw	0
  3624  002F94  201C               	addwfc	FastTransfer_buffer_modulo_inc@value+1,w,c
  3625  002F96  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3626                           
  3627                           ;FastTransfer.c: 280: if (my_value >= modulus) {
  3628  002F98  501D               	movf	FastTransfer_buffer_modulo_inc@modulus,w,c
  3629  002F9A  5C1F               	subwf	FastTransfer_buffer_modulo_inc@my_value,w,c
  3630  002F9C  501E               	movf	FastTransfer_buffer_modulo_inc@modulus+1,w,c
  3631  002F9E  5820               	subwfb	FastTransfer_buffer_modulo_inc@my_value+1,w,c
  3632  002FA0  A0D8               	btfss	status,0,c
  3633  002FA2  D004               	goto	l4120
  3634                           
  3635                           ;FastTransfer.c: 281: my_value = 0;
  3636  002FA4  0E00               	movlw	0
  3637  002FA6  6E20               	movwf	FastTransfer_buffer_modulo_inc@my_value+1,c
  3638  002FA8  0E00               	movlw	0
  3639  002FAA  6E1F               	movwf	FastTransfer_buffer_modulo_inc@my_value,c
  3640  002FAC                     l4120:
  3641                           
  3642                           ;FastTransfer.c: 282: }
  3643                           ;FastTransfer.c: 283: return (my_value);
  3644  002FAC  C01F  F01B         	movff	FastTransfer_buffer_modulo_inc@my_value,?_FastTransfer_buffer_modulo_inc
  3645  002FB0  C020  F01C         	movff	FastTransfer_buffer_modulo_inc@my_value+1,?_FastTransfer_buffer_modulo_inc+1
  3646  002FB4  0012               	return	
  3647  002FB6                     __end_of_FastTransfer_buffer_modulo_inc:
  3648                           	opt stack 0
  3649                           tosu	equ	0xFFF
  3650                           tosh	equ	0xFFE
  3651                           tosl	equ	0xFFD
  3652                           pclath	equ	0xFFA
  3653                           tblptru	equ	0xFF8
  3654                           tblptrh	equ	0xFF7
  3655                           tblptrl	equ	0xFF6
  3656                           tablat	equ	0xFF5
  3657                           intcon	equ	0xFF2
  3658                           postinc0	equ	0xFEE
  3659                           wreg	equ	0xFE8
  3660                           indf2	equ	0xFDF
  3661                           postinc2	equ	0xFDE
  3662                           postdec2	equ	0xFDD
  3663                           plusw2	equ	0xFDB
  3664                           fsr2h	equ	0xFDA
  3665                           fsr2l	equ	0xFD9
  3666                           status	equ	0xFD8
  3667                           
  3668 ;; *************** function _Delay *****************
  3669 ;; Defined at:
  3670 ;;		line 6 in file "Function.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  wait            2   26[COMRAM] int 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  x               2   29[COMRAM] int 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3684 ;;      Params:         2       0       0       0       0       0       0
  3685 ;;      Locals:         2       0       0       0       0       0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0
  3687 ;;      Totals:         5       0       0       0       0       0       0
  3688 ;;Total ram usage:        5 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    4
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_respondECU
  3695 ;;		_TestBarGraph
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text11
  3700  002ECC                     __ptext11:
  3701                           	opt stack 0
  3702  002ECC                     _Delay:
  3703                           	opt stack 24
  3704                           
  3705                           ;Function.c: 7: int x;
  3706                           ;Function.c: 8: for (x = 0; x < wait; x++) {
  3707                           
  3708                           ;incstack = 0
  3709  002ECC  0E00               	movlw	0
  3710  002ECE  6E1F               	movwf	Delay@x+1,c
  3711  002ED0  0E00               	movlw	0
  3712  002ED2  6E1E               	movwf	Delay@x,c
  3713  002ED4  D00A               	goto	l1328
  3714  002ED6                     l4498:
  3715                           
  3716                           ;Function.c: 9: _delay((unsigned long)((1)*(16000000/4000.0)));
  3717  002ED6  0E06               	movlw	6
  3718  002ED8  6E1D               	movwf	??_Delay& (0+255),c
  3719  002EDA  0E30               	movlw	48
  3720  002EDC                     u8937:
  3721  002EDC  2EE8               	decfsz	wreg,f,c
  3722  002EDE  D7FE               	goto	u8937
  3723  002EE0  2E1D               	decfsz	??_Delay& (0+255),f,c
  3724  002EE2  D7FC               	goto	u8937
  3725  002EE4  D000               	nop2	
  3726  002EE6  4A1E               	infsnz	Delay@x,f,c
  3727  002EE8  2A1F               	incf	Delay@x+1,f,c
  3728  002EEA                     l1328:
  3729  002EEA  501B               	movf	Delay@wait,w,c
  3730  002EEC  5C1E               	subwf	Delay@x,w,c
  3731  002EEE  501F               	movf	Delay@x+1,w,c
  3732  002EF0  0A80               	xorlw	128
  3733  002EF2  6E1D               	movwf	??_Delay& (0+255),c
  3734  002EF4  501C               	movf	Delay@wait+1,w,c
  3735  002EF6  0A80               	xorlw	128
  3736  002EF8  581D               	subwfb	??_Delay& (0+255),w,c
  3737  002EFA  B0D8               	btfsc	status,0,c
  3738  002EFC  0012               	return	
  3739  002EFE  D7EB               	goto	l4498
  3740  002F00                     __end_of_Delay:
  3741                           	opt stack 0
  3742                           tosu	equ	0xFFF
  3743                           tosh	equ	0xFFE
  3744                           tosl	equ	0xFFD
  3745                           pclath	equ	0xFFA
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           intcon	equ	0xFF2
  3751                           postinc0	equ	0xFEE
  3752                           wreg	equ	0xFE8
  3753                           indf2	equ	0xFDF
  3754                           postinc2	equ	0xFDE
  3755                           postdec2	equ	0xFDD
  3756                           plusw2	equ	0xFDB
  3757                           fsr2h	equ	0xFDA
  3758                           fsr2l	equ	0xFD9
  3759                           status	equ	0xFD8
  3760                           
  3761 ;; *************** function _receiveData *****************
  3762 ;; Defined at:
  3763 ;;		line 83 in file "FastTransfer.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  holder          3    3[BANK1 ] unsigned char [3]
  3768 ;;  crcHolder       1    7[BANK1 ] unsigned char 
  3769 ;;  holder          3    0[BANK1 ] unsigned char [3]
  3770 ;;  crcHolder       1    6[BANK1 ] unsigned char 
  3771 ;;  u               2    8[BANK1 ] int 
  3772 ;;  r               2   10[BANK1 ] int 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      unsigned char 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3782 ;;      Params:         0       0       0       0       0       0       0
  3783 ;;      Locals:         0       0      12       0       0       0       0
  3784 ;;      Temps:          0       6       0       0       0       0       0
  3785 ;;      Totals:         0       6      12       0       0       0       0
  3786 ;;Total ram usage:       18 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    7
  3789 ;; This function calls:
  3790 ;;		Absolute function
  3791 ;;		_CRC8
  3792 ;;		_Receive_available
  3793 ;;		_Receive_get
  3794 ;;		_Send_put
  3795 ;; This function is called by:
  3796 ;;		_updateComms
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text12
  3801  0000D4                     __ptext12:
  3802                           	opt stack 0
  3803  0000D4                     _receiveData:
  3804                           	opt stack 22
  3805                           
  3806                           ;FastTransfer.c: 86: if (rx_len == 0) {
  3807                           
  3808                           ;incstack = 0
  3809  0000D4  503E               	movf	_rx_len,w,c
  3810  0000D6  A4D8               	btfss	status,2,c
  3811  0000D8  D0AC               	goto	l6754
  3812                           
  3813                           ;FastTransfer.c: 88: if (serial_available() > 4) {
  3814  0000DA  D801               	call	u7328
  3815  0000DC  D00A               	goto	u7329
  3816  0000DE                     u7328:
  3817  0000DE  0005               	push	
  3818  0000E0  6EFA               	movwf	pclath,c
  3819  0000E2  502F               	movf	_serial_available,w,c
  3820  0000E4  6EFD               	movwf	tosl,c
  3821  0000E6  5030               	movf	_serial_available+1,w,c
  3822  0000E8  6EFE               	movwf	tosh,c
  3823  0000EA  50F8               	movf	tblptru,w,c
  3824  0000EC  6EFF               	movwf	tosu,c
  3825  0000EE  50FA               	movf	pclath,w,c
  3826  0000F0  0012               	return		;indir
  3827  0000F2                     u7329:
  3828  0000F2  BE1E               	btfsc	?_Receive_available+1,7,c
  3829  0000F4  D09E               	goto	l6754
  3830  0000F6  501E               	movf	?_Receive_available+1,w,c
  3831  0000F8  E11E               	bnz	l6730
  3832  0000FA  0E05               	movlw	5
  3833  0000FC  5C1D               	subwf	?_Receive_available,w,c
  3834  0000FE  B0D8               	btfsc	status,0,c
  3835  000100  D01A               	goto	l6730
  3836  000102  D097               	goto	l6754
  3837  000104                     l6722:
  3838                           
  3839                           ;FastTransfer.c: 95: alignErrorCounter++;
  3840  000104  0100               	movlb	0	; () banked
  3841  000106  4BC9               	infsnz	_alignErrorCounter& (0+255),f,b
  3842  000108  2BCA               	incf	(_alignErrorCounter+1)& (0+255),f,b
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;FastTransfer.c: 96: if (serial_available() < 5)
  3846  00010A  D801               	call	u7348
  3847  00010C  D00A               	goto	u7349
  3848  00010E                     u7348:
  3849  00010E  0005               	push	
  3850  000110  6EFA               	movwf	pclath,c
  3851  000112  502F               	movf	_serial_available,w,c
  3852  000114  6EFD               	movwf	tosl,c
  3853  000116  5030               	movf	_serial_available+1,w,c
  3854  000118  6EFE               	movwf	tosh,c
  3855  00011A  50F8               	movf	tblptru,w,c
  3856  00011C  6EFF               	movwf	tosu,c
  3857  00011E  50FA               	movf	pclath,w,c
  3858  000120  0012               	return		;indir
  3859  000122                     u7349:
  3860  000122  BE1E               	btfsc	?_Receive_available+1,7,c
  3861  000124  D006               	goto	l6726
  3862  000126  501E               	movf	?_Receive_available+1,w,c
  3863  000128  E106               	bnz	l6730
  3864  00012A  0E05               	movlw	5
  3865  00012C  5C1D               	subwf	?_Receive_available,w,c
  3866  00012E  B0D8               	btfsc	status,0,c
  3867  000130  D002               	goto	l6730
  3868  000132                     l6726:
  3869                           
  3870                           ;FastTransfer.c: 97: return 0;
  3871  000132  0E00               	movlw	0
  3872  000134  0012               	return	
  3873  000136                     l6730:
  3874  000136  D801               	call	u7368
  3875  000138  D00A               	goto	u7369
  3876  00013A                     u7368:
  3877  00013A  0005               	push	
  3878  00013C  6EFA               	movwf	pclath,c
  3879  00013E  5031               	movf	_serial_read,w,c
  3880  000140  6EFD               	movwf	tosl,c
  3881  000142  5032               	movf	_serial_read+1,w,c
  3882  000144  6EFE               	movwf	tosh,c
  3883  000146  50F8               	movf	tblptru,w,c
  3884  000148  6EFF               	movwf	tosu,c
  3885  00014A  50FA               	movf	pclath,w,c
  3886  00014C  0012               	return		;indir
  3887  00014E                     u7369:
  3888  00014E  0A06               	xorlw	6
  3889  000150  A4D8               	btfss	status,2,c
  3890  000152  D7D8               	goto	l6722
  3891                           
  3892                           ;FastTransfer.c: 98: }
  3893                           ;FastTransfer.c: 99: if (serial_read() == 0x85) {
  3894  000154  D801               	call	u7388
  3895  000156  D00A               	goto	u7389
  3896  000158                     u7388:
  3897  000158  0005               	push	
  3898  00015A  6EFA               	movwf	pclath,c
  3899  00015C  5031               	movf	_serial_read,w,c
  3900  00015E  6EFD               	movwf	tosl,c
  3901  000160  5032               	movf	_serial_read+1,w,c
  3902  000162  6EFE               	movwf	tosh,c
  3903  000164  50F8               	movf	tblptru,w,c
  3904  000166  6EFF               	movwf	tosu,c
  3905  000168  50FA               	movf	pclath,w,c
  3906  00016A  0012               	return		;indir
  3907  00016C                     u7389:
  3908  00016C  0A85               	xorlw	133
  3909  00016E  A4D8               	btfss	status,2,c
  3910  000170  D060               	goto	l6754
  3911                           
  3912                           ;FastTransfer.c: 101: rx_address = serial_read();
  3913  000172  D801               	call	u7408
  3914  000174  D00A               	goto	u7409
  3915  000176                     u7408:
  3916  000176  0005               	push	
  3917  000178  6EFA               	movwf	pclath,c
  3918  00017A  5031               	movf	_serial_read,w,c
  3919  00017C  6EFD               	movwf	tosl,c
  3920  00017E  5032               	movf	_serial_read+1,w,c
  3921  000180  6EFE               	movwf	tosh,c
  3922  000182  50F8               	movf	tblptru,w,c
  3923  000184  6EFF               	movwf	tosu,c
  3924  000186  50FA               	movf	pclath,w,c
  3925  000188  0012               	return		;indir
  3926  00018A                     u7409:
  3927  00018A  6E3C               	movwf	_rx_address,c
  3928                           
  3929                           ;FastTransfer.c: 102: returnAddress = serial_read();
  3930  00018C  D801               	call	u7418
  3931  00018E  D00A               	goto	u7419
  3932  000190                     u7418:
  3933  000190  0005               	push	
  3934  000192  6EFA               	movwf	pclath,c
  3935  000194  5031               	movf	_serial_read,w,c
  3936  000196  6EFD               	movwf	tosl,c
  3937  000198  5032               	movf	_serial_read+1,w,c
  3938  00019A  6EFE               	movwf	tosh,c
  3939  00019C  50F8               	movf	tblptru,w,c
  3940  00019E  6EFF               	movwf	tosu,c
  3941  0001A0  50FA               	movf	pclath,w,c
  3942  0001A2  0012               	return		;indir
  3943  0001A4                     u7419:
  3944  0001A4  6E3B               	movwf	_returnAddress,c
  3945                           
  3946                           ;FastTransfer.c: 103: rx_len = serial_read();
  3947  0001A6  D801               	call	u7428
  3948  0001A8  D00A               	goto	u7429
  3949  0001AA                     u7428:
  3950  0001AA  0005               	push	
  3951  0001AC  6EFA               	movwf	pclath,c
  3952  0001AE  5031               	movf	_serial_read,w,c
  3953  0001B0  6EFD               	movwf	tosl,c
  3954  0001B2  5032               	movf	_serial_read+1,w,c
  3955  0001B4  6EFE               	movwf	tosh,c
  3956  0001B6  50F8               	movf	tblptru,w,c
  3957  0001B8  6EFF               	movwf	tosu,c
  3958  0001BA  50FA               	movf	pclath,w,c
  3959  0001BC  0012               	return		;indir
  3960  0001BE                     u7429:
  3961  0001BE  6E3E               	movwf	_rx_len,c
  3962                           
  3963                           ;FastTransfer.c: 106: if (rx_address != moduleAddress) {
  3964  0001C0  503A               	movf	_moduleAddress,w,c
  3965  0001C2  183C               	xorwf	_rx_address,w,c
  3966  0001C4  B4D8               	btfsc	status,2,c
  3967  0001C6  D035               	goto	l6754
  3968                           
  3969                           ;FastTransfer.c: 107: addressErrorCounter++;
  3970  0001C8  0100               	movlb	0	; () banked
  3971  0001CA  4BC7               	infsnz	_addressErrorCounter& (0+255),f,b
  3972  0001CC  2BC8               	incf	(_addressErrorCounter+1)& (0+255),f,b
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;FastTransfer.c: 110: int u;
  3976                           ;FastTransfer.c: 111: for (u = 0; u <= (rx_len + 1); u++) {
  3977  0001CE  0E00               	movlw	0
  3978  0001D0  0101               	movlb	1	; () banked
  3979  0001D2  6F42               	movwf	(receiveData@u+1)& (0+255),b
  3980  0001D4  0E00               	movlw	0
  3981  0001D6  6F41               	movwf	receiveData@u& (0+255),b
  3982  0001D8  D00F               	goto	l6746
  3983  0001DA                     l6742:
  3984                           
  3985                           ;FastTransfer.c: 112: serial_read();
  3986  0001DA  D801               	call	u7448
  3987  0001DC  D00A               	goto	l6744
  3988  0001DE                     u7448:
  3989  0001DE  0005               	push	
  3990  0001E0  6EFA               	movwf	pclath,c
  3991  0001E2  5031               	movf	_serial_read,w,c
  3992  0001E4  6EFD               	movwf	tosl,c
  3993  0001E6  5032               	movf	_serial_read+1,w,c
  3994  0001E8  6EFE               	movwf	tosh,c
  3995  0001EA  50F8               	movf	tblptru,w,c
  3996  0001EC  6EFF               	movwf	tosu,c
  3997  0001EE  50FA               	movf	pclath,w,c
  3998  0001F0  0012               	return		;indir
  3999  0001F2                     l6744:
  4000  0001F2  0101               	movlb	1	; () banked
  4001  0001F4  4B41               	infsnz	receiveData@u& (0+255),f,b
  4002  0001F6  2B42               	incf	(receiveData@u+1)& (0+255),f,b
  4003  0001F8                     l6746:
  4004                           
  4005                           ; BSR set to: 1
  4006  0001F8  503E               	movf	_rx_len,w,c
  4007  0001FA  0100               	movlb	0	; () banked
  4008  0001FC  6FF2               	movwf	??_receiveData& (0+255),b
  4009  0001FE  6BF3               	clrf	(??_receiveData+1)& (0+255),b
  4010  000200  0E01               	movlw	1
  4011  000202  0100               	movlb	0	; () banked
  4012  000204  27F2               	addwf	??_receiveData& (0+255),f,b
  4013  000206  0E00               	movlw	0
  4014  000208  23F3               	addwfc	(??_receiveData+1)& (0+255),f,b
  4015  00020A  0101               	movlb	1	; () banked
  4016  00020C  5141               	movf	receiveData@u& (0+255),w,b
  4017  00020E  0100               	movlb	0	; () banked
  4018  000210  5DF2               	subwf	??_receiveData& (0+255),w,b
  4019  000212  0100               	movlb	0	; () banked
  4020  000214  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4021  000216  0A80               	xorlw	128
  4022  000218  0100               	movlb	0	; () banked
  4023  00021A  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4024  00021C  0101               	movlb	1	; () banked
  4025  00021E  5142               	movf	(receiveData@u+1)& (0+255),w,b
  4026  000220  0A80               	xorlw	128
  4027  000222  0100               	movlb	0	; () banked
  4028  000224  59F4               	subwfb	(??_receiveData+2)& (0+255),w,b
  4029  000226  B0D8               	btfsc	status,0,c
  4030  000228  D7D8               	goto	l6742
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;FastTransfer.c: 113: }
  4034                           ;FastTransfer.c: 114: rx_len = 0;
  4035                           
  4036                           ; BSR set to: 0
  4037  00022A  0E00               	movlw	0
  4038  00022C  6E3E               	movwf	_rx_len,c
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;FastTransfer.c: 115: return 0;
  4042  00022E  0E00               	movlw	0
  4043                           
  4044                           ; BSR set to: 0
  4045  000230  0012               	return	
  4046  000232                     l6754:
  4047                           
  4048                           ;FastTransfer.c: 116: }
  4049                           ;FastTransfer.c: 118: }
  4050                           ;FastTransfer.c: 119: }
  4051                           ;FastTransfer.c: 120: }
  4052                           ;FastTransfer.c: 123: if (rx_len != 0) {
  4053  000232  503E               	movf	_rx_len,w,c
  4054  000234  A4D8               	btfss	status,2,c
  4055  000236  D01A               	goto	l6762
  4056  000238  D278               	goto	l6862
  4057  00023A                     l6758:
  4058                           
  4059                           ;FastTransfer.c: 139: rx_buffer[rx_array_inx++] = serial_read();
  4060  00023A  D801               	call	u7478
  4061  00023C  D00A               	goto	u7479
  4062  00023E                     u7478:
  4063  00023E  0005               	push	
  4064  000240  6EFA               	movwf	pclath,c
  4065  000242  5031               	movf	_serial_read,w,c
  4066  000244  6EFD               	movwf	tosl,c
  4067  000246  5032               	movf	_serial_read+1,w,c
  4068  000248  6EFE               	movwf	tosh,c
  4069  00024A  50F8               	movf	tblptru,w,c
  4070  00024C  6EFF               	movwf	tosu,c
  4071  00024E  50FA               	movf	pclath,w,c
  4072  000250  0012               	return		;indir
  4073  000252                     u7479:
  4074  000252  0100               	movlb	0	; () banked
  4075  000254  6FF2               	movwf	??_receiveData& (0+255),b
  4076  000256  503D               	movf	_rx_array_inx,w,c
  4077  000258  0D01               	mullw	1
  4078  00025A  0E00               	movlw	low _rx_buffer
  4079  00025C  24F3               	addwf	prodl,w,c
  4080  00025E  6ED9               	movwf	fsr2l,c
  4081  000260  0E03               	movlw	high _rx_buffer
  4082  000262  20F4               	addwfc	prodh,w,c
  4083  000264  6EDA               	movwf	fsr2h,c
  4084  000266  C0F2  FFDF         	movff	??_receiveData,indf2
  4085                           
  4086                           ; BSR set to: 0
  4087  00026A  2A3D               	incf	_rx_array_inx,f,c
  4088  00026C                     l6762:
  4089  00026C  D801               	call	u7488
  4090  00026E  D00A               	goto	u7489
  4091  000270                     u7488:
  4092  000270  0005               	push	
  4093  000272  6EFA               	movwf	pclath,c
  4094  000274  502F               	movf	_serial_available,w,c
  4095  000276  6EFD               	movwf	tosl,c
  4096  000278  5030               	movf	_serial_available+1,w,c
  4097  00027A  6EFE               	movwf	tosh,c
  4098  00027C  50F8               	movf	tblptru,w,c
  4099  00027E  6EFF               	movwf	tosu,c
  4100  000280  50FA               	movf	pclath,w,c
  4101  000282  0012               	return		;indir
  4102  000284                     u7489:
  4103  000284  501D               	movf	?_Receive_available,w,c
  4104  000286  101E               	iorwf	?_Receive_available+1,w,c
  4105  000288  B4D8               	btfsc	status,2,c
  4106  00028A  D004               	goto	l6766
  4107  00028C  503D               	movf	_rx_array_inx,w,c
  4108  00028E  5C3E               	subwf	_rx_len,w,c
  4109  000290  B0D8               	btfsc	status,0,c
  4110  000292  D7D3               	goto	l6758
  4111  000294                     l6766:
  4112                           
  4113                           ;FastTransfer.c: 140: }
  4114                           ;FastTransfer.c: 142: if (rx_len == (rx_array_inx - 1)) {
  4115  000294  503E               	movf	_rx_len,w,c
  4116  000296  0100               	movlb	0	; () banked
  4117  000298  6FF2               	movwf	??_receiveData& (0+255),b
  4118  00029A  6BF3               	clrf	(??_receiveData+1)& (0+255),b
  4119  00029C  0EFF               	movlw	255
  4120  00029E  0100               	movlb	0	; () banked
  4121  0002A0  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4122  0002A2  0EFF               	movlw	255
  4123  0002A4  0100               	movlb	0	; () banked
  4124  0002A6  6FF5               	movwf	(??_receiveData+3)& (0+255),b
  4125  0002A8  503D               	movf	_rx_array_inx,w,c
  4126  0002AA  0100               	movlb	0	; () banked
  4127  0002AC  6FF6               	movwf	(??_receiveData+4)& (0+255),b
  4128  0002AE  6BF7               	clrf	(??_receiveData+5)& (0+255),b
  4129  0002B0  0100               	movlb	0	; () banked
  4130  0002B2  51F4               	movf	(??_receiveData+2)& (0+255),w,b
  4131  0002B4  0100               	movlb	0	; () banked
  4132  0002B6  27F6               	addwf	(??_receiveData+4)& (0+255),f,b
  4133  0002B8  0100               	movlb	0	; () banked
  4134  0002BA  51F5               	movf	(??_receiveData+3)& (0+255),w,b
  4135  0002BC  0100               	movlb	0	; () banked
  4136  0002BE  23F7               	addwfc	(??_receiveData+5)& (0+255),f,b
  4137  0002C0  0100               	movlb	0	; () banked
  4138  0002C2  51F2               	movf	??_receiveData& (0+255),w,b
  4139  0002C4  0100               	movlb	0	; () banked
  4140  0002C6  19F6               	xorwf	(??_receiveData+4)& (0+255),w,b
  4141  0002C8  E105               	bnz	u7511
  4142  0002CA  0100               	movlb	0	; () banked
  4143  0002CC  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4144  0002CE  0100               	movlb	0	; () banked
  4145  0002D0  19F7               	xorwf	(??_receiveData+5)& (0+255),w,b
  4146  0002D2  A4D8               	btfss	status,2,c
  4147  0002D4                     u7511:
  4148  0002D4  D22A               	goto	l6862
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;FastTransfer.c: 145: calc_CS = CRC8(rx_buffer, rx_len);
  4152  0002D6  0E00               	movlw	low _rx_buffer
  4153  0002D8  6E1B               	movwf	CRC8@data,c
  4154  0002DA  0E03               	movlw	high _rx_buffer
  4155  0002DC  6E1C               	movwf	CRC8@data+1,c
  4156  0002DE  C03E  F01D         	movff	_rx_len,CRC8@len
  4157  0002E2  EC60  F016         	call	_CRC8	;wreg free
  4158  0002E6  6E37               	movwf	_calc_CS,c
  4159                           
  4160                           ;FastTransfer.c: 149: if (calc_CS == rx_buffer[rx_array_inx - 1]) {
  4161  0002E8  0EFF               	movlw	255
  4162  0002EA  0100               	movlb	0	; () banked
  4163  0002EC  6FF2               	movwf	??_receiveData& (0+255),b
  4164  0002EE  0EFF               	movlw	255
  4165  0002F0  0100               	movlb	0	; () banked
  4166  0002F2  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4167  0002F4  503D               	movf	_rx_array_inx,w,c
  4168  0002F6  0100               	movlb	0	; () banked
  4169  0002F8  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4170  0002FA  6BF5               	clrf	(??_receiveData+3)& (0+255),b
  4171  0002FC  0100               	movlb	0	; () banked
  4172  0002FE  51F2               	movf	??_receiveData& (0+255),w,b
  4173  000300  0100               	movlb	0	; () banked
  4174  000302  27F4               	addwf	(??_receiveData+2)& (0+255),f,b
  4175  000304  0100               	movlb	0	; () banked
  4176  000306  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4177  000308  0100               	movlb	0	; () banked
  4178  00030A  23F5               	addwfc	(??_receiveData+3)& (0+255),f,b
  4179  00030C  0E00               	movlw	low _rx_buffer
  4180  00030E  0100               	movlb	0	; () banked
  4181  000310  25F4               	addwf	(??_receiveData+2)& (0+255),w,b
  4182  000312  6ED9               	movwf	fsr2l,c
  4183  000314  0E03               	movlw	high _rx_buffer
  4184  000316  0100               	movlb	0	; () banked
  4185  000318  21F5               	addwfc	(??_receiveData+3)& (0+255),w,b
  4186  00031A  6EDA               	movwf	fsr2h,c
  4187  00031C  5037               	movf	_calc_CS,w,c
  4188  00031E  18DE               	xorwf	postinc2,w,c
  4189  000320  A4D8               	btfss	status,2,c
  4190  000322  D13B               	goto	l6824
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;FastTransfer.c: 152: int r;
  4194                           ;FastTransfer.c: 153: for (r = 0; r < rx_len; r = r + 3) {
  4195  000324  0E00               	movlw	0
  4196  000326  0101               	movlb	1	; () banked
  4197  000328  6F44               	movwf	(receiveData@r+1)& (0+255),b
  4198  00032A  0E00               	movlw	0
  4199  00032C  6F43               	movwf	receiveData@r& (0+255),b
  4200  00032E  D05C               	goto	l6784
  4201  000330                     l6774:
  4202                           
  4203                           ;FastTransfer.c: 154: if (rx_buffer[r] < maxDataAddress) {
  4204  000330  0E00               	movlw	low _rx_buffer
  4205  000332  0101               	movlb	1	; () banked
  4206  000334  2543               	addwf	receiveData@r& (0+255),w,b
  4207  000336  6ED9               	movwf	fsr2l,c
  4208  000338  0E03               	movlw	high _rx_buffer
  4209  00033A  0101               	movlb	1	; () banked
  4210  00033C  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  4211  00033E  6EDA               	movwf	fsr2h,c
  4212  000340  5039               	movf	_maxDataAddress,w,c
  4213  000342  5CDE               	subwf	postinc2,w,c
  4214  000344  B0D8               	btfsc	status,0,c
  4215  000346  D043               	goto	l6780
  4216                           
  4217                           ; BSR set to: 1
  4218                           ;FastTransfer.c: 155: group.parts[0] = rx_buffer[r + 1];
  4219  000348  0E01               	movlw	1
  4220  00034A  0101               	movlb	1	; () banked
  4221  00034C  2543               	addwf	receiveData@r& (0+255),w,b
  4222  00034E  0100               	movlb	0	; () banked
  4223  000350  6FF2               	movwf	??_receiveData& (0+255),b
  4224  000352  0E00               	movlw	0
  4225  000354  0101               	movlb	1	; () banked
  4226  000356  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  4227  000358  0100               	movlb	0	; () banked
  4228  00035A  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4229  00035C  0E00               	movlw	low _rx_buffer
  4230  00035E  0100               	movlb	0	; () banked
  4231  000360  25F2               	addwf	??_receiveData& (0+255),w,b
  4232  000362  6ED9               	movwf	fsr2l,c
  4233  000364  0E03               	movlw	high _rx_buffer
  4234  000366  0100               	movlb	0	; () banked
  4235  000368  21F3               	addwfc	(??_receiveData+1)& (0+255),w,b
  4236  00036A  6EDA               	movwf	fsr2h,c
  4237  00036C  50DF               	movf	indf2,w,c
  4238  00036E  6E2B               	movwf	_group,c
  4239                           
  4240                           ;FastTransfer.c: 156: group.parts[1] = rx_buffer[r + 2];
  4241  000370  0E02               	movlw	2
  4242  000372  0101               	movlb	1	; () banked
  4243  000374  2543               	addwf	receiveData@r& (0+255),w,b
  4244  000376  0100               	movlb	0	; () banked
  4245  000378  6FF2               	movwf	??_receiveData& (0+255),b
  4246  00037A  0E00               	movlw	0
  4247  00037C  0101               	movlb	1	; () banked
  4248  00037E  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  4249  000380  0100               	movlb	0	; () banked
  4250  000382  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4251  000384  0E00               	movlw	low _rx_buffer
  4252  000386  0100               	movlb	0	; () banked
  4253  000388  25F2               	addwf	??_receiveData& (0+255),w,b
  4254  00038A  6ED9               	movwf	fsr2l,c
  4255  00038C  0E03               	movlw	high _rx_buffer
  4256  00038E  0100               	movlb	0	; () banked
  4257  000390  21F3               	addwfc	(??_receiveData+1)& (0+255),w,b
  4258  000392  6EDA               	movwf	fsr2h,c
  4259  000394  50DF               	movf	indf2,w,c
  4260  000396  6E2C               	movwf	_group+1,c
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;FastTransfer.c: 157: receiveArrayAddress[(rx_buffer[r])] = group.integer;
  4264  000398  0E00               	movlw	low _rx_buffer
  4265  00039A  0101               	movlb	1	; () banked
  4266  00039C  2543               	addwf	receiveData@r& (0+255),w,b
  4267  00039E  6ED9               	movwf	fsr2l,c
  4268  0003A0  0E03               	movlw	high _rx_buffer
  4269  0003A2  0101               	movlb	1	; () banked
  4270  0003A4  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  4271  0003A6  6EDA               	movwf	fsr2h,c
  4272  0003A8  50DF               	movf	indf2,w,c
  4273  0003AA  0100               	movlb	0	; () banked
  4274  0003AC  6FF2               	movwf	??_receiveData& (0+255),b
  4275  0003AE  0100               	movlb	0	; () banked
  4276  0003B0  51F2               	movf	??_receiveData& (0+255),w,b
  4277  0003B2  0D02               	mullw	2
  4278  0003B4  50F3               	movf	prodl,w,c
  4279  0003B6  0100               	movlb	0	; () banked
  4280  0003B8  25D7               	addwf	_receiveArrayAddress& (0+255),w,b
  4281  0003BA  6ED9               	movwf	fsr2l,c
  4282  0003BC  50F4               	movf	prodh,w,c
  4283  0003BE  0100               	movlb	0	; () banked
  4284  0003C0  21D8               	addwfc	(_receiveArrayAddress+1)& (0+255),w,b
  4285  0003C2  6EDA               	movwf	fsr2h,c
  4286  0003C4  C02B  FFDE         	movff	_group,postinc2
  4287  0003C8  C02C  FFDD         	movff	_group+1,postdec2
  4288                           
  4289                           ;FastTransfer.c: 158: } else {
  4290  0003CC  D003               	goto	l6782
  4291  0003CE                     l6780:
  4292                           
  4293                           ;FastTransfer.c: 159: dataAdressErrorCounter++;
  4294  0003CE  0100               	movlb	0	; () banked
  4295  0003D0  4BCD               	infsnz	_dataAdressErrorCounter& (0+255),f,b
  4296  0003D2  2BCE               	incf	(_dataAdressErrorCounter+1)& (0+255),f,b
  4297  0003D4                     l6782:
  4298                           
  4299                           ; BSR set to: 0
  4300  0003D4  0E03               	movlw	3
  4301  0003D6  0101               	movlb	1	; () banked
  4302  0003D8  2543               	addwf	receiveData@r& (0+255),w,b
  4303  0003DA  0101               	movlb	1	; () banked
  4304  0003DC  6F43               	movwf	receiveData@r& (0+255),b
  4305  0003DE  0E00               	movlw	0
  4306  0003E0  0101               	movlb	1	; () banked
  4307  0003E2  2144               	addwfc	(receiveData@r+1)& (0+255),w,b
  4308  0003E4  0101               	movlb	1	; () banked
  4309  0003E6  6F44               	movwf	(receiveData@r+1)& (0+255),b
  4310  0003E8                     l6784:
  4311                           
  4312                           ; BSR set to: 1
  4313  0003E8  503E               	movf	_rx_len,w,c
  4314  0003EA  0100               	movlb	0	; () banked
  4315  0003EC  6FF2               	movwf	??_receiveData& (0+255),b
  4316  0003EE  6BF3               	clrf	(??_receiveData+1)& (0+255),b
  4317  0003F0  0100               	movlb	0	; () banked
  4318  0003F2  51F2               	movf	??_receiveData& (0+255),w,b
  4319  0003F4  0101               	movlb	1	; () banked
  4320  0003F6  5D43               	subwf	receiveData@r& (0+255),w,b
  4321  0003F8  0101               	movlb	1	; () banked
  4322  0003FA  5144               	movf	(receiveData@r+1)& (0+255),w,b
  4323  0003FC  0A80               	xorlw	128
  4324  0003FE  0100               	movlb	0	; () banked
  4325  000400  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4326  000402  0100               	movlb	0	; () banked
  4327  000404  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4328  000406  0A80               	xorlw	128
  4329  000408  0100               	movlb	0	; () banked
  4330  00040A  59F4               	subwfb	(??_receiveData+2)& (0+255),w,b
  4331  00040C  A0D8               	btfss	status,0,c
  4332  00040E  D790               	goto	l6774
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;FastTransfer.c: 160: }
  4336                           ;FastTransfer.c: 161: }
  4337                           ;FastTransfer.c: 164: if (AKNAKsend) {
  4338                           
  4339                           ; BSR set to: 0
  4340  000410  5036               	movf	_AKNAKsend,w,c
  4341  000412  B4D8               	btfsc	status,2,c
  4342  000414  D0BC               	goto	l6814
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;FastTransfer.c: 165: unsigned char holder[3];
  4346                           ;FastTransfer.c: 166: holder[0] = 255;
  4347  000416  0101               	movlb	1	; () banked
  4348  000418  6939               	setf	receiveData@holder& (0+255),b
  4349                           
  4350                           ; BSR set to: 1
  4351                           ;FastTransfer.c: 167: holder[1] = 1;
  4352  00041A  0E01               	movlw	1
  4353  00041C  0101               	movlb	1	; () banked
  4354  00041E  6F3A               	movwf	(receiveData@holder+1)& (0+255),b
  4355                           
  4356                           ; BSR set to: 1
  4357                           ;FastTransfer.c: 168: holder[2] = rx_buffer[rx_array_inx - 1];
  4358  000420  0EFF               	movlw	255
  4359  000422  0100               	movlb	0	; () banked
  4360  000424  6FF2               	movwf	??_receiveData& (0+255),b
  4361  000426  0EFF               	movlw	255
  4362  000428  0100               	movlb	0	; () banked
  4363  00042A  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4364  00042C  503D               	movf	_rx_array_inx,w,c
  4365  00042E  0100               	movlb	0	; () banked
  4366  000430  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4367  000432  6BF5               	clrf	(??_receiveData+3)& (0+255),b
  4368  000434  0100               	movlb	0	; () banked
  4369  000436  51F2               	movf	??_receiveData& (0+255),w,b
  4370  000438  0100               	movlb	0	; () banked
  4371  00043A  27F4               	addwf	(??_receiveData+2)& (0+255),f,b
  4372  00043C  0100               	movlb	0	; () banked
  4373  00043E  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4374  000440  0100               	movlb	0	; () banked
  4375  000442  23F5               	addwfc	(??_receiveData+3)& (0+255),f,b
  4376  000444  0E00               	movlw	low _rx_buffer
  4377  000446  0100               	movlb	0	; () banked
  4378  000448  25F4               	addwf	(??_receiveData+2)& (0+255),w,b
  4379  00044A  6ED9               	movwf	fsr2l,c
  4380  00044C  0E03               	movlw	high _rx_buffer
  4381  00044E  0100               	movlb	0	; () banked
  4382  000450  21F5               	addwfc	(??_receiveData+3)& (0+255),w,b
  4383  000452  6EDA               	movwf	fsr2h,c
  4384  000454  50DF               	movf	indf2,w,c
  4385  000456  0101               	movlb	1	; () banked
  4386  000458  6F3B               	movwf	(receiveData@holder+2)& (0+255),b
  4387                           
  4388                           ; BSR set to: 1
  4389                           ;FastTransfer.c: 169: unsigned char crcHolder = CRC8(holder, 3);
  4390  00045A  0E39               	movlw	low receiveData@holder
  4391  00045C  6E1B               	movwf	CRC8@data,c
  4392  00045E  0E01               	movlw	high receiveData@holder
  4393  000460  6E1C               	movwf	CRC8@data+1,c
  4394  000462  0E03               	movlw	3
  4395  000464  6E1D               	movwf	CRC8@len,c
  4396  000466  EC60  F016         	call	_CRC8	;wreg free
  4397  00046A  0101               	movlb	1	; () banked
  4398  00046C  6F3F               	movwf	receiveData@crcHolder& (0+255),b
  4399                           
  4400                           ; BSR set to: 1
  4401                           ;FastTransfer.c: 170: serial_write(0x06);
  4402  00046E  D801               	call	u7568
  4403  000470  D00B               	goto	l6798
  4404  000472                     u7568:
  4405  000472  0005               	push	
  4406  000474  6EFA               	movwf	pclath,c
  4407  000476  5033               	movf	_serial_write,w,c
  4408  000478  6EFD               	movwf	tosl,c
  4409  00047A  5034               	movf	_serial_write+1,w,c
  4410  00047C  6EFE               	movwf	tosh,c
  4411  00047E  50F8               	movf	tblptru,w,c
  4412  000480  6EFF               	movwf	tosu,c
  4413  000482  50FA               	movf	pclath,w,c
  4414  000484  0E06               	movlw	6
  4415  000486  0012               	return		;indir
  4416  000488                     l6798:
  4417                           
  4418                           ;FastTransfer.c: 171: serial_write(0x85);
  4419  000488  D801               	call	u7578
  4420  00048A  D00B               	goto	l6800
  4421  00048C                     u7578:
  4422  00048C  0005               	push	
  4423  00048E  6EFA               	movwf	pclath,c
  4424  000490  5033               	movf	_serial_write,w,c
  4425  000492  6EFD               	movwf	tosl,c
  4426  000494  5034               	movf	_serial_write+1,w,c
  4427  000496  6EFE               	movwf	tosh,c
  4428  000498  50F8               	movf	tblptru,w,c
  4429  00049A  6EFF               	movwf	tosu,c
  4430  00049C  50FA               	movf	pclath,w,c
  4431  00049E  0E85               	movlw	133
  4432  0004A0  0012               	return		;indir
  4433  0004A2                     l6800:
  4434                           
  4435                           ;FastTransfer.c: 172: serial_write(returnAddress);
  4436  0004A2  D801               	call	u7588
  4437  0004A4  D00B               	goto	l6802
  4438  0004A6                     u7588:
  4439  0004A6  0005               	push	
  4440  0004A8  6EFA               	movwf	pclath,c
  4441  0004AA  5033               	movf	_serial_write,w,c
  4442  0004AC  6EFD               	movwf	tosl,c
  4443  0004AE  5034               	movf	_serial_write+1,w,c
  4444  0004B0  6EFE               	movwf	tosh,c
  4445  0004B2  50F8               	movf	tblptru,w,c
  4446  0004B4  6EFF               	movwf	tosu,c
  4447  0004B6  50FA               	movf	pclath,w,c
  4448  0004B8  503B               	movf	_returnAddress,w,c
  4449  0004BA  0012               	return		;indir
  4450  0004BC                     l6802:
  4451                           
  4452                           ;FastTransfer.c: 173: serial_write(moduleAddress);
  4453  0004BC  D801               	call	u7598
  4454  0004BE  D00B               	goto	l6804
  4455  0004C0                     u7598:
  4456  0004C0  0005               	push	
  4457  0004C2  6EFA               	movwf	pclath,c
  4458  0004C4  5033               	movf	_serial_write,w,c
  4459  0004C6  6EFD               	movwf	tosl,c
  4460  0004C8  5034               	movf	_serial_write+1,w,c
  4461  0004CA  6EFE               	movwf	tosh,c
  4462  0004CC  50F8               	movf	tblptru,w,c
  4463  0004CE  6EFF               	movwf	tosu,c
  4464  0004D0  50FA               	movf	pclath,w,c
  4465  0004D2  503A               	movf	_moduleAddress,w,c
  4466  0004D4  0012               	return		;indir
  4467  0004D6                     l6804:
  4468                           
  4469                           ;FastTransfer.c: 174: serial_write(3);
  4470  0004D6  D801               	call	u7608
  4471  0004D8  D00B               	goto	l6806
  4472  0004DA                     u7608:
  4473  0004DA  0005               	push	
  4474  0004DC  6EFA               	movwf	pclath,c
  4475  0004DE  5033               	movf	_serial_write,w,c
  4476  0004E0  6EFD               	movwf	tosl,c
  4477  0004E2  5034               	movf	_serial_write+1,w,c
  4478  0004E4  6EFE               	movwf	tosh,c
  4479  0004E6  50F8               	movf	tblptru,w,c
  4480  0004E8  6EFF               	movwf	tosu,c
  4481  0004EA  50FA               	movf	pclath,w,c
  4482  0004EC  0E03               	movlw	3
  4483  0004EE  0012               	return		;indir
  4484  0004F0                     l6806:
  4485                           
  4486                           ;FastTransfer.c: 175: serial_write(255);
  4487  0004F0  D801               	call	u7618
  4488  0004F2  D00B               	goto	l6808
  4489  0004F4                     u7618:
  4490  0004F4  0005               	push	
  4491  0004F6  6EFA               	movwf	pclath,c
  4492  0004F8  5033               	movf	_serial_write,w,c
  4493  0004FA  6EFD               	movwf	tosl,c
  4494  0004FC  5034               	movf	_serial_write+1,w,c
  4495  0004FE  6EFE               	movwf	tosh,c
  4496  000500  50F8               	movf	tblptru,w,c
  4497  000502  6EFF               	movwf	tosu,c
  4498  000504  50FA               	movf	pclath,w,c
  4499  000506  0EFF               	movlw	255
  4500  000508  0012               	return		;indir
  4501  00050A                     l6808:
  4502                           
  4503                           ;FastTransfer.c: 176: serial_write(1);
  4504  00050A  D801               	call	u7628
  4505  00050C  D00B               	goto	l6810
  4506  00050E                     u7628:
  4507  00050E  0005               	push	
  4508  000510  6EFA               	movwf	pclath,c
  4509  000512  5033               	movf	_serial_write,w,c
  4510  000514  6EFD               	movwf	tosl,c
  4511  000516  5034               	movf	_serial_write+1,w,c
  4512  000518  6EFE               	movwf	tosh,c
  4513  00051A  50F8               	movf	tblptru,w,c
  4514  00051C  6EFF               	movwf	tosu,c
  4515  00051E  50FA               	movf	pclath,w,c
  4516  000520  0E01               	movlw	1
  4517  000522  0012               	return		;indir
  4518  000524                     l6810:
  4519                           
  4520                           ;FastTransfer.c: 177: serial_write(rx_buffer[rx_array_inx - 1]);
  4521  000524  D801               	call	u7638
  4522  000526  D025               	goto	l6812
  4523  000528                     u7638:
  4524  000528  0005               	push	
  4525  00052A  6EFA               	movwf	pclath,c
  4526  00052C  5033               	movf	_serial_write,w,c
  4527  00052E  6EFD               	movwf	tosl,c
  4528  000530  5034               	movf	_serial_write+1,w,c
  4529  000532  6EFE               	movwf	tosh,c
  4530  000534  50F8               	movf	tblptru,w,c
  4531  000536  6EFF               	movwf	tosu,c
  4532  000538  50FA               	movf	pclath,w,c
  4533  00053A  0EFF               	movlw	255
  4534  00053C  0100               	movlb	0	; () banked
  4535  00053E  6FF2               	movwf	??_receiveData& (0+255),b
  4536  000540  0EFF               	movlw	255
  4537  000542  0100               	movlb	0	; () banked
  4538  000544  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4539  000546  503D               	movf	_rx_array_inx,w,c
  4540  000548  0100               	movlb	0	; () banked
  4541  00054A  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4542  00054C  6BF5               	clrf	(??_receiveData+3)& (0+255),b
  4543  00054E  0100               	movlb	0	; () banked
  4544  000550  51F2               	movf	??_receiveData& (0+255),w,b
  4545  000552  0100               	movlb	0	; () banked
  4546  000554  27F4               	addwf	(??_receiveData+2)& (0+255),f,b
  4547  000556  0100               	movlb	0	; () banked
  4548  000558  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4549  00055A  0100               	movlb	0	; () banked
  4550  00055C  23F5               	addwfc	(??_receiveData+3)& (0+255),f,b
  4551  00055E  0E00               	movlw	low _rx_buffer
  4552  000560  0100               	movlb	0	; () banked
  4553  000562  25F4               	addwf	(??_receiveData+2)& (0+255),w,b
  4554  000564  6ED9               	movwf	fsr2l,c
  4555  000566  0E03               	movlw	high _rx_buffer
  4556  000568  0100               	movlb	0	; () banked
  4557  00056A  21F5               	addwfc	(??_receiveData+3)& (0+255),w,b
  4558  00056C  6EDA               	movwf	fsr2h,c
  4559  00056E  50DF               	movf	indf2,w,c
  4560  000570  0012               	return		;indir
  4561  000572                     l6812:
  4562                           
  4563                           ;FastTransfer.c: 178: serial_write(crcHolder);
  4564  000572  D801               	call	u7648
  4565  000574  D00C               	goto	l6814
  4566  000576                     u7648:
  4567  000576  0005               	push	
  4568  000578  6EFA               	movwf	pclath,c
  4569  00057A  5033               	movf	_serial_write,w,c
  4570  00057C  6EFD               	movwf	tosl,c
  4571  00057E  5034               	movf	_serial_write+1,w,c
  4572  000580  6EFE               	movwf	tosh,c
  4573  000582  50F8               	movf	tblptru,w,c
  4574  000584  6EFF               	movwf	tosu,c
  4575  000586  50FA               	movf	pclath,w,c
  4576  000588  0101               	movlb	1	; () banked
  4577  00058A  513F               	movf	receiveData@crcHolder& (0+255),w,b
  4578  00058C  0012               	return		;indir
  4579  00058E                     l6814:
  4580                           
  4581                           ;FastTransfer.c: 179: }
  4582                           ;FastTransfer.c: 183: rx_len = 0;
  4583  00058E  0E00               	movlw	0
  4584  000590  6E3E               	movwf	_rx_len,c
  4585                           
  4586                           ;FastTransfer.c: 184: rx_array_inx = 0;
  4587  000592  0E00               	movlw	0
  4588  000594  6E3D               	movwf	_rx_array_inx,c
  4589                           
  4590                           ;FastTransfer.c: 185: return 1;
  4591  000596  0E01               	movlw	1
  4592  000598  0012               	return	
  4593  00059A                     l6824:
  4594                           
  4595                           ;FastTransfer.c: 187: crcErrorCounter++;
  4596  00059A  0100               	movlb	0	; () banked
  4597  00059C  4BCB               	infsnz	_crcErrorCounter& (0+255),f,b
  4598  00059E  2BCC               	incf	(_crcErrorCounter+1)& (0+255),f,b
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;FastTransfer.c: 189: if (AKNAKsend) {
  4602  0005A0  5036               	movf	_AKNAKsend,w,c
  4603  0005A2  B4D8               	btfsc	status,2,c
  4604  0005A4  D0BC               	goto	l6854
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;FastTransfer.c: 190: unsigned char holder[3];
  4608                           ;FastTransfer.c: 191: holder[0] = 255;
  4609  0005A6  0101               	movlb	1	; () banked
  4610  0005A8  693C               	setf	receiveData@holder_2468& (0+255),b
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;FastTransfer.c: 192: holder[1] = 2;
  4614  0005AA  0E02               	movlw	2
  4615  0005AC  0101               	movlb	1	; () banked
  4616  0005AE  6F3D               	movwf	(receiveData@holder_2468+1)& (0+255),b
  4617                           
  4618                           ; BSR set to: 1
  4619                           ;FastTransfer.c: 193: holder[2] = rx_buffer[rx_array_inx - 1];
  4620  0005B0  0EFF               	movlw	255
  4621  0005B2  0100               	movlb	0	; () banked
  4622  0005B4  6FF2               	movwf	??_receiveData& (0+255),b
  4623  0005B6  0EFF               	movlw	255
  4624  0005B8  0100               	movlb	0	; () banked
  4625  0005BA  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4626  0005BC  503D               	movf	_rx_array_inx,w,c
  4627  0005BE  0100               	movlb	0	; () banked
  4628  0005C0  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4629  0005C2  6BF5               	clrf	(??_receiveData+3)& (0+255),b
  4630  0005C4  0100               	movlb	0	; () banked
  4631  0005C6  51F2               	movf	??_receiveData& (0+255),w,b
  4632  0005C8  0100               	movlb	0	; () banked
  4633  0005CA  27F4               	addwf	(??_receiveData+2)& (0+255),f,b
  4634  0005CC  0100               	movlb	0	; () banked
  4635  0005CE  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4636  0005D0  0100               	movlb	0	; () banked
  4637  0005D2  23F5               	addwfc	(??_receiveData+3)& (0+255),f,b
  4638  0005D4  0E00               	movlw	low _rx_buffer
  4639  0005D6  0100               	movlb	0	; () banked
  4640  0005D8  25F4               	addwf	(??_receiveData+2)& (0+255),w,b
  4641  0005DA  6ED9               	movwf	fsr2l,c
  4642  0005DC  0E03               	movlw	high _rx_buffer
  4643  0005DE  0100               	movlb	0	; () banked
  4644  0005E0  21F5               	addwfc	(??_receiveData+3)& (0+255),w,b
  4645  0005E2  6EDA               	movwf	fsr2h,c
  4646  0005E4  50DF               	movf	indf2,w,c
  4647  0005E6  0101               	movlb	1	; () banked
  4648  0005E8  6F3E               	movwf	(receiveData@holder_2468+2)& (0+255),b
  4649                           
  4650                           ; BSR set to: 1
  4651                           ;FastTransfer.c: 194: unsigned char crcHolder = CRC8(holder, 3);
  4652  0005EA  0E3C               	movlw	low receiveData@holder_2468
  4653  0005EC  6E1B               	movwf	CRC8@data,c
  4654  0005EE  0E01               	movlw	high receiveData@holder_2468
  4655  0005F0  6E1C               	movwf	CRC8@data+1,c
  4656  0005F2  0E03               	movlw	3
  4657  0005F4  6E1D               	movwf	CRC8@len,c
  4658  0005F6  EC60  F016         	call	_CRC8
  4659  0005FA  0101               	movlb	1	; () banked
  4660  0005FC  6F40               	movwf	receiveData@crcHolder_2469& (0+255),b
  4661                           
  4662                           ; BSR set to: 1
  4663                           ;FastTransfer.c: 195: serial_write(0x06);
  4664  0005FE  D801               	call	u7668
  4665  000600  D00B               	goto	l6838
  4666  000602                     u7668:
  4667  000602  0005               	push	
  4668  000604  6EFA               	movwf	pclath,c
  4669  000606  5033               	movf	_serial_write,w,c
  4670  000608  6EFD               	movwf	tosl,c
  4671  00060A  5034               	movf	_serial_write+1,w,c
  4672  00060C  6EFE               	movwf	tosh,c
  4673  00060E  50F8               	movf	tblptru,w,c
  4674  000610  6EFF               	movwf	tosu,c
  4675  000612  50FA               	movf	pclath,w,c
  4676  000614  0E06               	movlw	6
  4677  000616  0012               	return		;indir
  4678  000618                     l6838:
  4679                           
  4680                           ;FastTransfer.c: 196: serial_write(0x85);
  4681  000618  D801               	call	u7678
  4682  00061A  D00B               	goto	l6840
  4683  00061C                     u7678:
  4684  00061C  0005               	push	
  4685  00061E  6EFA               	movwf	pclath,c
  4686  000620  5033               	movf	_serial_write,w,c
  4687  000622  6EFD               	movwf	tosl,c
  4688  000624  5034               	movf	_serial_write+1,w,c
  4689  000626  6EFE               	movwf	tosh,c
  4690  000628  50F8               	movf	tblptru,w,c
  4691  00062A  6EFF               	movwf	tosu,c
  4692  00062C  50FA               	movf	pclath,w,c
  4693  00062E  0E85               	movlw	133
  4694  000630  0012               	return		;indir
  4695  000632                     l6840:
  4696                           
  4697                           ;FastTransfer.c: 197: serial_write(returnAddress);
  4698  000632  D801               	call	u7688
  4699  000634  D00B               	goto	l6842
  4700  000636                     u7688:
  4701  000636  0005               	push	
  4702  000638  6EFA               	movwf	pclath,c
  4703  00063A  5033               	movf	_serial_write,w,c
  4704  00063C  6EFD               	movwf	tosl,c
  4705  00063E  5034               	movf	_serial_write+1,w,c
  4706  000640  6EFE               	movwf	tosh,c
  4707  000642  50F8               	movf	tblptru,w,c
  4708  000644  6EFF               	movwf	tosu,c
  4709  000646  50FA               	movf	pclath,w,c
  4710  000648  503B               	movf	_returnAddress,w,c
  4711  00064A  0012               	return		;indir
  4712  00064C                     l6842:
  4713                           
  4714                           ;FastTransfer.c: 198: serial_write(moduleAddress);
  4715  00064C  D801               	call	u7698
  4716  00064E  D00B               	goto	l6844
  4717  000650                     u7698:
  4718  000650  0005               	push	
  4719  000652  6EFA               	movwf	pclath,c
  4720  000654  5033               	movf	_serial_write,w,c
  4721  000656  6EFD               	movwf	tosl,c
  4722  000658  5034               	movf	_serial_write+1,w,c
  4723  00065A  6EFE               	movwf	tosh,c
  4724  00065C  50F8               	movf	tblptru,w,c
  4725  00065E  6EFF               	movwf	tosu,c
  4726  000660  50FA               	movf	pclath,w,c
  4727  000662  503A               	movf	_moduleAddress,w,c
  4728  000664  0012               	return		;indir
  4729  000666                     l6844:
  4730                           
  4731                           ;FastTransfer.c: 199: serial_write(3);
  4732  000666  D801               	call	u7708
  4733  000668  D00B               	goto	l6846
  4734  00066A                     u7708:
  4735  00066A  0005               	push	
  4736  00066C  6EFA               	movwf	pclath,c
  4737  00066E  5033               	movf	_serial_write,w,c
  4738  000670  6EFD               	movwf	tosl,c
  4739  000672  5034               	movf	_serial_write+1,w,c
  4740  000674  6EFE               	movwf	tosh,c
  4741  000676  50F8               	movf	tblptru,w,c
  4742  000678  6EFF               	movwf	tosu,c
  4743  00067A  50FA               	movf	pclath,w,c
  4744  00067C  0E03               	movlw	3
  4745  00067E  0012               	return		;indir
  4746  000680                     l6846:
  4747                           
  4748                           ;FastTransfer.c: 200: serial_write(255);
  4749  000680  D801               	call	u7718
  4750  000682  D00B               	goto	l6848
  4751  000684                     u7718:
  4752  000684  0005               	push	
  4753  000686  6EFA               	movwf	pclath,c
  4754  000688  5033               	movf	_serial_write,w,c
  4755  00068A  6EFD               	movwf	tosl,c
  4756  00068C  5034               	movf	_serial_write+1,w,c
  4757  00068E  6EFE               	movwf	tosh,c
  4758  000690  50F8               	movf	tblptru,w,c
  4759  000692  6EFF               	movwf	tosu,c
  4760  000694  50FA               	movf	pclath,w,c
  4761  000696  0EFF               	movlw	255
  4762  000698  0012               	return		;indir
  4763  00069A                     l6848:
  4764                           
  4765                           ;FastTransfer.c: 201: serial_write(2);
  4766  00069A  D801               	call	u7728
  4767  00069C  D00B               	goto	l6850
  4768  00069E                     u7728:
  4769  00069E  0005               	push	
  4770  0006A0  6EFA               	movwf	pclath,c
  4771  0006A2  5033               	movf	_serial_write,w,c
  4772  0006A4  6EFD               	movwf	tosl,c
  4773  0006A6  5034               	movf	_serial_write+1,w,c
  4774  0006A8  6EFE               	movwf	tosh,c
  4775  0006AA  50F8               	movf	tblptru,w,c
  4776  0006AC  6EFF               	movwf	tosu,c
  4777  0006AE  50FA               	movf	pclath,w,c
  4778  0006B0  0E02               	movlw	2
  4779  0006B2  0012               	return		;indir
  4780  0006B4                     l6850:
  4781                           
  4782                           ;FastTransfer.c: 202: serial_write(rx_buffer[rx_array_inx - 1]);
  4783  0006B4  D801               	call	u7738
  4784  0006B6  D025               	goto	l6852
  4785  0006B8                     u7738:
  4786  0006B8  0005               	push	
  4787  0006BA  6EFA               	movwf	pclath,c
  4788  0006BC  5033               	movf	_serial_write,w,c
  4789  0006BE  6EFD               	movwf	tosl,c
  4790  0006C0  5034               	movf	_serial_write+1,w,c
  4791  0006C2  6EFE               	movwf	tosh,c
  4792  0006C4  50F8               	movf	tblptru,w,c
  4793  0006C6  6EFF               	movwf	tosu,c
  4794  0006C8  50FA               	movf	pclath,w,c
  4795  0006CA  0EFF               	movlw	255
  4796  0006CC  0100               	movlb	0	; () banked
  4797  0006CE  6FF2               	movwf	??_receiveData& (0+255),b
  4798  0006D0  0EFF               	movlw	255
  4799  0006D2  0100               	movlb	0	; () banked
  4800  0006D4  6FF3               	movwf	(??_receiveData+1)& (0+255),b
  4801  0006D6  503D               	movf	_rx_array_inx,w,c
  4802  0006D8  0100               	movlb	0	; () banked
  4803  0006DA  6FF4               	movwf	(??_receiveData+2)& (0+255),b
  4804  0006DC  6BF5               	clrf	(??_receiveData+3)& (0+255),b
  4805  0006DE  0100               	movlb	0	; () banked
  4806  0006E0  51F2               	movf	??_receiveData& (0+255),w,b
  4807  0006E2  0100               	movlb	0	; () banked
  4808  0006E4  27F4               	addwf	(??_receiveData+2)& (0+255),f,b
  4809  0006E6  0100               	movlb	0	; () banked
  4810  0006E8  51F3               	movf	(??_receiveData+1)& (0+255),w,b
  4811  0006EA  0100               	movlb	0	; () banked
  4812  0006EC  23F5               	addwfc	(??_receiveData+3)& (0+255),f,b
  4813  0006EE  0E00               	movlw	low _rx_buffer
  4814  0006F0  0100               	movlb	0	; () banked
  4815  0006F2  25F4               	addwf	(??_receiveData+2)& (0+255),w,b
  4816  0006F4  6ED9               	movwf	fsr2l,c
  4817  0006F6  0E03               	movlw	high _rx_buffer
  4818  0006F8  0100               	movlb	0	; () banked
  4819  0006FA  21F5               	addwfc	(??_receiveData+3)& (0+255),w,b
  4820  0006FC  6EDA               	movwf	fsr2h,c
  4821  0006FE  50DF               	movf	indf2,w,c
  4822  000700  0012               	return		;indir
  4823  000702                     l6852:
  4824                           
  4825                           ;FastTransfer.c: 203: serial_write(crcHolder);
  4826  000702  D801               	call	u7748
  4827  000704  D00C               	goto	l6854
  4828  000706                     u7748:
  4829  000706  0005               	push	
  4830  000708  6EFA               	movwf	pclath,c
  4831  00070A  5033               	movf	_serial_write,w,c
  4832  00070C  6EFD               	movwf	tosl,c
  4833  00070E  5034               	movf	_serial_write+1,w,c
  4834  000710  6EFE               	movwf	tosh,c
  4835  000712  50F8               	movf	tblptru,w,c
  4836  000714  6EFF               	movwf	tosu,c
  4837  000716  50FA               	movf	pclath,w,c
  4838  000718  0101               	movlb	1	; () banked
  4839  00071A  5140               	movf	receiveData@crcHolder_2469& (0+255),w,b
  4840  00071C  0012               	return		;indir
  4841  00071E                     l6854:
  4842                           
  4843                           ;FastTransfer.c: 204: }
  4844                           ;FastTransfer.c: 207: rx_len = 0;
  4845  00071E  0E00               	movlw	0
  4846  000720  6E3E               	movwf	_rx_len,c
  4847                           
  4848                           ;FastTransfer.c: 208: rx_array_inx = 0;
  4849  000722  0E00               	movlw	0
  4850  000724  6E3D               	movwf	_rx_array_inx,c
  4851                           
  4852                           ;FastTransfer.c: 209: return 0;
  4853  000726  0E00               	movlw	0
  4854  000728  0012               	return	
  4855  00072A                     l6862:
  4856                           
  4857                           ;FastTransfer.c: 210: }
  4858                           ;FastTransfer.c: 211: }
  4859                           ;FastTransfer.c: 212: }
  4860                           ;FastTransfer.c: 215: return 0;
  4861  00072A  0E00               	movlw	0
  4862  00072C  0012               	return	
  4863  00072E                     __end_of_receiveData:
  4864                           	opt stack 0
  4865                           tosu	equ	0xFFF
  4866                           tosh	equ	0xFFE
  4867                           tosl	equ	0xFFD
  4868                           pclath	equ	0xFFA
  4869                           tblptru	equ	0xFF8
  4870                           tblptrh	equ	0xFF7
  4871                           tblptrl	equ	0xFF6
  4872                           tablat	equ	0xFF5
  4873                           prodh	equ	0xFF4
  4874                           prodl	equ	0xFF3
  4875                           intcon	equ	0xFF2
  4876                           postinc0	equ	0xFEE
  4877                           wreg	equ	0xFE8
  4878                           indf2	equ	0xFDF
  4879                           postinc2	equ	0xFDE
  4880                           postdec2	equ	0xFDD
  4881                           plusw2	equ	0xFDB
  4882                           fsr2h	equ	0xFDA
  4883                           fsr2l	equ	0xFD9
  4884                           status	equ	0xFD8
  4885                           
  4886 ;; *************** function _Send_put *****************
  4887 ;; Defined at:
  4888 ;;		line 130 in file "UART.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  _data           1    wreg     unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  _data           1   37[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4902 ;;      Params:         0       0       0       0       0       0       0
  4903 ;;      Locals:         1       0       0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0
  4905 ;;      Totals:         1       0       0       0       0       0       0
  4906 ;;Total ram usage:        1 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    6
  4909 ;; This function calls:
  4910 ;;		_UART_buff_get
  4911 ;;		_UART_buff_put
  4912 ;; This function is called by:
  4913 ;;		_SYSTEM_Initialize
  4914 ;;		_putch
  4915 ;;		_sendData
  4916 ;;		_receiveData
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text13
  4921  002F32                     __ptext13:
  4922                           	opt stack 0
  4923  002F32                     _Send_put:
  4924                           	opt stack 21
  4925                           
  4926                           ;incstack = 0
  4927                           ;Send_put@_data stored from wreg
  4928  002F32  6E26               	movwf	Send_put@_data,c
  4929                           
  4930                           ;UART.c: 131: UART_buff_put(&output_buffer, _data);
  4931  002F34  0E00               	movlw	low _output_buffer
  4932  002F36  6E21               	movwf	UART_buff_put@_this,c
  4933  002F38  0E05               	movlw	high _output_buffer
  4934  002F3A  6E22               	movwf	UART_buff_put@_this+1,c
  4935  002F3C  C026  F023         	movff	Send_put@_data,UART_buff_put@c
  4936  002F40  EC88  F00C         	call	_UART_buff_put
  4937                           
  4938                           ;UART.c: 132: if (Transmit_stall == 1) {
  4939  002F44  0444               	decf	_Transmit_stall,w,c
  4940  002F46  A4D8               	btfss	status,2,c
  4941  002F48  0012               	return	
  4942                           
  4943                           ;UART.c: 133: Transmit_stall = 0;
  4944  002F4A  0E00               	movlw	0
  4945  002F4C  6E44               	movwf	_Transmit_stall,c
  4946                           
  4947                           ;UART.c: 134: TXREG1 = UART_buff_get(&output_buffer);
  4948  002F4E  0E00               	movlw	low _output_buffer
  4949  002F50  6E21               	movwf	UART_buff_get@_this,c
  4950  002F52  0E05               	movlw	high _output_buffer
  4951  002F54  6E22               	movwf	UART_buff_get@_this+1,c
  4952  002F56  EC9B  F012         	call	_UART_buff_get	;wreg free
  4953  002F5A  6EAD               	movwf	4013,c	;volatile
  4954                           
  4955                           ;UART.c: 135: PIE1bits.TX1IE = 1;
  4956  002F5C  889D               	bsf	3997,4,c	;volatile
  4957  002F5E  0012               	return	
  4958  002F60                     __end_of_Send_put:
  4959                           	opt stack 0
  4960                           tosu	equ	0xFFF
  4961                           tosh	equ	0xFFE
  4962                           tosl	equ	0xFFD
  4963                           pclath	equ	0xFFA
  4964                           tblptru	equ	0xFF8
  4965                           tblptrh	equ	0xFF7
  4966                           tblptrl	equ	0xFF6
  4967                           tablat	equ	0xFF5
  4968                           prodh	equ	0xFF4
  4969                           prodl	equ	0xFF3
  4970                           intcon	equ	0xFF2
  4971                           postinc0	equ	0xFEE
  4972                           wreg	equ	0xFE8
  4973                           indf2	equ	0xFDF
  4974                           postinc2	equ	0xFDE
  4975                           postdec2	equ	0xFDD
  4976                           plusw2	equ	0xFDB
  4977                           fsr2h	equ	0xFDA
  4978                           fsr2l	equ	0xFD9
  4979                           status	equ	0xFD8
  4980                           
  4981 ;; *************** function _UART_buff_put *****************
  4982 ;; Defined at:
  4983 ;;		line 68 in file "UART.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  4986 ;;		 -> output_buffer(206), input_buffer(206), 
  4987 ;;  c               1   34[COMRAM] const unsigned char 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4999 ;;      Params:         3       0       0       0       0       0       0
  5000 ;;      Locals:         0       0       0       0       0       0       0
  5001 ;;      Temps:          2       0       0       0       0       0       0
  5002 ;;      Totals:         5       0       0       0       0       0       0
  5003 ;;Total ram usage:        5 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    5
  5006 ;; This function calls:
  5007 ;;		_UART_buff_modulo_inc
  5008 ;; This function is called by:
  5009 ;;		_Send_put
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text14
  5014  001910                     __ptext14:
  5015                           	opt stack 0
  5016  001910                     _UART_buff_put:
  5017                           	opt stack 21
  5018                           
  5019                           ;UART.c: 69: if (_this->count < 200) {
  5020                           
  5021                           ;incstack = 0
  5022  001910  EE20 F0CC          	lfsr	2,204
  5023  001914  5021               	movf	UART_buff_put@_this,w,c
  5024  001916  26D9               	addwf	fsr2l,f,c
  5025  001918  5022               	movf	UART_buff_put@_this+1,w,c
  5026  00191A  22DA               	addwfc	fsr2h,f,c
  5027  00191C  0E01               	movlw	1
  5028  00191E  BEDB               	btfsc	plusw2,7,c
  5029  001920  D007               	goto	l6140
  5030  001922  0E01               	movlw	1
  5031  001924  50DB               	movf	plusw2,w,c
  5032  001926  E13A               	bnz	l6146
  5033  001928  0EC8               	movlw	200
  5034  00192A  5CDE               	subwf	postinc2,w,c
  5035  00192C  B0D8               	btfsc	status,0,c
  5036  00192E  D036               	goto	l6146
  5037  001930                     l6140:
  5038                           
  5039                           ;UART.c: 70: _this->buf[_this->head] = c;
  5040  001930  EE20 F0C8          	lfsr	2,200
  5041  001934  5021               	movf	UART_buff_put@_this,w,c
  5042  001936  26D9               	addwf	fsr2l,f,c
  5043  001938  5022               	movf	UART_buff_put@_this+1,w,c
  5044  00193A  22DA               	addwfc	fsr2h,f,c
  5045  00193C  CFDE F024          	movff	postinc2,??_UART_buff_put
  5046  001940  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5047  001944  5024               	movf	??_UART_buff_put,w,c
  5048  001946  2421               	addwf	UART_buff_put@_this,w,c
  5049  001948  6ED9               	movwf	fsr2l,c
  5050  00194A  5025               	movf	??_UART_buff_put+1,w,c
  5051  00194C  2022               	addwfc	UART_buff_put@_this+1,w,c
  5052  00194E  6EDA               	movwf	fsr2h,c
  5053  001950  C023  FFDF         	movff	UART_buff_put@c,indf2
  5054                           
  5055                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5056  001954  EE20 F0C8          	lfsr	2,200
  5057  001958  5021               	movf	UART_buff_put@_this,w,c
  5058  00195A  26D9               	addwf	fsr2l,f,c
  5059  00195C  5022               	movf	UART_buff_put@_this+1,w,c
  5060  00195E  22DA               	addwfc	fsr2h,f,c
  5061  001960  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5062  001964  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5063  001968  0E00               	movlw	0
  5064  00196A  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5065  00196C  0EC8               	movlw	200
  5066  00196E  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5067  001970  ECDB  F017         	call	_UART_buff_modulo_inc	;wreg free
  5068  001974  EE20 F0C8          	lfsr	2,200
  5069  001978  5021               	movf	UART_buff_put@_this,w,c
  5070  00197A  26D9               	addwf	fsr2l,f,c
  5071  00197C  5022               	movf	UART_buff_put@_this+1,w,c
  5072  00197E  22DA               	addwfc	fsr2h,f,c
  5073  001980  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5074  001984  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5075                           
  5076                           ;UART.c: 72: ++_this->count;
  5077  001988  EE20 F0CC          	lfsr	2,204
  5078  00198C  5021               	movf	UART_buff_put@_this,w,c
  5079  00198E  26D9               	addwf	fsr2l,f,c
  5080  001990  5022               	movf	UART_buff_put@_this+1,w,c
  5081  001992  22DA               	addwfc	fsr2h,f,c
  5082  001994  2ADE               	incf	postinc2,f,c
  5083  001996  0E00               	movlw	0
  5084  001998  22DD               	addwfc	postdec2,f,c
  5085                           
  5086                           ;UART.c: 73: } else {
  5087  00199A  0012               	return	
  5088  00199C                     l6146:
  5089                           
  5090                           ;UART.c: 74: _this->buf[_this->head] = c;
  5091  00199C  EE20 F0C8          	lfsr	2,200
  5092  0019A0  5021               	movf	UART_buff_put@_this,w,c
  5093  0019A2  26D9               	addwf	fsr2l,f,c
  5094  0019A4  5022               	movf	UART_buff_put@_this+1,w,c
  5095  0019A6  22DA               	addwfc	fsr2h,f,c
  5096  0019A8  CFDE F024          	movff	postinc2,??_UART_buff_put
  5097  0019AC  CFDD F025          	movff	postdec2,??_UART_buff_put+1
  5098  0019B0  5024               	movf	??_UART_buff_put,w,c
  5099  0019B2  2421               	addwf	UART_buff_put@_this,w,c
  5100  0019B4  6ED9               	movwf	fsr2l,c
  5101  0019B6  5025               	movf	??_UART_buff_put+1,w,c
  5102  0019B8  2022               	addwfc	UART_buff_put@_this+1,w,c
  5103  0019BA  6EDA               	movwf	fsr2h,c
  5104  0019BC  C023  FFDF         	movff	UART_buff_put@c,indf2
  5105                           
  5106                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
  5107  0019C0  EE20 F0C8          	lfsr	2,200
  5108  0019C4  5021               	movf	UART_buff_put@_this,w,c
  5109  0019C6  26D9               	addwf	fsr2l,f,c
  5110  0019C8  5022               	movf	UART_buff_put@_this+1,w,c
  5111  0019CA  22DA               	addwfc	fsr2h,f,c
  5112  0019CC  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5113  0019D0  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5114  0019D4  0E00               	movlw	0
  5115  0019D6  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5116  0019D8  0EC8               	movlw	200
  5117  0019DA  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5118  0019DC  ECDB  F017         	call	_UART_buff_modulo_inc	;wreg free
  5119  0019E0  EE20 F0C8          	lfsr	2,200
  5120  0019E4  5021               	movf	UART_buff_put@_this,w,c
  5121  0019E6  26D9               	addwf	fsr2l,f,c
  5122  0019E8  5022               	movf	UART_buff_put@_this+1,w,c
  5123  0019EA  22DA               	addwfc	fsr2h,f,c
  5124  0019EC  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5125  0019F0  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5126                           
  5127                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5128  0019F4  EE20 F0CA          	lfsr	2,202
  5129  0019F8  5021               	movf	UART_buff_put@_this,w,c
  5130  0019FA  26D9               	addwf	fsr2l,f,c
  5131  0019FC  5022               	movf	UART_buff_put@_this+1,w,c
  5132  0019FE  22DA               	addwfc	fsr2h,f,c
  5133  001A00  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5134  001A04  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5135  001A08  0E00               	movlw	0
  5136  001A0A  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5137  001A0C  0EC8               	movlw	200
  5138  001A0E  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5139  001A10  ECDB  F017         	call	_UART_buff_modulo_inc	;wreg free
  5140  001A14  EE20 F0CA          	lfsr	2,202
  5141  001A18  5021               	movf	UART_buff_put@_this,w,c
  5142  001A1A  26D9               	addwf	fsr2l,f,c
  5143  001A1C  5022               	movf	UART_buff_put@_this+1,w,c
  5144  001A1E  22DA               	addwfc	fsr2h,f,c
  5145  001A20  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5146  001A24  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5147  001A28  0012               	return	
  5148  001A2A                     __end_of_UART_buff_put:
  5149                           	opt stack 0
  5150                           tosu	equ	0xFFF
  5151                           tosh	equ	0xFFE
  5152                           tosl	equ	0xFFD
  5153                           pclath	equ	0xFFA
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           postinc0	equ	0xFEE
  5162                           wreg	equ	0xFE8
  5163                           indf2	equ	0xFDF
  5164                           postinc2	equ	0xFDE
  5165                           postdec2	equ	0xFDD
  5166                           plusw2	equ	0xFDB
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171 ;; *************** function _Receive_get *****************
  5172 ;; Defined at:
  5173 ;;		line 126 in file "UART.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      unsigned char 
  5180 ;; Registers used:
  5181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5187 ;;      Params:         0       0       0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0
  5190 ;;      Totals:         0       0       0       0       0       0       0
  5191 ;;Total ram usage:        0 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    6
  5194 ;; This function calls:
  5195 ;;		_UART_buff_get
  5196 ;; This function is called by:
  5197 ;;		_SYSTEM_Initialize
  5198 ;;		_getch
  5199 ;;		_receiveData
  5200 ;;		_CRCcheck
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text15
  5205  003194                     __ptext15:
  5206                           	opt stack 0
  5207  003194                     _Receive_get:
  5208                           	opt stack 22
  5209                           
  5210                           ;UART.c: 127: return UART_buff_get(&input_buffer);
  5211                           
  5212                           ;incstack = 0
  5213  003194  0E00               	movlw	low _input_buffer
  5214  003196  6E21               	movwf	UART_buff_get@_this,c
  5215  003198  0E04               	movlw	high _input_buffer
  5216  00319A  6E22               	movwf	UART_buff_get@_this+1,c
  5217  00319C  EC9B  F012         	call	_UART_buff_get	;wreg free
  5218  0031A0  0012               	return	
  5219  0031A2                     __end_of_Receive_get:
  5220                           	opt stack 0
  5221                           tosu	equ	0xFFF
  5222                           tosh	equ	0xFFE
  5223                           tosl	equ	0xFFD
  5224                           pclath	equ	0xFFA
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           prodh	equ	0xFF4
  5230                           prodl	equ	0xFF3
  5231                           intcon	equ	0xFF2
  5232                           postinc0	equ	0xFEE
  5233                           wreg	equ	0xFE8
  5234                           indf2	equ	0xFDF
  5235                           postinc2	equ	0xFDE
  5236                           postdec2	equ	0xFDD
  5237                           plusw2	equ	0xFDB
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _UART_buff_get *****************
  5243 ;; Defined at:
  5244 ;;		line 81 in file "UART.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  _this           2   32[COMRAM] PTR struct UART_ring_buf
  5247 ;;		 -> output_buffer(206), input_buffer(206), 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  c               1   36[COMRAM] unsigned char 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      unsigned char 
  5252 ;; Registers used:
  5253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5259 ;;      Params:         2       0       0       0       0       0       0
  5260 ;;      Locals:         1       0       0       0       0       0       0
  5261 ;;      Temps:          2       0       0       0       0       0       0
  5262 ;;      Totals:         5       0       0       0       0       0       0
  5263 ;;Total ram usage:        5 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; Hardware stack levels required when called:    5
  5266 ;; This function calls:
  5267 ;;		_UART_buff_modulo_inc
  5268 ;; This function is called by:
  5269 ;;		_Receive_get
  5270 ;;		_Send_put
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text16
  5275  002536                     __ptext16:
  5276                           	opt stack 0
  5277  002536                     _UART_buff_get:
  5278                           	opt stack 21
  5279                           
  5280                           ;UART.c: 82: unsigned char c;
  5281                           ;UART.c: 83: if (_this->count > 0) {
  5282                           
  5283                           ;incstack = 0
  5284  002536  EE20 F0CC          	lfsr	2,204
  5285  00253A  5021               	movf	UART_buff_get@_this,w,c
  5286  00253C  26D9               	addwf	fsr2l,f,c
  5287  00253E  5022               	movf	UART_buff_get@_this+1,w,c
  5288  002540  22DA               	addwfc	fsr2h,f,c
  5289  002542  0E01               	movlw	1
  5290  002544  BEDB               	btfsc	plusw2,7,c
  5291  002546  D03C               	goto	l6160
  5292  002548  0E01               	movlw	1
  5293  00254A  50DB               	movf	plusw2,w,c
  5294  00254C  E103               	bnz	u6450
  5295  00254E  04DE               	decf	postinc2,w,c
  5296  002550  A0D8               	btfss	status,0,c
  5297  002552  D036               	goto	l6160
  5298  002554                     u6450:
  5299                           
  5300                           ;UART.c: 84: c = _this->buf[_this->tail];
  5301  002554  EE20 F0CA          	lfsr	2,202
  5302  002558  5021               	movf	UART_buff_get@_this,w,c
  5303  00255A  26D9               	addwf	fsr2l,f,c
  5304  00255C  5022               	movf	UART_buff_get@_this+1,w,c
  5305  00255E  22DA               	addwfc	fsr2h,f,c
  5306  002560  CFDE F023          	movff	postinc2,??_UART_buff_get
  5307  002564  CFDD F024          	movff	postdec2,??_UART_buff_get+1
  5308  002568  5023               	movf	??_UART_buff_get,w,c
  5309  00256A  2421               	addwf	UART_buff_get@_this,w,c
  5310  00256C  6ED9               	movwf	fsr2l,c
  5311  00256E  5024               	movf	??_UART_buff_get+1,w,c
  5312  002570  2022               	addwfc	UART_buff_get@_this+1,w,c
  5313  002572  6EDA               	movwf	fsr2h,c
  5314  002574  50DF               	movf	indf2,w,c
  5315  002576  6E25               	movwf	UART_buff_get@c,c
  5316                           
  5317                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
  5318  002578  EE20 F0CA          	lfsr	2,202
  5319  00257C  5021               	movf	UART_buff_get@_this,w,c
  5320  00257E  26D9               	addwf	fsr2l,f,c
  5321  002580  5022               	movf	UART_buff_get@_this+1,w,c
  5322  002582  22DA               	addwfc	fsr2h,f,c
  5323  002584  CFDE F01B          	movff	postinc2,UART_buff_modulo_inc@value
  5324  002588  CFDD F01C          	movff	postdec2,UART_buff_modulo_inc@value+1
  5325  00258C  0E00               	movlw	0
  5326  00258E  6E1E               	movwf	UART_buff_modulo_inc@modulus+1,c
  5327  002590  0EC8               	movlw	200
  5328  002592  6E1D               	movwf	UART_buff_modulo_inc@modulus,c
  5329  002594  ECDB  F017         	call	_UART_buff_modulo_inc	;wreg free
  5330  002598  EE20 F0CA          	lfsr	2,202
  5331  00259C  5021               	movf	UART_buff_get@_this,w,c
  5332  00259E  26D9               	addwf	fsr2l,f,c
  5333  0025A0  5022               	movf	UART_buff_get@_this+1,w,c
  5334  0025A2  22DA               	addwfc	fsr2h,f,c
  5335  0025A4  C01B  FFDE         	movff	?_UART_buff_modulo_inc,postinc2
  5336  0025A8  C01C  FFDD         	movff	?_UART_buff_modulo_inc+1,postdec2
  5337                           
  5338                           ;UART.c: 86: --_this->count;
  5339  0025AC  EE20 F0CC          	lfsr	2,204
  5340  0025B0  5021               	movf	UART_buff_get@_this,w,c
  5341  0025B2  26D9               	addwf	fsr2l,f,c
  5342  0025B4  5022               	movf	UART_buff_get@_this+1,w,c
  5343  0025B6  22DA               	addwfc	fsr2h,f,c
  5344  0025B8  06DE               	decf	postinc2,f,c
  5345  0025BA  0E00               	movlw	0
  5346  0025BC  5ADD               	subwfb	postdec2,f,c
  5347                           
  5348                           ;UART.c: 87: } else {
  5349  0025BE  D002               	goto	l1163
  5350  0025C0                     l6160:
  5351                           
  5352                           ;UART.c: 88: c = 0;
  5353  0025C0  0E00               	movlw	0
  5354  0025C2  6E25               	movwf	UART_buff_get@c,c
  5355  0025C4                     l1163:
  5356                           
  5357                           ;UART.c: 89: }
  5358                           ;UART.c: 90: return (c);
  5359  0025C4  5025               	movf	UART_buff_get@c,w,c
  5360  0025C6  0012               	return	
  5361  0025C8                     __end_of_UART_buff_get:
  5362                           	opt stack 0
  5363                           tosu	equ	0xFFF
  5364                           tosh	equ	0xFFE
  5365                           tosl	equ	0xFFD
  5366                           pclath	equ	0xFFA
  5367                           tblptru	equ	0xFF8
  5368                           tblptrh	equ	0xFF7
  5369                           tblptrl	equ	0xFF6
  5370                           tablat	equ	0xFF5
  5371                           prodh	equ	0xFF4
  5372                           prodl	equ	0xFF3
  5373                           intcon	equ	0xFF2
  5374                           postinc0	equ	0xFEE
  5375                           wreg	equ	0xFE8
  5376                           indf2	equ	0xFDF
  5377                           postinc2	equ	0xFDE
  5378                           postdec2	equ	0xFDD
  5379                           plusw2	equ	0xFDB
  5380                           fsr2h	equ	0xFDA
  5381                           fsr2l	equ	0xFD9
  5382                           status	equ	0xFD8
  5383                           
  5384 ;; *************** function _UART_buff_modulo_inc *****************
  5385 ;; Defined at:
  5386 ;;		line 106 in file "UART.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  value           2   26[COMRAM] const unsigned int 
  5389 ;;  modulus         2   28[COMRAM] const unsigned int 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  my_value        2   30[COMRAM] unsigned int 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  2   26[COMRAM] unsigned int 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5401 ;;      Params:         4       0       0       0       0       0       0
  5402 ;;      Locals:         2       0       0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0
  5404 ;;      Totals:         6       0       0       0       0       0       0
  5405 ;;Total ram usage:        6 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    4
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_UART_buff_put
  5412 ;;		_UART_buff_get
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text17
  5417  002FB6                     __ptext17:
  5418                           	opt stack 0
  5419  002FB6                     _UART_buff_modulo_inc:
  5420                           	opt stack 21
  5421                           
  5422                           ;UART.c: 107: unsigned int my_value = value + 1;
  5423                           
  5424                           ;incstack = 0
  5425  002FB6  0E01               	movlw	1
  5426  002FB8  241B               	addwf	UART_buff_modulo_inc@value,w,c
  5427  002FBA  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5428  002FBC  0E00               	movlw	0
  5429  002FBE  201C               	addwfc	UART_buff_modulo_inc@value+1,w,c
  5430  002FC0  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5431                           
  5432                           ;UART.c: 108: if (my_value >= modulus) {
  5433  002FC2  501D               	movf	UART_buff_modulo_inc@modulus,w,c
  5434  002FC4  5C1F               	subwf	UART_buff_modulo_inc@my_value,w,c
  5435  002FC6  501E               	movf	UART_buff_modulo_inc@modulus+1,w,c
  5436  002FC8  5820               	subwfb	UART_buff_modulo_inc@my_value+1,w,c
  5437  002FCA  A0D8               	btfss	status,0,c
  5438  002FCC  D004               	goto	l6120
  5439                           
  5440                           ;UART.c: 109: my_value = 0;
  5441  002FCE  0E00               	movlw	0
  5442  002FD0  6E20               	movwf	UART_buff_modulo_inc@my_value+1,c
  5443  002FD2  0E00               	movlw	0
  5444  002FD4  6E1F               	movwf	UART_buff_modulo_inc@my_value,c
  5445  002FD6                     l6120:
  5446                           
  5447                           ;UART.c: 110: }
  5448                           ;UART.c: 111: return (my_value);
  5449  002FD6  C01F  F01B         	movff	UART_buff_modulo_inc@my_value,?_UART_buff_modulo_inc
  5450  002FDA  C020  F01C         	movff	UART_buff_modulo_inc@my_value+1,?_UART_buff_modulo_inc+1
  5451  002FDE  0012               	return	
  5452  002FE0                     __end_of_UART_buff_modulo_inc:
  5453                           	opt stack 0
  5454                           tosu	equ	0xFFF
  5455                           tosh	equ	0xFFE
  5456                           tosl	equ	0xFFD
  5457                           pclath	equ	0xFFA
  5458                           tblptru	equ	0xFF8
  5459                           tblptrh	equ	0xFF7
  5460                           tblptrl	equ	0xFF6
  5461                           tablat	equ	0xFF5
  5462                           prodh	equ	0xFF4
  5463                           prodl	equ	0xFF3
  5464                           intcon	equ	0xFF2
  5465                           postinc0	equ	0xFEE
  5466                           wreg	equ	0xFE8
  5467                           indf2	equ	0xFDF
  5468                           postinc2	equ	0xFDE
  5469                           postdec2	equ	0xFDD
  5470                           plusw2	equ	0xFDB
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475 ;; *************** function _Receive_available *****************
  5476 ;; Defined at:
  5477 ;;		line 122 in file "UART.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  2   28[COMRAM] int 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5491 ;;      Params:         2       0       0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0
  5494 ;;      Totals:         2       0       0       0       0       0       0
  5495 ;;Total ram usage:        2 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    5
  5498 ;; This function calls:
  5499 ;;		_UART_buff_size
  5500 ;; This function is called by:
  5501 ;;		_SYSTEM_Initialize
  5502 ;;		_receiveData
  5503 ;;		_CRCcheck
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text18
  5508  00312E                     __ptext18:
  5509                           	opt stack 0
  5510  00312E                     _Receive_available:
  5511                           	opt stack 23
  5512                           
  5513                           ;UART.c: 123: return UART_buff_size(&input_buffer);
  5514                           
  5515                           ;incstack = 0
  5516  00312E  0E00               	movlw	low _input_buffer
  5517  003130  6E1B               	movwf	UART_buff_size@_this,c
  5518  003132  0E04               	movlw	high _input_buffer
  5519  003134  6E1C               	movwf	UART_buff_size@_this+1,c
  5520  003136  ECA2  F018         	call	_UART_buff_size	;wreg free
  5521  00313A  C01B  F01D         	movff	?_UART_buff_size,?_Receive_available
  5522  00313E  C01C  F01E         	movff	?_UART_buff_size+1,?_Receive_available+1
  5523  003142  0012               	return	
  5524  003144                     __end_of_Receive_available:
  5525                           	opt stack 0
  5526                           tosu	equ	0xFFF
  5527                           tosh	equ	0xFFE
  5528                           tosl	equ	0xFFD
  5529                           pclath	equ	0xFFA
  5530                           tblptru	equ	0xFF8
  5531                           tblptrh	equ	0xFF7
  5532                           tblptrl	equ	0xFF6
  5533                           tablat	equ	0xFF5
  5534                           prodh	equ	0xFF4
  5535                           prodl	equ	0xFF3
  5536                           intcon	equ	0xFF2
  5537                           postinc0	equ	0xFEE
  5538                           wreg	equ	0xFE8
  5539                           indf2	equ	0xFDF
  5540                           postinc2	equ	0xFDE
  5541                           postdec2	equ	0xFDD
  5542                           plusw2	equ	0xFDB
  5543                           fsr2h	equ	0xFDA
  5544                           fsr2l	equ	0xFD9
  5545                           status	equ	0xFD8
  5546                           
  5547 ;; *************** function _UART_buff_size *****************
  5548 ;; Defined at:
  5549 ;;		line 102 in file "UART.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  _this           2   26[COMRAM] PTR struct UART_ring_buf
  5552 ;;		 -> output_buffer(206), input_buffer(206), 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  2   26[COMRAM] int 
  5557 ;; Registers used:
  5558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5564 ;;      Params:         2       0       0       0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0
  5567 ;;      Totals:         2       0       0       0       0       0       0
  5568 ;;Total ram usage:        2 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    4
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_Receive_available
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text19
  5579  003144                     __ptext19:
  5580                           	opt stack 0
  5581  003144                     _UART_buff_size:
  5582                           	opt stack 23
  5583                           
  5584                           ;UART.c: 103: return (_this->count);
  5585                           
  5586                           ;incstack = 0
  5587  003144  EE20 F0CC          	lfsr	2,204
  5588  003148  501B               	movf	UART_buff_size@_this,w,c
  5589  00314A  26D9               	addwf	fsr2l,f,c
  5590  00314C  501C               	movf	UART_buff_size@_this+1,w,c
  5591  00314E  22DA               	addwfc	fsr2h,f,c
  5592  003150  CFDE F01B          	movff	postinc2,?_UART_buff_size
  5593  003154  CFDD F01C          	movff	postdec2,?_UART_buff_size+1
  5594  003158  0012               	return	
  5595  00315A                     __end_of_UART_buff_size:
  5596                           	opt stack 0
  5597                           tosu	equ	0xFFF
  5598                           tosh	equ	0xFFE
  5599                           tosl	equ	0xFFD
  5600                           pclath	equ	0xFFA
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           prodh	equ	0xFF4
  5606                           prodl	equ	0xFF3
  5607                           intcon	equ	0xFF2
  5608                           postinc0	equ	0xFEE
  5609                           wreg	equ	0xFE8
  5610                           indf2	equ	0xFDF
  5611                           postinc2	equ	0xFDE
  5612                           postdec2	equ	0xFDD
  5613                           plusw2	equ	0xFDB
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _CRC8 *****************
  5619 ;; Defined at:
  5620 ;;		line 35 in file "FastTransfer.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  data            2   26[COMRAM] PTR const unsigned char 
  5623 ;;		 -> CRCcheck@arrayHolder(3), receiveData@holder_2468(3), receiveData@holder(3), rx_buffer(200), 
  5624 ;;		 -> ring_buffer(206), NULL(0), 
  5625 ;;  len             1   28[COMRAM] unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  sum             1   29[COMRAM] unsigned char 
  5628 ;;  tempI           1   31[COMRAM] unsigned char 
  5629 ;;  extract         1   30[COMRAM] unsigned char 
  5630 ;;  crc             1   32[COMRAM] unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      unsigned char 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5640 ;;      Params:         3       0       0       0       0       0       0
  5641 ;;      Locals:         4       0       0       0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0
  5643 ;;      Totals:         7       0       0       0       0       0       0
  5644 ;;Total ram usage:        7 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    4
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_sendData
  5651 ;;		_receiveData
  5652 ;;		_CRCcheck
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text20
  5657  002CC0                     __ptext20:
  5658                           	opt stack 0
  5659  002CC0                     _CRC8:
  5660                           	opt stack 23
  5661                           
  5662                           ;FastTransfer.c: 36: unsigned char crc = 0x00;
  5663                           
  5664                           ;incstack = 0
  5665  002CC0  0E00               	movlw	0
  5666  002CC2  6E21               	movwf	CRC8@crc,c
  5667                           
  5668                           ;FastTransfer.c: 37: while (len--) {
  5669  002CC4  D01C               	goto	l6238
  5670  002CC6                     l6222:
  5671                           
  5672                           ;FastTransfer.c: 38: unsigned char extract = *data++;
  5673  002CC6  C01B  FFD9         	movff	CRC8@data,fsr2l
  5674  002CCA  C01C  FFDA         	movff	CRC8@data+1,fsr2h
  5675  002CCE  50DF               	movf	indf2,w,c
  5676  002CD0  6E1F               	movwf	CRC8@extract,c
  5677  002CD2  4A1B               	infsnz	CRC8@data,f,c
  5678  002CD4  2A1C               	incf	CRC8@data+1,f,c
  5679                           
  5680                           ;FastTransfer.c: 39: unsigned char tempI;
  5681                           ;FastTransfer.c: 40: for (tempI = 8; tempI; tempI--) {
  5682  002CD6  0E08               	movlw	8
  5683  002CD8  6E20               	movwf	CRC8@tempI,c
  5684  002CDA  D00E               	goto	l6236
  5685  002CDC                     l6228:
  5686                           
  5687                           ;FastTransfer.c: 41: unsigned char sum = (crc ^ extract) & 0x01;
  5688  002CDC  5021               	movf	CRC8@crc,w,c
  5689  002CDE  181F               	xorwf	CRC8@extract,w,c
  5690  002CE0  0B01               	andlw	1
  5691  002CE2  6E1E               	movwf	CRC8@sum,c
  5692                           
  5693                           ;FastTransfer.c: 42: crc >>= 1;
  5694  002CE4  90D8               	bcf	status,0,c
  5695  002CE6  3221               	rrcf	CRC8@crc,f,c
  5696                           
  5697                           ;FastTransfer.c: 43: if (sum) {
  5698  002CE8  501E               	movf	CRC8@sum,w,c
  5699  002CEA  B4D8               	btfsc	status,2,c
  5700  002CEC  D002               	goto	l1009
  5701                           
  5702                           ;FastTransfer.c: 44: crc ^= 0x8C;
  5703  002CEE  0E8C               	movlw	140
  5704  002CF0  1A21               	xorwf	CRC8@crc,f,c
  5705  002CF2                     l1009:
  5706                           
  5707                           ;FastTransfer.c: 45: }
  5708                           ;FastTransfer.c: 46: extract >>= 1;
  5709  002CF2  90D8               	bcf	status,0,c
  5710  002CF4  321F               	rrcf	CRC8@extract,f,c
  5711  002CF6  0620               	decf	CRC8@tempI,f,c
  5712  002CF8                     l6236:
  5713  002CF8  5020               	movf	CRC8@tempI,w,c
  5714  002CFA  A4D8               	btfss	status,2,c
  5715  002CFC  D7EF               	goto	l6228
  5716  002CFE                     l6238:
  5717  002CFE  061D               	decf	CRC8@len,f,c
  5718  002D00  281D               	incf	CRC8@len,w,c
  5719  002D02  A4D8               	btfss	status,2,c
  5720  002D04  D7E0               	goto	l6222
  5721                           
  5722                           ;FastTransfer.c: 47: }
  5723                           ;FastTransfer.c: 48: }
  5724                           ;FastTransfer.c: 49: return crc;
  5725  002D06  5021               	movf	CRC8@crc,w,c
  5726  002D08  0012               	return	
  5727  002D0A                     __end_of_CRC8:
  5728                           	opt stack 0
  5729                           tosu	equ	0xFFF
  5730                           tosh	equ	0xFFE
  5731                           tosl	equ	0xFFD
  5732                           pclath	equ	0xFFA
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           prodh	equ	0xFF4
  5738                           prodl	equ	0xFF3
  5739                           intcon	equ	0xFF2
  5740                           postinc0	equ	0xFEE
  5741                           wreg	equ	0xFE8
  5742                           indf2	equ	0xFDF
  5743                           postinc2	equ	0xFDE
  5744                           postdec2	equ	0xFDD
  5745                           plusw2	equ	0xFDB
  5746                           fsr2h	equ	0xFDA
  5747                           fsr2l	equ	0xFD9
  5748                           status	equ	0xFD8
  5749                           
  5750 ;; *************** function _handleIndicators *****************
  5751 ;; Defined at:
  5752 ;;		line 36 in file "Communications.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  receivedIndi    2   36[COMRAM] int 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  i               2    0[BANK0 ] int 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5766 ;;      Params:         2       0       0       0       0       0       0
  5767 ;;      Locals:         0       2       0       0       0       0       0
  5768 ;;      Temps:          3       0       0       0       0       0       0
  5769 ;;      Totals:         5       2       0       0       0       0       0
  5770 ;;Total ram usage:        7 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    6
  5773 ;; This function calls:
  5774 ;;		_SetLEDOut
  5775 ;; This function is called by:
  5776 ;;		_updateComms
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text21
  5781  0026E6                     __ptext21:
  5782                           	opt stack 0
  5783  0026E6                     _handleIndicators:
  5784                           	opt stack 23
  5785                           
  5786                           ;Communications.c: 37: static int oldIndicators = 0;
  5787                           ;Communications.c: 38: if (receivedIndicators != oldIndicators) {
  5788                           
  5789                           ;incstack = 0
  5790  0026E6  0100               	movlb	0	; () banked
  5791  0026E8  51DF               	movf	handleIndicators@oldIndicators& (0+255),w,b
  5792  0026EA  1825               	xorwf	handleIndicators@receivedIndicators,w,c
  5793  0026EC  E105               	bnz	u7750
  5794  0026EE  0100               	movlb	0	; () banked
  5795  0026F0  51E0               	movf	(handleIndicators@oldIndicators+1)& (0+255),w,b
  5796  0026F2  1826               	xorwf	handleIndicators@receivedIndicators+1,w,c
  5797  0026F4  B4D8               	btfsc	status,2,c
  5798  0026F6  0012               	return	
  5799  0026F8                     u7750:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;Communications.c: 39: int i = 0;
  5803  0026F8  0E00               	movlw	0
  5804  0026FA  0100               	movlb	0	; () banked
  5805  0026FC  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  5806  0026FE  0E00               	movlw	0
  5807  002700  6FF2               	movwf	handleIndicators@i& (0+255),b
  5808                           
  5809                           ;Communications.c: 40: for (i = 0; i < 6; i++) {
  5810  002702  0E00               	movlw	0
  5811  002704  0100               	movlb	0	; () banked
  5812  002706  6FF3               	movwf	(handleIndicators@i+1)& (0+255),b
  5813  002708  0E00               	movlw	0
  5814  00270A  6FF2               	movwf	handleIndicators@i& (0+255),b
  5815                           
  5816                           ; BSR set to: 0
  5817  00270C  0100               	movlb	0	; () banked
  5818  00270E  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  5819  002710  D008               	goto	l6886
  5820  002712  0100               	movlb	0	; () banked
  5821  002714  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  5822  002716  E126               	bnz	l926
  5823  002718  0E06               	movlw	6
  5824  00271A  0100               	movlb	0	; () banked
  5825  00271C  5DF2               	subwf	handleIndicators@i& (0+255),w,b
  5826  00271E  B0D8               	btfsc	status,0,c
  5827  002720  D021               	goto	l926
  5828  002722                     l6886:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;Communications.c: 41: SetLEDOut(i, ((receivedIndicators >> i)&0x01));
  5832  002722  C0F2  F01F         	movff	handleIndicators@i,SetLEDOut@lednum
  5833  002726  C0F3  F020         	movff	handleIndicators@i+1,SetLEDOut@lednum+1
  5834  00272A  C0F2  F027         	movff	handleIndicators@i,??_handleIndicators
  5835  00272E  C025  F028         	movff	handleIndicators@receivedIndicators,??_handleIndicators+1
  5836  002732  C026  F029         	movff	handleIndicators@receivedIndicators+1,??_handleIndicators+2
  5837  002736  2A27               	incf	??_handleIndicators,f,c
  5838  002738  D003               	goto	u7774
  5839  00273A                     u7775:
  5840  00273A  3429               	rlcf	??_handleIndicators+2,w,c
  5841  00273C  3229               	rrcf	??_handleIndicators+2,f,c
  5842  00273E  3228               	rrcf	??_handleIndicators+1,f,c
  5843  002740                     u7774:
  5844  002740  2E27               	decfsz	??_handleIndicators,f,c
  5845  002742  D7FB               	goto	u7775
  5846  002744  0E01               	movlw	1
  5847  002746  1428               	andwf	??_handleIndicators+1,w,c
  5848  002748  6E21               	movwf	SetLEDOut@state,c
  5849  00274A  6A22               	clrf	SetLEDOut@state+1,c
  5850  00274C  EC0A  F007         	call	_SetLEDOut	;wreg free
  5851  002750  0100               	movlb	0	; () banked
  5852  002752  4BF2               	infsnz	handleIndicators@i& (0+255),f,b
  5853  002754  2BF3               	incf	(handleIndicators@i+1)& (0+255),f,b
  5854                           
  5855                           ; BSR set to: 0
  5856  002756  0100               	movlb	0	; () banked
  5857  002758  BFF3               	btfsc	(handleIndicators@i+1)& (0+255),7,b
  5858  00275A  D7E3               	goto	l6886
  5859  00275C  0100               	movlb	0	; () banked
  5860  00275E  51F3               	movf	(handleIndicators@i+1)& (0+255),w,b
  5861  002760  E101               	bnz	u7780
  5862  002762  D7DA               	goto	L2
  5863  002764                     u7780:
  5864  002764                     l926:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;Communications.c: 42: }
  5868                           ;Communications.c: 43: oldIndicators = receivedIndicators;
  5869  002764  C025  F0DF         	movff	handleIndicators@receivedIndicators,handleIndicators@oldIndicators
  5870  002768  C026  F0E0         	movff	handleIndicators@receivedIndicators+1,handleIndicators@oldIndicators+1
  5871  00276C  0012               	return	
  5872  00276E                     __end_of_handleIndicators:
  5873                           	opt stack 0
  5874                           tosu	equ	0xFFF
  5875                           tosh	equ	0xFFE
  5876                           tosl	equ	0xFFD
  5877                           pclath	equ	0xFFA
  5878                           tblptru	equ	0xFF8
  5879                           tblptrh	equ	0xFF7
  5880                           tblptrl	equ	0xFF6
  5881                           tablat	equ	0xFF5
  5882                           prodh	equ	0xFF4
  5883                           prodl	equ	0xFF3
  5884                           intcon	equ	0xFF2
  5885                           postinc0	equ	0xFEE
  5886                           wreg	equ	0xFE8
  5887                           indf2	equ	0xFDF
  5888                           postinc2	equ	0xFDE
  5889                           postdec2	equ	0xFDD
  5890                           plusw2	equ	0xFDB
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function _SetLEDOut *****************
  5896 ;; Defined at:
  5897 ;;		line 25 in file "IO.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  lednum          2   30[COMRAM] int 
  5900 ;;  state           2   32[COMRAM] int 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5912 ;;      Params:         4       0       0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0
  5914 ;;      Temps:          2       0       0       0       0       0       0
  5915 ;;      Totals:         6       0       0       0       0       0       0
  5916 ;;Total ram usage:        6 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    5
  5919 ;; This function calls:
  5920 ;;		_Off_Led
  5921 ;;		_setLED
  5922 ;; This function is called by:
  5923 ;;		_handleIndicators
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text22
  5928  000E14                     __ptext22:
  5929                           	opt stack 0
  5930  000E14                     _SetLEDOut:
  5931                           	opt stack 23
  5932                           
  5933                           ;IO.c: 26: switch (lednum) {
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;incstack = 0
  5937  000E14  D138               	goto	l6454
  5938  000E16                     l6320:
  5939                           
  5940                           ;IO.c: 28: if (state == 1) {
  5941  000E16  0421               	decf	SetLEDOut@state,w,c
  5942  000E18  1022               	iorwf	SetLEDOut@state+1,w,c
  5943  000E1A  A4D8               	btfss	status,2,c
  5944  000E1C  D00D               	goto	l6328
  5945                           
  5946                           ;IO.c: 29: Off_Led(0);
  5947  000E1E  0E00               	movlw	0
  5948  000E20  6E1C               	movwf	Off_Led@led+1,c
  5949  000E22  0E00               	movlw	0
  5950  000E24  6E1B               	movwf	Off_Led@led,c
  5951  000E26  EC93  F00F         	call	_Off_Led	;wreg free
  5952                           
  5953                           ;IO.c: 30: do { LATC1 = 1; } while(0);
  5954  000E2A  828B               	bsf	3979,1,c	;volatile
  5955                           
  5956                           ;IO.c: 31: LED_array[0] = 1;
  5957  000E2C  0E00               	movlw	0
  5958  000E2E  0100               	movlb	0	; () banked
  5959  000E30  6F89               	movwf	(_LED_array+1)& (0+255),b
  5960  000E32  0E01               	movlw	1
  5961  000E34  6F88               	movwf	_LED_array& (0+255),b
  5962                           
  5963                           ;IO.c: 32: } else if (state == 0) {
  5964  000E36  0012               	return	
  5965  000E38                     l6328:
  5966  000E38  5021               	movf	SetLEDOut@state,w,c
  5967  000E3A  1022               	iorwf	SetLEDOut@state+1,w,c
  5968  000E3C  A4D8               	btfss	status,2,c
  5969  000E3E  D00D               	goto	l6336
  5970                           
  5971                           ;IO.c: 33: Off_Led(0);
  5972  000E40  0E00               	movlw	0
  5973  000E42  6E1C               	movwf	Off_Led@led+1,c
  5974  000E44  0E00               	movlw	0
  5975  000E46  6E1B               	movwf	Off_Led@led,c
  5976  000E48  EC93  F00F         	call	_Off_Led	;wreg free
  5977                           
  5978                           ;IO.c: 34: do { LATC1 = 0; } while(0);
  5979  000E4C  928B               	bcf	3979,1,c	;volatile
  5980                           
  5981                           ;IO.c: 35: LED_array[0] = 0;
  5982  000E4E  0E00               	movlw	0
  5983  000E50  0100               	movlb	0	; () banked
  5984  000E52  6F89               	movwf	(_LED_array+1)& (0+255),b
  5985  000E54  0E00               	movlw	0
  5986  000E56  6F88               	movwf	_LED_array& (0+255),b
  5987                           
  5988                           ;IO.c: 36: }
  5989  000E58  0012               	return	
  5990  000E5A                     l6336:
  5991                           
  5992                           ;IO.c: 37: else if (state == 2) {
  5993  000E5A  0E02               	movlw	2
  5994  000E5C  1821               	xorwf	SetLEDOut@state,w,c
  5995  000E5E  1022               	iorwf	SetLEDOut@state+1,w,c
  5996  000E60  A4D8               	btfss	status,2,c
  5997  000E62  0012               	return	
  5998                           
  5999                           ;IO.c: 39: do { LATC1 = 0; } while(0);
  6000  000E64  928B               	bcf	3979,1,c	;volatile
  6001                           
  6002                           ;IO.c: 40: setLED(0);
  6003  000E66  0E00               	movlw	0
  6004  000E68  6E1C               	movwf	setLED@led+1,c
  6005  000E6A  0E00               	movlw	0
  6006  000E6C  6E1B               	movwf	setLED@led,c
  6007  000E6E  ECF8  F00F         	call	_setLED	;wreg free
  6008                           
  6009                           ;IO.c: 41: LED_array[0] = 2;
  6010  000E72  0E00               	movlw	0
  6011  000E74  0100               	movlb	0	; () banked
  6012  000E76  6F89               	movwf	(_LED_array+1)& (0+255),b
  6013  000E78  0E02               	movlw	2
  6014  000E7A  6F88               	movwf	_LED_array& (0+255),b
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;IO.c: 43: }
  6018                           ;IO.c: 44: break;
  6019                           
  6020                           ; BSR set to: 0
  6021                           
  6022                           ; BSR set to: 0
  6023  000E7C  0012               	return	
  6024  000E7E                     l6342:
  6025                           
  6026                           ;IO.c: 47: if (state == 1) {
  6027  000E7E  0421               	decf	SetLEDOut@state,w,c
  6028  000E80  1022               	iorwf	SetLEDOut@state+1,w,c
  6029  000E82  A4D8               	btfss	status,2,c
  6030  000E84  D00D               	goto	l6350
  6031                           
  6032                           ;IO.c: 48: Off_Led(1);
  6033  000E86  0E00               	movlw	0
  6034  000E88  6E1C               	movwf	Off_Led@led+1,c
  6035  000E8A  0E01               	movlw	1
  6036  000E8C  6E1B               	movwf	Off_Led@led,c
  6037  000E8E  EC93  F00F         	call	_Off_Led	;wreg free
  6038                           
  6039                           ;IO.c: 49: do { LATA6 = 1; } while(0);
  6040  000E92  8C89               	bsf	3977,6,c	;volatile
  6041                           
  6042                           ;IO.c: 50: LED_array[1] = 1;
  6043  000E94  0E00               	movlw	0
  6044  000E96  0100               	movlb	0	; () banked
  6045  000E98  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6046  000E9A  0E01               	movlw	1
  6047  000E9C  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6048                           
  6049                           ;IO.c: 51: } else if (state == 0) {
  6050  000E9E  0012               	return	
  6051  000EA0                     l6350:
  6052  000EA0  5021               	movf	SetLEDOut@state,w,c
  6053  000EA2  1022               	iorwf	SetLEDOut@state+1,w,c
  6054  000EA4  A4D8               	btfss	status,2,c
  6055  000EA6  D00D               	goto	l6358
  6056                           
  6057                           ;IO.c: 52: Off_Led(1);
  6058  000EA8  0E00               	movlw	0
  6059  000EAA  6E1C               	movwf	Off_Led@led+1,c
  6060  000EAC  0E01               	movlw	1
  6061  000EAE  6E1B               	movwf	Off_Led@led,c
  6062  000EB0  EC93  F00F         	call	_Off_Led	;wreg free
  6063                           
  6064                           ;IO.c: 53: do { LATA6 = 0; } while(0);
  6065  000EB4  9C89               	bcf	3977,6,c	;volatile
  6066                           
  6067                           ;IO.c: 54: LED_array[1] = 0;
  6068  000EB6  0E00               	movlw	0
  6069  000EB8  0100               	movlb	0	; () banked
  6070  000EBA  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6071  000EBC  0E00               	movlw	0
  6072  000EBE  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6073                           
  6074                           ;IO.c: 55: } else if (state == 2) {
  6075  000EC0  0012               	return	
  6076  000EC2                     l6358:
  6077  000EC2  0E02               	movlw	2
  6078  000EC4  1821               	xorwf	SetLEDOut@state,w,c
  6079  000EC6  1022               	iorwf	SetLEDOut@state+1,w,c
  6080  000EC8  A4D8               	btfss	status,2,c
  6081  000ECA  0012               	return	
  6082                           
  6083                           ;IO.c: 57: do { LATA6 = 0; } while(0);
  6084  000ECC  9C89               	bcf	3977,6,c	;volatile
  6085                           
  6086                           ;IO.c: 58: setLED(1);
  6087  000ECE  0E00               	movlw	0
  6088  000ED0  6E1C               	movwf	setLED@led+1,c
  6089  000ED2  0E01               	movlw	1
  6090  000ED4  6E1B               	movwf	setLED@led,c
  6091  000ED6  ECF8  F00F         	call	_setLED	;wreg free
  6092                           
  6093                           ;IO.c: 59: LED_array[1] = 2;
  6094  000EDA  0E00               	movlw	0
  6095  000EDC  0100               	movlb	0	; () banked
  6096  000EDE  6F8B               	movwf	(_LED_array+3)& (0+255),b
  6097  000EE0  0E02               	movlw	2
  6098  000EE2  6F8A               	movwf	(_LED_array+2)& (0+255),b
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;IO.c: 61: }
  6102                           ;IO.c: 62: break;
  6103                           
  6104                           ; BSR set to: 0
  6105                           
  6106                           ; BSR set to: 0
  6107  000EE4  0012               	return	
  6108  000EE6                     l6364:
  6109                           
  6110                           ;IO.c: 64: if (state == 1) {
  6111  000EE6  0421               	decf	SetLEDOut@state,w,c
  6112  000EE8  1022               	iorwf	SetLEDOut@state+1,w,c
  6113  000EEA  A4D8               	btfss	status,2,c
  6114  000EEC  D00D               	goto	l6372
  6115                           
  6116                           ;IO.c: 65: Off_Led(2);
  6117  000EEE  0E00               	movlw	0
  6118  000EF0  6E1C               	movwf	Off_Led@led+1,c
  6119  000EF2  0E02               	movlw	2
  6120  000EF4  6E1B               	movwf	Off_Led@led,c
  6121  000EF6  EC93  F00F         	call	_Off_Led	;wreg free
  6122                           
  6123                           ;IO.c: 66: do { LATA7 = 1; } while(0);
  6124  000EFA  8E89               	bsf	3977,7,c	;volatile
  6125                           
  6126                           ;IO.c: 67: LED_array[2] = 1;
  6127  000EFC  0E00               	movlw	0
  6128  000EFE  0100               	movlb	0	; () banked
  6129  000F00  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6130  000F02  0E01               	movlw	1
  6131  000F04  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6132                           
  6133                           ;IO.c: 68: } else if (state == 0) {
  6134  000F06  0012               	return	
  6135  000F08                     l6372:
  6136  000F08  5021               	movf	SetLEDOut@state,w,c
  6137  000F0A  1022               	iorwf	SetLEDOut@state+1,w,c
  6138  000F0C  A4D8               	btfss	status,2,c
  6139  000F0E  D00D               	goto	l6380
  6140                           
  6141                           ;IO.c: 69: Off_Led(2);
  6142  000F10  0E00               	movlw	0
  6143  000F12  6E1C               	movwf	Off_Led@led+1,c
  6144  000F14  0E02               	movlw	2
  6145  000F16  6E1B               	movwf	Off_Led@led,c
  6146  000F18  EC93  F00F         	call	_Off_Led	;wreg free
  6147                           
  6148                           ;IO.c: 70: do { LATA7 = 0; } while(0);
  6149  000F1C  9E89               	bcf	3977,7,c	;volatile
  6150                           
  6151                           ;IO.c: 71: LED_array[2] = 0;
  6152  000F1E  0E00               	movlw	0
  6153  000F20  0100               	movlb	0	; () banked
  6154  000F22  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6155  000F24  0E00               	movlw	0
  6156  000F26  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6157                           
  6158                           ;IO.c: 72: } else if (state == 2) {
  6159  000F28  0012               	return	
  6160  000F2A                     l6380:
  6161  000F2A  0E02               	movlw	2
  6162  000F2C  1821               	xorwf	SetLEDOut@state,w,c
  6163  000F2E  1022               	iorwf	SetLEDOut@state+1,w,c
  6164  000F30  A4D8               	btfss	status,2,c
  6165  000F32  0012               	return	
  6166                           
  6167                           ;IO.c: 74: do { LATA7 = 0; } while(0);
  6168  000F34  9E89               	bcf	3977,7,c	;volatile
  6169                           
  6170                           ;IO.c: 75: setLED(2);
  6171  000F36  0E00               	movlw	0
  6172  000F38  6E1C               	movwf	setLED@led+1,c
  6173  000F3A  0E02               	movlw	2
  6174  000F3C  6E1B               	movwf	setLED@led,c
  6175  000F3E  ECF8  F00F         	call	_setLED	;wreg free
  6176                           
  6177                           ;IO.c: 77: LED_array[2] = 2;
  6178  000F42  0E00               	movlw	0
  6179  000F44  0100               	movlb	0	; () banked
  6180  000F46  6F8D               	movwf	(_LED_array+5)& (0+255),b
  6181  000F48  0E02               	movlw	2
  6182  000F4A  6F8C               	movwf	(_LED_array+4)& (0+255),b
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;IO.c: 79: }
  6186                           ;IO.c: 82: break;
  6187                           
  6188                           ; BSR set to: 0
  6189                           
  6190                           ; BSR set to: 0
  6191  000F4C  0012               	return	
  6192  000F4E                     l6386:
  6193                           
  6194                           ;IO.c: 85: if (state == 1) {
  6195  000F4E  0421               	decf	SetLEDOut@state,w,c
  6196  000F50  1022               	iorwf	SetLEDOut@state+1,w,c
  6197  000F52  A4D8               	btfss	status,2,c
  6198  000F54  D00D               	goto	l6394
  6199                           
  6200                           ;IO.c: 86: Off_Led(3);
  6201  000F56  0E00               	movlw	0
  6202  000F58  6E1C               	movwf	Off_Led@led+1,c
  6203  000F5A  0E03               	movlw	3
  6204  000F5C  6E1B               	movwf	Off_Led@led,c
  6205  000F5E  EC93  F00F         	call	_Off_Led	;wreg free
  6206                           
  6207                           ;IO.c: 87: do { LATE2 = 1; } while(0);
  6208  000F62  848D               	bsf	3981,2,c	;volatile
  6209                           
  6210                           ;IO.c: 88: LED_array[3] = 1;
  6211  000F64  0E00               	movlw	0
  6212  000F66  0100               	movlb	0	; () banked
  6213  000F68  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6214  000F6A  0E01               	movlw	1
  6215  000F6C  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6216                           
  6217                           ;IO.c: 89: } else if (state == 0) {
  6218  000F6E  0012               	return	
  6219  000F70                     l6394:
  6220  000F70  5021               	movf	SetLEDOut@state,w,c
  6221  000F72  1022               	iorwf	SetLEDOut@state+1,w,c
  6222  000F74  A4D8               	btfss	status,2,c
  6223  000F76  D00D               	goto	l6402
  6224                           
  6225                           ;IO.c: 90: Off_Led(3);
  6226  000F78  0E00               	movlw	0
  6227  000F7A  6E1C               	movwf	Off_Led@led+1,c
  6228  000F7C  0E03               	movlw	3
  6229  000F7E  6E1B               	movwf	Off_Led@led,c
  6230  000F80  EC93  F00F         	call	_Off_Led	;wreg free
  6231                           
  6232                           ;IO.c: 91: do { LATE2 = 0; } while(0);
  6233  000F84  948D               	bcf	3981,2,c	;volatile
  6234                           
  6235                           ;IO.c: 92: LED_array[3] = 0;
  6236  000F86  0E00               	movlw	0
  6237  000F88  0100               	movlb	0	; () banked
  6238  000F8A  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6239  000F8C  0E00               	movlw	0
  6240  000F8E  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6241                           
  6242                           ;IO.c: 93: }
  6243  000F90  0012               	return	
  6244  000F92                     l6402:
  6245                           
  6246                           ;IO.c: 94: else if (state == 2) {
  6247  000F92  0E02               	movlw	2
  6248  000F94  1821               	xorwf	SetLEDOut@state,w,c
  6249  000F96  1022               	iorwf	SetLEDOut@state+1,w,c
  6250  000F98  A4D8               	btfss	status,2,c
  6251  000F9A  0012               	return	
  6252                           
  6253                           ;IO.c: 95: do { LATE2 = 0; } while(0);
  6254  000F9C  948D               	bcf	3981,2,c	;volatile
  6255                           
  6256                           ;IO.c: 96: setLED(3);
  6257  000F9E  0E00               	movlw	0
  6258  000FA0  6E1C               	movwf	setLED@led+1,c
  6259  000FA2  0E03               	movlw	3
  6260  000FA4  6E1B               	movwf	setLED@led,c
  6261  000FA6  ECF8  F00F         	call	_setLED	;wreg free
  6262                           
  6263                           ;IO.c: 97: LED_array[3] = 2;
  6264  000FAA  0E00               	movlw	0
  6265  000FAC  0100               	movlb	0	; () banked
  6266  000FAE  6F8F               	movwf	(_LED_array+7)& (0+255),b
  6267  000FB0  0E02               	movlw	2
  6268  000FB2  6F8E               	movwf	(_LED_array+6)& (0+255),b
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;IO.c: 99: }
  6272                           ;IO.c: 101: break;
  6273                           
  6274                           ; BSR set to: 0
  6275                           
  6276                           ; BSR set to: 0
  6277  000FB4  0012               	return	
  6278  000FB6                     l6408:
  6279                           
  6280                           ;IO.c: 103: if (state == 1) {
  6281  000FB6  0421               	decf	SetLEDOut@state,w,c
  6282  000FB8  1022               	iorwf	SetLEDOut@state+1,w,c
  6283  000FBA  A4D8               	btfss	status,2,c
  6284  000FBC  D00D               	goto	l6416
  6285                           
  6286                           ;IO.c: 104: Off_Led(4);
  6287  000FBE  0E00               	movlw	0
  6288  000FC0  6E1C               	movwf	Off_Led@led+1,c
  6289  000FC2  0E04               	movlw	4
  6290  000FC4  6E1B               	movwf	Off_Led@led,c
  6291  000FC6  EC93  F00F         	call	_Off_Led	;wreg free
  6292                           
  6293                           ;IO.c: 105: do { LATE1 = 1; } while(0);
  6294  000FCA  828D               	bsf	3981,1,c	;volatile
  6295                           
  6296                           ;IO.c: 106: LED_array[4] = 1;
  6297  000FCC  0E00               	movlw	0
  6298  000FCE  0100               	movlb	0	; () banked
  6299  000FD0  6F91               	movwf	(_LED_array+9)& (0+255),b
  6300  000FD2  0E01               	movlw	1
  6301  000FD4  6F90               	movwf	(_LED_array+8)& (0+255),b
  6302                           
  6303                           ;IO.c: 107: } else if (state == 0) {
  6304  000FD6  0012               	return	
  6305  000FD8                     l6416:
  6306  000FD8  5021               	movf	SetLEDOut@state,w,c
  6307  000FDA  1022               	iorwf	SetLEDOut@state+1,w,c
  6308  000FDC  A4D8               	btfss	status,2,c
  6309  000FDE  D00D               	goto	l6424
  6310                           
  6311                           ;IO.c: 108: Off_Led(4);
  6312  000FE0  0E00               	movlw	0
  6313  000FE2  6E1C               	movwf	Off_Led@led+1,c
  6314  000FE4  0E04               	movlw	4
  6315  000FE6  6E1B               	movwf	Off_Led@led,c
  6316  000FE8  EC93  F00F         	call	_Off_Led	;wreg free
  6317                           
  6318                           ;IO.c: 109: do { LATE1 = 0; } while(0);
  6319  000FEC  928D               	bcf	3981,1,c	;volatile
  6320                           
  6321                           ;IO.c: 110: LED_array[4] = 0;
  6322  000FEE  0E00               	movlw	0
  6323  000FF0  0100               	movlb	0	; () banked
  6324  000FF2  6F91               	movwf	(_LED_array+9)& (0+255),b
  6325  000FF4  0E00               	movlw	0
  6326  000FF6  6F90               	movwf	(_LED_array+8)& (0+255),b
  6327                           
  6328                           ;IO.c: 111: }
  6329  000FF8  0012               	return	
  6330  000FFA                     l6424:
  6331                           
  6332                           ;IO.c: 112: else if (state == 2) {
  6333  000FFA  0E02               	movlw	2
  6334  000FFC  1821               	xorwf	SetLEDOut@state,w,c
  6335  000FFE  1022               	iorwf	SetLEDOut@state+1,w,c
  6336  001000  A4D8               	btfss	status,2,c
  6337  001002  0012               	return	
  6338                           
  6339                           ;IO.c: 113: do { LATE1 = 0; } while(0);
  6340  001004  928D               	bcf	3981,1,c	;volatile
  6341                           
  6342                           ;IO.c: 114: setLED(4);
  6343  001006  0E00               	movlw	0
  6344  001008  6E1C               	movwf	setLED@led+1,c
  6345  00100A  0E04               	movlw	4
  6346  00100C  6E1B               	movwf	setLED@led,c
  6347  00100E  ECF8  F00F         	call	_setLED	;wreg free
  6348                           
  6349                           ;IO.c: 115: LED_array[4] = 2;
  6350  001012  0E00               	movlw	0
  6351  001014  0100               	movlb	0	; () banked
  6352  001016  6F91               	movwf	(_LED_array+9)& (0+255),b
  6353  001018  0E02               	movlw	2
  6354  00101A  6F90               	movwf	(_LED_array+8)& (0+255),b
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;IO.c: 116: }
  6358                           ;IO.c: 118: break;
  6359                           
  6360                           ; BSR set to: 0
  6361                           
  6362                           ; BSR set to: 0
  6363  00101C  0012               	return	
  6364  00101E                     l6430:
  6365                           
  6366                           ;IO.c: 120: if (state == 1) {
  6367  00101E  0421               	decf	SetLEDOut@state,w,c
  6368  001020  1022               	iorwf	SetLEDOut@state+1,w,c
  6369  001022  A4D8               	btfss	status,2,c
  6370  001024  D00D               	goto	l6438
  6371                           
  6372                           ;IO.c: 121: Off_Led(5);
  6373  001026  0E00               	movlw	0
  6374  001028  6E1C               	movwf	Off_Led@led+1,c
  6375  00102A  0E05               	movlw	5
  6376  00102C  6E1B               	movwf	Off_Led@led,c
  6377  00102E  EC93  F00F         	call	_Off_Led	;wreg free
  6378                           
  6379                           ;IO.c: 122: do { LATE0 = 1; } while(0);
  6380  001032  808D               	bsf	3981,0,c	;volatile
  6381                           
  6382                           ;IO.c: 123: LED_array[5] = 1;
  6383  001034  0E00               	movlw	0
  6384  001036  0100               	movlb	0	; () banked
  6385  001038  6F93               	movwf	(_LED_array+11)& (0+255),b
  6386  00103A  0E01               	movlw	1
  6387  00103C  6F92               	movwf	(_LED_array+10)& (0+255),b
  6388                           
  6389                           ;IO.c: 124: } else if (state == 0) {
  6390  00103E  0012               	return	
  6391  001040                     l6438:
  6392  001040  5021               	movf	SetLEDOut@state,w,c
  6393  001042  1022               	iorwf	SetLEDOut@state+1,w,c
  6394  001044  A4D8               	btfss	status,2,c
  6395  001046  D00D               	goto	l6446
  6396                           
  6397                           ;IO.c: 125: Off_Led(5);
  6398  001048  0E00               	movlw	0
  6399  00104A  6E1C               	movwf	Off_Led@led+1,c
  6400  00104C  0E05               	movlw	5
  6401  00104E  6E1B               	movwf	Off_Led@led,c
  6402  001050  EC93  F00F         	call	_Off_Led	;wreg free
  6403                           
  6404                           ;IO.c: 126: do { LATE0 = 0; } while(0);
  6405  001054  908D               	bcf	3981,0,c	;volatile
  6406                           
  6407                           ;IO.c: 127: LED_array[5] = 0;
  6408  001056  0E00               	movlw	0
  6409  001058  0100               	movlb	0	; () banked
  6410  00105A  6F93               	movwf	(_LED_array+11)& (0+255),b
  6411  00105C  0E00               	movlw	0
  6412  00105E  6F92               	movwf	(_LED_array+10)& (0+255),b
  6413                           
  6414                           ;IO.c: 128: }
  6415  001060  0012               	return	
  6416  001062                     l6446:
  6417                           
  6418                           ;IO.c: 129: else if (state == 2) {
  6419  001062  0E02               	movlw	2
  6420  001064  1821               	xorwf	SetLEDOut@state,w,c
  6421  001066  1022               	iorwf	SetLEDOut@state+1,w,c
  6422  001068  A4D8               	btfss	status,2,c
  6423  00106A  0012               	return	
  6424                           
  6425                           ;IO.c: 130: do { LATE0 = 0; } while(0);
  6426  00106C  908D               	bcf	3981,0,c	;volatile
  6427                           
  6428                           ;IO.c: 131: setLED(5);
  6429  00106E  0E00               	movlw	0
  6430  001070  6E1C               	movwf	setLED@led+1,c
  6431  001072  0E05               	movlw	5
  6432  001074  6E1B               	movwf	setLED@led,c
  6433  001076  ECF8  F00F         	call	_setLED	;wreg free
  6434                           
  6435                           ;IO.c: 132: LED_array[5] = 2;
  6436  00107A  0E00               	movlw	0
  6437  00107C  0100               	movlb	0	; () banked
  6438  00107E  6F93               	movwf	(_LED_array+11)& (0+255),b
  6439  001080  0E02               	movlw	2
  6440  001082  6F92               	movwf	(_LED_array+10)& (0+255),b
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;IO.c: 138: }
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;IO.c: 134: }
  6447                           ;IO.c: 137: break;
  6448                           
  6449                           ; BSR set to: 0
  6450                           
  6451                           ; BSR set to: 0
  6452  001084  0012               	return	
  6453  001086                     l6454:
  6454  001086  C01F  F023         	movff	SetLEDOut@lednum,??_SetLEDOut
  6455  00108A  C020  F024         	movff	SetLEDOut@lednum+1,??_SetLEDOut+1
  6456                           
  6457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6458                           ; Switch size 1, requested type "space"
  6459                           ; Number of cases is 1, Range of values is 0 to 0
  6460                           ; switch strategies available:
  6461                           ; Name         Instructions Cycles
  6462                           ; simple_byte            4     3 (average)
  6463                           ;	Chosen strategy is simple_byte
  6464  00108E  5024               	movf	??_SetLEDOut+1,w,c
  6465  001090  0A00               	xorlw	0	; case 0
  6466  001092  A4D8               	btfss	status,2,c
  6467  001094  0012               	return	
  6468                           
  6469                           ; Switch size 1, requested type "space"
  6470                           ; Number of cases is 6, Range of values is 0 to 5
  6471                           ; switch strategies available:
  6472                           ; Name         Instructions Cycles
  6473                           ; simple_byte           19    10 (average)
  6474                           ;	Chosen strategy is simple_byte
  6475  001096  5023               	movf	??_SetLEDOut,w,c
  6476  001098  0A00               	xorlw	0	; case 0
  6477  00109A  B4D8               	btfsc	status,2,c
  6478  00109C  D6BC               	goto	l6320
  6479  00109E  0A01               	xorlw	1	; case 1
  6480  0010A0  B4D8               	btfsc	status,2,c
  6481  0010A2  D6ED               	goto	l6342
  6482  0010A4  0A03               	xorlw	3	; case 2
  6483  0010A6  B4D8               	btfsc	status,2,c
  6484  0010A8  D71E               	goto	l6364
  6485  0010AA  0A01               	xorlw	1	; case 3
  6486  0010AC  B4D8               	btfsc	status,2,c
  6487  0010AE  D74F               	goto	l6386
  6488  0010B0  0A07               	xorlw	7	; case 4
  6489  0010B2  B4D8               	btfsc	status,2,c
  6490  0010B4  D780               	goto	l6408
  6491  0010B6  0A01               	xorlw	1	; case 5
  6492  0010B8  A4D8               	btfss	status,2,c
  6493  0010BA  0012               	return	
  6494  0010BC  D7B0               	goto	l6430
  6495  0010BE                     __end_of_SetLEDOut:
  6496                           	opt stack 0
  6497                           tosu	equ	0xFFF
  6498                           tosh	equ	0xFFE
  6499                           tosl	equ	0xFFD
  6500                           pclath	equ	0xFFA
  6501                           tblptru	equ	0xFF8
  6502                           tblptrh	equ	0xFF7
  6503                           tblptrl	equ	0xFF6
  6504                           tablat	equ	0xFF5
  6505                           prodh	equ	0xFF4
  6506                           prodl	equ	0xFF3
  6507                           intcon	equ	0xFF2
  6508                           postinc0	equ	0xFEE
  6509                           wreg	equ	0xFE8
  6510                           indf2	equ	0xFDF
  6511                           postinc2	equ	0xFDE
  6512                           postdec2	equ	0xFDD
  6513                           plusw2	equ	0xFDB
  6514                           fsr2h	equ	0xFDA
  6515                           fsr2l	equ	0xFD9
  6516                           status	equ	0xFD8
  6517                           
  6518 ;; *************** function _setLED *****************
  6519 ;; Defined at:
  6520 ;;		line 202 in file "mcc_generated_files/tmr2.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  led             2   26[COMRAM] int 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      void 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6534 ;;      Params:         2       0       0       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0
  6536 ;;      Temps:          2       0       0       0       0       0       0
  6537 ;;      Totals:         4       0       0       0       0       0       0
  6538 ;;Total ram usage:        4 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    4
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_SetLEDOut
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text23
  6549  001FF0                     __ptext23:
  6550                           	opt stack 0
  6551  001FF0                     _setLED:
  6552                           	opt stack 23
  6553                           
  6554                           ;tmr2.c: 203: switch (led){
  6555                           
  6556                           ;incstack = 0
  6557  001FF0  D042               	goto	l6180
  6558  001FF2                     l6166:
  6559                           
  6560                           ;tmr2.c: 205: LEDNUM_ENAB[0]=1;
  6561  001FF2  0E00               	movlw	0
  6562  001FF4  0100               	movlb	0	; () banked
  6563  001FF6  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6564  001FF8  0E01               	movlw	1
  6565  001FFA  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6566                           
  6567                           ;tmr2.c: 206: LEDState[0]=0;
  6568  001FFC  0E00               	movlw	0
  6569  001FFE  0100               	movlb	0	; () banked
  6570  002000  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6571  002002  0E00               	movlw	0
  6572  002004  6FA4               	movwf	_LEDState& (0+255),b
  6573                           
  6574                           ;tmr2.c: 207: break;
  6575  002006  0012               	return	
  6576  002008                     l6168:
  6577                           
  6578                           ;tmr2.c: 209: LEDNUM_ENAB[1]=1;
  6579  002008  0E00               	movlw	0
  6580  00200A  0100               	movlb	0	; () banked
  6581  00200C  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6582  00200E  0E01               	movlw	1
  6583  002010  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6584                           
  6585                           ;tmr2.c: 210: LEDState[1]=0;
  6586  002012  0E00               	movlw	0
  6587  002014  0100               	movlb	0	; () banked
  6588  002016  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6589  002018  0E00               	movlw	0
  6590  00201A  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6591                           
  6592                           ;tmr2.c: 211: break;
  6593  00201C  0012               	return	
  6594  00201E                     l6170:
  6595                           
  6596                           ;tmr2.c: 213: LEDNUM_ENAB[2]=1;
  6597  00201E  0E00               	movlw	0
  6598  002020  0100               	movlb	0	; () banked
  6599  002022  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6600  002024  0E01               	movlw	1
  6601  002026  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6602                           
  6603                           ;tmr2.c: 214: LEDState[2]=0;
  6604  002028  0E00               	movlw	0
  6605  00202A  0100               	movlb	0	; () banked
  6606  00202C  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6607  00202E  0E00               	movlw	0
  6608  002030  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6609                           
  6610                           ;tmr2.c: 215: break;
  6611  002032  0012               	return	
  6612  002034                     l6172:
  6613                           
  6614                           ;tmr2.c: 217: LEDNUM_ENAB[3]=1;
  6615  002034  0E00               	movlw	0
  6616  002036  0100               	movlb	0	; () banked
  6617  002038  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6618  00203A  0E01               	movlw	1
  6619  00203C  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6620                           
  6621                           ;tmr2.c: 218: LEDState[3]=0;
  6622  00203E  0E00               	movlw	0
  6623  002040  0100               	movlb	0	; () banked
  6624  002042  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6625  002044  0E00               	movlw	0
  6626  002046  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6627                           
  6628                           ;tmr2.c: 219: break;
  6629  002048  0012               	return	
  6630  00204A                     l6174:
  6631                           
  6632                           ;tmr2.c: 221: LEDNUM_ENAB[4]=1;
  6633  00204A  0E00               	movlw	0
  6634  00204C  0100               	movlb	0	; () banked
  6635  00204E  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6636  002050  0E01               	movlw	1
  6637  002052  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6638                           
  6639                           ;tmr2.c: 222: LEDState[4]=0;
  6640  002054  0E00               	movlw	0
  6641  002056  0100               	movlb	0	; () banked
  6642  002058  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6643  00205A  0E00               	movlw	0
  6644  00205C  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6645                           
  6646                           ;tmr2.c: 223: break;
  6647  00205E  0012               	return	
  6648  002060                     l6176:
  6649                           
  6650                           ;tmr2.c: 225: LEDNUM_ENAB[5]=1;
  6651  002060  0E00               	movlw	0
  6652  002062  0100               	movlb	0	; () banked
  6653  002064  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6654  002066  0E01               	movlw	1
  6655  002068  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6656                           
  6657                           ;tmr2.c: 226: LEDState[5]=0;
  6658  00206A  0E00               	movlw	0
  6659  00206C  0100               	movlb	0	; () banked
  6660  00206E  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6661  002070  0E00               	movlw	0
  6662  002072  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6663                           
  6664                           ; BSR set to: 0
  6665                           ;tmr2.c: 228: }
  6666                           
  6667                           ;tmr2.c: 227: break;
  6668  002074  0012               	return	
  6669  002076                     l6180:
  6670  002076  C01B  F01D         	movff	setLED@led,??_setLED
  6671  00207A  C01C  F01E         	movff	setLED@led+1,??_setLED+1
  6672                           
  6673                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6674                           ; Switch size 1, requested type "space"
  6675                           ; Number of cases is 1, Range of values is 0 to 0
  6676                           ; switch strategies available:
  6677                           ; Name         Instructions Cycles
  6678                           ; simple_byte            4     3 (average)
  6679                           ;	Chosen strategy is simple_byte
  6680  00207E  501E               	movf	??_setLED+1,w,c
  6681  002080  0A00               	xorlw	0	; case 0
  6682  002082  A4D8               	btfss	status,2,c
  6683  002084  0012               	return	
  6684                           
  6685                           ; Switch size 1, requested type "space"
  6686                           ; Number of cases is 6, Range of values is 0 to 5
  6687                           ; switch strategies available:
  6688                           ; Name         Instructions Cycles
  6689                           ; simple_byte           19    10 (average)
  6690                           ;	Chosen strategy is simple_byte
  6691  002086  501D               	movf	??_setLED,w,c
  6692  002088  0A00               	xorlw	0	; case 0
  6693  00208A  B4D8               	btfsc	status,2,c
  6694  00208C  D7B2               	goto	l6166
  6695  00208E  0A01               	xorlw	1	; case 1
  6696  002090  B4D8               	btfsc	status,2,c
  6697  002092  D7BA               	goto	l6168
  6698  002094  0A03               	xorlw	3	; case 2
  6699  002096  B4D8               	btfsc	status,2,c
  6700  002098  D7C2               	goto	l6170
  6701  00209A  0A01               	xorlw	1	; case 3
  6702  00209C  B4D8               	btfsc	status,2,c
  6703  00209E  D7CA               	goto	l6172
  6704  0020A0  0A07               	xorlw	7	; case 4
  6705  0020A2  B4D8               	btfsc	status,2,c
  6706  0020A4  D7D2               	goto	l6174
  6707  0020A6  0A01               	xorlw	1	; case 5
  6708  0020A8  A4D8               	btfss	status,2,c
  6709  0020AA  0012               	return	
  6710  0020AC  D7D9               	goto	l6176
  6711  0020AE                     __end_of_setLED:
  6712                           	opt stack 0
  6713                           tosu	equ	0xFFF
  6714                           tosh	equ	0xFFE
  6715                           tosl	equ	0xFFD
  6716                           pclath	equ	0xFFA
  6717                           tblptru	equ	0xFF8
  6718                           tblptrh	equ	0xFF7
  6719                           tblptrl	equ	0xFF6
  6720                           tablat	equ	0xFF5
  6721                           prodh	equ	0xFF4
  6722                           prodl	equ	0xFF3
  6723                           intcon	equ	0xFF2
  6724                           postinc0	equ	0xFEE
  6725                           wreg	equ	0xFE8
  6726                           indf2	equ	0xFDF
  6727                           postinc2	equ	0xFDE
  6728                           postdec2	equ	0xFDD
  6729                           plusw2	equ	0xFDB
  6730                           fsr2h	equ	0xFDA
  6731                           fsr2l	equ	0xFD9
  6732                           status	equ	0xFD8
  6733                           
  6734 ;; *************** function _Off_Led *****************
  6735 ;; Defined at:
  6736 ;;		line 230 in file "mcc_generated_files/tmr2.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  led             2   26[COMRAM] int 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;		None
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      void 
  6743 ;; Registers used:
  6744 ;;		wreg, status,2, status,0
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6750 ;;      Params:         2       0       0       0       0       0       0
  6751 ;;      Locals:         0       0       0       0       0       0       0
  6752 ;;      Temps:          2       0       0       0       0       0       0
  6753 ;;      Totals:         4       0       0       0       0       0       0
  6754 ;;Total ram usage:        4 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    4
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_SetLEDOut
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text24
  6765  001F26                     __ptext24:
  6766                           	opt stack 0
  6767  001F26                     _Off_Led:
  6768                           	opt stack 23
  6769                           
  6770                           ;tmr2.c: 231: switch (led){
  6771                           
  6772                           ;incstack = 0
  6773  001F26  D048               	goto	l6214
  6774  001F28                     l6188:
  6775                           
  6776                           ;tmr2.c: 233: LEDNUM_ENAB[0]=0;
  6777  001F28  0E00               	movlw	0
  6778  001F2A  0100               	movlb	0	; () banked
  6779  001F2C  6F99               	movwf	(_LEDNUM_ENAB+1)& (0+255),b
  6780  001F2E  0E00               	movlw	0
  6781  001F30  6F98               	movwf	_LEDNUM_ENAB& (0+255),b
  6782                           
  6783                           ;tmr2.c: 234: LEDState[0]=0;
  6784  001F32  0E00               	movlw	0
  6785  001F34  0100               	movlb	0	; () banked
  6786  001F36  6FA5               	movwf	(_LEDState+1)& (0+255),b
  6787  001F38  0E00               	movlw	0
  6788  001F3A  6FA4               	movwf	_LEDState& (0+255),b
  6789                           
  6790                           ; BSR set to: 0
  6791                           
  6792                           ; BSR set to: 0
  6793                           
  6794                           ;tmr2.c: 235: do { LATC1 = 0; } while(0);
  6795  001F3C  928B               	bcf	3979,1,c	;volatile
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;tmr2.c: 236: break;
  6799  001F3E  0012               	return	
  6800  001F40                     l6192:
  6801                           
  6802                           ;tmr2.c: 238: LEDNUM_ENAB[1]=0;
  6803  001F40  0E00               	movlw	0
  6804  001F42  0100               	movlb	0	; () banked
  6805  001F44  6F9B               	movwf	(_LEDNUM_ENAB+3)& (0+255),b
  6806  001F46  0E00               	movlw	0
  6807  001F48  6F9A               	movwf	(_LEDNUM_ENAB+2)& (0+255),b
  6808                           
  6809                           ;tmr2.c: 239: LEDState[1]=0;
  6810  001F4A  0E00               	movlw	0
  6811  001F4C  0100               	movlb	0	; () banked
  6812  001F4E  6FA7               	movwf	(_LEDState+3)& (0+255),b
  6813  001F50  0E00               	movlw	0
  6814  001F52  6FA6               	movwf	(_LEDState+2)& (0+255),b
  6815                           
  6816                           ; BSR set to: 0
  6817                           
  6818                           ; BSR set to: 0
  6819                           
  6820                           ;tmr2.c: 240: do { LATA6 = 0; } while(0);
  6821  001F54  9C89               	bcf	3977,6,c	;volatile
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;tmr2.c: 241: break;
  6825  001F56  0012               	return	
  6826  001F58                     l6196:
  6827                           
  6828                           ;tmr2.c: 243: LEDNUM_ENAB[2]=0;
  6829  001F58  0E00               	movlw	0
  6830  001F5A  0100               	movlb	0	; () banked
  6831  001F5C  6F9D               	movwf	(_LEDNUM_ENAB+5)& (0+255),b
  6832  001F5E  0E00               	movlw	0
  6833  001F60  6F9C               	movwf	(_LEDNUM_ENAB+4)& (0+255),b
  6834                           
  6835                           ;tmr2.c: 244: LEDState[2]=0;
  6836  001F62  0E00               	movlw	0
  6837  001F64  0100               	movlb	0	; () banked
  6838  001F66  6FA9               	movwf	(_LEDState+5)& (0+255),b
  6839  001F68  0E00               	movlw	0
  6840  001F6A  6FA8               	movwf	(_LEDState+4)& (0+255),b
  6841                           
  6842                           ; BSR set to: 0
  6843                           
  6844                           ; BSR set to: 0
  6845                           
  6846                           ;tmr2.c: 245: do { LATA7 = 0; } while(0);
  6847  001F6C  9E89               	bcf	3977,7,c	;volatile
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;tmr2.c: 246: break;
  6851  001F6E  0012               	return	
  6852  001F70                     l6200:
  6853                           
  6854                           ;tmr2.c: 248: LEDNUM_ENAB[3]=0;
  6855  001F70  0E00               	movlw	0
  6856  001F72  0100               	movlb	0	; () banked
  6857  001F74  6F9F               	movwf	(_LEDNUM_ENAB+7)& (0+255),b
  6858  001F76  0E00               	movlw	0
  6859  001F78  6F9E               	movwf	(_LEDNUM_ENAB+6)& (0+255),b
  6860                           
  6861                           ;tmr2.c: 249: LEDState[3]=0;
  6862  001F7A  0E00               	movlw	0
  6863  001F7C  0100               	movlb	0	; () banked
  6864  001F7E  6FAB               	movwf	(_LEDState+7)& (0+255),b
  6865  001F80  0E00               	movlw	0
  6866  001F82  6FAA               	movwf	(_LEDState+6)& (0+255),b
  6867                           
  6868                           ; BSR set to: 0
  6869                           
  6870                           ; BSR set to: 0
  6871                           
  6872                           ;tmr2.c: 250: do { LATE2 = 0; } while(0);
  6873  001F84  948D               	bcf	3981,2,c	;volatile
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;tmr2.c: 251: break;
  6877  001F86  0012               	return	
  6878  001F88                     l6204:
  6879                           
  6880                           ;tmr2.c: 253: LEDNUM_ENAB[4]=0;
  6881  001F88  0E00               	movlw	0
  6882  001F8A  0100               	movlb	0	; () banked
  6883  001F8C  6FA1               	movwf	(_LEDNUM_ENAB+9)& (0+255),b
  6884  001F8E  0E00               	movlw	0
  6885  001F90  6FA0               	movwf	(_LEDNUM_ENAB+8)& (0+255),b
  6886                           
  6887                           ;tmr2.c: 254: LEDState[4]=0;
  6888  001F92  0E00               	movlw	0
  6889  001F94  0100               	movlb	0	; () banked
  6890  001F96  6FAD               	movwf	(_LEDState+9)& (0+255),b
  6891  001F98  0E00               	movlw	0
  6892  001F9A  6FAC               	movwf	(_LEDState+8)& (0+255),b
  6893                           
  6894                           ; BSR set to: 0
  6895                           
  6896                           ; BSR set to: 0
  6897                           
  6898                           ;tmr2.c: 255: do { LATE1 = 0; } while(0);
  6899  001F9C  928D               	bcf	3981,1,c	;volatile
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;tmr2.c: 256: break;
  6903  001F9E  0012               	return	
  6904  001FA0                     l6208:
  6905                           
  6906                           ;tmr2.c: 258: LEDNUM_ENAB[5]=0;
  6907  001FA0  0E00               	movlw	0
  6908  001FA2  0100               	movlb	0	; () banked
  6909  001FA4  6FA3               	movwf	(_LEDNUM_ENAB+11)& (0+255),b
  6910  001FA6  0E00               	movlw	0
  6911  001FA8  6FA2               	movwf	(_LEDNUM_ENAB+10)& (0+255),b
  6912                           
  6913                           ;tmr2.c: 259: LEDState[5]=0;
  6914  001FAA  0E00               	movlw	0
  6915  001FAC  0100               	movlb	0	; () banked
  6916  001FAE  6FAF               	movwf	(_LEDState+11)& (0+255),b
  6917  001FB0  0E00               	movlw	0
  6918  001FB2  6FAE               	movwf	(_LEDState+10)& (0+255),b
  6919                           
  6920                           ; BSR set to: 0
  6921                           
  6922                           ; BSR set to: 0
  6923                           
  6924                           ;tmr2.c: 260: do { LATE0 = 0; } while(0) ;
  6925  001FB4  908D               	bcf	3981,0,c	;volatile
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;tmr2.c: 262: }
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;tmr2.c: 261: break;
  6932  001FB6  0012               	return	
  6933  001FB8                     l6214:
  6934  001FB8  C01B  F01D         	movff	Off_Led@led,??_Off_Led
  6935  001FBC  C01C  F01E         	movff	Off_Led@led+1,??_Off_Led+1
  6936                           
  6937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6938                           ; Switch size 1, requested type "space"
  6939                           ; Number of cases is 1, Range of values is 0 to 0
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte            4     3 (average)
  6943                           ;	Chosen strategy is simple_byte
  6944  001FC0  501E               	movf	??_Off_Led+1,w,c
  6945  001FC2  0A00               	xorlw	0	; case 0
  6946  001FC4  A4D8               	btfss	status,2,c
  6947  001FC6  0012               	return	
  6948                           
  6949                           ; Switch size 1, requested type "space"
  6950                           ; Number of cases is 6, Range of values is 0 to 5
  6951                           ; switch strategies available:
  6952                           ; Name         Instructions Cycles
  6953                           ; simple_byte           19    10 (average)
  6954                           ;	Chosen strategy is simple_byte
  6955  001FC8  501D               	movf	??_Off_Led,w,c
  6956  001FCA  0A00               	xorlw	0	; case 0
  6957  001FCC  B4D8               	btfsc	status,2,c
  6958  001FCE  D7AC               	goto	l6188
  6959  001FD0  0A01               	xorlw	1	; case 1
  6960  001FD2  B4D8               	btfsc	status,2,c
  6961  001FD4  D7B5               	goto	l6192
  6962  001FD6  0A03               	xorlw	3	; case 2
  6963  001FD8  B4D8               	btfsc	status,2,c
  6964  001FDA  D7BE               	goto	l6196
  6965  001FDC  0A01               	xorlw	1	; case 3
  6966  001FDE  B4D8               	btfsc	status,2,c
  6967  001FE0  D7C7               	goto	l6200
  6968  001FE2  0A07               	xorlw	7	; case 4
  6969  001FE4  B4D8               	btfsc	status,2,c
  6970  001FE6  D7D0               	goto	l6204
  6971  001FE8  0A01               	xorlw	1	; case 5
  6972  001FEA  A4D8               	btfss	status,2,c
  6973  001FEC  0012               	return	
  6974  001FEE  D7D8               	goto	l6208
  6975  001FF0                     __end_of_Off_Led:
  6976                           	opt stack 0
  6977                           tosu	equ	0xFFF
  6978                           tosh	equ	0xFFE
  6979                           tosl	equ	0xFFD
  6980                           pclath	equ	0xFFA
  6981                           tblptru	equ	0xFF8
  6982                           tblptrh	equ	0xFF7
  6983                           tblptrl	equ	0xFF6
  6984                           tablat	equ	0xFF5
  6985                           prodh	equ	0xFF4
  6986                           prodl	equ	0xFF3
  6987                           intcon	equ	0xFF2
  6988                           postinc0	equ	0xFEE
  6989                           wreg	equ	0xFE8
  6990                           indf2	equ	0xFDF
  6991                           postinc2	equ	0xFDE
  6992                           postdec2	equ	0xFDD
  6993                           plusw2	equ	0xFDB
  6994                           fsr2h	equ	0xFDA
  6995                           fsr2l	equ	0xFD9
  6996                           status	equ	0xFD8
  6997                           
  6998 ;; *************** function _DataBarGraphs *****************
  6999 ;; Defined at:
  7000 ;;		line 48 in file "Communications.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  BGA             2   26[COMRAM] unsigned int 
  7003 ;;  BGB             2   28[COMRAM] unsigned int 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		None
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7015 ;;      Params:         4       0       0       0       0       0       0
  7016 ;;      Locals:         0       0       0       0       0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0
  7018 ;;      Totals:         4       0       0       0       0       0       0
  7019 ;;Total ram usage:        4 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    4
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_updateComms
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text25
  7030  003170                     __ptext25:
  7031                           	opt stack 0
  7032  003170                     _DataBarGraphs:
  7033                           	opt stack 25
  7034                           
  7035                           ;Communications.c: 49: DataBarGraphA = BGA;
  7036                           
  7037                           ;incstack = 0
  7038  003170  C01B  F0C3         	movff	DataBarGraphs@BGA,_DataBarGraphA
  7039  003174  C01C  F0C4         	movff	DataBarGraphs@BGA+1,_DataBarGraphA+1
  7040                           
  7041                           ;Communications.c: 50: DataBarGraphB = BGB;
  7042  003178  C01D  F0C5         	movff	DataBarGraphs@BGB,_DataBarGraphB
  7043  00317C  C01E  F0C6         	movff	DataBarGraphs@BGB+1,_DataBarGraphB+1
  7044  003180  0012               	return		;funcret
  7045  003182                     __end_of_DataBarGraphs:
  7046                           	opt stack 0
  7047                           tosu	equ	0xFFF
  7048                           tosh	equ	0xFFE
  7049                           tosl	equ	0xFFD
  7050                           pclath	equ	0xFFA
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           prodh	equ	0xFF4
  7056                           prodl	equ	0xFF3
  7057                           intcon	equ	0xFF2
  7058                           postinc0	equ	0xFEE
  7059                           wreg	equ	0xFE8
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           plusw2	equ	0xFDB
  7064                           fsr2h	equ	0xFDA
  7065                           fsr2l	equ	0xFD9
  7066                           status	equ	0xFD8
  7067                           
  7068 ;; *************** function ___lwtoft *****************
  7069 ;; Defined at:
  7070 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  c               2   34[COMRAM] unsigned int 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;		None
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  3   34[COMRAM] float 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7084 ;;      Params:         3       0       0       0       0       0       0
  7085 ;;      Locals:         0       0       0       0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0
  7087 ;;      Totals:         3       0       0       0       0       0       0
  7088 ;;Total ram usage:        3 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    5
  7091 ;; This function calls:
  7092 ;;		___ftpack
  7093 ;; This function is called by:
  7094 ;;		_main
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text26
  7099  00305A                     __ptext26:
  7100                           	opt stack 0
  7101  00305A                     ___lwtoft:
  7102                           	opt stack 25
  7103                           
  7104                           ;incstack = 0
  7105  00305A  C023  F01B         	movff	___lwtoft@c,___ftpack@arg
  7106  00305E  C024  F01C         	movff	___lwtoft@c+1,___ftpack@arg+1
  7107  003062  6A1D               	clrf	___ftpack@arg+2,c
  7108  003064  0E8E               	movlw	142
  7109  003066  6E1E               	movwf	___ftpack@exp,c
  7110  003068  0E00               	movlw	0
  7111  00306A  6E1F               	movwf	___ftpack@sign,c
  7112  00306C  ECB3  F010         	call	___ftpack	;wreg free
  7113  003070  C01B  F023         	movff	?___ftpack,?___lwtoft
  7114  003074  C01C  F024         	movff	?___ftpack+1,?___lwtoft+1
  7115  003078  C01D  F025         	movff	?___ftpack+2,?___lwtoft+2
  7116  00307C  0012               	return	
  7117  00307E                     __end_of___lwtoft:
  7118                           	opt stack 0
  7119                           tosu	equ	0xFFF
  7120                           tosh	equ	0xFFE
  7121                           tosl	equ	0xFFD
  7122                           pclath	equ	0xFFA
  7123                           tblptru	equ	0xFF8
  7124                           tblptrh	equ	0xFF7
  7125                           tblptrl	equ	0xFF6
  7126                           tablat	equ	0xFF5
  7127                           prodh	equ	0xFF4
  7128                           prodl	equ	0xFF3
  7129                           intcon	equ	0xFF2
  7130                           postinc0	equ	0xFEE
  7131                           wreg	equ	0xFE8
  7132                           indf2	equ	0xFDF
  7133                           postinc2	equ	0xFDE
  7134                           postdec2	equ	0xFDD
  7135                           plusw2	equ	0xFDB
  7136                           fsr2h	equ	0xFDA
  7137                           fsr2l	equ	0xFD9
  7138                           status	equ	0xFD8
  7139                           
  7140 ;; *************** function ___fttol *****************
  7141 ;; Defined at:
  7142 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  f1              3    0[BANK1 ] float 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  lval            4   10[BANK1 ] unsigned long 
  7147 ;;  exp1            1   14[BANK1 ] unsigned char 
  7148 ;;  sign1           1    9[BANK1 ] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  4    0[BANK1 ] long 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7158 ;;      Params:         0       0       4       0       0       0       0
  7159 ;;      Locals:         0       0       6       0       0       0       0
  7160 ;;      Temps:          0       0       5       0       0       0       0
  7161 ;;      Totals:         0       0      15       0       0       0       0
  7162 ;;Total ram usage:       15 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    4
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_main
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text27
  7173  0017CC                     __ptext27:
  7174                           	opt stack 0
  7175  0017CC                     ___fttol:
  7176                           	opt stack 26
  7177                           
  7178                           ;incstack = 0
  7179  0017CC  C13B  F13D         	movff	___fttol@f1+2,??___fttol
  7180  0017D0  0101               	movlb	1	; () banked
  7181  0017D2  6B3E               	clrf	(??___fttol+1)& (0+255),b
  7182  0017D4  6B3F               	clrf	(??___fttol+2)& (0+255),b
  7183  0017D6  0101               	movlb	1	; () banked
  7184  0017D8  353A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7185  0017DA  0101               	movlb	1	; () banked
  7186  0017DC  373D               	rlcf	??___fttol& (0+255),f,b
  7187  0017DE  E301               	bnc	u8401
  7188  0017E0  813E               	bsf	(??___fttol+1)& (0+255),0,b
  7189  0017E2                     u8401:
  7190  0017E2  0101               	movlb	1	; () banked
  7191  0017E4  513D               	movf	??___fttol& (0+255),w,b
  7192  0017E6  0101               	movlb	1	; () banked
  7193  0017E8  6F47               	movwf	___fttol@exp1& (0+255),b
  7194  0017EA  0101               	movlb	1	; () banked
  7195  0017EC  5147               	movf	___fttol@exp1& (0+255),w,b
  7196  0017EE  A4D8               	btfss	status,2,c
  7197  0017F0  D00A               	goto	l7320
  7198                           
  7199                           ; BSR set to: 1
  7200  0017F2  0E00               	movlw	0
  7201  0017F4  0101               	movlb	1	; () banked
  7202  0017F6  6F39               	movwf	?___fttol& (0+255),b
  7203  0017F8  0E00               	movlw	0
  7204  0017FA  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7205  0017FC  0E00               	movlw	0
  7206  0017FE  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7207  001800  0E00               	movlw	0
  7208  001802  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7209                           
  7210                           ; BSR set to: 1
  7211  001804  0012               	return	
  7212  001806                     l7320:
  7213                           
  7214                           ; BSR set to: 1
  7215  001806  0E17               	movlw	23
  7216  001808  0101               	movlb	1	; () banked
  7217  00180A  6F3D               	movwf	??___fttol& (0+255),b
  7218  00180C  C139  F13E         	movff	___fttol@f1,??___fttol+1
  7219  001810  C13A  F13F         	movff	___fttol@f1+1,??___fttol+2
  7220  001814  C13B  F140         	movff	___fttol@f1+2,??___fttol+3
  7221  001818  0101               	movlb	1	; () banked
  7222  00181A  293D               	incf	??___fttol& (0+255),w,b
  7223  00181C  0101               	movlb	1	; () banked
  7224  00181E  6F41               	movwf	(??___fttol+4)& (0+255),b
  7225  001820  D005               	goto	u8420
  7226  001822                     u8425:
  7227  001822  0101               	movlb	1	; () banked
  7228  001824  90D8               	bcf	status,0,c
  7229  001826  3340               	rrcf	(??___fttol+3)& (0+255),f,b
  7230  001828  333F               	rrcf	(??___fttol+2)& (0+255),f,b
  7231  00182A  333E               	rrcf	(??___fttol+1)& (0+255),f,b
  7232  00182C                     u8420:
  7233  00182C  0101               	movlb	1	; () banked
  7234  00182E  2F41               	decfsz	(??___fttol+4)& (0+255),f,b
  7235  001830  D7F8               	goto	u8425
  7236  001832  0101               	movlb	1	; () banked
  7237  001834  513E               	movf	(??___fttol+1)& (0+255),w,b
  7238  001836  0101               	movlb	1	; () banked
  7239  001838  6F42               	movwf	___fttol@sign1& (0+255),b
  7240                           
  7241                           ; BSR set to: 1
  7242  00183A  0101               	movlb	1	; () banked
  7243  00183C  8F3A               	bsf	(___fttol@f1+1)& (0+255),7,b
  7244                           
  7245                           ; BSR set to: 1
  7246  00183E  0EFF               	movlw	255
  7247  001840  0101               	movlb	1	; () banked
  7248  001842  1739               	andwf	___fttol@f1& (0+255),f,b
  7249  001844  0EFF               	movlw	255
  7250  001846  0101               	movlb	1	; () banked
  7251  001848  173A               	andwf	(___fttol@f1+1)& (0+255),f,b
  7252  00184A  0E00               	movlw	0
  7253  00184C  0101               	movlb	1	; () banked
  7254  00184E  173B               	andwf	(___fttol@f1+2)& (0+255),f,b
  7255                           
  7256                           ; BSR set to: 1
  7257  001850  0101               	movlb	1	; () banked
  7258  001852  5139               	movf	___fttol@f1& (0+255),w,b
  7259  001854  0101               	movlb	1	; () banked
  7260  001856  6F43               	movwf	___fttol@lval& (0+255),b
  7261  001858  0101               	movlb	1	; () banked
  7262  00185A  513A               	movf	(___fttol@f1+1)& (0+255),w,b
  7263  00185C  0101               	movlb	1	; () banked
  7264  00185E  6F44               	movwf	(___fttol@lval+1)& (0+255),b
  7265  001860  0101               	movlb	1	; () banked
  7266  001862  513B               	movf	(___fttol@f1+2)& (0+255),w,b
  7267  001864  0101               	movlb	1	; () banked
  7268  001866  6F45               	movwf	(___fttol@lval+2)& (0+255),b
  7269  001868  0101               	movlb	1	; () banked
  7270  00186A  6B46               	clrf	(___fttol@lval+3)& (0+255),b
  7271                           
  7272                           ; BSR set to: 1
  7273  00186C  0E8E               	movlw	142
  7274  00186E  0101               	movlb	1	; () banked
  7275  001870  5F47               	subwf	___fttol@exp1& (0+255),f,b
  7276                           
  7277                           ; BSR set to: 1
  7278  001872  0101               	movlb	1	; () banked
  7279  001874  AF47               	btfss	___fttol@exp1& (0+255),7,b
  7280  001876  D01A               	goto	l7342
  7281                           
  7282                           ; BSR set to: 1
  7283  001878  0101               	movlb	1	; () banked
  7284  00187A  5147               	movf	___fttol@exp1& (0+255),w,b
  7285  00187C  0A80               	xorlw	128
  7286  00187E  0F8F               	addlw	143
  7287  001880  B0D8               	btfsc	status,0,c
  7288  001882  D00A               	goto	l7338
  7289                           
  7290                           ; BSR set to: 1
  7291  001884  0E00               	movlw	0
  7292  001886  0101               	movlb	1	; () banked
  7293  001888  6F39               	movwf	?___fttol& (0+255),b
  7294  00188A  0E00               	movlw	0
  7295  00188C  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7296  00188E  0E00               	movlw	0
  7297  001890  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7298  001892  0E00               	movlw	0
  7299  001894  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7300                           
  7301                           ; BSR set to: 1
  7302  001896  0012               	return	
  7303  001898                     l7338:
  7304                           
  7305                           ; BSR set to: 1
  7306  001898  0101               	movlb	1	; () banked
  7307  00189A  90D8               	bcf	status,0,c
  7308  00189C  3346               	rrcf	(___fttol@lval+3)& (0+255),f,b
  7309  00189E  3345               	rrcf	(___fttol@lval+2)& (0+255),f,b
  7310  0018A0  3344               	rrcf	(___fttol@lval+1)& (0+255),f,b
  7311  0018A2  3343               	rrcf	___fttol@lval& (0+255),f,b
  7312                           
  7313                           ; BSR set to: 1
  7314  0018A4  0101               	movlb	1	; () banked
  7315  0018A6  3F47               	incfsz	___fttol@exp1& (0+255),f,b
  7316  0018A8  D7F7               	goto	l7338
  7317                           
  7318                           ; BSR set to: 1
  7319  0018AA  D01B               	goto	l7352
  7320  0018AC                     l7342:
  7321                           
  7322                           ; BSR set to: 1
  7323  0018AC  0E17               	movlw	23
  7324  0018AE  0101               	movlb	1	; () banked
  7325  0018B0  6547               	cpfsgt	___fttol@exp1& (0+255),b
  7326  0018B2  D012               	goto	l7350
  7327                           
  7328                           ; BSR set to: 1
  7329  0018B4  0E00               	movlw	0
  7330  0018B6  0101               	movlb	1	; () banked
  7331  0018B8  6F39               	movwf	?___fttol& (0+255),b
  7332  0018BA  0E00               	movlw	0
  7333  0018BC  6F3A               	movwf	(?___fttol+1)& (0+255),b
  7334  0018BE  0E00               	movlw	0
  7335  0018C0  6F3B               	movwf	(?___fttol+2)& (0+255),b
  7336  0018C2  0E00               	movlw	0
  7337  0018C4  6F3C               	movwf	(?___fttol+3)& (0+255),b
  7338                           
  7339                           ; BSR set to: 1
  7340  0018C6  0012               	return	
  7341  0018C8                     l7348:
  7342                           
  7343                           ; BSR set to: 1
  7344  0018C8  0101               	movlb	1	; () banked
  7345  0018CA  90D8               	bcf	status,0,c
  7346  0018CC  3743               	rlcf	___fttol@lval& (0+255),f,b
  7347  0018CE  3744               	rlcf	(___fttol@lval+1)& (0+255),f,b
  7348  0018D0  3745               	rlcf	(___fttol@lval+2)& (0+255),f,b
  7349  0018D2  3746               	rlcf	(___fttol@lval+3)& (0+255),f,b
  7350  0018D4  0101               	movlb	1	; () banked
  7351  0018D6  0747               	decf	___fttol@exp1& (0+255),f,b
  7352  0018D8                     l7350:
  7353                           
  7354                           ; BSR set to: 1
  7355  0018D8  0101               	movlb	1	; () banked
  7356  0018DA  5147               	movf	___fttol@exp1& (0+255),w,b
  7357  0018DC  0101               	movlb	1	; () banked
  7358  0018DE  A4D8               	btfss	status,2,c
  7359  0018E0  D7F3               	goto	l7348
  7360  0018E2                     l7352:
  7361                           
  7362                           ; BSR set to: 1
  7363  0018E2  0101               	movlb	1	; () banked
  7364  0018E4  5142               	movf	___fttol@sign1& (0+255),w,b
  7365  0018E6  0101               	movlb	1	; () banked
  7366  0018E8  B4D8               	btfsc	status,2,c
  7367  0018EA  D009               	goto	l7356
  7368                           
  7369                           ; BSR set to: 1
  7370  0018EC  0101               	movlb	1	; () banked
  7371  0018EE  1F46               	comf	(___fttol@lval+3)& (0+255),f,b
  7372  0018F0  1F45               	comf	(___fttol@lval+2)& (0+255),f,b
  7373  0018F2  1F44               	comf	(___fttol@lval+1)& (0+255),f,b
  7374  0018F4  6D43               	negf	___fttol@lval& (0+255),b
  7375  0018F6  0E00               	movlw	0
  7376  0018F8  2344               	addwfc	(___fttol@lval+1)& (0+255),f,b
  7377  0018FA  2345               	addwfc	(___fttol@lval+2)& (0+255),f,b
  7378  0018FC  2346               	addwfc	(___fttol@lval+3)& (0+255),f,b
  7379  0018FE                     l7356:
  7380                           
  7381                           ; BSR set to: 1
  7382  0018FE  C143  F139         	movff	___fttol@lval,?___fttol
  7383  001902  C144  F13A         	movff	___fttol@lval+1,?___fttol+1
  7384  001906  C145  F13B         	movff	___fttol@lval+2,?___fttol+2
  7385  00190A  C146  F13C         	movff	___fttol@lval+3,?___fttol+3
  7386  00190E  0012               	return	
  7387  001910                     __end_of___fttol:
  7388                           	opt stack 0
  7389                           tosu	equ	0xFFF
  7390                           tosh	equ	0xFFE
  7391                           tosl	equ	0xFFD
  7392                           pclath	equ	0xFFA
  7393                           tblptru	equ	0xFF8
  7394                           tblptrh	equ	0xFF7
  7395                           tblptrl	equ	0xFF6
  7396                           tablat	equ	0xFF5
  7397                           prodh	equ	0xFF4
  7398                           prodl	equ	0xFF3
  7399                           intcon	equ	0xFF2
  7400                           postinc0	equ	0xFEE
  7401                           wreg	equ	0xFE8
  7402                           indf2	equ	0xFDF
  7403                           postinc2	equ	0xFDE
  7404                           postdec2	equ	0xFDD
  7405                           plusw2	equ	0xFDB
  7406                           fsr2h	equ	0xFDA
  7407                           fsr2l	equ	0xFD9
  7408                           status	equ	0xFD8
  7409                           
  7410 ;; *************** function ___ftmul *****************
  7411 ;; Defined at:
  7412 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  f1              3    0[BANK0 ] float 
  7415 ;;  f2              3    3[BANK0 ] float 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  7418 ;;  sign            1   11[BANK0 ] unsigned char 
  7419 ;;  cntr            1   10[BANK0 ] unsigned char 
  7420 ;;  exp             1    6[BANK0 ] unsigned char 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  3    0[BANK0 ] float 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7430 ;;      Params:         0       6       0       0       0       0       0
  7431 ;;      Locals:         0       6       0       0       0       0       0
  7432 ;;      Temps:          3       0       0       0       0       0       0
  7433 ;;      Totals:         3      12       0       0       0       0       0
  7434 ;;Total ram usage:       15 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    5
  7437 ;; This function calls:
  7438 ;;		___ftpack
  7439 ;; This function is called by:
  7440 ;;		_main
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text28
  7445  0013EC                     __ptext28:
  7446                           	opt stack 0
  7447  0013EC                     ___ftmul:
  7448                           	opt stack 25
  7449                           
  7450                           ; BSR set to: 1
  7451                           ;incstack = 0
  7452  0013EC  C0F4  F026         	movff	___ftmul@f1+2,??___ftmul
  7453  0013F0  6A27               	clrf	(??___ftmul+1)& (0+255),c
  7454  0013F2  6A28               	clrf	(??___ftmul+2)& (0+255),c
  7455  0013F4  0100               	movlb	0	; () banked
  7456  0013F6  35F3               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7457  0013F8  3626               	rlcf	??___ftmul& (0+255),f,c
  7458  0013FA  E301               	bnc	u8341
  7459  0013FC  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  7460  0013FE                     u8341:
  7461  0013FE  5026               	movf	??___ftmul,w,c
  7462  001400  0100               	movlb	0	; () banked
  7463  001402  6FF8               	movwf	___ftmul@exp& (0+255),b
  7464  001404  0100               	movlb	0	; () banked
  7465  001406  51F8               	movf	___ftmul@exp& (0+255),w,b
  7466  001408  A4D8               	btfss	status,2,c
  7467  00140A  D00A               	goto	l7272
  7468                           
  7469                           ; BSR set to: 0
  7470  00140C  0E00               	movlw	0
  7471  00140E  0100               	movlb	0	; () banked
  7472  001410  6FF2               	movwf	?___ftmul& (0+255),b
  7473  001412  0E00               	movlw	0
  7474  001414  0100               	movlb	0	; () banked
  7475  001416  6FF3               	movwf	(?___ftmul+1)& (0+255),b
  7476  001418  0E00               	movlw	0
  7477  00141A  0100               	movlb	0	; () banked
  7478  00141C  6FF4               	movwf	(?___ftmul+2)& (0+255),b
  7479                           
  7480                           ; BSR set to: 0
  7481  00141E  0012               	return	
  7482  001420                     l7272:
  7483                           
  7484                           ; BSR set to: 0
  7485  001420  C0F7  F026         	movff	___ftmul@f2+2,??___ftmul
  7486  001424  6A27               	clrf	(??___ftmul+1)& (0+255),c
  7487  001426  6A28               	clrf	(??___ftmul+2)& (0+255),c
  7488  001428  0100               	movlb	0	; () banked
  7489  00142A  35F6               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7490  00142C  3626               	rlcf	??___ftmul& (0+255),f,c
  7491  00142E  E301               	bnc	u8361
  7492  001430  8027               	bsf	(??___ftmul+1)& (0+255),0,c
  7493  001432                     u8361:
  7494  001432  5026               	movf	??___ftmul,w,c
  7495  001434  0100               	movlb	0	; () banked
  7496  001436  6FFD               	movwf	___ftmul@sign& (0+255),b
  7497  001438  0100               	movlb	0	; () banked
  7498  00143A  51FD               	movf	___ftmul@sign& (0+255),w,b
  7499  00143C  A4D8               	btfss	status,2,c
  7500  00143E  D00A               	goto	l7278
  7501                           
  7502                           ; BSR set to: 0
  7503  001440  0E00               	movlw	0
  7504  001442  0100               	movlb	0	; () banked
  7505  001444  6FF2               	movwf	?___ftmul& (0+255),b
  7506  001446  0E00               	movlw	0
  7507  001448  0100               	movlb	0	; () banked
  7508  00144A  6FF3               	movwf	(?___ftmul+1)& (0+255),b
  7509  00144C  0E00               	movlw	0
  7510  00144E  0100               	movlb	0	; () banked
  7511  001450  6FF4               	movwf	(?___ftmul+2)& (0+255),b
  7512                           
  7513                           ; BSR set to: 0
  7514  001452  0012               	return	
  7515  001454                     l7278:
  7516                           
  7517                           ; BSR set to: 0
  7518  001454  0100               	movlb	0	; () banked
  7519  001456  51FD               	movf	___ftmul@sign& (0+255),w,b
  7520  001458  0F7B               	addlw	123
  7521  00145A  0100               	movlb	0	; () banked
  7522  00145C  27F8               	addwf	___ftmul@exp& (0+255),f,b
  7523                           
  7524                           ; BSR set to: 0
  7525  00145E  C0F4  F0FD         	movff	___ftmul@f1+2,___ftmul@sign
  7526  001462  0100               	movlb	0	; () banked
  7527  001464  51F7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7528  001466  0100               	movlb	0	; () banked
  7529  001468  1BFD               	xorwf	___ftmul@sign& (0+255),f,b
  7530  00146A  0E80               	movlw	128
  7531  00146C  0100               	movlb	0	; () banked
  7532  00146E  17FD               	andwf	___ftmul@sign& (0+255),f,b
  7533                           
  7534                           ; BSR set to: 0
  7535  001470  0100               	movlb	0	; () banked
  7536  001472  8FF3               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7537                           
  7538                           ; BSR set to: 0
  7539  001474  0100               	movlb	0	; () banked
  7540  001476  8FF6               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7541                           
  7542                           ; BSR set to: 0
  7543  001478  0EFF               	movlw	255
  7544  00147A  0100               	movlb	0	; () banked
  7545  00147C  17F5               	andwf	___ftmul@f2& (0+255),f,b
  7546  00147E  0EFF               	movlw	255
  7547  001480  0100               	movlb	0	; () banked
  7548  001482  17F6               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7549  001484  0E00               	movlw	0
  7550  001486  0100               	movlb	0	; () banked
  7551  001488  17F7               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7552                           
  7553                           ; BSR set to: 0
  7554  00148A  0E00               	movlw	0
  7555  00148C  0100               	movlb	0	; () banked
  7556  00148E  6FF9               	movwf	___ftmul@f3_as_product& (0+255),b
  7557  001490  0E00               	movlw	0
  7558  001492  0100               	movlb	0	; () banked
  7559  001494  6FFA               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7560  001496  0E00               	movlw	0
  7561  001498  0100               	movlb	0	; () banked
  7562  00149A  6FFB               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7563                           
  7564                           ; BSR set to: 0
  7565  00149C  0E07               	movlw	7
  7566  00149E  0100               	movlb	0	; () banked
  7567  0014A0  6FFC               	movwf	___ftmul@cntr& (0+255),b
  7568  0014A2                     l7292:
  7569                           
  7570                           ; BSR set to: 0
  7571  0014A2  0100               	movlb	0	; () banked
  7572  0014A4  A1F2               	btfss	___ftmul@f1& (0+255),0,b
  7573  0014A6  D00C               	goto	l7296
  7574                           
  7575                           ; BSR set to: 0
  7576  0014A8  0100               	movlb	0	; () banked
  7577  0014AA  51F5               	movf	___ftmul@f2& (0+255),w,b
  7578  0014AC  0100               	movlb	0	; () banked
  7579  0014AE  27F9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7580  0014B0  0100               	movlb	0	; () banked
  7581  0014B2  51F6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7582  0014B4  0100               	movlb	0	; () banked
  7583  0014B6  23FA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7584  0014B8  0100               	movlb	0	; () banked
  7585  0014BA  51F7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7586  0014BC  0100               	movlb	0	; () banked
  7587  0014BE  23FB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7588  0014C0                     l7296:
  7589                           
  7590                           ; BSR set to: 0
  7591  0014C0  0100               	movlb	0	; () banked
  7592  0014C2  90D8               	bcf	status,0,c
  7593  0014C4  33F4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7594  0014C6  33F3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7595  0014C8  33F2               	rrcf	___ftmul@f1& (0+255),f,b
  7596  0014CA  0100               	movlb	0	; () banked
  7597  0014CC  90D8               	bcf	status,0,c
  7598  0014CE  37F5               	rlcf	___ftmul@f2& (0+255),f,b
  7599  0014D0  37F6               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7600  0014D2  37F7               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7601                           
  7602                           ; BSR set to: 0
  7603  0014D4  0100               	movlb	0	; () banked
  7604  0014D6  2FFC               	decfsz	___ftmul@cntr& (0+255),f,b
  7605  0014D8  D7E4               	goto	l7292
  7606                           
  7607                           ; BSR set to: 0
  7608                           
  7609                           ; BSR set to: 0
  7610  0014DA  0E09               	movlw	9
  7611  0014DC  0100               	movlb	0	; () banked
  7612  0014DE  6FFC               	movwf	___ftmul@cntr& (0+255),b
  7613  0014E0                     l7302:
  7614                           
  7615                           ; BSR set to: 0
  7616  0014E0  0100               	movlb	0	; () banked
  7617  0014E2  A1F2               	btfss	___ftmul@f1& (0+255),0,b
  7618  0014E4  D00C               	goto	l7306
  7619                           
  7620                           ; BSR set to: 0
  7621  0014E6  0100               	movlb	0	; () banked
  7622  0014E8  51F5               	movf	___ftmul@f2& (0+255),w,b
  7623  0014EA  0100               	movlb	0	; () banked
  7624  0014EC  27F9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7625  0014EE  0100               	movlb	0	; () banked
  7626  0014F0  51F6               	movf	(___ftmul@f2+1)& (0+255),w,b
  7627  0014F2  0100               	movlb	0	; () banked
  7628  0014F4  23FA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7629  0014F6  0100               	movlb	0	; () banked
  7630  0014F8  51F7               	movf	(___ftmul@f2+2)& (0+255),w,b
  7631  0014FA  0100               	movlb	0	; () banked
  7632  0014FC  23FB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7633  0014FE                     l7306:
  7634                           
  7635                           ; BSR set to: 0
  7636  0014FE  0100               	movlb	0	; () banked
  7637  001500  90D8               	bcf	status,0,c
  7638  001502  33F4               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7639  001504  33F3               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7640  001506  33F2               	rrcf	___ftmul@f1& (0+255),f,b
  7641  001508  0100               	movlb	0	; () banked
  7642  00150A  90D8               	bcf	status,0,c
  7643  00150C  33FB               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7644  00150E  33FA               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7645  001510  33F9               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7646                           
  7647                           ; BSR set to: 0
  7648  001512  0100               	movlb	0	; () banked
  7649  001514  2FFC               	decfsz	___ftmul@cntr& (0+255),f,b
  7650  001516  D7E4               	goto	l7302
  7651                           
  7652                           ; BSR set to: 0
  7653                           
  7654                           ; BSR set to: 0
  7655  001518  C0F9  F01B         	movff	___ftmul@f3_as_product,___ftpack@arg
  7656  00151C  C0FA  F01C         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7657  001520  C0FB  F01D         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7658  001524  C0F8  F01E         	movff	___ftmul@exp,___ftpack@exp
  7659  001528  C0FD  F01F         	movff	___ftmul@sign,___ftpack@sign
  7660  00152C  ECB3  F010         	call	___ftpack	;wreg free
  7661  001530  C01B  F0F2         	movff	?___ftpack,?___ftmul
  7662  001534  C01C  F0F3         	movff	?___ftpack+1,?___ftmul+1
  7663  001538  C01D  F0F4         	movff	?___ftpack+2,?___ftmul+2
  7664  00153C  0012               	return	
  7665  00153E                     __end_of___ftmul:
  7666                           	opt stack 0
  7667                           tosu	equ	0xFFF
  7668                           tosh	equ	0xFFE
  7669                           tosl	equ	0xFFD
  7670                           pclath	equ	0xFFA
  7671                           tblptru	equ	0xFF8
  7672                           tblptrh	equ	0xFF7
  7673                           tblptrl	equ	0xFF6
  7674                           tablat	equ	0xFF5
  7675                           prodh	equ	0xFF4
  7676                           prodl	equ	0xFF3
  7677                           intcon	equ	0xFF2
  7678                           postinc0	equ	0xFEE
  7679                           wreg	equ	0xFE8
  7680                           indf2	equ	0xFDF
  7681                           postinc2	equ	0xFDE
  7682                           postdec2	equ	0xFDD
  7683                           plusw2	equ	0xFDB
  7684                           fsr2h	equ	0xFDA
  7685                           fsr2l	equ	0xFD9
  7686                           status	equ	0xFD8
  7687                           
  7688 ;; *************** function ___ftpack *****************
  7689 ;; Defined at:
  7690 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  7691 ;; Parameters:    Size  Location     Type
  7692 ;;  arg             3   26[COMRAM] unsigned um
  7693 ;;  exp             1   29[COMRAM] unsigned char 
  7694 ;;  sign            1   30[COMRAM] unsigned char 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;		None
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  3   26[COMRAM] float 
  7699 ;; Registers used:
  7700 ;;		wreg, status,2, status,0
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7706 ;;      Params:         5       0       0       0       0       0       0
  7707 ;;      Locals:         0       0       0       0       0       0       0
  7708 ;;      Temps:          3       0       0       0       0       0       0
  7709 ;;      Totals:         8       0       0       0       0       0       0
  7710 ;;Total ram usage:        8 bytes
  7711 ;; Hardware stack levels used:    1
  7712 ;; Hardware stack levels required when called:    4
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		___ftmul
  7717 ;;		___lwtoft
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text29
  7722  002166                     __ptext29:
  7723                           	opt stack 0
  7724  002166                     ___ftpack:
  7725                           	opt stack 25
  7726                           
  7727                           ;incstack = 0
  7728  002166  501E               	movf	___ftpack@exp,w,c
  7729  002168  B4D8               	btfsc	status,2,c
  7730  00216A  D005               	goto	l6930
  7731  00216C  501B               	movf	___ftpack@arg,w,c
  7732  00216E  101C               	iorwf	___ftpack@arg+1,w,c
  7733  002170  101D               	iorwf	___ftpack@arg+2,w,c
  7734  002172  A4D8               	btfss	status,2,c
  7735  002174  D00C               	goto	l6936
  7736  002176                     l6930:
  7737  002176  0E00               	movlw	0
  7738  002178  6E1B               	movwf	?___ftpack,c
  7739  00217A  0E00               	movlw	0
  7740  00217C  6E1C               	movwf	?___ftpack+1,c
  7741  00217E  0E00               	movlw	0
  7742  002180  6E1D               	movwf	?___ftpack+2,c
  7743  002182  0012               	return	
  7744  002184                     l6934:
  7745  002184  2A1E               	incf	___ftpack@exp,f,c
  7746  002186  90D8               	bcf	status,0,c
  7747  002188  321D               	rrcf	___ftpack@arg+2,f,c
  7748  00218A  321C               	rrcf	___ftpack@arg+1,f,c
  7749  00218C  321B               	rrcf	___ftpack@arg,f,c
  7750  00218E                     l6936:
  7751  00218E  0E00               	movlw	0
  7752  002190  141B               	andwf	___ftpack@arg,w,c
  7753  002192  6E20               	movwf	??___ftpack& (0+255),c
  7754  002194  0E00               	movlw	0
  7755  002196  141C               	andwf	___ftpack@arg+1,w,c
  7756  002198  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7757  00219A  0EFE               	movlw	254
  7758  00219C  141D               	andwf	___ftpack@arg+2,w,c
  7759  00219E  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7760  0021A0  5020               	movf	??___ftpack,w,c
  7761  0021A2  1021               	iorwf	??___ftpack+1,w,c
  7762  0021A4  1022               	iorwf	??___ftpack+2,w,c
  7763  0021A6  B4D8               	btfsc	status,2,c
  7764  0021A8  D00C               	goto	l6942
  7765  0021AA  D7EC               	goto	l6934
  7766  0021AC                     l6938:
  7767  0021AC  2A1E               	incf	___ftpack@exp,f,c
  7768  0021AE  0E01               	movlw	1
  7769  0021B0  261B               	addwf	___ftpack@arg,f,c
  7770  0021B2  0E00               	movlw	0
  7771  0021B4  221C               	addwfc	___ftpack@arg+1,f,c
  7772  0021B6  0E00               	movlw	0
  7773  0021B8  221D               	addwfc	___ftpack@arg+2,f,c
  7774  0021BA  90D8               	bcf	status,0,c
  7775  0021BC  321D               	rrcf	___ftpack@arg+2,f,c
  7776  0021BE  321C               	rrcf	___ftpack@arg+1,f,c
  7777  0021C0  321B               	rrcf	___ftpack@arg,f,c
  7778  0021C2                     l6942:
  7779  0021C2  0E00               	movlw	0
  7780  0021C4  141B               	andwf	___ftpack@arg,w,c
  7781  0021C6  6E20               	movwf	??___ftpack& (0+255),c
  7782  0021C8  0E00               	movlw	0
  7783  0021CA  141C               	andwf	___ftpack@arg+1,w,c
  7784  0021CC  6E21               	movwf	(??___ftpack+1)& (0+255),c
  7785  0021CE  0EFF               	movlw	255
  7786  0021D0  141D               	andwf	___ftpack@arg+2,w,c
  7787  0021D2  6E22               	movwf	(??___ftpack+2)& (0+255),c
  7788  0021D4  5020               	movf	??___ftpack,w,c
  7789  0021D6  1021               	iorwf	??___ftpack+1,w,c
  7790  0021D8  1022               	iorwf	??___ftpack+2,w,c
  7791  0021DA  B4D8               	btfsc	status,2,c
  7792  0021DC  D006               	goto	l6946
  7793  0021DE  D7E6               	goto	l6938
  7794  0021E0                     l6944:
  7795  0021E0  061E               	decf	___ftpack@exp,f,c
  7796  0021E2  90D8               	bcf	status,0,c
  7797  0021E4  361B               	rlcf	___ftpack@arg,f,c
  7798  0021E6  361C               	rlcf	___ftpack@arg+1,f,c
  7799  0021E8  361D               	rlcf	___ftpack@arg+2,f,c
  7800  0021EA                     l6946:
  7801  0021EA  BE1C               	btfsc	___ftpack@arg+1,7,c
  7802  0021EC  D003               	goto	l1563
  7803  0021EE  0E02               	movlw	2
  7804  0021F0  601E               	cpfslt	___ftpack@exp,c
  7805  0021F2  D7F6               	goto	l6944
  7806  0021F4                     l1563:
  7807  0021F4  A01E               	btfss	___ftpack@exp,0,c
  7808  0021F6  9E1C               	bcf	___ftpack@arg+1,7,c
  7809  0021F8  90D8               	bcf	status,0,c
  7810  0021FA  321E               	rrcf	___ftpack@exp,f,c
  7811  0021FC  501E               	movf	___ftpack@exp,w,c
  7812  0021FE  121D               	iorwf	___ftpack@arg+2,f,c
  7813  002200  501F               	movf	___ftpack@sign,w,c
  7814  002202  A4D8               	btfss	status,2,c
  7815  002204  8E1D               	bsf	___ftpack@arg+2,7,c
  7816  002206  C01B  F01B         	movff	___ftpack@arg,?___ftpack
  7817  00220A  C01C  F01C         	movff	___ftpack@arg+1,?___ftpack+1
  7818  00220E  C01D  F01D         	movff	___ftpack@arg+2,?___ftpack+2
  7819  002212  0012               	return	
  7820  002214                     __end_of___ftpack:
  7821                           	opt stack 0
  7822                           tosu	equ	0xFFF
  7823                           tosh	equ	0xFFE
  7824                           tosl	equ	0xFFD
  7825                           pclath	equ	0xFFA
  7826                           tblptru	equ	0xFF8
  7827                           tblptrh	equ	0xFF7
  7828                           tblptrl	equ	0xFF6
  7829                           tablat	equ	0xFF5
  7830                           prodh	equ	0xFF4
  7831                           prodl	equ	0xFF3
  7832                           intcon	equ	0xFF2
  7833                           postinc0	equ	0xFEE
  7834                           wreg	equ	0xFE8
  7835                           indf2	equ	0xFDF
  7836                           postinc2	equ	0xFDE
  7837                           postdec2	equ	0xFDD
  7838                           plusw2	equ	0xFDB
  7839                           fsr2h	equ	0xFDA
  7840                           fsr2l	equ	0xFD9
  7841                           status	equ	0xFD8
  7842                           
  7843 ;; *************** function _Splash *****************
  7844 ;; Defined at:
  7845 ;;		line 35 in file "Display.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7859 ;;      Params:         0       0       0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    8
  7866 ;; This function calls:
  7867 ;;		_oledGotoYX
  7868 ;;		_oledPrint
  7869 ;; This function is called by:
  7870 ;;		_main
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text30
  7875  0029C6                     __ptext30:
  7876                           	opt stack 0
  7877  0029C6                     _Splash:
  7878                           	opt stack 22
  7879                           
  7880                           ;Display.c: 36: oledGotoYX(2,3);
  7881                           
  7882                           ;incstack = 0
  7883  0029C6  0E03               	movlw	3
  7884  0029C8  6E27               	movwf	oledGotoYX@Column,c
  7885  0029CA  0E02               	movlw	2
  7886  0029CC  EC4D  F015         	call	_oledGotoYX
  7887                           
  7888                           ;Display.c: 37: oledPrint("University");
  7889  0029D0  0EE3               	movlw	low STR_1
  7890  0029D2  0100               	movlb	0	; () banked
  7891  0029D4  6FFA               	movwf	oledPrint@s& (0+255),b
  7892  0029D6  0E7F               	movlw	high STR_1
  7893  0029D8  0100               	movlb	0	; () banked
  7894  0029DA  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7895  0029DC  EC36  F016         	call	_oledPrint	;wreg free
  7896                           
  7897                           ;Display.c: 38: oledGotoYX(3,3);
  7898  0029E0  0E03               	movlw	3
  7899  0029E2  6E27               	movwf	oledGotoYX@Column,c
  7900  0029E4  0E03               	movlw	3
  7901  0029E6  EC4D  F015         	call	_oledGotoYX
  7902                           
  7903                           ;Display.c: 39: oledPrint("OF");
  7904  0029EA  0EFC               	movlw	low STR_2
  7905  0029EC  0100               	movlb	0	; () banked
  7906  0029EE  6FFA               	movwf	oledPrint@s& (0+255),b
  7907  0029F0  0E7F               	movlw	high STR_2
  7908  0029F2  0100               	movlb	0	; () banked
  7909  0029F4  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7910  0029F6  EC36  F016         	call	_oledPrint	;wreg free
  7911                           
  7912                           ;Display.c: 40: oledGotoYX(4,3);
  7913  0029FA  0E03               	movlw	3
  7914  0029FC  6E27               	movwf	oledGotoYX@Column,c
  7915  0029FE  0E04               	movlw	4
  7916  002A00  EC4D  F015         	call	_oledGotoYX
  7917                           
  7918                           ;Display.c: 41: oledPrint("Akron");
  7919  002A04  0EF6               	movlw	low STR_3
  7920  002A06  0100               	movlb	0	; () banked
  7921  002A08  6FFA               	movwf	oledPrint@s& (0+255),b
  7922  002A0A  0E7F               	movlw	high STR_3
  7923  002A0C  0100               	movlb	0	; () banked
  7924  002A0E  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7925  002A10  EC36  F016         	call	_oledPrint	;wreg free
  7926                           
  7927                           ;Display.c: 42: oledGotoYX(5,3);
  7928  002A14  0E03               	movlw	3
  7929  002A16  6E27               	movwf	oledGotoYX@Column,c
  7930  002A18  0E05               	movlw	5
  7931  002A1A  EC4D  F015         	call	_oledGotoYX
  7932                           
  7933                           ;Display.c: 43: oledPrint("ZIPS-EV");
  7934  002A1E  0EEE               	movlw	low STR_4
  7935  002A20  0100               	movlb	0	; () banked
  7936  002A22  6FFA               	movwf	oledPrint@s& (0+255),b
  7937  002A24  0E7F               	movlw	high STR_4
  7938  002A26  0100               	movlb	0	; () banked
  7939  002A28  6FFB               	movwf	(oledPrint@s+1)& (0+255),b
  7940  002A2A  EC36  F016         	call	_oledPrint	;wreg free
  7941  002A2E  0012               	return		;funcret
  7942  002A30                     __end_of_Splash:
  7943                           	opt stack 0
  7944                           tosu	equ	0xFFF
  7945                           tosh	equ	0xFFE
  7946                           tosl	equ	0xFFD
  7947                           pclath	equ	0xFFA
  7948                           tblptru	equ	0xFF8
  7949                           tblptrh	equ	0xFF7
  7950                           tblptrl	equ	0xFF6
  7951                           tablat	equ	0xFF5
  7952                           prodh	equ	0xFF4
  7953                           prodl	equ	0xFF3
  7954                           intcon	equ	0xFF2
  7955                           postinc0	equ	0xFEE
  7956                           wreg	equ	0xFE8
  7957                           indf2	equ	0xFDF
  7958                           postinc2	equ	0xFDE
  7959                           postdec2	equ	0xFDD
  7960                           plusw2	equ	0xFDB
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _oledPrint *****************
  7966 ;; Defined at:
  7967 ;;		line 222 in file "OLED_Display.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7970 ;;		 -> STR_4(8), STR_3(6), STR_2(3), STR_1(11), 
  7971 ;;		 -> SetData@s(20), 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7983 ;;      Params:         0       2       0       0       0       0       0
  7984 ;;      Locals:         0       0       0       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0
  7986 ;;      Totals:         0       2       0       0       0       0       0
  7987 ;;Total ram usage:        2 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    7
  7990 ;; This function calls:
  7991 ;;		_oledPutChar
  7992 ;; This function is called by:
  7993 ;;		_Splash
  7994 ;;		_SetData
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text31
  7999  002C6C                     __ptext31:
  8000                           	opt stack 0
  8001  002C6C                     _oledPrint:
  8002                           	opt stack 22
  8003                           
  8004                           ;OLED_Display.c: 224: while (*s) oledPutChar( *s++);
  8005                           
  8006                           ;incstack = 0
  8007  002C6C  D015               	goto	l6924
  8008  002C6E                     l6920:
  8009  002C6E  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8010  002C72  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8011  002C76  6AF8               	clrf	tblptru,c
  8012  002C78  0E05               	movlw	(high __ramtop+-1)
  8013  002C7A  64F7               	cpfsgt	tblptrh,c
  8014  002C7C  D003               	bra	u7837
  8015  002C7E  0008               	tblrd		*
  8016  002C80  50F5               	movf	tablat,w,c
  8017  002C82  D005               	bra	u7830
  8018  002C84                     u7837:
  8019  002C84  CFF6 FFE9          	movff	tblptrl,fsr0l
  8020  002C88  CFF7 FFEA          	movff	tblptrh,fsr0h
  8021  002C8C  50EF               	movf	indf0,w,c
  8022  002C8E                     u7830:
  8023  002C8E  ECAE  F00E         	call	_oledPutChar
  8024  002C92  0100               	movlb	0	; () banked
  8025  002C94  4BFA               	infsnz	oledPrint@s& (0+255),f,b
  8026  002C96  2BFB               	incf	(oledPrint@s+1)& (0+255),f,b
  8027  002C98                     l6924:
  8028  002C98  C0FA  FFF6         	movff	oledPrint@s,tblptrl
  8029  002C9C  C0FB  FFF7         	movff	oledPrint@s+1,tblptrh
  8030  002CA0  6AF8               	clrf	tblptru,c
  8031  002CA2  0E05               	movlw	(high __ramtop+-1)
  8032  002CA4  64F7               	cpfsgt	tblptrh,c
  8033  002CA6  D003               	bra	u7847
  8034  002CA8  0008               	tblrd		*
  8035  002CAA  50F5               	movf	tablat,w,c
  8036  002CAC  D005               	bra	u7840
  8037  002CAE                     u7847:
  8038  002CAE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8039  002CB2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8040  002CB6  50EF               	movf	indf0,w,c
  8041  002CB8                     u7840:
  8042  002CB8  0900               	iorlw	0
  8043  002CBA  B4D8               	btfsc	status,2,c
  8044  002CBC  0012               	return	
  8045  002CBE  D7D7               	goto	l6920
  8046  002CC0                     __end_of_oledPrint:
  8047                           	opt stack 0
  8048                           tosu	equ	0xFFF
  8049                           tosh	equ	0xFFE
  8050                           tosl	equ	0xFFD
  8051                           pclath	equ	0xFFA
  8052                           tblptru	equ	0xFF8
  8053                           tblptrh	equ	0xFF7
  8054                           tblptrl	equ	0xFF6
  8055                           tablat	equ	0xFF5
  8056                           prodh	equ	0xFF4
  8057                           prodl	equ	0xFF3
  8058                           intcon	equ	0xFF2
  8059                           indf0	equ	0xFEF
  8060                           postinc0	equ	0xFEE
  8061                           fsr0h	equ	0xFEA
  8062                           fsr0l	equ	0xFE9
  8063                           wreg	equ	0xFE8
  8064                           indf2	equ	0xFDF
  8065                           postinc2	equ	0xFDE
  8066                           postdec2	equ	0xFDD
  8067                           plusw2	equ	0xFDB
  8068                           fsr2h	equ	0xFDA
  8069                           fsr2l	equ	0xFD9
  8070                           status	equ	0xFD8
  8071                           
  8072 ;; *************** function _Setupdisplay *****************
  8073 ;; Defined at:
  8074 ;;		line 30 in file "Display.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8088 ;;      Params:         0       0       0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    9
  8095 ;; This function calls:
  8096 ;;		_OLED_init
  8097 ;;		_oledClear
  8098 ;; This function is called by:
  8099 ;;		_main
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text32
  8104  0031B0                     __ptext32:
  8105                           	opt stack 0
  8106  0031B0                     _Setupdisplay:
  8107                           	opt stack 21
  8108                           
  8109                           ;Display.c: 31: OLED_init();
  8110                           
  8111                           ;incstack = 0
  8112  0031B0  EC2D  F013         	call	_OLED_init	;wreg free
  8113                           
  8114                           ;Display.c: 32: oledClear();
  8115  0031B4  ECDF  F015         	call	_oledClear	;wreg free
  8116  0031B8  0012               	return		;funcret
  8117  0031BA                     __end_of_Setupdisplay:
  8118                           	opt stack 0
  8119                           tosu	equ	0xFFF
  8120                           tosh	equ	0xFFE
  8121                           tosl	equ	0xFFD
  8122                           pclath	equ	0xFFA
  8123                           tblptru	equ	0xFF8
  8124                           tblptrh	equ	0xFF7
  8125                           tblptrl	equ	0xFF6
  8126                           tablat	equ	0xFF5
  8127                           prodh	equ	0xFF4
  8128                           prodl	equ	0xFF3
  8129                           intcon	equ	0xFF2
  8130                           indf0	equ	0xFEF
  8131                           postinc0	equ	0xFEE
  8132                           fsr0h	equ	0xFEA
  8133                           fsr0l	equ	0xFE9
  8134                           wreg	equ	0xFE8
  8135                           indf2	equ	0xFDF
  8136                           postinc2	equ	0xFDE
  8137                           postdec2	equ	0xFDD
  8138                           plusw2	equ	0xFDB
  8139                           fsr2h	equ	0xFDA
  8140                           fsr2l	equ	0xFD9
  8141                           status	equ	0xFD8
  8142                           
  8143 ;; *************** function _oledClear *****************
  8144 ;; Defined at:
  8145 ;;		line 212 in file "OLED_Display.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;		None
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;  col             2   10[BANK0 ] unsigned int 
  8150 ;;  row             2    8[BANK0 ] unsigned int 
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  1    wreg      void 
  8153 ;; Registers used:
  8154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8160 ;;      Params:         0       0       0       0       0       0       0
  8161 ;;      Locals:         0       4       0       0       0       0       0
  8162 ;;      Temps:          0       0       0       0       0       0       0
  8163 ;;      Totals:         0       4       0       0       0       0       0
  8164 ;;Total ram usage:        4 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    8
  8167 ;; This function calls:
  8168 ;;		_oledGotoYX
  8169 ;;		_oledPutChar
  8170 ;; This function is called by:
  8171 ;;		_Setupdisplay
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text33
  8176  002BBE                     __ptext33:
  8177                           	opt stack 0
  8178  002BBE                     _oledClear:
  8179                           	opt stack 21
  8180                           
  8181                           ;OLED_Display.c: 214: for ( uint16_t row = 0; row < 8; row++ ) {
  8182                           
  8183                           ;incstack = 0
  8184  002BBE  0E00               	movlw	0
  8185  002BC0  0100               	movlb	0	; () banked
  8186  002BC2  6FFB               	movwf	(oledClear@row+1)& (0+255),b
  8187  002BC4  0E00               	movlw	0
  8188  002BC6  6FFA               	movwf	oledClear@row& (0+255),b
  8189  002BC8                     l6896:
  8190                           
  8191                           ; BSR set to: 0
  8192  002BC8  0100               	movlb	0	; () banked
  8193  002BCA  51FB               	movf	(oledClear@row+1)& (0+255),w,b
  8194  002BCC  E123               	bnz	l1260
  8195  002BCE  0E08               	movlw	8
  8196  002BD0  0100               	movlb	0	; () banked
  8197  002BD2  5DFA               	subwf	oledClear@row& (0+255),w,b
  8198  002BD4  B0D8               	btfsc	status,0,c
  8199  002BD6  0012               	return	
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;OLED_Display.c: 215: for ( uint16_t col = 0; col < 16; col++ ) {
  8203                           
  8204                           ; BSR set to: 0
  8205                           
  8206                           ; BSR set to: 0
  8207  002BD8  0E00               	movlw	0
  8208  002BDA  0100               	movlb	0	; () banked
  8209  002BDC  6FFD               	movwf	(oledClear@col+1)& (0+255),b
  8210  002BDE  0E00               	movlw	0
  8211  002BE0  6FFC               	movwf	oledClear@col& (0+255),b
  8212  002BE2                     l6902:
  8213                           
  8214                           ; BSR set to: 0
  8215  002BE2  0100               	movlb	0	; () banked
  8216  002BE4  51FD               	movf	(oledClear@col+1)& (0+255),w,b
  8217  002BE6  E112               	bnz	l6914
  8218  002BE8  0E10               	movlw	16
  8219  002BEA  0100               	movlb	0	; () banked
  8220  002BEC  5DFC               	subwf	oledClear@col& (0+255),w,b
  8221  002BEE  B0D8               	btfsc	status,0,c
  8222  002BF0  D00D               	goto	l6914
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;OLED_Display.c: 216: oledGotoYX( row, col );
  8226                           
  8227                           ; BSR set to: 0
  8228                           
  8229                           ; BSR set to: 0
  8230  002BF2  C0FC  F027         	movff	oledClear@col,oledGotoYX@Column
  8231  002BF6  0100               	movlb	0	; () banked
  8232  002BF8  51FA               	movf	oledClear@row& (0+255),w,b
  8233  002BFA  EC4D  F015         	call	_oledGotoYX
  8234                           
  8235                           ;OLED_Display.c: 217: oledPutChar( ' ' );
  8236  002BFE  0E20               	movlw	32
  8237  002C00  ECAE  F00E         	call	_oledPutChar
  8238  002C04  0100               	movlb	0	; () banked
  8239  002C06  4BFC               	infsnz	oledClear@col& (0+255),f,b
  8240  002C08  2BFD               	incf	(oledClear@col+1)& (0+255),f,b
  8241  002C0A  D7EB               	goto	l6902
  8242  002C0C                     l6914:
  8243                           
  8244                           ; BSR set to: 0
  8245  002C0C  0100               	movlb	0	; () banked
  8246  002C0E  4BFA               	infsnz	oledClear@row& (0+255),f,b
  8247  002C10  2BFB               	incf	(oledClear@row+1)& (0+255),f,b
  8248  002C12  D7DA               	goto	l6896
  8249  002C14                     l1260:
  8250                           
  8251                           ; BSR set to: 0
  8252  002C14  0012               	return		;funcret
  8253  002C16                     __end_of_oledClear:
  8254                           	opt stack 0
  8255                           tosu	equ	0xFFF
  8256                           tosh	equ	0xFFE
  8257                           tosl	equ	0xFFD
  8258                           pclath	equ	0xFFA
  8259                           tblptru	equ	0xFF8
  8260                           tblptrh	equ	0xFF7
  8261                           tblptrl	equ	0xFF6
  8262                           tablat	equ	0xFF5
  8263                           prodh	equ	0xFF4
  8264                           prodl	equ	0xFF3
  8265                           intcon	equ	0xFF2
  8266                           indf0	equ	0xFEF
  8267                           postinc0	equ	0xFEE
  8268                           fsr0h	equ	0xFEA
  8269                           fsr0l	equ	0xFE9
  8270                           wreg	equ	0xFE8
  8271                           indf2	equ	0xFDF
  8272                           postinc2	equ	0xFDE
  8273                           postdec2	equ	0xFDD
  8274                           plusw2	equ	0xFDB
  8275                           fsr2h	equ	0xFDA
  8276                           fsr2l	equ	0xFD9
  8277                           status	equ	0xFD8
  8278                           
  8279 ;; *************** function _oledPutChar *****************
  8280 ;; Defined at:
  8281 ;;		line 178 in file "OLED_Display.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  ch              1    wreg     unsigned char 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  ch              1   11[BANK1 ] unsigned char 
  8286 ;;  bytes           9    0[BANK1 ] unsigned char [9]
  8287 ;;  base            2    9[BANK1 ] PTR const unsigned char 
  8288 ;;		 -> OledFont(768), 
  8289 ;;  status          1   12[BANK1 ] enum E7919
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8299 ;;      Params:         0       0       0       0       0       0       0
  8300 ;;      Locals:         0       0      13       0       0       0       0
  8301 ;;      Temps:          4       0       0       0       0       0       0
  8302 ;;      Totals:         4       0      13       0       0       0       0
  8303 ;;Total ram usage:       17 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    6
  8306 ;; This function calls:
  8307 ;;		_I2C1_MasterWrite
  8308 ;;		_memmove
  8309 ;; This function is called by:
  8310 ;;		_oledClear
  8311 ;;		_oledPrint
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text34
  8316  001D5C                     __ptext34:
  8317                           	opt stack 0
  8318  001D5C                     _oledPutChar:
  8319                           	opt stack 22
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;incstack = 0
  8323                           ;oledPutChar@ch stored from wreg
  8324  001D5C  0101               	movlb	1	; () banked
  8325  001D5E  6F44               	movwf	oledPutChar@ch& (0+255),b
  8326                           
  8327                           ;OLED_Display.c: 179: if ( ( ch < 32 ) || ( ch > 127 ) )
  8328  001D60  0E1F               	movlw	31
  8329  001D62  0101               	movlb	1	; () banked
  8330  001D64  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8331  001D66  D004               	goto	l6512
  8332                           
  8333                           ; BSR set to: 1
  8334  001D68  0E7F               	movlw	127
  8335  001D6A  0101               	movlb	1	; () banked
  8336  001D6C  6544               	cpfsgt	oledPutChar@ch& (0+255),b
  8337  001D6E  D003               	goto	l6514
  8338  001D70                     l6512:
  8339                           
  8340                           ; BSR set to: 1
  8341                           ;OLED_Display.c: 180: ch = ' ';
  8342  001D70  0E20               	movlw	32
  8343  001D72  0101               	movlb	1	; () banked
  8344  001D74  6F44               	movwf	oledPutChar@ch& (0+255),b
  8345  001D76                     l6514:
  8346                           
  8347                           ; BSR set to: 1
  8348                           ;OLED_Display.c: 182: const uint8_t *base = &OledFont[ch - 32][0];
  8349  001D76  0E00               	movlw	0
  8350  001D78  6E27               	movwf	??_oledPutChar& (0+255),c
  8351  001D7A  0EFF               	movlw	255
  8352  001D7C  6E28               	movwf	(??_oledPutChar+1)& (0+255),c
  8353  001D7E  0101               	movlb	1	; () banked
  8354  001D80  5144               	movf	oledPutChar@ch& (0+255),w,b
  8355  001D82  6E29               	movwf	(??_oledPutChar+2)& (0+255),c
  8356  001D84  6A2A               	clrf	(??_oledPutChar+3)& (0+255),c
  8357  001D86  90D8               	bcf	status,0,c
  8358  001D88  3629               	rlcf	??_oledPutChar+2,f,c
  8359  001D8A  362A               	rlcf	??_oledPutChar+3,f,c
  8360  001D8C  90D8               	bcf	status,0,c
  8361  001D8E  3629               	rlcf	??_oledPutChar+2,f,c
  8362  001D90  362A               	rlcf	??_oledPutChar+3,f,c
  8363  001D92  90D8               	bcf	status,0,c
  8364  001D94  3629               	rlcf	??_oledPutChar+2,f,c
  8365  001D96  362A               	rlcf	??_oledPutChar+3,f,c
  8366  001D98  5027               	movf	??_oledPutChar,w,c
  8367  001D9A  2629               	addwf	??_oledPutChar+2,f,c
  8368  001D9C  5028               	movf	??_oledPutChar+1,w,c
  8369  001D9E  222A               	addwfc	??_oledPutChar+3,f,c
  8370  001DA0  0ED3               	movlw	low _OledFont
  8371  001DA2  2429               	addwf	??_oledPutChar+2,w,c
  8372  001DA4  0101               	movlb	1	; () banked
  8373  001DA6  6F42               	movwf	oledPutChar@base& (0+255),b
  8374  001DA8  0E7B               	movlw	high _OledFont
  8375  001DAA  202A               	addwfc	??_oledPutChar+3,w,c
  8376  001DAC  0101               	movlb	1	; () banked
  8377  001DAE  6F43               	movwf	(oledPutChar@base+1)& (0+255),b
  8378                           
  8379                           ; BSR set to: 1
  8380                           ;OLED_Display.c: 184: uint8_t bytes[9];
  8381                           ;OLED_Display.c: 185: bytes[0] = 0x40;
  8382  001DB0  0E40               	movlw	64
  8383  001DB2  0101               	movlb	1	; () banked
  8384  001DB4  6F39               	movwf	oledPutChar@bytes& (0+255),b
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;OLED_Display.c: 186: memmove( bytes + 1, base, 8 );
  8388  001DB6  0E3A               	movlw	low (oledPutChar@bytes+1)
  8389  001DB8  6E1B               	movwf	memmove@d1,c
  8390  001DBA  0E01               	movlw	high (oledPutChar@bytes+1)
  8391  001DBC  6E1C               	movwf	memmove@d1+1,c
  8392  001DBE  C142  F01D         	movff	oledPutChar@base,memmove@s1
  8393  001DC2  C143  F01E         	movff	oledPutChar@base+1,memmove@s1+1
  8394  001DC6  0E00               	movlw	0
  8395  001DC8  6E20               	movwf	memmove@n+1,c
  8396  001DCA  0E08               	movlw	8
  8397  001DCC  6E1F               	movwf	memmove@n,c
  8398  001DCE  EC0A  F011         	call	_memmove	;wreg free
  8399                           
  8400                           ;OLED_Display.c: 188: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  8401  001DD2  0E02               	movlw	2
  8402  001DD4  0101               	movlb	1	; () banked
  8403  001DD6  6F45               	movwf	oledPutChar@status& (0+255),b
  8404                           
  8405                           ; BSR set to: 1
  8406                           ;OLED_Display.c: 190: timeOut = 0;
  8407  001DD8  0E00               	movlw	0
  8408  001DDA  0100               	movlb	0	; () banked
  8409  001DDC  6FDE               	movwf	(_timeOut+1)& (0+255),b
  8410  001DDE  0E00               	movlw	0
  8411  001DE0  6FDD               	movwf	_timeOut& (0+255),b
  8412                           
  8413                           ;OLED_Display.c: 191: while (status != I2C1_MESSAGE_FAIL) {
  8414  001DE2  D030               	goto	l6544
  8415  001DE4                     l6524:
  8416                           
  8417                           ;OLED_Display.c: 193: I2C1_MasterWrite(bytes,
  8418                           ;OLED_Display.c: 194: 9,
  8419                           ;OLED_Display.c: 195: 0x3C,
  8420                           ;OLED_Display.c: 196: &status);
  8421  001DE4  0E39               	movlw	low oledPutChar@bytes
  8422  001DE6  0100               	movlb	0	; () banked
  8423  001DE8  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  8424  001DEA  0E01               	movlw	high oledPutChar@bytes
  8425  001DEC  0100               	movlb	0	; () banked
  8426  001DEE  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  8427  001DF0  0E00               	movlw	0
  8428  001DF2  0100               	movlb	0	; () banked
  8429  001DF4  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  8430  001DF6  0E09               	movlw	9
  8431  001DF8  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  8432  001DFA  0E00               	movlw	0
  8433  001DFC  0100               	movlb	0	; () banked
  8434  001DFE  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  8435  001E00  0E3C               	movlw	60
  8436  001E02  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  8437  001E04  0E45               	movlw	low oledPutChar@status
  8438  001E06  0100               	movlb	0	; () banked
  8439  001E08  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  8440  001E0A  0E01               	movlw	high oledPutChar@status
  8441  001E0C  0100               	movlb	0	; () banked
  8442  001E0E  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  8443  001E10  EC0B  F016         	call	_I2C1_MasterWrite	;wreg free
  8444  001E14                     l6526:
  8445  001E14  0E02               	movlw	2
  8446  001E16  0101               	movlb	1	; () banked
  8447  001E18  1945               	xorwf	oledPutChar@status& (0+255),w,b
  8448  001E1A  B4D8               	btfsc	status,2,c
  8449  001E1C  D7FB               	goto	l6526
  8450                           
  8451                           ; BSR set to: 1
  8452                           ;OLED_Display.c: 201: if (status == I2C1_MESSAGE_COMPLETE)
  8453                           
  8454                           ; BSR set to: 1
  8455  001E1E  0101               	movlb	1	; () banked
  8456  001E20  5145               	movf	oledPutChar@status& (0+255),w,b
  8457  001E22  0101               	movlb	1	; () banked
  8458  001E24  B4D8               	btfsc	status,2,c
  8459  001E26  0012               	return	
  8460                           
  8461                           ; BSR set to: 1
  8462                           ;OLED_Display.c: 203: if (timeOut == 2)
  8463                           
  8464                           ; BSR set to: 1
  8465                           
  8466                           ; BSR set to: 1
  8467                           ;OLED_Display.c: 202: break;
  8468  001E28  0E02               	movlw	2
  8469  001E2A  0100               	movlb	0	; () banked
  8470  001E2C  19DD               	xorwf	_timeOut& (0+255),w,b
  8471  001E2E  0100               	movlb	0	; () banked
  8472  001E30  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  8473  001E32  B4D8               	btfsc	status,2,c
  8474  001E34  0012               	return	
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;OLED_Display.c: 205: if (status == I2C1_MESSAGE_FAIL)
  8478                           
  8479                           ; BSR set to: 0
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;OLED_Display.c: 204: break;
  8483  001E36  0101               	movlb	1	; () banked
  8484  001E38  0545               	decf	oledPutChar@status& (0+255),w,b
  8485  001E3A  B4D8               	btfsc	status,2,c
  8486  001E3C  0012               	return	
  8487                           
  8488                           ; BSR set to: 1
  8489                           ;OLED_Display.c: 207: else
  8490                           ;OLED_Display.c: 208: timeOut++;
  8491                           
  8492                           ; BSR set to: 1
  8493                           
  8494                           ; BSR set to: 1
  8495                           
  8496                           ; BSR set to: 1
  8497                           ;OLED_Display.c: 206: break;
  8498  001E3E  0100               	movlb	0	; () banked
  8499  001E40  4BDD               	infsnz	_timeOut& (0+255),f,b
  8500  001E42  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  8501  001E44                     l6544:
  8502  001E44  0101               	movlb	1	; () banked
  8503  001E46  0545               	decf	oledPutChar@status& (0+255),w,b
  8504  001E48  B4D8               	btfsc	status,2,c
  8505  001E4A  0012               	return	
  8506  001E4C  D7CB               	goto	l6524
  8507  001E4E                     __end_of_oledPutChar:
  8508                           	opt stack 0
  8509                           tosu	equ	0xFFF
  8510                           tosh	equ	0xFFE
  8511                           tosl	equ	0xFFD
  8512                           pclath	equ	0xFFA
  8513                           tblptru	equ	0xFF8
  8514                           tblptrh	equ	0xFF7
  8515                           tblptrl	equ	0xFF6
  8516                           tablat	equ	0xFF5
  8517                           prodh	equ	0xFF4
  8518                           prodl	equ	0xFF3
  8519                           intcon	equ	0xFF2
  8520                           indf0	equ	0xFEF
  8521                           postinc0	equ	0xFEE
  8522                           fsr0h	equ	0xFEA
  8523                           fsr0l	equ	0xFE9
  8524                           wreg	equ	0xFE8
  8525                           indf2	equ	0xFDF
  8526                           postinc2	equ	0xFDE
  8527                           postdec2	equ	0xFDD
  8528                           plusw2	equ	0xFDB
  8529                           fsr2h	equ	0xFDA
  8530                           fsr2l	equ	0xFD9
  8531                           status	equ	0xFD8
  8532                           
  8533 ;; *************** function _memmove *****************
  8534 ;; Defined at:
  8535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memmove.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  d1              2   26[COMRAM] PTR void 
  8538 ;;		 -> oledPutChar@bytes(9), 
  8539 ;;  s1              2   28[COMRAM] PTR const void 
  8540 ;;		 -> OledFont(768), 
  8541 ;;  n               2   30[COMRAM] unsigned int 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  s               2   36[COMRAM] PTR const unsigned char 
  8544 ;;		 -> OledFont(768), 
  8545 ;;  d               2   34[COMRAM] PTR unsigned char 
  8546 ;;		 -> oledPutChar@bytes(9), 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  2   26[COMRAM] PTR void 
  8549 ;; Registers used:
  8550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8556 ;;      Params:         6       0       0       0       0       0       0
  8557 ;;      Locals:         4       0       0       0       0       0       0
  8558 ;;      Temps:          2       0       0       0       0       0       0
  8559 ;;      Totals:        12       0       0       0       0       0       0
  8560 ;;Total ram usage:       12 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    4
  8563 ;; This function calls:
  8564 ;;		Nothing
  8565 ;; This function is called by:
  8566 ;;		_oledPutChar
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text35
  8571  002214                     __ptext35:
  8572                           	opt stack 0
  8573  002214                     _memmove:
  8574                           	opt stack 23
  8575                           
  8576                           ;incstack = 0
  8577  002214  C01D  F025         	movff	memmove@s1,memmove@s
  8578  002218  C01E  F026         	movff	memmove@s1+1,memmove@s+1
  8579  00221C  C01B  F023         	movff	memmove@d1,memmove@d
  8580  002220  C01C  F024         	movff	memmove@d1+1,memmove@d+1
  8581  002224  5023               	movf	memmove@d,w,c
  8582  002226  5C25               	subwf	memmove@s,w,c
  8583  002228  5024               	movf	memmove@d+1,w,c
  8584  00222A  5826               	subwfb	memmove@s+1,w,c
  8585  00222C  B0D8               	btfsc	status,0,c
  8586  00222E  D02D               	goto	l6308
  8587  002230  501F               	movf	memmove@n,w,c
  8588  002232  2425               	addwf	memmove@s,w,c
  8589  002234  6E21               	movwf	??_memmove& (0+255),c
  8590  002236  5020               	movf	memmove@n+1,w,c
  8591  002238  2026               	addwfc	memmove@s+1,w,c
  8592  00223A  6E22               	movwf	(??_memmove+1)& (0+255),c
  8593  00223C  5021               	movf	??_memmove,w,c
  8594  00223E  5C23               	subwf	memmove@d,w,c
  8595  002240  5022               	movf	??_memmove+1,w,c
  8596  002242  5824               	subwfb	memmove@d+1,w,c
  8597  002244  B0D8               	btfsc	status,0,c
  8598  002246  D021               	goto	l6308
  8599  002248  501F               	movf	memmove@n,w,c
  8600  00224A  2625               	addwf	memmove@s,f,c
  8601  00224C  5020               	movf	memmove@n+1,w,c
  8602  00224E  2226               	addwfc	memmove@s+1,f,c
  8603  002250  501F               	movf	memmove@n,w,c
  8604  002252  2623               	addwf	memmove@d,f,c
  8605  002254  5020               	movf	memmove@n+1,w,c
  8606  002256  2224               	addwfc	memmove@d+1,f,c
  8607  002258                     l6304:
  8608  002258  0625               	decf	memmove@s,f,c
  8609  00225A  A0D8               	btfss	status,0,c
  8610  00225C  0626               	decf	memmove@s+1,f,c
  8611  00225E  C025  FFF6         	movff	memmove@s,tblptrl
  8612  002262  C026  FFF7         	movff	memmove@s+1,tblptrh
  8613  002266                     	if	0	;tblptru may be non-zero
  8614  002266                     	endif
  8615  002266                     	if	0	;tblptru may be non-zero
  8616  002266                     	endif
  8617  002266  0623               	decf	memmove@d,f,c
  8618  002268  A0D8               	btfss	status,0,c
  8619  00226A  0624               	decf	memmove@d+1,f,c
  8620  00226C  C023  FFD9         	movff	memmove@d,fsr2l
  8621  002270  C024  FFDA         	movff	memmove@d+1,fsr2h
  8622  002274  0008               	tblrd		*
  8623  002276  CFF5 FFDF          	movff	tablat,indf2
  8624  00227A  061F               	decf	memmove@n,f,c
  8625  00227C  A0D8               	btfss	status,0,c
  8626  00227E  0620               	decf	memmove@n+1,f,c
  8627  002280  501F               	movf	memmove@n,w,c
  8628  002282  1020               	iorwf	memmove@n+1,w,c
  8629  002284  B4D8               	btfsc	status,2,c
  8630  002286  0012               	return	
  8631  002288  D7E7               	goto	l6304
  8632  00228A                     l6308:
  8633  00228A  501F               	movf	memmove@n,w,c
  8634  00228C  1020               	iorwf	memmove@n+1,w,c
  8635  00228E  B4D8               	btfsc	status,2,c
  8636  002290  0012               	return	
  8637  002292  C025  FFF6         	movff	memmove@s,tblptrl
  8638  002296  C026  FFF7         	movff	memmove@s+1,tblptrh
  8639  00229A                     	if	0	;tblptru may be non-zero
  8640  00229A                     	endif
  8641  00229A                     	if	0	;tblptru may be non-zero
  8642  00229A                     	endif
  8643  00229A  C023  FFD9         	movff	memmove@d,fsr2l
  8644  00229E  C024  FFDA         	movff	memmove@d+1,fsr2h
  8645  0022A2  0008               	tblrd		*
  8646  0022A4  CFF5 FFDF          	movff	tablat,indf2
  8647  0022A8  4A25               	infsnz	memmove@s,f,c
  8648  0022AA  2A26               	incf	memmove@s+1,f,c
  8649  0022AC  4A23               	infsnz	memmove@d,f,c
  8650  0022AE  2A24               	incf	memmove@d+1,f,c
  8651  0022B0  061F               	decf	memmove@n,f,c
  8652  0022B2  A0D8               	btfss	status,0,c
  8653  0022B4  0620               	decf	memmove@n+1,f,c
  8654  0022B6  D7E9               	goto	l6308
  8655  0022B8                     __end_of_memmove:
  8656                           	opt stack 0
  8657                           tosu	equ	0xFFF
  8658                           tosh	equ	0xFFE
  8659                           tosl	equ	0xFFD
  8660                           pclath	equ	0xFFA
  8661                           tblptru	equ	0xFF8
  8662                           tblptrh	equ	0xFF7
  8663                           tblptrl	equ	0xFF6
  8664                           tablat	equ	0xFF5
  8665                           prodh	equ	0xFF4
  8666                           prodl	equ	0xFF3
  8667                           intcon	equ	0xFF2
  8668                           indf0	equ	0xFEF
  8669                           postinc0	equ	0xFEE
  8670                           fsr0h	equ	0xFEA
  8671                           fsr0l	equ	0xFE9
  8672                           wreg	equ	0xFE8
  8673                           indf2	equ	0xFDF
  8674                           postinc2	equ	0xFDE
  8675                           postdec2	equ	0xFDD
  8676                           plusw2	equ	0xFDB
  8677                           fsr2h	equ	0xFDA
  8678                           fsr2l	equ	0xFD9
  8679                           status	equ	0xFD8
  8680                           
  8681 ;; *************** function _oledGotoYX *****************
  8682 ;; Defined at:
  8683 ;;		line 39 in file "OLED_Display.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  Row             1    wreg     unsigned char 
  8686 ;;  Column          1   38[COMRAM] unsigned char 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  Row             1   40[COMRAM] unsigned char 
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8698 ;;      Params:         1       0       0       0       0       0       0
  8699 ;;      Locals:         1       0       0       0       0       0       0
  8700 ;;      Temps:          1       0       0       0       0       0       0
  8701 ;;      Totals:         3       0       0       0       0       0       0
  8702 ;;Total ram usage:        3 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    7
  8705 ;; This function calls:
  8706 ;;		_OLED_command
  8707 ;; This function is called by:
  8708 ;;		_oledClear
  8709 ;;		_Splash
  8710 ;;		_SetData
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text36
  8715  002A9A                     __ptext36:
  8716                           	opt stack 0
  8717  002A9A                     _oledGotoYX:
  8718                           	opt stack 22
  8719                           
  8720                           ;incstack = 0
  8721                           ;oledGotoYX@Row stored from wreg
  8722  002A9A  6E29               	movwf	oledGotoYX@Row,c
  8723                           
  8724                           ;OLED_Display.c: 41: OLED_command( 0xB0 + Row);
  8725  002A9C  5029               	movf	oledGotoYX@Row,w,c
  8726  002A9E  0FB0               	addlw	176
  8727  002AA0  ECF9  F013         	call	_OLED_command
  8728                           
  8729                           ;OLED_Display.c: 42: OLED_command( 0xB0 + Row);
  8730  002AA4  5029               	movf	oledGotoYX@Row,w,c
  8731  002AA6  0FB0               	addlw	176
  8732  002AA8  ECF9  F013         	call	_OLED_command
  8733                           
  8734                           ;OLED_Display.c: 43: OLED_command( 0x00 + (8*Column & 0x0F) );
  8735  002AAC  5027               	movf	oledGotoYX@Column,w,c
  8736  002AAE  0D08               	mullw	8
  8737  002AB0  50F3               	movf	prodl,w,c
  8738  002AB2  0B0F               	andlw	15
  8739  002AB4  ECF9  F013         	call	_OLED_command
  8740                           
  8741                           ;OLED_Display.c: 44: OLED_command( 0x00 + (8*Column & 0x0F) );
  8742  002AB8  5027               	movf	oledGotoYX@Column,w,c
  8743  002ABA  0D08               	mullw	8
  8744  002ABC  50F3               	movf	prodl,w,c
  8745  002ABE  0B0F               	andlw	15
  8746  002AC0  ECF9  F013         	call	_OLED_command
  8747                           
  8748                           ;OLED_Display.c: 45: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8749  002AC4  5027               	movf	oledGotoYX@Column,w,c
  8750  002AC6  0D08               	mullw	8
  8751  002AC8  0E04               	movlw	4
  8752  002ACA  6E28               	movwf	??_oledGotoYX& (0+255),c
  8753  002ACC                     u6885:
  8754  002ACC  34F4               	rlcf	prodh,w,c
  8755  002ACE  32F4               	rrcf	prodh,f,c
  8756  002AD0  32F3               	rrcf	prodl,f,c
  8757  002AD2  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8758  002AD4  D7FB               	goto	u6885
  8759  002AD6  50F3               	movf	prodl,w,c
  8760  002AD8  0B0F               	andlw	15
  8761  002ADA  0F10               	addlw	16
  8762  002ADC  ECF9  F013         	call	_OLED_command
  8763                           
  8764                           ;OLED_Display.c: 46: OLED_command( 0x10 + ((8*Column>>4)&0x0F) );
  8765  002AE0  5027               	movf	oledGotoYX@Column,w,c
  8766  002AE2  0D08               	mullw	8
  8767  002AE4  0E04               	movlw	4
  8768  002AE6  6E28               	movwf	??_oledGotoYX& (0+255),c
  8769  002AE8                     u6895:
  8770  002AE8  34F4               	rlcf	prodh,w,c
  8771  002AEA  32F4               	rrcf	prodh,f,c
  8772  002AEC  32F3               	rrcf	prodl,f,c
  8773  002AEE  2E28               	decfsz	??_oledGotoYX& (0+255),f,c
  8774  002AF0  D7FB               	goto	u6895
  8775  002AF2  50F3               	movf	prodl,w,c
  8776  002AF4  0B0F               	andlw	15
  8777  002AF6  0F10               	addlw	16
  8778  002AF8  ECF9  F013         	call	_OLED_command
  8779  002AFC  0012               	return		;funcret
  8780  002AFE                     __end_of_oledGotoYX:
  8781                           	opt stack 0
  8782                           tosu	equ	0xFFF
  8783                           tosh	equ	0xFFE
  8784                           tosl	equ	0xFFD
  8785                           pclath	equ	0xFFA
  8786                           tblptru	equ	0xFF8
  8787                           tblptrh	equ	0xFF7
  8788                           tblptrl	equ	0xFF6
  8789                           tablat	equ	0xFF5
  8790                           prodh	equ	0xFF4
  8791                           prodl	equ	0xFF3
  8792                           intcon	equ	0xFF2
  8793                           indf0	equ	0xFEF
  8794                           postinc0	equ	0xFEE
  8795                           fsr0h	equ	0xFEA
  8796                           fsr0l	equ	0xFE9
  8797                           wreg	equ	0xFE8
  8798                           indf2	equ	0xFDF
  8799                           postinc2	equ	0xFDE
  8800                           postdec2	equ	0xFDD
  8801                           plusw2	equ	0xFDB
  8802                           fsr2h	equ	0xFDA
  8803                           fsr2l	equ	0xFD9
  8804                           status	equ	0xFD8
  8805                           
  8806 ;; *************** function _OLED_init *****************
  8807 ;; Defined at:
  8808 ;;		line 146 in file "OLED_Display.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8822 ;;      Params:         0       0       0       0       0       0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0
  8824 ;;      Temps:          0       0       0       0       0       0       0
  8825 ;;      Totals:         0       0       0       0       0       0       0
  8826 ;;Total ram usage:        0 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    7
  8829 ;; This function calls:
  8830 ;;		_OLED_command
  8831 ;; This function is called by:
  8832 ;;		_Setupdisplay
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text37
  8837  00265A                     __ptext37:
  8838                           	opt stack 0
  8839  00265A                     _OLED_init:
  8840                           	opt stack 22
  8841                           
  8842                           ;OLED_Display.c: 148: OLED_command (0xae);
  8843                           
  8844                           ;incstack = 0
  8845  00265A  0EAE               	movlw	174
  8846  00265C  ECF9  F013         	call	_OLED_command
  8847                           
  8848                           ;OLED_Display.c: 149: OLED_command (0xa8);
  8849  002660  0EA8               	movlw	168
  8850  002662  ECF9  F013         	call	_OLED_command
  8851                           
  8852                           ;OLED_Display.c: 150: OLED_command (0x3f);
  8853  002666  0E3F               	movlw	63
  8854  002668  ECF9  F013         	call	_OLED_command
  8855                           
  8856                           ;OLED_Display.c: 151: OLED_command (0xd3);
  8857  00266C  0ED3               	movlw	211
  8858  00266E  ECF9  F013         	call	_OLED_command
  8859                           
  8860                           ;OLED_Display.c: 152: OLED_command (0x00);
  8861  002672  0E00               	movlw	0
  8862  002674  ECF9  F013         	call	_OLED_command
  8863                           
  8864                           ;OLED_Display.c: 153: OLED_command (0x40);
  8865  002678  0E40               	movlw	64
  8866  00267A  ECF9  F013         	call	_OLED_command
  8867                           
  8868                           ;OLED_Display.c: 155: OLED_command (0xa0);
  8869  00267E  0EA0               	movlw	160
  8870  002680  ECF9  F013         	call	_OLED_command
  8871                           
  8872                           ;OLED_Display.c: 156: OLED_command (0xa1);
  8873  002684  0EA1               	movlw	161
  8874  002686  ECF9  F013         	call	_OLED_command
  8875                           
  8876                           ;OLED_Display.c: 157: OLED_command (0xc0);
  8877  00268A  0EC0               	movlw	192
  8878  00268C  ECF9  F013         	call	_OLED_command
  8879                           
  8880                           ;OLED_Display.c: 159: OLED_command (0xc8);
  8881  002690  0EC8               	movlw	200
  8882  002692  ECF9  F013         	call	_OLED_command
  8883                           
  8884                           ;OLED_Display.c: 160: OLED_command (0xda);
  8885  002696  0EDA               	movlw	218
  8886  002698  ECF9  F013         	call	_OLED_command
  8887                           
  8888                           ;OLED_Display.c: 161: OLED_command (0x12);
  8889  00269C  0E12               	movlw	18
  8890  00269E  ECF9  F013         	call	_OLED_command
  8891                           
  8892                           ;OLED_Display.c: 162: OLED_command (0x81);
  8893  0026A2  0E81               	movlw	129
  8894  0026A4  ECF9  F013         	call	_OLED_command
  8895                           
  8896                           ;OLED_Display.c: 163: OLED_command (0xfF);
  8897  0026A8  0EFF               	movlw	255
  8898  0026AA  ECF9  F013         	call	_OLED_command
  8899                           
  8900                           ;OLED_Display.c: 164: OLED_command (0xa4);
  8901  0026AE  0EA4               	movlw	164
  8902  0026B0  ECF9  F013         	call	_OLED_command
  8903                           
  8904                           ;OLED_Display.c: 165: OLED_command (0xa6);
  8905  0026B4  0EA6               	movlw	166
  8906  0026B6  ECF9  F013         	call	_OLED_command
  8907                           
  8908                           ;OLED_Display.c: 166: OLED_command (0xd5);
  8909  0026BA  0ED5               	movlw	213
  8910  0026BC  ECF9  F013         	call	_OLED_command
  8911                           
  8912                           ;OLED_Display.c: 167: OLED_command (0x80);
  8913  0026C0  0E80               	movlw	128
  8914  0026C2  ECF9  F013         	call	_OLED_command
  8915                           
  8916                           ;OLED_Display.c: 168: OLED_command (0x8d);
  8917  0026C6  0E8D               	movlw	141
  8918  0026C8  ECF9  F013         	call	_OLED_command
  8919                           
  8920                           ;OLED_Display.c: 169: OLED_command (0x14);
  8921  0026CC  0E14               	movlw	20
  8922  0026CE  ECF9  F013         	call	_OLED_command
  8923                           
  8924                           ;OLED_Display.c: 170: OLED_command (0xAF);
  8925  0026D2  0EAF               	movlw	175
  8926  0026D4  ECF9  F013         	call	_OLED_command
  8927                           
  8928                           ;OLED_Display.c: 171: OLED_command (0x20);
  8929  0026D8  0E20               	movlw	32
  8930  0026DA  ECF9  F013         	call	_OLED_command
  8931                           
  8932                           ;OLED_Display.c: 172: OLED_command (0x00);
  8933  0026DE  0E00               	movlw	0
  8934  0026E0  ECF9  F013         	call	_OLED_command
  8935  0026E4  0012               	return		;funcret
  8936  0026E6                     __end_of_OLED_init:
  8937                           	opt stack 0
  8938                           tosu	equ	0xFFF
  8939                           tosh	equ	0xFFE
  8940                           tosl	equ	0xFFD
  8941                           pclath	equ	0xFFA
  8942                           tblptru	equ	0xFF8
  8943                           tblptrh	equ	0xFF7
  8944                           tblptrl	equ	0xFF6
  8945                           tablat	equ	0xFF5
  8946                           prodh	equ	0xFF4
  8947                           prodl	equ	0xFF3
  8948                           intcon	equ	0xFF2
  8949                           indf0	equ	0xFEF
  8950                           postinc0	equ	0xFEE
  8951                           fsr0h	equ	0xFEA
  8952                           fsr0l	equ	0xFE9
  8953                           wreg	equ	0xFE8
  8954                           indf2	equ	0xFDF
  8955                           postinc2	equ	0xFDE
  8956                           postdec2	equ	0xFDD
  8957                           plusw2	equ	0xFDB
  8958                           fsr2h	equ	0xFDA
  8959                           fsr2l	equ	0xFD9
  8960                           status	equ	0xFD8
  8961                           
  8962 ;; *************** function _OLED_command *****************
  8963 ;; Defined at:
  8964 ;;		line 10 in file "OLED_Display.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;  com             1    wreg     unsigned char 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;  com             1   36[COMRAM] unsigned char 
  8969 ;;  status          1   37[COMRAM] enum E7919
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8979 ;;      Params:         0       0       0       0       0       0       0
  8980 ;;      Locals:         2       0       0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0
  8982 ;;      Totals:         2       0       0       0       0       0       0
  8983 ;;Total ram usage:        2 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    6
  8986 ;; This function calls:
  8987 ;;		_I2C1_MasterWrite
  8988 ;; This function is called by:
  8989 ;;		_oledGotoYX
  8990 ;;		_OLED_init
  8991 ;;		_Display
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           	psect	text38
  8996  0027F2                     __ptext38:
  8997                           	opt stack 0
  8998  0027F2                     _OLED_command:
  8999                           	opt stack 22
  9000                           
  9001                           ;incstack = 0
  9002                           ;OLED_command@com stored from wreg
  9003  0027F2  6E25               	movwf	OLED_command@com,c
  9004                           
  9005                           ;OLED_Display.c: 12: Buff[0] = 0x80;
  9006  0027F4  0E80               	movlw	128
  9007  0027F6  0100               	movlb	0	; () banked
  9008  0027F8  6FF0               	movwf	_Buff& (0+255),b
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;OLED_Display.c: 14: Buff[1] = com;
  9012  0027FA  C025  F0F1         	movff	OLED_command@com,_Buff+1
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;OLED_Display.c: 15: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9016  0027FE  0E02               	movlw	2
  9017  002800  6E26               	movwf	OLED_command@status,c
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;OLED_Display.c: 17: timeOut = 0;
  9021  002802  0E00               	movlw	0
  9022  002804  0100               	movlb	0	; () banked
  9023  002806  6FDE               	movwf	(_timeOut+1)& (0+255),b
  9024  002808  0E00               	movlw	0
  9025  00280A  6FDD               	movwf	_timeOut& (0+255),b
  9026                           
  9027                           ;OLED_Display.c: 18: while (status != I2C1_MESSAGE_FAIL) {
  9028  00280C  D02C               	goto	l6296
  9029  00280E                     l6276:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;OLED_Display.c: 20: I2C1_MasterWrite(Buff,
  9033                           ;OLED_Display.c: 21: 2,
  9034                           ;OLED_Display.c: 22: 0x3C,
  9035                           ;OLED_Display.c: 23: &status);
  9036  00280E  0EF0               	movlw	low _Buff
  9037  002810  0100               	movlb	0	; () banked
  9038  002812  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  9039  002814  0E00               	movlw	high _Buff
  9040  002816  0100               	movlb	0	; () banked
  9041  002818  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  9042  00281A  0E00               	movlw	0
  9043  00281C  0100               	movlb	0	; () banked
  9044  00281E  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
  9045  002820  0E02               	movlw	2
  9046  002822  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
  9047  002824  0E00               	movlw	0
  9048  002826  0100               	movlb	0	; () banked
  9049  002828  6FF7               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  9050  00282A  0E3C               	movlw	60
  9051  00282C  6FF6               	movwf	I2C1_MasterWrite@address& (0+255),b
  9052  00282E  0E26               	movlw	low OLED_command@status
  9053  002830  0100               	movlb	0	; () banked
  9054  002832  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  9055  002834  0E00               	movlw	high OLED_command@status
  9056  002836  0100               	movlb	0	; () banked
  9057  002838  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  9058  00283A  EC0B  F016         	call	_I2C1_MasterWrite	;wreg free
  9059  00283E                     l6278:
  9060  00283E  0E02               	movlw	2
  9061  002840  1826               	xorwf	OLED_command@status,w,c
  9062  002842  B4D8               	btfsc	status,2,c
  9063  002844  D7FC               	goto	l6278
  9064                           
  9065                           ;OLED_Display.c: 28: if (status == I2C1_MESSAGE_COMPLETE)
  9066  002846  5026               	movf	OLED_command@status,w,c
  9067  002848  B4D8               	btfsc	status,2,c
  9068  00284A  0012               	return	
  9069                           
  9070                           ;OLED_Display.c: 30: if (timeOut == 2)
  9071                           
  9072                           ;OLED_Display.c: 29: break;
  9073  00284C  0E02               	movlw	2
  9074  00284E  0100               	movlb	0	; () banked
  9075  002850  19DD               	xorwf	_timeOut& (0+255),w,b
  9076  002852  0100               	movlb	0	; () banked
  9077  002854  11DE               	iorwf	(_timeOut+1)& (0+255),w,b
  9078  002856  B4D8               	btfsc	status,2,c
  9079  002858  0012               	return	
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;OLED_Display.c: 32: if (status == I2C1_MESSAGE_FAIL)
  9083                           
  9084                           ; BSR set to: 0
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;OLED_Display.c: 31: break;
  9088  00285A  0426               	decf	OLED_command@status,w,c
  9089  00285C  B4D8               	btfsc	status,2,c
  9090  00285E  0012               	return	
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;OLED_Display.c: 34: else
  9094                           ;OLED_Display.c: 35: timeOut++;
  9095                           
  9096                           ; BSR set to: 0
  9097                           
  9098                           ; BSR set to: 0
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;OLED_Display.c: 33: break;
  9102  002860  0100               	movlb	0	; () banked
  9103  002862  4BDD               	infsnz	_timeOut& (0+255),f,b
  9104  002864  2BDE               	incf	(_timeOut+1)& (0+255),f,b
  9105  002866                     l6296:
  9106                           
  9107                           ; BSR set to: 0
  9108  002866  0426               	decf	OLED_command@status,w,c
  9109  002868  B4D8               	btfsc	status,2,c
  9110  00286A  0012               	return	
  9111  00286C  D7D0               	goto	l6276
  9112  00286E                     __end_of_OLED_command:
  9113                           	opt stack 0
  9114                           tosu	equ	0xFFF
  9115                           tosh	equ	0xFFE
  9116                           tosl	equ	0xFFD
  9117                           pclath	equ	0xFFA
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           intcon	equ	0xFF2
  9125                           indf0	equ	0xFEF
  9126                           postinc0	equ	0xFEE
  9127                           fsr0h	equ	0xFEA
  9128                           fsr0l	equ	0xFE9
  9129                           wreg	equ	0xFE8
  9130                           indf2	equ	0xFDF
  9131                           postinc2	equ	0xFDE
  9132                           postdec2	equ	0xFDD
  9133                           plusw2	equ	0xFDB
  9134                           fsr2h	equ	0xFDA
  9135                           fsr2l	equ	0xFD9
  9136                           status	equ	0xFD8
  9137                           
  9138 ;; *************** function _SYSTEM_Initialize *****************
  9139 ;; Defined at:
  9140 ;;		line 112 in file "mcc_generated_files/mcc.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;		None
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;		None
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      void 
  9147 ;; Registers used:
  9148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9154 ;;      Params:         0       0       0       0       0       0       0
  9155 ;;      Locals:         0       0       0       0       0       0       0
  9156 ;;      Temps:          0       0       0       0       0       0       0
  9157 ;;      Totals:         0       0       0       0       0       0       0
  9158 ;;Total ram usage:        0 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; Hardware stack levels required when called:    7
  9161 ;; This function calls:
  9162 ;;		_ADC_Initialize
  9163 ;;		_EUSART1_Initialize
  9164 ;;		_I2C1_Initialize
  9165 ;;		_INTERRUPT_Initialize
  9166 ;;		_OSCILLATOR_Initialize
  9167 ;;		_PIN_MANAGER_Initialize
  9168 ;;		_TMR0_Initialize
  9169 ;;		_TMR2_Initialize
  9170 ;;		_begin
  9171 ;; This function is called by:
  9172 ;;		_main
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text39
  9177  0028E2                     __ptext39:
  9178                           	opt stack 0
  9179  0028E2                     _SYSTEM_Initialize:
  9180                           	opt stack 23
  9181                           
  9182                           ;mcc.c: 114: OSCILLATOR_Initialize();
  9183                           
  9184                           ;incstack = 0
  9185  0028E2  ECD1  F018         	call	_OSCILLATOR_Initialize	;wreg free
  9186                           
  9187                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  9188  0028E6  EC18  F015         	call	_PIN_MANAGER_Initialize	;wreg free
  9189                           
  9190                           ;mcc.c: 116: INTERRUPT_Initialize();
  9191  0028EA  ECC1  F018         	call	_INTERRUPT_Initialize	;wreg free
  9192                           
  9193                           ;mcc.c: 117: ADC_Initialize();
  9194  0028EE  EC8B  F018         	call	_ADC_Initialize	;wreg free
  9195                           
  9196                           ;mcc.c: 118: TMR0_Initialize();
  9197  0028F2  EC50  F018         	call	_TMR0_Initialize	;wreg free
  9198                           
  9199                           ;mcc.c: 119: TMR2_Initialize();
  9200  0028F6  EC3F  F018         	call	_TMR2_Initialize	;wreg free
  9201                           
  9202                           ;mcc.c: 120: EUSART1_Initialize();
  9203  0028FA  EC2C  F017         	call	_EUSART1_Initialize	;wreg free
  9204                           
  9205                           ;mcc.c: 121: begin(receiveArray, sizeof (receiveArray), 3, 0, Send_put, Receive_get, Rec
      +                          eive_available, Receive_peek);
  9206  0028FE  0E00               	movlw	low _receiveArray
  9207  002900  0101               	movlb	1	; () banked
  9208  002902  6F39               	movwf	begin@ptr& (0+255),b
  9209  002904  0E01               	movlw	high _receiveArray
  9210  002906  0101               	movlb	1	; () banked
  9211  002908  6F3A               	movwf	(begin@ptr+1)& (0+255),b
  9212  00290A  0E28               	movlw	40
  9213  00290C  0101               	movlb	1	; () banked
  9214  00290E  6F3B               	movwf	begin@maxSize& (0+255),b
  9215  002910  0E03               	movlw	3
  9216  002912  0101               	movlb	1	; () banked
  9217  002914  6F3C               	movwf	begin@givenAddress& (0+255),b
  9218  002916  0E00               	movlw	0
  9219  002918  0101               	movlb	1	; () banked
  9220  00291A  6F3D               	movwf	begin@error& (0+255),b
  9221  00291C  0E32               	movlw	low _Send_put
  9222  00291E  0101               	movlb	1	; () banked
  9223  002920  6F3E               	movwf	begin@stufftosend& (0+255),b
  9224  002922  0E2F               	movlw	high _Send_put
  9225  002924  0101               	movlb	1	; () banked
  9226  002926  6F3F               	movwf	(begin@stufftosend+1)& (0+255),b
  9227  002928  0E94               	movlw	low _Receive_get
  9228  00292A  0101               	movlb	1	; () banked
  9229  00292C  6F40               	movwf	begin@stufftoreceive& (0+255),b
  9230  00292E  0E31               	movlw	high _Receive_get
  9231  002930  0101               	movlb	1	; () banked
  9232  002932  6F41               	movwf	(begin@stufftoreceive+1)& (0+255),b
  9233  002934  0E2E               	movlw	low _Receive_available
  9234  002936  0101               	movlb	1	; () banked
  9235  002938  6F42               	movwf	begin@stuffavailable& (0+255),b
  9236  00293A  0E31               	movlw	high _Receive_available
  9237  00293C  0101               	movlb	1	; () banked
  9238  00293E  6F43               	movwf	(begin@stuffavailable+1)& (0+255),b
  9239  002940  0E00               	movlw	0
  9240  002942  0101               	movlb	1	; () banked
  9241  002944  6F44               	movwf	begin@stuffpeek& (0+255),b
  9242  002946  0E00               	movlw	0
  9243  002948  0101               	movlb	1	; () banked
  9244  00294A  6F45               	movwf	(begin@stuffpeek+1)& (0+255),b
  9245  00294C  ECB0  F015         	call	_begin	;wreg free
  9246                           
  9247                           ;mcc.c: 122: I2C1_Initialize();
  9248  002950  EC0E  F017         	call	_I2C1_Initialize	;wreg free
  9249  002954  0012               	return		;funcret
  9250  002956                     __end_of_SYSTEM_Initialize:
  9251                           	opt stack 0
  9252                           tosu	equ	0xFFF
  9253                           tosh	equ	0xFFE
  9254                           tosl	equ	0xFFD
  9255                           pclath	equ	0xFFA
  9256                           tblptru	equ	0xFF8
  9257                           tblptrh	equ	0xFF7
  9258                           tblptrl	equ	0xFF6
  9259                           tablat	equ	0xFF5
  9260                           prodh	equ	0xFF4
  9261                           prodl	equ	0xFF3
  9262                           intcon	equ	0xFF2
  9263                           indf0	equ	0xFEF
  9264                           postinc0	equ	0xFEE
  9265                           fsr0h	equ	0xFEA
  9266                           fsr0l	equ	0xFE9
  9267                           wreg	equ	0xFE8
  9268                           indf2	equ	0xFDF
  9269                           postinc2	equ	0xFDE
  9270                           postdec2	equ	0xFDD
  9271                           plusw2	equ	0xFDB
  9272                           fsr2h	equ	0xFDA
  9273                           fsr2l	equ	0xFD9
  9274                           status	equ	0xFD8
  9275                           
  9276 ;; *************** function _begin *****************
  9277 ;; Defined at:
  9278 ;;		line 19 in file "FastTransfer.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;  ptr             2    0[BANK1 ] PTR volatile int 
  9281 ;;		 -> receiveArray(40), 
  9282 ;;  maxSize         1    2[BANK1 ] unsigned char 
  9283 ;;  givenAddress    1    3[BANK1 ] unsigned char 
  9284 ;;  error           1    4[BANK1 ] unsigned char 
  9285 ;;  stufftosend     2    5[BANK1 ] PTR FTN(unsigned char ,)
  9286 ;;		 -> Send_put(1), 
  9287 ;;  stufftorecei    2    7[BANK1 ] PTR FTN()unsigned char 
  9288 ;;		 -> Receive_get(1), 
  9289 ;;  stuffavailab    2    9[BANK1 ] PTR FTN()int 
  9290 ;;		 -> Receive_available(2), 
  9291 ;;  stuffpeek       2   11[BANK1 ] PTR FTN()unsigned char 
  9292 ;;		 -> Receive_peek(1), 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;		None
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  1    wreg      void 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2, status,0, cstack
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9304 ;;      Params:         0       0      13       0       0       0       0
  9305 ;;      Locals:         0       0       0       0       0       0       0
  9306 ;;      Temps:          0       0       0       0       0       0       0
  9307 ;;      Totals:         0       0      13       0       0       0       0
  9308 ;;Total ram usage:       13 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; Hardware stack levels required when called:    5
  9311 ;; This function calls:
  9312 ;;		___awdiv
  9313 ;; This function is called by:
  9314 ;;		_SYSTEM_Initialize
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318                           	psect	text40
  9319  002B60                     __ptext40:
  9320                           	opt stack 0
  9321  002B60                     _begin:
  9322                           	opt stack 24
  9323                           
  9324                           ;FastTransfer.c: 20: receiveArrayAddress = ptr;
  9325                           
  9326                           ;incstack = 0
  9327  002B60  C139  F0D7         	movff	begin@ptr,_receiveArrayAddress
  9328  002B64  C13A  F0D8         	movff	begin@ptr+1,_receiveArrayAddress+1
  9329                           
  9330                           ;FastTransfer.c: 21: moduleAddress = givenAddress;
  9331  002B68  C13C  F03A         	movff	begin@givenAddress,_moduleAddress
  9332                           
  9333                           ;FastTransfer.c: 22: serial_write = stufftosend;
  9334  002B6C  C13E  F033         	movff	begin@stufftosend,_serial_write
  9335  002B70  C13F  F034         	movff	begin@stufftosend+1,_serial_write+1
  9336                           
  9337                           ;FastTransfer.c: 23: serial_available = stuffavailable;
  9338  002B74  C142  F02F         	movff	begin@stuffavailable,_serial_available
  9339  002B78  C143  F030         	movff	begin@stuffavailable+1,_serial_available+1
  9340                           
  9341                           ;FastTransfer.c: 24: serial_peek = stuffpeek;
  9342  002B7C  C144  F0DB         	movff	begin@stuffpeek,_serial_peek
  9343  002B80  C145  F0DC         	movff	begin@stuffpeek+1,_serial_peek+1
  9344                           
  9345                           ;FastTransfer.c: 25: serial_read = stufftoreceive;
  9346  002B84  C140  F031         	movff	begin@stufftoreceive,_serial_read
  9347  002B88  C141  F032         	movff	begin@stufftoreceive+1,_serial_read+1
  9348                           
  9349                           ;FastTransfer.c: 26: maxDataAddress = maxSize / 2;
  9350  002B8C  C13B  F01B         	movff	begin@maxSize,___awdiv@dividend
  9351  002B90  6A1C               	clrf	___awdiv@dividend+1,c
  9352  002B92  0E00               	movlw	0
  9353  002B94  6E1E               	movwf	___awdiv@divisor+1,c
  9354  002B96  0E02               	movlw	2
  9355  002B98  6E1D               	movwf	___awdiv@divisor,c
  9356  002B9A  ECB7  F013         	call	___awdiv	;wreg free
  9357  002B9E  501B               	movf	?___awdiv,w,c
  9358  002BA0  6E39               	movwf	_maxDataAddress,c
  9359                           
  9360                           ;FastTransfer.c: 27: sendStructAddress = (unsigned char*) & ring_buffer;
  9361  002BA2  0E00               	movlw	low _ring_buffer
  9362  002BA4  0100               	movlb	0	; () banked
  9363  002BA6  6FD9               	movwf	_sendStructAddress& (0+255),b
  9364  002BA8  0E02               	movlw	high _ring_buffer
  9365  002BAA  0100               	movlb	0	; () banked
  9366  002BAC  6FDA               	movwf	(_sendStructAddress+1)& (0+255),b
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;FastTransfer.c: 28: AKNAKsend = error;
  9370  002BAE  C13D  F036         	movff	begin@error,_AKNAKsend
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;FastTransfer.c: 29: alignErrorCounter = 0;
  9374  002BB2  0E00               	movlw	0
  9375  002BB4  0100               	movlb	0	; () banked
  9376  002BB6  6FCA               	movwf	(_alignErrorCounter+1)& (0+255),b
  9377  002BB8  0E00               	movlw	0
  9378  002BBA  6FC9               	movwf	_alignErrorCounter& (0+255),b
  9379                           
  9380                           ; BSR set to: 0
  9381  002BBC  0012               	return		;funcret
  9382  002BBE                     __end_of_begin:
  9383                           	opt stack 0
  9384                           tosu	equ	0xFFF
  9385                           tosh	equ	0xFFE
  9386                           tosl	equ	0xFFD
  9387                           pclath	equ	0xFFA
  9388                           tblptru	equ	0xFF8
  9389                           tblptrh	equ	0xFF7
  9390                           tblptrl	equ	0xFF6
  9391                           tablat	equ	0xFF5
  9392                           prodh	equ	0xFF4
  9393                           prodl	equ	0xFF3
  9394                           intcon	equ	0xFF2
  9395                           indf0	equ	0xFEF
  9396                           postinc0	equ	0xFEE
  9397                           fsr0h	equ	0xFEA
  9398                           fsr0l	equ	0xFE9
  9399                           wreg	equ	0xFE8
  9400                           indf2	equ	0xFDF
  9401                           postinc2	equ	0xFDE
  9402                           postdec2	equ	0xFDD
  9403                           plusw2	equ	0xFDB
  9404                           fsr2h	equ	0xFDA
  9405                           fsr2l	equ	0xFD9
  9406                           status	equ	0xFD8
  9407                           
  9408 ;; *************** function _TMR2_Initialize *****************
  9409 ;; Defined at:
  9410 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;		None
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;		None
  9415 ;; Return value:  Size  Location     Type
  9416 ;;                  1    wreg      void 
  9417 ;; Registers used:
  9418 ;;		wreg, status,2, status,0, cstack
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9424 ;;      Params:         0       0       0       0       0       0       0
  9425 ;;      Locals:         0       0       0       0       0       0       0
  9426 ;;      Temps:          0       0       0       0       0       0       0
  9427 ;;      Totals:         0       0       0       0       0       0       0
  9428 ;;Total ram usage:        0 bytes
  9429 ;; Hardware stack levels used:    1
  9430 ;; Hardware stack levels required when called:    5
  9431 ;; This function calls:
  9432 ;;		_TMR2_SetInterruptHandler
  9433 ;;		_TMR2_StartTimer
  9434 ;; This function is called by:
  9435 ;;		_SYSTEM_Initialize
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text41
  9440  00307E                     __ptext41:
  9441                           	opt stack 0
  9442  00307E                     _TMR2_Initialize:
  9443                           	opt stack 24
  9444                           
  9445                           ;tmr2.c: 67: T2CON = 0x7E;
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;incstack = 0
  9449  00307E  0E7E               	movlw	126
  9450  003080  6EBA               	movwf	4026,c	;volatile
  9451                           
  9452                           ;tmr2.c: 70: PR2 = 0x30;
  9453  003082  0E30               	movlw	48
  9454  003084  6EBB               	movwf	4027,c	;volatile
  9455                           
  9456                           ;tmr2.c: 73: TMR2 = 0x00;
  9457  003086  0E00               	movlw	0
  9458  003088  6EBC               	movwf	4028,c	;volatile
  9459                           
  9460                           ;tmr2.c: 76: PIR1bits.TMR2IF = 0;
  9461  00308A  929E               	bcf	3998,1,c	;volatile
  9462                           
  9463                           ;tmr2.c: 79: PIE1bits.TMR2IE = 1;
  9464  00308C  829D               	bsf	3997,1,c	;volatile
  9465                           
  9466                           ;tmr2.c: 82: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  9467  00308E  0EFA               	movlw	low _TMR2_DefaultInterruptHandler
  9468  003090  6E1B               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
  9469  003092  0E31               	movlw	high _TMR2_DefaultInterruptHandler
  9470  003094  6E1C               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
  9471  003096  ECDD  F018         	call	_TMR2_SetInterruptHandler	;wreg free
  9472                           
  9473                           ;tmr2.c: 85: TMR2_StartTimer();
  9474  00309A  ECF7  F018         	call	_TMR2_StartTimer	;wreg free
  9475  00309E  0012               	return		;funcret
  9476  0030A0                     __end_of_TMR2_Initialize:
  9477                           	opt stack 0
  9478                           tosu	equ	0xFFF
  9479                           tosh	equ	0xFFE
  9480                           tosl	equ	0xFFD
  9481                           pclath	equ	0xFFA
  9482                           tblptru	equ	0xFF8
  9483                           tblptrh	equ	0xFF7
  9484                           tblptrl	equ	0xFF6
  9485                           tablat	equ	0xFF5
  9486                           prodh	equ	0xFF4
  9487                           prodl	equ	0xFF3
  9488                           intcon	equ	0xFF2
  9489                           indf0	equ	0xFEF
  9490                           postinc0	equ	0xFEE
  9491                           fsr0h	equ	0xFEA
  9492                           fsr0l	equ	0xFE9
  9493                           wreg	equ	0xFE8
  9494                           indf2	equ	0xFDF
  9495                           postinc2	equ	0xFDE
  9496                           postdec2	equ	0xFDD
  9497                           plusw2	equ	0xFDB
  9498                           fsr2h	equ	0xFDA
  9499                           fsr2l	equ	0xFD9
  9500                           status	equ	0xFD8
  9501                           
  9502 ;; *************** function _TMR2_StartTimer *****************
  9503 ;; Defined at:
  9504 ;;		line 88 in file "mcc_generated_files/tmr2.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;		None
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;		None
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1    wreg      void 
  9511 ;; Registers used:
  9512 ;;		None
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9518 ;;      Params:         0       0       0       0       0       0       0
  9519 ;;      Locals:         0       0       0       0       0       0       0
  9520 ;;      Temps:          0       0       0       0       0       0       0
  9521 ;;      Totals:         0       0       0       0       0       0       0
  9522 ;;Total ram usage:        0 bytes
  9523 ;; Hardware stack levels used:    1
  9524 ;; Hardware stack levels required when called:    4
  9525 ;; This function calls:
  9526 ;;		Nothing
  9527 ;; This function is called by:
  9528 ;;		_TMR2_Initialize
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           	psect	text42
  9533  0031EE                     __ptext42:
  9534                           	opt stack 0
  9535  0031EE                     _TMR2_StartTimer:
  9536                           	opt stack 24
  9537                           
  9538                           ;tmr2.c: 91: T2CONbits.TMR2ON = 1;
  9539                           
  9540                           ;incstack = 0
  9541  0031EE  84BA               	bsf	4026,2,c	;volatile
  9542  0031F0  0012               	return		;funcret
  9543  0031F2                     __end_of_TMR2_StartTimer:
  9544                           	opt stack 0
  9545                           tosu	equ	0xFFF
  9546                           tosh	equ	0xFFE
  9547                           tosl	equ	0xFFD
  9548                           pclath	equ	0xFFA
  9549                           tblptru	equ	0xFF8
  9550                           tblptrh	equ	0xFF7
  9551                           tblptrl	equ	0xFF6
  9552                           tablat	equ	0xFF5
  9553                           prodh	equ	0xFF4
  9554                           prodl	equ	0xFF3
  9555                           intcon	equ	0xFF2
  9556                           indf0	equ	0xFEF
  9557                           postinc0	equ	0xFEE
  9558                           fsr0h	equ	0xFEA
  9559                           fsr0l	equ	0xFE9
  9560                           wreg	equ	0xFE8
  9561                           indf2	equ	0xFDF
  9562                           postinc2	equ	0xFDE
  9563                           postdec2	equ	0xFDD
  9564                           plusw2	equ	0xFDB
  9565                           fsr2h	equ	0xFDA
  9566                           fsr2l	equ	0xFD9
  9567                           status	equ	0xFD8
  9568                           
  9569 ;; *************** function _TMR2_SetInterruptHandler *****************
  9570 ;; Defined at:
  9571 ;;		line 291 in file "mcc_generated_files/tmr2.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  InterruptHan    2   26[COMRAM] PTR void 
  9574 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      void 
  9579 ;; Registers used:
  9580 ;;		wreg, status,2, status,0
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9586 ;;      Params:         2       0       0       0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0       0       0
  9588 ;;      Temps:          0       0       0       0       0       0       0
  9589 ;;      Totals:         2       0       0       0       0       0       0
  9590 ;;Total ram usage:        2 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:    4
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_TMR2_Initialize
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           	psect	text43
  9601  0031BA                     __ptext43:
  9602                           	opt stack 0
  9603  0031BA                     _TMR2_SetInterruptHandler:
  9604                           	opt stack 24
  9605                           
  9606                           ;tmr2.c: 292: TMR2_InterruptHandler = InterruptHandler;
  9607                           
  9608                           ;incstack = 0
  9609  0031BA  C01B  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  9610  0031BE  C01C  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  9611  0031C2  0012               	return		;funcret
  9612  0031C4                     __end_of_TMR2_SetInterruptHandler:
  9613                           	opt stack 0
  9614                           tosu	equ	0xFFF
  9615                           tosh	equ	0xFFE
  9616                           tosl	equ	0xFFD
  9617                           pclath	equ	0xFFA
  9618                           tblptru	equ	0xFF8
  9619                           tblptrh	equ	0xFF7
  9620                           tblptrl	equ	0xFF6
  9621                           tablat	equ	0xFF5
  9622                           prodh	equ	0xFF4
  9623                           prodl	equ	0xFF3
  9624                           intcon	equ	0xFF2
  9625                           indf0	equ	0xFEF
  9626                           postinc0	equ	0xFEE
  9627                           fsr0h	equ	0xFEA
  9628                           fsr0l	equ	0xFE9
  9629                           wreg	equ	0xFE8
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           plusw2	equ	0xFDB
  9634                           fsr2h	equ	0xFDA
  9635                           fsr2l	equ	0xFD9
  9636                           status	equ	0xFD8
  9637                           
  9638 ;; *************** function _TMR0_Initialize *****************
  9639 ;; Defined at:
  9640 ;;		line 23 in file "mcc_generated_files/tmr0.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9654 ;;      Params:         0       0       0       0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0
  9657 ;;      Totals:         0       0       0       0       0       0       0
  9658 ;;Total ram usage:        0 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    5
  9661 ;; This function calls:
  9662 ;;		_TMR0_StartTimer
  9663 ;; This function is called by:
  9664 ;;		_SYSTEM_Initialize
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           	psect	text44
  9669  0030A0                     __ptext44:
  9670                           	opt stack 0
  9671  0030A0                     _TMR0_Initialize:
  9672                           	opt stack 24
  9673                           
  9674                           ;tmr0.c: 27: T0CON = 0x94;
  9675                           
  9676                           ;incstack = 0
  9677  0030A0  0E94               	movlw	148
  9678  0030A2  6ED5               	movwf	4053,c	;volatile
  9679                           
  9680                           ;tmr0.c: 30: TMR0H = 0xCF;
  9681  0030A4  0ECF               	movlw	207
  9682  0030A6  6ED7               	movwf	4055,c	;volatile
  9683                           
  9684                           ;tmr0.c: 33: TMR0L = 0x2C;
  9685  0030A8  0E2C               	movlw	44
  9686  0030AA  6ED6               	movwf	4054,c	;volatile
  9687                           
  9688                           ;tmr0.c: 36: timer0ReloadVal16bit = 53036;
  9689  0030AC  0ECF               	movlw	207
  9690  0030AE  6E43               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  9691  0030B0  0E2C               	movlw	44
  9692  0030B2  6E42               	movwf	_timer0ReloadVal16bit,c	;volatile
  9693                           
  9694                           ;tmr0.c: 39: INTCONbits.TMR0IF = 0;
  9695  0030B4  94F2               	bcf	intcon,2,c	;volatile
  9696                           
  9697                           ;tmr0.c: 42: INTCONbits.TMR0IE = 1;
  9698  0030B6  8AF2               	bsf	intcon,5,c	;volatile
  9699                           
  9700                           ;tmr0.c: 45: TMR0_StartTimer();
  9701  0030B8  ECF9  F018         	call	_TMR0_StartTimer	;wreg free
  9702  0030BC  0012               	return		;funcret
  9703  0030BE                     __end_of_TMR0_Initialize:
  9704                           	opt stack 0
  9705                           tosu	equ	0xFFF
  9706                           tosh	equ	0xFFE
  9707                           tosl	equ	0xFFD
  9708                           pclath	equ	0xFFA
  9709                           tblptru	equ	0xFF8
  9710                           tblptrh	equ	0xFF7
  9711                           tblptrl	equ	0xFF6
  9712                           tablat	equ	0xFF5
  9713                           prodh	equ	0xFF4
  9714                           prodl	equ	0xFF3
  9715                           intcon	equ	0xFF2
  9716                           indf0	equ	0xFEF
  9717                           postinc0	equ	0xFEE
  9718                           fsr0h	equ	0xFEA
  9719                           fsr0l	equ	0xFE9
  9720                           wreg	equ	0xFE8
  9721                           indf2	equ	0xFDF
  9722                           postinc2	equ	0xFDE
  9723                           postdec2	equ	0xFDD
  9724                           plusw2	equ	0xFDB
  9725                           fsr2h	equ	0xFDA
  9726                           fsr2l	equ	0xFD9
  9727                           status	equ	0xFD8
  9728                           
  9729 ;; *************** function _TMR0_StartTimer *****************
  9730 ;; Defined at:
  9731 ;;		line 48 in file "mcc_generated_files/tmr0.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;		None
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;		None
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		None
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9745 ;;      Params:         0       0       0       0       0       0       0
  9746 ;;      Locals:         0       0       0       0       0       0       0
  9747 ;;      Temps:          0       0       0       0       0       0       0
  9748 ;;      Totals:         0       0       0       0       0       0       0
  9749 ;;Total ram usage:        0 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:    4
  9752 ;; This function calls:
  9753 ;;		Nothing
  9754 ;; This function is called by:
  9755 ;;		_TMR0_Initialize
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text45
  9760  0031F2                     __ptext45:
  9761                           	opt stack 0
  9762  0031F2                     _TMR0_StartTimer:
  9763                           	opt stack 24
  9764                           
  9765                           ;tmr0.c: 50: T0CONbits.TMR0ON = 1;
  9766                           
  9767                           ;incstack = 0
  9768  0031F2  8ED5               	bsf	4053,7,c	;volatile
  9769  0031F4  0012               	return		;funcret
  9770  0031F6                     __end_of_TMR0_StartTimer:
  9771                           	opt stack 0
  9772                           tosu	equ	0xFFF
  9773                           tosh	equ	0xFFE
  9774                           tosl	equ	0xFFD
  9775                           pclath	equ	0xFFA
  9776                           tblptru	equ	0xFF8
  9777                           tblptrh	equ	0xFF7
  9778                           tblptrl	equ	0xFF6
  9779                           tablat	equ	0xFF5
  9780                           prodh	equ	0xFF4
  9781                           prodl	equ	0xFF3
  9782                           intcon	equ	0xFF2
  9783                           indf0	equ	0xFEF
  9784                           postinc0	equ	0xFEE
  9785                           fsr0h	equ	0xFEA
  9786                           fsr0l	equ	0xFE9
  9787                           wreg	equ	0xFE8
  9788                           indf2	equ	0xFDF
  9789                           postinc2	equ	0xFDE
  9790                           postdec2	equ	0xFDD
  9791                           plusw2	equ	0xFDB
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function _PIN_MANAGER_Initialize *****************
  9797 ;; Defined at:
  9798 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;		None
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;		None
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9812 ;;      Params:         0       0       0       0       0       0       0
  9813 ;;      Locals:         0       0       0       0       0       0       0
  9814 ;;      Temps:          0       0       0       0       0       0       0
  9815 ;;      Totals:         0       0       0       0       0       0       0
  9816 ;;Total ram usage:        0 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:    4
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_SYSTEM_Initialize
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text46
  9827  002A30                     __ptext46:
  9828                           	opt stack 0
  9829  002A30                     _PIN_MANAGER_Initialize:
  9830                           	opt stack 25
  9831                           
  9832                           ;pin_manager.c: 52: LATA = 0x00;
  9833                           
  9834                           ;incstack = 0
  9835  002A30  0E00               	movlw	0
  9836  002A32  6E89               	movwf	3977,c	;volatile
  9837                           
  9838                           ;pin_manager.c: 53: TRISA = 0xF7;
  9839  002A34  0EF7               	movlw	247
  9840  002A36  6E92               	movwf	3986,c	;volatile
  9841                           
  9842                           ;pin_manager.c: 54: ANSELA = 0x20;
  9843  002A38  0E20               	movlw	32
  9844  002A3A  010F               	movlb	15	; () banked
  9845  002A3C  6F38               	movwf	56,b	;volatile
  9846                           
  9847                           ;pin_manager.c: 56: LATB = 0x00;
  9848  002A3E  0E00               	movlw	0
  9849  002A40  6E8A               	movwf	3978,c	;volatile
  9850                           
  9851                           ;pin_manager.c: 57: TRISB = 0xD7;
  9852  002A42  0ED7               	movlw	215
  9853  002A44  6E93               	movwf	3987,c	;volatile
  9854                           
  9855                           ;pin_manager.c: 58: ANSELB = 0x00;
  9856  002A46  0E00               	movlw	0
  9857  002A48  010F               	movlb	15	; () banked
  9858  002A4A  6F39               	movwf	57,b	;volatile
  9859                           
  9860                           ;pin_manager.c: 59: WPUB = 0x00;
  9861  002A4C  0E00               	movlw	0
  9862  002A4E  6E61               	movwf	3937,c	;volatile
  9863                           
  9864                           ;pin_manager.c: 61: LATC = 0x18;
  9865  002A50  0E18               	movlw	24
  9866  002A52  6E8B               	movwf	3979,c	;volatile
  9867                           
  9868                           ;pin_manager.c: 62: TRISC = 0xDF;
  9869  002A54  0EDF               	movlw	223
  9870  002A56  6E94               	movwf	3988,c	;volatile
  9871                           
  9872                           ;pin_manager.c: 65: LATD = 0x00;
  9873  002A58  0E00               	movlw	0
  9874  002A5A  6E8C               	movwf	3980,c	;volatile
  9875                           
  9876                           ;pin_manager.c: 66: TRISD = 0xFD;
  9877  002A5C  0EFD               	movlw	253
  9878  002A5E  6E95               	movwf	3989,c	;volatile
  9879                           
  9880                           ;pin_manager.c: 67: ANSELD = 0xDD;
  9881  002A60  0EDD               	movlw	221
  9882  002A62  010F               	movlb	15	; () banked
  9883  002A64  6F3B               	movwf	59,b	;volatile
  9884                           
  9885                           ;pin_manager.c: 69: LATE = 0x00;
  9886  002A66  0E00               	movlw	0
  9887  002A68  6E8D               	movwf	3981,c	;volatile
  9888                           
  9889                           ;pin_manager.c: 70: TRISE = 0x00;
  9890  002A6A  0E00               	movlw	0
  9891  002A6C  6E96               	movwf	3990,c	;volatile
  9892                           
  9893                           ;pin_manager.c: 71: ANSELE = 0x00;
  9894  002A6E  0E00               	movlw	0
  9895  002A70  010F               	movlb	15	; () banked
  9896  002A72  6F3C               	movwf	60,b	;volatile
  9897                           
  9898                           ;pin_manager.c: 73: ANSELC = 0xE4;
  9899  002A74  0EE4               	movlw	228
  9900  002A76  010F               	movlb	15	; () banked
  9901  002A78  6F3A               	movwf	58,b	;volatile
  9902                           
  9903                           ; BSR set to: 15
  9904                           ;pin_manager.c: 76: TRISCbits.RC5 = 0;
  9905  002A7A  9A94               	bcf	3988,5,c	;volatile
  9906                           
  9907                           ; BSR set to: 15
  9908                           ;pin_manager.c: 77: ANSELCbits.ANSC5 = 0;
  9909  002A7C  010F               	movlb	15	; () banked
  9910  002A7E  9B3A               	bcf	58,5,b	;volatile
  9911                           
  9912                           ; BSR set to: 15
  9913                           ;pin_manager.c: 78: LATCbits.LATC5 = 0;
  9914  002A80  9A8B               	bcf	3979,5,c	;volatile
  9915                           
  9916                           ; BSR set to: 15
  9917                           ;pin_manager.c: 80: TRISCbits.TRISC5=0;
  9918  002A82  9A94               	bcf	3988,5,c	;volatile
  9919                           
  9920                           ; BSR set to: 15
  9921                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 0x01;
  9922  002A84  8EF1               	bsf	intcon2,7,c	;volatile
  9923                           
  9924                           ; BSR set to: 15
  9925                           ;pin_manager.c: 84: TRISAbits.RA3 = 0;
  9926  002A86  9692               	bcf	3986,3,c	;volatile
  9927                           
  9928                           ; BSR set to: 15
  9929                           ;pin_manager.c: 85: ANSELAbits.ANSA3 = 0;
  9930  002A88  010F               	movlb	15	; () banked
  9931  002A8A  9738               	bcf	56,3,b	;volatile
  9932                           
  9933                           ; BSR set to: 15
  9934                           ;pin_manager.c: 88: TRISCbits.RC6 = 0;
  9935  002A8C  9C94               	bcf	3988,6,c	;volatile
  9936                           
  9937                           ; BSR set to: 15
  9938                           ;pin_manager.c: 89: TRISCbits.RC7 = 1;
  9939  002A8E  8E94               	bsf	3988,7,c	;volatile
  9940                           
  9941                           ; BSR set to: 15
  9942                           ;pin_manager.c: 90: ANSELCbits.ANSC6 = 0;
  9943  002A90  010F               	movlb	15	; () banked
  9944  002A92  9D3A               	bcf	58,6,b	;volatile
  9945                           
  9946                           ; BSR set to: 15
  9947                           ;pin_manager.c: 91: ANSELCbits.ANSC7 = 0;
  9948  002A94  010F               	movlb	15	; () banked
  9949  002A96  9F3A               	bcf	58,7,b	;volatile
  9950                           
  9951                           ; BSR set to: 15
  9952  002A98  0012               	return		;funcret
  9953  002A9A                     __end_of_PIN_MANAGER_Initialize:
  9954                           	opt stack 0
  9955                           tosu	equ	0xFFF
  9956                           tosh	equ	0xFFE
  9957                           tosl	equ	0xFFD
  9958                           pclath	equ	0xFFA
  9959                           tblptru	equ	0xFF8
  9960                           tblptrh	equ	0xFF7
  9961                           tblptrl	equ	0xFF6
  9962                           tablat	equ	0xFF5
  9963                           prodh	equ	0xFF4
  9964                           prodl	equ	0xFF3
  9965                           intcon	equ	0xFF2
  9966                           intcon2	equ	0xFF1
  9967                           indf0	equ	0xFEF
  9968                           postinc0	equ	0xFEE
  9969                           fsr0h	equ	0xFEA
  9970                           fsr0l	equ	0xFE9
  9971                           wreg	equ	0xFE8
  9972                           indf2	equ	0xFDF
  9973                           postinc2	equ	0xFDE
  9974                           postdec2	equ	0xFDD
  9975                           plusw2	equ	0xFDB
  9976                           fsr2h	equ	0xFDA
  9977                           fsr2l	equ	0xFD9
  9978                           status	equ	0xFD8
  9979                           
  9980 ;; *************** function _OSCILLATOR_Initialize *****************
  9981 ;; Defined at:
  9982 ;;		line 125 in file "mcc_generated_files/mcc.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9996 ;;      Params:         0       0       0       0       0       0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0
  9999 ;;      Totals:         0       0       0       0       0       0       0
 10000 ;;Total ram usage:        0 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    4
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_SYSTEM_Initialize
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           	psect	text47
 10011  0031A2                     __ptext47:
 10012                           	opt stack 0
 10013  0031A2                     _OSCILLATOR_Initialize:
 10014                           	opt stack 25
 10015                           
 10016                           ;mcc.c: 128: OSCCON = 0x72;
 10017                           
 10018                           ; BSR set to: 15
 10019                           ;incstack = 0
 10020  0031A2  0E72               	movlw	114
 10021  0031A4  6ED3               	movwf	4051,c	;volatile
 10022                           
 10023                           ;mcc.c: 130: OSCCON2 = 0x04;
 10024  0031A6  0E04               	movlw	4
 10025  0031A8  6ED2               	movwf	4050,c	;volatile
 10026                           
 10027                           ;mcc.c: 132: OSCTUNE = 0x00;
 10028  0031AA  0E00               	movlw	0
 10029  0031AC  6E9B               	movwf	3995,c	;volatile
 10030  0031AE  0012               	return		;funcret
 10031  0031B0                     __end_of_OSCILLATOR_Initialize:
 10032                           	opt stack 0
 10033                           tosu	equ	0xFFF
 10034                           tosh	equ	0xFFE
 10035                           tosl	equ	0xFFD
 10036                           pclath	equ	0xFFA
 10037                           tblptru	equ	0xFF8
 10038                           tblptrh	equ	0xFF7
 10039                           tblptrl	equ	0xFF6
 10040                           tablat	equ	0xFF5
 10041                           prodh	equ	0xFF4
 10042                           prodl	equ	0xFF3
 10043                           intcon	equ	0xFF2
 10044                           intcon2	equ	0xFF1
 10045                           indf0	equ	0xFEF
 10046                           postinc0	equ	0xFEE
 10047                           fsr0h	equ	0xFEA
 10048                           fsr0l	equ	0xFE9
 10049                           wreg	equ	0xFE8
 10050                           indf2	equ	0xFDF
 10051                           postinc2	equ	0xFDE
 10052                           postdec2	equ	0xFDD
 10053                           plusw2	equ	0xFDB
 10054                           fsr2h	equ	0xFDA
 10055                           fsr2l	equ	0xFD9
 10056                           status	equ	0xFD8
 10057                           
 10058 ;; *************** function _INTERRUPT_Initialize *****************
 10059 ;; Defined at:
 10060 ;;		line 8 in file "mcc_generated_files/interrupt_manager.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;		None
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;		None
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      void 
 10067 ;; Registers used:
 10068 ;;		None
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10074 ;;      Params:         0       0       0       0       0       0       0
 10075 ;;      Locals:         0       0       0       0       0       0       0
 10076 ;;      Temps:          0       0       0       0       0       0       0
 10077 ;;      Totals:         0       0       0       0       0       0       0
 10078 ;;Total ram usage:        0 bytes
 10079 ;; Hardware stack levels used:    1
 10080 ;; Hardware stack levels required when called:    4
 10081 ;; This function calls:
 10082 ;;		Nothing
 10083 ;; This function is called by:
 10084 ;;		_SYSTEM_Initialize
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           	psect	text48
 10089  003182                     __ptext48:
 10090                           	opt stack 0
 10091  003182                     _INTERRUPT_Initialize:
 10092                           	opt stack 25
 10093                           
 10094                           ;interrupt_manager.c: 11: RCONbits.IPEN = 0;
 10095                           
 10096                           ;incstack = 0
 10097  003182  9ED0               	bcf	4048,7,c	;volatile
 10098                           
 10099                           ;interrupt_manager.c: 16: IPR1bits.RC1IP = 0;
 10100  003184  9A9F               	bcf	3999,5,c	;volatile
 10101                           
 10102                           ;interrupt_manager.c: 18: IPR1bits.TX1IP = 0;
 10103  003186  989F               	bcf	3999,4,c	;volatile
 10104                           
 10105                           ;interrupt_manager.c: 20: INTCON2bits.TMR0IP = 0;
 10106  003188  94F1               	bcf	intcon2,2,c	;volatile
 10107                           
 10108                           ;interrupt_manager.c: 22: IPR1bits.ADIP = 0;
 10109  00318A  9C9F               	bcf	3999,6,c	;volatile
 10110                           
 10111                           ;interrupt_manager.c: 24: IPR1bits.SSP1IP = 0;
 10112  00318C  969F               	bcf	3999,3,c	;volatile
 10113                           
 10114                           ;interrupt_manager.c: 26: IPR2bits.BCL1IP = 0;
 10115  00318E  96A2               	bcf	4002,3,c	;volatile
 10116                           
 10117                           ;interrupt_manager.c: 27: IPR1bits.TMR2IP=0;
 10118  003190  929F               	bcf	3999,1,c	;volatile
 10119  003192  0012               	return		;funcret
 10120  003194                     __end_of_INTERRUPT_Initialize:
 10121                           	opt stack 0
 10122                           tosu	equ	0xFFF
 10123                           tosh	equ	0xFFE
 10124                           tosl	equ	0xFFD
 10125                           pclath	equ	0xFFA
 10126                           tblptru	equ	0xFF8
 10127                           tblptrh	equ	0xFF7
 10128                           tblptrl	equ	0xFF6
 10129                           tablat	equ	0xFF5
 10130                           prodh	equ	0xFF4
 10131                           prodl	equ	0xFF3
 10132                           intcon	equ	0xFF2
 10133                           intcon2	equ	0xFF1
 10134                           indf0	equ	0xFEF
 10135                           postinc0	equ	0xFEE
 10136                           fsr0h	equ	0xFEA
 10137                           fsr0l	equ	0xFE9
 10138                           wreg	equ	0xFE8
 10139                           indf2	equ	0xFDF
 10140                           postinc2	equ	0xFDE
 10141                           postdec2	equ	0xFDD
 10142                           plusw2	equ	0xFDB
 10143                           fsr2h	equ	0xFDA
 10144                           fsr2l	equ	0xFD9
 10145                           status	equ	0xFD8
 10146                           
 10147 ;; *************** function _I2C1_Initialize *****************
 10148 ;; Defined at:
 10149 ;;		line 151 in file "mcc_generated_files/i2c1.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;		None
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;		None
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      void 
 10156 ;; Registers used:
 10157 ;;		wreg, status,2, status,0
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10163 ;;      Params:         0       0       0       0       0       0       0
 10164 ;;      Locals:         0       0       0       0       0       0       0
 10165 ;;      Temps:          0       0       0       0       0       0       0
 10166 ;;      Totals:         0       0       0       0       0       0       0
 10167 ;;Total ram usage:        0 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; Hardware stack levels required when called:    4
 10170 ;; This function calls:
 10171 ;;		Nothing
 10172 ;; This function is called by:
 10173 ;;		_SYSTEM_Initialize
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text49
 10178  002E1C                     __ptext49:
 10179                           	opt stack 0
 10180  002E1C                     _I2C1_Initialize:
 10181                           	opt stack 25
 10182                           
 10183                           ;i2c1.c: 153: i2c1_object.pTrHead = i2c1_tr_queue;
 10184                           
 10185                           ;incstack = 0
 10186  002E1C  0EEB               	movlw	low _i2c1_tr_queue
 10187  002E1E  0100               	movlb	0	; () banked
 10188  002E20  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 10189  002E22  0E00               	movlw	high _i2c1_tr_queue
 10190  002E24  0100               	movlb	0	; () banked
 10191  002E26  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 10192                           
 10193                           ;i2c1.c: 154: i2c1_object.pTrTail = i2c1_tr_queue;
 10194  002E28  0EEB               	movlw	low _i2c1_tr_queue
 10195  002E2A  0100               	movlb	0	; () banked
 10196  002E2C  6FB8               	movwf	_i2c1_object& (0+255),b
 10197  002E2E  0E00               	movlw	high _i2c1_tr_queue
 10198  002E30  0100               	movlb	0	; () banked
 10199  002E32  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;i2c1.c: 155: i2c1_object.trStatus.s.empty = 1;
 10203  002E34  0100               	movlb	0	; () banked
 10204  002E36  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 10205                           
 10206                           ; BSR set to: 0
 10207                           ;i2c1.c: 156: i2c1_object.trStatus.s.full = 0;
 10208  002E38  0100               	movlb	0	; () banked
 10209  002E3A  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;i2c1.c: 158: i2c1_object.i2cErrors = 0;
 10213  002E3C  0E00               	movlw	0
 10214  002E3E  0100               	movlb	0	; () banked
 10215  002E40  6FBE               	movwf	(_i2c1_object+6)& (0+255),b
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;i2c1.c: 161: SSP1STAT = 0x80;
 10219  002E42  0E80               	movlw	128
 10220  002E44  6EC7               	movwf	4039,c	;volatile
 10221                           
 10222                           ; BSR set to: 0
 10223                           ;i2c1.c: 163: SSP1CON1 = 0x28;
 10224  002E46  0E28               	movlw	40
 10225  002E48  6EC6               	movwf	4038,c	;volatile
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;i2c1.c: 165: SSP1CON3 = 0x00;
 10229  002E4A  0E00               	movlw	0
 10230  002E4C  6ECB               	movwf	4043,c	;volatile
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;i2c1.c: 167: SSP1ADD = 0x03;
 10234  002E4E  0E03               	movlw	3
 10235  002E50  6EC8               	movwf	4040,c	;volatile
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;i2c1.c: 171: PIR1bits.SSP1IF = 0;
 10239  002E52  969E               	bcf	3998,3,c	;volatile
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;i2c1.c: 173: PIE1bits.SSP1IE = 1;
 10243  002E54  869D               	bsf	3997,3,c	;volatile
 10244                           
 10245                           ; BSR set to: 0
 10246  002E56  0012               	return		;funcret
 10247  002E58                     __end_of_I2C1_Initialize:
 10248                           	opt stack 0
 10249                           tosu	equ	0xFFF
 10250                           tosh	equ	0xFFE
 10251                           tosl	equ	0xFFD
 10252                           pclath	equ	0xFFA
 10253                           tblptru	equ	0xFF8
 10254                           tblptrh	equ	0xFF7
 10255                           tblptrl	equ	0xFF6
 10256                           tablat	equ	0xFF5
 10257                           prodh	equ	0xFF4
 10258                           prodl	equ	0xFF3
 10259                           intcon	equ	0xFF2
 10260                           intcon2	equ	0xFF1
 10261                           indf0	equ	0xFEF
 10262                           postinc0	equ	0xFEE
 10263                           fsr0h	equ	0xFEA
 10264                           fsr0l	equ	0xFE9
 10265                           wreg	equ	0xFE8
 10266                           indf2	equ	0xFDF
 10267                           postinc2	equ	0xFDE
 10268                           postdec2	equ	0xFDD
 10269                           plusw2	equ	0xFDB
 10270                           fsr2h	equ	0xFDA
 10271                           fsr2l	equ	0xFD9
 10272                           status	equ	0xFD8
 10273                           
 10274 ;; *************** function _EUSART1_Initialize *****************
 10275 ;; Defined at:
 10276 ;;		line 21 in file "UART.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;		None
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;		None
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  1    wreg      void 
 10283 ;; Registers used:
 10284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10290 ;;      Params:         0       0       0       0       0       0       0
 10291 ;;      Locals:         0       0       0       0       0       0       0
 10292 ;;      Temps:          0       0       0       0       0       0       0
 10293 ;;      Totals:         0       0       0       0       0       0       0
 10294 ;;Total ram usage:        0 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    6
 10297 ;; This function calls:
 10298 ;;		_UART_buff_init
 10299 ;; This function is called by:
 10300 ;;		_SYSTEM_Initialize
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text50
 10305  002E58                     __ptext50:
 10306                           	opt stack 0
 10307  002E58                     _EUSART1_Initialize:
 10308                           	opt stack 23
 10309                           
 10310                           ;UART.c: 23: PIE1bits.RC1IE = 0;
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;incstack = 0
 10314  002E58  9A9D               	bcf	3997,5,c	;volatile
 10315                           
 10316                           ;UART.c: 24: PIE1bits.TX1IE = 0;
 10317  002E5A  989D               	bcf	3997,4,c	;volatile
 10318                           
 10319                           ;UART.c: 29: BAUD1CON = 0x48;
 10320  002E5C  0E48               	movlw	72
 10321  002E5E  6EB8               	movwf	4024,c	;volatile
 10322                           
 10323                           ;UART.c: 32: RC1STA = 0x98;
 10324  002E60  0E98               	movlw	152
 10325  002E62  6EAB               	movwf	4011,c	;volatile
 10326                           
 10327                           ;UART.c: 35: TX1STA = 0x26;
 10328  002E64  0E26               	movlw	38
 10329  002E66  6EAC               	movwf	4012,c	;volatile
 10330                           
 10331                           ;UART.c: 38: SPBRG1 = (((16000000/38400)/4)-1);
 10332  002E68  0E67               	movlw	103
 10333  002E6A  6EAF               	movwf	4015,c	;volatile
 10334                           
 10335                           ;UART.c: 41: SPBRGH1 = 0x00;
 10336  002E6C  0E00               	movlw	0
 10337  002E6E  6EB0               	movwf	4016,c	;volatile
 10338                           
 10339                           ;UART.c: 44: TXREG1 = 0x00;
 10340  002E70  0E00               	movlw	0
 10341  002E72  6EAD               	movwf	4013,c	;volatile
 10342                           
 10343                           ;UART.c: 47: RCREG1 = 0x00;
 10344  002E74  0E00               	movlw	0
 10345  002E76  6EAE               	movwf	4014,c	;volatile
 10346                           
 10347                           ;UART.c: 49: UART_buff_init(&input_buffer);
 10348  002E78  0E00               	movlw	low _input_buffer
 10349  002E7A  6E23               	movwf	UART_buff_init@_this,c
 10350  002E7C  0E04               	movlw	high _input_buffer
 10351  002E7E  6E24               	movwf	UART_buff_init@_this+1,c
 10352  002E80  EC5F  F018         	call	_UART_buff_init	;wreg free
 10353                           
 10354                           ;UART.c: 50: UART_buff_init(&output_buffer);
 10355  002E84  0E00               	movlw	low _output_buffer
 10356  002E86  6E23               	movwf	UART_buff_init@_this,c
 10357  002E88  0E05               	movlw	high _output_buffer
 10358  002E8A  6E24               	movwf	UART_buff_init@_this+1,c
 10359  002E8C  EC5F  F018         	call	_UART_buff_init	;wreg free
 10360                           
 10361                           ;UART.c: 52: PIE1bits.RC1IE = 1;
 10362  002E90  8A9D               	bsf	3997,5,c	;volatile
 10363  002E92  0012               	return		;funcret
 10364  002E94                     __end_of_EUSART1_Initialize:
 10365                           	opt stack 0
 10366                           tosu	equ	0xFFF
 10367                           tosh	equ	0xFFE
 10368                           tosl	equ	0xFFD
 10369                           pclath	equ	0xFFA
 10370                           tblptru	equ	0xFF8
 10371                           tblptrh	equ	0xFF7
 10372                           tblptrl	equ	0xFF6
 10373                           tablat	equ	0xFF5
 10374                           prodh	equ	0xFF4
 10375                           prodl	equ	0xFF3
 10376                           intcon	equ	0xFF2
 10377                           intcon2	equ	0xFF1
 10378                           indf0	equ	0xFEF
 10379                           postinc0	equ	0xFEE
 10380                           fsr0h	equ	0xFEA
 10381                           fsr0l	equ	0xFE9
 10382                           wreg	equ	0xFE8
 10383                           indf2	equ	0xFDF
 10384                           postinc2	equ	0xFDE
 10385                           postdec2	equ	0xFDD
 10386                           plusw2	equ	0xFDB
 10387                           fsr2h	equ	0xFDA
 10388                           fsr2l	equ	0xFD9
 10389                           status	equ	0xFD8
 10390                           
 10391 ;; *************** function _UART_buff_init *****************
 10392 ;; Defined at:
 10393 ;;		line 56 in file "UART.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  _this           2   34[COMRAM] PTR struct UART_ring_buf
 10396 ;;		 -> output_buffer(206), input_buffer(206), 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10408 ;;      Params:         2       0       0       0       0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0
 10411 ;;      Totals:         2       0       0       0       0       0       0
 10412 ;;Total ram usage:        2 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    5
 10415 ;; This function calls:
 10416 ;;		_memset
 10417 ;; This function is called by:
 10418 ;;		_EUSART1_Initialize
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text51
 10423  0030BE                     __ptext51:
 10424                           	opt stack 0
 10425  0030BE                     _UART_buff_init:
 10426                           	opt stack 23
 10427                           
 10428                           ;UART.c: 65: memset(_this, 0, sizeof (*_this));
 10429                           
 10430                           ;incstack = 0
 10431  0030BE  C023  F01B         	movff	UART_buff_init@_this,memset@p1
 10432  0030C2  C024  F01C         	movff	UART_buff_init@_this+1,memset@p1+1
 10433  0030C6  0E00               	movlw	0
 10434  0030C8  6E1E               	movwf	memset@c+1,c
 10435  0030CA  0E00               	movlw	0
 10436  0030CC  6E1D               	movwf	memset@c,c
 10437  0030CE  0E00               	movlw	0
 10438  0030D0  6E20               	movwf	memset@n+1,c
 10439  0030D2  0ECE               	movlw	206
 10440  0030D4  6E1F               	movwf	memset@n,c
 10441  0030D6  ECB0  F017         	call	_memset	;wreg free
 10442  0030DA  0012               	return		;funcret
 10443  0030DC                     __end_of_UART_buff_init:
 10444                           	opt stack 0
 10445                           tosu	equ	0xFFF
 10446                           tosh	equ	0xFFE
 10447                           tosl	equ	0xFFD
 10448                           pclath	equ	0xFFA
 10449                           tblptru	equ	0xFF8
 10450                           tblptrh	equ	0xFF7
 10451                           tblptrl	equ	0xFF6
 10452                           tablat	equ	0xFF5
 10453                           prodh	equ	0xFF4
 10454                           prodl	equ	0xFF3
 10455                           intcon	equ	0xFF2
 10456                           intcon2	equ	0xFF1
 10457                           indf0	equ	0xFEF
 10458                           postinc0	equ	0xFEE
 10459                           fsr0h	equ	0xFEA
 10460                           fsr0l	equ	0xFE9
 10461                           wreg	equ	0xFE8
 10462                           indf2	equ	0xFDF
 10463                           postinc2	equ	0xFDE
 10464                           postdec2	equ	0xFDD
 10465                           plusw2	equ	0xFDB
 10466                           fsr2h	equ	0xFDA
 10467                           fsr2l	equ	0xFD9
 10468                           status	equ	0xFD8
 10469                           
 10470 ;; *************** function _memset *****************
 10471 ;; Defined at:
 10472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  p1              2   26[COMRAM] PTR void 
 10475 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10476 ;;  c               2   28[COMRAM] int 
 10477 ;;  n               2   30[COMRAM] unsigned int 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;  p               2   32[COMRAM] PTR unsigned char 
 10480 ;;		 -> output_buffer(206), input_buffer(206), ring_buffer(206), 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  2   26[COMRAM] PTR void 
 10483 ;; Registers used:
 10484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10490 ;;      Params:         6       0       0       0       0       0       0
 10491 ;;      Locals:         2       0       0       0       0       0       0
 10492 ;;      Temps:          0       0       0       0       0       0       0
 10493 ;;      Totals:         8       0       0       0       0       0       0
 10494 ;;Total ram usage:        8 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    4
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_FastTransfer_buffer_flush
 10501 ;;		_UART_buff_init
 10502 ;;		_UART_buff_flush
 10503 ;; This function uses a non-reentrant model
 10504 ;;
 10505                           
 10506                           	psect	text52
 10507  002F60                     __ptext52:
 10508                           	opt stack 0
 10509  002F60                     _memset:
 10510                           	opt stack 22
 10511                           
 10512                           ;incstack = 0
 10513  002F60  C01B  F021         	movff	memset@p1,memset@p
 10514  002F64  C01C  F022         	movff	memset@p1+1,memset@p+1
 10515  002F68  D008               	goto	l6136
 10516  002F6A                     l6132:
 10517  002F6A  C021  FFD9         	movff	memset@p,fsr2l
 10518  002F6E  C022  FFDA         	movff	memset@p+1,fsr2h
 10519  002F72  C01D  FFDF         	movff	memset@c,indf2
 10520  002F76  4A21               	infsnz	memset@p,f,c
 10521  002F78  2A22               	incf	memset@p+1,f,c
 10522  002F7A                     l6136:
 10523  002F7A  061F               	decf	memset@n,f,c
 10524  002F7C  A0D8               	btfss	status,0,c
 10525  002F7E  0620               	decf	memset@n+1,f,c
 10526  002F80  281F               	incf	memset@n,w,c
 10527  002F82  E1F3               	bnz	l6132
 10528  002F84  2820               	incf	memset@n+1,w,c
 10529  002F86  B4D8               	btfsc	status,2,c
 10530  002F88  0012               	return	
 10531  002F8A  D7EF               	goto	l6132
 10532  002F8C                     __end_of_memset:
 10533                           	opt stack 0
 10534                           tosu	equ	0xFFF
 10535                           tosh	equ	0xFFE
 10536                           tosl	equ	0xFFD
 10537                           pclath	equ	0xFFA
 10538                           tblptru	equ	0xFF8
 10539                           tblptrh	equ	0xFF7
 10540                           tblptrl	equ	0xFF6
 10541                           tablat	equ	0xFF5
 10542                           prodh	equ	0xFF4
 10543                           prodl	equ	0xFF3
 10544                           intcon	equ	0xFF2
 10545                           intcon2	equ	0xFF1
 10546                           indf0	equ	0xFEF
 10547                           postinc0	equ	0xFEE
 10548                           fsr0h	equ	0xFEA
 10549                           fsr0l	equ	0xFE9
 10550                           wreg	equ	0xFE8
 10551                           indf2	equ	0xFDF
 10552                           postinc2	equ	0xFDE
 10553                           postdec2	equ	0xFDD
 10554                           plusw2	equ	0xFDB
 10555                           fsr2h	equ	0xFDA
 10556                           fsr2l	equ	0xFD9
 10557                           status	equ	0xFD8
 10558                           
 10559 ;; *************** function _ADC_Initialize *****************
 10560 ;; Defined at:
 10561 ;;		line 59 in file "mcc_generated_files/adc.c"
 10562 ;; Parameters:    Size  Location     Type
 10563 ;;		None
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;		None
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1    wreg      void 
 10568 ;; Registers used:
 10569 ;;		wreg, status,2
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10575 ;;      Params:         0       0       0       0       0       0       0
 10576 ;;      Locals:         0       0       0       0       0       0       0
 10577 ;;      Temps:          0       0       0       0       0       0       0
 10578 ;;      Totals:         0       0       0       0       0       0       0
 10579 ;;Total ram usage:        0 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:    4
 10582 ;; This function calls:
 10583 ;;		Nothing
 10584 ;; This function is called by:
 10585 ;;		_SYSTEM_Initialize
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           	psect	text53
 10590  003116                     __ptext53:
 10591                           	opt stack 0
 10592  003116                     _ADC_Initialize:
 10593                           	opt stack 25
 10594                           
 10595                           ;adc.c: 64: ADCON0 = 0x01;
 10596                           
 10597                           ;incstack = 0
 10598  003116  0E01               	movlw	1
 10599  003118  6EC2               	movwf	4034,c	;volatile
 10600                           
 10601                           ;adc.c: 67: ADCON1 = 0x80;
 10602  00311A  0E80               	movlw	128
 10603  00311C  6EC1               	movwf	4033,c	;volatile
 10604                           
 10605                           ;adc.c: 70: ADCON2 = 0x05;
 10606  00311E  0E05               	movlw	5
 10607  003120  6EC0               	movwf	4032,c	;volatile
 10608                           
 10609                           ;adc.c: 73: ADRESL = 0x00;
 10610  003122  0E00               	movlw	0
 10611  003124  6EC3               	movwf	4035,c	;volatile
 10612                           
 10613                           ;adc.c: 76: ADRESH = 0x00;
 10614  003126  0E00               	movlw	0
 10615  003128  6EC4               	movwf	4036,c	;volatile
 10616                           
 10617                           ;adc.c: 79: PIE1bits.ADIE = 1;
 10618  00312A  8C9D               	bsf	3997,6,c	;volatile
 10619  00312C  0012               	return		;funcret
 10620  00312E                     __end_of_ADC_Initialize:
 10621                           	opt stack 0
 10622                           tosu	equ	0xFFF
 10623                           tosh	equ	0xFFE
 10624                           tosl	equ	0xFFD
 10625                           pclath	equ	0xFFA
 10626                           tblptru	equ	0xFF8
 10627                           tblptrh	equ	0xFF7
 10628                           tblptrl	equ	0xFF6
 10629                           tablat	equ	0xFF5
 10630                           prodh	equ	0xFF4
 10631                           prodl	equ	0xFF3
 10632                           intcon	equ	0xFF2
 10633                           intcon2	equ	0xFF1
 10634                           indf0	equ	0xFEF
 10635                           postinc0	equ	0xFEE
 10636                           fsr0h	equ	0xFEA
 10637                           fsr0l	equ	0xFE9
 10638                           wreg	equ	0xFE8
 10639                           indf2	equ	0xFDF
 10640                           postinc2	equ	0xFDE
 10641                           postdec2	equ	0xFDD
 10642                           plusw2	equ	0xFDB
 10643                           fsr2h	equ	0xFDA
 10644                           fsr2l	equ	0xFD9
 10645                           status	equ	0xFD8
 10646                           
 10647 ;; *************** function _LEDwriteDisplay *****************
 10648 ;; Defined at:
 10649 ;;		line 116 in file "LED_BarGraph.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  i2c_addr        1    wreg     unsigned char 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;  i2c_addr        1   20[BANK1 ] unsigned char 
 10654 ;;  writeBuffer    20    0[BANK1 ] unsigned char [20]
 10655 ;;  timeOut         2   21[BANK1 ] unsigned int 
 10656 ;;  status          1   23[BANK1 ] enum E7758
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10666 ;;      Params:         0       0       0       0       0       0       0
 10667 ;;      Locals:         0       0      24       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0
 10669 ;;      Totals:         0       0      24       0       0       0       0
 10670 ;;Total ram usage:       24 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:    6
 10673 ;; This function calls:
 10674 ;;		_I2C1_MasterWrite
 10675 ;; This function is called by:
 10676 ;;		_main
 10677 ;;		_TestBarGraph
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text54
 10682  00153E                     __ptext54:
 10683                           	opt stack 0
 10684  00153E                     _LEDwriteDisplay:
 10685                           	opt stack 24
 10686                           
 10687                           ;incstack = 0
 10688                           ;LEDwriteDisplay@i2c_addr stored from wreg
 10689  00153E  0101               	movlb	1	; () banked
 10690  001540  6F4D               	movwf	LEDwriteDisplay@i2c_addr& (0+255),b
 10691                           
 10692                           ;LED_BarGraph.c: 117: uint8_t writeBuffer[20];
 10693                           ;LED_BarGraph.c: 118: uint16_t timeOut;
 10694                           ;LED_BarGraph.c: 119: writeBuffer[0] = 0x00;
 10695  001542  0E00               	movlw	0
 10696  001544  0101               	movlb	1	; () banked
 10697  001546  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10698                           
 10699                           ;LED_BarGraph.c: 120: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10700  001548  0E02               	movlw	2
 10701  00154A  0101               	movlb	1	; () banked
 10702  00154C  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10703                           
 10704                           ;LED_BarGraph.c: 122: timeOut = 0;
 10705  00154E  0E00               	movlw	0
 10706  001550  0101               	movlb	1	; () banked
 10707  001552  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10708  001554  0E00               	movlw	0
 10709  001556  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10710                           
 10711                           ;LED_BarGraph.c: 123: while (status != I2C1_MESSAGE_FAIL) {
 10712  001558  D02F               	goto	l7204
 10713  00155A                     l7184:
 10714                           
 10715                           ; BSR set to: 1
 10716                           ;LED_BarGraph.c: 125: I2C1_MasterWrite(&writeBuffer,
 10717                           ;LED_BarGraph.c: 126: 1,
 10718                           ;LED_BarGraph.c: 127: i2c_addr,
 10719                           ;LED_BarGraph.c: 128: &status);
 10720  00155A  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10721  00155C  0100               	movlb	0	; () banked
 10722  00155E  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10723  001560  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10724  001562  0100               	movlb	0	; () banked
 10725  001564  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10726  001566  0E00               	movlw	0
 10727  001568  0100               	movlb	0	; () banked
 10728  00156A  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10729  00156C  0E01               	movlw	1
 10730  00156E  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10731  001570  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10732  001574  0100               	movlb	0	; () banked
 10733  001576  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10734  001578  0E50               	movlw	low LEDwriteDisplay@status
 10735  00157A  0100               	movlb	0	; () banked
 10736  00157C  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10737  00157E  0E01               	movlw	high LEDwriteDisplay@status
 10738  001580  0100               	movlb	0	; () banked
 10739  001582  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10740  001584  EC0B  F016         	call	_I2C1_MasterWrite	;wreg free
 10741  001588                     l7186:
 10742  001588  0E02               	movlw	2
 10743  00158A  0101               	movlb	1	; () banked
 10744  00158C  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10745  00158E  B4D8               	btfsc	status,2,c
 10746  001590  D7FB               	goto	l7186
 10747                           
 10748                           ; BSR set to: 1
 10749                           ;LED_BarGraph.c: 133: if (status == I2C1_MESSAGE_COMPLETE)
 10750                           
 10751                           ; BSR set to: 1
 10752  001592  0101               	movlb	1	; () banked
 10753  001594  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10754  001596  0101               	movlb	1	; () banked
 10755  001598  B4D8               	btfsc	status,2,c
 10756  00159A  D012               	goto	l7206
 10757                           
 10758                           ; BSR set to: 1
 10759                           ;LED_BarGraph.c: 135: if (timeOut == 4)
 10760                           
 10761                           ; BSR set to: 1
 10762                           
 10763                           ; BSR set to: 1
 10764                           ;LED_BarGraph.c: 134: break;
 10765  00159C  0E04               	movlw	4
 10766  00159E  0101               	movlb	1	; () banked
 10767  0015A0  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10768  0015A2  0101               	movlb	1	; () banked
 10769  0015A4  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10770  0015A6  B4D8               	btfsc	status,2,c
 10771  0015A8  D00B               	goto	l7206
 10772                           
 10773                           ; BSR set to: 1
 10774                           ;LED_BarGraph.c: 137: if (status == I2C1_MESSAGE_FAIL)
 10775                           
 10776                           ; BSR set to: 1
 10777                           
 10778                           ; BSR set to: 1
 10779                           ;LED_BarGraph.c: 136: break;
 10780  0015AA  0101               	movlb	1	; () banked
 10781  0015AC  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10782  0015AE  B4D8               	btfsc	status,2,c
 10783  0015B0  D007               	goto	l7206
 10784                           
 10785                           ; BSR set to: 1
 10786                           ;LED_BarGraph.c: 139: else
 10787                           ;LED_BarGraph.c: 140: timeOut++;
 10788                           
 10789                           ; BSR set to: 1
 10790                           
 10791                           ; BSR set to: 1
 10792                           
 10793                           ; BSR set to: 1
 10794                           ;LED_BarGraph.c: 138: break;
 10795  0015B2  0101               	movlb	1	; () banked
 10796  0015B4  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10797  0015B6  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10798  0015B8                     l7204:
 10799                           
 10800                           ; BSR set to: 1
 10801  0015B8  0101               	movlb	1	; () banked
 10802  0015BA  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10803  0015BC  A4D8               	btfss	status,2,c
 10804  0015BE  D7CD               	goto	l7184
 10805  0015C0                     l7206:
 10806                           
 10807                           ; BSR set to: 1
 10808                           ;LED_BarGraph.c: 141: }
 10809                           ;LED_BarGraph.c: 142: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10810  0015C0  0E02               	movlw	2
 10811  0015C2  0101               	movlb	1	; () banked
 10812  0015C4  6F50               	movwf	LEDwriteDisplay@status& (0+255),b
 10813                           
 10814                           ;LED_BarGraph.c: 147: writeBuffer[0] = 0;
 10815  0015C6  0E00               	movlw	0
 10816  0015C8  0101               	movlb	1	; () banked
 10817  0015CA  6F39               	movwf	LEDwriteDisplay@writeBuffer& (0+255),b
 10818                           
 10819                           ; BSR set to: 1
 10820                           ;LED_BarGraph.c: 148: writeBuffer[1] = displaybuffer[0] & 0xFF;
 10821  0015CC  C060  F13A         	movff	_displaybuffer,LEDwriteDisplay@writeBuffer+1
 10822                           
 10823                           ; BSR set to: 1
 10824                           ;LED_BarGraph.c: 149: writeBuffer[2] = displaybuffer[0] >> 8;
 10825  0015D0  C061  F13B         	movff	_displaybuffer+1,LEDwriteDisplay@writeBuffer+2
 10826                           
 10827                           ; BSR set to: 1
 10828                           ;LED_BarGraph.c: 150: writeBuffer[3] = displaybuffer[1] & 0xFF;
 10829  0015D4  C064  F13C         	movff	_displaybuffer+4,LEDwriteDisplay@writeBuffer+3
 10830                           
 10831                           ; BSR set to: 1
 10832                           ;LED_BarGraph.c: 151: writeBuffer[4] = displaybuffer[1] >> 8;
 10833  0015D8  C065  F13D         	movff	_displaybuffer+5,LEDwriteDisplay@writeBuffer+4
 10834                           
 10835                           ; BSR set to: 1
 10836                           ;LED_BarGraph.c: 152: writeBuffer[5] = displaybuffer[2] & 0xFF;
 10837  0015DC  C068  F13E         	movff	_displaybuffer+8,LEDwriteDisplay@writeBuffer+5
 10838                           
 10839                           ; BSR set to: 1
 10840                           ;LED_BarGraph.c: 153: writeBuffer[6] = displaybuffer[2] >> 8;
 10841  0015E0  C069  F13F         	movff	_displaybuffer+9,LEDwriteDisplay@writeBuffer+6
 10842                           
 10843                           ; BSR set to: 1
 10844                           ;LED_BarGraph.c: 154: writeBuffer[7] = displaybuffer[3] & 0xFF;
 10845  0015E4  C06C  F140         	movff	_displaybuffer+12,LEDwriteDisplay@writeBuffer+7
 10846                           
 10847                           ; BSR set to: 1
 10848                           ;LED_BarGraph.c: 155: writeBuffer[8] = displaybuffer[3] >> 8;
 10849  0015E8  C06D  F141         	movff	_displaybuffer+13,LEDwriteDisplay@writeBuffer+8
 10850                           
 10851                           ; BSR set to: 1
 10852                           ;LED_BarGraph.c: 156: writeBuffer[9] = displaybuffer[4] & 0xFF;
 10853  0015EC  C070  F142         	movff	_displaybuffer+16,LEDwriteDisplay@writeBuffer+9
 10854                           
 10855                           ; BSR set to: 1
 10856                           ;LED_BarGraph.c: 157: writeBuffer[10] = displaybuffer[4] >> 8;
 10857  0015F0  C071  F143         	movff	_displaybuffer+17,LEDwriteDisplay@writeBuffer+10
 10858                           
 10859                           ; BSR set to: 1
 10860                           ;LED_BarGraph.c: 158: writeBuffer[11] = displaybuffer[5] & 0xFF;
 10861  0015F4  C074  F144         	movff	_displaybuffer+20,LEDwriteDisplay@writeBuffer+11
 10862                           
 10863                           ; BSR set to: 1
 10864                           ;LED_BarGraph.c: 159: writeBuffer[12] = displaybuffer[5] >> 8;
 10865  0015F8  C075  F145         	movff	_displaybuffer+21,LEDwriteDisplay@writeBuffer+12
 10866                           
 10867                           ; BSR set to: 1
 10868                           ;LED_BarGraph.c: 160: writeBuffer[13] = displaybuffer[6] & 0xFF;
 10869  0015FC  C078  F146         	movff	_displaybuffer+24,LEDwriteDisplay@writeBuffer+13
 10870                           
 10871                           ; BSR set to: 1
 10872                           ;LED_BarGraph.c: 161: writeBuffer[14] = displaybuffer[6] >> 8;
 10873  001600  C079  F147         	movff	_displaybuffer+25,LEDwriteDisplay@writeBuffer+14
 10874                           
 10875                           ; BSR set to: 1
 10876                           ;LED_BarGraph.c: 162: writeBuffer[15] = displaybuffer[7] & 0xFF;
 10877  001604  C07C  F148         	movff	_displaybuffer+28,LEDwriteDisplay@writeBuffer+15
 10878                           
 10879                           ; BSR set to: 1
 10880                           ;LED_BarGraph.c: 163: writeBuffer[16] = displaybuffer[7] >> 8;
 10881  001608  C07D  F149         	movff	_displaybuffer+29,LEDwriteDisplay@writeBuffer+16
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;LED_BarGraph.c: 164: writeBuffer[17] = displaybuffer[8] & 0xFF;
 10885  00160C  C080  F14A         	movff	_displaybuffer+32,LEDwriteDisplay@writeBuffer+17
 10886                           
 10887                           ; BSR set to: 1
 10888                           ;LED_BarGraph.c: 165: writeBuffer[18] = displaybuffer[8] >> 8;
 10889  001610  C081  F14B         	movff	_displaybuffer+33,LEDwriteDisplay@writeBuffer+18
 10890                           
 10891                           ;LED_BarGraph.c: 167: timeOut = 0;
 10892  001614  0E00               	movlw	0
 10893  001616  0101               	movlb	1	; () banked
 10894  001618  6F4F               	movwf	(LEDwriteDisplay@timeOut+1)& (0+255),b
 10895  00161A  0E00               	movlw	0
 10896  00161C  6F4E               	movwf	LEDwriteDisplay@timeOut& (0+255),b
 10897                           
 10898                           ;LED_BarGraph.c: 168: while (status != I2C1_MESSAGE_FAIL) {
 10899  00161E  D02F               	goto	l7264
 10900  001620                     l7244:
 10901                           
 10902                           ; BSR set to: 1
 10903                           ;LED_BarGraph.c: 170: I2C1_MasterWrite(&writeBuffer,
 10904                           ;LED_BarGraph.c: 171: 17,
 10905                           ;LED_BarGraph.c: 172: i2c_addr,
 10906                           ;LED_BarGraph.c: 173: &status);
 10907  001620  0E39               	movlw	low LEDwriteDisplay@writeBuffer
 10908  001622  0100               	movlb	0	; () banked
 10909  001624  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 10910  001626  0E01               	movlw	high LEDwriteDisplay@writeBuffer
 10911  001628  0100               	movlb	0	; () banked
 10912  00162A  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 10913  00162C  0E00               	movlw	0
 10914  00162E  0100               	movlb	0	; () banked
 10915  001630  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 10916  001632  0E11               	movlw	17
 10917  001634  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 10918  001636  C14D  F0F6         	movff	LEDwriteDisplay@i2c_addr,I2C1_MasterWrite@address
 10919  00163A  0100               	movlb	0	; () banked
 10920  00163C  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 10921  00163E  0E50               	movlw	low LEDwriteDisplay@status
 10922  001640  0100               	movlb	0	; () banked
 10923  001642  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 10924  001644  0E01               	movlw	high LEDwriteDisplay@status
 10925  001646  0100               	movlb	0	; () banked
 10926  001648  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 10927  00164A  EC0B  F016         	call	_I2C1_MasterWrite	;wreg free
 10928  00164E                     l7246:
 10929  00164E  0E02               	movlw	2
 10930  001650  0101               	movlb	1	; () banked
 10931  001652  1950               	xorwf	LEDwriteDisplay@status& (0+255),w,b
 10932  001654  B4D8               	btfsc	status,2,c
 10933  001656  D7FB               	goto	l7246
 10934                           
 10935                           ; BSR set to: 1
 10936                           ;LED_BarGraph.c: 178: if (status == I2C1_MESSAGE_COMPLETE)
 10937                           
 10938                           ; BSR set to: 1
 10939  001658  0101               	movlb	1	; () banked
 10940  00165A  5150               	movf	LEDwriteDisplay@status& (0+255),w,b
 10941  00165C  0101               	movlb	1	; () banked
 10942  00165E  B4D8               	btfsc	status,2,c
 10943  001660  0012               	return	
 10944                           
 10945                           ; BSR set to: 1
 10946                           ;LED_BarGraph.c: 180: if (timeOut == 4)
 10947                           
 10948                           ; BSR set to: 1
 10949                           
 10950                           ; BSR set to: 1
 10951                           ;LED_BarGraph.c: 179: break;
 10952  001662  0E04               	movlw	4
 10953  001664  0101               	movlb	1	; () banked
 10954  001666  194E               	xorwf	LEDwriteDisplay@timeOut& (0+255),w,b
 10955  001668  0101               	movlb	1	; () banked
 10956  00166A  114F               	iorwf	(LEDwriteDisplay@timeOut+1)& (0+255),w,b
 10957  00166C  B4D8               	btfsc	status,2,c
 10958  00166E  0012               	return	
 10959                           
 10960                           ; BSR set to: 1
 10961                           ;LED_BarGraph.c: 182: if (status == I2C1_MESSAGE_FAIL)
 10962                           
 10963                           ; BSR set to: 1
 10964                           
 10965                           ; BSR set to: 1
 10966                           ;LED_BarGraph.c: 181: break;
 10967  001670  0101               	movlb	1	; () banked
 10968  001672  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10969  001674  B4D8               	btfsc	status,2,c
 10970  001676  0012               	return	
 10971                           
 10972                           ; BSR set to: 1
 10973                           ;LED_BarGraph.c: 184: else
 10974                           ;LED_BarGraph.c: 185: timeOut++;
 10975                           
 10976                           ; BSR set to: 1
 10977                           
 10978                           ; BSR set to: 1
 10979                           
 10980                           ; BSR set to: 1
 10981                           ;LED_BarGraph.c: 183: break;
 10982  001678  0101               	movlb	1	; () banked
 10983  00167A  4B4E               	infsnz	LEDwriteDisplay@timeOut& (0+255),f,b
 10984  00167C  2B4F               	incf	(LEDwriteDisplay@timeOut+1)& (0+255),f,b
 10985  00167E                     l7264:
 10986                           
 10987                           ; BSR set to: 1
 10988  00167E  0101               	movlb	1	; () banked
 10989  001680  0550               	decf	LEDwriteDisplay@status& (0+255),w,b
 10990  001682  B4D8               	btfsc	status,2,c
 10991  001684  0012               	return	
 10992  001686  D7CC               	goto	l7244
 10993  001688                     __end_of_LEDwriteDisplay:
 10994                           	opt stack 0
 10995                           tosu	equ	0xFFF
 10996                           tosh	equ	0xFFE
 10997                           tosl	equ	0xFFD
 10998                           pclath	equ	0xFFA
 10999                           tblptru	equ	0xFF8
 11000                           tblptrh	equ	0xFF7
 11001                           tblptrl	equ	0xFF6
 11002                           tablat	equ	0xFF5
 11003                           prodh	equ	0xFF4
 11004                           prodl	equ	0xFF3
 11005                           intcon	equ	0xFF2
 11006                           intcon2	equ	0xFF1
 11007                           indf0	equ	0xFEF
 11008                           postinc0	equ	0xFEE
 11009                           fsr0h	equ	0xFEA
 11010                           fsr0l	equ	0xFE9
 11011                           wreg	equ	0xFE8
 11012                           indf2	equ	0xFDF
 11013                           postinc2	equ	0xFDE
 11014                           postdec2	equ	0xFDD
 11015                           plusw2	equ	0xFDB
 11016                           fsr2h	equ	0xFDA
 11017                           fsr2l	equ	0xFD9
 11018                           status	equ	0xFD8
 11019                           
 11020 ;; *************** function _LEDsetValue *****************
 11021 ;; Defined at:
 11022 ;;		line 11 in file "LED_BarGraph.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;  value           2   16[BANK1 ] int 
 11025 ;;  color           2   18[BANK1 ] int 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  k               2   21[BANK1 ] int 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11037 ;;      Params:         0       0       4       0       0       0       0
 11038 ;;      Locals:         0       0       2       0       0       0       0
 11039 ;;      Temps:          0       0       1       0       0       0       0
 11040 ;;      Totals:         0       0       7       0       0       0       0
 11041 ;;Total ram usage:        7 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:    6
 11044 ;; This function calls:
 11045 ;;		_LEDsetBar
 11046 ;; This function is called by:
 11047 ;;		_main
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text55
 11052  0022B8                     __ptext55:
 11053                           	opt stack 0
 11054  0022B8                     _LEDsetValue:
 11055                           	opt stack 24
 11056                           
 11057                           ;LED_BarGraph.c: 12: if (value > 24) value = 24;
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;incstack = 0
 11061  0022B8  0101               	movlb	1	; () banked
 11062  0022BA  BF4A               	btfsc	(LEDsetValue@value+1)& (0+255),7,b
 11063  0022BC  D00D               	goto	l7164
 11064  0022BE  0101               	movlb	1	; () banked
 11065  0022C0  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11066  0022C2  E105               	bnz	u8190
 11067  0022C4  0E19               	movlw	25
 11068  0022C6  0101               	movlb	1	; () banked
 11069  0022C8  5D49               	subwf	LEDsetValue@value& (0+255),w,b
 11070  0022CA  A0D8               	btfss	status,0,c
 11071  0022CC  D005               	goto	l7164
 11072  0022CE                     u8190:
 11073                           
 11074                           ; BSR set to: 1
 11075  0022CE  0E00               	movlw	0
 11076  0022D0  0101               	movlb	1	; () banked
 11077  0022D2  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 11078  0022D4  0E18               	movlw	24
 11079  0022D6  6F49               	movwf	LEDsetValue@value& (0+255),b
 11080  0022D8                     l7164:
 11081                           
 11082                           ; BSR set to: 1
 11083                           ;LED_BarGraph.c: 13: if (value < 0) value = 0;
 11084  0022D8  0101               	movlb	1	; () banked
 11085  0022DA  AF4A               	btfss	(LEDsetValue@value+1)& (0+255),7,b
 11086  0022DC  D005               	goto	l617
 11087                           
 11088                           ; BSR set to: 1
 11089  0022DE  0E00               	movlw	0
 11090  0022E0  0101               	movlb	1	; () banked
 11091  0022E2  6F4A               	movwf	(LEDsetValue@value+1)& (0+255),b
 11092  0022E4  0E00               	movlw	0
 11093  0022E6  6F49               	movwf	LEDsetValue@value& (0+255),b
 11094  0022E8                     l617:
 11095                           
 11096                           ; BSR set to: 1
 11097                           ;LED_BarGraph.c: 14: int k;
 11098                           ;LED_BarGraph.c: 15: for (k = 0; k < 24; k++) {
 11099  0022E8  0E00               	movlw	0
 11100  0022EA  0101               	movlb	1	; () banked
 11101  0022EC  6F4F               	movwf	(LEDsetValue@k+1)& (0+255),b
 11102  0022EE  0E00               	movlw	0
 11103  0022F0  6F4E               	movwf	LEDsetValue@k& (0+255),b
 11104  0022F2                     l7168:
 11105                           
 11106                           ; BSR set to: 1
 11107  0022F2  0101               	movlb	1	; () banked
 11108  0022F4  BF4F               	btfsc	(LEDsetValue@k+1)& (0+255),7,b
 11109  0022F6  D008               	goto	l7172
 11110  0022F8  0101               	movlb	1	; () banked
 11111  0022FA  514F               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11112  0022FC  E12E               	bnz	l622
 11113  0022FE  0E18               	movlw	24
 11114  002300  0101               	movlb	1	; () banked
 11115  002302  5D4E               	subwf	LEDsetValue@k& (0+255),w,b
 11116  002304  B0D8               	btfsc	status,0,c
 11117  002306  0012               	return	
 11118  002308                     l7172:
 11119                           
 11120                           ; BSR set to: 1
 11121                           ;LED_BarGraph.c: 16: if (k < value){
 11122  002308  0101               	movlb	1	; () banked
 11123  00230A  5149               	movf	LEDsetValue@value& (0+255),w,b
 11124  00230C  0101               	movlb	1	; () banked
 11125  00230E  5D4E               	subwf	LEDsetValue@k& (0+255),w,b
 11126  002310  0101               	movlb	1	; () banked
 11127  002312  514F               	movf	(LEDsetValue@k+1)& (0+255),w,b
 11128  002314  0A80               	xorlw	128
 11129  002316  0101               	movlb	1	; () banked
 11130  002318  6F4D               	movwf	??_LEDsetValue& (0+255),b
 11131  00231A  0101               	movlb	1	; () banked
 11132  00231C  514A               	movf	(LEDsetValue@value+1)& (0+255),w,b
 11133  00231E  0A80               	xorlw	128
 11134  002320  0101               	movlb	1	; () banked
 11135  002322  594D               	subwfb	??_LEDsetValue& (0+255),w,b
 11136  002324  B0D8               	btfsc	status,0,c
 11137  002326  D00B               	goto	l7176
 11138                           
 11139                           ; BSR set to: 1
 11140                           ;LED_BarGraph.c: 18: LEDsetBar(k, color);}
 11141  002328  C14E  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11142  00232C  C14F  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11143  002330  C14B  F025         	movff	LEDsetValue@color,LEDsetBar@color
 11144  002334  C14C  F026         	movff	LEDsetValue@color+1,LEDsetBar@color+1
 11145  002338  EC97  F003         	call	_LEDsetBar	;wreg free
 11146  00233C  D00A               	goto	l7178
 11147  00233E                     l7176:
 11148                           
 11149                           ;LED_BarGraph.c: 19: else LEDsetBar(k, 0);
 11150  00233E  C14E  F023         	movff	LEDsetValue@k,LEDsetBar@bar
 11151  002342  C14F  F024         	movff	LEDsetValue@k+1,LEDsetBar@bar+1
 11152  002346  0E00               	movlw	0
 11153  002348  6E26               	movwf	LEDsetBar@color+1,c
 11154  00234A  0E00               	movlw	0
 11155  00234C  6E25               	movwf	LEDsetBar@color,c
 11156  00234E  EC97  F003         	call	_LEDsetBar	;wreg free
 11157  002352                     l7178:
 11158  002352  0101               	movlb	1	; () banked
 11159  002354  4B4E               	infsnz	LEDsetValue@k& (0+255),f,b
 11160  002356  2B4F               	incf	(LEDsetValue@k+1)& (0+255),f,b
 11161  002358  D7CC               	goto	l7168
 11162  00235A                     l622:
 11163                           
 11164                           ; BSR set to: 1
 11165  00235A  0012               	return		;funcret
 11166  00235C                     __end_of_LEDsetValue:
 11167                           	opt stack 0
 11168                           tosu	equ	0xFFF
 11169                           tosh	equ	0xFFE
 11170                           tosl	equ	0xFFD
 11171                           pclath	equ	0xFFA
 11172                           tblptru	equ	0xFF8
 11173                           tblptrh	equ	0xFF7
 11174                           tblptrl	equ	0xFF6
 11175                           tablat	equ	0xFF5
 11176                           prodh	equ	0xFF4
 11177                           prodl	equ	0xFF3
 11178                           intcon	equ	0xFF2
 11179                           intcon2	equ	0xFF1
 11180                           indf0	equ	0xFEF
 11181                           postinc0	equ	0xFEE
 11182                           fsr0h	equ	0xFEA
 11183                           fsr0l	equ	0xFE9
 11184                           wreg	equ	0xFE8
 11185                           indf2	equ	0xFDF
 11186                           postinc2	equ	0xFDE
 11187                           postdec2	equ	0xFDD
 11188                           plusw2	equ	0xFDB
 11189                           fsr2h	equ	0xFDA
 11190                           fsr2l	equ	0xFD9
 11191                           status	equ	0xFD8
 11192                           
 11193 ;; *************** function _LEDsetBar *****************
 11194 ;; Defined at:
 11195 ;;		line 195 in file "LED_BarGraph.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;  bar             2   34[COMRAM] int 
 11198 ;;  color           2   36[COMRAM] int 
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;  a               2   40[COMRAM] unsigned int 
 11201 ;;  c               2   38[COMRAM] unsigned int 
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11211 ;;      Params:         4       0       0       0       0       0       0
 11212 ;;      Locals:         4       0       0       0       0       0       0
 11213 ;;      Temps:          0       0      16       0       0       0       0
 11214 ;;      Totals:         8       0      16       0       0       0       0
 11215 ;;Total ram usage:       24 bytes
 11216 ;; Hardware stack levels used:    1
 11217 ;; Hardware stack levels required when called:    5
 11218 ;; This function calls:
 11219 ;;		___awdiv
 11220 ;; This function is called by:
 11221 ;;		_LEDsetValue
 11222 ;;		_TestBarGraph
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           	psect	text56
 11227  00072E                     __ptext56:
 11228                           	opt stack 0
 11229  00072E                     _LEDsetBar:
 11230                           	opt stack 24
 11231                           
 11232                           ;LED_BarGraph.c: 196: uint16_t a, c;
 11233                           ;LED_BarGraph.c: 198: if (bar < 12)
 11234                           
 11235                           ; BSR set to: 1
 11236                           ;incstack = 0
 11237  00072E  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11238  000730  D006               	goto	l6628
 11239  000732  5024               	movf	LEDsetBar@bar+1,w,c
 11240  000734  E10F               	bnz	l6630
 11241  000736  0E0C               	movlw	12
 11242  000738  5C23               	subwf	LEDsetBar@bar,w,c
 11243  00073A  B0D8               	btfsc	status,0,c
 11244  00073C  D00B               	goto	l6630
 11245  00073E                     l6628:
 11246                           
 11247                           ;LED_BarGraph.c: 199: c = bar / 4;
 11248  00073E  C023  F01B         	movff	LEDsetBar@bar,___awdiv@dividend
 11249  000742  C024  F01C         	movff	LEDsetBar@bar+1,___awdiv@dividend+1
 11250  000746  0E00               	movlw	0
 11251  000748  6E1E               	movwf	___awdiv@divisor+1,c
 11252  00074A  0E04               	movlw	4
 11253  00074C  6E1D               	movwf	___awdiv@divisor,c
 11254  00074E  ECB7  F013         	call	___awdiv	;wreg free
 11255  000752  D00C               	goto	L3
 11256  000754                     l6630:
 11257                           
 11258                           ;LED_BarGraph.c: 200: else
 11259                           ;LED_BarGraph.c: 201: c = (bar - 12) / 4;
 11260  000754  0EF4               	movlw	244
 11261  000756  2423               	addwf	LEDsetBar@bar,w,c
 11262  000758  6E1B               	movwf	___awdiv@dividend,c
 11263  00075A  0EFF               	movlw	255
 11264  00075C  2024               	addwfc	LEDsetBar@bar+1,w,c
 11265  00075E  6E1C               	movwf	___awdiv@dividend+1,c
 11266  000760  0E00               	movlw	0
 11267  000762  6E1E               	movwf	___awdiv@divisor+1,c
 11268  000764  0E04               	movlw	4
 11269  000766  6E1D               	movwf	___awdiv@divisor,c
 11270  000768  ECB7  F013         	call	___awdiv	;wreg free
 11271  00076C                     L3:
 11272  00076C  C01B  F027         	movff	?___awdiv,LEDsetBar@c
 11273  000770  C01C  F028         	movff	?___awdiv+1,LEDsetBar@c+1
 11274                           
 11275                           ;LED_BarGraph.c: 203: a = bar % 4;
 11276  000774  0E03               	movlw	3
 11277  000776  1423               	andwf	LEDsetBar@bar,w,c
 11278  000778  6E29               	movwf	LEDsetBar@a,c
 11279  00077A  6A2A               	clrf	LEDsetBar@a+1,c
 11280                           
 11281                           ;LED_BarGraph.c: 204: if (bar >= 12)
 11282  00077C  BE24               	btfsc	LEDsetBar@bar+1,7,c
 11283  00077E  D00A               	goto	l696
 11284  000780  5024               	movf	LEDsetBar@bar+1,w,c
 11285  000782  E104               	bnz	u7060
 11286  000784  0E0C               	movlw	12
 11287  000786  5C23               	subwf	LEDsetBar@bar,w,c
 11288  000788  A0D8               	btfss	status,0,c
 11289  00078A  D004               	goto	l696
 11290  00078C                     u7060:
 11291                           
 11292                           ;LED_BarGraph.c: 205: a += 4;
 11293  00078C  0E04               	movlw	4
 11294  00078E  2629               	addwf	LEDsetBar@a,f,c
 11295  000790  0E00               	movlw	0
 11296  000792  222A               	addwfc	LEDsetBar@a+1,f,c
 11297  000794                     l696:
 11298                           
 11299                           ;LED_BarGraph.c: 208: if (color == 1) {
 11300  000794  0425               	decf	LEDsetBar@color,w,c
 11301  000796  1026               	iorwf	LEDsetBar@color+1,w,c
 11302  000798  A4D8               	btfss	status,2,c
 11303  00079A  D07D               	goto	l6640
 11304                           
 11305                           ;LED_BarGraph.c: 210: displaybuffer[c] |= (1<<(a));
 11306  00079C  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11307  0007A0  0E01               	movlw	1
 11308  0007A2  0101               	movlb	1	; () banked
 11309  0007A4  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11310  0007A6  0E00               	movlw	0
 11311  0007A8  0101               	movlb	1	; () banked
 11312  0007AA  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11313  0007AC  0101               	movlb	1	; () banked
 11314  0007AE  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11315  0007B0  D004               	goto	u7084
 11316  0007B2                     u7085:
 11317  0007B2  90D8               	bcf	status,0,c
 11318  0007B4  0101               	movlb	1	; () banked
 11319  0007B6  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11320  0007B8  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11321  0007BA                     u7084:
 11322  0007BA  0101               	movlb	1	; () banked
 11323  0007BC  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11324  0007BE  D7F9               	goto	u7085
 11325  0007C0  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11326  0007C4  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11327  0007C8  0E00               	movlw	0
 11328  0007CA  0101               	movlb	1	; () banked
 11329  0007CC  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11330  0007CE  0EFF               	movlw	255
 11331  0007D0  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11332  0007D2  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11333  0007D4  0E60               	movlw	low _displaybuffer
 11334  0007D6  0101               	movlb	1	; () banked
 11335  0007D8  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11336  0007DA  0E00               	movlw	high _displaybuffer
 11337  0007DC  0101               	movlb	1	; () banked
 11338  0007DE  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11339  0007E0  90D8               	bcf	status,0,c
 11340  0007E2  3427               	rlcf	LEDsetBar@c,w,c
 11341  0007E4  6ED9               	movwf	fsr2l,c
 11342  0007E6  3428               	rlcf	LEDsetBar@c+1,w,c
 11343  0007E8  6EDA               	movwf	fsr2h,c
 11344  0007EA  90D8               	bcf	status,0,c
 11345  0007EC  36D9               	rlcf	fsr2l,f,c
 11346  0007EE  36DA               	rlcf	fsr2h,f,c
 11347  0007F0  0101               	movlb	1	; () banked
 11348  0007F2  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11349  0007F4  26D9               	addwf	fsr2l,f,c
 11350  0007F6  0101               	movlb	1	; () banked
 11351  0007F8  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11352  0007FA  22DA               	addwfc	fsr2h,f,c
 11353  0007FC  0101               	movlb	1	; () banked
 11354  0007FE  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11355  000800  12DE               	iorwf	postinc2,f,c
 11356  000802  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11357  000804  12DE               	iorwf	postinc2,f,c
 11358  000806  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11359  000808  12DE               	iorwf	postinc2,f,c
 11360  00080A  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11361  00080C  12DE               	iorwf	postinc2,f,c
 11362                           
 11363                           ;LED_BarGraph.c: 212: displaybuffer[c] &= ~(1<<(a + 8));
 11364  00080E  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11365  000812  0E08               	movlw	8
 11366  000814  0101               	movlb	1	; () banked
 11367  000816  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11368  000818  0E01               	movlw	1
 11369  00081A  0101               	movlb	1	; () banked
 11370  00081C  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11371  00081E  0E00               	movlw	0
 11372  000820  0101               	movlb	1	; () banked
 11373  000822  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11374  000824  0101               	movlb	1	; () banked
 11375  000826  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11376  000828  D004               	goto	u7094
 11377  00082A                     u7095:
 11378  00082A  90D8               	bcf	status,0,c
 11379  00082C  0101               	movlb	1	; () banked
 11380  00082E  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11381  000830  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11382  000832                     u7094:
 11383  000832  0101               	movlb	1	; () banked
 11384  000834  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11385  000836  D7F9               	goto	u7095
 11386  000838  0101               	movlb	1	; () banked
 11387  00083A  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11388  00083C  0101               	movlb	1	; () banked
 11389  00083E  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11390  000840  0101               	movlb	1	; () banked
 11391  000842  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11392  000844  0101               	movlb	1	; () banked
 11393  000846  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11394  000848  0101               	movlb	1	; () banked
 11395  00084A  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11396  00084C  0101               	movlb	1	; () banked
 11397  00084E  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11398  000850  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11399  000852  0101               	movlb	1	; () banked
 11400  000854  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11401  000856  0101               	movlb	1	; () banked
 11402  000858  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11403  00085A  0E60               	movlw	low _displaybuffer
 11404  00085C  0101               	movlb	1	; () banked
 11405  00085E  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11406  000860  0E00               	movlw	high _displaybuffer
 11407  000862  0101               	movlb	1	; () banked
 11408  000864  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11409  000866  90D8               	bcf	status,0,c
 11410  000868  3427               	rlcf	LEDsetBar@c,w,c
 11411  00086A  6ED9               	movwf	fsr2l,c
 11412  00086C  3428               	rlcf	LEDsetBar@c+1,w,c
 11413  00086E  6EDA               	movwf	fsr2h,c
 11414  000870  90D8               	bcf	status,0,c
 11415  000872  36D9               	rlcf	fsr2l,f,c
 11416  000874  36DA               	rlcf	fsr2h,f,c
 11417  000876  0101               	movlb	1	; () banked
 11418  000878  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11419  00087A  26D9               	addwf	fsr2l,f,c
 11420  00087C  0101               	movlb	1	; () banked
 11421  00087E  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11422  000880  22DA               	addwfc	fsr2h,f,c
 11423  000882  0101               	movlb	1	; () banked
 11424  000884  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11425  000886  16DE               	andwf	postinc2,f,c
 11426  000888  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11427  00088A  16DE               	andwf	postinc2,f,c
 11428  00088C  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11429  00088E  16DE               	andwf	postinc2,f,c
 11430  000890  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11431  000892  16DE               	andwf	postinc2,f,c
 11432                           
 11433                           ;LED_BarGraph.c: 213: } else if (color == 2) {
 11434  000894  0012               	return	
 11435  000896                     l6640:
 11436  000896  0E02               	movlw	2
 11437  000898  1825               	xorwf	LEDsetBar@color,w,c
 11438  00089A  1026               	iorwf	LEDsetBar@color+1,w,c
 11439  00089C  A4D8               	btfss	status,2,c
 11440  00089E  D05A               	goto	l6644
 11441                           
 11442                           ;LED_BarGraph.c: 215: displaybuffer[c] |= (1<<(a)) | (1<<(a + 8));
 11443  0008A0  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11444  0008A4  0E08               	movlw	8
 11445  0008A6  0101               	movlb	1	; () banked
 11446  0008A8  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11447  0008AA  0E01               	movlw	1
 11448  0008AC  0101               	movlb	1	; () banked
 11449  0008AE  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11450  0008B0  0E00               	movlw	0
 11451  0008B2  0101               	movlb	1	; () banked
 11452  0008B4  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11453  0008B6  0101               	movlb	1	; () banked
 11454  0008B8  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11455  0008BA  D004               	goto	u7114
 11456  0008BC                     u7115:
 11457  0008BC  90D8               	bcf	status,0,c
 11458  0008BE  0101               	movlb	1	; () banked
 11459  0008C0  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11460  0008C2  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11461  0008C4                     u7114:
 11462  0008C4  0101               	movlb	1	; () banked
 11463  0008C6  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11464  0008C8  D7F9               	goto	u7115
 11465  0008CA  C029  F13C         	movff	LEDsetBar@a,??_LEDsetBar+3
 11466  0008CE  0E01               	movlw	1
 11467  0008D0  0101               	movlb	1	; () banked
 11468  0008D2  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11469  0008D4  0E00               	movlw	0
 11470  0008D6  0101               	movlb	1	; () banked
 11471  0008D8  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11472  0008DA  0101               	movlb	1	; () banked
 11473  0008DC  2B3C               	incf	(??_LEDsetBar+3)& (0+255),f,b
 11474  0008DE  D004               	goto	u7124
 11475  0008E0                     u7125:
 11476  0008E0  90D8               	bcf	status,0,c
 11477  0008E2  0101               	movlb	1	; () banked
 11478  0008E4  373D               	rlcf	(??_LEDsetBar+4)& (0+255),f,b
 11479  0008E6  373E               	rlcf	(??_LEDsetBar+5)& (0+255),f,b
 11480  0008E8                     u7124:
 11481  0008E8  0101               	movlb	1	; () banked
 11482  0008EA  2F3C               	decfsz	(??_LEDsetBar+3)& (0+255),f,b
 11483  0008EC  D7F9               	goto	u7125
 11484  0008EE  0101               	movlb	1	; () banked
 11485  0008F0  513A               	movf	(??_LEDsetBar+1)& (0+255),w,b
 11486  0008F2  0101               	movlb	1	; () banked
 11487  0008F4  113D               	iorwf	(??_LEDsetBar+4)& (0+255),w,b
 11488  0008F6  0101               	movlb	1	; () banked
 11489  0008F8  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11490  0008FA  0101               	movlb	1	; () banked
 11491  0008FC  513B               	movf	(??_LEDsetBar+2)& (0+255),w,b
 11492  0008FE  0101               	movlb	1	; () banked
 11493  000900  113E               	iorwf	(??_LEDsetBar+5)& (0+255),w,b
 11494  000902  0101               	movlb	1	; () banked
 11495  000904  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11496  000906  0101               	movlb	1	; () banked
 11497  000908  6B41               	clrf	(??_LEDsetBar+8)& (0+255),b
 11498  00090A  0101               	movlb	1	; () banked
 11499  00090C  BF40               	btfsc	(??_LEDsetBar+7)& (0+255),7,b
 11500  00090E  0741               	decf	(??_LEDsetBar+8)& (0+255),f,b
 11501  000910  0101               	movlb	1	; () banked
 11502  000912  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11503  000914  0101               	movlb	1	; () banked
 11504  000916  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11505  000918  0E60               	movlw	low _displaybuffer
 11506  00091A  0101               	movlb	1	; () banked
 11507  00091C  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11508  00091E  0E00               	movlw	high _displaybuffer
 11509  000920  0101               	movlb	1	; () banked
 11510  000922  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11511  000924  90D8               	bcf	status,0,c
 11512  000926  3427               	rlcf	LEDsetBar@c,w,c
 11513  000928  6ED9               	movwf	fsr2l,c
 11514  00092A  3428               	rlcf	LEDsetBar@c+1,w,c
 11515  00092C  6EDA               	movwf	fsr2h,c
 11516  00092E  90D8               	bcf	status,0,c
 11517  000930  36D9               	rlcf	fsr2l,f,c
 11518  000932  36DA               	rlcf	fsr2h,f,c
 11519  000934  0101               	movlb	1	; () banked
 11520  000936  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11521  000938  26D9               	addwf	fsr2l,f,c
 11522  00093A  0101               	movlb	1	; () banked
 11523  00093C  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11524  00093E  22DA               	addwfc	fsr2h,f,c
 11525  000940  0101               	movlb	1	; () banked
 11526  000942  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11527  000944  12DE               	iorwf	postinc2,f,c
 11528  000946  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11529  000948  12DE               	iorwf	postinc2,f,c
 11530  00094A  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11531  00094C  12DE               	iorwf	postinc2,f,c
 11532  00094E  5142               	movf	(??_LEDsetBar+9)& (0+255),w,b
 11533  000950  12DE               	iorwf	postinc2,f,c
 11534                           
 11535                           ;LED_BarGraph.c: 216: } else if (color == 0) {
 11536  000952  0012               	return	
 11537  000954                     l6644:
 11538  000954  5025               	movf	LEDsetBar@color,w,c
 11539  000956  1026               	iorwf	LEDsetBar@color+1,w,c
 11540  000958  A4D8               	btfss	status,2,c
 11541  00095A  D06A               	goto	l6648
 11542                           
 11543                           ;LED_BarGraph.c: 218: displaybuffer[c] &= ~(1<<(a)) & ~(1<<(a + 8));
 11544  00095C  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11545  000960  0E08               	movlw	8
 11546  000962  0101               	movlb	1	; () banked
 11547  000964  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11548  000966  0E01               	movlw	1
 11549  000968  0101               	movlb	1	; () banked
 11550  00096A  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11551  00096C  0E00               	movlw	0
 11552  00096E  0101               	movlb	1	; () banked
 11553  000970  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11554  000972  0101               	movlb	1	; () banked
 11555  000974  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11556  000976  D004               	goto	u7144
 11557  000978                     u7145:
 11558  000978  90D8               	bcf	status,0,c
 11559  00097A  0101               	movlb	1	; () banked
 11560  00097C  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11561  00097E  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11562  000980                     u7144:
 11563  000980  0101               	movlb	1	; () banked
 11564  000982  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11565  000984  D7F9               	goto	u7145
 11566  000986  0101               	movlb	1	; () banked
 11567  000988  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11568  00098A  0101               	movlb	1	; () banked
 11569  00098C  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11570  00098E  0101               	movlb	1	; () banked
 11571  000990  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11572  000992  0101               	movlb	1	; () banked
 11573  000994  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11574  000996  C029  F13E         	movff	LEDsetBar@a,??_LEDsetBar+5
 11575  00099A  0E01               	movlw	1
 11576  00099C  0101               	movlb	1	; () banked
 11577  00099E  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11578  0009A0  0E00               	movlw	0
 11579  0009A2  0101               	movlb	1	; () banked
 11580  0009A4  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11581  0009A6  0101               	movlb	1	; () banked
 11582  0009A8  2B3E               	incf	(??_LEDsetBar+5)& (0+255),f,b
 11583  0009AA  D004               	goto	u7154
 11584  0009AC                     u7155:
 11585  0009AC  90D8               	bcf	status,0,c
 11586  0009AE  0101               	movlb	1	; () banked
 11587  0009B0  373F               	rlcf	(??_LEDsetBar+6)& (0+255),f,b
 11588  0009B2  3740               	rlcf	(??_LEDsetBar+7)& (0+255),f,b
 11589  0009B4                     u7154:
 11590  0009B4  0101               	movlb	1	; () banked
 11591  0009B6  2F3E               	decfsz	(??_LEDsetBar+5)& (0+255),f,b
 11592  0009B8  D7F9               	goto	u7155
 11593  0009BA  0101               	movlb	1	; () banked
 11594  0009BC  1D3F               	comf	(??_LEDsetBar+6)& (0+255),w,b
 11595  0009BE  0101               	movlb	1	; () banked
 11596  0009C0  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11597  0009C2  0101               	movlb	1	; () banked
 11598  0009C4  1D40               	comf	(??_LEDsetBar+7)& (0+255),w,b
 11599  0009C6  0101               	movlb	1	; () banked
 11600  0009C8  6F42               	movwf	(??_LEDsetBar+9)& (0+255),b
 11601  0009CA  0101               	movlb	1	; () banked
 11602  0009CC  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11603  0009CE  0101               	movlb	1	; () banked
 11604  0009D0  1541               	andwf	(??_LEDsetBar+8)& (0+255),w,b
 11605  0009D2  0101               	movlb	1	; () banked
 11606  0009D4  6F43               	movwf	(??_LEDsetBar+10)& (0+255),b
 11607  0009D6  0101               	movlb	1	; () banked
 11608  0009D8  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11609  0009DA  0101               	movlb	1	; () banked
 11610  0009DC  1542               	andwf	(??_LEDsetBar+9)& (0+255),w,b
 11611  0009DE  0101               	movlb	1	; () banked
 11612  0009E0  6F44               	movwf	(??_LEDsetBar+11)& (0+255),b
 11613  0009E2  0101               	movlb	1	; () banked
 11614  0009E4  6B45               	clrf	(??_LEDsetBar+12)& (0+255),b
 11615  0009E6  0101               	movlb	1	; () banked
 11616  0009E8  BF44               	btfsc	(??_LEDsetBar+11)& (0+255),7,b
 11617  0009EA  0745               	decf	(??_LEDsetBar+12)& (0+255),f,b
 11618  0009EC  0101               	movlb	1	; () banked
 11619  0009EE  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11620  0009F0  0101               	movlb	1	; () banked
 11621  0009F2  6F46               	movwf	(??_LEDsetBar+13)& (0+255),b
 11622  0009F4  0E60               	movlw	low _displaybuffer
 11623  0009F6  0101               	movlb	1	; () banked
 11624  0009F8  6F47               	movwf	(??_LEDsetBar+14)& (0+255),b
 11625  0009FA  0E00               	movlw	high _displaybuffer
 11626  0009FC  0101               	movlb	1	; () banked
 11627  0009FE  6F48               	movwf	(??_LEDsetBar+15)& (0+255),b
 11628  000A00  90D8               	bcf	status,0,c
 11629  000A02  3427               	rlcf	LEDsetBar@c,w,c
 11630  000A04  6ED9               	movwf	fsr2l,c
 11631  000A06  3428               	rlcf	LEDsetBar@c+1,w,c
 11632  000A08  6EDA               	movwf	fsr2h,c
 11633  000A0A  90D8               	bcf	status,0,c
 11634  000A0C  36D9               	rlcf	fsr2l,f,c
 11635  000A0E  36DA               	rlcf	fsr2h,f,c
 11636  000A10  0101               	movlb	1	; () banked
 11637  000A12  5147               	movf	(??_LEDsetBar+14)& (0+255),w,b
 11638  000A14  26D9               	addwf	fsr2l,f,c
 11639  000A16  0101               	movlb	1	; () banked
 11640  000A18  5148               	movf	(??_LEDsetBar+15)& (0+255),w,b
 11641  000A1A  22DA               	addwfc	fsr2h,f,c
 11642  000A1C  0101               	movlb	1	; () banked
 11643  000A1E  5143               	movf	(??_LEDsetBar+10)& (0+255),w,b
 11644  000A20  16DE               	andwf	postinc2,f,c
 11645  000A22  5144               	movf	(??_LEDsetBar+11)& (0+255),w,b
 11646  000A24  16DE               	andwf	postinc2,f,c
 11647  000A26  5145               	movf	(??_LEDsetBar+12)& (0+255),w,b
 11648  000A28  16DE               	andwf	postinc2,f,c
 11649  000A2A  5146               	movf	(??_LEDsetBar+13)& (0+255),w,b
 11650  000A2C  16DE               	andwf	postinc2,f,c
 11651                           
 11652                           ;LED_BarGraph.c: 219: } else if (color == 3) {
 11653  000A2E  0012               	return	
 11654  000A30                     l6648:
 11655  000A30  0E03               	movlw	3
 11656  000A32  1825               	xorwf	LEDsetBar@color,w,c
 11657  000A34  1026               	iorwf	LEDsetBar@color+1,w,c
 11658  000A36  A4D8               	btfss	status,2,c
 11659  000A38  0012               	return	
 11660                           
 11661                           ;LED_BarGraph.c: 221: displaybuffer[c] |= (1<<(a + 8));
 11662  000A3A  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11663  000A3E  0E08               	movlw	8
 11664  000A40  0101               	movlb	1	; () banked
 11665  000A42  2739               	addwf	??_LEDsetBar& (0+255),f,b
 11666  000A44  0E01               	movlw	1
 11667  000A46  0101               	movlb	1	; () banked
 11668  000A48  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11669  000A4A  0E00               	movlw	0
 11670  000A4C  0101               	movlb	1	; () banked
 11671  000A4E  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11672  000A50  0101               	movlb	1	; () banked
 11673  000A52  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11674  000A54  D004               	goto	u7174
 11675  000A56                     u7175:
 11676  000A56  90D8               	bcf	status,0,c
 11677  000A58  0101               	movlb	1	; () banked
 11678  000A5A  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11679  000A5C  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11680  000A5E                     u7174:
 11681  000A5E  0101               	movlb	1	; () banked
 11682  000A60  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11683  000A62  D7F9               	goto	u7175
 11684  000A64  C13A  F13C         	movff	??_LEDsetBar+1,??_LEDsetBar+3
 11685  000A68  C13B  F13D         	movff	??_LEDsetBar+2,??_LEDsetBar+4
 11686  000A6C  0E00               	movlw	0
 11687  000A6E  0101               	movlb	1	; () banked
 11688  000A70  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11689  000A72  0EFF               	movlw	255
 11690  000A74  6F3E               	movwf	(??_LEDsetBar+5)& (0+255),b
 11691  000A76  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11692  000A78  0E60               	movlw	low _displaybuffer
 11693  000A7A  0101               	movlb	1	; () banked
 11694  000A7C  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11695  000A7E  0E00               	movlw	high _displaybuffer
 11696  000A80  0101               	movlb	1	; () banked
 11697  000A82  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11698  000A84  90D8               	bcf	status,0,c
 11699  000A86  3427               	rlcf	LEDsetBar@c,w,c
 11700  000A88  6ED9               	movwf	fsr2l,c
 11701  000A8A  3428               	rlcf	LEDsetBar@c+1,w,c
 11702  000A8C  6EDA               	movwf	fsr2h,c
 11703  000A8E  90D8               	bcf	status,0,c
 11704  000A90  36D9               	rlcf	fsr2l,f,c
 11705  000A92  36DA               	rlcf	fsr2h,f,c
 11706  000A94  0101               	movlb	1	; () banked
 11707  000A96  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11708  000A98  26D9               	addwf	fsr2l,f,c
 11709  000A9A  0101               	movlb	1	; () banked
 11710  000A9C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11711  000A9E  22DA               	addwfc	fsr2h,f,c
 11712  000AA0  0101               	movlb	1	; () banked
 11713  000AA2  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11714  000AA4  12DE               	iorwf	postinc2,f,c
 11715  000AA6  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11716  000AA8  12DE               	iorwf	postinc2,f,c
 11717  000AAA  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11718  000AAC  12DE               	iorwf	postinc2,f,c
 11719  000AAE  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11720  000AB0  12DE               	iorwf	postinc2,f,c
 11721                           
 11722                           ;LED_BarGraph.c: 223: displaybuffer[c] &= ~(1<<(a));
 11723  000AB2  C029  F139         	movff	LEDsetBar@a,??_LEDsetBar
 11724  000AB6  0E01               	movlw	1
 11725  000AB8  0101               	movlb	1	; () banked
 11726  000ABA  6F3A               	movwf	(??_LEDsetBar+1)& (0+255),b
 11727  000ABC  0E00               	movlw	0
 11728  000ABE  0101               	movlb	1	; () banked
 11729  000AC0  6F3B               	movwf	(??_LEDsetBar+2)& (0+255),b
 11730  000AC2  0101               	movlb	1	; () banked
 11731  000AC4  2B39               	incf	??_LEDsetBar& (0+255),f,b
 11732  000AC6  D004               	goto	u7184
 11733  000AC8                     u7185:
 11734  000AC8  90D8               	bcf	status,0,c
 11735  000ACA  0101               	movlb	1	; () banked
 11736  000ACC  373A               	rlcf	(??_LEDsetBar+1)& (0+255),f,b
 11737  000ACE  373B               	rlcf	(??_LEDsetBar+2)& (0+255),f,b
 11738  000AD0                     u7184:
 11739  000AD0  0101               	movlb	1	; () banked
 11740  000AD2  2F39               	decfsz	??_LEDsetBar& (0+255),f,b
 11741  000AD4  D7F9               	goto	u7185
 11742  000AD6  0101               	movlb	1	; () banked
 11743  000AD8  1D3A               	comf	(??_LEDsetBar+1)& (0+255),w,b
 11744  000ADA  0101               	movlb	1	; () banked
 11745  000ADC  6F3C               	movwf	(??_LEDsetBar+3)& (0+255),b
 11746  000ADE  0101               	movlb	1	; () banked
 11747  000AE0  1D3B               	comf	(??_LEDsetBar+2)& (0+255),w,b
 11748  000AE2  0101               	movlb	1	; () banked
 11749  000AE4  6F3D               	movwf	(??_LEDsetBar+4)& (0+255),b
 11750  000AE6  0101               	movlb	1	; () banked
 11751  000AE8  6B3E               	clrf	(??_LEDsetBar+5)& (0+255),b
 11752  000AEA  0101               	movlb	1	; () banked
 11753  000AEC  BF3D               	btfsc	(??_LEDsetBar+4)& (0+255),7,b
 11754  000AEE  073E               	decf	(??_LEDsetBar+5)& (0+255),f,b
 11755  000AF0  0101               	movlb	1	; () banked
 11756  000AF2  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11757  000AF4  0101               	movlb	1	; () banked
 11758  000AF6  6F3F               	movwf	(??_LEDsetBar+6)& (0+255),b
 11759  000AF8  0E60               	movlw	low _displaybuffer
 11760  000AFA  0101               	movlb	1	; () banked
 11761  000AFC  6F40               	movwf	(??_LEDsetBar+7)& (0+255),b
 11762  000AFE  0E00               	movlw	high _displaybuffer
 11763  000B00  0101               	movlb	1	; () banked
 11764  000B02  6F41               	movwf	(??_LEDsetBar+8)& (0+255),b
 11765  000B04  90D8               	bcf	status,0,c
 11766  000B06  3427               	rlcf	LEDsetBar@c,w,c
 11767  000B08  6ED9               	movwf	fsr2l,c
 11768  000B0A  3428               	rlcf	LEDsetBar@c+1,w,c
 11769  000B0C  6EDA               	movwf	fsr2h,c
 11770  000B0E  90D8               	bcf	status,0,c
 11771  000B10  36D9               	rlcf	fsr2l,f,c
 11772  000B12  36DA               	rlcf	fsr2h,f,c
 11773  000B14  0101               	movlb	1	; () banked
 11774  000B16  5140               	movf	(??_LEDsetBar+7)& (0+255),w,b
 11775  000B18  26D9               	addwf	fsr2l,f,c
 11776  000B1A  0101               	movlb	1	; () banked
 11777  000B1C  5141               	movf	(??_LEDsetBar+8)& (0+255),w,b
 11778  000B1E  22DA               	addwfc	fsr2h,f,c
 11779  000B20  0101               	movlb	1	; () banked
 11780  000B22  513C               	movf	(??_LEDsetBar+3)& (0+255),w,b
 11781  000B24  16DE               	andwf	postinc2,f,c
 11782  000B26  513D               	movf	(??_LEDsetBar+4)& (0+255),w,b
 11783  000B28  16DE               	andwf	postinc2,f,c
 11784  000B2A  513E               	movf	(??_LEDsetBar+5)& (0+255),w,b
 11785  000B2C  16DE               	andwf	postinc2,f,c
 11786  000B2E  513F               	movf	(??_LEDsetBar+6)& (0+255),w,b
 11787  000B30  16DE               	andwf	postinc2,f,c
 11788                           
 11789                           ; BSR set to: 1
 11790                           
 11791                           ; BSR set to: 1
 11792                           
 11793                           ; BSR set to: 1
 11794  000B32  0012               	return	
 11795  000B34                     __end_of_LEDsetBar:
 11796                           	opt stack 0
 11797                           tosu	equ	0xFFF
 11798                           tosh	equ	0xFFE
 11799                           tosl	equ	0xFFD
 11800                           pclath	equ	0xFFA
 11801                           tblptru	equ	0xFF8
 11802                           tblptrh	equ	0xFF7
 11803                           tblptrl	equ	0xFF6
 11804                           tablat	equ	0xFF5
 11805                           prodh	equ	0xFF4
 11806                           prodl	equ	0xFF3
 11807                           intcon	equ	0xFF2
 11808                           intcon2	equ	0xFF1
 11809                           indf0	equ	0xFEF
 11810                           postinc0	equ	0xFEE
 11811                           fsr0h	equ	0xFEA
 11812                           fsr0l	equ	0xFE9
 11813                           wreg	equ	0xFE8
 11814                           indf2	equ	0xFDF
 11815                           postinc2	equ	0xFDE
 11816                           postdec2	equ	0xFDD
 11817                           plusw2	equ	0xFDB
 11818                           fsr2h	equ	0xFDA
 11819                           fsr2l	equ	0xFD9
 11820                           status	equ	0xFD8
 11821                           
 11822 ;; *************** function ___awdiv *****************
 11823 ;; Defined at:
 11824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11825 ;; Parameters:    Size  Location     Type
 11826 ;;  dividend        2   26[COMRAM] int 
 11827 ;;  divisor         2   28[COMRAM] int 
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;  quotient        2   32[COMRAM] int 
 11830 ;;  sign            1   31[COMRAM] unsigned char 
 11831 ;;  counter         1   30[COMRAM] unsigned char 
 11832 ;; Return value:  Size  Location     Type
 11833 ;;                  2   26[COMRAM] int 
 11834 ;; Registers used:
 11835 ;;		wreg, status,2, status,0
 11836 ;; Tracked objects:
 11837 ;;		On entry : 0/0
 11838 ;;		On exit  : 0/0
 11839 ;;		Unchanged: 0/0
 11840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11841 ;;      Params:         4       0       0       0       0       0       0
 11842 ;;      Locals:         4       0       0       0       0       0       0
 11843 ;;      Temps:          0       0       0       0       0       0       0
 11844 ;;      Totals:         8       0       0       0       0       0       0
 11845 ;;Total ram usage:        8 bytes
 11846 ;; Hardware stack levels used:    1
 11847 ;; Hardware stack levels required when called:    4
 11848 ;; This function calls:
 11849 ;;		Nothing
 11850 ;; This function is called by:
 11851 ;;		_LEDsetBar
 11852 ;;		_begin
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           	psect	text57
 11857  00276E                     __ptext57:
 11858                           	opt stack 0
 11859  00276E                     ___awdiv:
 11860                           	opt stack 24
 11861                           
 11862                           ;incstack = 0
 11863  00276E  0E00               	movlw	0
 11864  002770  6E20               	movwf	___awdiv@sign,c
 11865  002772  AE1E               	btfss	___awdiv@divisor+1,7,c
 11866  002774  D006               	goto	l6554
 11867  002776  6C1D               	negf	___awdiv@divisor,c
 11868  002778  1E1E               	comf	___awdiv@divisor+1,f,c
 11869  00277A  B0D8               	btfsc	status,0,c
 11870  00277C  2A1E               	incf	___awdiv@divisor+1,f,c
 11871  00277E  0E01               	movlw	1
 11872  002780  6E20               	movwf	___awdiv@sign,c
 11873  002782                     l6554:
 11874  002782  AE1C               	btfss	___awdiv@dividend+1,7,c
 11875  002784  D006               	goto	l6560
 11876  002786  6C1B               	negf	___awdiv@dividend,c
 11877  002788  1E1C               	comf	___awdiv@dividend+1,f,c
 11878  00278A  B0D8               	btfsc	status,0,c
 11879  00278C  2A1C               	incf	___awdiv@dividend+1,f,c
 11880  00278E  0E01               	movlw	1
 11881  002790  1A20               	xorwf	___awdiv@sign,f,c
 11882  002792                     l6560:
 11883  002792  0E00               	movlw	0
 11884  002794  6E22               	movwf	___awdiv@quotient+1,c
 11885  002796  0E00               	movlw	0
 11886  002798  6E21               	movwf	___awdiv@quotient,c
 11887  00279A  501D               	movf	___awdiv@divisor,w,c
 11888  00279C  101E               	iorwf	___awdiv@divisor+1,w,c
 11889  00279E  B4D8               	btfsc	status,2,c
 11890  0027A0  D01C               	goto	l6582
 11891  0027A2  0E01               	movlw	1
 11892  0027A4  6E1F               	movwf	___awdiv@counter,c
 11893  0027A6  D004               	goto	l6568
 11894  0027A8                     l6566:
 11895  0027A8  90D8               	bcf	status,0,c
 11896  0027AA  361D               	rlcf	___awdiv@divisor,f,c
 11897  0027AC  361E               	rlcf	___awdiv@divisor+1,f,c
 11898  0027AE  2A1F               	incf	___awdiv@counter,f,c
 11899  0027B0                     l6568:
 11900  0027B0  AE1E               	btfss	___awdiv@divisor+1,7,c
 11901  0027B2  D7FA               	goto	l6566
 11902  0027B4                     l6570:
 11903  0027B4  90D8               	bcf	status,0,c
 11904  0027B6  3621               	rlcf	___awdiv@quotient,f,c
 11905  0027B8  3622               	rlcf	___awdiv@quotient+1,f,c
 11906  0027BA  501D               	movf	___awdiv@divisor,w,c
 11907  0027BC  5C1B               	subwf	___awdiv@dividend,w,c
 11908  0027BE  501E               	movf	___awdiv@divisor+1,w,c
 11909  0027C0  581C               	subwfb	___awdiv@dividend+1,w,c
 11910  0027C2  A0D8               	btfss	status,0,c
 11911  0027C4  D005               	goto	l6578
 11912  0027C6  501D               	movf	___awdiv@divisor,w,c
 11913  0027C8  5E1B               	subwf	___awdiv@dividend,f,c
 11914  0027CA  501E               	movf	___awdiv@divisor+1,w,c
 11915  0027CC  5A1C               	subwfb	___awdiv@dividend+1,f,c
 11916  0027CE  8021               	bsf	___awdiv@quotient,0,c
 11917  0027D0                     l6578:
 11918  0027D0  90D8               	bcf	status,0,c
 11919  0027D2  321E               	rrcf	___awdiv@divisor+1,f,c
 11920  0027D4  321D               	rrcf	___awdiv@divisor,f,c
 11921  0027D6  2E1F               	decfsz	___awdiv@counter,f,c
 11922  0027D8  D7ED               	goto	l6570
 11923  0027DA                     l6582:
 11924  0027DA  5020               	movf	___awdiv@sign,w,c
 11925  0027DC  B4D8               	btfsc	status,2,c
 11926  0027DE  D004               	goto	l6586
 11927  0027E0  6C21               	negf	___awdiv@quotient,c
 11928  0027E2  1E22               	comf	___awdiv@quotient+1,f,c
 11929  0027E4  B0D8               	btfsc	status,0,c
 11930  0027E6  2A22               	incf	___awdiv@quotient+1,f,c
 11931  0027E8                     l6586:
 11932  0027E8  C021  F01B         	movff	___awdiv@quotient,?___awdiv
 11933  0027EC  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
 11934  0027F0  0012               	return	
 11935  0027F2                     __end_of___awdiv:
 11936                           	opt stack 0
 11937                           tosu	equ	0xFFF
 11938                           tosh	equ	0xFFE
 11939                           tosl	equ	0xFFD
 11940                           pclath	equ	0xFFA
 11941                           tblptru	equ	0xFF8
 11942                           tblptrh	equ	0xFF7
 11943                           tblptrl	equ	0xFF6
 11944                           tablat	equ	0xFF5
 11945                           prodh	equ	0xFF4
 11946                           prodl	equ	0xFF3
 11947                           intcon	equ	0xFF2
 11948                           intcon2	equ	0xFF1
 11949                           indf0	equ	0xFEF
 11950                           postinc0	equ	0xFEE
 11951                           fsr0h	equ	0xFEA
 11952                           fsr0l	equ	0xFE9
 11953                           wreg	equ	0xFE8
 11954                           indf2	equ	0xFDF
 11955                           postinc2	equ	0xFDE
 11956                           postdec2	equ	0xFDD
 11957                           plusw2	equ	0xFDB
 11958                           fsr2h	equ	0xFDA
 11959                           fsr2l	equ	0xFD9
 11960                           status	equ	0xFD8
 11961                           
 11962 ;; *************** function _LEDbegin *****************
 11963 ;; Defined at:
 11964 ;;		line 85 in file "LED_BarGraph.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;  i2c_addr        1    wreg     unsigned char 
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;  i2c_addr        1   10[BANK1 ] unsigned char 
 11969 ;;  writeBuffer     3    5[BANK1 ] unsigned char [3]
 11970 ;;  timeOut         2    8[BANK1 ] unsigned int 
 11971 ;;  status          1   11[BANK1 ] enum E7758
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  1    wreg      void 
 11974 ;; Registers used:
 11975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11981 ;;      Params:         0       0       0       0       0       0       0
 11982 ;;      Locals:         0       0       7       0       0       0       0
 11983 ;;      Temps:          0       0       0       0       0       0       0
 11984 ;;      Totals:         0       0       7       0       0       0       0
 11985 ;;Total ram usage:        7 bytes
 11986 ;; Hardware stack levels used:    1
 11987 ;; Hardware stack levels required when called:    7
 11988 ;; This function calls:
 11989 ;;		_I2C1_MasterWrite
 11990 ;;		_LEDBsetBrightness
 11991 ;;		_LEDblinkRate
 11992 ;; This function is called by:
 11993 ;;		_main
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997                           	psect	text58
 11998  00235C                     __ptext58:
 11999                           	opt stack 0
 12000  00235C                     _LEDbegin:
 12001                           	opt stack 23
 12002                           
 12003                           ;incstack = 0
 12004                           ;LEDbegin@i2c_addr stored from wreg
 12005  00235C  0101               	movlb	1	; () banked
 12006  00235E  6F43               	movwf	LEDbegin@i2c_addr& (0+255),b
 12007                           
 12008                           ;LED_BarGraph.c: 86: uint8_t writeBuffer[3];
 12009                           ;LED_BarGraph.c: 87: uint16_t timeOut;
 12010                           ;LED_BarGraph.c: 88: writeBuffer[0] = 0x21;
 12011  002360  0E21               	movlw	33
 12012  002362  0101               	movlb	1	; () banked
 12013  002364  6F3E               	movwf	LEDbegin@writeBuffer& (0+255),b
 12014                           
 12015                           ;LED_BarGraph.c: 89: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12016  002366  0E02               	movlw	2
 12017  002368  0101               	movlb	1	; () banked
 12018  00236A  6F44               	movwf	LEDbegin@status& (0+255),b
 12019                           
 12020                           ;LED_BarGraph.c: 91: timeOut = 0;
 12021  00236C  0E00               	movlw	0
 12022  00236E  0101               	movlb	1	; () banked
 12023  002370  6F42               	movwf	(LEDbegin@timeOut+1)& (0+255),b
 12024  002372  0E00               	movlw	0
 12025  002374  6F41               	movwf	LEDbegin@timeOut& (0+255),b
 12026                           
 12027                           ;LED_BarGraph.c: 92: while (status != I2C1_MESSAGE_FAIL) {
 12028  002376  D02F               	goto	l7128
 12029  002378                     l7108:
 12030                           
 12031                           ; BSR set to: 1
 12032                           ;LED_BarGraph.c: 94: I2C1_MasterWrite(&writeBuffer,
 12033                           ;LED_BarGraph.c: 95: 1,
 12034                           ;LED_BarGraph.c: 96: i2c_addr,
 12035                           ;LED_BarGraph.c: 97: &status);
 12036  002378  0E3E               	movlw	low LEDbegin@writeBuffer
 12037  00237A  0100               	movlb	0	; () banked
 12038  00237C  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12039  00237E  0E01               	movlw	high LEDbegin@writeBuffer
 12040  002380  0100               	movlb	0	; () banked
 12041  002382  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12042  002384  0E00               	movlw	0
 12043  002386  0100               	movlb	0	; () banked
 12044  002388  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12045  00238A  0E01               	movlw	1
 12046  00238C  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12047  00238E  C143  F0F6         	movff	LEDbegin@i2c_addr,I2C1_MasterWrite@address
 12048  002392  0100               	movlb	0	; () banked
 12049  002394  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12050  002396  0E44               	movlw	low LEDbegin@status
 12051  002398  0100               	movlb	0	; () banked
 12052  00239A  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12053  00239C  0E01               	movlw	high LEDbegin@status
 12054  00239E  0100               	movlb	0	; () banked
 12055  0023A0  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12056  0023A2  EC0B  F016         	call	_I2C1_MasterWrite	;wreg free
 12057  0023A6                     l7110:
 12058  0023A6  0E02               	movlw	2
 12059  0023A8  0101               	movlb	1	; () banked
 12060  0023AA  1944               	xorwf	LEDbegin@status& (0+255),w,b
 12061  0023AC  B4D8               	btfsc	status,2,c
 12062  0023AE  D7FB               	goto	l7110
 12063                           
 12064                           ; BSR set to: 1
 12065                           ;LED_BarGraph.c: 102: if (status == I2C1_MESSAGE_COMPLETE)
 12066                           
 12067                           ; BSR set to: 1
 12068  0023B0  0101               	movlb	1	; () banked
 12069  0023B2  5144               	movf	LEDbegin@status& (0+255),w,b
 12070  0023B4  0101               	movlb	1	; () banked
 12071  0023B6  B4D8               	btfsc	status,2,c
 12072  0023B8  D012               	goto	l7130
 12073                           
 12074                           ; BSR set to: 1
 12075                           ;LED_BarGraph.c: 104: if (timeOut == 4)
 12076                           
 12077                           ; BSR set to: 1
 12078                           
 12079                           ; BSR set to: 1
 12080                           ;LED_BarGraph.c: 103: break;
 12081  0023BA  0E04               	movlw	4
 12082  0023BC  0101               	movlb	1	; () banked
 12083  0023BE  1941               	xorwf	LEDbegin@timeOut& (0+255),w,b
 12084  0023C0  0101               	movlb	1	; () banked
 12085  0023C2  1142               	iorwf	(LEDbegin@timeOut+1)& (0+255),w,b
 12086  0023C4  B4D8               	btfsc	status,2,c
 12087  0023C6  D00B               	goto	l7130
 12088                           
 12089                           ; BSR set to: 1
 12090                           ;LED_BarGraph.c: 106: if (status == I2C1_MESSAGE_FAIL)
 12091                           
 12092                           ; BSR set to: 1
 12093                           
 12094                           ; BSR set to: 1
 12095                           ;LED_BarGraph.c: 105: break;
 12096  0023C8  0101               	movlb	1	; () banked
 12097  0023CA  0544               	decf	LEDbegin@status& (0+255),w,b
 12098  0023CC  B4D8               	btfsc	status,2,c
 12099  0023CE  D007               	goto	l7130
 12100                           
 12101                           ; BSR set to: 1
 12102                           ;LED_BarGraph.c: 108: else
 12103                           ;LED_BarGraph.c: 109: timeOut++;
 12104                           
 12105                           ; BSR set to: 1
 12106                           
 12107                           ; BSR set to: 1
 12108                           
 12109                           ; BSR set to: 1
 12110                           ;LED_BarGraph.c: 107: break;
 12111  0023D0  0101               	movlb	1	; () banked
 12112  0023D2  4B41               	infsnz	LEDbegin@timeOut& (0+255),f,b
 12113  0023D4  2B42               	incf	(LEDbegin@timeOut+1)& (0+255),f,b
 12114  0023D6                     l7128:
 12115                           
 12116                           ; BSR set to: 1
 12117  0023D6  0101               	movlb	1	; () banked
 12118  0023D8  0544               	decf	LEDbegin@status& (0+255),w,b
 12119  0023DA  A4D8               	btfss	status,2,c
 12120  0023DC  D7CD               	goto	l7108
 12121  0023DE                     l7130:
 12122                           
 12123                           ; BSR set to: 1
 12124                           ;LED_BarGraph.c: 110: }
 12125                           ;LED_BarGraph.c: 112: LEDblinkRate(0, i2c_addr);
 12126  0023DE  0E00               	movlw	0
 12127  0023E0  6E26               	movwf	LEDblinkRate@b+1,c
 12128  0023E2  0E00               	movlw	0
 12129  0023E4  6E25               	movwf	LEDblinkRate@b,c
 12130  0023E6  C143  F027         	movff	LEDbegin@i2c_addr,LEDblinkRate@i2c_addr
 12131  0023EA  EC00  F012         	call	_LEDblinkRate	;wreg free
 12132                           
 12133                           ;LED_BarGraph.c: 113: LEDBsetBrightness(15, i2c_addr);
 12134  0023EE  0E00               	movlw	0
 12135  0023F0  6E26               	movwf	LEDBsetBrightness@b+1,c
 12136  0023F2  0E0F               	movlw	15
 12137  0023F4  6E25               	movwf	LEDBsetBrightness@b,c
 12138  0023F6  C143  F027         	movff	LEDbegin@i2c_addr,LEDBsetBrightness@i2c_addr
 12139  0023FA  EC4E  F012         	call	_LEDBsetBrightness	;wreg free
 12140  0023FE  0012               	return		;funcret
 12141  002400                     __end_of_LEDbegin:
 12142                           	opt stack 0
 12143                           tosu	equ	0xFFF
 12144                           tosh	equ	0xFFE
 12145                           tosl	equ	0xFFD
 12146                           pclath	equ	0xFFA
 12147                           tblptru	equ	0xFF8
 12148                           tblptrh	equ	0xFF7
 12149                           tblptrl	equ	0xFF6
 12150                           tablat	equ	0xFF5
 12151                           prodh	equ	0xFF4
 12152                           prodl	equ	0xFF3
 12153                           intcon	equ	0xFF2
 12154                           intcon2	equ	0xFF1
 12155                           indf0	equ	0xFEF
 12156                           postinc0	equ	0xFEE
 12157                           fsr0h	equ	0xFEA
 12158                           fsr0l	equ	0xFE9
 12159                           wreg	equ	0xFE8
 12160                           indf2	equ	0xFDF
 12161                           postinc2	equ	0xFDE
 12162                           postdec2	equ	0xFDD
 12163                           plusw2	equ	0xFDB
 12164                           fsr2h	equ	0xFDA
 12165                           fsr2l	equ	0xFD9
 12166                           status	equ	0xFD8
 12167                           
 12168 ;; *************** function _LEDblinkRate *****************
 12169 ;; Defined at:
 12170 ;;		line 55 in file "LED_BarGraph.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  b               2   36[COMRAM] int 
 12173 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12176 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12177 ;;  status          1    4[BANK1 ] enum E7758
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12187 ;;      Params:         3       0       0       0       0       0       0
 12188 ;;      Locals:         0       0       5       0       0       0       0
 12189 ;;      Temps:          0       0       0       0       0       0       0
 12190 ;;      Totals:         3       0       5       0       0       0       0
 12191 ;;Total ram usage:        8 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:    6
 12194 ;; This function calls:
 12195 ;;		_I2C1_MasterWrite
 12196 ;; This function is called by:
 12197 ;;		_LEDbegin
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           	psect	text59
 12202  002400                     __ptext59:
 12203                           	opt stack 0
 12204  002400                     _LEDblinkRate:
 12205                           	opt stack 23
 12206                           
 12207                           ;LED_BarGraph.c: 56: if (b > 3) b = 0;
 12208                           
 12209                           ;incstack = 0
 12210  002400  BE26               	btfsc	LEDblinkRate@b+1,7,c
 12211  002402  D00A               	goto	l6688
 12212  002404  5026               	movf	LEDblinkRate@b+1,w,c
 12213  002406  E104               	bnz	u7250
 12214  002408  0E04               	movlw	4
 12215  00240A  5C25               	subwf	LEDblinkRate@b,w,c
 12216  00240C  A0D8               	btfss	status,0,c
 12217  00240E  D004               	goto	l6688
 12218  002410                     u7250:
 12219  002410  0E00               	movlw	0
 12220  002412  6E26               	movwf	LEDblinkRate@b+1,c
 12221  002414  0E00               	movlw	0
 12222  002416  6E25               	movwf	LEDblinkRate@b,c
 12223  002418                     l6688:
 12224                           
 12225                           ;LED_BarGraph.c: 57: uint8_t writeBuffer[2];
 12226                           ;LED_BarGraph.c: 58: uint16_t timeOut;
 12227                           ;LED_BarGraph.c: 59: writeBuffer[0] = (0x80 | 0x01 | (b << 1));
 12228  002418  5025               	movf	LEDblinkRate@b,w,c
 12229  00241A  2425               	addwf	LEDblinkRate@b,w,c
 12230  00241C  0981               	iorlw	129
 12231  00241E  0101               	movlb	1	; () banked
 12232  002420  6F39               	movwf	LEDblinkRate@writeBuffer& (0+255),b
 12233                           
 12234                           ; BSR set to: 1
 12235                           ;LED_BarGraph.c: 60: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12236  002422  0E02               	movlw	2
 12237  002424  0101               	movlb	1	; () banked
 12238  002426  6F3D               	movwf	LEDblinkRate@status& (0+255),b
 12239                           
 12240                           ; BSR set to: 1
 12241                           ;LED_BarGraph.c: 62: timeOut = 0;
 12242  002428  0E00               	movlw	0
 12243  00242A  0101               	movlb	1	; () banked
 12244  00242C  6F3C               	movwf	(LEDblinkRate@timeOut+1)& (0+255),b
 12245  00242E  0E00               	movlw	0
 12246  002430  6F3B               	movwf	LEDblinkRate@timeOut& (0+255),b
 12247                           
 12248                           ;LED_BarGraph.c: 63: while (status != I2C1_MESSAGE_FAIL) {
 12249  002432  D02F               	goto	l6714
 12250  002434                     l6694:
 12251                           
 12252                           ; BSR set to: 1
 12253                           ;LED_BarGraph.c: 65: I2C1_MasterWrite(&writeBuffer,
 12254                           ;LED_BarGraph.c: 66: 1,
 12255                           ;LED_BarGraph.c: 67: i2c_addr,
 12256                           ;LED_BarGraph.c: 68: &status);
 12257  002434  0E39               	movlw	low LEDblinkRate@writeBuffer
 12258  002436  0100               	movlb	0	; () banked
 12259  002438  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12260  00243A  0E01               	movlw	high LEDblinkRate@writeBuffer
 12261  00243C  0100               	movlb	0	; () banked
 12262  00243E  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12263  002440  0E00               	movlw	0
 12264  002442  0100               	movlb	0	; () banked
 12265  002444  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12266  002446  0E01               	movlw	1
 12267  002448  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12268  00244A  C027  F0F6         	movff	LEDblinkRate@i2c_addr,I2C1_MasterWrite@address
 12269  00244E  0100               	movlb	0	; () banked
 12270  002450  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12271  002452  0E3D               	movlw	low LEDblinkRate@status
 12272  002454  0100               	movlb	0	; () banked
 12273  002456  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12274  002458  0E01               	movlw	high LEDblinkRate@status
 12275  00245A  0100               	movlb	0	; () banked
 12276  00245C  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12277  00245E  EC0B  F016         	call	_I2C1_MasterWrite	;wreg free
 12278  002462                     l6696:
 12279  002462  0E02               	movlw	2
 12280  002464  0101               	movlb	1	; () banked
 12281  002466  193D               	xorwf	LEDblinkRate@status& (0+255),w,b
 12282  002468  B4D8               	btfsc	status,2,c
 12283  00246A  D7FB               	goto	l6696
 12284                           
 12285                           ; BSR set to: 1
 12286                           ;LED_BarGraph.c: 73: if (status == I2C1_MESSAGE_COMPLETE)
 12287                           
 12288                           ; BSR set to: 1
 12289  00246C  0101               	movlb	1	; () banked
 12290  00246E  513D               	movf	LEDblinkRate@status& (0+255),w,b
 12291  002470  0101               	movlb	1	; () banked
 12292  002472  B4D8               	btfsc	status,2,c
 12293  002474  0012               	return	
 12294                           
 12295                           ; BSR set to: 1
 12296                           ;LED_BarGraph.c: 75: if (timeOut == 4)
 12297                           
 12298                           ; BSR set to: 1
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;LED_BarGraph.c: 74: break;
 12302  002476  0E04               	movlw	4
 12303  002478  0101               	movlb	1	; () banked
 12304  00247A  193B               	xorwf	LEDblinkRate@timeOut& (0+255),w,b
 12305  00247C  0101               	movlb	1	; () banked
 12306  00247E  113C               	iorwf	(LEDblinkRate@timeOut+1)& (0+255),w,b
 12307  002480  B4D8               	btfsc	status,2,c
 12308  002482  0012               	return	
 12309                           
 12310                           ; BSR set to: 1
 12311                           ;LED_BarGraph.c: 77: if (status == I2C1_MESSAGE_FAIL)
 12312                           
 12313                           ; BSR set to: 1
 12314                           
 12315                           ; BSR set to: 1
 12316                           ;LED_BarGraph.c: 76: break;
 12317  002484  0101               	movlb	1	; () banked
 12318  002486  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12319  002488  B4D8               	btfsc	status,2,c
 12320  00248A  0012               	return	
 12321                           
 12322                           ; BSR set to: 1
 12323                           ;LED_BarGraph.c: 79: else
 12324                           ;LED_BarGraph.c: 80: timeOut++;
 12325                           
 12326                           ; BSR set to: 1
 12327                           
 12328                           ; BSR set to: 1
 12329                           
 12330                           ; BSR set to: 1
 12331                           ;LED_BarGraph.c: 78: break;
 12332  00248C  0101               	movlb	1	; () banked
 12333  00248E  4B3B               	infsnz	LEDblinkRate@timeOut& (0+255),f,b
 12334  002490  2B3C               	incf	(LEDblinkRate@timeOut+1)& (0+255),f,b
 12335  002492                     l6714:
 12336                           
 12337                           ; BSR set to: 1
 12338  002492  0101               	movlb	1	; () banked
 12339  002494  053D               	decf	LEDblinkRate@status& (0+255),w,b
 12340  002496  B4D8               	btfsc	status,2,c
 12341  002498  0012               	return	
 12342  00249A  D7CC               	goto	l6694
 12343  00249C                     __end_of_LEDblinkRate:
 12344                           	opt stack 0
 12345                           tosu	equ	0xFFF
 12346                           tosh	equ	0xFFE
 12347                           tosl	equ	0xFFD
 12348                           pclath	equ	0xFFA
 12349                           tblptru	equ	0xFF8
 12350                           tblptrh	equ	0xFF7
 12351                           tblptrl	equ	0xFF6
 12352                           tablat	equ	0xFF5
 12353                           prodh	equ	0xFF4
 12354                           prodl	equ	0xFF3
 12355                           intcon	equ	0xFF2
 12356                           intcon2	equ	0xFF1
 12357                           indf0	equ	0xFEF
 12358                           postinc0	equ	0xFEE
 12359                           fsr0h	equ	0xFEA
 12360                           fsr0l	equ	0xFE9
 12361                           wreg	equ	0xFE8
 12362                           indf2	equ	0xFDF
 12363                           postinc2	equ	0xFDE
 12364                           postdec2	equ	0xFDD
 12365                           plusw2	equ	0xFDB
 12366                           fsr2h	equ	0xFDA
 12367                           fsr2l	equ	0xFD9
 12368                           status	equ	0xFD8
 12369                           
 12370 ;; *************** function _LEDBsetBrightness *****************
 12371 ;; Defined at:
 12372 ;;		line 25 in file "LED_BarGraph.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  b               2   36[COMRAM] int 
 12375 ;;  i2c_addr        1   38[COMRAM] unsigned char 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;  writeBuffer     2    0[BANK1 ] unsigned char [2]
 12378 ;;  timeOut         2    2[BANK1 ] unsigned int 
 12379 ;;  status          1    4[BANK1 ] enum E7758
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1    wreg      void 
 12382 ;; Registers used:
 12383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12389 ;;      Params:         3       0       0       0       0       0       0
 12390 ;;      Locals:         0       0       5       0       0       0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0
 12392 ;;      Totals:         3       0       5       0       0       0       0
 12393 ;;Total ram usage:        8 bytes
 12394 ;; Hardware stack levels used:    1
 12395 ;; Hardware stack levels required when called:    6
 12396 ;; This function calls:
 12397 ;;		_I2C1_MasterWrite
 12398 ;; This function is called by:
 12399 ;;		_LEDbegin
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text60
 12404  00249C                     __ptext60:
 12405                           	opt stack 0
 12406  00249C                     _LEDBsetBrightness:
 12407                           	opt stack 23
 12408                           
 12409                           ;LED_BarGraph.c: 26: if (b > 15) b = 15;
 12410                           
 12411                           ; BSR set to: 1
 12412                           ;incstack = 0
 12413  00249C  BE26               	btfsc	LEDBsetBrightness@b+1,7,c
 12414  00249E  D00A               	goto	l6656
 12415  0024A0  5026               	movf	LEDBsetBrightness@b+1,w,c
 12416  0024A2  E104               	bnz	u7190
 12417  0024A4  0E10               	movlw	16
 12418  0024A6  5C25               	subwf	LEDBsetBrightness@b,w,c
 12419  0024A8  A0D8               	btfss	status,0,c
 12420  0024AA  D004               	goto	l6656
 12421  0024AC                     u7190:
 12422  0024AC  0E00               	movlw	0
 12423  0024AE  6E26               	movwf	LEDBsetBrightness@b+1,c
 12424  0024B0  0E0F               	movlw	15
 12425  0024B2  6E25               	movwf	LEDBsetBrightness@b,c
 12426  0024B4                     l6656:
 12427                           
 12428                           ;LED_BarGraph.c: 27: uint8_t writeBuffer[2];
 12429                           ;LED_BarGraph.c: 28: uint16_t timeOut;
 12430                           ;LED_BarGraph.c: 29: writeBuffer[0] = (0xE0 | b);
 12431  0024B4  5025               	movf	LEDBsetBrightness@b,w,c
 12432  0024B6  09E0               	iorlw	224
 12433  0024B8  0101               	movlb	1	; () banked
 12434  0024BA  6F39               	movwf	LEDBsetBrightness@writeBuffer& (0+255),b
 12435                           
 12436                           ; BSR set to: 1
 12437                           ;LED_BarGraph.c: 30: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12438  0024BC  0E02               	movlw	2
 12439  0024BE  0101               	movlb	1	; () banked
 12440  0024C0  6F3D               	movwf	LEDBsetBrightness@status& (0+255),b
 12441                           
 12442                           ; BSR set to: 1
 12443                           ;LED_BarGraph.c: 32: timeOut = 0;
 12444  0024C2  0E00               	movlw	0
 12445  0024C4  0101               	movlb	1	; () banked
 12446  0024C6  6F3C               	movwf	(LEDBsetBrightness@timeOut+1)& (0+255),b
 12447  0024C8  0E00               	movlw	0
 12448  0024CA  6F3B               	movwf	LEDBsetBrightness@timeOut& (0+255),b
 12449                           
 12450                           ;LED_BarGraph.c: 33: while (status != I2C1_MESSAGE_FAIL) {
 12451  0024CC  D02F               	goto	l6682
 12452  0024CE                     l6662:
 12453                           
 12454                           ; BSR set to: 1
 12455                           ;LED_BarGraph.c: 35: I2C1_MasterWrite(&writeBuffer,
 12456                           ;LED_BarGraph.c: 36: 1,
 12457                           ;LED_BarGraph.c: 37: i2c_addr,
 12458                           ;LED_BarGraph.c: 38: &status);
 12459  0024CE  0E39               	movlw	low LEDBsetBrightness@writeBuffer
 12460  0024D0  0100               	movlb	0	; () banked
 12461  0024D2  6FF2               	movwf	I2C1_MasterWrite@pdata& (0+255),b
 12462  0024D4  0E01               	movlw	high LEDBsetBrightness@writeBuffer
 12463  0024D6  0100               	movlb	0	; () banked
 12464  0024D8  6FF3               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
 12465  0024DA  0E00               	movlw	0
 12466  0024DC  0100               	movlb	0	; () banked
 12467  0024DE  6FF5               	movwf	(I2C1_MasterWrite@length+1)& (0+255),b
 12468  0024E0  0E01               	movlw	1
 12469  0024E2  6FF4               	movwf	I2C1_MasterWrite@length& (0+255),b
 12470  0024E4  C027  F0F6         	movff	LEDBsetBrightness@i2c_addr,I2C1_MasterWrite@address
 12471  0024E8  0100               	movlb	0	; () banked
 12472  0024EA  6BF7               	clrf	(I2C1_MasterWrite@address+1)& (0+255),b
 12473  0024EC  0E3D               	movlw	low LEDBsetBrightness@status
 12474  0024EE  0100               	movlb	0	; () banked
 12475  0024F0  6FF8               	movwf	I2C1_MasterWrite@pflag& (0+255),b
 12476  0024F2  0E01               	movlw	high LEDBsetBrightness@status
 12477  0024F4  0100               	movlb	0	; () banked
 12478  0024F6  6FF9               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
 12479  0024F8  EC0B  F016         	call	_I2C1_MasterWrite	;wreg free
 12480  0024FC                     l6664:
 12481  0024FC  0E02               	movlw	2
 12482  0024FE  0101               	movlb	1	; () banked
 12483  002500  193D               	xorwf	LEDBsetBrightness@status& (0+255),w,b
 12484  002502  B4D8               	btfsc	status,2,c
 12485  002504  D7FB               	goto	l6664
 12486                           
 12487                           ; BSR set to: 1
 12488                           ;LED_BarGraph.c: 43: if (status == I2C1_MESSAGE_COMPLETE)
 12489                           
 12490                           ; BSR set to: 1
 12491  002506  0101               	movlb	1	; () banked
 12492  002508  513D               	movf	LEDBsetBrightness@status& (0+255),w,b
 12493  00250A  0101               	movlb	1	; () banked
 12494  00250C  B4D8               	btfsc	status,2,c
 12495  00250E  0012               	return	
 12496                           
 12497                           ; BSR set to: 1
 12498                           ;LED_BarGraph.c: 45: if (timeOut == 4)
 12499                           
 12500                           ; BSR set to: 1
 12501                           
 12502                           ; BSR set to: 1
 12503                           ;LED_BarGraph.c: 44: break;
 12504  002510  0E04               	movlw	4
 12505  002512  0101               	movlb	1	; () banked
 12506  002514  193B               	xorwf	LEDBsetBrightness@timeOut& (0+255),w,b
 12507  002516  0101               	movlb	1	; () banked
 12508  002518  113C               	iorwf	(LEDBsetBrightness@timeOut+1)& (0+255),w,b
 12509  00251A  B4D8               	btfsc	status,2,c
 12510  00251C  0012               	return	
 12511                           
 12512                           ; BSR set to: 1
 12513                           ;LED_BarGraph.c: 47: if (status == I2C1_MESSAGE_FAIL)
 12514                           
 12515                           ; BSR set to: 1
 12516                           
 12517                           ; BSR set to: 1
 12518                           ;LED_BarGraph.c: 46: break;
 12519  00251E  0101               	movlb	1	; () banked
 12520  002520  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12521  002522  B4D8               	btfsc	status,2,c
 12522  002524  0012               	return	
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;LED_BarGraph.c: 49: else
 12526                           ;LED_BarGraph.c: 50: timeOut++;
 12527                           
 12528                           ; BSR set to: 1
 12529                           
 12530                           ; BSR set to: 1
 12531                           
 12532                           ; BSR set to: 1
 12533                           ;LED_BarGraph.c: 48: break;
 12534  002526  0101               	movlb	1	; () banked
 12535  002528  4B3B               	infsnz	LEDBsetBrightness@timeOut& (0+255),f,b
 12536  00252A  2B3C               	incf	(LEDBsetBrightness@timeOut+1)& (0+255),f,b
 12537  00252C                     l6682:
 12538                           
 12539                           ; BSR set to: 1
 12540  00252C  0101               	movlb	1	; () banked
 12541  00252E  053D               	decf	LEDBsetBrightness@status& (0+255),w,b
 12542  002530  B4D8               	btfsc	status,2,c
 12543  002532  0012               	return	
 12544  002534  D7CC               	goto	l6662
 12545  002536                     __end_of_LEDBsetBrightness:
 12546                           	opt stack 0
 12547                           tosu	equ	0xFFF
 12548                           tosh	equ	0xFFE
 12549                           tosl	equ	0xFFD
 12550                           pclath	equ	0xFFA
 12551                           tblptru	equ	0xFF8
 12552                           tblptrh	equ	0xFF7
 12553                           tblptrl	equ	0xFF6
 12554                           tablat	equ	0xFF5
 12555                           prodh	equ	0xFF4
 12556                           prodl	equ	0xFF3
 12557                           intcon	equ	0xFF2
 12558                           intcon2	equ	0xFF1
 12559                           indf0	equ	0xFEF
 12560                           postinc0	equ	0xFEE
 12561                           fsr0h	equ	0xFEA
 12562                           fsr0l	equ	0xFE9
 12563                           wreg	equ	0xFE8
 12564                           indf2	equ	0xFDF
 12565                           postinc2	equ	0xFDE
 12566                           postdec2	equ	0xFDD
 12567                           plusw2	equ	0xFDB
 12568                           fsr2h	equ	0xFDA
 12569                           fsr2l	equ	0xFD9
 12570                           status	equ	0xFD8
 12571                           
 12572 ;; *************** function _I2C1_MasterWrite *****************
 12573 ;; Defined at:
 12574 ;;		line 551 in file "mcc_generated_files/i2c1.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 12577 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12578 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12579 ;;  length          2    2[BANK0 ] int 
 12580 ;;  address         2    4[BANK0 ] unsigned int 
 12581 ;;  pflag           2    6[BANK0 ] PTR enum E7739
 12582 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12583 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;		None
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  1    wreg      void 
 12588 ;; Registers used:
 12589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12590 ;; Tracked objects:
 12591 ;;		On entry : 0/0
 12592 ;;		On exit  : 0/0
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12595 ;;      Params:         0       8       0       0       0       0       0
 12596 ;;      Locals:         0       0       0       0       0       0       0
 12597 ;;      Temps:          0       0       0       0       0       0       0
 12598 ;;      Totals:         0       8       0       0       0       0       0
 12599 ;;Total ram usage:        8 bytes
 12600 ;; Hardware stack levels used:    1
 12601 ;; Hardware stack levels required when called:    5
 12602 ;; This function calls:
 12603 ;;		_I2C1_MasterTRBInsert
 12604 ;;		_I2C1_MasterWriteTRBBuild
 12605 ;; This function is called by:
 12606 ;;		_LEDBsetBrightness
 12607 ;;		_LEDblinkRate
 12608 ;;		_LEDbegin
 12609 ;;		_LEDwriteDisplay
 12610 ;;		_OLED_command
 12611 ;;		_oledPutChar
 12612 ;;		_Display
 12613 ;; This function uses a non-reentrant model
 12614 ;;
 12615                           
 12616                           	psect	text61
 12617  002C16                     __ptext61:
 12618                           	opt stack 0
 12619  002C16                     _I2C1_MasterWrite:
 12620                           	opt stack 22
 12621                           
 12622                           ;i2c1.c: 557: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 12623                           ;i2c1.c: 560: if (i2c1_object.trStatus.s.full != 1)
 12624                           
 12625                           ; BSR set to: 1
 12626                           ;incstack = 0
 12627  002C16  0100               	movlb	0	; () banked
 12628  002C18  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12629  002C1A  D021               	goto	l6128
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;i2c1.c: 561: {
 12633                           ;i2c1.c: 562: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 12634  002C1C  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12635  002C1E  6E1B               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
 12636  002C20  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12637  002C22  6E1C               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
 12638  002C24  C0F2  F01D         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
 12639  002C28  C0F3  F01E         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
 12640  002C2C  C0F4  F01F         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
 12641  002C30  C0F5  F020         	movff	I2C1_MasterWrite@length+1,I2C1_MasterWriteTRBBuild@length+1
 12642  002C34  C0F6  F021         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
 12643  002C38  C0F7  F022         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
 12644  002C3C  ECCB  F016         	call	_I2C1_MasterWriteTRBBuild	;wreg free
 12645                           
 12646                           ;i2c1.c: 563: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12647  002C40  0E00               	movlw	0
 12648  002C42  6E1C               	movwf	I2C1_MasterTRBInsert@count+1,c
 12649  002C44  0E01               	movlw	1
 12650  002C46  6E1B               	movwf	I2C1_MasterTRBInsert@count,c
 12651  002C48  0EE6               	movlw	low I2C1_MasterWrite@trBlock
 12652  002C4A  6E1D               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
 12653  002C4C  0E00               	movlw	high I2C1_MasterWrite@trBlock
 12654  002C4E  6E1E               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
 12655  002C50  C0F8  F01F         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
 12656  002C54  C0F9  F020         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
 12657  002C58  EC57  F010         	call	_I2C1_MasterTRBInsert	;wreg free
 12658                           
 12659                           ;i2c1.c: 564: }
 12660  002C5C  0012               	return	
 12661  002C5E                     l6128:
 12662                           
 12663                           ;i2c1.c: 565: else
 12664                           ;i2c1.c: 566: {
 12665                           ;i2c1.c: 567: *pflag = I2C1_MESSAGE_FAIL;
 12666  002C5E  C0F8  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
 12667  002C62  C0F9  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
 12668  002C66  0E01               	movlw	1
 12669  002C68  6EDF               	movwf	indf2,c
 12670  002C6A  0012               	return	
 12671  002C6C                     __end_of_I2C1_MasterWrite:
 12672                           	opt stack 0
 12673                           tosu	equ	0xFFF
 12674                           tosh	equ	0xFFE
 12675                           tosl	equ	0xFFD
 12676                           pclath	equ	0xFFA
 12677                           tblptru	equ	0xFF8
 12678                           tblptrh	equ	0xFF7
 12679                           tblptrl	equ	0xFF6
 12680                           tablat	equ	0xFF5
 12681                           prodh	equ	0xFF4
 12682                           prodl	equ	0xFF3
 12683                           intcon	equ	0xFF2
 12684                           intcon2	equ	0xFF1
 12685                           indf0	equ	0xFEF
 12686                           postinc0	equ	0xFEE
 12687                           fsr0h	equ	0xFEA
 12688                           fsr0l	equ	0xFE9
 12689                           wreg	equ	0xFE8
 12690                           indf2	equ	0xFDF
 12691                           postinc2	equ	0xFDE
 12692                           postdec2	equ	0xFDD
 12693                           plusw2	equ	0xFDB
 12694                           fsr2h	equ	0xFDA
 12695                           fsr2l	equ	0xFD9
 12696                           status	equ	0xFD8
 12697                           
 12698 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 12699 ;; Defined at:
 12700 ;;		line 660 in file "mcc_generated_files/i2c1.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;  ptrb            2   26[COMRAM] PTR struct .
 12703 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 12704 ;;  pdata           2   28[COMRAM] PTR unsigned char 
 12705 ;;		 -> picture(272), oledPutChar@bytes(9), Buff(2), LEDwriteDisplay@writeBuffer(20), 
 12706 ;;		 -> LEDbegin@writeBuffer(3), LEDblinkRate@writeBuffer(2), LEDBsetBrightness@writeBuffer(2), 
 12707 ;;  length          2   30[COMRAM] int 
 12708 ;;  address         2   32[COMRAM] unsigned int 
 12709 ;; Auto vars:     Size  Location     Type
 12710 ;;		None
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  1    wreg      void 
 12713 ;; Registers used:
 12714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12720 ;;      Params:         8       0       0       0       0       0       0
 12721 ;;      Locals:         0       0       0       0       0       0       0
 12722 ;;      Temps:          2       0       0       0       0       0       0
 12723 ;;      Totals:        10       0       0       0       0       0       0
 12724 ;;Total ram usage:       10 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    4
 12727 ;; This function calls:
 12728 ;;		Nothing
 12729 ;; This function is called by:
 12730 ;;		_I2C1_MasterWrite
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           	psect	text62
 12735  002D96                     __ptext62:
 12736                           	opt stack 0
 12737  002D96                     _I2C1_MasterWriteTRBBuild:
 12738                           	opt stack 22
 12739                           
 12740                           ;i2c1.c: 666: ptrb->address = address << 1;
 12741                           
 12742                           ;incstack = 0
 12743  002D96  C021  F023         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
 12744  002D9A  C022  F024         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
 12745  002D9E  90D8               	bcf	status,0,c
 12746  002DA0  3623               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
 12747  002DA2  3624               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
 12748  002DA4  C01B  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
 12749  002DA8  C01C  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
 12750  002DAC  C023  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
 12751  002DB0  C024  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
 12752                           
 12753                           ;i2c1.c: 667: ptrb->length = length;
 12754  002DB4  EE20 F002          	lfsr	2,2
 12755  002DB8  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12756  002DBA  26D9               	addwf	fsr2l,f,c
 12757  002DBC  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12758  002DBE  22DA               	addwfc	fsr2h,f,c
 12759  002DC0  C01F  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
 12760                           
 12761                           ;i2c1.c: 668: ptrb->pbuffer = pdata;
 12762  002DC4  EE20 F003          	lfsr	2,3
 12763  002DC8  501B               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
 12764  002DCA  26D9               	addwf	fsr2l,f,c
 12765  002DCC  501C               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
 12766  002DCE  22DA               	addwfc	fsr2h,f,c
 12767  002DD0  C01D  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
 12768  002DD4  C01E  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
 12769  002DD8  0012               	return		;funcret
 12770  002DDA                     __end_of_I2C1_MasterWriteTRBBuild:
 12771                           	opt stack 0
 12772                           tosu	equ	0xFFF
 12773                           tosh	equ	0xFFE
 12774                           tosl	equ	0xFFD
 12775                           pclath	equ	0xFFA
 12776                           tblptru	equ	0xFF8
 12777                           tblptrh	equ	0xFF7
 12778                           tblptrl	equ	0xFF6
 12779                           tablat	equ	0xFF5
 12780                           prodh	equ	0xFF4
 12781                           prodl	equ	0xFF3
 12782                           intcon	equ	0xFF2
 12783                           intcon2	equ	0xFF1
 12784                           indf0	equ	0xFEF
 12785                           postinc0	equ	0xFEE
 12786                           fsr0h	equ	0xFEA
 12787                           fsr0l	equ	0xFE9
 12788                           wreg	equ	0xFE8
 12789                           indf2	equ	0xFDF
 12790                           postinc2	equ	0xFDE
 12791                           postdec2	equ	0xFDD
 12792                           plusw2	equ	0xFDB
 12793                           fsr2h	equ	0xFDA
 12794                           fsr2l	equ	0xFD9
 12795                           status	equ	0xFD8
 12796                           
 12797 ;; *************** function _I2C1_MasterTRBInsert *****************
 12798 ;; Defined at:
 12799 ;;		line 594 in file "mcc_generated_files/i2c1.c"
 12800 ;; Parameters:    Size  Location     Type
 12801 ;;  count           2   26[COMRAM] int 
 12802 ;;  ptrb_list       2   28[COMRAM] PTR struct .
 12803 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 12804 ;;  pflag           2   30[COMRAM] PTR enum E7739
 12805 ;;		 -> Display@status(1), oledPutChar@status(1), OLED_command@status(1), LEDwriteDisplay@status(1), 
 12806 ;;		 -> LEDbegin@status(1), LEDblinkRate@status(1), LEDBsetBrightness@status(1), 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;		None
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      void 
 12811 ;; Registers used:
 12812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12818 ;;      Params:         6       0       0       0       0       0       0
 12819 ;;      Locals:         0       0       0       0       0       0       0
 12820 ;;      Temps:          1       0       0       0       0       0       0
 12821 ;;      Totals:         7       0       0       0       0       0       0
 12822 ;;Total ram usage:        7 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:    4
 12825 ;; This function calls:
 12826 ;;		Nothing
 12827 ;; This function is called by:
 12828 ;;		_I2C1_MasterWrite
 12829 ;;		_I2C1_MasterRead
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           	psect	text63
 12834  0020AE                     __ptext63:
 12835                           	opt stack 0
 12836  0020AE                     _I2C1_MasterTRBInsert:
 12837                           	opt stack 22
 12838                           
 12839                           ;i2c1.c: 601: if (i2c1_object.trStatus.s.full != 1)
 12840                           
 12841                           ;incstack = 0
 12842  0020AE  0100               	movlb	0	; () banked
 12843  0020B0  B1BC               	btfsc	(_i2c1_object+4)& (0+255),0,b
 12844  0020B2  D046               	goto	l6108
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;i2c1.c: 602: {
 12848                           ;i2c1.c: 603: *pflag = I2C1_MESSAGE_PENDING;
 12849  0020B4  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12850  0020B8  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12851  0020BC  0E02               	movlw	2
 12852  0020BE  6EDF               	movwf	indf2,c
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;i2c1.c: 605: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 12856  0020C0  0100               	movlb	0	; () banked
 12857  0020C2  EE20 F001          	lfsr	2,1
 12858  0020C6  51B8               	movf	_i2c1_object& (0+255),w,b
 12859  0020C8  26D9               	addwf	fsr2l,f,c
 12860  0020CA  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12861  0020CC  22DA               	addwfc	fsr2h,f,c
 12862  0020CE  C01D  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
 12863  0020D2  C01E  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;i2c1.c: 606: i2c1_object.pTrTail->count = count;
 12867  0020D6  C0B8  FFD9         	movff	_i2c1_object,fsr2l
 12868  0020DA  C0B9  FFDA         	movff	_i2c1_object+1,fsr2h
 12869  0020DE  C01B  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;i2c1.c: 607: i2c1_object.pTrTail->pTrFlag = pflag;
 12873  0020E2  0100               	movlb	0	; () banked
 12874  0020E4  EE20 F003          	lfsr	2,3
 12875  0020E8  51B8               	movf	_i2c1_object& (0+255),w,b
 12876  0020EA  26D9               	addwf	fsr2l,f,c
 12877  0020EC  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12878  0020EE  22DA               	addwfc	fsr2h,f,c
 12879  0020F0  C01F  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
 12880  0020F4  C020  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;i2c1.c: 608: i2c1_object.pTrTail++;
 12884  0020F8  0E05               	movlw	5
 12885  0020FA  0100               	movlb	0	; () banked
 12886  0020FC  27B8               	addwf	_i2c1_object& (0+255),f,b
 12887  0020FE  0E00               	movlw	0
 12888  002100  23B9               	addwfc	(_i2c1_object+1)& (0+255),f,b
 12889                           
 12890                           ; BSR set to: 0
 12891                           ;i2c1.c: 611: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 12892  002102  0EF0               	movlw	low (_i2c1_tr_queue+5)
 12893  002104  0100               	movlb	0	; () banked
 12894  002106  19B8               	xorwf	_i2c1_object& (0+255),w,b
 12895  002108  E10B               	bnz	l6104
 12896  00210A  0E00               	movlw	high (_i2c1_tr_queue+5)
 12897  00210C  0100               	movlb	0	; () banked
 12898  00210E  19B9               	xorwf	(_i2c1_object+1)& (0+255),w,b
 12899  002110  A4D8               	btfss	status,2,c
 12900  002112  D006               	goto	l6104
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;i2c1.c: 612: {
 12904                           ;i2c1.c: 614: i2c1_object.pTrTail = i2c1_tr_queue;
 12905  002114  0EEB               	movlw	low _i2c1_tr_queue
 12906  002116  0100               	movlb	0	; () banked
 12907  002118  6FB8               	movwf	_i2c1_object& (0+255),b
 12908  00211A  0E00               	movlw	high _i2c1_tr_queue
 12909  00211C  0100               	movlb	0	; () banked
 12910  00211E  6FB9               	movwf	(_i2c1_object+1)& (0+255),b
 12911  002120                     l6104:
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;i2c1.c: 615: }
 12915                           ;i2c1.c: 619: i2c1_object.trStatus.s.empty = 0;
 12916  002120  0100               	movlb	0	; () banked
 12917  002122  93BC               	bcf	(_i2c1_object+4)& (0+255),1,b
 12918                           
 12919                           ;i2c1.c: 622: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 12920  002124  0100               	movlb	0	; () banked
 12921  002126  51B8               	movf	_i2c1_object& (0+255),w,b
 12922  002128  0100               	movlb	0	; () banked
 12923  00212A  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 12924  00212C  E10F               	bnz	l6110
 12925  00212E  0100               	movlb	0	; () banked
 12926  002130  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 12927  002132  0100               	movlb	0	; () banked
 12928  002134  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 12929  002136  A4D8               	btfss	status,2,c
 12930  002138  D009               	goto	l6110
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;i2c1.c: 623: {
 12934                           ;i2c1.c: 625: i2c1_object.trStatus.s.full = 1;
 12935  00213A  0100               	movlb	0	; () banked
 12936  00213C  81BC               	bsf	(_i2c1_object+4)& (0+255),0,b
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;i2c1.c: 626: }
 12940                           ;i2c1.c: 628: }
 12941  00213E  D006               	goto	l6110
 12942  002140                     l6108:
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;i2c1.c: 629: else
 12946                           ;i2c1.c: 630: {
 12947                           ;i2c1.c: 631: *pflag = I2C1_MESSAGE_FAIL;
 12948  002140  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12949  002144  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12950  002148  0E01               	movlw	1
 12951  00214A  6EDF               	movwf	indf2,c
 12952  00214C                     l6110:
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;i2c1.c: 632: }
 12956                           ;i2c1.c: 635: if (*pflag == I2C1_MESSAGE_PENDING)
 12957  00214C  C01F  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
 12958  002150  C020  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
 12959  002154  0E02               	movlw	2
 12960  002156  18DE               	xorwf	postinc2,w,c
 12961  002158  A4D8               	btfss	status,2,c
 12962  00215A  0012               	return	
 12963  00215C                     l6114:
 12964  00215C  5038               	movf	_i2c1_state,w,c
 12965  00215E  A4D8               	btfss	status,2,c
 12966  002160  D7FD               	goto	l6114
 12967                           
 12968                           ;i2c1.c: 638: {
 12969                           ;i2c1.c: 641: PIR1bits.SSP1IF = 1;
 12970  002162  869E               	bsf	3998,3,c	;volatile
 12971  002164  0012               	return	
 12972  002166                     __end_of_I2C1_MasterTRBInsert:
 12973                           	opt stack 0
 12974                           tosu	equ	0xFFF
 12975                           tosh	equ	0xFFE
 12976                           tosl	equ	0xFFD
 12977                           pclath	equ	0xFFA
 12978                           tblptru	equ	0xFF8
 12979                           tblptrh	equ	0xFF7
 12980                           tblptrl	equ	0xFF6
 12981                           tablat	equ	0xFF5
 12982                           prodh	equ	0xFF4
 12983                           prodl	equ	0xFF3
 12984                           intcon	equ	0xFF2
 12985                           intcon2	equ	0xFF1
 12986                           indf0	equ	0xFEF
 12987                           postinc0	equ	0xFEE
 12988                           fsr0h	equ	0xFEA
 12989                           fsr0l	equ	0xFE9
 12990                           wreg	equ	0xFE8
 12991                           indf2	equ	0xFDF
 12992                           postinc2	equ	0xFDE
 12993                           postdec2	equ	0xFDD
 12994                           plusw2	equ	0xFDB
 12995                           fsr2h	equ	0xFDA
 12996                           fsr2l	equ	0xFD9
 12997                           status	equ	0xFD8
 12998                           
 12999 ;; *************** function _GetTime *****************
 13000 ;; Defined at:
 13001 ;;		line 97 in file "mcc_generated_files/tmr0.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;		None
 13004 ;; Auto vars:     Size  Location     Type
 13005 ;;		None
 13006 ;; Return value:  Size  Location     Type
 13007 ;;                  2   26[COMRAM] int 
 13008 ;; Registers used:
 13009 ;;		None
 13010 ;; Tracked objects:
 13011 ;;		On entry : 0/0
 13012 ;;		On exit  : 0/0
 13013 ;;		Unchanged: 0/0
 13014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13015 ;;      Params:         2       0       0       0       0       0       0
 13016 ;;      Locals:         0       0       0       0       0       0       0
 13017 ;;      Temps:          0       0       0       0       0       0       0
 13018 ;;      Totals:         2       0       0       0       0       0       0
 13019 ;;Total ram usage:        2 bytes
 13020 ;; Hardware stack levels used:    1
 13021 ;; Hardware stack levels required when called:    4
 13022 ;; This function calls:
 13023 ;;		Nothing
 13024 ;; This function is called by:
 13025 ;;		_main
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text64
 13030  0031D8                     __ptext64:
 13031                           	opt stack 0
 13032  0031D8                     _GetTime:
 13033                           	opt stack 26
 13034                           
 13035                           ;tmr0.c: 98: return time;
 13036                           
 13037                           ;incstack = 0
 13038  0031D8  C03F  F01B         	movff	_time,?_GetTime	;volatile
 13039  0031DC  6A1C               	clrf	?_GetTime+1,c
 13040  0031DE  0012               	return		;funcret
 13041  0031E0                     __end_of_GetTime:
 13042                           	opt stack 0
 13043                           tosu	equ	0xFFF
 13044                           tosh	equ	0xFFE
 13045                           tosl	equ	0xFFD
 13046                           pclath	equ	0xFFA
 13047                           tblptru	equ	0xFF8
 13048                           tblptrh	equ	0xFF7
 13049                           tblptrl	equ	0xFF6
 13050                           tablat	equ	0xFF5
 13051                           prodh	equ	0xFF4
 13052                           prodl	equ	0xFF3
 13053                           intcon	equ	0xFF2
 13054                           intcon2	equ	0xFF1
 13055                           indf0	equ	0xFEF
 13056                           postinc0	equ	0xFEE
 13057                           fsr0h	equ	0xFEA
 13058                           fsr0l	equ	0xFE9
 13059                           wreg	equ	0xFE8
 13060                           indf2	equ	0xFDF
 13061                           postinc2	equ	0xFDE
 13062                           postdec2	equ	0xFDD
 13063                           plusw2	equ	0xFDB
 13064                           fsr2h	equ	0xFDA
 13065                           fsr2l	equ	0xFD9
 13066                           status	equ	0xFD8
 13067                           
 13068 ;; *************** function _GetDataBarGraphB *****************
 13069 ;; Defined at:
 13070 ;;		line 57 in file "Communications.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;		None
 13073 ;; Auto vars:     Size  Location     Type
 13074 ;;		None
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  2   26[COMRAM] unsigned int 
 13077 ;; Registers used:
 13078 ;;		None
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13084 ;;      Params:         2       0       0       0       0       0       0
 13085 ;;      Locals:         0       0       0       0       0       0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0
 13087 ;;      Totals:         2       0       0       0       0       0       0
 13088 ;;Total ram usage:        2 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    4
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_main
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text65
 13099  0031C4                     __ptext65:
 13100                           	opt stack 0
 13101  0031C4                     _GetDataBarGraphB:
 13102                           	opt stack 26
 13103                           
 13104                           ;Communications.c: 58: return DataBarGraphA;
 13105                           
 13106                           ;incstack = 0
 13107  0031C4  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphB
 13108  0031C8  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphB+1
 13109  0031CC  0012               	return		;funcret
 13110  0031CE                     __end_of_GetDataBarGraphB:
 13111                           	opt stack 0
 13112                           tosu	equ	0xFFF
 13113                           tosh	equ	0xFFE
 13114                           tosl	equ	0xFFD
 13115                           pclath	equ	0xFFA
 13116                           tblptru	equ	0xFF8
 13117                           tblptrh	equ	0xFF7
 13118                           tblptrl	equ	0xFF6
 13119                           tablat	equ	0xFF5
 13120                           prodh	equ	0xFF4
 13121                           prodl	equ	0xFF3
 13122                           intcon	equ	0xFF2
 13123                           intcon2	equ	0xFF1
 13124                           indf0	equ	0xFEF
 13125                           postinc0	equ	0xFEE
 13126                           fsr0h	equ	0xFEA
 13127                           fsr0l	equ	0xFE9
 13128                           wreg	equ	0xFE8
 13129                           indf2	equ	0xFDF
 13130                           postinc2	equ	0xFDE
 13131                           postdec2	equ	0xFDD
 13132                           plusw2	equ	0xFDB
 13133                           fsr2h	equ	0xFDA
 13134                           fsr2l	equ	0xFD9
 13135                           status	equ	0xFD8
 13136                           
 13137 ;; *************** function _GetDataBarGraphA *****************
 13138 ;; Defined at:
 13139 ;;		line 53 in file "Communications.c"
 13140 ;; Parameters:    Size  Location     Type
 13141 ;;		None
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;		None
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  2   26[COMRAM] unsigned int 
 13146 ;; Registers used:
 13147 ;;		None
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13153 ;;      Params:         2       0       0       0       0       0       0
 13154 ;;      Locals:         0       0       0       0       0       0       0
 13155 ;;      Temps:          0       0       0       0       0       0       0
 13156 ;;      Totals:         2       0       0       0       0       0       0
 13157 ;;Total ram usage:        2 bytes
 13158 ;; Hardware stack levels used:    1
 13159 ;; Hardware stack levels required when called:    4
 13160 ;; This function calls:
 13161 ;;		Nothing
 13162 ;; This function is called by:
 13163 ;;		_main
 13164 ;; This function uses a non-reentrant model
 13165 ;;
 13166                           
 13167                           	psect	text66
 13168  0031CE                     __ptext66:
 13169                           	opt stack 0
 13170  0031CE                     _GetDataBarGraphA:
 13171                           	opt stack 26
 13172                           
 13173                           ;Communications.c: 54: return DataBarGraphA;
 13174                           
 13175                           ;incstack = 0
 13176  0031CE  C0C3  F01B         	movff	_DataBarGraphA,?_GetDataBarGraphA
 13177  0031D2  C0C4  F01C         	movff	_DataBarGraphA+1,?_GetDataBarGraphA+1
 13178  0031D6  0012               	return		;funcret
 13179  0031D8                     __end_of_GetDataBarGraphA:
 13180                           	opt stack 0
 13181                           tosu	equ	0xFFF
 13182                           tosh	equ	0xFFE
 13183                           tosl	equ	0xFFD
 13184                           pclath	equ	0xFFA
 13185                           tblptru	equ	0xFF8
 13186                           tblptrh	equ	0xFF7
 13187                           tblptrl	equ	0xFF6
 13188                           tablat	equ	0xFF5
 13189                           prodh	equ	0xFF4
 13190                           prodl	equ	0xFF3
 13191                           intcon	equ	0xFF2
 13192                           intcon2	equ	0xFF1
 13193                           indf0	equ	0xFEF
 13194                           postinc0	equ	0xFEE
 13195                           fsr0h	equ	0xFEA
 13196                           fsr0l	equ	0xFE9
 13197                           wreg	equ	0xFE8
 13198                           indf2	equ	0xFDF
 13199                           postinc2	equ	0xFDE
 13200                           postdec2	equ	0xFDD
 13201                           plusw2	equ	0xFDB
 13202                           fsr2h	equ	0xFDA
 13203                           fsr2l	equ	0xFD9
 13204                           status	equ	0xFD8
 13205                           
 13206 ;; *************** function _ClearTime *****************
 13207 ;; Defined at:
 13208 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;		None
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;		None
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1    wreg      void 
 13215 ;; Registers used:
 13216 ;;		wreg, status,2
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13222 ;;      Params:         0       0       0       0       0       0       0
 13223 ;;      Locals:         0       0       0       0       0       0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0
 13225 ;;      Totals:         0       0       0       0       0       0       0
 13226 ;;Total ram usage:        0 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; Hardware stack levels required when called:    4
 13229 ;; This function calls:
 13230 ;;		Nothing
 13231 ;; This function is called by:
 13232 ;;		_main
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236                           	psect	text67
 13237  0031E8                     __ptext67:
 13238                           	opt stack 0
 13239  0031E8                     _ClearTime:
 13240                           	opt stack 26
 13241                           
 13242                           ;tmr0.c: 103: time = 0;
 13243                           
 13244                           ;incstack = 0
 13245  0031E8  0E00               	movlw	0
 13246  0031EA  6E3F               	movwf	_time,c	;volatile
 13247  0031EC  0012               	return		;funcret
 13248  0031EE                     __end_of_ClearTime:
 13249                           	opt stack 0
 13250                           tosu	equ	0xFFF
 13251                           tosh	equ	0xFFE
 13252                           tosl	equ	0xFFD
 13253                           pclath	equ	0xFFA
 13254                           tblptru	equ	0xFF8
 13255                           tblptrh	equ	0xFF7
 13256                           tblptrl	equ	0xFF6
 13257                           tablat	equ	0xFF5
 13258                           prodh	equ	0xFF4
 13259                           prodl	equ	0xFF3
 13260                           intcon	equ	0xFF2
 13261                           intcon2	equ	0xFF1
 13262                           indf0	equ	0xFEF
 13263                           postinc0	equ	0xFEE
 13264                           fsr0h	equ	0xFEA
 13265                           fsr0l	equ	0xFE9
 13266                           wreg	equ	0xFE8
 13267                           indf2	equ	0xFDF
 13268                           postinc2	equ	0xFDE
 13269                           postdec2	equ	0xFDD
 13270                           plusw2	equ	0xFDB
 13271                           fsr2h	equ	0xFDA
 13272                           fsr2l	equ	0xFD9
 13273                           status	equ	0xFD8
 13274                           
 13275 ;; *************** function _INTERRUPT_InterruptManager *****************
 13276 ;; Defined at:
 13277 ;;		line 31 in file "mcc_generated_files/interrupt_manager.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;		None
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;		None
 13282 ;; Return value:  Size  Location     Type
 13283 ;;                  1    wreg      void 
 13284 ;; Registers used:
 13285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 13286 ;; Tracked objects:
 13287 ;;		On entry : 0/0
 13288 ;;		On exit  : 0/0
 13289 ;;		Unchanged: 0/0
 13290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13291 ;;      Params:         0       0       0       0       0       0       0
 13292 ;;      Locals:         0       0       0       0       0       0       0
 13293 ;;      Temps:         14       0       0       0       0       0       0
 13294 ;;      Totals:        14       0       0       0       0       0       0
 13295 ;;Total ram usage:       14 bytes
 13296 ;; Hardware stack levels used:    1
 13297 ;; Hardware stack levels required when called:    3
 13298 ;; This function calls:
 13299 ;;		_ADC_ISR
 13300 ;;		_EUSART1_Receive_ISR
 13301 ;;		_EUSART1_Transmit_ISR
 13302 ;;		_I2C1_BusCollisionISR
 13303 ;;		_I2C1_ISR
 13304 ;;		_TMR0_ISR
 13305 ;;		_TMR2_ISR
 13306 ;; This function is called by:
 13307 ;;		Interrupt level 2
 13308 ;; This function uses a non-reentrant model
 13309 ;;
 13310                           
 13311                           	psect	intcode
 13312  000008                     __pintcode:
 13313                           	opt stack 0
 13314  000008                     _INTERRUPT_InterruptManager:
 13315                           	opt stack 21
 13316                           
 13317                           ;incstack = 0
 13318  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13319  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
 13320  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13321  000012  CFE9 F00F          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 13322  000016  CFEA F010          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 13323  00001A  CFE1 F011          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 13324  00001E  CFE2 F012          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 13325  000022  CFD9 F013          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 13326  000026  CFDA F014          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 13327  00002A  CFF3 F015          	movff	prodl,??_INTERRUPT_InterruptManager+8
 13328  00002E  CFF4 F016          	movff	prodh,??_INTERRUPT_InterruptManager+9
 13329  000032  CFF6 F017          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 13330  000036  CFF7 F018          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 13331  00003A  CFF8 F019          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 13332  00003E  CFF5 F01A          	movff	tablat,??_INTERRUPT_InterruptManager+13
 13333                           
 13334                           ;interrupt_manager.c: 34: if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
 13335  000042  BA9D               	btfsc	3997,5,c	;volatile
 13336  000044  AA9E               	btfss	3998,5,c	;volatile
 13337  000046  D003               	goto	i2l277
 13338                           
 13339                           ;interrupt_manager.c: 35: {
 13340                           ;interrupt_manager.c: 36: EUSART1_Receive_ISR();
 13341  000048  EC6E  F018         	call	_EUSART1_Receive_ISR	;wreg free
 13342                           
 13343                           ;interrupt_manager.c: 37: }
 13344  00004C  D023               	goto	i2l291
 13345  00004E                     i2l277:
 13346                           
 13347                           ;interrupt_manager.c: 38: else if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13348  00004E  B89D               	btfsc	3997,4,c	;volatile
 13349  000050  A89E               	btfss	3998,4,c	;volatile
 13350  000052  D003               	goto	i2l279
 13351                           
 13352                           ;interrupt_manager.c: 39: {
 13353                           ;interrupt_manager.c: 40: EUSART1_Transmit_ISR();
 13354  000054  EC80  F017         	call	_EUSART1_Transmit_ISR	;wreg free
 13355                           
 13356                           ;interrupt_manager.c: 41: }
 13357  000058  D01D               	goto	i2l291
 13358  00005A                     i2l279:
 13359                           
 13360                           ;interrupt_manager.c: 42: else if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 13361  00005A  BAF2               	btfsc	intcon,5,c	;volatile
 13362  00005C  A4F2               	btfss	intcon,2,c	;volatile
 13363  00005E  D003               	goto	i2l281
 13364                           
 13365                           ;interrupt_manager.c: 43: {
 13366                           ;interrupt_manager.c: 44: TMR0_ISR();
 13367  000060  EC4A  F017         	call	_TMR0_ISR	;wreg free
 13368                           
 13369                           ;interrupt_manager.c: 45: }
 13370  000064  D017               	goto	i2l291
 13371  000066                     i2l281:
 13372                           
 13373                           ;interrupt_manager.c: 46: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 13374  000066  B29D               	btfsc	3997,1,c	;volatile
 13375  000068  A29E               	btfss	3998,1,c	;volatile
 13376  00006A  D003               	goto	i2l283
 13377                           
 13378                           ;interrupt_manager.c: 47: {
 13379                           ;interrupt_manager.c: 48: TMR2_ISR();
 13380  00006C  ECF0  F018         	call	_TMR2_ISR	;wreg free
 13381                           
 13382                           ;interrupt_manager.c: 49: }
 13383  000070  D011               	goto	i2l291
 13384  000072                     i2l283:
 13385                           
 13386                           ;interrupt_manager.c: 50: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 13387  000072  BC9D               	btfsc	3997,6,c	;volatile
 13388  000074  AC9E               	btfss	3998,6,c	;volatile
 13389  000076  D003               	goto	i2l285
 13390                           
 13391                           ;interrupt_manager.c: 51: {
 13392                           ;interrupt_manager.c: 52: ADC_ISR();
 13393  000078  ECFB  F018         	call	_ADC_ISR	;wreg free
 13394                           
 13395                           ;interrupt_manager.c: 53: }
 13396  00007C  D00B               	goto	i2l291
 13397  00007E                     i2l285:
 13398                           
 13399                           ;interrupt_manager.c: 54: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 13400  00007E  B69D               	btfsc	3997,3,c	;volatile
 13401  000080  A69E               	btfss	3998,3,c	;volatile
 13402  000082  D003               	goto	i2l287
 13403                           
 13404                           ;interrupt_manager.c: 55: {
 13405                           ;interrupt_manager.c: 56: I2C1_ISR();
 13406  000084  EC9A  F005         	call	_I2C1_ISR	;wreg free
 13407                           
 13408                           ;interrupt_manager.c: 57: }
 13409  000088  D005               	goto	i2l291
 13410  00008A                     i2l287:
 13411                           
 13412                           ;interrupt_manager.c: 58: else if(PIE2bits.BCL1IE == 1 && PIR2bits.BCL1IF == 1)
 13413  00008A  B6A0               	btfsc	4000,3,c	;volatile
 13414  00008C  A6A1               	btfss	4001,3,c	;volatile
 13415  00008E  D002               	goto	i2l291
 13416                           
 13417                           ;interrupt_manager.c: 59: {
 13418                           ;interrupt_manager.c: 60: I2C1_BusCollisionISR();
 13419  000090  ECFE  F018         	call	_I2C1_BusCollisionISR	;wreg free
 13420  000094                     i2l291:
 13421  000094  C01A  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 13422  000098  C019  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 13423  00009C  C018  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 13424  0000A0  C017  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 13425  0000A4  C016  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 13426  0000A8  C015  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 13427  0000AC  C014  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 13428  0000B0  C013  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 13429  0000B4  C012  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 13430  0000B8  C011  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 13431  0000BC  C010  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 13432  0000C0  C00F  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 13433  0000C4  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13434  0000C8  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13435  0000CC  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13436  0000CE  0011               	retfie		f
 13437  0000D0                     __end_of_INTERRUPT_InterruptManager:
 13438                           	opt stack 0
 13439                           tosu	equ	0xFFF
 13440                           tosh	equ	0xFFE
 13441                           tosl	equ	0xFFD
 13442                           pclatu	equ	0xFFB
 13443                           pclath	equ	0xFFA
 13444                           tblptru	equ	0xFF8
 13445                           tblptrh	equ	0xFF7
 13446                           tblptrl	equ	0xFF6
 13447                           tablat	equ	0xFF5
 13448                           prodh	equ	0xFF4
 13449                           prodl	equ	0xFF3
 13450                           intcon	equ	0xFF2
 13451                           intcon2	equ	0xFF1
 13452                           indf0	equ	0xFEF
 13453                           postinc0	equ	0xFEE
 13454                           fsr0h	equ	0xFEA
 13455                           fsr0l	equ	0xFE9
 13456                           wreg	equ	0xFE8
 13457                           fsr1h	equ	0xFE2
 13458                           fsr1l	equ	0xFE1
 13459                           indf2	equ	0xFDF
 13460                           postinc2	equ	0xFDE
 13461                           postdec2	equ	0xFDD
 13462                           plusw2	equ	0xFDB
 13463                           fsr2h	equ	0xFDA
 13464                           fsr2l	equ	0xFD9
 13465                           status	equ	0xFD8
 13466                           
 13467 ;; *************** function _TMR2_ISR *****************
 13468 ;; Defined at:
 13469 ;;		line 120 in file "mcc_generated_files/tmr2.c"
 13470 ;; Parameters:    Size  Location     Type
 13471 ;;		None
 13472 ;; Auto vars:     Size  Location     Type
 13473 ;;		None
 13474 ;; Return value:  Size  Location     Type
 13475 ;;                  1    wreg      void 
 13476 ;; Registers used:
 13477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13478 ;; Tracked objects:
 13479 ;;		On entry : 0/0
 13480 ;;		On exit  : 0/0
 13481 ;;		Unchanged: 0/0
 13482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13483 ;;      Params:         0       0       0       0       0       0       0
 13484 ;;      Locals:         0       0       0       0       0       0       0
 13485 ;;      Temps:          0       0       0       0       0       0       0
 13486 ;;      Totals:         0       0       0       0       0       0       0
 13487 ;;Total ram usage:        0 bytes
 13488 ;; Hardware stack levels used:    1
 13489 ;; Hardware stack levels required when called:    2
 13490 ;; This function calls:
 13491 ;;		_TMR2_CallBack
 13492 ;; This function is called by:
 13493 ;;		_INTERRUPT_InterruptManager
 13494 ;; This function uses a non-reentrant model
 13495 ;;
 13496                           
 13497                           	psect	text69
 13498  0031E0                     __ptext69:
 13499                           	opt stack 0
 13500  0031E0                     _TMR2_ISR:
 13501                           	opt stack 21
 13502                           
 13503                           ;tmr2.c: 124: PIR1bits.TMR2IF = 0;
 13504                           
 13505                           ;incstack = 0
 13506  0031E0  929E               	bcf	3998,1,c	;volatile
 13507                           
 13508                           ;tmr2.c: 128: TMR2_CallBack();
 13509  0031E2  EC5F  F008         	call	_TMR2_CallBack	;wreg free
 13510  0031E6  0012               	return		;funcret
 13511  0031E8                     __end_of_TMR2_ISR:
 13512                           	opt stack 0
 13513                           tosu	equ	0xFFF
 13514                           tosh	equ	0xFFE
 13515                           tosl	equ	0xFFD
 13516                           pclatu	equ	0xFFB
 13517                           pclath	equ	0xFFA
 13518                           tblptru	equ	0xFF8
 13519                           tblptrh	equ	0xFF7
 13520                           tblptrl	equ	0xFF6
 13521                           tablat	equ	0xFF5
 13522                           prodh	equ	0xFF4
 13523                           prodl	equ	0xFF3
 13524                           intcon	equ	0xFF2
 13525                           intcon2	equ	0xFF1
 13526                           indf0	equ	0xFEF
 13527                           postinc0	equ	0xFEE
 13528                           fsr0h	equ	0xFEA
 13529                           fsr0l	equ	0xFE9
 13530                           wreg	equ	0xFE8
 13531                           fsr1h	equ	0xFE2
 13532                           fsr1l	equ	0xFE1
 13533                           indf2	equ	0xFDF
 13534                           postinc2	equ	0xFDE
 13535                           postdec2	equ	0xFDD
 13536                           plusw2	equ	0xFDB
 13537                           fsr2h	equ	0xFDA
 13538                           fsr2l	equ	0xFD9
 13539                           status	equ	0xFD8
 13540                           
 13541 ;; *************** function _TMR2_CallBack *****************
 13542 ;; Defined at:
 13543 ;;		line 131 in file "mcc_generated_files/tmr2.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;		None
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;  i               2    2[COMRAM] int 
 13548 ;; Return value:  Size  Location     Type
 13549 ;;                  1    wreg      void 
 13550 ;; Registers used:
 13551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13557 ;;      Params:         0       0       0       0       0       0       0
 13558 ;;      Locals:         2       0       0       0       0       0       0
 13559 ;;      Temps:          2       0       0       0       0       0       0
 13560 ;;      Totals:         4       0       0       0       0       0       0
 13561 ;;Total ram usage:        4 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:    1
 13564 ;; This function calls:
 13565 ;;		Absolute function
 13566 ;;		_TMR2_DefaultInterruptHandler
 13567 ;; This function is called by:
 13568 ;;		_TMR2_ISR
 13569 ;; This function uses a non-reentrant model
 13570 ;;
 13571                           
 13572                           	psect	text70
 13573  0010BE                     __ptext70:
 13574                           	opt stack 0
 13575  0010BE                     _TMR2_CallBack:
 13576                           	opt stack 21
 13577                           
 13578                           ;tmr2.c: 133: int i = 0;
 13579                           
 13580                           ;incstack = 0
 13581  0010BE  0E00               	movlw	0
 13582  0010C0  6E04               	movwf	TMR2_CallBack@i+1,c
 13583  0010C2  0E00               	movlw	0
 13584  0010C4  6E03               	movwf	TMR2_CallBack@i,c
 13585                           
 13586                           ;tmr2.c: 134: while (i <= 5) {
 13587  0010C6  D0C3               	goto	i2l456
 13588  0010C8                     i2l4772:
 13589                           
 13590                           ;tmr2.c: 136: if (LEDNUM_ENAB[i] == 1) {
 13591  0010C8  90D8               	bcf	status,0,c
 13592  0010CA  3403               	rlcf	TMR2_CallBack@i,w,c
 13593  0010CC  6ED9               	movwf	fsr2l,c
 13594  0010CE  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13595  0010D0  6EDA               	movwf	fsr2h,c
 13596  0010D2  0E98               	movlw	low _LEDNUM_ENAB
 13597  0010D4  26D9               	addwf	fsr2l,f,c
 13598  0010D6  0E00               	movlw	high _LEDNUM_ENAB
 13599  0010D8  22DA               	addwfc	fsr2h,f,c
 13600  0010DA  04DE               	decf	postinc2,w,c
 13601  0010DC  10DE               	iorwf	postinc2,w,c
 13602  0010DE  B4D8               	btfsc	status,2,c
 13603  0010E0  D098               	goto	i2l4790
 13604  0010E2  D0AF               	goto	i2l4792
 13605  0010E4                     i2l463:
 13606  0010E4  B28B               	btfsc	3979,1,c	;volatile
 13607  0010E6  D002               	goto	i2u404_40
 13608  0010E8  828B               	bsf	3979,1,c	;volatile
 13609  0010EA  D03B               	goto	i2l4780
 13610  0010EC                     i2u404_40:
 13611  0010EC  928B               	bcf	3979,1,c	;volatile
 13612                           
 13613                           ;tmr2.c: 142: break;
 13614  0010EE  D039               	goto	i2l4780
 13615  0010F0                     i2l467:
 13616  0010F0  BC89               	btfsc	3977,6,c	;volatile
 13617  0010F2  D002               	goto	i2u406_40
 13618  0010F4  8C89               	bsf	3977,6,c	;volatile
 13619  0010F6  D035               	goto	i2l4780
 13620  0010F8                     i2u406_40:
 13621  0010F8  9C89               	bcf	3977,6,c	;volatile
 13622                           
 13623                           ;tmr2.c: 145: break;
 13624  0010FA  D033               	goto	i2l4780
 13625  0010FC                     i2l470:
 13626  0010FC  BE89               	btfsc	3977,7,c	;volatile
 13627  0010FE  D002               	goto	i2u408_40
 13628  001100  8E89               	bsf	3977,7,c	;volatile
 13629  001102  D02F               	goto	i2l4780
 13630  001104                     i2u408_40:
 13631  001104  9E89               	bcf	3977,7,c	;volatile
 13632                           
 13633                           ;tmr2.c: 148: break;
 13634  001106  D02D               	goto	i2l4780
 13635  001108                     i2l473:
 13636  001108  B48D               	btfsc	3981,2,c	;volatile
 13637  00110A  D002               	goto	i2u410_40
 13638  00110C  848D               	bsf	3981,2,c	;volatile
 13639  00110E  D029               	goto	i2l4780
 13640  001110                     i2u410_40:
 13641  001110  948D               	bcf	3981,2,c	;volatile
 13642                           
 13643                           ;tmr2.c: 151: break;
 13644  001112  D027               	goto	i2l4780
 13645  001114                     i2l476:
 13646  001114  B28D               	btfsc	3981,1,c	;volatile
 13647  001116  D002               	goto	i2u412_40
 13648  001118  828D               	bsf	3981,1,c	;volatile
 13649  00111A  D023               	goto	i2l4780
 13650  00111C                     i2u412_40:
 13651  00111C  928D               	bcf	3981,1,c	;volatile
 13652                           
 13653                           ;tmr2.c: 154: break;
 13654  00111E  D021               	goto	i2l4780
 13655  001120                     i2l479:
 13656  001120  B08D               	btfsc	3981,0,c	;volatile
 13657  001122  D002               	goto	i2u414_40
 13658  001124  808D               	bsf	3981,0,c	;volatile
 13659  001126  D01D               	goto	i2l4780
 13660  001128                     i2u414_40:
 13661  001128  908D               	bcf	3981,0,c	;volatile
 13662                           
 13663                           ;tmr2.c: 158: }
 13664                           
 13665                           ;tmr2.c: 157: break;
 13666  00112A  D01B               	goto	i2l4780
 13667  00112C                     i2l4778:
 13668  00112C  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13669  001130  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13670                           
 13671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13672                           ; Switch size 1, requested type "space"
 13673                           ; Number of cases is 1, Range of values is 0 to 0
 13674                           ; switch strategies available:
 13675                           ; Name         Instructions Cycles
 13676                           ; simple_byte            4     3 (average)
 13677                           ;	Chosen strategy is simple_byte
 13678  001134  5002               	movf	??_TMR2_CallBack+1,w,c
 13679  001136  0A00               	xorlw	0	; case 0
 13680  001138  A4D8               	btfss	status,2,c
 13681  00113A  D013               	goto	i2l4780
 13682                           
 13683                           ; Switch size 1, requested type "space"
 13684                           ; Number of cases is 6, Range of values is 0 to 5
 13685                           ; switch strategies available:
 13686                           ; Name         Instructions Cycles
 13687                           ; simple_byte           19    10 (average)
 13688                           ;	Chosen strategy is simple_byte
 13689  00113C  5001               	movf	??_TMR2_CallBack,w,c
 13690  00113E  0A00               	xorlw	0	; case 0
 13691  001140  B4D8               	btfsc	status,2,c
 13692  001142  D7D0               	goto	i2l463
 13693  001144  0A01               	xorlw	1	; case 1
 13694  001146  B4D8               	btfsc	status,2,c
 13695  001148  D7D3               	goto	i2l467
 13696  00114A  0A03               	xorlw	3	; case 2
 13697  00114C  B4D8               	btfsc	status,2,c
 13698  00114E  D7D6               	goto	i2l470
 13699  001150  0A01               	xorlw	1	; case 3
 13700  001152  B4D8               	btfsc	status,2,c
 13701  001154  D7D9               	goto	i2l473
 13702  001156  0A07               	xorlw	7	; case 4
 13703  001158  B4D8               	btfsc	status,2,c
 13704  00115A  D7DC               	goto	i2l476
 13705  00115C  0A01               	xorlw	1	; case 5
 13706  00115E  B4D8               	btfsc	status,2,c
 13707  001160  D7DF               	goto	i2l479
 13708  001162                     i2l4780:
 13709                           
 13710                           ;tmr2.c: 159: LEDState[i] = 1;
 13711  001162  90D8               	bcf	status,0,c
 13712  001164  3403               	rlcf	TMR2_CallBack@i,w,c
 13713  001166  6ED9               	movwf	fsr2l,c
 13714  001168  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13715  00116A  6EDA               	movwf	fsr2h,c
 13716  00116C  0EA4               	movlw	low _LEDState
 13717  00116E  26D9               	addwf	fsr2l,f,c
 13718  001170  0E00               	movlw	high _LEDState
 13719  001172  22DA               	addwfc	fsr2h,f,c
 13720  001174  0E01               	movlw	1
 13721  001176  D049               	goto	L4
 13722  001178                     i2l485:
 13723  001178  B28B               	btfsc	3979,1,c	;volatile
 13724  00117A  D002               	goto	i2u416_40
 13725  00117C  828B               	bsf	3979,1,c	;volatile
 13726  00117E  D03B               	goto	i2l4786
 13727  001180                     i2u416_40:
 13728  001180  928B               	bcf	3979,1,c	;volatile
 13729                           
 13730                           ;tmr2.c: 165: break;
 13731  001182  D039               	goto	i2l4786
 13732  001184                     i2l489:
 13733  001184  BC89               	btfsc	3977,6,c	;volatile
 13734  001186  D002               	goto	i2u418_40
 13735  001188  8C89               	bsf	3977,6,c	;volatile
 13736  00118A  D035               	goto	i2l4786
 13737  00118C                     i2u418_40:
 13738  00118C  9C89               	bcf	3977,6,c	;volatile
 13739                           
 13740                           ;tmr2.c: 168: break;
 13741  00118E  D033               	goto	i2l4786
 13742  001190                     i2l492:
 13743  001190  BE89               	btfsc	3977,7,c	;volatile
 13744  001192  D002               	goto	i2u420_40
 13745  001194  8E89               	bsf	3977,7,c	;volatile
 13746  001196  D02F               	goto	i2l4786
 13747  001198                     i2u420_40:
 13748  001198  9E89               	bcf	3977,7,c	;volatile
 13749                           
 13750                           ;tmr2.c: 171: break;
 13751  00119A  D02D               	goto	i2l4786
 13752  00119C                     i2l495:
 13753  00119C  B48D               	btfsc	3981,2,c	;volatile
 13754  00119E  D002               	goto	i2u422_40
 13755  0011A0  848D               	bsf	3981,2,c	;volatile
 13756  0011A2  D029               	goto	i2l4786
 13757  0011A4                     i2u422_40:
 13758  0011A4  948D               	bcf	3981,2,c	;volatile
 13759                           
 13760                           ;tmr2.c: 174: break;
 13761  0011A6  D027               	goto	i2l4786
 13762  0011A8                     i2l498:
 13763  0011A8  B28D               	btfsc	3981,1,c	;volatile
 13764  0011AA  D002               	goto	i2u424_40
 13765  0011AC  828D               	bsf	3981,1,c	;volatile
 13766  0011AE  D023               	goto	i2l4786
 13767  0011B0                     i2u424_40:
 13768  0011B0  928D               	bcf	3981,1,c	;volatile
 13769                           
 13770                           ;tmr2.c: 177: break;
 13771  0011B2  D021               	goto	i2l4786
 13772  0011B4                     i2l501:
 13773  0011B4  B08D               	btfsc	3981,0,c	;volatile
 13774  0011B6  D002               	goto	i2u426_40
 13775  0011B8  808D               	bsf	3981,0,c	;volatile
 13776  0011BA  D01D               	goto	i2l4786
 13777  0011BC                     i2u426_40:
 13778  0011BC  908D               	bcf	3981,0,c	;volatile
 13779                           
 13780                           ;tmr2.c: 181: }
 13781                           
 13782                           ;tmr2.c: 180: break;
 13783  0011BE  D01B               	goto	i2l4786
 13784  0011C0                     i2l4784:
 13785  0011C0  C003  F001         	movff	TMR2_CallBack@i,??_TMR2_CallBack
 13786  0011C4  C004  F002         	movff	TMR2_CallBack@i+1,??_TMR2_CallBack+1
 13787                           
 13788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13789                           ; Switch size 1, requested type "space"
 13790                           ; Number of cases is 1, Range of values is 0 to 0
 13791                           ; switch strategies available:
 13792                           ; Name         Instructions Cycles
 13793                           ; simple_byte            4     3 (average)
 13794                           ;	Chosen strategy is simple_byte
 13795  0011C8  5002               	movf	??_TMR2_CallBack+1,w,c
 13796  0011CA  0A00               	xorlw	0	; case 0
 13797  0011CC  A4D8               	btfss	status,2,c
 13798  0011CE  D013               	goto	i2l4786
 13799                           
 13800                           ; Switch size 1, requested type "space"
 13801                           ; Number of cases is 6, Range of values is 0 to 5
 13802                           ; switch strategies available:
 13803                           ; Name         Instructions Cycles
 13804                           ; simple_byte           19    10 (average)
 13805                           ;	Chosen strategy is simple_byte
 13806  0011D0  5001               	movf	??_TMR2_CallBack,w,c
 13807  0011D2  0A00               	xorlw	0	; case 0
 13808  0011D4  B4D8               	btfsc	status,2,c
 13809  0011D6  D7D0               	goto	i2l485
 13810  0011D8  0A01               	xorlw	1	; case 1
 13811  0011DA  B4D8               	btfsc	status,2,c
 13812  0011DC  D7D3               	goto	i2l489
 13813  0011DE  0A03               	xorlw	3	; case 2
 13814  0011E0  B4D8               	btfsc	status,2,c
 13815  0011E2  D7D6               	goto	i2l492
 13816  0011E4  0A01               	xorlw	1	; case 3
 13817  0011E6  B4D8               	btfsc	status,2,c
 13818  0011E8  D7D9               	goto	i2l495
 13819  0011EA  0A07               	xorlw	7	; case 4
 13820  0011EC  B4D8               	btfsc	status,2,c
 13821  0011EE  D7DC               	goto	i2l498
 13822  0011F0  0A01               	xorlw	1	; case 5
 13823  0011F2  B4D8               	btfsc	status,2,c
 13824  0011F4  D7DF               	goto	i2l501
 13825  0011F6                     i2l4786:
 13826                           
 13827                           ;tmr2.c: 182: LEDState[i] = 0;
 13828  0011F6  90D8               	bcf	status,0,c
 13829  0011F8  3403               	rlcf	TMR2_CallBack@i,w,c
 13830  0011FA  6ED9               	movwf	fsr2l,c
 13831  0011FC  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13832  0011FE  6EDA               	movwf	fsr2h,c
 13833  001200  0EA4               	movlw	low _LEDState
 13834  001202  26D9               	addwf	fsr2l,f,c
 13835  001204  0E00               	movlw	high _LEDState
 13836  001206  22DA               	addwfc	fsr2h,f,c
 13837  001208  0E00               	movlw	0
 13838  00120A                     L4:
 13839  00120A  6EDE               	movwf	postinc2,c
 13840  00120C  0E00               	movlw	0
 13841  00120E  6EDD               	movwf	postdec2,c
 13842                           
 13843                           ;tmr2.c: 184: }
 13844                           
 13845                           ;tmr2.c: 183: break;
 13846  001210  D018               	goto	i2l4792
 13847  001212                     i2l4790:
 13848  001212  90D8               	bcf	status,0,c
 13849  001214  3403               	rlcf	TMR2_CallBack@i,w,c
 13850  001216  6ED9               	movwf	fsr2l,c
 13851  001218  3404               	rlcf	TMR2_CallBack@i+1,w,c
 13852  00121A  6EDA               	movwf	fsr2h,c
 13853  00121C  0EA4               	movlw	low _LEDState
 13854  00121E  26D9               	addwf	fsr2l,f,c
 13855  001220  0E00               	movlw	high _LEDState
 13856  001222  22DA               	addwfc	fsr2h,f,c
 13857  001224  CFDE F001          	movff	postinc2,??_TMR2_CallBack
 13858  001228  CFDD F002          	movff	postdec2,??_TMR2_CallBack+1
 13859                           
 13860                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13861                           ; Switch size 1, requested type "space"
 13862                           ; Number of cases is 1, Range of values is 0 to 0
 13863                           ; switch strategies available:
 13864                           ; Name         Instructions Cycles
 13865                           ; simple_byte            4     3 (average)
 13866                           ;	Chosen strategy is simple_byte
 13867  00122C  5002               	movf	??_TMR2_CallBack+1,w,c
 13868  00122E  0A00               	xorlw	0	; case 0
 13869  001230  A4D8               	btfss	status,2,c
 13870  001232  D007               	goto	i2l4792
 13871                           
 13872                           ; Switch size 1, requested type "space"
 13873                           ; Number of cases is 2, Range of values is 0 to 1
 13874                           ; switch strategies available:
 13875                           ; Name         Instructions Cycles
 13876                           ; simple_byte            7     4 (average)
 13877                           ;	Chosen strategy is simple_byte
 13878  001234  5001               	movf	??_TMR2_CallBack,w,c
 13879  001236  0A00               	xorlw	0	; case 0
 13880  001238  B4D8               	btfsc	status,2,c
 13881  00123A  D778               	goto	i2l4778
 13882  00123C  0A01               	xorlw	1	; case 1
 13883  00123E  B4D8               	btfsc	status,2,c
 13884  001240  D7BF               	goto	i2l4784
 13885  001242                     i2l4792:
 13886                           
 13887                           ;tmr2.c: 185: }
 13888                           ;tmr2.c: 186: i = i + 1;
 13889  001242  0E01               	movlw	1
 13890  001244  2403               	addwf	TMR2_CallBack@i,w,c
 13891  001246  6E03               	movwf	TMR2_CallBack@i,c
 13892  001248  0E00               	movlw	0
 13893  00124A  2004               	addwfc	TMR2_CallBack@i+1,w,c
 13894  00124C  6E04               	movwf	TMR2_CallBack@i+1,c
 13895  00124E                     i2l456:
 13896  00124E  BE04               	btfsc	TMR2_CallBack@i+1,7,c
 13897  001250  D73B               	goto	i2l4772
 13898  001252  5004               	movf	TMR2_CallBack@i+1,w,c
 13899  001254  E104               	bnz	i2l4794
 13900  001256  0E06               	movlw	6
 13901  001258  5C03               	subwf	TMR2_CallBack@i,w,c
 13902  00125A  A0D8               	btfss	status,0,c
 13903  00125C  D735               	goto	i2l4772
 13904  00125E                     i2l4794:
 13905                           
 13906                           ;tmr2.c: 187: }
 13907                           ;tmr2.c: 191: if(TMR2_InterruptHandler)
 13908  00125E  0100               	movlb	0	; () banked
 13909  001260  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13910  001262  0100               	movlb	0	; () banked
 13911  001264  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13912  001266  B4D8               	btfsc	status,2,c
 13913  001268  0012               	return	
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;tmr2.c: 192: {
 13917                           ;tmr2.c: 193: TMR2_InterruptHandler();
 13918  00126A  D801               	call	i2u430_48
 13919  00126C  0012               	return	
 13920  00126E                     i2u430_48:
 13921  00126E  0005               	push	
 13922  001270  0100               	movlb	0	; () banked
 13923  001272  6EFA               	movwf	pclath,c
 13924  001274  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
 13925  001276  6EFD               	movwf	tosl,c
 13926  001278  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 13927  00127A  6EFE               	movwf	tosh,c
 13928  00127C  50F8               	movf	tblptru,w,c
 13929  00127E  6EFF               	movwf	tosu,c
 13930  001280  50FA               	movf	pclath,w,c
 13931  001282  0012               	return		;indir
 13932  001284                     __end_of_TMR2_CallBack:
 13933                           	opt stack 0
 13934                           tosu	equ	0xFFF
 13935                           tosh	equ	0xFFE
 13936                           tosl	equ	0xFFD
 13937                           pclatu	equ	0xFFB
 13938                           pclath	equ	0xFFA
 13939                           tblptru	equ	0xFF8
 13940                           tblptrh	equ	0xFF7
 13941                           tblptrl	equ	0xFF6
 13942                           tablat	equ	0xFF5
 13943                           prodh	equ	0xFF4
 13944                           prodl	equ	0xFF3
 13945                           intcon	equ	0xFF2
 13946                           intcon2	equ	0xFF1
 13947                           indf0	equ	0xFEF
 13948                           postinc0	equ	0xFEE
 13949                           fsr0h	equ	0xFEA
 13950                           fsr0l	equ	0xFE9
 13951                           wreg	equ	0xFE8
 13952                           fsr1h	equ	0xFE2
 13953                           fsr1l	equ	0xFE1
 13954                           indf2	equ	0xFDF
 13955                           postinc2	equ	0xFDE
 13956                           postdec2	equ	0xFDD
 13957                           plusw2	equ	0xFDB
 13958                           fsr2h	equ	0xFDA
 13959                           fsr2l	equ	0xFD9
 13960                           status	equ	0xFD8
 13961                           
 13962 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 13963 ;; Defined at:
 13964 ;;		line 295 in file "mcc_generated_files/tmr2.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;		None
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;		None
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  1    wreg      void 
 13971 ;; Registers used:
 13972 ;;		None
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13978 ;;      Params:         0       0       0       0       0       0       0
 13979 ;;      Locals:         0       0       0       0       0       0       0
 13980 ;;      Temps:          0       0       0       0       0       0       0
 13981 ;;      Totals:         0       0       0       0       0       0       0
 13982 ;;Total ram usage:        0 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; This function calls:
 13985 ;;		Nothing
 13986 ;; This function is called by:
 13987 ;;		_TMR2_Initialize
 13988 ;;		_TMR2_CallBack
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           	psect	text71
 13993  0031FA                     __ptext71:
 13994                           	opt stack 0
 13995  0031FA                     _TMR2_DefaultInterruptHandler:
 13996                           	opt stack 21
 13997                           
 13998                           ;incstack = 0
 13999  0031FA  0012               	return		;funcret
 14000  0031FC                     __end_of_TMR2_DefaultInterruptHandler:
 14001                           	opt stack 0
 14002                           tosu	equ	0xFFF
 14003                           tosh	equ	0xFFE
 14004                           tosl	equ	0xFFD
 14005                           pclatu	equ	0xFFB
 14006                           pclath	equ	0xFFA
 14007                           tblptru	equ	0xFF8
 14008                           tblptrh	equ	0xFF7
 14009                           tblptrl	equ	0xFF6
 14010                           tablat	equ	0xFF5
 14011                           prodh	equ	0xFF4
 14012                           prodl	equ	0xFF3
 14013                           intcon	equ	0xFF2
 14014                           intcon2	equ	0xFF1
 14015                           indf0	equ	0xFEF
 14016                           postinc0	equ	0xFEE
 14017                           fsr0h	equ	0xFEA
 14018                           fsr0l	equ	0xFE9
 14019                           wreg	equ	0xFE8
 14020                           fsr1h	equ	0xFE2
 14021                           fsr1l	equ	0xFE1
 14022                           indf2	equ	0xFDF
 14023                           postinc2	equ	0xFDE
 14024                           postdec2	equ	0xFDD
 14025                           plusw2	equ	0xFDB
 14026                           fsr2h	equ	0xFDA
 14027                           fsr2l	equ	0xFD9
 14028                           status	equ	0xFD8
 14029                           
 14030 ;; *************** function _TMR0_ISR *****************
 14031 ;; Defined at:
 14032 ;;		line 82 in file "mcc_generated_files/tmr0.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;		None
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;  x               2    4[COMRAM] int 
 14037 ;; Return value:  Size  Location     Type
 14038 ;;                  1    wreg      void 
 14039 ;; Registers used:
 14040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14046 ;;      Params:         0       0       0       0       0       0       0
 14047 ;;      Locals:         2       0       0       0       0       0       0
 14048 ;;      Temps:          0       0       0       0       0       0       0
 14049 ;;      Totals:         2       0       0       0       0       0       0
 14050 ;;Total ram usage:        2 bytes
 14051 ;; Hardware stack levels used:    1
 14052 ;; Hardware stack levels required when called:    1
 14053 ;; This function calls:
 14054 ;;		_ReadButtonState
 14055 ;; This function is called by:
 14056 ;;		_INTERRUPT_InterruptManager
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           	psect	text72
 14061  002E94                     __ptext72:
 14062                           	opt stack 0
 14063  002E94                     _TMR0_ISR:
 14064                           	opt stack 22
 14065                           
 14066                           ;tmr0.c: 85: TMR0H = timer0ReloadVal16bit >> 8;
 14067                           
 14068                           ;incstack = 0
 14069  002E94  5043               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 14070  002E96  6ED7               	movwf	4055,c	;volatile
 14071                           
 14072                           ;tmr0.c: 86: TMR0L = (uint8_t) timer0ReloadVal16bit;
 14073  002E98  C042  FFD6         	movff	_timer0ReloadVal16bit,4054	;volatile
 14074                           
 14075                           ;tmr0.c: 88: for (int x = 0; x < 8; x++) {
 14076  002E9C  0E00               	movlw	0
 14077  002E9E  6E06               	movwf	TMR0_ISR@x+1,c
 14078  002EA0  0E00               	movlw	0
 14079  002EA2  6E05               	movwf	TMR0_ISR@x,c
 14080  002EA4                     i2l5324:
 14081  002EA4  BE06               	btfsc	TMR0_ISR@x+1,7,c
 14082  002EA6  D006               	goto	i2l5328
 14083  002EA8  5006               	movf	TMR0_ISR@x+1,w,c
 14084  002EAA  E10D               	bnz	i2l5334
 14085  002EAC  0E08               	movlw	8
 14086  002EAE  5C05               	subwf	TMR0_ISR@x,w,c
 14087  002EB0  B0D8               	btfsc	status,0,c
 14088  002EB2  D009               	goto	i2l5334
 14089  002EB4                     i2l5328:
 14090                           
 14091                           ;tmr0.c: 89: ReadButtonState(x);
 14092  002EB4  C005  F001         	movff	TMR0_ISR@x,ReadButtonState@btnnum
 14093  002EB8  C006  F002         	movff	TMR0_ISR@x+1,ReadButtonState@btnnum+1
 14094  002EBC  ECA2  F00D         	call	_ReadButtonState	;wreg free
 14095  002EC0  4A05               	infsnz	TMR0_ISR@x,f,c
 14096  002EC2  2A06               	incf	TMR0_ISR@x+1,f,c
 14097  002EC4  D7EF               	goto	i2l5324
 14098  002EC6                     i2l5334:
 14099                           
 14100                           ;tmr0.c: 90: }
 14101                           ;tmr0.c: 91: time++;
 14102  002EC6  2A3F               	incf	_time,f,c	;volatile
 14103                           
 14104                           ;tmr0.c: 94: INTCONbits.TMR0IF = 0;
 14105  002EC8  94F2               	bcf	intcon,2,c	;volatile
 14106  002ECA  0012               	return		;funcret
 14107  002ECC                     __end_of_TMR0_ISR:
 14108                           	opt stack 0
 14109                           tosu	equ	0xFFF
 14110                           tosh	equ	0xFFE
 14111                           tosl	equ	0xFFD
 14112                           pclatu	equ	0xFFB
 14113                           pclath	equ	0xFFA
 14114                           tblptru	equ	0xFF8
 14115                           tblptrh	equ	0xFF7
 14116                           tblptrl	equ	0xFF6
 14117                           tablat	equ	0xFF5
 14118                           prodh	equ	0xFF4
 14119                           prodl	equ	0xFF3
 14120                           intcon	equ	0xFF2
 14121                           intcon2	equ	0xFF1
 14122                           indf0	equ	0xFEF
 14123                           postinc0	equ	0xFEE
 14124                           fsr0h	equ	0xFEA
 14125                           fsr0l	equ	0xFE9
 14126                           wreg	equ	0xFE8
 14127                           fsr1h	equ	0xFE2
 14128                           fsr1l	equ	0xFE1
 14129                           indf2	equ	0xFDF
 14130                           postinc2	equ	0xFDE
 14131                           postdec2	equ	0xFDD
 14132                           plusw2	equ	0xFDB
 14133                           fsr2h	equ	0xFDA
 14134                           fsr2l	equ	0xFD9
 14135                           status	equ	0xFD8
 14136                           
 14137 ;; *************** function _ReadButtonState *****************
 14138 ;; Defined at:
 14139 ;;		line 154 in file "IO.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;  btnnum          2    0[COMRAM] int 
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;		None
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  1    wreg      void 
 14146 ;; Registers used:
 14147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14148 ;; Tracked objects:
 14149 ;;		On entry : 0/0
 14150 ;;		On exit  : 0/0
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14153 ;;      Params:         2       0       0       0       0       0       0
 14154 ;;      Locals:         0       0       0       0       0       0       0
 14155 ;;      Temps:          2       0       0       0       0       0       0
 14156 ;;      Totals:         4       0       0       0       0       0       0
 14157 ;;Total ram usage:        4 bytes
 14158 ;; Hardware stack levels used:    1
 14159 ;; This function calls:
 14160 ;;		Nothing
 14161 ;; This function is called by:
 14162 ;;		_TMR0_ISR
 14163 ;; This function uses a non-reentrant model
 14164 ;;
 14165                           
 14166                           	psect	text73
 14167  001B44                     __ptext73:
 14168                           	opt stack 0
 14169  001B44                     _ReadButtonState:
 14170                           	opt stack 22
 14171                           
 14172                           ;IO.c: 155: switch (btnnum) {
 14173                           
 14174                           ;incstack = 0
 14175  001B44  D068               	goto	i2l4764
 14176  001B46                     i2l4746:
 14177                           
 14178                           ;IO.c: 157: butnarray[btnnum] = PORTDbits.RD5;
 14179  001B46  0EB0               	movlw	low _butnarray
 14180  001B48  2401               	addwf	ReadButtonState@btnnum,w,c
 14181  001B4A  6ED9               	movwf	fsr2l,c
 14182  001B4C  0E00               	movlw	high _butnarray
 14183  001B4E  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14184  001B50  6EDA               	movwf	fsr2h,c
 14185  001B52  AA83               	btfss	3971,5,c	;volatile
 14186  001B54  D002               	goto	i2u395_40
 14187  001B56  0E01               	movlw	1
 14188  001B58  D001               	goto	i2u395_46
 14189  001B5A                     i2u395_40:
 14190  001B5A  0E00               	movlw	0
 14191  001B5C                     i2u395_46:
 14192  001B5C  6EDF               	movwf	indf2,c
 14193                           
 14194                           ;IO.c: 158: break;
 14195  001B5E  0012               	return	
 14196  001B60                     i2l4748:
 14197                           
 14198                           ;IO.c: 160: butnarray[btnnum] = PORTBbits.RB0;
 14199  001B60  0EB0               	movlw	low _butnarray
 14200  001B62  2401               	addwf	ReadButtonState@btnnum,w,c
 14201  001B64  6ED9               	movwf	fsr2l,c
 14202  001B66  0E00               	movlw	high _butnarray
 14203  001B68  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14204  001B6A  6EDA               	movwf	fsr2h,c
 14205  001B6C  A081               	btfss	3969,0,c	;volatile
 14206  001B6E  D002               	goto	i2u396_40
 14207  001B70  0E01               	movlw	1
 14208  001B72  D001               	goto	i2u396_46
 14209  001B74                     i2u396_40:
 14210  001B74  0E00               	movlw	0
 14211  001B76                     i2u396_46:
 14212  001B76  6EDF               	movwf	indf2,c
 14213                           
 14214                           ;IO.c: 161: break;
 14215  001B78  0012               	return	
 14216  001B7A                     i2l4750:
 14217                           
 14218                           ;IO.c: 163: butnarray[btnnum] = PORTBbits.RB1;
 14219  001B7A  0EB0               	movlw	low _butnarray
 14220  001B7C  2401               	addwf	ReadButtonState@btnnum,w,c
 14221  001B7E  6ED9               	movwf	fsr2l,c
 14222  001B80  0E00               	movlw	high _butnarray
 14223  001B82  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14224  001B84  6EDA               	movwf	fsr2h,c
 14225  001B86  A281               	btfss	3969,1,c	;volatile
 14226  001B88  D002               	goto	i2u397_40
 14227  001B8A  0E01               	movlw	1
 14228  001B8C  D001               	goto	i2u397_46
 14229  001B8E                     i2u397_40:
 14230  001B8E  0E00               	movlw	0
 14231  001B90                     i2u397_46:
 14232  001B90  6EDF               	movwf	indf2,c
 14233                           
 14234                           ;IO.c: 164: break;
 14235  001B92  0012               	return	
 14236  001B94                     i2l4752:
 14237                           
 14238                           ;IO.c: 166: butnarray[btnnum] = PORTBbits.RB2;
 14239  001B94  0EB0               	movlw	low _butnarray
 14240  001B96  2401               	addwf	ReadButtonState@btnnum,w,c
 14241  001B98  6ED9               	movwf	fsr2l,c
 14242  001B9A  0E00               	movlw	high _butnarray
 14243  001B9C  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14244  001B9E  6EDA               	movwf	fsr2h,c
 14245  001BA0  A481               	btfss	3969,2,c	;volatile
 14246  001BA2  D002               	goto	i2u398_40
 14247  001BA4  0E01               	movlw	1
 14248  001BA6  D001               	goto	i2u398_46
 14249  001BA8                     i2u398_40:
 14250  001BA8  0E00               	movlw	0
 14251  001BAA                     i2u398_46:
 14252  001BAA  6EDF               	movwf	indf2,c
 14253                           
 14254                           ;IO.c: 167: break;
 14255  001BAC  0012               	return	
 14256  001BAE                     i2l4754:
 14257                           
 14258                           ;IO.c: 169: butnarray[btnnum] = PORTBbits.RB4;
 14259  001BAE  0EB0               	movlw	low _butnarray
 14260  001BB0  2401               	addwf	ReadButtonState@btnnum,w,c
 14261  001BB2  6ED9               	movwf	fsr2l,c
 14262  001BB4  0E00               	movlw	high _butnarray
 14263  001BB6  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14264  001BB8  6EDA               	movwf	fsr2h,c
 14265  001BBA  A881               	btfss	3969,4,c	;volatile
 14266  001BBC  D002               	goto	i2u399_40
 14267  001BBE  0E01               	movlw	1
 14268  001BC0  D001               	goto	i2u399_46
 14269  001BC2                     i2u399_40:
 14270  001BC2  0E00               	movlw	0
 14271  001BC4                     i2u399_46:
 14272  001BC4  6EDF               	movwf	indf2,c
 14273                           
 14274                           ;IO.c: 170: break;
 14275  001BC6  0012               	return	
 14276  001BC8                     i2l4756:
 14277                           
 14278                           ;IO.c: 172: butnarray[btnnum] = PORTAbits.RA0;
 14279  001BC8  0EB0               	movlw	low _butnarray
 14280  001BCA  2401               	addwf	ReadButtonState@btnnum,w,c
 14281  001BCC  6ED9               	movwf	fsr2l,c
 14282  001BCE  0E00               	movlw	high _butnarray
 14283  001BD0  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14284  001BD2  6EDA               	movwf	fsr2h,c
 14285  001BD4  A080               	btfss	3968,0,c	;volatile
 14286  001BD6  D002               	goto	i2u400_40
 14287  001BD8  0E01               	movlw	1
 14288  001BDA  D001               	goto	i2u400_46
 14289  001BDC                     i2u400_40:
 14290  001BDC  0E00               	movlw	0
 14291  001BDE                     i2u400_46:
 14292  001BDE  6EDF               	movwf	indf2,c
 14293                           
 14294                           ;IO.c: 173: break;
 14295  001BE0  0012               	return	
 14296  001BE2                     i2l4758:
 14297                           
 14298                           ;IO.c: 175: butnarray[btnnum] = PORTAbits.RA1;
 14299  001BE2  0EB0               	movlw	low _butnarray
 14300  001BE4  2401               	addwf	ReadButtonState@btnnum,w,c
 14301  001BE6  6ED9               	movwf	fsr2l,c
 14302  001BE8  0E00               	movlw	high _butnarray
 14303  001BEA  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14304  001BEC  6EDA               	movwf	fsr2h,c
 14305  001BEE  A280               	btfss	3968,1,c	;volatile
 14306  001BF0  D002               	goto	i2u401_40
 14307  001BF2  0E01               	movlw	1
 14308  001BF4  D001               	goto	i2u401_46
 14309  001BF6                     i2u401_40:
 14310  001BF6  0E00               	movlw	0
 14311  001BF8                     i2u401_46:
 14312  001BF8  6EDF               	movwf	indf2,c
 14313                           
 14314                           ;IO.c: 176: break;
 14315  001BFA  0012               	return	
 14316  001BFC                     i2l4760:
 14317                           
 14318                           ;IO.c: 178: butnarray[btnnum] = PORTAbits.RA2;
 14319  001BFC  0EB0               	movlw	low _butnarray
 14320  001BFE  2401               	addwf	ReadButtonState@btnnum,w,c
 14321  001C00  6ED9               	movwf	fsr2l,c
 14322  001C02  0E00               	movlw	high _butnarray
 14323  001C04  2002               	addwfc	ReadButtonState@btnnum+1,w,c
 14324  001C06  6EDA               	movwf	fsr2h,c
 14325  001C08  A480               	btfss	3968,2,c	;volatile
 14326  001C0A  D002               	goto	i2u402_40
 14327  001C0C  0E01               	movlw	1
 14328  001C0E  D001               	goto	i2u402_46
 14329  001C10                     i2u402_40:
 14330  001C10  0E00               	movlw	0
 14331  001C12                     i2u402_46:
 14332  001C12  6EDF               	movwf	indf2,c
 14333                           
 14334                           ;IO.c: 181: }
 14335                           
 14336                           ;IO.c: 179: break;
 14337  001C14  0012               	return	
 14338  001C16                     i2l4764:
 14339  001C16  C001  F003         	movff	ReadButtonState@btnnum,??_ReadButtonState
 14340  001C1A  C002  F004         	movff	ReadButtonState@btnnum+1,??_ReadButtonState+1
 14341                           
 14342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14343                           ; Switch size 1, requested type "space"
 14344                           ; Number of cases is 1, Range of values is 0 to 0
 14345                           ; switch strategies available:
 14346                           ; Name         Instructions Cycles
 14347                           ; simple_byte            4     3 (average)
 14348                           ;	Chosen strategy is simple_byte
 14349  001C1E  5004               	movf	??_ReadButtonState+1,w,c
 14350  001C20  0A00               	xorlw	0	; case 0
 14351  001C22  A4D8               	btfss	status,2,c
 14352  001C24  0012               	return	
 14353                           
 14354                           ; Switch size 1, requested type "space"
 14355                           ; Number of cases is 8, Range of values is 0 to 7
 14356                           ; switch strategies available:
 14357                           ; Name         Instructions Cycles
 14358                           ; simple_byte           25    13 (average)
 14359                           ;	Chosen strategy is simple_byte
 14360  001C26  5003               	movf	??_ReadButtonState,w,c
 14361  001C28  0A00               	xorlw	0	; case 0
 14362  001C2A  B4D8               	btfsc	status,2,c
 14363  001C2C  D78C               	goto	i2l4746
 14364  001C2E  0A01               	xorlw	1	; case 1
 14365  001C30  B4D8               	btfsc	status,2,c
 14366  001C32  D796               	goto	i2l4748
 14367  001C34  0A03               	xorlw	3	; case 2
 14368  001C36  B4D8               	btfsc	status,2,c
 14369  001C38  D7A0               	goto	i2l4750
 14370  001C3A  0A01               	xorlw	1	; case 3
 14371  001C3C  B4D8               	btfsc	status,2,c
 14372  001C3E  D7AA               	goto	i2l4752
 14373  001C40  0A07               	xorlw	7	; case 4
 14374  001C42  B4D8               	btfsc	status,2,c
 14375  001C44  D7B4               	goto	i2l4754
 14376  001C46  0A01               	xorlw	1	; case 5
 14377  001C48  B4D8               	btfsc	status,2,c
 14378  001C4A  D7BE               	goto	i2l4756
 14379  001C4C  0A03               	xorlw	3	; case 6
 14380  001C4E  B4D8               	btfsc	status,2,c
 14381  001C50  D7C8               	goto	i2l4758
 14382  001C52  0A01               	xorlw	1	; case 7
 14383  001C54  A4D8               	btfss	status,2,c
 14384  001C56  0012               	return	
 14385  001C58  D7D1               	goto	i2l4760
 14386  001C5A                     __end_of_ReadButtonState:
 14387                           	opt stack 0
 14388                           tosu	equ	0xFFF
 14389                           tosh	equ	0xFFE
 14390                           tosl	equ	0xFFD
 14391                           pclatu	equ	0xFFB
 14392                           pclath	equ	0xFFA
 14393                           tblptru	equ	0xFF8
 14394                           tblptrh	equ	0xFF7
 14395                           tblptrl	equ	0xFF6
 14396                           tablat	equ	0xFF5
 14397                           prodh	equ	0xFF4
 14398                           prodl	equ	0xFF3
 14399                           intcon	equ	0xFF2
 14400                           intcon2	equ	0xFF1
 14401                           indf0	equ	0xFEF
 14402                           postinc0	equ	0xFEE
 14403                           fsr0h	equ	0xFEA
 14404                           fsr0l	equ	0xFE9
 14405                           wreg	equ	0xFE8
 14406                           fsr1h	equ	0xFE2
 14407                           fsr1l	equ	0xFE1
 14408                           indf2	equ	0xFDF
 14409                           postinc2	equ	0xFDE
 14410                           postdec2	equ	0xFDD
 14411                           plusw2	equ	0xFDB
 14412                           fsr2h	equ	0xFDA
 14413                           fsr2l	equ	0xFD9
 14414                           status	equ	0xFD8
 14415                           
 14416 ;; *************** function _I2C1_ISR *****************
 14417 ;; Defined at:
 14418 ;;		line 186 in file "mcc_generated_files/i2c1.c"
 14419 ;; Parameters:    Size  Location     Type
 14420 ;;		None
 14421 ;; Auto vars:     Size  Location     Type
 14422 ;;		None
 14423 ;; Return value:  Size  Location     Type
 14424 ;;                  1    wreg      void 
 14425 ;; Registers used:
 14426 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14427 ;; Tracked objects:
 14428 ;;		On entry : 0/0
 14429 ;;		On exit  : 0/0
 14430 ;;		Unchanged: 0/0
 14431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14432 ;;      Params:         0       0       0       0       0       0       0
 14433 ;;      Locals:         0       0       0       0       0       0       0
 14434 ;;      Temps:          2       0       0       0       0       0       0
 14435 ;;      Totals:         2       0       0       0       0       0       0
 14436 ;;Total ram usage:        2 bytes
 14437 ;; Hardware stack levels used:    1
 14438 ;; Hardware stack levels required when called:    1
 14439 ;; This function calls:
 14440 ;;		_I2C1_FunctionComplete
 14441 ;;		_I2C1_Stop
 14442 ;; This function is called by:
 14443 ;;		_INTERRUPT_InterruptManager
 14444 ;; This function uses a non-reentrant model
 14445 ;;
 14446                           
 14447                           	psect	text74
 14448  000B34                     __ptext74:
 14449                           	opt stack 0
 14450  000B34                     _I2C1_ISR:
 14451                           	opt stack 22
 14452                           
 14453                           ;i2c1.c: 189: static uint8_t *pi2c_buf_ptr;
 14454                           ;i2c1.c: 190: static uint16_t i2c_address = 0;
 14455                           ;i2c1.c: 191: static int i2c_bytes_left = 0;
 14456                           ;i2c1.c: 192: static uint8_t i2c_10bit_address_restart = 0;
 14457                           ;i2c1.c: 194: PIR1bits.SSP1IF = 0;
 14458                           
 14459                           ;incstack = 0
 14460  000B34  969E               	bcf	3998,3,c	;volatile
 14461                           
 14462                           ;i2c1.c: 198: if(SSP1CON1bits.WCOL)
 14463  000B36  AEC6               	btfss	4038,7,c	;volatile
 14464  000B38  D14A               	goto	i2l7088
 14465                           
 14466                           ;i2c1.c: 199: {
 14467                           ;i2c1.c: 201: SSP1CON1bits.WCOL = 0;
 14468  000B3A  9EC6               	bcf	4038,7,c	;volatile
 14469                           
 14470                           ;i2c1.c: 202: i2c1_state = S_MASTER_IDLE;
 14471  000B3C  0E00               	movlw	0
 14472  000B3E  6E38               	movwf	_i2c1_state,c
 14473                           
 14474                           ;i2c1.c: 203: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 14475  000B40  0100               	movlb	0	; () banked
 14476  000B42  EE20 F003          	lfsr	2,3
 14477  000B46  51D5               	movf	_p_i2c1_current& (0+255),w,b
 14478  000B48  26D9               	addwf	fsr2l,f,c
 14479  000B4A  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 14480  000B4C  22DA               	addwfc	fsr2h,f,c
 14481  000B4E  CFDE F004          	movff	postinc2,??_I2C1_ISR
 14482  000B52  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 14483  000B56  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 14484  000B5A  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 14485  000B5E  0E01               	movlw	1
 14486  000B60  6EDF               	movwf	indf2,c
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;i2c1.c: 206: p_i2c1_current = (0);
 14490  000B62  0E00               	movlw	0
 14491  000B64  0100               	movlb	0	; () banked
 14492  000B66  6FD5               	movwf	_p_i2c1_current& (0+255),b
 14493  000B68  0E00               	movlw	0
 14494  000B6A  0100               	movlb	0	; () banked
 14495  000B6C  6FD6               	movwf	(_p_i2c1_current+1)& (0+255),b
 14496                           
 14497                           ; BSR set to: 0
 14498                           ;i2c1.c: 208: return;
 14499  000B6E  0012               	return	
 14500  000B70                     i2l60:
 14501                           
 14502                           ;i2c1.c: 216: if(i2c1_object.trStatus.s.empty != 1)
 14503  000B70  0100               	movlb	0	; () banked
 14504  000B72  B3BC               	btfsc	(_i2c1_object+4)& (0+255),1,b
 14505  000B74  0012               	return	
 14506                           
 14507                           ; BSR set to: 0
 14508                           ;i2c1.c: 217: {
 14509                           ;i2c1.c: 219: p_i2c1_current = i2c1_object.pTrHead;
 14510  000B76  C0BA  F0D5         	movff	_i2c1_object+2,_p_i2c1_current
 14511  000B7A  C0BB  F0D6         	movff	_i2c1_object+3,_p_i2c1_current+1
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;i2c1.c: 220: i2c1_trb_count = i2c1_object.pTrHead->count;
 14515  000B7E  C0BA  FFD9         	movff	_i2c1_object+2,fsr2l
 14516  000B82  C0BB  FFDA         	movff	_i2c1_object+3,fsr2h
 14517  000B86  50DF               	movf	indf2,w,c
 14518  000B88  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14519  000B8A  5004               	movf	??_I2C1_ISR,w,c
 14520  000B8C  0100               	movlb	0	; () banked
 14521  000B8E  6FD1               	movwf	_i2c1_trb_count& (0+255),b
 14522  000B90  6BD2               	clrf	(_i2c1_trb_count+1)& (0+255),b
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;i2c1.c: 221: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 14526  000B92  0100               	movlb	0	; () banked
 14527  000B94  EE20 F001          	lfsr	2,1
 14528  000B98  51BA               	movf	(_i2c1_object+2)& (0+255),w,b
 14529  000B9A  26D9               	addwf	fsr2l,f,c
 14530  000B9C  51BB               	movf	(_i2c1_object+3)& (0+255),w,b
 14531  000B9E  22DA               	addwfc	fsr2h,f,c
 14532  000BA0  CFDE F02D          	movff	postinc2,_p_i2c1_trb_current
 14533  000BA4  CFDD F02E          	movff	postdec2,_p_i2c1_trb_current+1
 14534                           
 14535                           ;i2c1.c: 223: i2c1_object.pTrHead++;
 14536  000BA8  0E05               	movlw	5
 14537  000BAA  0100               	movlb	0	; () banked
 14538  000BAC  27BA               	addwf	(_i2c1_object+2)& (0+255),f,b
 14539  000BAE  0E00               	movlw	0
 14540  000BB0  23BB               	addwfc	(_i2c1_object+3)& (0+255),f,b
 14541                           
 14542                           ;i2c1.c: 226: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 14543  000BB2  0EF0               	movlw	low (_i2c1_tr_queue+5)
 14544  000BB4  0100               	movlb	0	; () banked
 14545  000BB6  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14546  000BB8  E10B               	bnz	i2l6982
 14547  000BBA  0E00               	movlw	high (_i2c1_tr_queue+5)
 14548  000BBC  0100               	movlb	0	; () banked
 14549  000BBE  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14550  000BC0  A4D8               	btfss	status,2,c
 14551  000BC2  D006               	goto	i2l6982
 14552                           
 14553                           ; BSR set to: 0
 14554                           ;i2c1.c: 227: {
 14555                           ;i2c1.c: 229: i2c1_object.pTrHead = i2c1_tr_queue;
 14556  000BC4  0EEB               	movlw	low _i2c1_tr_queue
 14557  000BC6  0100               	movlb	0	; () banked
 14558  000BC8  6FBA               	movwf	(_i2c1_object+2)& (0+255),b
 14559  000BCA  0E00               	movlw	high _i2c1_tr_queue
 14560  000BCC  0100               	movlb	0	; () banked
 14561  000BCE  6FBB               	movwf	(_i2c1_object+3)& (0+255),b
 14562  000BD0                     i2l6982:
 14563                           
 14564                           ; BSR set to: 0
 14565                           ;i2c1.c: 230: }
 14566                           ;i2c1.c: 234: i2c1_object.trStatus.s.full = 0;
 14567  000BD0  0100               	movlb	0	; () banked
 14568  000BD2  91BC               	bcf	(_i2c1_object+4)& (0+255),0,b
 14569                           
 14570                           ;i2c1.c: 237: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 14571  000BD4  0100               	movlb	0	; () banked
 14572  000BD6  51B8               	movf	_i2c1_object& (0+255),w,b
 14573  000BD8  0100               	movlb	0	; () banked
 14574  000BDA  19BA               	xorwf	(_i2c1_object+2)& (0+255),w,b
 14575  000BDC  E108               	bnz	i2l63
 14576  000BDE  0100               	movlb	0	; () banked
 14577  000BE0  51B9               	movf	(_i2c1_object+1)& (0+255),w,b
 14578  000BE2  0100               	movlb	0	; () banked
 14579  000BE4  19BB               	xorwf	(_i2c1_object+3)& (0+255),w,b
 14580  000BE6  A4D8               	btfss	status,2,c
 14581  000BE8  D002               	goto	i2l63
 14582                           
 14583                           ; BSR set to: 0
 14584                           ;i2c1.c: 238: {
 14585                           ;i2c1.c: 240: i2c1_object.trStatus.s.empty = 1;
 14586  000BEA  0100               	movlb	0	; () banked
 14587  000BEC  83BC               	bsf	(_i2c1_object+4)& (0+255),1,b
 14588  000BEE                     i2l63:
 14589                           
 14590                           ; BSR set to: 0
 14591                           ;i2c1.c: 241: }
 14592                           ;i2c1.c: 244: SSP1CON2bits.SEN = 1;
 14593  000BEE  80C5               	bsf	4037,0,c	;volatile
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;i2c1.c: 247: i2c1_state = S_MASTER_SEND_ADDR;
 14597  000BF0  0E02               	movlw	2
 14598  000BF2  6E38               	movwf	_i2c1_state,c
 14599                           
 14600                           ; BSR set to: 0
 14601                           ;i2c1.c: 248: }
 14602                           ;i2c1.c: 250: break;
 14603  000BF4  0012               	return	
 14604  000BF6                     i2l65:
 14605                           
 14606                           ;i2c1.c: 257: SSP1CON2bits.RSEN = 1;
 14607  000BF6  82C5               	bsf	4037,1,c	;volatile
 14608                           
 14609                           ;i2c1.c: 260: i2c1_state = S_MASTER_SEND_ADDR;
 14610  000BF8  0E02               	movlw	2
 14611  000BFA  6E38               	movwf	_i2c1_state,c
 14612                           
 14613                           ;i2c1.c: 262: break;
 14614  000BFC  0012               	return	
 14615  000BFE                     i2l66:
 14616                           
 14617                           ;i2c1.c: 266: if(SSP1CON2bits.ACKSTAT)
 14618  000BFE  ACC5               	btfss	4037,6,c	;volatile
 14619  000C00  D006               	goto	i2l6994
 14620                           
 14621                           ;i2c1.c: 267: {
 14622                           ;i2c1.c: 268: i2c1_object.i2cErrors++;
 14623  000C02  0100               	movlb	0	; () banked
 14624  000C04  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14625                           
 14626                           ; BSR set to: 0
 14627                           ;i2c1.c: 269: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14628  000C06  0E04               	movlw	4
 14629  000C08  ECED  F016         	call	_I2C1_Stop
 14630                           
 14631                           ;i2c1.c: 270: }
 14632  000C0C  0012               	return	
 14633  000C0E                     i2l6994:
 14634                           
 14635                           ;i2c1.c: 271: else
 14636                           ;i2c1.c: 272: {
 14637                           ;i2c1.c: 274: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 14638  000C0E  90D8               	bcf	status,0,c
 14639  000C10  3041               	rrcf	I2C1_ISR@i2c_address+1,w,c
 14640  000C12  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14641  000C14  3040               	rrcf	I2C1_ISR@i2c_address,w,c
 14642  000C16  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14643  000C18  5004               	movf	??_I2C1_ISR,w,c
 14644  000C1A  6EC9               	movwf	4041,c	;volatile
 14645                           
 14646                           ;i2c1.c: 277: if(i2c_address & 0x01)
 14647  000C1C  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14648  000C1E  D003               	goto	i2l7000
 14649                           
 14650                           ;i2c1.c: 278: {
 14651                           ;i2c1.c: 281: i2c1_state = S_MASTER_10BIT_RESTART;
 14652  000C20  0E0B               	movlw	11
 14653  000C22  6E38               	movwf	_i2c1_state,c
 14654                           
 14655                           ;i2c1.c: 282: }
 14656  000C24  0012               	return	
 14657  000C26                     i2l7000:
 14658                           
 14659                           ;i2c1.c: 283: else
 14660                           ;i2c1.c: 284: {
 14661                           ;i2c1.c: 286: i2c1_state = S_MASTER_SEND_DATA;
 14662  000C26  0E03               	movlw	3
 14663  000C28  6E38               	movwf	_i2c1_state,c
 14664                           
 14665                           ;i2c1.c: 287: }
 14666                           ;i2c1.c: 288: }
 14667                           ;i2c1.c: 290: break;
 14668  000C2A  0012               	return	
 14669  000C2C                     i2l71:
 14670                           
 14671                           ;i2c1.c: 294: if(SSP1CON2bits.ACKSTAT)
 14672  000C2C  ACC5               	btfss	4037,6,c	;volatile
 14673  000C2E  D006               	goto	i2l72
 14674                           
 14675                           ;i2c1.c: 295: {
 14676                           ;i2c1.c: 296: i2c1_object.i2cErrors++;
 14677  000C30  0100               	movlb	0	; () banked
 14678  000C32  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;i2c1.c: 297: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14682  000C34  0E04               	movlw	4
 14683  000C36  ECED  F016         	call	_I2C1_Stop
 14684                           
 14685                           ;i2c1.c: 298: }
 14686  000C3A  0012               	return	
 14687  000C3C                     i2l72:
 14688                           
 14689                           ;i2c1.c: 299: else
 14690                           ;i2c1.c: 300: {
 14691                           ;i2c1.c: 303: SSP1CON2bits.RSEN = 1;
 14692  000C3C  82C5               	bsf	4037,1,c	;volatile
 14693                           
 14694                           ;i2c1.c: 307: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 14695  000C3E  C040  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 14696  000C42  C041  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 14697  000C46  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 14698  000C4A  6A05               	clrf	??_I2C1_ISR+1,c
 14699  000C4C  0E06               	movlw	6
 14700  000C4E  1604               	andwf	??_I2C1_ISR,f,c
 14701  000C50  0E00               	movlw	0
 14702  000C52  1605               	andwf	??_I2C1_ISR+1,f,c
 14703  000C54  0EF0               	movlw	240
 14704  000C56  1004               	iorwf	??_I2C1_ISR,w,c
 14705  000C58  6E40               	movwf	I2C1_ISR@i2c_address,c
 14706  000C5A  5005               	movf	??_I2C1_ISR+1,w,c
 14707  000C5C  6E41               	movwf	I2C1_ISR@i2c_address+1,c
 14708                           
 14709                           ;i2c1.c: 310: i2c_address |= 0x0001;
 14710  000C5E  8040               	bsf	I2C1_ISR@i2c_address,0,c
 14711                           
 14712                           ;i2c1.c: 313: i2c_10bit_address_restart = 1;
 14713  000C60  0E01               	movlw	1
 14714  000C62  6E35               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 14715                           
 14716                           ;i2c1.c: 316: i2c1_state = S_MASTER_SEND_ADDR;
 14717  000C64  0E02               	movlw	2
 14718  000C66  6E38               	movwf	_i2c1_state,c
 14719                           
 14720                           ;i2c1.c: 317: }
 14721                           ;i2c1.c: 319: break;
 14722  000C68  0012               	return	
 14723  000C6A                     i2l7014:
 14724                           
 14725                           ;i2c1.c: 334: if(i2c_10bit_address_restart != 1)
 14726  000C6A  0435               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 14727  000C6C  B4D8               	btfsc	status,2,c
 14728  000C6E  D01E               	goto	i2l76
 14729                           
 14730                           ;i2c1.c: 335: {
 14731                           ;i2c1.c: 337: i2c_address = p_i2c1_trb_current->address;
 14732  000C70  C02D  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 14733  000C74  C02E  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 14734  000C78  CFDE F040          	movff	postinc2,I2C1_ISR@i2c_address
 14735  000C7C  CFDD F041          	movff	postdec2,I2C1_ISR@i2c_address+1
 14736                           
 14737                           ;i2c1.c: 338: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 14738  000C80  EE20 F003          	lfsr	2,3
 14739  000C84  502D               	movf	_p_i2c1_trb_current,w,c
 14740  000C86  26D9               	addwf	fsr2l,f,c
 14741  000C88  502E               	movf	_p_i2c1_trb_current+1,w,c
 14742  000C8A  22DA               	addwfc	fsr2h,f,c
 14743  000C8C  CFDE F0C1          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 14744  000C90  CFDD F0C2          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 14745                           
 14746                           ;i2c1.c: 339: i2c_bytes_left = p_i2c1_trb_current->length;
 14747  000C94  EE20 F002          	lfsr	2,2
 14748  000C98  502D               	movf	_p_i2c1_trb_current,w,c
 14749  000C9A  26D9               	addwf	fsr2l,f,c
 14750  000C9C  502E               	movf	_p_i2c1_trb_current+1,w,c
 14751  000C9E  22DA               	addwfc	fsr2h,f,c
 14752  000CA0  50DF               	movf	indf2,w,c
 14753  000CA2  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14754  000CA4  5004               	movf	??_I2C1_ISR,w,c
 14755  000CA6  0100               	movlb	0	; () banked
 14756  000CA8  6FBF               	movwf	I2C1_ISR@i2c_bytes_left& (0+255),b
 14757  000CAA  6BC0               	clrf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),b
 14758  000CAC                     i2l76:
 14759                           
 14760                           ;i2c1.c: 362: else
 14761                           ;i2c1.c: 363: {
 14762                           ;i2c1.c: 365: SSP1BUF = i2c_address;
 14763  000CAC  C040  FFC9         	movff	I2C1_ISR@i2c_address,4041	;volatile
 14764                           
 14765                           ;i2c1.c: 366: if(i2c_address & 0x01)
 14766  000CB0  A040               	btfss	I2C1_ISR@i2c_address,0,c
 14767  000CB2  D003               	goto	i2l7034
 14768                           
 14769                           ;i2c1.c: 367: {
 14770                           ;i2c1.c: 369: i2c1_state = S_MASTER_ACK_ADDR;
 14771  000CB4  0E05               	movlw	5
 14772  000CB6  6E38               	movwf	_i2c1_state,c
 14773                           
 14774                           ;i2c1.c: 370: }
 14775  000CB8  0012               	return	
 14776  000CBA                     i2l7034:
 14777                           
 14778                           ;i2c1.c: 371: else
 14779                           ;i2c1.c: 372: {
 14780                           ;i2c1.c: 374: i2c1_state = S_MASTER_SEND_DATA;
 14781  000CBA  0E03               	movlw	3
 14782  000CBC  6E38               	movwf	_i2c1_state,c
 14783                           
 14784                           ;i2c1.c: 375: }
 14785                           ;i2c1.c: 376: }
 14786                           ;i2c1.c: 377: break;
 14787  000CBE  0012               	return	
 14788  000CC0                     i2l82:
 14789                           
 14790                           ;i2c1.c: 382: if(SSP1CON2bits.ACKSTAT)
 14791  000CC0  ACC5               	btfss	4037,6,c	;volatile
 14792  000CC2  D007               	goto	i2l7042
 14793                           
 14794                           ;i2c1.c: 383: {
 14795                           ;i2c1.c: 385: i2c1_object.i2cErrors++;
 14796  000CC4  0100               	movlb	0	; () banked
 14797  000CC6  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14798                           
 14799                           ; BSR set to: 0
 14800                           ;i2c1.c: 388: SSP1CON2bits.ACKSTAT = 0;
 14801  000CC8  9CC5               	bcf	4037,6,c	;volatile
 14802                           
 14803                           ; BSR set to: 0
 14804                           ;i2c1.c: 391: I2C1_Stop(I2C1_DATA_NO_ACK);
 14805  000CCA  0E05               	movlw	5
 14806  000CCC  ECED  F016         	call	_I2C1_Stop
 14807                           
 14808                           ;i2c1.c: 393: }
 14809  000CD0  0012               	return	
 14810  000CD2                     i2l7042:
 14811                           
 14812                           ;i2c1.c: 394: else
 14813                           ;i2c1.c: 395: {
 14814                           ;i2c1.c: 397: if(i2c_bytes_left-- == 0U)
 14815  000CD2  0100               	movlb	0	; () banked
 14816  000CD4  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14817  000CD6  6E04               	movwf	??_I2C1_ISR& (0+255),c
 14818  000CD8  0100               	movlb	0	; () banked
 14819  000CDA  51C0               	movf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14820  000CDC  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 14821  000CDE  0E01               	movlw	1
 14822  000CE0  0100               	movlb	0	; () banked
 14823  000CE2  5FBF               	subwf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14824  000CE4  0E00               	movlw	0
 14825  000CE6  0100               	movlb	0	; () banked
 14826  000CE8  5BC0               	subwfb	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14827  000CEA  5004               	movf	??_I2C1_ISR,w,c
 14828  000CEC  1005               	iorwf	??_I2C1_ISR+1,w,c
 14829  000CEE  A4D8               	btfss	status,2,c
 14830  000CF0  D016               	goto	i2l7050
 14831                           
 14832                           ; BSR set to: 0
 14833                           ;i2c1.c: 398: {
 14834                           ;i2c1.c: 402: p_i2c1_trb_current++;
 14835  000CF2  0E05               	movlw	5
 14836  000CF4  262D               	addwf	_p_i2c1_trb_current,f,c
 14837  000CF6  0E00               	movlw	0
 14838  000CF8  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 14839                           
 14840                           ;i2c1.c: 405: if(--i2c1_trb_count == 0)
 14841  000CFA  0100               	movlb	0	; () banked
 14842  000CFC  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 14843  000CFE  A0D8               	btfss	status,0,c
 14844  000D00  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 14845  000D02  0100               	movlb	0	; () banked
 14846  000D04  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 14847  000D06  0100               	movlb	0	; () banked
 14848  000D08  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 14849  000D0A  A4D8               	btfss	status,2,c
 14850  000D0C  D004               	goto	i2l86
 14851                           
 14852                           ; BSR set to: 0
 14853                           ;i2c1.c: 406: {
 14854                           ;i2c1.c: 407: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 14855  000D0E  0E00               	movlw	0
 14856  000D10  ECED  F016         	call	_I2C1_Stop
 14857                           
 14858                           ;i2c1.c: 408: }
 14859  000D14  0012               	return	
 14860  000D16                     i2l86:
 14861                           
 14862                           ; BSR set to: 0
 14863                           ;i2c1.c: 409: else
 14864                           ;i2c1.c: 410: {
 14865                           ;i2c1.c: 417: SSP1CON2bits.RSEN = 1;
 14866  000D16  82C5               	bsf	4037,1,c	;volatile
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;i2c1.c: 420: i2c1_state = S_MASTER_SEND_ADDR;
 14870  000D18  0E02               	movlw	2
 14871  000D1A  6E38               	movwf	_i2c1_state,c
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;i2c1.c: 422: }
 14875                           ;i2c1.c: 423: }
 14876  000D1C  0012               	return	
 14877  000D1E                     i2l7050:
 14878                           
 14879                           ; BSR set to: 0
 14880                           ;i2c1.c: 424: else
 14881                           ;i2c1.c: 425: {
 14882                           ;i2c1.c: 427: SSP1BUF = *pi2c_buf_ptr++;
 14883  000D1E  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 14884  000D22  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 14885  000D26  6AF8               	clrf	tblptru,c
 14886  000D28  0E05               	movlw	(high __ramtop+-1)
 14887  000D2A  64F7               	cpfsgt	tblptrh,c
 14888  000D2C  D003               	bra	i2u808_47
 14889  000D2E  0008               	tblrd		*
 14890  000D30  50F5               	movf	tablat,w,c
 14891  000D32  D005               	bra	i2u808_40
 14892  000D34                     i2u808_47:
 14893  000D34  CFF6 FFE9          	movff	tblptrl,fsr0l
 14894  000D38  CFF7 FFEA          	movff	tblptrh,fsr0h
 14895  000D3C  50EF               	movf	indf0,w,c
 14896  000D3E                     i2u808_40:
 14897  000D3E  6EC9               	movwf	4041,c	;volatile
 14898  000D40  0100               	movlb	0	; () banked
 14899  000D42  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 14900  000D44  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 14901                           
 14902                           ; BSR set to: 0
 14903                           ;i2c1.c: 428: }
 14904                           ;i2c1.c: 429: }
 14905                           ;i2c1.c: 430: break;
 14906                           
 14907                           ; BSR set to: 0
 14908  000D46  0012               	return	
 14909  000D48                     i2l89:
 14910                           
 14911                           ;i2c1.c: 435: if(SSP1CON2bits.ACKSTAT)
 14912  000D48  ACC5               	btfss	4037,6,c	;volatile
 14913  000D4A  D007               	goto	i2l90
 14914                           
 14915                           ;i2c1.c: 436: {
 14916                           ;i2c1.c: 439: i2c1_object.i2cErrors++;
 14917  000D4C  0100               	movlb	0	; () banked
 14918  000D4E  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 14919                           
 14920                           ; BSR set to: 0
 14921                           ;i2c1.c: 442: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 14922  000D50  0E04               	movlw	4
 14923  000D52  ECED  F016         	call	_I2C1_Stop
 14924                           
 14925                           ;i2c1.c: 445: SSP1CON2bits.ACKSTAT = 0;
 14926  000D56  9CC5               	bcf	4037,6,c	;volatile
 14927                           
 14928                           ;i2c1.c: 446: }
 14929  000D58  0012               	return	
 14930  000D5A                     i2l90:
 14931                           
 14932                           ;i2c1.c: 447: else
 14933                           ;i2c1.c: 448: {
 14934                           ;i2c1.c: 449: SSP1CON2bits.RCEN = 1;
 14935  000D5A  86C5               	bsf	4037,3,c	;volatile
 14936                           
 14937                           ;i2c1.c: 450: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14938  000D5C  0E08               	movlw	8
 14939  000D5E  6E38               	movwf	_i2c1_state,c
 14940                           
 14941                           ;i2c1.c: 451: }
 14942                           ;i2c1.c: 452: break;
 14943  000D60  0012               	return	
 14944  000D62                     i2l7062:
 14945                           
 14946                           ;i2c1.c: 459: i2c1_state = S_MASTER_ACK_RCV_DATA;
 14947  000D62  0E08               	movlw	8
 14948  000D64  6E38               	movwf	_i2c1_state,c
 14949                           
 14950                           ;i2c1.c: 462: SSP1CON2bits.RCEN = 1;
 14951  000D66  86C5               	bsf	4037,3,c	;volatile
 14952                           
 14953                           ;i2c1.c: 464: break;
 14954  000D68  0012               	return	
 14955  000D6A                     i2l7066:
 14956                           
 14957                           ;i2c1.c: 469: *pi2c_buf_ptr++ = SSP1BUF;
 14958  000D6A  C0C1  FFF6         	movff	I2C1_ISR@pi2c_buf_ptr,tblptrl
 14959  000D6E  C0C2  FFF7         	movff	I2C1_ISR@pi2c_buf_ptr+1,tblptrh
 14960  000D72  6AF8               	clrf	tblptru,c
 14961  000D74  0E05               	movlw	(high __ramtop+-1)
 14962  000D76  64F7               	cpfsgt	tblptrh,c
 14963  000D78  D004               	bra	i2u810_47
 14964  000D7A  CFC9 FFF5          	movff	4041,tablat	;volatile
 14965  000D7E  000C               	tblwt		*
 14966  000D80  D006               	bra	i2u810_40
 14967  000D82                     i2u810_47:
 14968  000D82  CFF6 FFE9          	movff	tblptrl,fsr0l
 14969  000D86  CFF7 FFEA          	movff	tblptrh,fsr0h
 14970  000D8A  CFC9 FFEF          	movff	4041,indf0	;volatile
 14971  000D8E                     i2u810_40:
 14972  000D8E  0100               	movlb	0	; () banked
 14973  000D90  4BC1               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 14974  000D92  2BC2               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;i2c1.c: 472: if(--i2c_bytes_left)
 14978  000D94  0100               	movlb	0	; () banked
 14979  000D96  07BF               	decf	I2C1_ISR@i2c_bytes_left& (0+255),f,b
 14980  000D98  A0D8               	btfss	status,0,c
 14981  000D9A  07C0               	decf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),f,b
 14982  000D9C  0100               	movlb	0	; () banked
 14983  000D9E  51BF               	movf	I2C1_ISR@i2c_bytes_left& (0+255),w,b
 14984  000DA0  0100               	movlb	0	; () banked
 14985  000DA2  11C0               	iorwf	(I2C1_ISR@i2c_bytes_left+1)& (0+255),w,b
 14986  000DA4  B4D8               	btfsc	status,2,c
 14987  000DA6  D004               	goto	i2l94
 14988                           
 14989                           ; BSR set to: 0
 14990                           ;i2c1.c: 473: {
 14991                           ;i2c1.c: 479: SSP1CON2bits.ACKDT = 0;
 14992  000DA8  9AC5               	bcf	4037,5,c	;volatile
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;i2c1.c: 482: i2c1_state = S_MASTER_RCV_DATA;
 14996  000DAA  0E06               	movlw	6
 14997  000DAC  6E38               	movwf	_i2c1_state,c
 14998                           
 14999                           ;i2c1.c: 483: }
 15000  000DAE  D003               	goto	i2l7078
 15001  000DB0                     i2l94:
 15002                           
 15003                           ; BSR set to: 0
 15004                           ;i2c1.c: 484: else
 15005                           ;i2c1.c: 485: {
 15006                           ;i2c1.c: 489: SSP1CON2bits.ACKDT = 1;
 15007  000DB0  8AC5               	bsf	4037,5,c	;volatile
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;i2c1.c: 491: I2C1_FunctionComplete();
 15011  000DB2  EC19  F018         	call	_I2C1_FunctionComplete	;wreg free
 15012  000DB6                     i2l7078:
 15013                           
 15014                           ;i2c1.c: 492: }
 15015                           ;i2c1.c: 495: SSP1CON2bits.ACKEN = 1;
 15016  000DB6  88C5               	bsf	4037,4,c	;volatile
 15017                           
 15018                           ;i2c1.c: 496: break;
 15019  000DB8  0012               	return	
 15020  000DBA                     i2l7080:
 15021                           
 15022                           ;i2c1.c: 499: case S_MASTER_SEND_STOP:
 15023                           ;i2c1.c: 502: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15024  000DBA  0E00               	movlw	0
 15025  000DBC  ECED  F016         	call	_I2C1_Stop
 15026                           
 15027                           ;i2c1.c: 503: break;
 15028  000DC0  0012               	return	
 15029  000DC2                     i2l7082:
 15030                           
 15031                           ;i2c1.c: 509: i2c1_object.i2cErrors++;
 15032  000DC2  0100               	movlb	0	; () banked
 15033  000DC4  2BBE               	incf	(_i2c1_object+6)& (0+255),f,b
 15034                           
 15035                           ; BSR set to: 0
 15036                           ;i2c1.c: 510: I2C1_Stop(I2C1_LOST_STATE);
 15037  000DC6  0E06               	movlw	6
 15038  000DC8  ECED  F016         	call	_I2C1_Stop
 15039                           
 15040                           ;i2c1.c: 513: }
 15041                           
 15042                           ;i2c1.c: 511: break;
 15043  000DCC  0012               	return	
 15044  000DCE                     i2l7088:
 15045  000DCE  5038               	movf	_i2c1_state,w,c
 15046                           
 15047                           ; Switch size 1, requested type "space"
 15048                           ; Number of cases is 11, Range of values is 0 to 11
 15049                           ; switch strategies available:
 15050                           ; Name         Instructions Cycles
 15051                           ; simple_byte           34    18 (average)
 15052                           ;	Chosen strategy is simple_byte
 15053  000DD0  0A00               	xorlw	0	; case 0
 15054  000DD2  B4D8               	btfsc	status,2,c
 15055  000DD4  D6CD               	goto	i2l60
 15056  000DD6  0A01               	xorlw	1	; case 1
 15057  000DD8  B4D8               	btfsc	status,2,c
 15058  000DDA  D70D               	goto	i2l65
 15059  000DDC  0A03               	xorlw	3	; case 2
 15060  000DDE  B4D8               	btfsc	status,2,c
 15061  000DE0  D744               	goto	i2l7014
 15062  000DE2  0A01               	xorlw	1	; case 3
 15063  000DE4  B4D8               	btfsc	status,2,c
 15064  000DE6  D76C               	goto	i2l82
 15065  000DE8  0A07               	xorlw	7	; case 4
 15066  000DEA  B4D8               	btfsc	status,2,c
 15067  000DEC  D7E6               	goto	i2l7080
 15068  000DEE  0A01               	xorlw	1	; case 5
 15069  000DF0  B4D8               	btfsc	status,2,c
 15070  000DF2  D7AA               	goto	i2l89
 15071  000DF4  0A03               	xorlw	3	; case 6
 15072  000DF6  B4D8               	btfsc	status,2,c
 15073  000DF8  D7B4               	goto	i2l7062
 15074  000DFA  0A01               	xorlw	1	; case 7
 15075  000DFC  B4D8               	btfsc	status,2,c
 15076  000DFE  D7DD               	goto	i2l7080
 15077  000E00  0A0F               	xorlw	15	; case 8
 15078  000E02  B4D8               	btfsc	status,2,c
 15079  000E04  D7B2               	goto	i2l7066
 15080  000E06  0A02               	xorlw	2	; case 10
 15081  000E08  B4D8               	btfsc	status,2,c
 15082  000E0A  D6F9               	goto	i2l66
 15083  000E0C  0A01               	xorlw	1	; case 11
 15084  000E0E  B4D8               	btfsc	status,2,c
 15085  000E10  D70D               	goto	i2l71
 15086  000E12  D7D7               	goto	i2l7082
 15087  000E14                     __end_of_I2C1_ISR:
 15088                           	opt stack 0
 15089                           tosu	equ	0xFFF
 15090                           tosh	equ	0xFFE
 15091                           tosl	equ	0xFFD
 15092                           pclatu	equ	0xFFB
 15093                           pclath	equ	0xFFA
 15094                           tblptru	equ	0xFF8
 15095                           tblptrh	equ	0xFF7
 15096                           tblptrl	equ	0xFF6
 15097                           tablat	equ	0xFF5
 15098                           prodh	equ	0xFF4
 15099                           prodl	equ	0xFF3
 15100                           intcon	equ	0xFF2
 15101                           intcon2	equ	0xFF1
 15102                           indf0	equ	0xFEF
 15103                           postinc0	equ	0xFEE
 15104                           fsr0h	equ	0xFEA
 15105                           fsr0l	equ	0xFE9
 15106                           wreg	equ	0xFE8
 15107                           fsr1h	equ	0xFE2
 15108                           fsr1l	equ	0xFE1
 15109                           indf2	equ	0xFDF
 15110                           postinc2	equ	0xFDE
 15111                           postdec2	equ	0xFDD
 15112                           plusw2	equ	0xFDB
 15113                           fsr2h	equ	0xFDA
 15114                           fsr2l	equ	0xFD9
 15115                           status	equ	0xFD8
 15116                           
 15117 ;; *************** function _I2C1_Stop *****************
 15118 ;; Defined at:
 15119 ;;		line 534 in file "mcc_generated_files/i2c1.c"
 15120 ;; Parameters:    Size  Location     Type
 15121 ;;  completion_c    1    wreg     enum E7739
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;  completion_c    1    2[COMRAM] enum E7739
 15124 ;; Return value:  Size  Location     Type
 15125 ;;                  1    wreg      void 
 15126 ;; Registers used:
 15127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15128 ;; Tracked objects:
 15129 ;;		On entry : 0/0
 15130 ;;		On exit  : 0/0
 15131 ;;		Unchanged: 0/0
 15132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15133 ;;      Params:         0       0       0       0       0       0       0
 15134 ;;      Locals:         1       0       0       0       0       0       0
 15135 ;;      Temps:          2       0       0       0       0       0       0
 15136 ;;      Totals:         3       0       0       0       0       0       0
 15137 ;;Total ram usage:        3 bytes
 15138 ;; Hardware stack levels used:    1
 15139 ;; This function calls:
 15140 ;;		Nothing
 15141 ;; This function is called by:
 15142 ;;		_I2C1_ISR
 15143 ;; This function uses a non-reentrant model
 15144 ;;
 15145                           
 15146                           	psect	text75
 15147  002DDA                     __ptext75:
 15148                           	opt stack 0
 15149  002DDA                     _I2C1_Stop:
 15150                           	opt stack 22
 15151                           
 15152                           ;incstack = 0
 15153                           ;I2C1_Stop@completion_code stored from wreg
 15154  002DDA  6E03               	movwf	I2C1_Stop@completion_code,c
 15155                           
 15156                           ;i2c1.c: 537: SSP1CON2bits.PEN = 1;
 15157  002DDC  84C5               	bsf	4037,2,c	;volatile
 15158                           
 15159                           ;i2c1.c: 540: if (p_i2c1_current->pTrFlag != (0))
 15160  002DDE  0100               	movlb	0	; () banked
 15161  002DE0  EE20 F003          	lfsr	2,3
 15162  002DE4  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15163  002DE6  26D9               	addwf	fsr2l,f,c
 15164  002DE8  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15165  002DEA  22DA               	addwfc	fsr2h,f,c
 15166  002DEC  50DE               	movf	postinc2,w,c
 15167  002DEE  10DE               	iorwf	postinc2,w,c
 15168  002DF0  B4D8               	btfsc	status,2,c
 15169  002DF2  D011               	goto	i2l6596
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;i2c1.c: 541: {
 15173                           ;i2c1.c: 543: *(p_i2c1_current->pTrFlag) = completion_code;
 15174  002DF4  0100               	movlb	0	; () banked
 15175  002DF6  EE20 F003          	lfsr	2,3
 15176  002DFA  51D5               	movf	_p_i2c1_current& (0+255),w,b
 15177  002DFC  26D9               	addwf	fsr2l,f,c
 15178  002DFE  51D6               	movf	(_p_i2c1_current+1)& (0+255),w,b
 15179  002E00  22DA               	addwfc	fsr2h,f,c
 15180  002E02  CFDE F001          	movff	postinc2,??_I2C1_Stop
 15181  002E06  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 15182  002E0A  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 15183  002E0E  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 15184  002E12  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 15185  002E16                     i2l6596:
 15186                           
 15187                           ; BSR set to: 0
 15188                           ;i2c1.c: 544: }
 15189                           ;i2c1.c: 547: i2c1_state = S_MASTER_IDLE;
 15190  002E16  0E00               	movlw	0
 15191  002E18  6E38               	movwf	_i2c1_state,c
 15192                           
 15193                           ; BSR set to: 0
 15194  002E1A  0012               	return		;funcret
 15195  002E1C                     __end_of_I2C1_Stop:
 15196                           	opt stack 0
 15197                           tosu	equ	0xFFF
 15198                           tosh	equ	0xFFE
 15199                           tosl	equ	0xFFD
 15200                           pclatu	equ	0xFFB
 15201                           pclath	equ	0xFFA
 15202                           tblptru	equ	0xFF8
 15203                           tblptrh	equ	0xFF7
 15204                           tblptrl	equ	0xFF6
 15205                           tablat	equ	0xFF5
 15206                           prodh	equ	0xFF4
 15207                           prodl	equ	0xFF3
 15208                           intcon	equ	0xFF2
 15209                           intcon2	equ	0xFF1
 15210                           indf0	equ	0xFEF
 15211                           postinc0	equ	0xFEE
 15212                           fsr0h	equ	0xFEA
 15213                           fsr0l	equ	0xFE9
 15214                           wreg	equ	0xFE8
 15215                           fsr1h	equ	0xFE2
 15216                           fsr1l	equ	0xFE1
 15217                           indf2	equ	0xFDF
 15218                           postinc2	equ	0xFDE
 15219                           postdec2	equ	0xFDD
 15220                           plusw2	equ	0xFDB
 15221                           fsr2h	equ	0xFDA
 15222                           fsr2l	equ	0xFD9
 15223                           status	equ	0xFD8
 15224                           
 15225 ;; *************** function _I2C1_FunctionComplete *****************
 15226 ;; Defined at:
 15227 ;;		line 516 in file "mcc_generated_files/i2c1.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;		None
 15230 ;; Auto vars:     Size  Location     Type
 15231 ;;		None
 15232 ;; Return value:  Size  Location     Type
 15233 ;;                  1    wreg      void 
 15234 ;; Registers used:
 15235 ;;		wreg, status,2, status,0
 15236 ;; Tracked objects:
 15237 ;;		On entry : 0/0
 15238 ;;		On exit  : 0/0
 15239 ;;		Unchanged: 0/0
 15240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15241 ;;      Params:         0       0       0       0       0       0       0
 15242 ;;      Locals:         0       0       0       0       0       0       0
 15243 ;;      Temps:          0       0       0       0       0       0       0
 15244 ;;      Totals:         0       0       0       0       0       0       0
 15245 ;;Total ram usage:        0 bytes
 15246 ;; Hardware stack levels used:    1
 15247 ;; This function calls:
 15248 ;;		Nothing
 15249 ;; This function is called by:
 15250 ;;		_I2C1_ISR
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254                           	psect	text76
 15255  003032                     __ptext76:
 15256                           	opt stack 0
 15257  003032                     _I2C1_FunctionComplete:
 15258                           	opt stack 22
 15259                           
 15260                           ;i2c1.c: 520: p_i2c1_trb_current++;
 15261                           
 15262                           ; BSR set to: 0
 15263                           ;incstack = 0
 15264  003032  0E05               	movlw	5
 15265  003034  262D               	addwf	_p_i2c1_trb_current,f,c
 15266  003036  0E00               	movlw	0
 15267  003038  222E               	addwfc	_p_i2c1_trb_current+1,f,c
 15268                           
 15269                           ;i2c1.c: 523: if(--i2c1_trb_count == 0)
 15270  00303A  0100               	movlb	0	; () banked
 15271  00303C  07D1               	decf	_i2c1_trb_count& (0+255),f,b
 15272  00303E  A0D8               	btfss	status,0,c
 15273  003040  07D2               	decf	(_i2c1_trb_count+1)& (0+255),f,b
 15274  003042  0100               	movlb	0	; () banked
 15275  003044  51D1               	movf	_i2c1_trb_count& (0+255),w,b
 15276  003046  0100               	movlb	0	; () banked
 15277  003048  11D2               	iorwf	(_i2c1_trb_count+1)& (0+255),w,b
 15278  00304A  A4D8               	btfss	status,2,c
 15279  00304C  D003               	goto	i2l6602
 15280                           
 15281                           ; BSR set to: 0
 15282                           ;i2c1.c: 524: {
 15283                           ;i2c1.c: 525: i2c1_state = S_MASTER_SEND_STOP;
 15284  00304E  0E04               	movlw	4
 15285  003050  6E38               	movwf	_i2c1_state,c
 15286                           
 15287                           ;i2c1.c: 526: }
 15288  003052  0012               	return	
 15289  003054                     i2l6602:
 15290                           
 15291                           ; BSR set to: 0
 15292                           ;i2c1.c: 527: else
 15293                           ;i2c1.c: 528: {
 15294                           ;i2c1.c: 529: i2c1_state = S_MASTER_RESTART;
 15295  003054  0E01               	movlw	1
 15296  003056  6E38               	movwf	_i2c1_state,c
 15297  003058  0012               	return	
 15298  00305A                     __end_of_I2C1_FunctionComplete:
 15299                           	opt stack 0
 15300                           tosu	equ	0xFFF
 15301                           tosh	equ	0xFFE
 15302                           tosl	equ	0xFFD
 15303                           pclatu	equ	0xFFB
 15304                           pclath	equ	0xFFA
 15305                           tblptru	equ	0xFF8
 15306                           tblptrh	equ	0xFF7
 15307                           tblptrl	equ	0xFF6
 15308                           tablat	equ	0xFF5
 15309                           prodh	equ	0xFF4
 15310                           prodl	equ	0xFF3
 15311                           intcon	equ	0xFF2
 15312                           intcon2	equ	0xFF1
 15313                           indf0	equ	0xFEF
 15314                           postinc0	equ	0xFEE
 15315                           fsr0h	equ	0xFEA
 15316                           fsr0l	equ	0xFE9
 15317                           wreg	equ	0xFE8
 15318                           fsr1h	equ	0xFE2
 15319                           fsr1l	equ	0xFE1
 15320                           indf2	equ	0xFDF
 15321                           postinc2	equ	0xFDE
 15322                           postdec2	equ	0xFDD
 15323                           plusw2	equ	0xFDB
 15324                           fsr2h	equ	0xFDA
 15325                           fsr2l	equ	0xFD9
 15326                           status	equ	0xFD8
 15327                           
 15328 ;; *************** function _I2C1_BusCollisionISR *****************
 15329 ;; Defined at:
 15330 ;;		line 681 in file "mcc_generated_files/i2c1.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;		None
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;		None
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  1    wreg      void 
 15337 ;; Registers used:
 15338 ;;		None
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15344 ;;      Params:         0       0       0       0       0       0       0
 15345 ;;      Locals:         0       0       0       0       0       0       0
 15346 ;;      Temps:          0       0       0       0       0       0       0
 15347 ;;      Totals:         0       0       0       0       0       0       0
 15348 ;;Total ram usage:        0 bytes
 15349 ;; Hardware stack levels used:    1
 15350 ;; This function calls:
 15351 ;;		Nothing
 15352 ;; This function is called by:
 15353 ;;		_INTERRUPT_InterruptManager
 15354 ;; This function uses a non-reentrant model
 15355 ;;
 15356                           
 15357                           	psect	text77
 15358  0031FC                     __ptext77:
 15359                           	opt stack 0
 15360  0031FC                     _I2C1_BusCollisionISR:
 15361                           	opt stack 23
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;incstack = 0
 15365  0031FC  0012               	return		;funcret
 15366  0031FE                     __end_of_I2C1_BusCollisionISR:
 15367                           	opt stack 0
 15368                           tosu	equ	0xFFF
 15369                           tosh	equ	0xFFE
 15370                           tosl	equ	0xFFD
 15371                           pclatu	equ	0xFFB
 15372                           pclath	equ	0xFFA
 15373                           tblptru	equ	0xFF8
 15374                           tblptrh	equ	0xFF7
 15375                           tblptrl	equ	0xFF6
 15376                           tablat	equ	0xFF5
 15377                           prodh	equ	0xFF4
 15378                           prodl	equ	0xFF3
 15379                           intcon	equ	0xFF2
 15380                           intcon2	equ	0xFF1
 15381                           indf0	equ	0xFEF
 15382                           postinc0	equ	0xFEE
 15383                           fsr0h	equ	0xFEA
 15384                           fsr0l	equ	0xFE9
 15385                           wreg	equ	0xFE8
 15386                           fsr1h	equ	0xFE2
 15387                           fsr1l	equ	0xFE1
 15388                           indf2	equ	0xFDF
 15389                           postinc2	equ	0xFDE
 15390                           postdec2	equ	0xFDD
 15391                           plusw2	equ	0xFDB
 15392                           fsr2h	equ	0xFDA
 15393                           fsr2l	equ	0xFD9
 15394                           status	equ	0xFD8
 15395                           
 15396 ;; *************** function _EUSART1_Transmit_ISR *****************
 15397 ;; Defined at:
 15398 ;;		line 150 in file "UART.c"
 15399 ;; Parameters:    Size  Location     Type
 15400 ;;		None
 15401 ;; Auto vars:     Size  Location     Type
 15402 ;;		None
 15403 ;; Return value:  Size  Location     Type
 15404 ;;                  1    wreg      void 
 15405 ;; Registers used:
 15406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15407 ;; Tracked objects:
 15408 ;;		On entry : 0/0
 15409 ;;		On exit  : 0/0
 15410 ;;		Unchanged: 0/0
 15411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15412 ;;      Params:         0       0       0       0       0       0       0
 15413 ;;      Locals:         0       0       0       0       0       0       0
 15414 ;;      Temps:          0       0       0       0       0       0       0
 15415 ;;      Totals:         0       0       0       0       0       0       0
 15416 ;;Total ram usage:        0 bytes
 15417 ;; Hardware stack levels used:    1
 15418 ;; Hardware stack levels required when called:    2
 15419 ;; This function calls:
 15420 ;;		i2_UART_buff_get
 15421 ;;		i2_UART_buff_size
 15422 ;; This function is called by:
 15423 ;;		_INTERRUPT_InterruptManager
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           	psect	text78
 15428  002F00                     __ptext78:
 15429                           	opt stack 0
 15430  002F00                     _EUSART1_Transmit_ISR:
 15431                           	opt stack 21
 15432                           
 15433                           ;UART.c: 152: if (UART_buff_size(&output_buffer) > 0) {
 15434                           
 15435                           ;incstack = 0
 15436  002F00  0E00               	movlw	low _output_buffer
 15437  002F02  6E01               	movwf	i2UART_buff_size@_this,c
 15438  002F04  0E05               	movlw	high _output_buffer
 15439  002F06  6E02               	movwf	i2UART_buff_size@_this+1,c
 15440  002F08  ECAD  F018         	call	i2_UART_buff_size	;wreg free
 15441  002F0C  BE02               	btfsc	?i2_UART_buff_size+1,7,c
 15442  002F0E  D00D               	goto	i2l5316
 15443  002F10  5002               	movf	?i2_UART_buff_size+1,w,c
 15444  002F12  E103               	bnz	i2u541_40
 15445  002F14  0401               	decf	?i2_UART_buff_size,w,c
 15446  002F16  A0D8               	btfss	status,0,c
 15447  002F18  D008               	goto	i2l5316
 15448  002F1A                     i2u541_40:
 15449                           
 15450                           ;UART.c: 153: TXREG1 = UART_buff_get(&output_buffer);
 15451  002F1A  0E00               	movlw	low _output_buffer
 15452  002F1C  6E07               	movwf	i2UART_buff_get@_this,c
 15453  002F1E  0E05               	movlw	high _output_buffer
 15454  002F20  6E08               	movwf	i2UART_buff_get@_this+1,c
 15455  002F22  ECE4  F012         	call	i2_UART_buff_get	;wreg free
 15456  002F26  6EAD               	movwf	4013,c	;volatile
 15457                           
 15458                           ;UART.c: 154: } else {
 15459  002F28  0012               	return	
 15460  002F2A                     i2l5316:
 15461                           
 15462                           ;UART.c: 155: Transmit_stall = 1;
 15463  002F2A  0E01               	movlw	1
 15464  002F2C  6E44               	movwf	_Transmit_stall,c
 15465                           
 15466                           ;UART.c: 156: PIE1bits.TX1IE = 0;
 15467  002F2E  989D               	bcf	3997,4,c	;volatile
 15468  002F30  0012               	return	
 15469  002F32                     __end_of_EUSART1_Transmit_ISR:
 15470                           	opt stack 0
 15471                           tosu	equ	0xFFF
 15472                           tosh	equ	0xFFE
 15473                           tosl	equ	0xFFD
 15474                           pclatu	equ	0xFFB
 15475                           pclath	equ	0xFFA
 15476                           tblptru	equ	0xFF8
 15477                           tblptrh	equ	0xFF7
 15478                           tblptrl	equ	0xFF6
 15479                           tablat	equ	0xFF5
 15480                           prodh	equ	0xFF4
 15481                           prodl	equ	0xFF3
 15482                           intcon	equ	0xFF2
 15483                           intcon2	equ	0xFF1
 15484                           indf0	equ	0xFEF
 15485                           postinc0	equ	0xFEE
 15486                           fsr0h	equ	0xFEA
 15487                           fsr0l	equ	0xFE9
 15488                           wreg	equ	0xFE8
 15489                           fsr1h	equ	0xFE2
 15490                           fsr1l	equ	0xFE1
 15491                           indf2	equ	0xFDF
 15492                           postinc2	equ	0xFDE
 15493                           postdec2	equ	0xFDD
 15494                           plusw2	equ	0xFDB
 15495                           fsr2h	equ	0xFDA
 15496                           fsr2l	equ	0xFD9
 15497                           status	equ	0xFD8
 15498                           
 15499 ;; *************** function i2_UART_buff_size *****************
 15500 ;; Defined at:
 15501 ;;		line 102 in file "UART.c"
 15502 ;; Parameters:    Size  Location     Type
 15503 ;;  _this           2    0[COMRAM] PTR struct UART_ring_buf
 15504 ;;		 -> output_buffer(206), input_buffer(206), 
 15505 ;; Auto vars:     Size  Location     Type
 15506 ;;		None
 15507 ;; Return value:  Size  Location     Type
 15508 ;;                  2    0[COMRAM] int 
 15509 ;; Registers used:
 15510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15511 ;; Tracked objects:
 15512 ;;		On entry : 0/0
 15513 ;;		On exit  : 0/0
 15514 ;;		Unchanged: 0/0
 15515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15516 ;;      Params:         2       0       0       0       0       0       0
 15517 ;;      Locals:         0       0       0       0       0       0       0
 15518 ;;      Temps:          0       0       0       0       0       0       0
 15519 ;;      Totals:         2       0       0       0       0       0       0
 15520 ;;Total ram usage:        2 bytes
 15521 ;; Hardware stack levels used:    1
 15522 ;; This function calls:
 15523 ;;		Nothing
 15524 ;; This function is called by:
 15525 ;;		_EUSART1_Transmit_ISR
 15526 ;; This function uses a non-reentrant model
 15527 ;;
 15528                           
 15529                           	psect	text79
 15530  00315A                     __ptext79:
 15531                           	opt stack 0
 15532  00315A                     i2_UART_buff_size:
 15533                           	opt stack 22
 15534                           
 15535                           ;UART.c: 103: return (_this->count);
 15536                           
 15537                           ;incstack = 0
 15538  00315A  EE20 F0CC          	lfsr	2,204
 15539  00315E  5001               	movf	i2UART_buff_size@_this,w,c
 15540  003160  26D9               	addwf	fsr2l,f,c
 15541  003162  5002               	movf	i2UART_buff_size@_this+1,w,c
 15542  003164  22DA               	addwfc	fsr2h,f,c
 15543  003166  CFDE F001          	movff	postinc2,?i2_UART_buff_size
 15544  00316A  CFDD F002          	movff	postdec2,?i2_UART_buff_size+1
 15545  00316E  0012               	return	
 15546  003170                     __end_ofi2_UART_buff_size:
 15547                           	opt stack 0
 15548                           tosu	equ	0xFFF
 15549                           tosh	equ	0xFFE
 15550                           tosl	equ	0xFFD
 15551                           pclatu	equ	0xFFB
 15552                           pclath	equ	0xFFA
 15553                           tblptru	equ	0xFF8
 15554                           tblptrh	equ	0xFF7
 15555                           tblptrl	equ	0xFF6
 15556                           tablat	equ	0xFF5
 15557                           prodh	equ	0xFF4
 15558                           prodl	equ	0xFF3
 15559                           intcon	equ	0xFF2
 15560                           intcon2	equ	0xFF1
 15561                           indf0	equ	0xFEF
 15562                           postinc0	equ	0xFEE
 15563                           fsr0h	equ	0xFEA
 15564                           fsr0l	equ	0xFE9
 15565                           wreg	equ	0xFE8
 15566                           fsr1h	equ	0xFE2
 15567                           fsr1l	equ	0xFE1
 15568                           indf2	equ	0xFDF
 15569                           postinc2	equ	0xFDE
 15570                           postdec2	equ	0xFDD
 15571                           plusw2	equ	0xFDB
 15572                           fsr2h	equ	0xFDA
 15573                           fsr2l	equ	0xFD9
 15574                           status	equ	0xFD8
 15575                           
 15576 ;; *************** function i2_UART_buff_get *****************
 15577 ;; Defined at:
 15578 ;;		line 81 in file "UART.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15581 ;;		 -> output_buffer(206), input_buffer(206), 
 15582 ;; Auto vars:     Size  Location     Type
 15583 ;;  UART_buff_ge    1   10[COMRAM] unsigned char 
 15584 ;; Return value:  Size  Location     Type
 15585 ;;                  1    wreg      unsigned char 
 15586 ;; Registers used:
 15587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15588 ;; Tracked objects:
 15589 ;;		On entry : 0/0
 15590 ;;		On exit  : 0/0
 15591 ;;		Unchanged: 0/0
 15592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15593 ;;      Params:         2       0       0       0       0       0       0
 15594 ;;      Locals:         1       0       0       0       0       0       0
 15595 ;;      Temps:          2       0       0       0       0       0       0
 15596 ;;      Totals:         5       0       0       0       0       0       0
 15597 ;;Total ram usage:        5 bytes
 15598 ;; Hardware stack levels used:    1
 15599 ;; Hardware stack levels required when called:    1
 15600 ;; This function calls:
 15601 ;;		i2_UART_buff_modulo_inc
 15602 ;; This function is called by:
 15603 ;;		_EUSART1_Transmit_ISR
 15604 ;; This function uses a non-reentrant model
 15605 ;;
 15606                           
 15607                           	psect	text80
 15608  0025C8                     __ptext80:
 15609                           	opt stack 0
 15610  0025C8                     i2_UART_buff_get:
 15611                           	opt stack 21
 15612                           
 15613                           ;UART.c: 82: unsigned char c;
 15614                           ;UART.c: 83: if (_this->count > 0) {
 15615                           
 15616                           ;incstack = 0
 15617  0025C8  EE20 F0CC          	lfsr	2,204
 15618  0025CC  5007               	movf	i2UART_buff_get@_this,w,c
 15619  0025CE  26D9               	addwf	fsr2l,f,c
 15620  0025D0  5008               	movf	i2UART_buff_get@_this+1,w,c
 15621  0025D2  22DA               	addwfc	fsr2h,f,c
 15622  0025D4  0E01               	movlw	1
 15623  0025D6  BEDB               	btfsc	plusw2,7,c
 15624  0025D8  D03C               	goto	i2l5170
 15625  0025DA  0E01               	movlw	1
 15626  0025DC  50DB               	movf	plusw2,w,c
 15627  0025DE  E103               	bnz	i2u521_40
 15628  0025E0  04DE               	decf	postinc2,w,c
 15629  0025E2  A0D8               	btfss	status,0,c
 15630  0025E4  D036               	goto	i2l5170
 15631  0025E6                     i2u521_40:
 15632                           
 15633                           ;UART.c: 84: c = _this->buf[_this->tail];
 15634  0025E6  EE20 F0CA          	lfsr	2,202
 15635  0025EA  5007               	movf	i2UART_buff_get@_this,w,c
 15636  0025EC  26D9               	addwf	fsr2l,f,c
 15637  0025EE  5008               	movf	i2UART_buff_get@_this+1,w,c
 15638  0025F0  22DA               	addwfc	fsr2h,f,c
 15639  0025F2  CFDE F009          	movff	postinc2,??i2_UART_buff_get
 15640  0025F6  CFDD F00A          	movff	postdec2,??i2_UART_buff_get+1
 15641  0025FA  5009               	movf	??i2_UART_buff_get,w,c
 15642  0025FC  2407               	addwf	i2UART_buff_get@_this,w,c
 15643  0025FE  6ED9               	movwf	fsr2l,c
 15644  002600  500A               	movf	??i2_UART_buff_get+1,w,c
 15645  002602  2008               	addwfc	i2UART_buff_get@_this+1,w,c
 15646  002604  6EDA               	movwf	fsr2h,c
 15647  002606  50DF               	movf	indf2,w,c
 15648  002608  6E0B               	movwf	i2UART_buff_get@c,c
 15649                           
 15650                           ;UART.c: 85: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15651  00260A  EE20 F0CA          	lfsr	2,202
 15652  00260E  5007               	movf	i2UART_buff_get@_this,w,c
 15653  002610  26D9               	addwf	fsr2l,f,c
 15654  002612  5008               	movf	i2UART_buff_get@_this+1,w,c
 15655  002614  22DA               	addwfc	fsr2h,f,c
 15656  002616  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15657  00261A  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15658  00261E  0E00               	movlw	0
 15659  002620  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15660  002622  0EC8               	movlw	200
 15661  002624  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15662  002626  ECF0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15663  00262A  EE20 F0CA          	lfsr	2,202
 15664  00262E  5007               	movf	i2UART_buff_get@_this,w,c
 15665  002630  26D9               	addwf	fsr2l,f,c
 15666  002632  5008               	movf	i2UART_buff_get@_this+1,w,c
 15667  002634  22DA               	addwfc	fsr2h,f,c
 15668  002636  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15669  00263A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15670                           
 15671                           ;UART.c: 86: --_this->count;
 15672  00263E  EE20 F0CC          	lfsr	2,204
 15673  002642  5007               	movf	i2UART_buff_get@_this,w,c
 15674  002644  26D9               	addwf	fsr2l,f,c
 15675  002646  5008               	movf	i2UART_buff_get@_this+1,w,c
 15676  002648  22DA               	addwfc	fsr2h,f,c
 15677  00264A  06DE               	decf	postinc2,f,c
 15678  00264C  0E00               	movlw	0
 15679  00264E  5ADD               	subwfb	postdec2,f,c
 15680                           
 15681                           ;UART.c: 87: } else {
 15682  002650  D002               	goto	i2l1163
 15683  002652                     i2l5170:
 15684                           
 15685                           ;UART.c: 88: c = 0;
 15686  002652  0E00               	movlw	0
 15687  002654  6E0B               	movwf	i2UART_buff_get@c,c
 15688  002656                     i2l1163:
 15689                           
 15690                           ;UART.c: 89: }
 15691                           ;UART.c: 90: return (c);
 15692  002656  500B               	movf	i2UART_buff_get@c,w,c
 15693  002658  0012               	return	
 15694  00265A                     __end_ofi2_UART_buff_get:
 15695                           	opt stack 0
 15696                           tosu	equ	0xFFF
 15697                           tosh	equ	0xFFE
 15698                           tosl	equ	0xFFD
 15699                           pclatu	equ	0xFFB
 15700                           pclath	equ	0xFFA
 15701                           tblptru	equ	0xFF8
 15702                           tblptrh	equ	0xFF7
 15703                           tblptrl	equ	0xFF6
 15704                           tablat	equ	0xFF5
 15705                           prodh	equ	0xFF4
 15706                           prodl	equ	0xFF3
 15707                           intcon	equ	0xFF2
 15708                           intcon2	equ	0xFF1
 15709                           indf0	equ	0xFEF
 15710                           postinc0	equ	0xFEE
 15711                           fsr0h	equ	0xFEA
 15712                           fsr0l	equ	0xFE9
 15713                           wreg	equ	0xFE8
 15714                           fsr1h	equ	0xFE2
 15715                           fsr1l	equ	0xFE1
 15716                           indf2	equ	0xFDF
 15717                           postinc2	equ	0xFDE
 15718                           postdec2	equ	0xFDD
 15719                           plusw2	equ	0xFDB
 15720                           fsr2h	equ	0xFDA
 15721                           fsr2l	equ	0xFD9
 15722                           status	equ	0xFD8
 15723                           
 15724 ;; *************** function _EUSART1_Receive_ISR *****************
 15725 ;; Defined at:
 15726 ;;		line 139 in file "UART.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;		None
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;  data            1   11[COMRAM] unsigned char 
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  1    wreg      void 
 15733 ;; Registers used:
 15734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/0
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15740 ;;      Params:         0       0       0       0       0       0       0
 15741 ;;      Locals:         1       0       0       0       0       0       0
 15742 ;;      Temps:          0       0       0       0       0       0       0
 15743 ;;      Totals:         1       0       0       0       0       0       0
 15744 ;;Total ram usage:        1 bytes
 15745 ;; Hardware stack levels used:    1
 15746 ;; Hardware stack levels required when called:    2
 15747 ;; This function calls:
 15748 ;;		i2_UART_buff_put
 15749 ;; This function is called by:
 15750 ;;		_INTERRUPT_InterruptManager
 15751 ;; This function uses a non-reentrant model
 15752 ;;
 15753                           
 15754                           	psect	text81
 15755  0030DC                     __ptext81:
 15756                           	opt stack 0
 15757  0030DC                     _EUSART1_Receive_ISR:
 15758                           	opt stack 21
 15759                           
 15760                           ;UART.c: 140: if (1 == RC1STAbits.OERR) {
 15761                           
 15762                           ;incstack = 0
 15763  0030DC  A2AB               	btfss	4011,1,c	;volatile
 15764  0030DE  D002               	goto	i2l1194
 15765                           
 15766                           ;UART.c: 143: RC1STAbits.CREN = 0;
 15767  0030E0  98AB               	bcf	4011,4,c	;volatile
 15768                           
 15769                           ;UART.c: 144: RC1STAbits.CREN = 1;
 15770  0030E2  88AB               	bsf	4011,4,c	;volatile
 15771  0030E4                     i2l1194:
 15772                           
 15773                           ;UART.c: 145: }
 15774                           ;UART.c: 146: unsigned char data = RCREG1;
 15775  0030E4  CFAE F00C          	movff	4014,EUSART1_Receive_ISR@data	;volatile
 15776                           
 15777                           ;UART.c: 147: UART_buff_put(&input_buffer, data);
 15778  0030E8  0E00               	movlw	low _input_buffer
 15779  0030EA  6E07               	movwf	i2UART_buff_put@_this,c
 15780  0030EC  0E04               	movlw	high _input_buffer
 15781  0030EE  6E08               	movwf	i2UART_buff_put@_this+1,c
 15782  0030F0  C00C  F009         	movff	EUSART1_Receive_ISR@data,i2UART_buff_put@c
 15783  0030F4  EC15  F00D         	call	i2_UART_buff_put	;wreg free
 15784  0030F8  0012               	return		;funcret
 15785  0030FA                     __end_of_EUSART1_Receive_ISR:
 15786                           	opt stack 0
 15787                           tosu	equ	0xFFF
 15788                           tosh	equ	0xFFE
 15789                           tosl	equ	0xFFD
 15790                           pclatu	equ	0xFFB
 15791                           pclath	equ	0xFFA
 15792                           tblptru	equ	0xFF8
 15793                           tblptrh	equ	0xFF7
 15794                           tblptrl	equ	0xFF6
 15795                           tablat	equ	0xFF5
 15796                           prodh	equ	0xFF4
 15797                           prodl	equ	0xFF3
 15798                           intcon	equ	0xFF2
 15799                           intcon2	equ	0xFF1
 15800                           indf0	equ	0xFEF
 15801                           postinc0	equ	0xFEE
 15802                           fsr0h	equ	0xFEA
 15803                           fsr0l	equ	0xFE9
 15804                           wreg	equ	0xFE8
 15805                           fsr1h	equ	0xFE2
 15806                           fsr1l	equ	0xFE1
 15807                           indf2	equ	0xFDF
 15808                           postinc2	equ	0xFDE
 15809                           postdec2	equ	0xFDD
 15810                           plusw2	equ	0xFDB
 15811                           fsr2h	equ	0xFDA
 15812                           fsr2l	equ	0xFD9
 15813                           status	equ	0xFD8
 15814                           
 15815 ;; *************** function i2_UART_buff_put *****************
 15816 ;; Defined at:
 15817 ;;		line 68 in file "UART.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  _this           2    6[COMRAM] PTR struct UART_ring_buf
 15820 ;;		 -> output_buffer(206), input_buffer(206), 
 15821 ;;  c               1    8[COMRAM] const unsigned char 
 15822 ;; Auto vars:     Size  Location     Type
 15823 ;;		None
 15824 ;; Return value:  Size  Location     Type
 15825 ;;                  1    wreg      void 
 15826 ;; Registers used:
 15827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15828 ;; Tracked objects:
 15829 ;;		On entry : 0/0
 15830 ;;		On exit  : 0/0
 15831 ;;		Unchanged: 0/0
 15832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15833 ;;      Params:         3       0       0       0       0       0       0
 15834 ;;      Locals:         0       0       0       0       0       0       0
 15835 ;;      Temps:          2       0       0       0       0       0       0
 15836 ;;      Totals:         5       0       0       0       0       0       0
 15837 ;;Total ram usage:        5 bytes
 15838 ;; Hardware stack levels used:    1
 15839 ;; Hardware stack levels required when called:    1
 15840 ;; This function calls:
 15841 ;;		i2_UART_buff_modulo_inc
 15842 ;; This function is called by:
 15843 ;;		_EUSART1_Receive_ISR
 15844 ;; This function uses a non-reentrant model
 15845 ;;
 15846                           
 15847                           	psect	text82
 15848  001A2A                     __ptext82:
 15849                           	opt stack 0
 15850  001A2A                     i2_UART_buff_put:
 15851                           	opt stack 21
 15852                           
 15853                           ;UART.c: 69: if (_this->count < 200) {
 15854                           
 15855                           ;incstack = 0
 15856  001A2A  EE20 F0CC          	lfsr	2,204
 15857  001A2E  5007               	movf	i2UART_buff_put@_this,w,c
 15858  001A30  26D9               	addwf	fsr2l,f,c
 15859  001A32  5008               	movf	i2UART_buff_put@_this+1,w,c
 15860  001A34  22DA               	addwfc	fsr2h,f,c
 15861  001A36  0E01               	movlw	1
 15862  001A38  BEDB               	btfsc	plusw2,7,c
 15863  001A3A  D007               	goto	i2l5150
 15864  001A3C  0E01               	movlw	1
 15865  001A3E  50DB               	movf	plusw2,w,c
 15866  001A40  E13A               	bnz	i2l5156
 15867  001A42  0EC8               	movlw	200
 15868  001A44  5CDE               	subwf	postinc2,w,c
 15869  001A46  B0D8               	btfsc	status,0,c
 15870  001A48  D036               	goto	i2l5156
 15871  001A4A                     i2l5150:
 15872                           
 15873                           ;UART.c: 70: _this->buf[_this->head] = c;
 15874  001A4A  EE20 F0C8          	lfsr	2,200
 15875  001A4E  5007               	movf	i2UART_buff_put@_this,w,c
 15876  001A50  26D9               	addwf	fsr2l,f,c
 15877  001A52  5008               	movf	i2UART_buff_put@_this+1,w,c
 15878  001A54  22DA               	addwfc	fsr2h,f,c
 15879  001A56  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 15880  001A5A  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 15881  001A5E  500A               	movf	??i2_UART_buff_put,w,c
 15882  001A60  2407               	addwf	i2UART_buff_put@_this,w,c
 15883  001A62  6ED9               	movwf	fsr2l,c
 15884  001A64  500B               	movf	??i2_UART_buff_put+1,w,c
 15885  001A66  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 15886  001A68  6EDA               	movwf	fsr2h,c
 15887  001A6A  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 15888                           
 15889                           ;UART.c: 71: _this->head = UART_buff_modulo_inc(_this->head, 200);
 15890  001A6E  EE20 F0C8          	lfsr	2,200
 15891  001A72  5007               	movf	i2UART_buff_put@_this,w,c
 15892  001A74  26D9               	addwf	fsr2l,f,c
 15893  001A76  5008               	movf	i2UART_buff_put@_this+1,w,c
 15894  001A78  22DA               	addwfc	fsr2h,f,c
 15895  001A7A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15896  001A7E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15897  001A82  0E00               	movlw	0
 15898  001A84  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15899  001A86  0EC8               	movlw	200
 15900  001A88  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15901  001A8A  ECF0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15902  001A8E  EE20 F0C8          	lfsr	2,200
 15903  001A92  5007               	movf	i2UART_buff_put@_this,w,c
 15904  001A94  26D9               	addwf	fsr2l,f,c
 15905  001A96  5008               	movf	i2UART_buff_put@_this+1,w,c
 15906  001A98  22DA               	addwfc	fsr2h,f,c
 15907  001A9A  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15908  001A9E  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15909                           
 15910                           ;UART.c: 72: ++_this->count;
 15911  001AA2  EE20 F0CC          	lfsr	2,204
 15912  001AA6  5007               	movf	i2UART_buff_put@_this,w,c
 15913  001AA8  26D9               	addwf	fsr2l,f,c
 15914  001AAA  5008               	movf	i2UART_buff_put@_this+1,w,c
 15915  001AAC  22DA               	addwfc	fsr2h,f,c
 15916  001AAE  2ADE               	incf	postinc2,f,c
 15917  001AB0  0E00               	movlw	0
 15918  001AB2  22DD               	addwfc	postdec2,f,c
 15919                           
 15920                           ;UART.c: 73: } else {
 15921  001AB4  0012               	return	
 15922  001AB6                     i2l5156:
 15923                           
 15924                           ;UART.c: 74: _this->buf[_this->head] = c;
 15925  001AB6  EE20 F0C8          	lfsr	2,200
 15926  001ABA  5007               	movf	i2UART_buff_put@_this,w,c
 15927  001ABC  26D9               	addwf	fsr2l,f,c
 15928  001ABE  5008               	movf	i2UART_buff_put@_this+1,w,c
 15929  001AC0  22DA               	addwfc	fsr2h,f,c
 15930  001AC2  CFDE F00A          	movff	postinc2,??i2_UART_buff_put
 15931  001AC6  CFDD F00B          	movff	postdec2,??i2_UART_buff_put+1
 15932  001ACA  500A               	movf	??i2_UART_buff_put,w,c
 15933  001ACC  2407               	addwf	i2UART_buff_put@_this,w,c
 15934  001ACE  6ED9               	movwf	fsr2l,c
 15935  001AD0  500B               	movf	??i2_UART_buff_put+1,w,c
 15936  001AD2  2008               	addwfc	i2UART_buff_put@_this+1,w,c
 15937  001AD4  6EDA               	movwf	fsr2h,c
 15938  001AD6  C009  FFDF         	movff	i2UART_buff_put@c,indf2
 15939                           
 15940                           ;UART.c: 75: _this->head = UART_buff_modulo_inc(_this->head, 200);
 15941  001ADA  EE20 F0C8          	lfsr	2,200
 15942  001ADE  5007               	movf	i2UART_buff_put@_this,w,c
 15943  001AE0  26D9               	addwf	fsr2l,f,c
 15944  001AE2  5008               	movf	i2UART_buff_put@_this+1,w,c
 15945  001AE4  22DA               	addwfc	fsr2h,f,c
 15946  001AE6  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15947  001AEA  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15948  001AEE  0E00               	movlw	0
 15949  001AF0  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15950  001AF2  0EC8               	movlw	200
 15951  001AF4  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15952  001AF6  ECF0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15953  001AFA  EE20 F0C8          	lfsr	2,200
 15954  001AFE  5007               	movf	i2UART_buff_put@_this,w,c
 15955  001B00  26D9               	addwf	fsr2l,f,c
 15956  001B02  5008               	movf	i2UART_buff_put@_this+1,w,c
 15957  001B04  22DA               	addwfc	fsr2h,f,c
 15958  001B06  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15959  001B0A  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15960                           
 15961                           ;UART.c: 76: _this->tail = UART_buff_modulo_inc(_this->tail, 200);
 15962  001B0E  EE20 F0CA          	lfsr	2,202
 15963  001B12  5007               	movf	i2UART_buff_put@_this,w,c
 15964  001B14  26D9               	addwf	fsr2l,f,c
 15965  001B16  5008               	movf	i2UART_buff_put@_this+1,w,c
 15966  001B18  22DA               	addwfc	fsr2h,f,c
 15967  001B1A  CFDE F001          	movff	postinc2,i2UART_buff_modulo_inc@value
 15968  001B1E  CFDD F002          	movff	postdec2,i2UART_buff_modulo_inc@value+1
 15969  001B22  0E00               	movlw	0
 15970  001B24  6E04               	movwf	i2UART_buff_modulo_inc@modulus+1,c
 15971  001B26  0EC8               	movlw	200
 15972  001B28  6E03               	movwf	i2UART_buff_modulo_inc@modulus,c
 15973  001B2A  ECF0  F017         	call	i2_UART_buff_modulo_inc	;wreg free
 15974  001B2E  EE20 F0CA          	lfsr	2,202
 15975  001B32  5007               	movf	i2UART_buff_put@_this,w,c
 15976  001B34  26D9               	addwf	fsr2l,f,c
 15977  001B36  5008               	movf	i2UART_buff_put@_this+1,w,c
 15978  001B38  22DA               	addwfc	fsr2h,f,c
 15979  001B3A  C001  FFDE         	movff	?i2_UART_buff_modulo_inc,postinc2
 15980  001B3E  C002  FFDD         	movff	?i2_UART_buff_modulo_inc+1,postdec2
 15981  001B42  0012               	return	
 15982  001B44                     __end_ofi2_UART_buff_put:
 15983                           	opt stack 0
 15984                           tosu	equ	0xFFF
 15985                           tosh	equ	0xFFE
 15986                           tosl	equ	0xFFD
 15987                           pclatu	equ	0xFFB
 15988                           pclath	equ	0xFFA
 15989                           tblptru	equ	0xFF8
 15990                           tblptrh	equ	0xFF7
 15991                           tblptrl	equ	0xFF6
 15992                           tablat	equ	0xFF5
 15993                           prodh	equ	0xFF4
 15994                           prodl	equ	0xFF3
 15995                           intcon	equ	0xFF2
 15996                           intcon2	equ	0xFF1
 15997                           indf0	equ	0xFEF
 15998                           postinc0	equ	0xFEE
 15999                           fsr0h	equ	0xFEA
 16000                           fsr0l	equ	0xFE9
 16001                           wreg	equ	0xFE8
 16002                           fsr1h	equ	0xFE2
 16003                           fsr1l	equ	0xFE1
 16004                           indf2	equ	0xFDF
 16005                           postinc2	equ	0xFDE
 16006                           postdec2	equ	0xFDD
 16007                           plusw2	equ	0xFDB
 16008                           fsr2h	equ	0xFDA
 16009                           fsr2l	equ	0xFD9
 16010                           status	equ	0xFD8
 16011                           
 16012 ;; *************** function i2_UART_buff_modulo_inc *****************
 16013 ;; Defined at:
 16014 ;;		line 106 in file "UART.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;  value           2    0[COMRAM] const unsigned int 
 16017 ;;  modulus         2    2[COMRAM] const unsigned int 
 16018 ;; Auto vars:     Size  Location     Type
 16019 ;;  UART_buff_mo    2    4[COMRAM] unsigned int 
 16020 ;; Return value:  Size  Location     Type
 16021 ;;                  2    0[COMRAM] unsigned int 
 16022 ;; Registers used:
 16023 ;;		wreg, status,2, status,0
 16024 ;; Tracked objects:
 16025 ;;		On entry : 0/0
 16026 ;;		On exit  : 0/0
 16027 ;;		Unchanged: 0/0
 16028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16029 ;;      Params:         4       0       0       0       0       0       0
 16030 ;;      Locals:         2       0       0       0       0       0       0
 16031 ;;      Temps:          0       0       0       0       0       0       0
 16032 ;;      Totals:         6       0       0       0       0       0       0
 16033 ;;Total ram usage:        6 bytes
 16034 ;; Hardware stack levels used:    1
 16035 ;; This function calls:
 16036 ;;		Nothing
 16037 ;; This function is called by:
 16038 ;;		i2_UART_buff_put
 16039 ;;		i2_UART_buff_get
 16040 ;; This function uses a non-reentrant model
 16041 ;;
 16042                           
 16043                           	psect	text83
 16044  002FE0                     __ptext83:
 16045                           	opt stack 0
 16046  002FE0                     i2_UART_buff_modulo_inc:
 16047                           	opt stack 21
 16048                           
 16049                           ;UART.c: 107: unsigned int my_value = value + 1;
 16050                           
 16051                           ;incstack = 0
 16052  002FE0  0E01               	movlw	1
 16053  002FE2  2401               	addwf	i2UART_buff_modulo_inc@value,w,c
 16054  002FE4  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 16055  002FE6  0E00               	movlw	0
 16056  002FE8  2002               	addwfc	i2UART_buff_modulo_inc@value+1,w,c
 16057  002FEA  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 16058                           
 16059                           ;UART.c: 108: if (my_value >= modulus) {
 16060  002FEC  5003               	movf	i2UART_buff_modulo_inc@modulus,w,c
 16061  002FEE  5C05               	subwf	i2UART_buff_modulo_inc@my_value,w,c
 16062  002FF0  5004               	movf	i2UART_buff_modulo_inc@modulus+1,w,c
 16063  002FF2  5806               	subwfb	i2UART_buff_modulo_inc@my_value+1,w,c
 16064  002FF4  A0D8               	btfss	status,0,c
 16065  002FF6  D004               	goto	i2l4634
 16066                           
 16067                           ;UART.c: 109: my_value = 0;
 16068  002FF8  0E00               	movlw	0
 16069  002FFA  6E06               	movwf	i2UART_buff_modulo_inc@my_value+1,c
 16070  002FFC  0E00               	movlw	0
 16071  002FFE  6E05               	movwf	i2UART_buff_modulo_inc@my_value,c
 16072  003000                     i2l4634:
 16073                           
 16074                           ;UART.c: 110: }
 16075                           ;UART.c: 111: return (my_value);
 16076  003000  C005  F001         	movff	i2UART_buff_modulo_inc@my_value,?i2_UART_buff_modulo_inc
 16077  003004  C006  F002         	movff	i2UART_buff_modulo_inc@my_value+1,?i2_UART_buff_modulo_inc+1
 16078  003008  0012               	return	
 16079  00300A                     __end_ofi2_UART_buff_modulo_inc:
 16080                           	opt stack 0
 16081                           tosu	equ	0xFFF
 16082                           tosh	equ	0xFFE
 16083                           tosl	equ	0xFFD
 16084                           pclatu	equ	0xFFB
 16085                           pclath	equ	0xFFA
 16086                           tblptru	equ	0xFF8
 16087                           tblptrh	equ	0xFF7
 16088                           tblptrl	equ	0xFF6
 16089                           tablat	equ	0xFF5
 16090                           prodh	equ	0xFF4
 16091                           prodl	equ	0xFF3
 16092                           intcon	equ	0xFF2
 16093                           intcon2	equ	0xFF1
 16094                           indf0	equ	0xFEF
 16095                           postinc0	equ	0xFEE
 16096                           fsr0h	equ	0xFEA
 16097                           fsr0l	equ	0xFE9
 16098                           wreg	equ	0xFE8
 16099                           fsr1h	equ	0xFE2
 16100                           fsr1l	equ	0xFE1
 16101                           indf2	equ	0xFDF
 16102                           postinc2	equ	0xFDE
 16103                           postdec2	equ	0xFDD
 16104                           plusw2	equ	0xFDB
 16105                           fsr2h	equ	0xFDA
 16106                           fsr2l	equ	0xFD9
 16107                           status	equ	0xFD8
 16108                           
 16109 ;; *************** function _ADC_ISR *****************
 16110 ;; Defined at:
 16111 ;;		line 128 in file "mcc_generated_files/adc.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;		None
 16114 ;; Auto vars:     Size  Location     Type
 16115 ;;		None
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  1    wreg      void 
 16118 ;; Registers used:
 16119 ;;		None
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16125 ;;      Params:         0       0       0       0       0       0       0
 16126 ;;      Locals:         0       0       0       0       0       0       0
 16127 ;;      Temps:          0       0       0       0       0       0       0
 16128 ;;      Totals:         0       0       0       0       0       0       0
 16129 ;;Total ram usage:        0 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; This function calls:
 16132 ;;		Nothing
 16133 ;; This function is called by:
 16134 ;;		_INTERRUPT_InterruptManager
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           	psect	text84
 16139  0031F6                     __ptext84:
 16140                           	opt stack 0
 16141  0031F6                     _ADC_ISR:
 16142                           	opt stack 23
 16143                           
 16144                           ;adc.c: 131: PIR1bits.ADIF = 0;
 16145                           
 16146                           ;incstack = 0
 16147  0031F6  9C9E               	bcf	3998,6,c	;volatile
 16148  0031F8  0012               	return		;funcret
 16149  0031FA                     __end_of_ADC_ISR:
 16150                           	opt stack 0
 16151                           tosu	equ	0xFFF
 16152                           tosh	equ	0xFFE
 16153                           tosl	equ	0xFFD
 16154                           pclatu	equ	0xFFB
 16155                           pclath	equ	0xFFA
 16156                           tblptru	equ	0xFF8
 16157                           tblptrh	equ	0xFF7
 16158                           tblptrl	equ	0xFF6
 16159                           tablat	equ	0xFF5
 16160                           prodh	equ	0xFF4
 16161                           prodl	equ	0xFF3
 16162                           intcon	equ	0xFF2
 16163                           intcon2	equ	0xFF1
 16164                           indf0	equ	0xFEF
 16165                           postinc0	equ	0xFEE
 16166                           fsr0h	equ	0xFEA
 16167                           fsr0l	equ	0xFE9
 16168                           wreg	equ	0xFE8
 16169                           fsr1h	equ	0xFE2
 16170                           fsr1l	equ	0xFE1
 16171                           indf2	equ	0xFDF
 16172                           postinc2	equ	0xFDE
 16173                           postdec2	equ	0xFDD
 16174                           plusw2	equ	0xFDB
 16175                           fsr2h	equ	0xFDA
 16176                           fsr2l	equ	0xFD9
 16177                           status	equ	0xFD8
 16178                           tosu	equ	0xFFF
 16179                           tosh	equ	0xFFE
 16180                           tosl	equ	0xFFD
 16181                           pclatu	equ	0xFFB
 16182                           pclath	equ	0xFFA
 16183                           tblptru	equ	0xFF8
 16184                           tblptrh	equ	0xFF7
 16185                           tblptrl	equ	0xFF6
 16186                           tablat	equ	0xFF5
 16187                           prodh	equ	0xFF4
 16188                           prodl	equ	0xFF3
 16189                           intcon	equ	0xFF2
 16190                           intcon2	equ	0xFF1
 16191                           indf0	equ	0xFEF
 16192                           postinc0	equ	0xFEE
 16193                           fsr0h	equ	0xFEA
 16194                           fsr0l	equ	0xFE9
 16195                           wreg	equ	0xFE8
 16196                           fsr1h	equ	0xFE2
 16197                           fsr1l	equ	0xFE1
 16198                           indf2	equ	0xFDF
 16199                           postinc2	equ	0xFDE
 16200                           postdec2	equ	0xFDD
 16201                           plusw2	equ	0xFDB
 16202                           fsr2h	equ	0xFDA
 16203                           fsr2l	equ	0xFD9
 16204                           status	equ	0xFD8
 16205                           
 16206                           	psect	text85
 16207  000000                     __ptext85:
 16208                           	opt stack 0
 16209                           tosu	equ	0xFFF
 16210                           tosh	equ	0xFFE
 16211                           tosl	equ	0xFFD
 16212                           pclatu	equ	0xFFB
 16213                           pclath	equ	0xFFA
 16214                           tblptru	equ	0xFF8
 16215                           tblptrh	equ	0xFF7
 16216                           tblptrl	equ	0xFF6
 16217                           tablat	equ	0xFF5
 16218                           prodh	equ	0xFF4
 16219                           prodl	equ	0xFF3
 16220                           intcon	equ	0xFF2
 16221                           intcon2	equ	0xFF1
 16222                           indf0	equ	0xFEF
 16223                           postinc0	equ	0xFEE
 16224                           fsr0h	equ	0xFEA
 16225                           fsr0l	equ	0xFE9
 16226                           wreg	equ	0xFE8
 16227                           fsr1h	equ	0xFE2
 16228                           fsr1l	equ	0xFE1
 16229                           indf2	equ	0xFDF
 16230                           postinc2	equ	0xFDE
 16231                           postdec2	equ	0xFDD
 16232                           plusw2	equ	0xFDB
 16233                           fsr2h	equ	0xFDA
 16234                           fsr2l	equ	0xFD9
 16235                           status	equ	0xFD8
 16236                           
 16237                           	psect	rparam
 16238  0000                     tosu	equ	0xFFF
 16239                           tosh	equ	0xFFE
 16240                           tosl	equ	0xFFD
 16241                           pclatu	equ	0xFFB
 16242                           pclath	equ	0xFFA
 16243                           tblptru	equ	0xFF8
 16244                           tblptrh	equ	0xFF7
 16245                           tblptrl	equ	0xFF6
 16246                           tablat	equ	0xFF5
 16247                           prodh	equ	0xFF4
 16248                           prodl	equ	0xFF3
 16249                           intcon	equ	0xFF2
 16250                           intcon2	equ	0xFF1
 16251                           indf0	equ	0xFEF
 16252                           postinc0	equ	0xFEE
 16253                           fsr0h	equ	0xFEA
 16254                           fsr0l	equ	0xFE9
 16255                           wreg	equ	0xFE8
 16256                           fsr1h	equ	0xFE2
 16257                           fsr1l	equ	0xFE1
 16258                           indf2	equ	0xFDF
 16259                           postinc2	equ	0xFDE
 16260                           postdec2	equ	0xFDD
 16261                           plusw2	equ	0xFDB
 16262                           fsr2h	equ	0xFDA
 16263                           fsr2l	equ	0xFD9
 16264                           status	equ	0xFD8
 16265                           
 16266                           	psect	temp
 16267  000045                     btemp:
 16268                           	opt stack 0
 16269  000045                     	ds	1
 16270  0000                     int$flags	set	btemp
 16271                           tosu	equ	0xFFF
 16272                           tosh	equ	0xFFE
 16273                           tosl	equ	0xFFD
 16274                           pclatu	equ	0xFFB
 16275                           pclath	equ	0xFFA
 16276                           tblptru	equ	0xFF8
 16277                           tblptrh	equ	0xFF7
 16278                           tblptrl	equ	0xFF6
 16279                           tablat	equ	0xFF5
 16280                           prodh	equ	0xFF4
 16281                           prodl	equ	0xFF3
 16282                           intcon	equ	0xFF2
 16283                           intcon2	equ	0xFF1
 16284                           indf0	equ	0xFEF
 16285                           postinc0	equ	0xFEE
 16286                           fsr0h	equ	0xFEA
 16287                           fsr0l	equ	0xFE9
 16288                           wreg	equ	0xFE8
 16289                           fsr1h	equ	0xFE2
 16290                           fsr1l	equ	0xFE1
 16291                           indf2	equ	0xFDF
 16292                           postinc2	equ	0xFDE
 16293                           postdec2	equ	0xFDD
 16294                           plusw2	equ	0xFDB
 16295                           fsr2h	equ	0xFDA
 16296                           fsr2l	equ	0xFD9
 16297                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    1040
    Data        1
    BSS         1044
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      68
    BANK0           160     12     160
    BANK1           256     24      81
    BANK2           256      0     206
    BANK3           256      0     200
    BANK4           256      0     206
    BANK5           256      0     206

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_tr_queue.pTrFlag	PTR enum E7739 size(2) Largest target is 0
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    memset@p1	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memset@p	PTR unsigned char  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    memmove@d1	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@d	PTR unsigned char  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    memmove@s1	PTR const void  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 20
		 -> SetData@s(COMRAM[20]), 

    oledPrint@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[8]), STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[11]), 
		 -> SetData@s(COMRAM[20]), 

    sp__memmove	PTR void  size(2) Largest target is 9
		 -> oledPutChar@bytes(BANK1[9]), 

    oledPutChar@base	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont(CODE[768]), 

    UART_buff_size@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_get@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_put@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    UART_buff_init@_this	PTR struct UART_ring_buff size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), 

    crcBufS_put@_this	PTR struct crcBufS size(2) Largest target is 17
		 -> crc_buffer(BANK1[17]), 

    sp__memset	PTR void  size(2) Largest target is 206
		 -> output_buffer(BANK5[206]), input_buffer(BANK4[206]), ring_buffer(BANK2[206]), 

    FastTransfer_buffer_flush@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    FastTransfer_buffer_put@_this	PTR struct ringBufS size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), 

    CRC8@data	PTR const unsigned char  size(2) Largest target is 206
		 -> CRCcheck@arrayHolder(COMRAM[3]), receiveData@holder_2468(BANK1[3]), receiveData@holder(BANK1[3]), rx_buffer(BANK3[200]), 
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    sendStructAddress	PTR unsigned char  size(2) Largest target is 206
		 -> ring_buffer(BANK2[206]), NULL(NULL[0]), 

    begin@stufftoreceive	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_get(), 

    serial_read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_get(), 

    begin@stuffpeek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Receive_peek(), 

    serial_peek	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), Receive_peek(), 

    begin@stuffavailable	PTR FTN()int  size(2) Largest target is 2
		 -> Receive_available(), 

    serial_available	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), Receive_available(), 

    begin@stufftosend	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Send_put(), 

    serial_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), Send_put(), 

    begin@ptr	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), 

    receiveArrayAddress	PTR volatile int  size(2) Largest target is 40
		 -> receiveArray(BANK1[40]), NULL(NULL[0]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    F7851.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_MasterWrite@pflag	PTR enum E7739 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    F7846.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDblinkRate@b(COMRAM[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 
		 -> LEDBsetBrightness@b(COMRAM[2]), I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), 

    S21$pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 272
		 -> picture(CODE[272]), oledPutChar@bytes(BANK1[9]), Buff(BANK0[2]), LEDwriteDisplay@writeBuffer(BANK1[20]), 
		 -> LEDbegin@writeBuffer(BANK1[3]), LEDblinkRate@writeBuffer(BANK1[2]), LEDBsetBrightness@writeBuffer(BANK1[2]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S33$pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    p_i2c1_current.pTrFlag	PTR enum E7739 size(2) Largest target is 1
		 -> Display@status(COMRAM[1]), oledPutChar@status(BANK1[1]), OLED_command@status(COMRAM[1]), LEDwriteDisplay@status(BANK1[1]), 
		 -> LEDbegin@status(BANK1[1]), LEDblinkRate@status(BANK1[1]), LEDBsetBrightness@status(BANK1[1]), 

    S33$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S44$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S44$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 


Critical Paths under _main in COMRAM

    _respondECU->_ToSend
    _sendData->_FastTransfer_buffer_flush
    _sendData->_Send_put
    _FastTransfer_buffer_flush->_memset
    _buttonsCollector->_GetButtonState
    _ToSend->_buttonsCollector
    _FastTransfer_buffer_put->_FastTransfer_buffer_modulo_inc
    _receiveData->_Send_put
    _Send_put->_UART_buff_get
    _Send_put->_UART_buff_put
    _UART_buff_put->_UART_buff_modulo_inc
    _Receive_get->_UART_buff_get
    _UART_buff_get->_UART_buff_modulo_inc
    _Receive_available->_UART_buff_size
    _handleIndicators->_SetLEDOut
    _SetLEDOut->_Off_Led
    _SetLEDOut->_setLED
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _oledPutChar->_memmove
    _oledGotoYX->_OLED_command
    _OLED_init->_OLED_command
    _begin->___awdiv
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_UART_buff_init
    _UART_buff_init->_memset
    _LEDsetValue->_LEDsetBar
    _LEDsetBar->___awdiv
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _TMR2_ISR->_TMR2_CallBack
    _TMR0_ISR->_ReadButtonState
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Transmit_ISR->i2_UART_buff_get
    i2_UART_buff_get->i2_UART_buff_modulo_inc
    _EUSART1_Receive_ISR->i2_UART_buff_put
    i2_UART_buff_put->i2_UART_buff_modulo_inc

Critical Paths under _main in BANK0

    _main->___ftmul
    _updateComms->_receiveData
    _respondECU->_sendData
    ___fttol->___ftmul
    _Splash->_oledPrint
    _Setupdisplay->_oledClear
    _oledPutChar->_I2C1_MasterWrite
    _OLED_command->_I2C1_MasterWrite
    _LEDwriteDisplay->_I2C1_MasterWrite
    _LEDsetValue->___ftmul
    _LEDbegin->_I2C1_MasterWrite
    _LEDblinkRate->_I2C1_MasterWrite
    _LEDBsetBrightness->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LEDwriteDisplay
    _updateComms->_receiveData
    _oledPrint->_oledPutChar
    _oledClear->_oledPutChar
    _SYSTEM_Initialize->_begin
    _LEDsetValue->_LEDsetBar
    _LEDbegin->_LEDBsetBrightness
    _LEDbegin->_LEDblinkRate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   70321
                          _ClearTime
                   _GetDataBarGraphA
                   _GetDataBarGraphB
                            _GetTime
                           _LEDbegin
                        _LEDsetValue
                    _LEDwriteDisplay
                  _SYSTEM_Initialize
                       _Setupdisplay
                             _Splash
                            ___ftmul
                            ___fttol
                           ___lwtoft
                        _updateComms
 ---------------------------------------------------------------------------------
 (1) _updateComms                                          0     0      0   15763
                      _DataBarGraphs
                   _handleIndicators
                        _receiveData
                         _respondECU
 ---------------------------------------------------------------------------------
 (2) _respondECU                                           0     0      0    7635
                              _Delay
                             _ToSend
                   _buttonsCollector
                           _sendData
 ---------------------------------------------------------------------------------
 (3) _sendData                                             5     5      0    5704
                                             38 COMRAM     1     1      0
                                              0 BANK0      4     4      0
                   Absolute function *
                               _CRC8
          _FastTransfer_buffer_flush
                           _Send_put *
                        _crcBufS_put
 ---------------------------------------------------------------------------------
 (4) _crcBufS_put                                          7     2      5     742
                                             26 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_flush                            4     0      4    1139
                                             34 COMRAM     4     0      4
                             _memset
 ---------------------------------------------------------------------------------
 (3) _buttonsCollector                                     9     7      2     223
                                             32 COMRAM     9     7      2
                     _GetButtonState
 ---------------------------------------------------------------------------------
 (4) _GetButtonState                                       6     4      2      86
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _ToSend                                               3     1      2    1406
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
            _FastTransfer_buffer_put
                   _buttonsCollector (ARG)
 ---------------------------------------------------------------------------------
 (4) _FastTransfer_buffer_put                              7     2      5    1190
                                             32 COMRAM     7     2      5
     _FastTransfer_buffer_modulo_inc
 ---------------------------------------------------------------------------------
 (5) _FastTransfer_buffer_modulo_inc                       6     2      4     602
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     302
                                             26 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _receiveData                                         18    18      0    5462
                                              0 BANK0      6     6      0
                                              0 BANK1     12    12      0
                   Absolute function *
                               _CRC8
                  _Receive_available *
                        _Receive_get *
                           _Send_put *
 ---------------------------------------------------------------------------------
 (4) _Send_put                                             1     1      0    2614
                                             37 COMRAM     1     1      0
                      _UART_buff_get
                      _UART_buff_put
 ---------------------------------------------------------------------------------
 (5) _UART_buff_put                                        5     2      3    1418
                                             32 COMRAM     5     2      3
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (3) _Receive_get                                          0     0      0    1165
                      _UART_buff_get
 ---------------------------------------------------------------------------------
 (5) _UART_buff_get                                        5     3      2    1165
                                             32 COMRAM     5     3      2
               _UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (6) _UART_buff_modulo_inc                                 6     2      4     746
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Receive_available                                    2     0      2     150
                                             28 COMRAM     2     0      2
                     _UART_buff_size
 ---------------------------------------------------------------------------------
 (4) _UART_buff_size                                       2     0      2     150
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _CRC8                                                 7     4      3    1014
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _handleIndicators                                     7     5      2    2494
                                             36 COMRAM     5     3      2
                                              0 BANK0      2     2      0
                          _SetLEDOut
 ---------------------------------------------------------------------------------
 (3) _SetLEDOut                                            6     2      4    2191
                                             30 COMRAM     6     2      4
                            _Off_Led
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               4     2      2     493
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Off_Led                                              4     2      2     955
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DataBarGraphs                                        4     0      4     172
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    2529
                                             34 COMRAM     3     0      3
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     525
                                              0 BANK1     15    11      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3254
                                             37 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2344
                                             26 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Splash                                               0     0      0   10386
                         _oledGotoYX
                          _oledPrint
 ---------------------------------------------------------------------------------
 (2) _oledPrint                                            2     0      2    5370
                                              8 BANK0      2     0      2
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (1) _Setupdisplay                                         0     0      0   14117
                          _OLED_init
                          _oledClear
 ---------------------------------------------------------------------------------
 (2) _oledClear                                            4     4      0   10134
                                              8 BANK0      4     4      0
                         _oledGotoYX
                        _oledPutChar
 ---------------------------------------------------------------------------------
 (3) _oledPutChar                                         17    17      0    4920
                                             38 COMRAM     4     4      0
                                              0 BANK1     13    13      0
                   _I2C1_MasterWrite
                            _memmove
 ---------------------------------------------------------------------------------
 (4) _memmove                                             12     6      6     752
                                             26 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _oledGotoYX                                           3     2      1    5016
                                             38 COMRAM     3     2      1
                       _OLED_command
 ---------------------------------------------------------------------------------
 (2) _OLED_init                                            0     0      0    3983
                       _OLED_command
 ---------------------------------------------------------------------------------
 (3) _OLED_command                                         2     2      0    3983
                                             36 COMRAM     2     2      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2872
                     _ADC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                              _begin
 ---------------------------------------------------------------------------------
 (2) _begin                                               13     0     13    1771
                                              0 BANK1     13     0     13
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      86
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      86
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0    1015
                     _UART_buff_init
 ---------------------------------------------------------------------------------
 (3) _UART_buff_init                                       2     0      2    1015
                                             34 COMRAM     2     0      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     830
                                             26 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDwriteDisplay                                     24    24      0    4989
                                              0 BANK1     24    24      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _LEDsetValue                                          7     3      4    3155
                                             16 BANK1      7     3      4
                   _GetDataBarGraphA (ARG)
                   _GetDataBarGraphB (ARG)
                          _LEDsetBar
                            ___ftmul (ARG)
                            ___fttol (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LEDsetBar                                           24    20      4    2556
                                             34 COMRAM     8     4      4
                                              0 BANK1     16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     907
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LEDbegin                                             7     7      0   12731
                                              5 BANK1      7     7      0
                   _I2C1_MasterWrite
                  _LEDBsetBrightness
                       _LEDblinkRate
 ---------------------------------------------------------------------------------
 (2) _LEDblinkRate                                         8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _LEDBsetBrightness                                    8     5      3    4303
                                             36 COMRAM     3     0      3
                                              0 BANK1      5     5      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     8     0      8    3761
                                              0 BANK0      8     0      8
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                            10     2      8     494
                                             26 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 7     1      6     648
                                             26 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _GetTime                                              2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphB                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _GetDataBarGraphA                                     2     0      2       0
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    1748
                                             12 COMRAM    14    14      0
                            _ADC_ISR
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0     178
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR2_CallBack                                        4     4      0     178
                                              0 COMRAM     4     4      0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             2     2      0     330
                                              4 COMRAM     2     2      0
                    _ReadButtonState
 ---------------------------------------------------------------------------------
 (9) _ReadButtonState                                      4     2      2     262
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0     528
                    i2_UART_buff_get
                   i2_UART_buff_size
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_size                                     2     0      2      48
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_get                                      5     3      2     480
                                              6 COMRAM     5     3      2
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  1     1      0     681
                                             11 COMRAM     1     1      0
                    i2_UART_buff_put
 ---------------------------------------------------------------------------------
 (9) i2_UART_buff_put                                      5     2      3     658
                                              6 COMRAM     5     2      3
             i2_UART_buff_modulo_inc
 ---------------------------------------------------------------------------------
 (10) i2_UART_buff_modulo_inc                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearTime
   _GetDataBarGraphA
   _GetDataBarGraphB
   _GetTime
   _LEDbegin
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
     _LEDBsetBrightness
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _LEDblinkRate
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _LEDsetValue
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     _LEDsetBar (ARG)
       ___awdiv
     ___ftmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___fttol (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftmul (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _GetDataBarGraphA (ARG)
           _GetDataBarGraphB (ARG)
           ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   _LEDwriteDisplay
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _UART_buff_init
         _memset
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer
     _begin
       ___awdiv
   _Setupdisplay
     _OLED_init
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledClear
       _oledGotoYX
         _OLED_command
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   _Splash
     _oledGotoYX
       _OLED_command
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
     _oledPrint
       _oledPutChar
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
         _memmove
   ___ftmul
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   ___fttol
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftmul (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _GetDataBarGraphA (ARG)
         _GetDataBarGraphB (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       _GetDataBarGraphA (ARG)
       _GetDataBarGraphB (ARG)
       ___ftpack (ARG)
   ___lwtoft
     _GetDataBarGraphA (ARG)
     _GetDataBarGraphB (ARG)
     ___ftpack (ARG)
   _updateComms
     _DataBarGraphs
     _handleIndicators
       _SetLEDOut
         _Off_Led
         _setLED
     _receiveData
       Absolute function(Fake) *
       _CRC8 *
       _Receive_available *
         _UART_buff_size
       _Receive_get *
         _UART_buff_get
           _UART_buff_modulo_inc
       _Send_put *
         _UART_buff_get
           _UART_buff_modulo_inc
         _UART_buff_put
           _UART_buff_modulo_inc
     _respondECU
       _Delay
       _ToSend
         _FastTransfer_buffer_put
           _FastTransfer_buffer_modulo_inc
         _buttonsCollector (ARG)
           _GetButtonState
       _buttonsCollector
         _GetButtonState
       _sendData
         Absolute function(Fake) *
         _CRC8 *
         _FastTransfer_buffer_flush *
           _memset
         _Send_put *
           _UART_buff_get
             _UART_buff_modulo_inc
           _UART_buff_put
             _UART_buff_modulo_inc
         _crcBufS_put *

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART1_Receive_ISR
     i2_UART_buff_put
       i2_UART_buff_modulo_inc
   _EUSART1_Transmit_ISR
     i2_UART_buff_get
       i2_UART_buff_modulo_inc
     i2_UART_buff_size
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     _ReadButtonState
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      CE      15       80.5%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      CE      13       80.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      CE       8       80.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     18      51       6       31.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      44       1       72.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     467       9        0.0%
DATA                 0      0     467      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Oct 29 02:19:45 2016

       __end_of_FastTransfer_buffer_flush 2B60                    i2_UART_buff_modulo_inc 2FE0  
        __end_of_TMR2_SetInterruptHandler 31C4                                         _i 00CF  
                                       _k 00D3                              _rx_array_inx 003D  
                            ___awdiv@sign 0020                  LEDBsetBrightness@timeOut 013B  
                              Off_Led@led 001B                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                                       l622 235A  
                                     l617 22E8                                       l940 29BC  
                                     l926 2764                                       l696 0794  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                           __end_of_ADC_ISR 31FA  
    FastTransfer_buffer_flush@clearBuffer 0025                           _TMR2_Initialize 307E  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8             i2UART_buff_modulo_inc@modulus 0003  
                            __CFG_LVP$OFF 000000                          __end_of_I2C1_ISR 0E14  
                                    l1009 2CF2                                      l1163 25C4  
                                    l1260 2C14                                      l1328 2EEA  
                                    l4120 2FAC                                      l1563 21F4  
                                    l6110 214C                                      l6104 2120  
                                    l6200 1F70                                      l6120 2FD6  
                                    l4256 12AC                                      l6114 215C  
                                    l6108 2140                                      l6132 2F6A  
                                    l6204 1F88                                      l6140 1930  
                                    l7110 23A6                                      l6214 1FB8  
                                    l6222 2CC6                                      l6128 2C5E  
                                    l6136 2F7A                                      l6304 2258  
                                    l6208 1FA0                                      l6320 0E16  
                                    l6160 25C0                                      l7130 23DE  
                                    l6170 201E                                      l6402 0F92  
                                    l6146 199C                                      l4490 297E  
                                    l7108 2378                                      l7204 15B8  
                                    l6308 228A                                      l6172 2034  
                                    l6180 2076                                      l6228 2CDC  
                                    l6236 2CF8                                      l7206 15C0  
                                    l7302 14E0                                      l6174 204A  
                                    l6166 1FF2                                      l6430 101E  
                                    l6350 0EA0                                      l6342 0E7E  
                                    l6238 2CFE                                      l7128 23D6  
                                    l6512 1D70                                      l7320 1806  
                                    l6192 1F40                                      l6176 2060  
                                    l6168 2008                                      l6424 0FFA  
                                    l6416 0FD8                                      l6408 0FB6  
                                    l6336 0E5A                                      l6328 0E38  
                    receiveData@crcHolder 013F                                      l6514 1D76  
                                    l7306 14FE                                      l4498 2ED6  
                                    l7410 1C78                                      l7172 2308  
                                    l7164 22D8                                      l7244 1620  
                                    l6276 280E                                      l6524 1DE4  
                                    l6196 1F58                                      l6188 1F28  
                                    l6380 0F2A                                      l6372 0F08  
                                    l6364 0EE6                                      l6630 0754  
                                    l7246 164E                                      l6278 283E  
                                    l6526 1E14                                      l7350 18D8  
                                    l7342 18AC                                      l6446 1062  
                                    l6438 1040                                      l6358 0EC2  
                                    l6454 1086                                      l6470 16F0  
                                    l6560 2792                                      l6640 0896  
                                    l7176 233E                                      l7168 22F2  
                                    l7264 167E                                      l7184 155A  
                                    l6296 2866                                      l6544 1E44  
                                    l7272 1420                                      l7352 18E2  
                                    l6800 04A2                                      l6480 1766  
                                    l6472 170A                                      l6714 2492  
                                    l6570 27B4                                      l6554 2782  
                                    l7178 2352                                      l7186 1588  
                                    l7338 1898                                      l6394 0F70  
                                    l6386 0F4E                                      l6810 0524  
                                    l6802 04BC                                      l6722 0104  
                                    l6730 0136                                      l6474 1726  
                                    l6466 16BA                                      l7418 1D56  
                                    l6644 0954                                      l6628 073E  
                                    l7292 14A2                                      l7356 18FE  
                                    l7348 18C8                                      l6812 0572  
                                    l6804 04D6                                      l6484 179E  
                                    l6476 1732                                      l6468 16D4  
                                    l6662 24CE                                      l6566 27A8  
                                    l6582 27DA                                      l6902 2BE2  
                                    l7278 1454                                      l6806 04F0  
                                    l6814 058E                                      l6742 01DA  
                                    l6726 0132                                      l6478 1760  
                                    l6664 24FC                                      l6656 24B4  
                                    l6568 27B0                                      l6648 0A30  
                                    l6920 2C6E                                      l7296 14C0  
                                    l6840 0632                                      l6808 050A  
                                    l6824 059A                                      l6744 01F2  
                                    l6682 252C                                      l6586 27E8  
                                    l6578 27D0                                      l6914 2C0C  
                                    l6930 2176                                      l6850 06B4  
                                    l6842 064C                                      l6762 026C  
                                    l6746 01F8                                      l6754 0232  
                                    l6924 2C98                                      l6852 0702  
                                    l6844 0666                                      l6780 03CE  
                                    l6694 2434                                      l6942 21C2  
                                    l6934 2184                                      l6846 0680  
                                    l6838 0618                                      l6854 071E  
                                    l6782 03D4                                      l6774 0330  
                                    l6766 0294                                      l6758 023A  
                                    l6862 072A                                      l6696 2462  
                                    l6688 2418                                      l6944 21E0  
                                    l6936 218E                                      l6848 069A  
                                    l6784 03E8                                      l6946 21EA  
                                    l6938 21AC                                      l6886 2722  
                                    l6798 0488                                      l6896 2BC8  
                                    STR_1 7FE3                                      STR_2 7FFC  
                                    STR_3 7FF6                                      STR_4 7FEE  
                                    _CRC8 2CC0                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    u3351 12AA                                      u3670 29BC  
                                    u3664 299E                                      u3665 2998  
                                    u7114 08C4                                      u7115 08BC  
                                    u7124 08E8                                      u7060 078C  
                                    u7125 08E0                                      u7144 0980  
                                    u7145 0978                                      u7250 2410  
                                    u7154 09B4                                      u6450 2554  
                                    u7155 09AC                                      i2l60 0B70  
                                    u7084 07BA                                      u7085 07B2  
                                    u7190 24AC                                      u7174 0A5E  
                                    u7094 0832                                      i2l71 0C2C  
                                    i2l63 0BEE                                      u7175 0A56  
                                    u7095 082A                                      u7511 02D4  
                                    i2l72 0C3C                                      u7184 0AD0  
                                    u7408 0176                                      u7328 00DE  
                                    i2l65 0BF6                                      u7185 0AC8  
                                    u8401 17E2                                      u7409 018A  
                                    u7329 00F2                                      i2l90 0D5A  
                                    i2l82 0CC0                                      i2l66 0BFE  
                                    u7418 0190                                      u6490 1F10  
                                    u7419 01A4                                      i2l76 0CAC  
                                    u8420 182C                                      u7428 01AA  
                                    u7348 010E                                      u8341 13FE  
                                    u7429 01BE                                      u7349 0122  
                                    i2l94 0DB0                                      i2l86 0D16  
                                    u8190 22CE                                      u7608 04DA  
                                    u7448 01DE                                      u7368 013A  
                                    u6808 16A4                                      i2l89 0D48  
                                    u8361 1432                                      u8425 1822  
                                    u7369 014E                                      u7618 04F4  
                                    u6818 16BE                                      u7708 066A  
                                    u7628 050E                                      u7388 0158  
                                    u6828 16D8                                      u7389 016C  
                                    u7830 2C8E                                      u7750 26F8  
                                    u7718 0684                                      u7638 0528  
                                    u7478 023E                                      u6838 16F4  
                                    u8630 1C90                                      u7479 0252  
                                    u7840 2CB8                                      u7728 069E  
                                    u7648 0576                                      u7568 0472  
                                    u7488 0270                                      u6848 170E  
                                    u8640 1D54                                      u7489 0284  
                                    u7738 06B8                                      u7578 048C  
                                    u6858 1736                                      u7780 2764  
                                    u7748 0706                                      u7668 0602  
                                    u7588 04A6                                      u6885 2ACC  
                                    u7837 2C84                                      u7774 2740  
                                    u7678 061C                                      u7598 04C0  
                                    u6878 1786                                      u6895 2AE8  
                                    u7847 2CAE                                      u7775 273A  
                                    u7688 0636                                      u7698 0650  
                                    u8937 2EDC                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _Buff 00F0  
                __end_of_GetDataBarGraphA 31D8                  __end_of_GetDataBarGraphB 31CE  
                           oledPutChar@ch 0144                                      _main 1C5A  
                            ___ftpack@arg 001B                              ___ftpack@exp 001E  
                         _TMR0_StartTimer 31F2                                      _time 003F  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                  ??_I2C1_MasterTRBInsert 0021                                      btemp 0045  
                           __CFG_BORV$190 000000                                      pclat 000FFA  
                         OLED_command@com 0025                                      prodh 000FF4  
                                    prodl 000FF3           __end_of_FastTransfer_buffer_put 13EC  
                                    start 00D0                             __CFG_IESO$OFF 000000  
                         __end_of_GetTime 31E0                              ___ftmul@cntr 00FC  
                            ___param_bank 000010                              ___ftmul@sign 00FD  
                         __end_of_Off_Led 1FF0            I2C1_MasterWriteTRBBuild@length 001F  
          i2UART_buff_modulo_inc@my_value 0005                          _handleIndicators 26E6  
                            ___fttol@exp1 0147                        __size_of_LEDsetBar 0406  
                            ___fttol@lval 0143                                     ?_CRC8 001B  
                 __end_of_TMR0_Initialize 30BE                                _i2c1_state 0038  
                      __size_of_OLED_init 008C            __size_of_OSCILLATOR_Initialize 000E  
               I2C1_MasterTRBInsert@count 001B             __end_of_OSCILLATOR_Initialize 31B0  
               I2C1_MasterTRBInsert@pflag 001F                          LEDbegin@i2c_addr 0143  
                      crcBufS_put@address 001D                          __end_of_LEDbegin 2400  
                                   ?_main 0001                           __end_of___awdiv 27F2  
                       __end_of_I2C1_Stop 2E1C                           __end_of___ftmul 153E  
                                   _T0CON 000FD5                           ___awdiv@divisor 001D  
                         __end_of___fttol 1910                                     _T2CON 000FBA  
                                   _LATA3 007C4B                                     _LATC1 007C59  
                                   _LATA6 007C4E                                     _LATA7 007C4F  
                                   _LATE0 007C68                                     _LATE1 007C69  
                                   _LATE2 007C6A                            __CFG_DEBUG$OFF 000000  
                                   i2l501 11B4                                     i2l281 0066  
                                   i2l283 0072                                     i2l291 0094  
                                   i2l285 007E                                     i2l277 004E  
                                   i2l470 10FC                                     i2l463 10E4  
                                   i2l287 008A                                     i2l279 005A  
                                   i2l456 124E                                     i2l473 1108  
                                   i2l467 10F0                                     i2l492 1190  
                                   i2l476 1114                                     i2l485 1178  
                                   i2l495 119C                                     i2l479 1120  
                                   i2l489 1184                                     i2l498 11A8  
                         ___awdiv@counter 001F                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                                   _Delay 2ECC              __end_of_I2C1_BusCollisionISR 31FE  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                       ?_buttonsCollector 0021                      _EUSART1_Transmit_ISR 2F00  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                         ??_I2C1_Initialize 001B  
                        __end_of_TMR0_ISR 2ECC                          __end_of_TMR2_ISR 31E8  
                           __CFG_WRTB$OFF 000000                              ?_LEDsetValue 0149  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                                   _begin 2B60                            __CFG_EBTRB$OFF 000000  
                      ??_buttonsCollector 0023                                     _group 002B  
                         __end_of_memmove 22B8                        __CFG_MCLRE$EXTMCLR 000000  
                           ___ftpack@sign 001F                           __end_of_picture 7FE3  
                                   pclath 000FFA                              ?_oledPutChar 0001  
                                   tablat 000FF5                             ??_Receive_get 0026  
                                   plusw2 000FDB                            begin@stuffpeek 0144  
                    __size_of_crcBufS_put 00D8                                     status 000FD8  
                          __CFG_HFOFST$ON 000000                           _TMR2_StartTimer 31EE  
                            ?_receiveData 0001                            SetLEDOut@state 0021  
                       ??_ReadButtonState 0003                            __CFG_PBADEN$ON 000000  
         I2C1_MasterWriteTRBBuild@address 0021                              __end_of_CRC8 2D0A  
                         __initialization 286E                     I2C1_MasterWrite@pdata 00F2  
                   I2C1_MasterWrite@pflag 00F8                __end_of_EUSART1_Initialize 2E94  
                            __end_of_main 1D5C                    __size_of_DataBarGraphs 0012  
                              ToSend@what 00F2                                    ??_CRC8 001E  
                           ?_LEDblinkRate 0025                   __end_of_TMR2_Initialize 30A0  
                               ??_ADC_ISR 0001               ?_INTERRUPT_InterruptManager 0001  
                        __end_of_OledFont 7ED3                        __size_of_ClearTime 0006  
                             _i2c1_object 00B8                  _TMR2_SetInterruptHandler 31BA  
                                  ??_main 002B                             ___fttol@sign1 0142  
                           __activetblptr 000002                          __end_of_Send_put 2F60  
               __size_ofi2_UART_buff_size 0016                                    ?_Delay 001B  
                   ?_EUSART1_Transmit_ISR 0001             FastTransfer_buffer_put@towhat 0024  
                                  ?_begin 0139                   __end_of_TMR0_StartTimer 31F6  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 001B  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                          __end_of___ftpack 2214  
                       __end_of_LEDsetBar 0B34                           i2_UART_buff_get 25C8  
                                  _RC1STA 000FAB                                    i2l1163 2656  
                         i2_UART_buff_put 1A2A                                    i2l1194 30E4  
                          __CFG_WDTEN$OFF 000000                                    Delay@x 001E  
                                  i2l5150 1A4A                                    i2l7000 0C26  
             UART_buff_modulo_inc@modulus 001D                                    i2l5170 2652  
                                  i2l5156 1AB6                                    i2l5316 2F2A  
                                  i2l5324 2EA4                                    i2l7014 0C6A  
                                  i2l5334 2EC6                                    i2l5328 2EB4  
                                  i2l4634 3000                                    i2l7050 0D1E  
                                  i2l7042 0CD2                                    i2l7034 0CBA  
                                  i2l7062 0D62                                    i2l4750 1B7A  
                                  i2l7080 0DBA                                    i2l4760 1BFC  
                                  i2l4752 1B94                                    i2l6602 3054  
                                  i2l7082 0DC2                                    i2l7066 0D6A  
                                  i2l4754 1BAE                                    i2l4746 1B46  
                                  i2l4756 1BC8                                    i2l4748 1B60  
                                  i2l4764 1C16                                    i2l4780 1162  
                                  i2l4772 10C8                                    i2l7078 0DB6  
                                  i2l4758 1BE2                                    i2l4790 1212  
                                  i2l7088 0DCE                                    i2l4784 11C0  
                                  i2l4792 1242                                    i2l4794 125E  
                                  i2l4786 11F6                                    i2l4778 112C  
                          _GetButtonState 300A                                    i2l6596 2E16  
                                  i2l6982 0BD0                                    i2l6994 0C0E  
                                  _RCREG1 000FAE                         __end_of_OLED_init 26E6  
                        __end_of___lwtoft 307E                                    _OSCCON 000FD3  
                                  _SPBRG1 000FAF                                 ??_GetTime 001D  
                                  _TX1STA 000FAC                                    _TXREG1 000FAD  
                               ??_Off_Led 001D                        __size_of_SetLEDOut 02AA  
                       ?_I2C1_MasterWrite 00F2                            __CFG_XINST$OFF 000000  
                                  _ToSend 30FA                        ??_I2C1_MasterWrite 0025  
                     __end_of_Receive_get 31A2               ??_FastTransfer_buffer_flush 0027  
                                  _Splash 29C6                            _p_i2c1_current 00D5  
                           _output_buffer 0500                                 ??___awdiv 001F  
                               CRC8@tempI 0020                           oledPutChar@base 0142  
                          __CFG_STVREN$ON 000000                                 ??___ftmul 0026  
                               ??___fttol 013D                            ??_LEDblinkRate 0028  
              ??_I2C1_MasterWriteTRBBuild 0023                          ?_TMR0_Initialize 0001  
                                  _setLED 1FF0                                    _memset 2F60  
                               ?_I2C1_ISR 0001                                    clear_0 2874  
                                  clear_1 2880                                    clear_2 288C  
                                  clear_3 2898                                    clear_4 28A4  
                                  clear_5 28B0                                    clear_6 28BC  
                        ___awdiv@quotient 0021                             ?_OLED_command 0001  
                                  _rx_len 003E                          __end_of_sendData 17CC  
                   ___ftmul@f3_as_product 00F9                              __pdataCOMRAM 0044  
                               ??_memmove 0021                             Send_put@_data 0026  
                            __mediumconst 7BD2                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
        __size_of_FastTransfer_buffer_put 0168              __end_of_UART_buff_modulo_inc 2FE0  
                           _DataBarGraphA 00C3                             _DataBarGraphB 00C5  
                           _DataBarGraphs 3170                   __end_of_TMR2_StartTimer 31F2  
TMR2_SetInterruptHandler@InterruptHandler 001B                    __end_of_GetButtonState 3032  
           I2C1_MasterWriteTRBBuild@pdata 001D                        LEDblinkRate@status 013D  
           __size_of_INTERRUPT_Initialize 0012                           SetLEDOut@lednum 001F  
                       _SYSTEM_Initialize 28E2                         __end_of_ClearTime 31EE  
                              __accesstop 0060                   __end_of__initialization 28D4  
                   __end_of_TMR2_CallBack 1284                        ?_SYSTEM_Initialize 0001  
                               ?_LEDbegin 0001                             ___rparam_used 000001  
                 ?i2_UART_buff_modulo_inc 0001                            _i2c1_trb_count 00D1  
                            ?_updateComms 0001                             __end_of_Delay 2F00  
                              ___ftmul@f1 00F2                                ___ftmul@f2 00F5  
                   _I2C1_FunctionComplete 3032                      _I2C1_BusCollisionISR 31FC  
                              ___fttol@f1 0139                    LEDwriteDisplay@timeOut 014E  
                          __pcstackCOMRAM 0001                    I2C1_MasterWrite@length 00F4  
                     ??_SYSTEM_Initialize 0025                          crcBufS_put@_this 001B  
                           __end_of_begin 2BBE                                 ?_TMR0_ISR 0001  
                               ?_TMR2_ISR 0001    __end_of_FastTransfer_buffer_modulo_inc 2FB6  
 __size_of_FastTransfer_buffer_modulo_inc 002A            _FastTransfer_buffer_modulo_inc 2F8C  
                              ??_I2C1_ISR 0004                            ??_OLED_command 0025  
                        ?_TMR2_Initialize 0001              FastTransfer_buffer_put@_this 0021  
                             ToSend@where 002A                                ___lwtoft@c 0023  
                      UART_buff_get@_this 0021                     __end_of_UART_buff_get 25C8  
                  ??_EUSART1_Transmit_ISR 000C                     __end_of_UART_buff_put 1A2A  
                       __end_of_SetLEDOut 10BE                                   ??_Delay 001D  
                          LEDbegin@status 0144                   __end_ofi2_UART_buff_get 265A  
                 __end_ofi2_UART_buff_put 1B44               __end_of_EUSART1_Receive_ISR 30FA  
               _FastTransfer_buffer_flush 2AFE                                   CRC8@crc 0021  
                          ?_DataBarGraphs 001B                                   CRC8@len 001D  
                                 CRC8@sum 001E                                   ??_begin 0023  
                        ?_TMR0_StartTimer 0001                           ?_GetButtonState 001B  
               __end_of_SYSTEM_Initialize 2956                  __end_of_handleIndicators 276E  
                  receiveData@holder_2468 013C                       _addressErrorCounter 00C7  
                    __size_of_LEDsetValue 00A4                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                              __pbssBANK5 0500                           __CFG_PLLCFG$OFF 000000  
                             _Receive_get 3194                         ?_GetDataBarGraphA 001B  
                       ?_GetDataBarGraphB 001B            __end_ofi2_UART_buff_modulo_inc 300A  
                              __pnvCOMRAM 0042                         begin@givenAddress 013C  
                    __size_of_oledPutChar 00F2                   __size_of_UART_buff_init 001E  
                              ??_LEDbegin 0028                   __size_of_UART_buff_size 0016  
                      __size_of_oledClear 0058                        ??_GetDataBarGraphA 001D  
                      ??_GetDataBarGraphB 001D                                 ?_Send_put 0001  
                   ?_I2C1_BusCollisionISR 0001                        __size_of_oledPrint 0054  
                    __size_of_receiveData 065A                                   ?_ToSend 00F2  
                      __CFG_CCP2MX$PORTC1 000000                                   ?_Splash 0001  
                __size_of_LEDwriteDisplay 014A                                ??_TMR0_ISR 0005  
                              ??_TMR2_ISR 0005                        __CFG_CCP3MX$PORTB5 000000  
     FastTransfer_buffer_modulo_inc@value 001B                           _I2C1_Initialize 2E1C  
                                 _ADC_ISR 31F6                                   ?_setLED 001B  
                                 ?_memset 001B                                _crc_buffer 0128  
                               ?___ftpack 001B                                 TMR0_ISR@x 0005  
                 __size_of_ADC_Initialize 0018                                 ?___lwtoft 0023  
                      UART_buff_put@_this 0021                          i2_UART_buff_size 315A  
             i2UART_buff_modulo_inc@value 0001                                   _OSCCON2 000FD2  
                               _I2C1_Stop 2DDA                         _Receive_available 312E  
            UART_buff_modulo_inc@my_value 001F                         __CFG_PRICLKEN$OFF 000000  
                                 _OSCTUNE 000F9B                                   _SPBRGH1 000FB0  
                                 _SSP1ADD 000FC8                       sendData@whereToSend 00F2  
                         _ReadButtonState 1B44                       _receiveArrayAddress 00D7  
                                 _SSP1BUF 000FC9                          ?_TMR2_StartTimer 0001  
                      ?_Receive_available 001D                                begin@error 013D  
                    __end_of_LEDblinkRate 249C             I2C1_MasterTRBInsert@ptrb_list 001D  
                                 _GetTime 31D8                                   _Off_Led 1F26  
                     ??_Receive_available 001F                                 ?_sendData 0001  
                       _alignErrorCounter 00C9                           __CFG_PWRTEN$OFF 000000  
               __size_of_buttonsCollector 0070                    ?_I2C1_FunctionComplete 0001  
                              ??_Send_put 0026                                   __Hparam 0000  
           __size_of_I2C1_MasterTRBInsert 00B8                                   __Lparam 0000  
              ??_TMR2_SetInterruptHandler 001D                           __size_of_ToSend 001C  
                      _p_i2c1_trb_current 002D                                 _AKNAKsend 0036  
                         __size_of_Splash 006A                                   ___awdiv 276E  
                    _UART_buff_modulo_inc 2FB6                                   ___ftmul 13EC  
                                 ___fttol 17CC                                   _calc_CS 0037  
                                 __pcinit 286E                                ??___ftpack 0020  
                         __size_of_setLED 00BE                           __size_of_memset 002C  
                                 __ramtop 0600                          oledPutChar@bytes 0139  
                        i2UART_buff_get@c 000B                             ?_Setupdisplay 0001  
                                 __ptext0 1C5A                                   __ptext1 2D0A  
                                 __ptext2 2D50                                   __ptext3 1688  
                                 __ptext4 1E4E                                   __ptext5 2AFE  
                                 __ptext6 2956                                   __ptext7 300A  
                                 __ptext8 30FA                                   __ptext9 1284  
                              _oledGotoYX 2A9A                                ??___lwtoft 0026  
                               _T0CONbits 000FD5                          i2UART_buff_put@c 0009  
                   _OSCILLATOR_Initialize 31A2                 __end_of_Receive_available 3144  
                               _T2CONbits 000FBA                           ??_DataBarGraphs 001F  
                                 _memmove 2214                   _FastTransfer_buffer_put 1284  
                       __end_of_oledClear 2C16                        _EUSART1_Initialize 2E58  
                        ?i2_UART_buff_get 0007                  ??_PIN_MANAGER_Initialize 001B  
                                 _picture 7ED3                          ?i2_UART_buff_put 0007  
                              ?_I2C1_Stop 0001                         __end_of_oledPrint 2CC0  
                                 _timeOut 00DD                            TMR2_CallBack@i 0003  
                           ??_crcBufS_put 0020                __size_of_SYSTEM_Initialize 0074  
                    I2C1_ISR@pi2c_buf_ptr 00C1                      end_of_initialization 28D4  
                               Delay@wait 001B                       ?_EUSART1_Initialize 0001  
                 LEDwriteDisplay@i2c_addr 014D                                 _LED_array 0088  
                            oledClear@col 00FC                      __end_of_OLED_command 286E  
                            oledClear@row 00FA                                   memset@c 001D  
                                 memset@n 001F                                   memset@p 0021  
                            LEDsetBar@bar 0023                             __Lmediumconst 7BD2  
                               _LEDsetBar 072E                    ??_I2C1_BusCollisionISR 0001  
                              ??_sendData 0027                   __end_of_I2C1_Initialize 2E58  
                               _OLED_init 265A                     ?_UART_buff_modulo_inc 001B  
                    __size_of_updateComms 0046                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc2 000FDE  
                              _respondECU 2D50                     ReadButtonState@btnnum 0001  
                      OLED_command@status 0026                          begin@stufftosend 013E  
                            LEDsetValue@k 014E                      ??_EUSART1_Initialize 0025  
                     LEDblinkRate@timeOut 013B                            ??_Setupdisplay 002B  
                               _PORTAbits 000F80                                 _PORTBbits 000F81  
                               _PORTDbits 000F83                         ??_LEDwriteDisplay 0025  
                 __end_of_ReadButtonState 1C5A                 __size_of_I2C1_MasterWrite 0056  
                  _dataAdressErrorCounter 00CD                         __size_of_I2C1_ISR 02E0  
                              _rx_address 003C                                 _TRISAbits 000F92  
                               _TRISCbits 000F94                   LEDBsetBrightness@status 013D  
       I2C1_ISR@i2c_10bit_address_restart 0035                       LEDbegin@writeBuffer 013E  
                            begin@maxSize 013B        __size_of_FastTransfer_buffer_flush 0062  
                   i2UART_buff_size@_this 0001                            _UART_buff_init 30BE  
                          _UART_buff_size 3144                                ?_LEDsetBar 0023  
                     __end_of_crcBufS_put 1F26                                ?_OLED_init 0001  
                 I2C1_MasterWrite@address 00F6                                 _ClearTime 31E8  
               LEDBsetBrightness@i2c_addr 0027                               ___ftmul@exp 00F8  
                       __size_of_LEDbegin 00A4                             _moduleAddress 003A  
                    _timer0ReloadVal16bit 0042                            __end_of_ToSend 3116  
            __end_of_INTERRUPT_Initialize 3194      __end_of_TMR2_DefaultInterruptHandler 31FC  
   __size_of_TMR2_DefaultInterruptHandler 0002              _TMR2_DefaultInterruptHandler 31FA  
                          __end_of_Splash 2A30                           _crcErrorCounter 00CB  
                 I2C1_MasterWrite@trBlock 00E6                         crcBufS_put@oldCRC 001E  
                           __pidataCOMRAM 31FE                         __size_of_TMR0_ISR 0038  
                I2C1_Stop@completion_code 0003                         __size_of_TMR2_ISR 0008  
                          _ADC_Initialize 3116                 ??_FastTransfer_buffer_put 0026  
                             ?_oledGotoYX 0027                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_setLED 20AE                            __end_of_memset 2F8C  
                       crcBufS_put@status 001F                   buttonsCollector@sendVal 0026  
                            receiveData@r 0143                __size_of_Receive_available 0016  
                            receiveData@u 0141                          ??_GetButtonState 001D  
                       _LEDBsetBrightness 249C                       start_initialization 286E  
                   __size_of_LEDblinkRate 009C                               ??_I2C1_Stop 0001  
                __size_of_TMR0_Initialize 001E           __size_of_PIN_MANAGER_Initialize 006A  
                      ?_LEDBsetBrightness 0025                                 _SetLEDOut 0E14  
       __size_of_I2C1_MasterWriteTRBBuild 0044                         ?_handleIndicators 0025  
               ?_I2C1_MasterWriteTRBBuild 001B                    __end_of_UART_buff_init 30DC  
                          UART_buff_get@c 0025                    __end_of_UART_buff_size 315A  
                            ?_Receive_get 0001                            UART_buff_put@c 0023  
                      ??_handleIndicators 0027                           LEDbegin@timeOut 0141  
                     ??_LEDBsetBrightness 0028                          _buttonsCollector 2956  
                __end_ofi2_UART_buff_size 3170                                ?_ClearTime 0001  
                        ?_I2C1_Initialize 0001                                  ??_ToSend 002A  
                  ??_UART_buff_modulo_inc 001F                                  CRC8@data 001B  
                                ??_Splash 002B                         __size_of_Send_put 002E  
                             ?_respondECU 0001                LEDwriteDisplay@writeBuffer 0139  
                  __end_of_ADC_Initialize 312E                                LEDsetBar@a 0029  
                              LEDsetBar@c 0027                                  ?_ADC_ISR 0001  
                                ??_setLED 001D                                  ??_memset 0021  
                            _LEDblinkRate 2400                         handleIndicators@i 00F2  
               __size_of_GetDataBarGraphA 000A                 __size_of_GetDataBarGraphB 000A  
           ?_TMR2_DefaultInterruptHandler 0001                 __end_of_LEDBsetBrightness 2536  
            I2C1_MasterWriteTRBBuild@ptrb 001B                          ?_ReadButtonState 0001  
                       __size_of___ftpack 00AE                    __size_of_TMR2_CallBack 01C6  
                             __pbssCOMRAM 002B                         __size_of___lwtoft 0024  
           __size_of_EUSART1_Transmit_ISR 0032                             __pcstackBANK0 00F2  
                           __pcstackBANK1 0139                                oledPrint@s 00FA  
                           ??_LEDsetValue 014D                  __size_of_TMR2_Initialize 0022  
                           _i2c1_tr_queue 00EB                     LEDwriteDisplay@status 0150  
                   __size_of_OLED_command 007C                              _Receive_peek 000000  
                              ?_SetLEDOut 001F                       UART_buff_init@_this 0023  
                             _crcBufS_put 1E4E                             ??_oledPutChar 0027  
                        LEDsetValue@color 014B                           ?_UART_buff_init 0023  
                         ?_UART_buff_size 001B                          LEDsetValue@value 0149  
                 ??_I2C1_FunctionComplete 0001              __size_of_EUSART1_Receive_ISR 001E  
                    __end_of_Setupdisplay 31BA                                  ?_GetTime 001B  
                           ??_receiveData 00F2                                sendData@CS 00F3  
                                ?_Off_Led 001B                               ??_LEDsetBar 0139  
                     __size_of_oledGotoYX 0064                                 __pnvBANK0 00FE  
                __size_of_TMR0_StartTimer 0004                               ??_OLED_init 0027  
                  __size_of_UART_buff_get 0092                    __size_of_UART_buff_put 011A  
                  _PIN_MANAGER_Initialize 2A30                         __size_of_sendData 0144  
                               __pintcode 0008                             __pmediumconst 7BD2  
                                ?___awdiv 001B                                  ?___ftmul 00F2  
                                ?___fttol 0139                           ?_ADC_Initialize 0001  
                                _I2C1_ISR 0B34              ??_INTERRUPT_InterruptManager 000D  
            LEDBsetBrightness@writeBuffer 0139                      i2UART_buff_get@_this 0007  
                            _OLED_command 27F2                          _I2C1_MasterWrite 2C16  
                                _BAUD1CON 000FB8              __end_of_I2C1_MasterTRBInsert 2166  
                                ?_memmove 001B                         buttonsCollector@i 0028  
                          __size_of_Delay 0034                                 _butnarray 00B0  
                          __size_of_begin 005E                                 _oledClear 2BBE  
                     __size_of_respondECU 0046                      _INTERRUPT_Initialize 3182  
                    GetButtonState@btnnum 001B                                 _oledPrint 2C6C  
                            _receiveArray 0100                               _LEDNUM_ENAB 0098  
                  I2C1_MasterRead@trBlock 00E1                         ??_TMR0_Initialize 001B  
                     __end_of_LEDsetValue 235C                                  _LATCbits 000F8B  
                                _LEDState 00A4                       UART_buff_size@_this 001B  
                           _TMR2_CallBack 10BE                                  _IPR1bits 000F9F  
                                _LEDbegin 235C                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                           LEDblinkRate@b 0025                  __size_of_TMR2_StartTimer 0004  
                             ??_ClearTime 001B                       __end_of_oledPutChar 1E4E  
                         _LEDwriteDisplay 153E       __size_of_INTERRUPT_InterruptManager 00C8  
                                i2u400_40 1BDC                                  i2u400_46 1BDE  
                                i2u401_40 1BF6                                  i2u401_46 1BF8  
                                i2u402_40 1C10                                  i2u410_40 1110  
                                i2u402_46 1C12                                  i2u420_40 1198  
                                i2u412_40 111C                                  i2u404_40 10EC  
                                i2u422_40 11A4                                  i2u414_40 1128  
                                i2u406_40 10F8                                  i2u430_48 126E  
                                i2u424_40 11B0                                  i2u416_40 1180  
                                i2u408_40 1104                                  i2u521_40 25E6  
                                _PIR1bits 000F9E                                  i2u426_40 11BC  
                                i2u418_40 118C                                  _PIR2bits 000FA1  
                                i2u541_40 2F1A                                  i2u810_40 0D8E  
                                i2u810_47 0D82                                  i2u395_40 1B5A  
                                i2u395_46 1B5C                                  i2u396_40 1B74  
                                i2u396_46 1B76                                  i2u397_40 1B8E  
                                i2u397_46 1B90                                  i2u398_40 1BA8  
                                i2u398_46 1BAA                                  i2u399_40 1BC2  
                                i2u399_46 1BC4                                  i2u808_40 0D3E  
                                i2u808_47 0D34                       begin@stuffavailable 0142  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                     __end_of_receiveData 072E                                  _SSP1CON1 000FC6  
                                _SSP1CON3 000FCB                                  _TMR0_ISR 2E94  
                                _TMR2_ISR 31E0                                  _SSP1STAT 000FC7  
          FastTransfer_buffer_flush@_this 0023                              _input_buffer 0400  
                               _rx_buffer 0300                          __size_of_ADC_ISR 0004  
                              _ADCON0bits 000FC2                __size_of_LEDBsetBrightness 009A  
                    i2UART_buff_put@_this 0007                             _UART_buff_get 2536  
                           _UART_buff_put 1910            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 001B  
                   __end_of_DataBarGraphs 3182                  ??i2_UART_buff_modulo_inc 0005  
                             ??_SetLEDOut 0023                                ?_oledClear 0001  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 0001  
                              ?_oledPrint 00FA                         _sendStructAddress 00D9  
                __size_ofi2_UART_buff_get 0092                         ??_TMR2_Initialize 001D  
                __size_ofi2_UART_buff_put 011A                                  _OledFont 7BD3  
                          ?_TMR2_CallBack 0001                          __size_of_GetTime 0008  
                           ??_updateComms 002B                      __size_of_Receive_get 000E  
                        __size_of_Off_Led 00CA                                  __Hrparam 0000  
                                _Send_put 2F32             __size_of_I2C1_BusCollisionISR 0002  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                               setLED@led 001B                    I2C1_ISR@i2c_bytes_left 00BF  
                       __CFG_P2BMX$PORTD2 000000                   LEDblinkRate@writeBuffer 0139  
                 ??_OSCILLATOR_Initialize 001B                                 memmove@d1 001B  
                               memmove@s1 001D                         ??_TMR0_StartTimer 001B  
                          LEDsetBar@color 0025                          __size_of___awdiv 0084  
                        __size_of___ftmul 0152                          __size_of___fttol 0144  
             __size_of_EUSART1_Initialize 003C                          _GetDataBarGraphA 31CE  
                        _GetDataBarGraphB 31C4                       begin@stufftoreceive 0140  
                                ___ftpack 2166          __end_of_I2C1_MasterWriteTRBBuild 2DDA  
                            ??_oledGotoYX 0028                                _ANSELAbits 000F38  
                                ___lwtoft 305A                                _ANSELCbits 000F3A  
                          ?_UART_buff_get 0021                            ?_UART_buff_put 0021  
                             CRC8@extract 001F                  __end_of_buttonsCollector 29C6  
                               sendData@i 00F4                          __size_of_memmove 00A4  
                     I2C1_ISR@i2c_address 0040                               _LEDsetValue 22B8  
                                __ptext10 2F8C                                  __ptext11 2ECC  
                                __ptext20 2CC0                                  __ptext12 00D4  
                                __ptext21 26E6                                  __ptext13 2F32  
                   __size_of_Setupdisplay 000A                                  __ptext30 29C6  
                                __ptext22 0E14                                  __ptext14 1910  
                                __ptext31 2C6C                                  __ptext23 1FF0  
                                __ptext15 3194                                  __ptext40 2B60  
                                __ptext32 31B0                                  __ptext24 1F26  
                                __ptext16 2536                                  __ptext41 307E  
                                __ptext33 2BBE                                  __ptext25 3170  
                                __ptext17 2FB6                                  __ptext50 2E58  
                                __ptext42 31EE                                  __ptext34 1D5C  
                                __ptext26 305A                                  __ptext18 312E  
                                __ptext51 30BE                                  __ptext43 31BA  
                                __ptext35 2214                                  __ptext27 17CC  
                                __ptext19 3144                                  __ptext60 249C  
                                __ptext52 2F60                                  __ptext44 30A0  
                                __ptext36 2A9A                                  __ptext28 13EC  
                                __ptext61 2C16                                  __ptext53 3116  
                                __ptext45 31F2                                  __ptext37 265A  
                                __ptext29 2166                                  __ptext70 10BE  
                                __ptext62 2D96                                  __ptext54 153E  
                                __ptext46 2A30                                  __ptext38 27F2  
                                __ptext71 31FA                                  __ptext63 20AE  
                                __ptext55 22B8                                  __ptext47 31A2  
                                __ptext39 28E2                                  __ptext80 25C8  
                                __ptext72 2E94                                  __ptext64 31D8  
                                __ptext56 072E                                  __ptext48 3182  
                                __ptext81 30DC                                  __ptext73 1B44  
                                __ptext65 31C4                                  __ptext57 276E  
                                __ptext49 2E1C                                  __ptext82 1A2A  
                                __ptext74 0B34                                  __ptext66 31CE  
                                __ptext58 235C                                  __ptext83 2FE0  
                                __ptext75 2DDA                                  __ptext67 31E8  
                                __ptext59 2400                                  __ptext84 31F6  
                                __ptext76 3032                                  __ptext85 0000  
                                __ptext77 31FC                                  __ptext69 31E0  
                                __ptext78 2F00                                  __ptext79 315A  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                       oledPutChar@status 0145                             __size_of_CRC8 004A  
                        oledGotoYX@Column 0027                                  begin@ptr 0139  
                 EUSART1_Receive_ISR@data 000C                   __end_of_LEDwriteDisplay 1688  
                             _oledPutChar 1D5C                             _returnAddress 003B  
                           __size_of_main 0102                               _receiveData 00D4  
                          _Transmit_stall 0044                                  _sendData 1688  
                      __end_of_oledGotoYX 2AFE                      _I2C1_MasterTRBInsert 20AE  
                       ?i2_UART_buff_size 0001                                _RC1STAbits 000FAB  
                    LEDblinkRate@i2c_addr 0027                              ??_respondECU 002B  
                      ??i2_UART_buff_size 0003                                  int$flags 0045  
               __size_of_handleIndicators 0088             handleIndicators@oldIndicators 00DF  
                            _serial_write 0033                         ??_TMR2_StartTimer 001B  
                     __end_of_updateComms 2D50        __end_of_INTERRUPT_InterruptManager 00D0  
              _INTERRUPT_InterruptManager 0008                       _EUSART1_Receive_ISR 30DC  
                       receiveData@holder 0139                              _Setupdisplay 31B0  
                      LEDBsetBrightness@b 0025                                _INTCONbits 000FF2  
               UART_buff_modulo_inc@value 001B        handleIndicators@receivedIndicators 0025  
                        ??_UART_buff_init 0025                          ??_UART_buff_size 001D  
                  ??_INTERRUPT_Initialize 001B                                  memset@p1 001B  
                        _serial_available 002F                                  memmove@d 0023  
                                memmove@n 001F                                  memmove@s 0025  
                             ??_oledClear 002B           __size_ofi2_UART_buff_modulo_inc 002A  
                            ?_crcBufS_put 001B                               ??_oledPrint 002B  
                                intlevel2 0000                           ??_TMR2_CallBack 0001  
                      __end_of_respondECU 2D96                      ?_EUSART1_Receive_ISR 0001  
  FastTransfer_buffer_modulo_inc@my_value 001F            FastTransfer_buffer_put@towhere 0023  
                 ?_PIN_MANAGER_Initialize 0001                  __end_of_I2C1_MasterWrite 2C6C  
          __size_of_I2C1_FunctionComplete 0028             __end_of_I2C1_FunctionComplete 305A  
                   ?_I2C1_MasterTRBInsert 001B              __end_of_EUSART1_Transmit_ISR 2F32  
                             _ring_buffer 0200                          ??_ADC_Initialize 001B  
              ?_FastTransfer_buffer_flush 0023                         ??i2_UART_buff_get 0009  
                             _serial_peek 00DB                               _serial_read 0031  
                       ??i2_UART_buff_put 000A                  ?_FastTransfer_buffer_put 0021  
           __size_of_UART_buff_modulo_inc 002A                  __size_of_I2C1_Initialize 003C  
                         ??_UART_buff_get 0023                           ??_UART_buff_put 0024  
   FastTransfer_buffer_modulo_inc@modulus 001D                          DataBarGraphs@BGA 001B  
                        DataBarGraphs@BGB 001D                           _TMR0_Initialize 30A0  
               receiveData@crcHolder_2469 0140                  _I2C1_MasterWriteTRBBuild 2D96  
                       __CFG_T3CMX$PORTC0 000000                            _maxDataAddress 0039  
                __size_of_ReadButtonState 0116                     ??_EUSART1_Receive_ISR 000C  
          __end_of_PIN_MANAGER_Initialize 2A9A          ??_FastTransfer_buffer_modulo_inc 001F  
         ?_FastTransfer_buffer_modulo_inc 001B                             oledGotoYX@Row 0029  
                        ?_LEDwriteDisplay 0001                   __size_of_GetButtonState 0028  
                      __size_of_I2C1_Stop 0042                             _displaybuffer 0060  
                       __CFG_FOSC$INTIO67 000000                     _TMR2_InterruptHandler 00FE  
                             _updateComms 2D0A  
