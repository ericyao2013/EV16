

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Mar 24 01:35:30 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 1.40
    51                           ; Generated 01/12/2016 GMT
    52                           ; 
    53                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F1829 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0199                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  020E                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  0291                     	;# 
   194  0291                     	;# 
   195  0292                     	;# 
   196  0293                     	;# 
   197  0294                     	;# 
   198  0295                     	;# 
   199  0295                     	;# 
   200  0296                     	;# 
   201  0298                     	;# 
   202  0298                     	;# 
   203  0299                     	;# 
   204  029A                     	;# 
   205  029B                     	;# 
   206  029C                     	;# 
   207  029D                     	;# 
   208  029E                     	;# 
   209  0311                     	;# 
   210  0311                     	;# 
   211  0312                     	;# 
   212  0313                     	;# 
   213  0318                     	;# 
   214  0318                     	;# 
   215  0319                     	;# 
   216  031A                     	;# 
   217  038C                     	;# 
   218  038D                     	;# 
   219  038E                     	;# 
   220  0391                     	;# 
   221  0392                     	;# 
   222  0393                     	;# 
   223  0394                     	;# 
   224  0395                     	;# 
   225  0396                     	;# 
   226  039A                     	;# 
   227  039C                     	;# 
   228  039D                     	;# 
   229  039E                     	;# 
   230  039F                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  0FE4                     	;# 
   238  0FE5                     	;# 
   239  0FE6                     	;# 
   240  0FE7                     	;# 
   241  0FE8                     	;# 
   242  0FE9                     	;# 
   243  0FEA                     	;# 
   244  0FEB                     	;# 
   245  0FED                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  0111                     	;# 
   300  0112                     	;# 
   301  0113                     	;# 
   302  0114                     	;# 
   303  0115                     	;# 
   304  0116                     	;# 
   305  0117                     	;# 
   306  0118                     	;# 
   307  0119                     	;# 
   308  011A                     	;# 
   309  011B                     	;# 
   310  011D                     	;# 
   311  011E                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  018E                     	;# 
   315  0191                     	;# 
   316  0191                     	;# 
   317  0192                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0199                     	;# 
   325  019A                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019F                     	;# 
   332  020C                     	;# 
   333  020D                     	;# 
   334  020E                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0219                     	;# 
   351  021A                     	;# 
   352  021B                     	;# 
   353  021C                     	;# 
   354  021D                     	;# 
   355  021E                     	;# 
   356  021F                     	;# 
   357  0291                     	;# 
   358  0291                     	;# 
   359  0292                     	;# 
   360  0293                     	;# 
   361  0294                     	;# 
   362  0295                     	;# 
   363  0295                     	;# 
   364  0296                     	;# 
   365  0298                     	;# 
   366  0298                     	;# 
   367  0299                     	;# 
   368  029A                     	;# 
   369  029B                     	;# 
   370  029C                     	;# 
   371  029D                     	;# 
   372  029E                     	;# 
   373  0311                     	;# 
   374  0311                     	;# 
   375  0312                     	;# 
   376  0313                     	;# 
   377  0318                     	;# 
   378  0318                     	;# 
   379  0319                     	;# 
   380  031A                     	;# 
   381  038C                     	;# 
   382  038D                     	;# 
   383  038E                     	;# 
   384  0391                     	;# 
   385  0392                     	;# 
   386  0393                     	;# 
   387  0394                     	;# 
   388  0395                     	;# 
   389  0396                     	;# 
   390  039A                     	;# 
   391  039C                     	;# 
   392  039D                     	;# 
   393  039E                     	;# 
   394  039F                     	;# 
   395  0415                     	;# 
   396  0416                     	;# 
   397  0417                     	;# 
   398  041C                     	;# 
   399  041D                     	;# 
   400  041E                     	;# 
   401  0FE4                     	;# 
   402  0FE5                     	;# 
   403  0FE6                     	;# 
   404  0FE7                     	;# 
   405  0FE8                     	;# 
   406  0FE9                     	;# 
   407  0FEA                     	;# 
   408  0FEB                     	;# 
   409  0FED                     	;# 
   410  0FEE                     	;# 
   411  0FEF                     	;# 
   412  0000                     	;# 
   413  0001                     	;# 
   414  0002                     	;# 
   415  0003                     	;# 
   416  0004                     	;# 
   417  0005                     	;# 
   418  0006                     	;# 
   419  0007                     	;# 
   420  0008                     	;# 
   421  0009                     	;# 
   422  000A                     	;# 
   423  000B                     	;# 
   424  000C                     	;# 
   425  000D                     	;# 
   426  000E                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0013                     	;# 
   430  0014                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  0111                     	;# 
   464  0112                     	;# 
   465  0113                     	;# 
   466  0114                     	;# 
   467  0115                     	;# 
   468  0116                     	;# 
   469  0117                     	;# 
   470  0118                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011D                     	;# 
   475  011E                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  018E                     	;# 
   479  0191                     	;# 
   480  0191                     	;# 
   481  0192                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0194                     	;# 
   486  0195                     	;# 
   487  0196                     	;# 
   488  0199                     	;# 
   489  019A                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019D                     	;# 
   494  019E                     	;# 
   495  019F                     	;# 
   496  020C                     	;# 
   497  020D                     	;# 
   498  020E                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0219                     	;# 
   515  021A                     	;# 
   516  021B                     	;# 
   517  021C                     	;# 
   518  021D                     	;# 
   519  021E                     	;# 
   520  021F                     	;# 
   521  0291                     	;# 
   522  0291                     	;# 
   523  0292                     	;# 
   524  0293                     	;# 
   525  0294                     	;# 
   526  0295                     	;# 
   527  0295                     	;# 
   528  0296                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  029B                     	;# 
   534  029C                     	;# 
   535  029D                     	;# 
   536  029E                     	;# 
   537  0311                     	;# 
   538  0311                     	;# 
   539  0312                     	;# 
   540  0313                     	;# 
   541  0318                     	;# 
   542  0318                     	;# 
   543  0319                     	;# 
   544  031A                     	;# 
   545  038C                     	;# 
   546  038D                     	;# 
   547  038E                     	;# 
   548  0391                     	;# 
   549  0392                     	;# 
   550  0393                     	;# 
   551  0394                     	;# 
   552  0395                     	;# 
   553  0396                     	;# 
   554  039A                     	;# 
   555  039C                     	;# 
   556  039D                     	;# 
   557  039E                     	;# 
   558  039F                     	;# 
   559  0415                     	;# 
   560  0416                     	;# 
   561  0417                     	;# 
   562  041C                     	;# 
   563  041D                     	;# 
   564  041E                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000D                     	;# 
   590  000E                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0014                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  001B                     	;# 
   603  001C                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  0091                     	;# 
   610  0092                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0097                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  0111                     	;# 
   628  0112                     	;# 
   629  0113                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0118                     	;# 
   635  0119                     	;# 
   636  011A                     	;# 
   637  011B                     	;# 
   638  011D                     	;# 
   639  011E                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  018E                     	;# 
   643  0191                     	;# 
   644  0191                     	;# 
   645  0192                     	;# 
   646  0193                     	;# 
   647  0193                     	;# 
   648  0193                     	;# 
   649  0194                     	;# 
   650  0195                     	;# 
   651  0196                     	;# 
   652  0199                     	;# 
   653  019A                     	;# 
   654  019B                     	;# 
   655  019B                     	;# 
   656  019C                     	;# 
   657  019D                     	;# 
   658  019E                     	;# 
   659  019F                     	;# 
   660  020C                     	;# 
   661  020D                     	;# 
   662  020E                     	;# 
   663  0211                     	;# 
   664  0211                     	;# 
   665  0212                     	;# 
   666  0212                     	;# 
   667  0213                     	;# 
   668  0213                     	;# 
   669  0214                     	;# 
   670  0214                     	;# 
   671  0215                     	;# 
   672  0215                     	;# 
   673  0215                     	;# 
   674  0216                     	;# 
   675  0216                     	;# 
   676  0217                     	;# 
   677  0217                     	;# 
   678  0219                     	;# 
   679  021A                     	;# 
   680  021B                     	;# 
   681  021C                     	;# 
   682  021D                     	;# 
   683  021E                     	;# 
   684  021F                     	;# 
   685  0291                     	;# 
   686  0291                     	;# 
   687  0292                     	;# 
   688  0293                     	;# 
   689  0294                     	;# 
   690  0295                     	;# 
   691  0295                     	;# 
   692  0296                     	;# 
   693  0298                     	;# 
   694  0298                     	;# 
   695  0299                     	;# 
   696  029A                     	;# 
   697  029B                     	;# 
   698  029C                     	;# 
   699  029D                     	;# 
   700  029E                     	;# 
   701  0311                     	;# 
   702  0311                     	;# 
   703  0312                     	;# 
   704  0313                     	;# 
   705  0318                     	;# 
   706  0318                     	;# 
   707  0319                     	;# 
   708  031A                     	;# 
   709  038C                     	;# 
   710  038D                     	;# 
   711  038E                     	;# 
   712  0391                     	;# 
   713  0392                     	;# 
   714  0393                     	;# 
   715  0394                     	;# 
   716  0395                     	;# 
   717  0396                     	;# 
   718  039A                     	;# 
   719  039C                     	;# 
   720  039D                     	;# 
   721  039E                     	;# 
   722  039F                     	;# 
   723  0415                     	;# 
   724  0416                     	;# 
   725  0417                     	;# 
   726  041C                     	;# 
   727  041D                     	;# 
   728  041E                     	;# 
   729  0FE4                     	;# 
   730  0FE5                     	;# 
   731  0FE6                     	;# 
   732  0FE7                     	;# 
   733  0FE8                     	;# 
   734  0FE9                     	;# 
   735  0FEA                     	;# 
   736  0FEB                     	;# 
   737  0FED                     	;# 
   738  0FEE                     	;# 
   739  0FEF                     	;# 
   740  0000                     	;# 
   741  0001                     	;# 
   742  0002                     	;# 
   743  0003                     	;# 
   744  0004                     	;# 
   745  0005                     	;# 
   746  0006                     	;# 
   747  0007                     	;# 
   748  0008                     	;# 
   749  0009                     	;# 
   750  000A                     	;# 
   751  000B                     	;# 
   752  000C                     	;# 
   753  000D                     	;# 
   754  000E                     	;# 
   755  0011                     	;# 
   756  0012                     	;# 
   757  0013                     	;# 
   758  0014                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  001A                     	;# 
   766  001B                     	;# 
   767  001C                     	;# 
   768  001E                     	;# 
   769  001F                     	;# 
   770  008C                     	;# 
   771  008D                     	;# 
   772  008E                     	;# 
   773  0091                     	;# 
   774  0092                     	;# 
   775  0093                     	;# 
   776  0094                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0098                     	;# 
   781  0099                     	;# 
   782  009A                     	;# 
   783  009B                     	;# 
   784  009B                     	;# 
   785  009C                     	;# 
   786  009D                     	;# 
   787  009E                     	;# 
   788  010C                     	;# 
   789  010D                     	;# 
   790  010E                     	;# 
   791  0111                     	;# 
   792  0112                     	;# 
   793  0113                     	;# 
   794  0114                     	;# 
   795  0115                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  0118                     	;# 
   799  0119                     	;# 
   800  011A                     	;# 
   801  011B                     	;# 
   802  011D                     	;# 
   803  011E                     	;# 
   804  018C                     	;# 
   805  018D                     	;# 
   806  018E                     	;# 
   807  0191                     	;# 
   808  0191                     	;# 
   809  0192                     	;# 
   810  0193                     	;# 
   811  0193                     	;# 
   812  0193                     	;# 
   813  0194                     	;# 
   814  0195                     	;# 
   815  0196                     	;# 
   816  0199                     	;# 
   817  019A                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019C                     	;# 
   821  019D                     	;# 
   822  019E                     	;# 
   823  019F                     	;# 
   824  020C                     	;# 
   825  020D                     	;# 
   826  020E                     	;# 
   827  0211                     	;# 
   828  0211                     	;# 
   829  0212                     	;# 
   830  0212                     	;# 
   831  0213                     	;# 
   832  0213                     	;# 
   833  0214                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0216                     	;# 
   839  0216                     	;# 
   840  0217                     	;# 
   841  0217                     	;# 
   842  0219                     	;# 
   843  021A                     	;# 
   844  021B                     	;# 
   845  021C                     	;# 
   846  021D                     	;# 
   847  021E                     	;# 
   848  021F                     	;# 
   849  0291                     	;# 
   850  0291                     	;# 
   851  0292                     	;# 
   852  0293                     	;# 
   853  0294                     	;# 
   854  0295                     	;# 
   855  0295                     	;# 
   856  0296                     	;# 
   857  0298                     	;# 
   858  0298                     	;# 
   859  0299                     	;# 
   860  029A                     	;# 
   861  029B                     	;# 
   862  029C                     	;# 
   863  029D                     	;# 
   864  029E                     	;# 
   865  0311                     	;# 
   866  0311                     	;# 
   867  0312                     	;# 
   868  0313                     	;# 
   869  0318                     	;# 
   870  0318                     	;# 
   871  0319                     	;# 
   872  031A                     	;# 
   873  038C                     	;# 
   874  038D                     	;# 
   875  038E                     	;# 
   876  0391                     	;# 
   877  0392                     	;# 
   878  0393                     	;# 
   879  0394                     	;# 
   880  0395                     	;# 
   881  0396                     	;# 
   882  039A                     	;# 
   883  039C                     	;# 
   884  039D                     	;# 
   885  039E                     	;# 
   886  039F                     	;# 
   887  0415                     	;# 
   888  0416                     	;# 
   889  0417                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  0FE4                     	;# 
   894  0FE5                     	;# 
   895  0FE6                     	;# 
   896  0FE7                     	;# 
   897  0FE8                     	;# 
   898  0FE9                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEF                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0008                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  000E                     	;# 
   919  0011                     	;# 
   920  0012                     	;# 
   921  0013                     	;# 
   922  0014                     	;# 
   923  0015                     	;# 
   924  0016                     	;# 
   925  0016                     	;# 
   926  0017                     	;# 
   927  0018                     	;# 
   928  0019                     	;# 
   929  001A                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  001E                     	;# 
   933  001F                     	;# 
   934  008C                     	;# 
   935  008D                     	;# 
   936  008E                     	;# 
   937  0091                     	;# 
   938  0092                     	;# 
   939  0093                     	;# 
   940  0094                     	;# 
   941  0095                     	;# 
   942  0096                     	;# 
   943  0097                     	;# 
   944  0098                     	;# 
   945  0099                     	;# 
   946  009A                     	;# 
   947  009B                     	;# 
   948  009B                     	;# 
   949  009C                     	;# 
   950  009D                     	;# 
   951  009E                     	;# 
   952  010C                     	;# 
   953  010D                     	;# 
   954  010E                     	;# 
   955  0111                     	;# 
   956  0112                     	;# 
   957  0113                     	;# 
   958  0114                     	;# 
   959  0115                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  0118                     	;# 
   963  0119                     	;# 
   964  011A                     	;# 
   965  011B                     	;# 
   966  011D                     	;# 
   967  011E                     	;# 
   968  018C                     	;# 
   969  018D                     	;# 
   970  018E                     	;# 
   971  0191                     	;# 
   972  0191                     	;# 
   973  0192                     	;# 
   974  0193                     	;# 
   975  0193                     	;# 
   976  0193                     	;# 
   977  0194                     	;# 
   978  0195                     	;# 
   979  0196                     	;# 
   980  0199                     	;# 
   981  019A                     	;# 
   982  019B                     	;# 
   983  019B                     	;# 
   984  019C                     	;# 
   985  019D                     	;# 
   986  019E                     	;# 
   987  019F                     	;# 
   988  020C                     	;# 
   989  020D                     	;# 
   990  020E                     	;# 
   991  0211                     	;# 
   992  0211                     	;# 
   993  0212                     	;# 
   994  0212                     	;# 
   995  0213                     	;# 
   996  0213                     	;# 
   997  0214                     	;# 
   998  0214                     	;# 
   999  0215                     	;# 
  1000  0215                     	;# 
  1001  0215                     	;# 
  1002  0216                     	;# 
  1003  0216                     	;# 
  1004  0217                     	;# 
  1005  0217                     	;# 
  1006  0219                     	;# 
  1007  021A                     	;# 
  1008  021B                     	;# 
  1009  021C                     	;# 
  1010  021D                     	;# 
  1011  021E                     	;# 
  1012  021F                     	;# 
  1013  0291                     	;# 
  1014  0291                     	;# 
  1015  0292                     	;# 
  1016  0293                     	;# 
  1017  0294                     	;# 
  1018  0295                     	;# 
  1019  0295                     	;# 
  1020  0296                     	;# 
  1021  0298                     	;# 
  1022  0298                     	;# 
  1023  0299                     	;# 
  1024  029A                     	;# 
  1025  029B                     	;# 
  1026  029C                     	;# 
  1027  029D                     	;# 
  1028  029E                     	;# 
  1029  0311                     	;# 
  1030  0311                     	;# 
  1031  0312                     	;# 
  1032  0313                     	;# 
  1033  0318                     	;# 
  1034  0318                     	;# 
  1035  0319                     	;# 
  1036  031A                     	;# 
  1037  038C                     	;# 
  1038  038D                     	;# 
  1039  038E                     	;# 
  1040  0391                     	;# 
  1041  0392                     	;# 
  1042  0393                     	;# 
  1043  0394                     	;# 
  1044  0395                     	;# 
  1045  0396                     	;# 
  1046  039A                     	;# 
  1047  039C                     	;# 
  1048  039D                     	;# 
  1049  039E                     	;# 
  1050  039F                     	;# 
  1051  0415                     	;# 
  1052  0416                     	;# 
  1053  0417                     	;# 
  1054  041C                     	;# 
  1055  041D                     	;# 
  1056  041E                     	;# 
  1057  0FE4                     	;# 
  1058  0FE5                     	;# 
  1059  0FE6                     	;# 
  1060  0FE7                     	;# 
  1061  0FE8                     	;# 
  1062  0FE9                     	;# 
  1063  0FEA                     	;# 
  1064  0FEB                     	;# 
  1065  0FED                     	;# 
  1066  0FEE                     	;# 
  1067  0FEF                     	;# 
  1068  0000                     	;# 
  1069  0001                     	;# 
  1070  0002                     	;# 
  1071  0003                     	;# 
  1072  0004                     	;# 
  1073  0005                     	;# 
  1074  0006                     	;# 
  1075  0007                     	;# 
  1076  0008                     	;# 
  1077  0009                     	;# 
  1078  000A                     	;# 
  1079  000B                     	;# 
  1080  000C                     	;# 
  1081  000D                     	;# 
  1082  000E                     	;# 
  1083  0011                     	;# 
  1084  0012                     	;# 
  1085  0013                     	;# 
  1086  0014                     	;# 
  1087  0015                     	;# 
  1088  0016                     	;# 
  1089  0016                     	;# 
  1090  0017                     	;# 
  1091  0018                     	;# 
  1092  0019                     	;# 
  1093  001A                     	;# 
  1094  001B                     	;# 
  1095  001C                     	;# 
  1096  001E                     	;# 
  1097  001F                     	;# 
  1098  008C                     	;# 
  1099  008D                     	;# 
  1100  008E                     	;# 
  1101  0091                     	;# 
  1102  0092                     	;# 
  1103  0093                     	;# 
  1104  0094                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0098                     	;# 
  1109  0099                     	;# 
  1110  009A                     	;# 
  1111  009B                     	;# 
  1112  009B                     	;# 
  1113  009C                     	;# 
  1114  009D                     	;# 
  1115  009E                     	;# 
  1116  010C                     	;# 
  1117  010D                     	;# 
  1118  010E                     	;# 
  1119  0111                     	;# 
  1120  0112                     	;# 
  1121  0113                     	;# 
  1122  0114                     	;# 
  1123  0115                     	;# 
  1124  0116                     	;# 
  1125  0117                     	;# 
  1126  0118                     	;# 
  1127  0119                     	;# 
  1128  011A                     	;# 
  1129  011B                     	;# 
  1130  011D                     	;# 
  1131  011E                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  0191                     	;# 
  1136  0191                     	;# 
  1137  0192                     	;# 
  1138  0193                     	;# 
  1139  0193                     	;# 
  1140  0193                     	;# 
  1141  0194                     	;# 
  1142  0195                     	;# 
  1143  0196                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019B                     	;# 
  1147  019B                     	;# 
  1148  019C                     	;# 
  1149  019D                     	;# 
  1150  019E                     	;# 
  1151  019F                     	;# 
  1152  020C                     	;# 
  1153  020D                     	;# 
  1154  020E                     	;# 
  1155  0211                     	;# 
  1156  0211                     	;# 
  1157  0212                     	;# 
  1158  0212                     	;# 
  1159  0213                     	;# 
  1160  0213                     	;# 
  1161  0214                     	;# 
  1162  0214                     	;# 
  1163  0215                     	;# 
  1164  0215                     	;# 
  1165  0215                     	;# 
  1166  0216                     	;# 
  1167  0216                     	;# 
  1168  0217                     	;# 
  1169  0217                     	;# 
  1170  0219                     	;# 
  1171  021A                     	;# 
  1172  021B                     	;# 
  1173  021C                     	;# 
  1174  021D                     	;# 
  1175  021E                     	;# 
  1176  021F                     	;# 
  1177  0291                     	;# 
  1178  0291                     	;# 
  1179  0292                     	;# 
  1180  0293                     	;# 
  1181  0294                     	;# 
  1182  0295                     	;# 
  1183  0295                     	;# 
  1184  0296                     	;# 
  1185  0298                     	;# 
  1186  0298                     	;# 
  1187  0299                     	;# 
  1188  029A                     	;# 
  1189  029B                     	;# 
  1190  029C                     	;# 
  1191  029D                     	;# 
  1192  029E                     	;# 
  1193  0311                     	;# 
  1194  0311                     	;# 
  1195  0312                     	;# 
  1196  0313                     	;# 
  1197  0318                     	;# 
  1198  0318                     	;# 
  1199  0319                     	;# 
  1200  031A                     	;# 
  1201  038C                     	;# 
  1202  038D                     	;# 
  1203  038E                     	;# 
  1204  0391                     	;# 
  1205  0392                     	;# 
  1206  0393                     	;# 
  1207  0394                     	;# 
  1208  0395                     	;# 
  1209  0396                     	;# 
  1210  039A                     	;# 
  1211  039C                     	;# 
  1212  039D                     	;# 
  1213  039E                     	;# 
  1214  039F                     	;# 
  1215  0415                     	;# 
  1216  0416                     	;# 
  1217  0417                     	;# 
  1218  041C                     	;# 
  1219  041D                     	;# 
  1220  041E                     	;# 
  1221  0FE4                     	;# 
  1222  0FE5                     	;# 
  1223  0FE6                     	;# 
  1224  0FE7                     	;# 
  1225  0FE8                     	;# 
  1226  0FE9                     	;# 
  1227  0FEA                     	;# 
  1228  0FEB                     	;# 
  1229  0FED                     	;# 
  1230  0FEE                     	;# 
  1231  0FEF                     	;# 
  1232                           
  1233                           	psect	idataCOMMON
  1234  0611                     __pidataCOMMON:	
  1235                           
  1236                           ;initializer for _Transmit_stall
  1237  0611  3401               	retlw	1
  1238  000B                     _INTCON	set	11
  1239  000B                     _INTCONbits	set	11
  1240  0011                     _PIR1bits	set	17
  1241  000C                     _PORTAbits	set	12
  1242  000E                     _PORTCbits	set	14
  1243  001B                     _PR2	set	27
  1244  001C                     _T2CON	set	28
  1245  001C                     _T2CONbits	set	28
  1246  001A                     _TMR2	set	26
  1247  009D                     _ADCON0bits	set	157
  1248  009E                     _ADCON1bits	set	158
  1249  009B                     _ADRESL	set	155
  1250  0099                     _OSCCONbits	set	153
  1251  0091                     _PIE1bits	set	145
  1252  008C                     _TRISAbits	set	140
  1253  008E                     _TRISCbits	set	142
  1254  011D                     _APFCON0bits	set	285
  1255  0117                     _FVRCONbits	set	279
  1256  018C                     _ANSELAbits	set	396
  1257  018E                     _ANSELCbits	set	398
  1258  019F                     _BAUDCON	set	415
  1259  0199                     _RCREG	set	409
  1260  019D                     _RCSTA	set	413
  1261  019D                     _RCSTAbits	set	413
  1262  019C                     _SPBRGH	set	412
  1263  019B                     _SPBRGL	set	411
  1264  019A                     _TXREG	set	410
  1265  019E                     _TXSTA	set	414
  1266                           
  1267                           	psect	stringtext
  1268  027B                     __pstringtext:	
  1269  027B                     STR_5:	
  1270  027B  3441               	retlw	65	;'A'
  1271  027C  3454               	retlw	84	;'T'
  1272  027D  342B               	retlw	43	;'+'
  1273  027E  3444               	retlw	68	;'D'
  1274  027F  344D               	retlw	77	;'M'
  1275  0280  344F               	retlw	79	;'O'
  1276  0281  3453               	retlw	83	;'S'
  1277  0282  3445               	retlw	69	;'E'
  1278  0283  3454               	retlw	84	;'T'
  1279  0284  3447               	retlw	71	;'G'
  1280  0285  3452               	retlw	82	;'R'
  1281  0286  344F               	retlw	79	;'O'
  1282  0287  3455               	retlw	85	;'U'
  1283  0288  3450               	retlw	80	;'P'
  1284  0289  343D               	retlw	61	;'='
  1285  028A  3430               	retlw	48	;'0'
  1286  028B  342C               	retlw	44	;','
  1287  028C  3431               	retlw	49	;'1'
  1288  028D  3434               	retlw	52	;'4'
  1289  028E  3435               	retlw	53	;'5'
  1290  028F  342E               	retlw	46	;'.'
  1291  0290  3435               	retlw	53	;'5'
  1292  0291  3435               	retlw	53	;'5'
  1293  0292  3430               	retlw	48	;'0'
  1294  0293  3430               	retlw	48	;'0'
  1295  0294  342C               	retlw	44	;','
  1296  0295  3431               	retlw	49	;'1'
  1297  0296  3434               	retlw	52	;'4'
  1298  0297  3435               	retlw	53	;'5'
  1299  0298  342E               	retlw	46	;'.'
  1300  0299  3435               	retlw	53	;'5'
  1301  029A  3435               	retlw	53	;'5'
  1302  029B  3430               	retlw	48	;'0'
  1303  029C  3430               	retlw	48	;'0'
  1304  029D  342C               	retlw	44	;','
  1305  029E  3430               	retlw	48	;'0'
  1306  029F  342C               	retlw	44	;','
  1307  02A0  3431               	retlw	49	;'1'
  1308  02A1  342C               	retlw	44	;','
  1309  02A2  3430               	retlw	48	;'0'
  1310  02A3  342C               	retlw	44	;','
  1311  02A4  3430               	retlw	48	;'0'
  1312  02A5  3400               	retlw	0
  1313  02A6                     STR_8:	
  1314  02A6  3441               	retlw	65	;'A'
  1315  02A7  3454               	retlw	84	;'T'
  1316  02A8  342B               	retlw	43	;'+'
  1317  02A9  3444               	retlw	68	;'D'
  1318  02AA  344D               	retlw	77	;'M'
  1319  02AB  344F               	retlw	79	;'O'
  1320  02AC  3441               	retlw	65	;'A'
  1321  02AD  3455               	retlw	85	;'U'
  1322  02AE  3454               	retlw	84	;'T'
  1323  02AF  344F               	retlw	79	;'O'
  1324  02B0  3450               	retlw	80	;'P'
  1325  02B1  344F               	retlw	79	;'O'
  1326  02B2  3457               	retlw	87	;'W'
  1327  02B3  3443               	retlw	67	;'C'
  1328  02B4  344F               	retlw	79	;'O'
  1329  02B5  344E               	retlw	78	;'N'
  1330  02B6  3454               	retlw	84	;'T'
  1331  02B7  3452               	retlw	82	;'R'
  1332  02B8  343D               	retlw	61	;'='
  1333  02B9  3425               	retlw	37	;'%'
  1334  02BA  3463               	retlw	99	;'c'
  1335  02BB  3400               	retlw	0
  1336  02BC                     STR_17:	
  1337  02BC  3441               	retlw	65	;'A'
  1338  02BD  3454               	retlw	84	;'T'
  1339  02BE  342B               	retlw	43	;'+'
  1340  02BF  3444               	retlw	68	;'D'
  1341  02C0  344D               	retlw	77	;'M'
  1342  02C1  344F               	retlw	79	;'O'
  1343  02C2  3453               	retlw	83	;'S'
  1344  02C3  3445               	retlw	69	;'E'
  1345  02C4  3454               	retlw	84	;'T'
  1346  02C5  344D               	retlw	77	;'M'
  1347  02C6  3449               	retlw	73	;'I'
  1348  02C7  3443               	retlw	67	;'C'
  1349  02C8  343D               	retlw	61	;'='
  1350  02C9  3425               	retlw	37	;'%'
  1351  02CA  3463               	retlw	99	;'c'
  1352  02CB  342C               	retlw	44	;','
  1353  02CC  3425               	retlw	37	;'%'
  1354  02CD  3463               	retlw	99	;'c'
  1355  02CE  342C               	retlw	44	;','
  1356  02CF  3430               	retlw	48	;'0'
  1357  02D0  3400               	retlw	0
  1358  02D1                     STR_11:	
  1359  02D1  3441               	retlw	65	;'A'
  1360  02D2  3454               	retlw	84	;'T'
  1361  02D3  342B               	retlw	43	;'+'
  1362  02D4  3444               	retlw	68	;'D'
  1363  02D5  344D               	retlw	77	;'M'
  1364  02D6  344F               	retlw	79	;'O'
  1365  02D7  3453               	retlw	83	;'S'
  1366  02D8  3445               	retlw	69	;'E'
  1367  02D9  3454               	retlw	84	;'T'
  1368  02DA  3456               	retlw	86	;'V'
  1369  02DB  344F               	retlw	79	;'O'
  1370  02DC  344C               	retlw	76	;'L'
  1371  02DD  3455               	retlw	85	;'U'
  1372  02DE  344D               	retlw	77	;'M'
  1373  02DF  3445               	retlw	69	;'E'
  1374  02E0  343D               	retlw	61	;'='
  1375  02E1  3425               	retlw	37	;'%'
  1376  02E2  3463               	retlw	99	;'c'
  1377  02E3  3400               	retlw	0
  1378  02E4                     STR_14:	
  1379  02E4  3441               	retlw	65	;'A'
  1380  02E5  3454               	retlw	84	;'T'
  1381  02E6  342B               	retlw	43	;'+'
  1382  02E7  3444               	retlw	68	;'D'
  1383  02E8  344D               	retlw	77	;'M'
  1384  02E9  344F               	retlw	79	;'O'
  1385  02EA  3453               	retlw	83	;'S'
  1386  02EB  3445               	retlw	69	;'E'
  1387  02EC  3454               	retlw	84	;'T'
  1388  02ED  3456               	retlw	86	;'V'
  1389  02EE  344F               	retlw	79	;'O'
  1390  02EF  3458               	retlw	88	;'X'
  1391  02F0  343D               	retlw	61	;'='
  1392  02F1  3425               	retlw	37	;'%'
  1393  02F2  3463               	retlw	99	;'c'
  1394  02F3  3400               	retlw	0
  1395  02F4                     STR_2:	
  1396  02F4  3441               	retlw	65	;'A'
  1397  02F5  3454               	retlw	84	;'T'
  1398  02F6  342B               	retlw	43	;'+'
  1399  02F7  3444               	retlw	68	;'D'
  1400  02F8  344D               	retlw	77	;'M'
  1401  02F9  344F               	retlw	79	;'O'
  1402  02FA  3443               	retlw	67	;'C'
  1403  02FB  344F               	retlw	79	;'O'
  1404  02FC  344E               	retlw	78	;'N'
  1405  02FD  344E               	retlw	78	;'N'
  1406  02FE  3445               	retlw	69	;'E'
  1407  02FF  3443               	retlw	67	;'C'
  1408  0300  3454               	retlw	84	;'T'
  1409  0301  3400               	retlw	0
  1410  0302                     STR_1:	
  1411  0302  340D               	retlw	13
  1412  0303  340A               	retlw	10
  1413  0304  3400               	retlw	0
  1414  0302                     
  1415                           ; #config settings
  1416  0000                     
  1417                           	psect	cinit
  1418  0018                     start_initialization:	
  1419  0018                     __initialization:	
  1420                           
  1421                           ; Initialize objects allocated to COMMON
  1422  0018  3186  2611  3180   	fcall	__pidataCOMMON	;fetch initializer
  1423  001B  00FC               	movwf	__pdataCOMMON& (0+127)
  1424                           
  1425                           ; Clear objects allocated to BANK0
  1426  001C  3041               	movlw	low __pbssBANK0
  1427  001D  0084               	movwf	4
  1428  001E  3000               	movlw	high __pbssBANK0
  1429  001F  0085               	movwf	5
  1430  0020  300C               	movlw	12
  1431  0021  3185  25FA  3180   	fcall	clear_ram0
  1432                           
  1433                           ; Clear objects allocated to BANK1
  1434  0024  30A0               	movlw	low __pbssBANK1
  1435  0025  0084               	movwf	4
  1436  0026  3000               	movlw	high __pbssBANK1
  1437  0027  0085               	movwf	5
  1438  0028  302E               	movlw	46
  1439  0029  3185  25FA  3180   	fcall	clear_ram0
  1440                           
  1441                           ; Clear objects allocated to BANK2
  1442  002C  3020               	movlw	low __pbssBANK2
  1443  002D  0084               	movwf	4
  1444  002E  3001               	movlw	high __pbssBANK2
  1445  002F  0085               	movwf	5
  1446  0030  302E               	movlw	46
  1447  0031  3185  25FA         	fcall	clear_ram0
  1448  0033                     end_of_initialization:	
  1449                           ;End of C runtime variable initialization code
  1450                           
  1451  0033                     __end_of__initialization:	
  1452  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1453  0034  0020               	movlb	0
  1454  0035  3185  2D6D         	ljmp	_main	;jump to C main() function
  1455                           
  1456                           	psect	dataCOMMON
  1457  007C                     __pdataCOMMON:	
  1458  007C                     _Transmit_stall:	
  1459  007C                     	ds	1
  1460                           
  1461                           	psect	bssBANK0
  1462  0041                     __pbssBANK0:	
  1463  0041                     _Battery:	
  1464  0041                     	ds	3
  1465  0044                     _count:	
  1466  0044                     	ds	2
  1467  0046                     _ticker:	
  1468  0046                     	ds	2
  1469  0048                     _time:	
  1470  0048                     	ds	2
  1471  004A                     _Mode:	
  1472  004A                     	ds	1
  1473  004B                     _Shutdown:	
  1474  004B                     	ds	1
  1475  004C                     _Talking:	
  1476  004C                     	ds	1
  1477                           
  1478                           	psect	bssBANK1
  1479  00A0                     __pbssBANK1:	
  1480  00A0                     _input_buffer:	
  1481  00A0                     	ds	46
  1482                           
  1483                           	psect	bssBANK2
  1484  0120                     __pbssBANK2:	
  1485  0120                     _output_buffer:	
  1486  0120                     	ds	46
  1487                           
  1488                           	psect	clrtext
  1489  05FA                     clear_ram0:	
  1490                           ;	Called with FSR0 containing the base address, and
  1491                           ;	WREG with the size to clear
  1492                           
  1493  05FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1494  05FB                     clrloop0:	
  1495  05FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1496  05FC  3101               	addfsr 0,1
  1497  05FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1498  05FE  2DFB               	goto	clrloop0	;have we reached the end yet?
  1499  05FF  3400               	retlw	0	;all done for this memory range, return
  1500                           
  1501                           	psect	cstackCOMMON
  1502  0070                     __pcstackCOMMON:	
  1503  0070                     ?_Start:	
  1504  0070                     ?_LEDOff:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_RadioBegin:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_RadioOperation:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_ADC_Initialize:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ?_EUSART1_Initialize:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_INTERRUPT_Initialize:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_TMR2_Initialize:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_TMR2_ISR:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ??_TMR2_ISR:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_SetCommandMode:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_SetFrequency:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_SetPowerSave:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_SetVolume:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_SetADCChannel:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_INTERRUPT_InterruptManager:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ??_INTERRUPT_InterruptManager:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_ReadCharger:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_ClearTicker:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_EUSART_Write:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ?_putch:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ?_SR_FRSTalk:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0070                     ?_SR_FRSPowerDown:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0070                     ?_SR_FRSStart:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0070                     ?_main:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0070                     ?_GetTicker:	
  1577                           ; 2 bytes @ 0x0
  1578                           
  1579                           
  1580                           ; 2 bytes @ 0x0
  1581  0070                     	ds	1
  1582  0071                     ?___ftge:	
  1583  0071                     ??_Start:	
  1584                           ; 1 bit 
  1585                           
  1586  0071                     ??_LEDOff:	
  1587                           ; 1 bytes @ 0x1
  1588                           
  1589  0071                     ?_Delay:	
  1590                           ; 1 bytes @ 0x1
  1591                           
  1592  0071                     ??_ADC_Initialize:	
  1593                           ; 1 bytes @ 0x1
  1594                           
  1595  0071                     ??_EUSART1_Initialize:	
  1596                           ; 1 bytes @ 0x1
  1597                           
  1598  0071                     ??_INTERRUPT_Initialize:	
  1599                           ; 1 bytes @ 0x1
  1600                           
  1601  0071                     ??_TMR2_Initialize:	
  1602                           ; 1 bytes @ 0x1
  1603                           
  1604  0071                     ??_SetADCChannel:	
  1605                           ; 1 bytes @ 0x1
  1606                           
  1607  0071                     ??_ReadCharger:	
  1608                           ; 1 bytes @ 0x1
  1609                           
  1610  0071                     ??_ClearTicker:	
  1611                           ; 1 bytes @ 0x1
  1612                           
  1613  0071                     ??_GetTicker:	
  1614                           ; 1 bytes @ 0x1
  1615                           
  1616  0071                     ??_EUSART_Write:	
  1617                           ; 1 bytes @ 0x1
  1618                           
  1619  0071                     ??_SR_FRSTalk:	
  1620                           ; 1 bytes @ 0x1
  1621                           
  1622  0071                     ??_SR_FRSPowerDown:	
  1623                           ; 1 bytes @ 0x1
  1624                           
  1625  0071                     ?___ftpack:	
  1626                           ; 1 bytes @ 0x1
  1627                           
  1628  0071                     EUSART_Write@txData:	
  1629                           ; 3 bytes @ 0x1
  1630                           
  1631  0071                     SetADCChannel@ch:	
  1632                           ; 1 bytes @ 0x1
  1633                           
  1634  0071                     Delay@wait:	
  1635                           ; 1 bytes @ 0x1
  1636                           
  1637  0071                     ___ftpack@arg:	
  1638                           ; 2 bytes @ 0x1
  1639                           
  1640  0071                     ___ftge@ff1:	
  1641                           ; 3 bytes @ 0x1
  1642                           
  1643                           
  1644                           ; 3 bytes @ 0x1
  1645  0071                     	ds	1
  1646  0072                     ??_putch:	
  1647  0072                     ?_ReadVoltage:	
  1648                           ; 1 bytes @ 0x2
  1649                           
  1650  0072                     putch@txData:	
  1651                           ; 2 bytes @ 0x2
  1652                           
  1653                           
  1654                           ; 1 bytes @ 0x2
  1655  0072                     	ds	1
  1656  0073                     ??_Delay:	
  1657  0073                     ?_printf:	
  1658                           ; 1 bytes @ 0x3
  1659                           
  1660  0073                     printf@f:	
  1661                           ; 2 bytes @ 0x3
  1662                           
  1663                           
  1664                           ; 2 bytes @ 0x3
  1665  0073                     	ds	1
  1666  0074                     ___ftpack@exp:	
  1667  0074                     Delay@x:	
  1668                           ; 1 bytes @ 0x4
  1669                           
  1670  0074                     ___ftge@ff2:	
  1671                           ; 2 bytes @ 0x4
  1672                           
  1673                           
  1674                           ; 3 bytes @ 0x4
  1675  0074                     	ds	1
  1676  0075                     ??_ReadVoltage:	
  1677  0075                     ReadVoltage@ch:	
  1678                           ; 1 bytes @ 0x5
  1679                           
  1680  0075                     ___ftpack@sign:	
  1681                           ; 1 bytes @ 0x5
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x5
  1685  0075                     	ds	1
  1686  0076                     ??___ftpack:	
  1687                           
  1688                           ; 1 bytes @ 0x6
  1689  0076                     	ds	1
  1690  0077                     ??___ftge:	
  1691                           
  1692                           ; 1 bytes @ 0x7
  1693  0077                     	ds	2
  1694  0079                     ??_printf:	
  1695  0079                     ?___awtoft:	
  1696                           ; 1 bytes @ 0x9
  1697                           
  1698  0079                     ___awtoft@c:	
  1699                           ; 3 bytes @ 0x9
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0x9
  1703  0079                     	ds	3
  1704  007C                     ??_RadioBegin:	
  1705  007C                     ??_SetCommandMode:	
  1706                           ; 1 bytes @ 0xC
  1707                           
  1708  007C                     ??_SetFrequency:	
  1709                           ; 1 bytes @ 0xC
  1710                           
  1711  007C                     ??_SetPowerSave:	
  1712                           ; 1 bytes @ 0xC
  1713                           
  1714  007C                     ??_main:	
  1715                           ; 1 bytes @ 0xC
  1716                           
  1717  007C                     ??_SR_FRSStart:	
  1718                           ; 1 bytes @ 0xC
  1719                           
  1720                           
  1721                           	psect	cstackBANK0
  1722  0020                     __pcstackBANK0:	
  1723                           ; 1 bytes @ 0xC
  1724                           
  1725  0020                     ??___awtoft:	
  1726  0020                     ?___ftmul:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0020                     printf@flag:	
  1730                           ; 3 bytes @ 0x0
  1731                           
  1732  0020                     ___ftmul@f1:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735                           
  1736                           ; 3 bytes @ 0x0
  1737  0020                     	ds	1
  1738  0021                     printf@ap:	
  1739                           
  1740                           ; 1 bytes @ 0x1
  1741  0021                     	ds	1
  1742  0022                     printf@c:	
  1743  0022                     ___awtoft@sign:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746                           
  1747                           ; 1 bytes @ 0x2
  1748  0022                     	ds	1
  1749  0023                     ??_SetVolume:	
  1750  0023                     ?_SetVOX:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0023                     ?_SetMIC:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0023                     SetMIC@scram:	
  1757                           ; 1 bytes @ 0x3
  1758                           
  1759  0023                     SetVOX@volume:	
  1760                           ; 1 bytes @ 0x3
  1761                           
  1762  0023                     ___ftmul@f2:	
  1763                           ; 2 bytes @ 0x3
  1764                           
  1765                           
  1766                           ; 3 bytes @ 0x3
  1767  0023                     	ds	1
  1768  0024                     ??_SetMIC:	
  1769                           
  1770                           ; 1 bytes @ 0x4
  1771  0024                     	ds	1
  1772  0025                     ??_SetVOX:	
  1773  0025                     SetVolume@volume:	
  1774                           ; 1 bytes @ 0x5
  1775                           
  1776                           
  1777                           ; 1 bytes @ 0x5
  1778  0025                     	ds	1
  1779  0026                     ??___ftmul:	
  1780                           
  1781                           ; 1 bytes @ 0x6
  1782  0026                     	ds	2
  1783  0028                     SetMIC@volume:	
  1784                           
  1785                           ; 1 bytes @ 0x8
  1786  0028                     	ds	2
  1787  002A                     ___ftmul@exp:	
  1788                           
  1789                           ; 1 bytes @ 0xA
  1790  002A                     	ds	1
  1791  002B                     ___ftmul@f3_as_product:	
  1792                           
  1793                           ; 3 bytes @ 0xB
  1794  002B                     	ds	3
  1795  002E                     ___ftmul@cntr:	
  1796                           
  1797                           ; 1 bytes @ 0xE
  1798  002E                     	ds	1
  1799  002F                     ___ftmul@sign:	
  1800                           
  1801                           ; 1 bytes @ 0xF
  1802  002F                     	ds	1
  1803  0030                     ?___ftdiv:	
  1804  0030                     ___ftdiv@f2:	
  1805                           ; 3 bytes @ 0x10
  1806                           
  1807                           
  1808                           ; 3 bytes @ 0x10
  1809  0030                     	ds	3
  1810  0033                     ___ftdiv@f1:	
  1811                           
  1812                           ; 3 bytes @ 0x13
  1813  0033                     	ds	3
  1814  0036                     ??___ftdiv:	
  1815                           
  1816                           ; 1 bytes @ 0x16
  1817  0036                     	ds	4
  1818  003A                     ___ftdiv@cntr:	
  1819                           
  1820                           ; 1 bytes @ 0x1A
  1821  003A                     	ds	1
  1822  003B                     ___ftdiv@f3:	
  1823                           
  1824                           ; 3 bytes @ 0x1B
  1825  003B                     	ds	3
  1826  003E                     ___ftdiv@exp:	
  1827                           
  1828                           ; 1 bytes @ 0x1E
  1829  003E                     	ds	1
  1830  003F                     ___ftdiv@sign:	
  1831                           
  1832                           ; 1 bytes @ 0x1F
  1833  003F                     	ds	1
  1834  0040                     ??_RadioOperation:	
  1835                           
  1836                           ; 1 bytes @ 0x20
  1837  0040                     	ds	1
  1838                           
  1839                           	psect	maintext
  1840  056D                     __pmaintext:	
  1841 ;;
  1842 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1843 ;;
  1844 ;; *************** function _main *****************
  1845 ;; Defined at:
  1846 ;;		line 23 in file "Main.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2   12[None  ] int 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : B1F/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels required when called:    8
  1866 ;; This function calls:
  1867 ;;		_Delay
  1868 ;;		_LEDOff
  1869 ;;		_RadioBegin
  1870 ;;		_RadioOperation
  1871 ;;		_Start
  1872 ;; This function is called by:
  1873 ;;		Startup code after reset
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _main
  1879  056D                     _main:	
  1880                           
  1881                           ;Main.c: 25: Start();
  1882                           
  1883                           ;incstack = 0
  1884                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1885  056D  3184  2436  3185   	fcall	_Start
  1886                           
  1887                           ;Main.c: 26: LEDOff();
  1888  0570  3186  2605  3185   	fcall	_LEDOff
  1889                           
  1890                           ;Main.c: 27: RadioBegin();
  1891  0573  3186  260E  3185   	fcall	_RadioBegin
  1892  0576                     l1904:	
  1893                           ;Main.c: 29: while(1){
  1894                           
  1895                           
  1896                           ;Main.c: 30: RadioOperation();
  1897  0576  3180  2037  3185   	fcall	_RadioOperation
  1898                           
  1899                           ;Main.c: 31: Delay(100);
  1900  0579  3064               	movlw	100
  1901  057A  00F1               	movwf	Delay@wait
  1902  057B  3000               	movlw	0
  1903  057C  00F2               	movwf	Delay@wait+1
  1904  057D  3185  252C  3185   	fcall	_Delay
  1905  0580  2D76               	goto	l1904
  1906  0581                     __end_of_main:	
  1907                           ;Main.c: 32: }
  1908                           ;Main.c: 33: return 0;
  1909                           ;	Return value of _main is never used
  1910                           
  1911                           
  1912                           	psect	text1
  1913  0436                     __ptext1:	
  1914 ;; *************** function _Start *****************
  1915 ;; Defined at:
  1916 ;;		line 40 in file "Function.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    3
  1937 ;; This function calls:
  1938 ;;		_ADC_Initialize
  1939 ;;		_EUSART1_Initialize
  1940 ;;		_INTERRUPT_Initialize
  1941 ;;		_TMR2_Initialize
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _Start
  1949  0436                     _Start:	
  1950                           
  1951                           ;Function.c: 44: OSCCONbits.IRCF = 13;
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _Start: [wreg+status,2+status,0+pclath+cstack]
  1955  0436  0021               	movlb	1	; select bank1
  1956  0437  0819               	movf	25,w	;volatile
  1957  0438  3987               	andlw	-121
  1958  0439  3868               	iorlw	104
  1959  043A  0099               	movwf	25	;volatile
  1960                           
  1961                           ;Function.c: 45: OSCCONbits.SCS = 2;
  1962  043B  0819               	movf	25,w	;volatile
  1963  043C  39FC               	andlw	-4
  1964  043D  3802               	iorlw	2
  1965  043E  0099               	movwf	25	;volatile
  1966                           
  1967                           ;Function.c: 46: OSCCONbits.SPLLEN = 0;
  1968  043F  1399               	bcf	25,7	;volatile
  1969                           
  1970                           ;Function.c: 50: TRISCbits.TRISC7 = 0;
  1971  0440  138E               	bcf	14,7	;volatile
  1972                           
  1973                           ;Function.c: 51: TRISCbits.TRISC6 = 0;
  1974  0441  130E               	bcf	14,6	;volatile
  1975                           
  1976                           ;Function.c: 52: TRISCbits.TRISC5 = 0;
  1977  0442  128E               	bcf	14,5	;volatile
  1978                           
  1979                           ;Function.c: 53: TRISCbits.TRISC4 = 0;
  1980  0443  120E               	bcf	14,4	;volatile
  1981                           
  1982                           ;Function.c: 54: TRISCbits.TRISC3 = 0;
  1983  0444  118E               	bcf	14,3	;volatile
  1984                           
  1985                           ;Function.c: 55: TRISAbits.TRISA2 = 1;
  1986  0445  150C               	bsf	12,2	;volatile
  1987                           
  1988                           ;Function.c: 56: TRISCbits.TRISC0 = 1;
  1989  0446  140E               	bsf	14,0	;volatile
  1990                           
  1991                           ;Function.c: 57: TRISCbits.TRISC1 = 1;
  1992  0447  148E               	bsf	14,1	;volatile
  1993                           
  1994                           ;Function.c: 58: TRISAbits.TRISA4 = 1;
  1995  0448  160C               	bsf	12,4	;volatile
  1996                           
  1997                           ;Function.c: 62: ANSELCbits.ANSC0 = 0;
  1998  0449  0023               	movlb	3	; select bank3
  1999  044A  100E               	bcf	14,0	;volatile
  2000                           
  2001                           ;Function.c: 63: ANSELCbits.ANSC1 = 0;
  2002  044B  108E               	bcf	14,1	;volatile
  2003                           
  2004                           ;Function.c: 64: ANSELAbits.ANSA2 = 0;
  2005  044C  110C               	bcf	12,2	;volatile
  2006                           
  2007                           ;Function.c: 65: ANSELCbits.ANSC3 = 0;
  2008  044D  118E               	bcf	14,3	;volatile
  2009                           
  2010                           ;Function.c: 66: ANSELCbits.ANSC6 = 0;
  2011  044E  130E               	bcf	14,6	;volatile
  2012                           
  2013                           ;Function.c: 67: ANSELCbits.ANSC7 = 0;
  2014  044F  138E               	bcf	14,7	;volatile
  2015                           
  2016                           ;Function.c: 70: APFCON0bits.RXDTSEL = 0;
  2017  0450  0022               	movlb	2	; select bank2
  2018  0451  139D               	bcf	29,7	;volatile
  2019                           
  2020                           ;Function.c: 71: APFCON0bits.TXCKSEL = 0;
  2021  0452  111D               	bcf	29,2	;volatile
  2022                           
  2023                           ;Function.c: 75: ADC_Initialize();
  2024  0453  3185  25E1  3184   	fcall	_ADC_Initialize
  2025                           
  2026                           ;Function.c: 79: EUSART1_Initialize();
  2027  0456  3185  25C2  3184   	fcall	_EUSART1_Initialize
  2028                           
  2029                           ;Function.c: 83: INTERRUPT_Initialize();
  2030  0459  3185  25D7  3184   	fcall	_INTERRUPT_Initialize
  2031                           
  2032                           ;Function.c: 84: TMR2_Initialize();
  2033  045C  3185  25CD         	fcall	_TMR2_Initialize
  2034  045E  0008               	return
  2035  045F                     __end_of_Start:	
  2036                           
  2037                           	psect	text2
  2038  05CD                     __ptext2:	
  2039 ;; *************** function _TMR2_Initialize *****************
  2040 ;; Defined at:
  2041 ;;		line 15 in file "Timer.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2059 ;;Total ram usage:        0 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    2
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_Start
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           
  2070                           ;psect for function _TMR2_Initialize
  2071  05CD                     _TMR2_Initialize:	
  2072                           
  2073                           ;Timer.c: 20: T2CON = 0x00;
  2074                           
  2075                           ;incstack = 0
  2076                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2077  05CD  0020               	movlb	0	; select bank0
  2078  05CE  019C               	clrf	28	;volatile
  2079                           
  2080                           ;Timer.c: 21: T2CONbits.TMR2ON = 0;
  2081  05CF  111C               	bcf	28,2	;volatile
  2082                           
  2083                           ;Timer.c: 24: PR2 = 18;
  2084  05D0  3012               	movlw	18
  2085  05D1  009B               	movwf	27	;volatile
  2086                           
  2087                           ;Timer.c: 27: TMR2 = 0;
  2088  05D2  019A               	clrf	26	;volatile
  2089                           
  2090                           ;Timer.c: 30: PIR1bits.TMR2IF = 0;
  2091  05D3  1091               	bcf	17,1	;volatile
  2092                           
  2093                           ;Timer.c: 33: PIE1bits.TMR2IE = 1;
  2094  05D4  0021               	movlb	1	; select bank1
  2095  05D5  1491               	bsf	17,1	;volatile
  2096  05D6  0008               	return
  2097  05D7                     __end_of_TMR2_Initialize:	
  2098                           
  2099                           	psect	text3
  2100  05D7                     __ptext3:	
  2101 ;; *************** function _INTERRUPT_Initialize *****************
  2102 ;; Defined at:
  2103 ;;		line 106 in file "Function.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		status,2
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    2
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_Start
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _INTERRUPT_Initialize
  2133  05D7                     _INTERRUPT_Initialize:	
  2134                           
  2135                           ;Function.c: 108: INTCON = 0;
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _INTERRUPT_Initialize: [status,2]
  2139  05D7  018B               	clrf	11	;volatile
  2140                           
  2141                           ;Function.c: 109: INTCONbits.TMR0IE = 0;
  2142  05D8  128B               	bcf	11,5	;volatile
  2143                           
  2144                           ;Function.c: 110: PIR1bits.TMR2IF = 0;
  2145  05D9  0020               	movlb	0	; select bank0
  2146  05DA  1091               	bcf	17,1	;volatile
  2147                           
  2148                           ;Function.c: 111: PIE1bits.TMR2IE = 1;
  2149  05DB  0021               	movlb	1	; select bank1
  2150  05DC  1491               	bsf	17,1	;volatile
  2151                           
  2152                           ;Function.c: 112: INTCONbits.TMR0IF = 0;
  2153  05DD  110B               	bcf	11,2	;volatile
  2154                           
  2155                           ;Function.c: 113: INTCONbits.GIE = 1;
  2156  05DE  178B               	bsf	11,7	;volatile
  2157                           
  2158                           ;Function.c: 114: INTCONbits.PEIE = 1;
  2159  05DF  170B               	bsf	11,6	;volatile
  2160  05E0  0008               	return
  2161  05E1                     __end_of_INTERRUPT_Initialize:	
  2162                           
  2163                           	psect	text4
  2164  05C2                     __ptext4:	
  2165 ;; *************** function _EUSART1_Initialize *****************
  2166 ;; Defined at:
  2167 ;;		line 16 in file "UART.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    2
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_Start
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function _EUSART1_Initialize
  2197  05C2                     _EUSART1_Initialize:	
  2198                           
  2199                           ;UART.c: 18: BAUDCON = 0x08;
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  2203  05C2  3008               	movlw	8
  2204  05C3  0023               	movlb	3	; select bank3
  2205  05C4  009F               	movwf	31	;volatile
  2206                           
  2207                           ;UART.c: 21: RCSTA = 0x90;
  2208  05C5  3090               	movlw	144
  2209  05C6  009D               	movwf	29	;volatile
  2210                           
  2211                           ;UART.c: 24: TXSTA = 0x24;
  2212  05C7  3024               	movlw	36
  2213  05C8  009E               	movwf	30	;volatile
  2214                           
  2215                           ;UART.c: 27: SPBRGL = 0x67;
  2216  05C9  3067               	movlw	103
  2217  05CA  009B               	movwf	27	;volatile
  2218                           
  2219                           ;UART.c: 30: SPBRGH = 0x00;
  2220  05CB  019C               	clrf	28	;volatile
  2221  05CC  0008               	return
  2222  05CD                     __end_of_EUSART1_Initialize:	
  2223                           
  2224                           	psect	text5
  2225  05E1                     __ptext5:	
  2226 ;; *************** function _ADC_Initialize *****************
  2227 ;; Defined at:
  2228 ;;		line 16 in file "ADC.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		None
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    2
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_Start
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _ADC_Initialize
  2258  05E1                     _ADC_Initialize:	
  2259                           
  2260                           ;ADC.c: 17: FVRCONbits.ADFVR0 = 1;
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _ADC_Initialize: []
  2264  05E1  0022               	movlb	2	; select bank2
  2265  05E2  1417               	bsf	23,0	;volatile
  2266                           
  2267                           ;ADC.c: 18: FVRCONbits.ADFVR1 = 1;
  2268  05E3  1497               	bsf	23,1	;volatile
  2269                           
  2270                           ;ADC.c: 19: ADCON1bits.ADFM = 1;
  2271  05E4  0021               	movlb	1	; select bank1
  2272  05E5  179E               	bsf	30,7	;volatile
  2273                           
  2274                           ;ADC.c: 20: ADCON1bits.ADCS0 = 0;
  2275  05E6  121E               	bcf	30,4	;volatile
  2276                           
  2277                           ;ADC.c: 21: ADCON1bits.ADCS1 = 0;
  2278  05E7  129E               	bcf	30,5	;volatile
  2279                           
  2280                           ;ADC.c: 22: ADCON1bits.ADCS2 = 1;
  2281  05E8  171E               	bsf	30,6	;volatile
  2282                           
  2283                           ;ADC.c: 23: ADCON0bits.ADON = 1;
  2284  05E9  141D               	bsf	29,0	;volatile
  2285  05EA  0008               	return
  2286  05EB                     __end_of_ADC_Initialize:	
  2287                           
  2288                           	psect	text6
  2289  0037                     __ptext6:	
  2290 ;; *************** function _RadioOperation *****************
  2291 ;; Defined at:
  2292 ;;		line 46 in file "Radio.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;Total ram usage:        1 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    4
  2313 ;; This function calls:
  2314 ;;		_ClearTicker
  2315 ;;		_GetTicker
  2316 ;;		_ReadCharger
  2317 ;;		_ReadVoltage
  2318 ;;		_SR_FRSPowerDown
  2319 ;;		_SR_FRSTalk
  2320 ;;		___awtoft
  2321 ;;		___ftdiv
  2322 ;;		___ftge
  2323 ;;		___ftmul
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _RadioOperation
  2331  0037                     _RadioOperation:	
  2332                           
  2333                           ;Radio.c: 47: if(!PORTAbits.RA2 && !Talking){
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _RadioOperation: [wreg+status,2+status,0+pclath+cstack]
  2337  0037  0020               	movlb	0	; select bank0
  2338  0038  190C               	btfsc	12,2	;volatile
  2339  0039  2841               	goto	l244
  2340  003A  084C               	movf	_Talking,w
  2341  003B  1D03               	btfss	3,2
  2342  003C  2841               	goto	l244
  2343                           
  2344                           ;Radio.c: 48: count++;
  2345  003D  3001               	movlw	1
  2346  003E  07C4               	addwf	_count,f
  2347  003F  3000               	movlw	0
  2348  0040  3DC5               	addwfc	_count+1,f
  2349  0041                     l244:	
  2350                           
  2351                           ;Radio.c: 49: }
  2352                           ;Radio.c: 50: if((count > 5) && !Talking){
  2353  0041  0845               	movf	_count+1,w
  2354  0042  3A80               	xorlw	128
  2355  0043  00C0               	movwf	??_RadioOperation
  2356  0044  3080               	movlw	128
  2357  0045  0240               	subwf	??_RadioOperation,w
  2358  0046  1D03               	skipz
  2359  0047  284A               	goto	u1895
  2360  0048  3006               	movlw	6
  2361  0049  0244               	subwf	_count,w
  2362  004A                     u1895:	
  2363  004A  1C03               	skipc
  2364  004B  285A               	goto	l1840
  2365  004C  0020               	movlb	0	; select bank0
  2366  004D  084C               	movf	_Talking,w
  2367  004E  1D03               	btfss	3,2
  2368  004F  285A               	goto	l1840
  2369                           
  2370                           ;Radio.c: 51: SR_FRSTalk();
  2371  0050  3185  25A5  3180   	fcall	_SR_FRSTalk
  2372                           
  2373                           ;Radio.c: 52: PORTCbits.RC3 = 1;
  2374  0053  0020               	movlb	0	; select bank0
  2375  0054  158E               	bsf	14,3	;volatile
  2376                           
  2377                           ;Radio.c: 53: Talking = 1;
  2378  0055  01CC               	clrf	_Talking
  2379  0056  0ACC               	incf	_Talking,f
  2380                           
  2381                           ;Radio.c: 55: ClearTicker();
  2382  0057  3186  260A  3180   	fcall	_ClearTicker
  2383  005A                     l1840:	
  2384                           
  2385                           ;Radio.c: 56: }
  2386                           ;Radio.c: 57: if(Talking && PORTAbits.RA2){
  2387  005A  0020               	movlb	0	; select bank0
  2388  005B  084C               	movf	_Talking,w
  2389  005C  1D03               	btfss	3,2
  2390  005D  1D0C               	btfss	12,2	;volatile
  2391  005E  2877               	goto	l1854
  2392                           
  2393                           ;Radio.c: 58: count--;
  2394  005F  30FF               	movlw	255
  2395  0060  07C4               	addwf	_count,f
  2396  0061  30FF               	movlw	255
  2397  0062  3DC5               	addwfc	_count+1,f
  2398                           
  2399                           ;Radio.c: 59: if(count < 5){
  2400  0063  0845               	movf	_count+1,w
  2401  0064  3A80               	xorlw	128
  2402  0065  00C0               	movwf	??_RadioOperation
  2403  0066  3080               	movlw	128
  2404  0067  0240               	subwf	??_RadioOperation,w
  2405  0068  1D03               	skipz
  2406  0069  286C               	goto	u1935
  2407  006A  3005               	movlw	5
  2408  006B  0244               	subwf	_count,w
  2409  006C                     u1935:	
  2410  006C  1803               	skipnc
  2411  006D  2877               	goto	l1854
  2412                           
  2413                           ;Radio.c: 60: PORTCbits.RC3 = 0;
  2414  006E  0020               	movlb	0	; select bank0
  2415  006F  118E               	bcf	14,3	;volatile
  2416                           
  2417                           ;Radio.c: 61: SR_FRSTalk();
  2418  0070  3185  25A5  3180   	fcall	_SR_FRSTalk
  2419                           
  2420                           ;Radio.c: 63: count = 0;
  2421  0073  0020               	movlb	0	; select bank0
  2422  0074  01C4               	clrf	_count
  2423  0075  01C5               	clrf	_count+1
  2424                           
  2425                           ;Radio.c: 64: Talking = 0;
  2426  0076  01CC               	clrf	_Talking
  2427  0077                     l1854:	
  2428                           
  2429                           ;Radio.c: 65: }
  2430                           ;Radio.c: 66: }
  2431                           ;Radio.c: 67: if(Talking && !PORTAbits.RA2){
  2432  0077  0020               	movlb	0	; select bank0
  2433  0078  084C               	movf	_Talking,w
  2434  0079  1D03               	btfss	3,2
  2435  007A  190C               	btfsc	12,2	;volatile
  2436  007B  2880               	goto	l1860
  2437                           
  2438                           ;Radio.c: 68: count = 5;
  2439  007C  3005               	movlw	5
  2440  007D  00C4               	movwf	_count
  2441  007E  3000               	movlw	0
  2442  007F  00C5               	movwf	_count+1
  2443  0080                     l1860:	
  2444                           
  2445                           ;Radio.c: 69: }
  2446                           ;Radio.c: 70: if(!Talking && PORTAbits.RA2){
  2447  0080  084C               	movf	_Talking,w
  2448  0081  1903               	btfsc	3,2
  2449  0082  1D0C               	btfss	12,2	;volatile
  2450  0083  2886               	goto	l1866
  2451                           
  2452                           ;Radio.c: 71: count = 0;
  2453  0084  01C4               	clrf	_count
  2454  0085  01C5               	clrf	_count+1
  2455  0086                     l1866:	
  2456                           
  2457                           ;Radio.c: 72: }
  2458                           ;Radio.c: 73: if(GetTicker() > 100000){
  2459  0086  3186  2612  3180   	fcall	_GetTicker
  2460                           
  2461                           ;Radio.c: 77: }
  2462                           ;Radio.c: 78: if(time > 15){
  2463                           
  2464                           ;Radio.c: 76: PORTCbits.RC4 = 1;
  2465                           
  2466                           ;Radio.c: 75: SR_FRSPowerDown();
  2467  0089  0020               	movlb	0	; select bank0
  2468  008A  0849               	movf	_time+1,w
  2469  008B  3A80               	xorlw	128
  2470  008C  00C0               	movwf	??_RadioOperation
  2471  008D  3080               	movlw	128
  2472  008E  0240               	subwf	??_RadioOperation,w
  2473  008F  1D03               	skipz
  2474  0090  2893               	goto	u1985
  2475  0091  3010               	movlw	16
  2476  0092  0248               	subwf	_time,w
  2477  0093                     u1985:	
  2478  0093  1C03               	skipc
  2479  0094  28E7               	goto	l1880
  2480                           
  2481                           ;Radio.c: 79: PORTCbits.RC5 = 1;
  2482  0095  0020               	movlb	0	; select bank0
  2483  0096  168E               	bsf	14,5	;volatile
  2484                           
  2485                           ;Radio.c: 80: Battery = ReadVoltage(1);
  2486  0097  3001               	movlw	1
  2487  0098  3185  25B4  3180   	fcall	_ReadVoltage
  2488  009B  0873               	movf	?_ReadVoltage+1,w
  2489  009C  00FA               	movwf	___awtoft@c+1
  2490  009D  0872               	movf	?_ReadVoltage,w
  2491  009E  00F9               	movwf	___awtoft@c
  2492  009F  3184  24D4  3180   	fcall	___awtoft
  2493  00A2  0879               	movf	?___awtoft,w
  2494  00A3  0020               	movlb	0	; select bank0
  2495  00A4  00C1               	movwf	_Battery
  2496  00A5  087A               	movf	?___awtoft+1,w
  2497  00A6  00C2               	movwf	_Battery+1
  2498  00A7  087B               	movf	?___awtoft+2,w
  2499  00A8  00C3               	movwf	_Battery+2
  2500                           
  2501                           ;Radio.c: 81: Battery = (Battery*5.0)/1023.0;
  2502  00A9  30C0               	movlw	192
  2503  00AA  00B0               	movwf	___ftdiv@f2
  2504  00AB  307F               	movlw	127
  2505  00AC  00B1               	movwf	___ftdiv@f2+1
  2506  00AD  3044               	movlw	68
  2507  00AE  00B2               	movwf	___ftdiv@f2+2
  2508  00AF  3000               	movlw	0
  2509  00B0  00A0               	movwf	___ftmul@f1
  2510  00B1  30A0               	movlw	160
  2511  00B2  00A1               	movwf	___ftmul@f1+1
  2512  00B3  3040               	movlw	64
  2513  00B4  00A2               	movwf	___ftmul@f1+2
  2514  00B5  0841               	movf	_Battery,w
  2515  00B6  00A3               	movwf	___ftmul@f2
  2516  00B7  0842               	movf	_Battery+1,w
  2517  00B8  00A4               	movwf	___ftmul@f2+1
  2518  00B9  0843               	movf	_Battery+2,w
  2519  00BA  00A5               	movwf	___ftmul@f2+2
  2520  00BB  3181  211E  3180   	fcall	___ftmul
  2521  00BE  0020               	movlb	0	; select bank0
  2522  00BF  0820               	movf	?___ftmul,w
  2523  00C0  00B3               	movwf	___ftdiv@f1
  2524  00C1  0821               	movf	?___ftmul+1,w
  2525  00C2  00B4               	movwf	___ftdiv@f1+1
  2526  00C3  0822               	movf	?___ftmul+2,w
  2527  00C4  00B5               	movwf	___ftdiv@f1+2
  2528  00C5  3181  21D2  3180   	fcall	___ftdiv
  2529  00C8  0020               	movlb	0	; select bank0
  2530  00C9  0830               	movf	?___ftdiv,w
  2531  00CA  00C1               	movwf	_Battery
  2532  00CB  0831               	movf	?___ftdiv+1,w
  2533  00CC  00C2               	movwf	_Battery+1
  2534  00CD  0832               	movf	?___ftdiv+2,w
  2535  00CE  00C3               	movwf	_Battery+2
  2536                           
  2537                           ;Radio.c: 82: Battery = Battery*3;
  2538  00CF  3000               	movlw	0
  2539  00D0  00A0               	movwf	___ftmul@f1
  2540  00D1  3040               	movlw	64
  2541  00D2  00A1               	movwf	___ftmul@f1+1
  2542  00D3  3040               	movlw	64
  2543  00D4  00A2               	movwf	___ftmul@f1+2
  2544  00D5  0841               	movf	_Battery,w
  2545  00D6  00A3               	movwf	___ftmul@f2
  2546  00D7  0842               	movf	_Battery+1,w
  2547  00D8  00A4               	movwf	___ftmul@f2+1
  2548  00D9  0843               	movf	_Battery+2,w
  2549  00DA  00A5               	movwf	___ftmul@f2+2
  2550  00DB  3181  211E  3180   	fcall	___ftmul
  2551  00DE  0020               	movlb	0	; select bank0
  2552  00DF  0820               	movf	?___ftmul,w
  2553  00E0  00C1               	movwf	_Battery
  2554  00E1  0821               	movf	?___ftmul+1,w
  2555  00E2  00C2               	movwf	_Battery+1
  2556  00E3  0822               	movf	?___ftmul+2,w
  2557  00E4  00C3               	movwf	_Battery+2
  2558                           
  2559                           ;Radio.c: 83: time = 0;
  2560  00E5  01C8               	clrf	_time
  2561  00E6  01C9               	clrf	_time+1
  2562  00E7                     l1880:	
  2563                           
  2564                           ;Radio.c: 84: }
  2565                           ;Radio.c: 85: if((time > 1) && (PORTCbits.RC5 == 1)){
  2566  00E7  0020               	movlb	0	; select bank0
  2567  00E8  0849               	movf	_time+1,w
  2568  00E9  3A80               	xorlw	128
  2569  00EA  00C0               	movwf	??_RadioOperation
  2570  00EB  3080               	movlw	128
  2571  00EC  0240               	subwf	??_RadioOperation,w
  2572  00ED  1D03               	skipz
  2573  00EE  28F1               	goto	u1995
  2574  00EF  3002               	movlw	2
  2575  00F0  0248               	subwf	_time,w
  2576  00F1                     u1995:	
  2577  00F1  1C03               	skipc
  2578  00F2  28F7               	goto	l1886
  2579  00F3  0020               	movlb	0	; select bank0
  2580  00F4  1E8E               	btfss	14,5	;volatile
  2581  00F5  28F7               	goto	l1886
  2582                           
  2583                           ;Radio.c: 86: PORTCbits.RC5 = 0;
  2584  00F6  128E               	bcf	14,5	;volatile
  2585  00F7                     l1886:	
  2586                           
  2587                           ;Radio.c: 87: }
  2588                           ;Radio.c: 88: if(Battery < 6.2){
  2589  00F7  0020               	movlb	0	; select bank0
  2590  00F8  0841               	movf	_Battery,w
  2591  00F9  00F1               	movwf	___ftge@ff1
  2592  00FA  0842               	movf	_Battery+1,w
  2593  00FB  00F2               	movwf	___ftge@ff1+1
  2594  00FC  0843               	movf	_Battery+2,w
  2595  00FD  00F3               	movwf	___ftge@ff1+2
  2596  00FE  3066               	movlw	102
  2597  00FF  00F4               	movwf	___ftge@ff2
  2598  0100  30C6               	movlw	198
  2599  0101  00F5               	movwf	___ftge@ff2+1
  2600  0102  3040               	movlw	64
  2601  0103  00F6               	movwf	___ftge@ff2+2
  2602  0104  3183  23FB  3180   	fcall	___ftge
  2603                           
  2604                           ;Radio.c: 91: }
  2605                           ;Radio.c: 92: if(ReadCharger() == 1){
  2606  0107  3185  2581  3180   	fcall	_ReadCharger
  2607  010A  3A01               	xorlw	1
  2608  010B  1D03               	skipz
  2609  010C  290F               	goto	l1892
  2610                           
  2611                           ;Radio.c: 93: PORTCbits.RC4 = 1;
  2612  010D  0020               	movlb	0	; select bank0
  2613  010E  160E               	bsf	14,4	;volatile
  2614  010F                     l1892:	
  2615                           
  2616                           ;Radio.c: 94: }
  2617                           ;Radio.c: 95: if(ReadCharger() == 2){
  2618  010F  3185  2581  3180   	fcall	_ReadCharger
  2619  0112  3A02               	xorlw	2
  2620  0113  1D03               	skipz
  2621  0114  2918               	goto	l1896
  2622                           
  2623                           ;Radio.c: 96: PORTCbits.RC4 = 0;
  2624  0115  0020               	movlb	0	; select bank0
  2625  0116  120E               	bcf	14,4	;volatile
  2626                           
  2627                           ;Radio.c: 97: PORTCbits.RC5 = 1;
  2628  0117  168E               	bsf	14,5	;volatile
  2629  0118                     l1896:	
  2630                           
  2631                           ;Radio.c: 98: }
  2632                           ;Radio.c: 99: time++;
  2633  0118  3001               	movlw	1
  2634  0119  0020               	movlb	0	; select bank0
  2635  011A  07C8               	addwf	_time,f
  2636  011B  3000               	movlw	0
  2637  011C  3DC9               	addwfc	_time+1,f
  2638  011D  0008               	return
  2639  011E                     __end_of_RadioOperation:	
  2640                           
  2641                           	psect	text7
  2642  011E                     __ptext7:	
  2643 ;; *************** function ___ftmul *****************
  2644 ;; Defined at:
  2645 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  f1              3    0[BANK0 ] float 
  2648 ;;  f2              3    3[BANK0 ] float 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2651 ;;  sign            1   15[BANK0 ] unsigned char 
  2652 ;;  cntr            1   14[BANK0 ] unsigned char 
  2653 ;;  exp             1   10[BANK0 ] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  3    0[BANK0 ] float 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2663 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;Total ram usage:       16 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    3
  2670 ;; This function calls:
  2671 ;;		___ftpack
  2672 ;; This function is called by:
  2673 ;;		_RadioOperation
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function ___ftmul
  2679  011E                     ___ftmul:	
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2683  011E  0020               	movlb	0	; select bank0
  2684  011F  0820               	movf	___ftmul@f1,w
  2685  0120  00A6               	movwf	??___ftmul
  2686  0121  0821               	movf	___ftmul@f1+1,w
  2687  0122  00A7               	movwf	??___ftmul+1
  2688  0123  0822               	movf	___ftmul@f1+2,w
  2689  0124  00A8               	movwf	??___ftmul+2
  2690  0125  1003               	clrc
  2691  0126  0D27               	rlf	??___ftmul+1,w
  2692  0127  0D28               	rlf	??___ftmul+2,w
  2693  0128  00A9               	movwf	??___ftmul+3
  2694  0129  0829               	movf	??___ftmul+3,w
  2695  012A  00AA               	movwf	___ftmul@exp
  2696  012B  082A               	movf	___ftmul@exp,w
  2697  012C  1D03               	btfss	3,2
  2698  012D  2935               	goto	l1778
  2699  012E  3000               	movlw	0
  2700  012F  00A0               	movwf	?___ftmul
  2701  0130  3000               	movlw	0
  2702  0131  00A1               	movwf	?___ftmul+1
  2703  0132  3000               	movlw	0
  2704  0133  00A2               	movwf	?___ftmul+2
  2705  0134  0008               	return
  2706  0135                     l1778:	
  2707  0135  0823               	movf	___ftmul@f2,w
  2708  0136  00A6               	movwf	??___ftmul
  2709  0137  0824               	movf	___ftmul@f2+1,w
  2710  0138  00A7               	movwf	??___ftmul+1
  2711  0139  0825               	movf	___ftmul@f2+2,w
  2712  013A  00A8               	movwf	??___ftmul+2
  2713  013B  1003               	clrc
  2714  013C  0D27               	rlf	??___ftmul+1,w
  2715  013D  0D28               	rlf	??___ftmul+2,w
  2716  013E  00A9               	movwf	??___ftmul+3
  2717  013F  0829               	movf	??___ftmul+3,w
  2718  0140  00AF               	movwf	___ftmul@sign
  2719  0141  082F               	movf	___ftmul@sign,w
  2720  0142  1D03               	btfss	3,2
  2721  0143  294B               	goto	l1784
  2722  0144  3000               	movlw	0
  2723  0145  00A0               	movwf	?___ftmul
  2724  0146  3000               	movlw	0
  2725  0147  00A1               	movwf	?___ftmul+1
  2726  0148  3000               	movlw	0
  2727  0149  00A2               	movwf	?___ftmul+2
  2728  014A  0008               	return
  2729  014B                     l1784:	
  2730  014B  082F               	movf	___ftmul@sign,w
  2731  014C  3E7B               	addlw	123
  2732  014D  00A6               	movwf	??___ftmul
  2733  014E  0826               	movf	??___ftmul,w
  2734  014F  07AA               	addwf	___ftmul@exp,f
  2735  0150  0820               	movf	___ftmul@f1,w
  2736  0151  00A6               	movwf	??___ftmul
  2737  0152  0821               	movf	___ftmul@f1+1,w
  2738  0153  00A7               	movwf	??___ftmul+1
  2739  0154  0822               	movf	___ftmul@f1+2,w
  2740  0155  00A8               	movwf	??___ftmul+2
  2741  0156  3010               	movlw	16
  2742  0157                     u1775:	
  2743  0157  36A8               	lsrf	??___ftmul+2,f
  2744  0158  0CA7               	rrf	??___ftmul+1,f
  2745  0159  0CA6               	rrf	??___ftmul,f
  2746  015A  0B89               	decfsz	9,f
  2747  015B  2957               	goto	u1775
  2748  015C  0826               	movf	??___ftmul,w
  2749  015D  00A9               	movwf	??___ftmul+3
  2750  015E  0829               	movf	??___ftmul+3,w
  2751  015F  00AF               	movwf	___ftmul@sign
  2752  0160  0823               	movf	___ftmul@f2,w
  2753  0161  00A6               	movwf	??___ftmul
  2754  0162  0824               	movf	___ftmul@f2+1,w
  2755  0163  00A7               	movwf	??___ftmul+1
  2756  0164  0825               	movf	___ftmul@f2+2,w
  2757  0165  00A8               	movwf	??___ftmul+2
  2758  0166  3010               	movlw	16
  2759  0167                     u1785:	
  2760  0167  36A8               	lsrf	??___ftmul+2,f
  2761  0168  0CA7               	rrf	??___ftmul+1,f
  2762  0169  0CA6               	rrf	??___ftmul,f
  2763  016A  0B89               	decfsz	9,f
  2764  016B  2967               	goto	u1785
  2765  016C  0826               	movf	??___ftmul,w
  2766  016D  00A9               	movwf	??___ftmul+3
  2767  016E  0829               	movf	??___ftmul+3,w
  2768  016F  06AF               	xorwf	___ftmul@sign,f
  2769  0170  3080               	movlw	128
  2770  0171  00A6               	movwf	??___ftmul
  2771  0172  0826               	movf	??___ftmul,w
  2772  0173  05AF               	andwf	___ftmul@sign,f
  2773  0174  17A1               	bsf	___ftmul@f1+1,7
  2774  0175  17A4               	bsf	___ftmul@f2+1,7
  2775  0176  30FF               	movlw	255
  2776  0177  05A3               	andwf	___ftmul@f2,f
  2777  0178  30FF               	movlw	255
  2778  0179  05A4               	andwf	___ftmul@f2+1,f
  2779  017A  3000               	movlw	0
  2780  017B  05A5               	andwf	___ftmul@f2+2,f
  2781  017C  3000               	movlw	0
  2782  017D  00AB               	movwf	___ftmul@f3_as_product
  2783  017E  3000               	movlw	0
  2784  017F  00AC               	movwf	___ftmul@f3_as_product+1
  2785  0180  3000               	movlw	0
  2786  0181  00AD               	movwf	___ftmul@f3_as_product+2
  2787  0182  3007               	movlw	7
  2788  0183  00A6               	movwf	??___ftmul
  2789  0184  0826               	movf	??___ftmul,w
  2790  0185  00AE               	movwf	___ftmul@cntr
  2791  0186                     l1796:	
  2792  0186  1C20               	btfss	___ftmul@f1,0
  2793  0187  298E               	goto	l1800
  2794  0188  0823               	movf	___ftmul@f2,w
  2795  0189  07AB               	addwf	___ftmul@f3_as_product,f
  2796  018A  0824               	movf	___ftmul@f2+1,w
  2797  018B  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2798  018C  0825               	movf	___ftmul@f2+2,w
  2799  018D  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2800  018E                     l1800:	
  2801  018E  3001               	movlw	1
  2802  018F                     u1805:	
  2803  018F  36A2               	lsrf	___ftmul@f1+2,f
  2804  0190  0CA1               	rrf	___ftmul@f1+1,f
  2805  0191  0CA0               	rrf	___ftmul@f1,f
  2806  0192  0B89               	decfsz	9,f
  2807  0193  298F               	goto	u1805
  2808  0194  3001               	movlw	1
  2809  0195                     u1815:	
  2810  0195  35A3               	lslf	___ftmul@f2,f
  2811  0196  0DA4               	rlf	___ftmul@f2+1,f
  2812  0197  0DA5               	rlf	___ftmul@f2+2,f
  2813  0198  0B89               	decfsz	9,f
  2814  0199  2995               	goto	u1815
  2815  019A  3001               	movlw	1
  2816  019B  02AE               	subwf	___ftmul@cntr,f
  2817  019C  1D03               	btfss	3,2
  2818  019D  2986               	goto	l1796
  2819  019E  3009               	movlw	9
  2820  019F  00A6               	movwf	??___ftmul
  2821  01A0  0826               	movf	??___ftmul,w
  2822  01A1  00AE               	movwf	___ftmul@cntr
  2823  01A2                     l1808:	
  2824  01A2  1C20               	btfss	___ftmul@f1,0
  2825  01A3  29AA               	goto	l1812
  2826  01A4  0823               	movf	___ftmul@f2,w
  2827  01A5  07AB               	addwf	___ftmul@f3_as_product,f
  2828  01A6  0824               	movf	___ftmul@f2+1,w
  2829  01A7  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2830  01A8  0825               	movf	___ftmul@f2+2,w
  2831  01A9  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2832  01AA                     l1812:	
  2833  01AA  3001               	movlw	1
  2834  01AB                     u1845:	
  2835  01AB  36A2               	lsrf	___ftmul@f1+2,f
  2836  01AC  0CA1               	rrf	___ftmul@f1+1,f
  2837  01AD  0CA0               	rrf	___ftmul@f1,f
  2838  01AE  0B89               	decfsz	9,f
  2839  01AF  29AB               	goto	u1845
  2840  01B0  3001               	movlw	1
  2841  01B1                     u1855:	
  2842  01B1  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2843  01B2  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2844  01B3  0CAB               	rrf	___ftmul@f3_as_product,f
  2845  01B4  0B89               	decfsz	9,f
  2846  01B5  29B1               	goto	u1855
  2847  01B6  3001               	movlw	1
  2848  01B7  02AE               	subwf	___ftmul@cntr,f
  2849  01B8  1D03               	btfss	3,2
  2850  01B9  29A2               	goto	l1808
  2851  01BA  082B               	movf	___ftmul@f3_as_product,w
  2852  01BB  00F1               	movwf	___ftpack@arg
  2853  01BC  082C               	movf	___ftmul@f3_as_product+1,w
  2854  01BD  00F2               	movwf	___ftpack@arg+1
  2855  01BE  082D               	movf	___ftmul@f3_as_product+2,w
  2856  01BF  00F3               	movwf	___ftpack@arg+2
  2857  01C0  082A               	movf	___ftmul@exp,w
  2858  01C1  00A6               	movwf	??___ftmul
  2859  01C2  0826               	movf	??___ftmul,w
  2860  01C3  00F4               	movwf	___ftpack@exp
  2861  01C4  082F               	movf	___ftmul@sign,w
  2862  01C5  00A7               	movwf	??___ftmul+1
  2863  01C6  0827               	movf	??___ftmul+1,w
  2864  01C7  00F5               	movwf	___ftpack@sign
  2865  01C8  3183  2305         	fcall	___ftpack
  2866  01CA  0871               	movf	?___ftpack,w
  2867  01CB  0020               	movlb	0	; select bank0
  2868  01CC  00A0               	movwf	?___ftmul
  2869  01CD  0872               	movf	?___ftpack+1,w
  2870  01CE  00A1               	movwf	?___ftmul+1
  2871  01CF  0873               	movf	?___ftpack+2,w
  2872  01D0  00A2               	movwf	?___ftmul+2
  2873  01D1  0008               	return
  2874  01D2                     __end_of___ftmul:	
  2875                           
  2876                           	psect	text8
  2877  03FB                     __ptext8:	
  2878 ;; *************** function ___ftge *****************
  2879 ;; Defined at:
  2880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  ff1             3    1[COMMON] float 
  2883 ;;  ff2             3    4[COMMON] float 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2895 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2898 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2899 ;;Total ram usage:        9 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_RadioOperation
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           
  2910                           ;psect for function ___ftge
  2911  03FB                     ___ftge:	
  2912                           
  2913                           ;incstack = 0
  2914                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2915  03FB  1FF3               	btfss	___ftge@ff1+2,7
  2916  03FC  2C11               	goto	l1460
  2917  03FD  0971               	comf	___ftge@ff1,w
  2918  03FE  00F7               	movwf	??___ftge
  2919  03FF  0972               	comf	___ftge@ff1+1,w
  2920  0400  00F8               	movwf	??___ftge+1
  2921  0401  0973               	comf	___ftge@ff1+2,w
  2922  0402  00F9               	movwf	??___ftge+2
  2923  0403  0AF7               	incf	??___ftge,f
  2924  0404  1903               	skipnz
  2925  0405  0AF8               	incf	??___ftge+1,f
  2926  0406  1903               	skipnz
  2927  0407  0AF9               	incf	??___ftge+2,f
  2928  0408  3000               	movlw	0
  2929  0409  0777               	addwf	??___ftge,w
  2930  040A  00F1               	movwf	___ftge@ff1
  2931  040B  3000               	movlw	0
  2932  040C  3D78               	addwfc	??___ftge+1,w
  2933  040D  00F2               	movwf	___ftge@ff1+1
  2934  040E  3080               	movlw	128
  2935  040F  3D79               	addwfc	??___ftge+2,w
  2936  0410  00F3               	movwf	___ftge@ff1+2
  2937  0411                     l1460:	
  2938  0411  1FF6               	btfss	___ftge@ff2+2,7
  2939  0412  2C27               	goto	l1464
  2940  0413  0974               	comf	___ftge@ff2,w
  2941  0414  00F7               	movwf	??___ftge
  2942  0415  0975               	comf	___ftge@ff2+1,w
  2943  0416  00F8               	movwf	??___ftge+1
  2944  0417  0976               	comf	___ftge@ff2+2,w
  2945  0418  00F9               	movwf	??___ftge+2
  2946  0419  0AF7               	incf	??___ftge,f
  2947  041A  1903               	skipnz
  2948  041B  0AF8               	incf	??___ftge+1,f
  2949  041C  1903               	skipnz
  2950  041D  0AF9               	incf	??___ftge+2,f
  2951  041E  3000               	movlw	0
  2952  041F  0777               	addwf	??___ftge,w
  2953  0420  00F4               	movwf	___ftge@ff2
  2954  0421  3000               	movlw	0
  2955  0422  3D78               	addwfc	??___ftge+1,w
  2956  0423  00F5               	movwf	___ftge@ff2+1
  2957  0424  3080               	movlw	128
  2958  0425  3D79               	addwfc	??___ftge+2,w
  2959  0426  00F6               	movwf	___ftge@ff2+2
  2960  0427                     l1464:	
  2961  0427  3080               	movlw	128
  2962  0428  06F3               	xorwf	___ftge@ff1+2,f
  2963  0429  3080               	movlw	128
  2964  042A  06F6               	xorwf	___ftge@ff2+2,f
  2965  042B  0876               	movf	___ftge@ff2+2,w
  2966  042C  0273               	subwf	___ftge@ff1+2,w
  2967  042D  1D03               	skipz
  2968  042E  0008               	return
  2969  042F  0875               	movf	___ftge@ff2+1,w
  2970  0430  0272               	subwf	___ftge@ff1+1,w
  2971  0431  1D03               	skipz
  2972  0432  0008               	return
  2973  0433  0874               	movf	___ftge@ff2,w
  2974  0434  0271               	subwf	___ftge@ff1,w
  2975  0435  0008               	return
  2976  0436                     __end_of___ftge:	
  2977                           
  2978                           	psect	text9
  2979  01D2                     __ptext9:	
  2980 ;; *************** function ___ftdiv *****************
  2981 ;; Defined at:
  2982 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  f2              3   16[BANK0 ] float 
  2985 ;;  f1              3   19[BANK0 ] float 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  f3              3   27[BANK0 ] float 
  2988 ;;  sign            1   31[BANK0 ] unsigned char 
  2989 ;;  exp             1   30[BANK0 ] unsigned char 
  2990 ;;  cntr            1   26[BANK0 ] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  3   16[BANK0 ] float 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3000 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;Total ram usage:       16 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    3
  3007 ;; This function calls:
  3008 ;;		___ftpack
  3009 ;; This function is called by:
  3010 ;;		_RadioOperation
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function ___ftdiv
  3016  01D2                     ___ftdiv:	
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3020  01D2  0020               	movlb	0	; select bank0
  3021  01D3  0833               	movf	___ftdiv@f1,w
  3022  01D4  00B6               	movwf	??___ftdiv
  3023  01D5  0834               	movf	___ftdiv@f1+1,w
  3024  01D6  00B7               	movwf	??___ftdiv+1
  3025  01D7  0835               	movf	___ftdiv@f1+2,w
  3026  01D8  00B8               	movwf	??___ftdiv+2
  3027  01D9  1003               	clrc
  3028  01DA  0D37               	rlf	??___ftdiv+1,w
  3029  01DB  0D38               	rlf	??___ftdiv+2,w
  3030  01DC  00B9               	movwf	??___ftdiv+3
  3031  01DD  0839               	movf	??___ftdiv+3,w
  3032  01DE  00BE               	movwf	___ftdiv@exp
  3033  01DF  083E               	movf	___ftdiv@exp,w
  3034  01E0  1D03               	btfss	3,2
  3035  01E1  29E9               	goto	l1736
  3036  01E2  3000               	movlw	0
  3037  01E3  00B0               	movwf	?___ftdiv
  3038  01E4  3000               	movlw	0
  3039  01E5  00B1               	movwf	?___ftdiv+1
  3040  01E6  3000               	movlw	0
  3041  01E7  00B2               	movwf	?___ftdiv+2
  3042  01E8  0008               	return
  3043  01E9                     l1736:	
  3044  01E9  0830               	movf	___ftdiv@f2,w
  3045  01EA  00B6               	movwf	??___ftdiv
  3046  01EB  0831               	movf	___ftdiv@f2+1,w
  3047  01EC  00B7               	movwf	??___ftdiv+1
  3048  01ED  0832               	movf	___ftdiv@f2+2,w
  3049  01EE  00B8               	movwf	??___ftdiv+2
  3050  01EF  1003               	clrc
  3051  01F0  0D37               	rlf	??___ftdiv+1,w
  3052  01F1  0D38               	rlf	??___ftdiv+2,w
  3053  01F2  00B9               	movwf	??___ftdiv+3
  3054  01F3  0839               	movf	??___ftdiv+3,w
  3055  01F4  00BF               	movwf	___ftdiv@sign
  3056  01F5  083F               	movf	___ftdiv@sign,w
  3057  01F6  1D03               	btfss	3,2
  3058  01F7  29FF               	goto	l1742
  3059  01F8  3000               	movlw	0
  3060  01F9  00B0               	movwf	?___ftdiv
  3061  01FA  3000               	movlw	0
  3062  01FB  00B1               	movwf	?___ftdiv+1
  3063  01FC  3000               	movlw	0
  3064  01FD  00B2               	movwf	?___ftdiv+2
  3065  01FE  0008               	return
  3066  01FF                     l1742:	
  3067  01FF  3000               	movlw	0
  3068  0200  00BB               	movwf	___ftdiv@f3
  3069  0201  3000               	movlw	0
  3070  0202  00BC               	movwf	___ftdiv@f3+1
  3071  0203  3000               	movlw	0
  3072  0204  00BD               	movwf	___ftdiv@f3+2
  3073  0205  3089               	movlw	137
  3074  0206  073F               	addwf	___ftdiv@sign,w
  3075  0207  00B6               	movwf	??___ftdiv
  3076  0208  0836               	movf	??___ftdiv,w
  3077  0209  02BE               	subwf	___ftdiv@exp,f
  3078  020A  0833               	movf	___ftdiv@f1,w
  3079  020B  00B6               	movwf	??___ftdiv
  3080  020C  0834               	movf	___ftdiv@f1+1,w
  3081  020D  00B7               	movwf	??___ftdiv+1
  3082  020E  0835               	movf	___ftdiv@f1+2,w
  3083  020F  00B8               	movwf	??___ftdiv+2
  3084  0210  3010               	movlw	16
  3085  0211                     u1695:	
  3086  0211  36B8               	lsrf	??___ftdiv+2,f
  3087  0212  0CB7               	rrf	??___ftdiv+1,f
  3088  0213  0CB6               	rrf	??___ftdiv,f
  3089  0214  0B89               	decfsz	9,f
  3090  0215  2A11               	goto	u1695
  3091  0216  0836               	movf	??___ftdiv,w
  3092  0217  00B9               	movwf	??___ftdiv+3
  3093  0218  0839               	movf	??___ftdiv+3,w
  3094  0219  00BF               	movwf	___ftdiv@sign
  3095  021A  0830               	movf	___ftdiv@f2,w
  3096  021B  00B6               	movwf	??___ftdiv
  3097  021C  0831               	movf	___ftdiv@f2+1,w
  3098  021D  00B7               	movwf	??___ftdiv+1
  3099  021E  0832               	movf	___ftdiv@f2+2,w
  3100  021F  00B8               	movwf	??___ftdiv+2
  3101  0220  3010               	movlw	16
  3102  0221                     u1705:	
  3103  0221  36B8               	lsrf	??___ftdiv+2,f
  3104  0222  0CB7               	rrf	??___ftdiv+1,f
  3105  0223  0CB6               	rrf	??___ftdiv,f
  3106  0224  0B89               	decfsz	9,f
  3107  0225  2A21               	goto	u1705
  3108  0226  0836               	movf	??___ftdiv,w
  3109  0227  00B9               	movwf	??___ftdiv+3
  3110  0228  0839               	movf	??___ftdiv+3,w
  3111  0229  06BF               	xorwf	___ftdiv@sign,f
  3112  022A  3080               	movlw	128
  3113  022B  00B6               	movwf	??___ftdiv
  3114  022C  0836               	movf	??___ftdiv,w
  3115  022D  05BF               	andwf	___ftdiv@sign,f
  3116  022E  17B4               	bsf	___ftdiv@f1+1,7
  3117  022F  30FF               	movlw	255
  3118  0230  05B3               	andwf	___ftdiv@f1,f
  3119  0231  30FF               	movlw	255
  3120  0232  05B4               	andwf	___ftdiv@f1+1,f
  3121  0233  3000               	movlw	0
  3122  0234  05B5               	andwf	___ftdiv@f1+2,f
  3123  0235  17B1               	bsf	___ftdiv@f2+1,7
  3124  0236  30FF               	movlw	255
  3125  0237  05B0               	andwf	___ftdiv@f2,f
  3126  0238  30FF               	movlw	255
  3127  0239  05B1               	andwf	___ftdiv@f2+1,f
  3128  023A  3000               	movlw	0
  3129  023B  05B2               	andwf	___ftdiv@f2+2,f
  3130  023C  3018               	movlw	24
  3131  023D  00B6               	movwf	??___ftdiv
  3132  023E  0836               	movf	??___ftdiv,w
  3133  023F  00BA               	movwf	___ftdiv@cntr
  3134  0240                     l1756:	
  3135  0240  3001               	movlw	1
  3136  0241                     u1715:	
  3137  0241  35BB               	lslf	___ftdiv@f3,f
  3138  0242  0DBC               	rlf	___ftdiv@f3+1,f
  3139  0243  0DBD               	rlf	___ftdiv@f3+2,f
  3140  0244  0B89               	decfsz	9,f
  3141  0245  2A41               	goto	u1715
  3142  0246  0832               	movf	___ftdiv@f2+2,w
  3143  0247  0235               	subwf	___ftdiv@f1+2,w
  3144  0248  1D03               	skipz
  3145  0249  2A50               	goto	u1725
  3146  024A  0831               	movf	___ftdiv@f2+1,w
  3147  024B  0234               	subwf	___ftdiv@f1+1,w
  3148  024C  1D03               	skipz
  3149  024D  2A50               	goto	u1725
  3150  024E  0830               	movf	___ftdiv@f2,w
  3151  024F  0233               	subwf	___ftdiv@f1,w
  3152  0250                     u1725:	
  3153  0250  1C03               	skipc
  3154  0251  2A59               	goto	l1764
  3155  0252  0830               	movf	___ftdiv@f2,w
  3156  0253  02B3               	subwf	___ftdiv@f1,f
  3157  0254  0831               	movf	___ftdiv@f2+1,w
  3158  0255  3BB4               	subwfb	___ftdiv@f1+1,f
  3159  0256  0832               	movf	___ftdiv@f2+2,w
  3160  0257  3BB5               	subwfb	___ftdiv@f1+2,f
  3161  0258  143B               	bsf	___ftdiv@f3,0
  3162  0259                     l1764:	
  3163  0259  3001               	movlw	1
  3164  025A                     u1735:	
  3165  025A  35B3               	lslf	___ftdiv@f1,f
  3166  025B  0DB4               	rlf	___ftdiv@f1+1,f
  3167  025C  0DB5               	rlf	___ftdiv@f1+2,f
  3168  025D  0B89               	decfsz	9,f
  3169  025E  2A5A               	goto	u1735
  3170  025F  3001               	movlw	1
  3171  0260  02BA               	subwf	___ftdiv@cntr,f
  3172  0261  1D03               	btfss	3,2
  3173  0262  2A40               	goto	l1756
  3174  0263  083B               	movf	___ftdiv@f3,w
  3175  0264  00F1               	movwf	___ftpack@arg
  3176  0265  083C               	movf	___ftdiv@f3+1,w
  3177  0266  00F2               	movwf	___ftpack@arg+1
  3178  0267  083D               	movf	___ftdiv@f3+2,w
  3179  0268  00F3               	movwf	___ftpack@arg+2
  3180  0269  083E               	movf	___ftdiv@exp,w
  3181  026A  00B6               	movwf	??___ftdiv
  3182  026B  0836               	movf	??___ftdiv,w
  3183  026C  00F4               	movwf	___ftpack@exp
  3184  026D  083F               	movf	___ftdiv@sign,w
  3185  026E  00B7               	movwf	??___ftdiv+1
  3186  026F  0837               	movf	??___ftdiv+1,w
  3187  0270  00F5               	movwf	___ftpack@sign
  3188  0271  3183  2305         	fcall	___ftpack
  3189  0273  0871               	movf	?___ftpack,w
  3190  0274  0020               	movlb	0	; select bank0
  3191  0275  00B0               	movwf	?___ftdiv
  3192  0276  0872               	movf	?___ftpack+1,w
  3193  0277  00B1               	movwf	?___ftdiv+1
  3194  0278  0873               	movf	?___ftpack+2,w
  3195  0279  00B2               	movwf	?___ftdiv+2
  3196  027A  0008               	return
  3197  027B                     __end_of___ftdiv:	
  3198                           
  3199                           	psect	text10
  3200  04D4                     __ptext10:	
  3201 ;; *************** function ___awtoft *****************
  3202 ;; Defined at:
  3203 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  c               2    9[COMMON] int 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  sign            1    2[BANK0 ] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  3    9[COMMON] float 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, pclath, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3217 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;Total ram usage:        6 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    3
  3224 ;; This function calls:
  3225 ;;		___ftpack
  3226 ;; This function is called by:
  3227 ;;		_RadioOperation
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function ___awtoft
  3233  04D4                     ___awtoft:	
  3234                           
  3235                           ;incstack = 0
  3236                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3237  04D4  0020               	movlb	0	; select bank0
  3238  04D5  01A2               	clrf	___awtoft@sign
  3239  04D6  1FFA               	btfss	___awtoft@c+1,7
  3240  04D7  2CDF               	goto	l1726
  3241  04D8  09F9               	comf	___awtoft@c,f
  3242  04D9  09FA               	comf	___awtoft@c+1,f
  3243  04DA  0AF9               	incf	___awtoft@c,f
  3244  04DB  1903               	skipnz
  3245  04DC  0AFA               	incf	___awtoft@c+1,f
  3246  04DD  01A2               	clrf	___awtoft@sign
  3247  04DE  0AA2               	incf	___awtoft@sign,f
  3248  04DF                     l1726:	
  3249  04DF  0879               	movf	___awtoft@c,w
  3250  04E0  00F1               	movwf	___ftpack@arg
  3251  04E1  087A               	movf	___awtoft@c+1,w
  3252  04E2  00F2               	movwf	___ftpack@arg+1
  3253  04E3  01F3               	clrf	___ftpack@arg+2
  3254  04E4  308E               	movlw	142
  3255  04E5  00A0               	movwf	??___awtoft
  3256  04E6  0820               	movf	??___awtoft,w
  3257  04E7  00F4               	movwf	___ftpack@exp
  3258  04E8  0822               	movf	___awtoft@sign,w
  3259  04E9  00A1               	movwf	??___awtoft+1
  3260  04EA  0821               	movf	??___awtoft+1,w
  3261  04EB  00F5               	movwf	___ftpack@sign
  3262  04EC  3183  2305         	fcall	___ftpack
  3263  04EE  0871               	movf	?___ftpack,w
  3264  04EF  00F9               	movwf	?___awtoft
  3265  04F0  0872               	movf	?___ftpack+1,w
  3266  04F1  00FA               	movwf	?___awtoft+1
  3267  04F2  0873               	movf	?___ftpack+2,w
  3268  04F3  00FB               	movwf	?___awtoft+2
  3269  04F4  0008               	return
  3270  04F5                     __end_of___awtoft:	
  3271                           
  3272                           	psect	text11
  3273  0305                     __ptext11:	
  3274 ;; *************** function ___ftpack *****************
  3275 ;; Defined at:
  3276 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  arg             3    1[COMMON] unsigned um
  3279 ;;  exp             1    4[COMMON] unsigned char 
  3280 ;;  sign            1    5[COMMON] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  3    1[COMMON] float 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3292 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;Total ram usage:        8 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    2
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		___awtoft
  3303 ;;		___ftdiv
  3304 ;;		___ftmul
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function ___ftpack
  3310  0305                     ___ftpack:	
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3314  0305  0874               	movf	___ftpack@exp,w
  3315  0306  1903               	btfsc	3,2
  3316  0307  2B0D               	goto	l1672
  3317  0308  0873               	movf	___ftpack@arg+2,w
  3318  0309  0472               	iorwf	___ftpack@arg+1,w
  3319  030A  0471               	iorwf	___ftpack@arg,w
  3320  030B  1D03               	skipz
  3321  030C  2B1E               	goto	l1678
  3322  030D                     l1672:	
  3323  030D  3000               	movlw	0
  3324  030E  00F1               	movwf	?___ftpack
  3325  030F  3000               	movlw	0
  3326  0310  00F2               	movwf	?___ftpack+1
  3327  0311  3000               	movlw	0
  3328  0312  00F3               	movwf	?___ftpack+2
  3329  0313  0008               	return
  3330  0314                     l1676:	
  3331  0314  3001               	movlw	1
  3332  0315  00F6               	movwf	??___ftpack
  3333  0316  0876               	movf	??___ftpack,w
  3334  0317  07F4               	addwf	___ftpack@exp,f
  3335  0318  3001               	movlw	1
  3336  0319                     u1565:	
  3337  0319  36F3               	lsrf	___ftpack@arg+2,f
  3338  031A  0CF2               	rrf	___ftpack@arg+1,f
  3339  031B  0CF1               	rrf	___ftpack@arg,f
  3340  031C  0B89               	decfsz	9,f
  3341  031D  2B19               	goto	u1565
  3342  031E                     l1678:	
  3343  031E  30FE               	movlw	254
  3344  031F  0573               	andwf	___ftpack@arg+2,w
  3345  0320  1903               	btfsc	3,2
  3346  0321  2B37               	goto	l547
  3347  0322  2B14               	goto	l1676
  3348  0323                     l1680:	
  3349  0323  3001               	movlw	1
  3350  0324  00F6               	movwf	??___ftpack
  3351  0325  0876               	movf	??___ftpack,w
  3352  0326  07F4               	addwf	___ftpack@exp,f
  3353  0327  3001               	movlw	1
  3354  0328  07F1               	addwf	___ftpack@arg,f
  3355  0329  3000               	movlw	0
  3356  032A  1803               	skipnc
  3357  032B  3001               	movlw	1
  3358  032C  07F2               	addwf	___ftpack@arg+1,f
  3359  032D  3000               	movlw	0
  3360  032E  1803               	skipnc
  3361  032F  3001               	movlw	1
  3362  0330  07F3               	addwf	___ftpack@arg+2,f
  3363  0331  3001               	movlw	1
  3364  0332                     u1585:	
  3365  0332  36F3               	lsrf	___ftpack@arg+2,f
  3366  0333  0CF2               	rrf	___ftpack@arg+1,f
  3367  0334  0CF1               	rrf	___ftpack@arg,f
  3368  0335  0B89               	decfsz	9,f
  3369  0336  2B32               	goto	u1585
  3370  0337                     l547:	
  3371  0337  30FF               	movlw	255
  3372  0338  0573               	andwf	___ftpack@arg+2,w
  3373  0339  1903               	btfsc	3,2
  3374  033A  2B44               	goto	l1688
  3375  033B  2B23               	goto	l1680
  3376  033C                     l1686:	
  3377  033C  3001               	movlw	1
  3378  033D  02F4               	subwf	___ftpack@exp,f
  3379  033E  3001               	movlw	1
  3380  033F                     u1605:	
  3381  033F  35F1               	lslf	___ftpack@arg,f
  3382  0340  0DF2               	rlf	___ftpack@arg+1,f
  3383  0341  0DF3               	rlf	___ftpack@arg+2,f
  3384  0342  0B89               	decfsz	9,f
  3385  0343  2B3F               	goto	u1605
  3386  0344                     l1688:	
  3387  0344  1BF2               	btfsc	___ftpack@arg+1,7
  3388  0345  2B4A               	goto	l554
  3389  0346  3002               	movlw	2
  3390  0347  0274               	subwf	___ftpack@exp,w
  3391  0348  1803               	skipnc
  3392  0349  2B3C               	goto	l1686
  3393  034A                     l554:	
  3394  034A  1874               	btfsc	___ftpack@exp,0
  3395  034B  2B52               	goto	l555
  3396  034C  30FF               	movlw	255
  3397  034D  05F1               	andwf	___ftpack@arg,f
  3398  034E  307F               	movlw	127
  3399  034F  05F2               	andwf	___ftpack@arg+1,f
  3400  0350  30FF               	movlw	255
  3401  0351  05F3               	andwf	___ftpack@arg+2,f
  3402  0352                     l555:	
  3403  0352  1003               	clrc
  3404  0353  0CF4               	rrf	___ftpack@exp,f
  3405  0354  0874               	movf	___ftpack@exp,w
  3406  0355  00F6               	movwf	??___ftpack
  3407  0356  01F7               	clrf	??___ftpack+1
  3408  0357  01F8               	clrf	??___ftpack+2
  3409  0358  3010               	movlw	16
  3410  0359                     u1645:	
  3411  0359  35F6               	lslf	??___ftpack,f
  3412  035A  0DF7               	rlf	??___ftpack+1,f
  3413  035B  0DF8               	rlf	??___ftpack+2,f
  3414  035C  0B89               	decfsz	9,f
  3415  035D  2B59               	goto	u1645
  3416  035E  0876               	movf	??___ftpack,w
  3417  035F  04F1               	iorwf	___ftpack@arg,f
  3418  0360  0877               	movf	??___ftpack+1,w
  3419  0361  04F2               	iorwf	___ftpack@arg+1,f
  3420  0362  0878               	movf	??___ftpack+2,w
  3421  0363  04F3               	iorwf	___ftpack@arg+2,f
  3422  0364  0875               	movf	___ftpack@sign,w
  3423  0365  1903               	btfsc	3,2
  3424  0366  0008               	return
  3425  0367  17F3               	bsf	___ftpack@arg+2,7
  3426  0368  0008               	return
  3427  0369                     __end_of___ftpack:	
  3428                           
  3429                           	psect	text12
  3430  05A5                     __ptext12:	
  3431 ;; *************** function _SR_FRSTalk *****************
  3432 ;; Defined at:
  3433 ;;		line 22 in file "SR_FRS.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;Total ram usage:        1 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    2
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_RadioOperation
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function _SR_FRSTalk
  3463  05A5                     _SR_FRSTalk:	
  3464                           
  3465                           ;SR_FRS.c: 23: PORTCbits.RC7 ^= 1;
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in _SR_FRSTalk: [wreg+status,2+status,0]
  3469  05A5  0020               	movlb	0	; select bank0
  3470  05A6  0D0E               	rlf	14,w	;volatile
  3471  05A7  0D0E               	rlf	14,w	;volatile
  3472  05A8  3901               	andlw	1
  3473  05A9  00F1               	movwf	??_SR_FRSTalk
  3474  05AA  3001               	movlw	1
  3475  05AB  06F1               	xorwf	??_SR_FRSTalk,f
  3476  05AC  0CF1               	rrf	??_SR_FRSTalk,f
  3477  05AD  0CF1               	rrf	??_SR_FRSTalk,f
  3478  05AE  080E               	movf	14,w	;volatile
  3479  05AF  0671               	xorwf	??_SR_FRSTalk,w
  3480  05B0  397F               	andlw	-129
  3481  05B1  0671               	xorwf	??_SR_FRSTalk,w
  3482  05B2  008E               	movwf	14	;volatile
  3483  05B3  0008               	return
  3484  05B4                     __end_of_SR_FRSTalk:	
  3485                           
  3486                           	psect	text13
  3487  05B4                     __ptext13:	
  3488 ;; *************** function _ReadVoltage *****************
  3489 ;; Defined at:
  3490 ;;		line 32 in file "ADC.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  ch              1    wreg     unsigned char 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  ch              1    5[COMMON] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  2    2[COMMON] int 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, pclath, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3504 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;Total ram usage:        4 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    3
  3511 ;; This function calls:
  3512 ;;		_SetADCChannel
  3513 ;; This function is called by:
  3514 ;;		_RadioOperation
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _ReadVoltage
  3520  05B4                     _ReadVoltage:	
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _ReadVoltage: [wreg+status,2+status,0+pclath+cstack]
  3524                           ;ReadVoltage@ch stored from wreg
  3525  05B4  00F5               	movwf	ReadVoltage@ch
  3526                           
  3527                           ;ADC.c: 33: SetADCChannel(ch);
  3528  05B5  0875               	movf	ReadVoltage@ch,w
  3529  05B6  3184  24F5  3185   	fcall	_SetADCChannel
  3530                           
  3531                           ;ADC.c: 34: ADCON0bits.GO_nDONE = 1;
  3532  05B9  0021               	movlb	1	; select bank1
  3533  05BA  149D               	bsf	29,1	;volatile
  3534  05BB                     l272:	
  3535                           ;ADC.c: 35: while(ADCON0bits.GO_nDONE);
  3536                           
  3537  05BB  189D               	btfsc	29,1	;volatile
  3538  05BC  2DBB               	goto	l272
  3539                           
  3540                           ;ADC.c: 36: return ((ADRESL << 8) + ADRESL);
  3541  05BD  081B               	movf	27,w	;volatile
  3542  05BE  00F3               	movwf	?_ReadVoltage+1
  3543  05BF  081B               	movf	27,w	;volatile
  3544  05C0  00F2               	movwf	?_ReadVoltage
  3545  05C1  0008               	return
  3546  05C2                     __end_of_ReadVoltage:	
  3547                           
  3548                           	psect	text14
  3549  04F5                     __ptext14:	
  3550 ;; *************** function _SetADCChannel *****************
  3551 ;; Defined at:
  3552 ;;		line 45 in file "ADC.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  ch              1    wreg     unsigned char 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  ch              1    1[COMMON] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;Total ram usage:        1 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    2
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_ReadVoltage
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _SetADCChannel
  3582  04F5                     _SetADCChannel:	
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in _SetADCChannel: [wreg+status,2+status,0]
  3586                           ;SetADCChannel@ch stored from wreg
  3587  04F5  00F1               	movwf	SetADCChannel@ch
  3588                           
  3589                           ;ADC.c: 46: if(ch == 1){
  3590  04F6  0371               	decf	SetADCChannel@ch,w
  3591  04F7  1D03               	btfss	3,2
  3592  04F8  2CFF               	goto	l1304
  3593                           
  3594                           ;ADC.c: 47: ADCON0bits.CHS = 6;
  3595  04F9  0021               	movlb	1	; select bank1
  3596  04FA  081D               	movf	29,w	;volatile
  3597  04FB  3983               	andlw	-125
  3598  04FC  3818               	iorlw	24
  3599  04FD  009D               	movwf	29	;volatile
  3600                           
  3601                           ;ADC.c: 48: }
  3602  04FE  0008               	return
  3603  04FF                     l1304:	
  3604                           
  3605                           ;ADC.c: 49: else if(ch == 2){
  3606  04FF  3002               	movlw	2
  3607  0500  0671               	xorwf	SetADCChannel@ch,w
  3608  0501  1D03               	btfss	3,2
  3609  0502  2D09               	goto	l1308
  3610                           
  3611                           ;ADC.c: 50: ADCON0bits.CHS = 29;
  3612  0503  0021               	movlb	1	; select bank1
  3613  0504  081D               	movf	29,w	;volatile
  3614  0505  3983               	andlw	-125
  3615  0506  3874               	iorlw	116
  3616  0507  009D               	movwf	29	;volatile
  3617                           
  3618                           ;ADC.c: 51: }
  3619  0508  0008               	return
  3620  0509                     l1308:	
  3621                           
  3622                           ;ADC.c: 52: else if(ch == 3){
  3623  0509  3003               	movlw	3
  3624  050A  0671               	xorwf	SetADCChannel@ch,w
  3625  050B  1D03               	btfss	3,2
  3626  050C  0008               	return
  3627                           
  3628                           ;ADC.c: 53: ADCON0bits.CHS = 3;
  3629  050D  0021               	movlb	1	; select bank1
  3630  050E  081D               	movf	29,w	;volatile
  3631  050F  3983               	andlw	-125
  3632  0510  380C               	iorlw	12
  3633  0511  009D               	movwf	29	;volatile
  3634  0512  0008               	return
  3635  0513                     __end_of_SetADCChannel:	
  3636                           
  3637                           	psect	text15
  3638  0581                     __ptext15:	
  3639 ;; *************** function _ReadCharger *****************
  3640 ;; Defined at:
  3641 ;;		line 135 in file "Function.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      unsigned char 
  3648 ;; Registers used:
  3649 ;;		wreg
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3659 ;;Total ram usage:        0 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    2
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_RadioOperation
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function _ReadCharger
  3671  0581                     _ReadCharger:	
  3672                           
  3673                           ;Function.c: 137: if(!PORTCbits.RC0 && PORTCbits.RC1){
  3674                           
  3675                           ;incstack = 0
  3676                           ; Regs used in _ReadCharger: [wreg]
  3677  0581  0020               	movlb	0	; select bank0
  3678  0582  1C0E               	btfss	14,0	;volatile
  3679  0583  1C8E               	btfss	14,1	;volatile
  3680  0584  2D87               	goto	l76
  3681                           
  3682                           ;Function.c: 138: return 1;
  3683  0585  3001               	movlw	1
  3684  0586  0008               	return
  3685  0587                     l76:	
  3686                           
  3687                           ;Function.c: 139: }
  3688                           ;Function.c: 141: if(PORTCbits.RC0 && !PORTCbits.RC1){
  3689  0587  180E               	btfsc	14,0	;volatile
  3690  0588  188E               	btfsc	14,1	;volatile
  3691  0589  2D8C               	goto	l78
  3692                           
  3693                           ;Function.c: 142: return 2;
  3694  058A  3002               	movlw	2
  3695  058B  0008               	return
  3696  058C                     l78:	
  3697                           
  3698                           ;Function.c: 143: }
  3699                           ;Function.c: 145: if(PORTCbits.RC0 && PORTCbits.RC1){
  3700  058C  180E               	btfsc	14,0	;volatile
  3701  058D  1C8E               	btfss	14,1	;volatile
  3702  058E  2D91               	goto	l1366
  3703                           
  3704                           ;Function.c: 146: return 0;
  3705  058F  3000               	movlw	0
  3706                           
  3707                           ;Function.c: 147: }
  3708  0590  0008               	return
  3709  0591                     l1366:	
  3710                           
  3711                           ;Function.c: 148: else{
  3712                           ;Function.c: 149: return 255;
  3713  0591  30FF               	movlw	255
  3714  0592  0008               	return
  3715  0593                     __end_of_ReadCharger:	
  3716                           
  3717                           	psect	text16
  3718  0612                     __ptext16:	
  3719 ;; *************** function _GetTicker *****************
  3720 ;; Defined at:
  3721 ;;		line 67 in file "Timer.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;		None
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  2  114[None  ] unsigned int 
  3728 ;; Registers used:
  3729 ;;		None
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    2
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_RadioOperation
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function _GetTicker
  3751  0612                     _GetTicker:	
  3752                           
  3753                           ;Timer.c: 68: return ticker;
  3754                           ;	Return value of _GetTicker is never used
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _GetTicker: []
  3758  0612  0008               	return
  3759  0613                     __end_of_GetTicker:	
  3760                           
  3761                           	psect	text17
  3762  060A                     __ptext17:	
  3763 ;; *************** function _ClearTicker *****************
  3764 ;; Defined at:
  3765 ;;		line 63 in file "Timer.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		status,2
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    2
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_RadioOperation
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _ClearTicker
  3795  060A                     _ClearTicker:	
  3796                           
  3797                           ;Timer.c: 64: ticker = 0;
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in _ClearTicker: [status,2]
  3801  060A  0020               	movlb	0	; select bank0
  3802  060B  01C6               	clrf	_ticker
  3803  060C  01C7               	clrf	_ticker+1
  3804  060D  0008               	return
  3805  060E                     __end_of_ClearTicker:	
  3806                           
  3807                           	psect	text18
  3808  060E                     __ptext18:	
  3809 ;; *************** function _RadioBegin *****************
  3810 ;; Defined at:
  3811 ;;		line 36 in file "Radio.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    7
  3832 ;; This function calls:
  3833 ;;		_SR_FRSStart
  3834 ;; This function is called by:
  3835 ;;		_main
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function _RadioBegin
  3841  060E                     _RadioBegin:	
  3842                           
  3843                           ;Radio.c: 37: SR_FRSStart();
  3844                           
  3845                           ;incstack = 0
  3846                           ; Regs used in _RadioBegin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3847  060E  3183  23B4         	fcall	_SR_FRSStart
  3848  0610  0008               	return
  3849  0611                     __end_of_RadioBegin:	
  3850                           
  3851                           	psect	text19
  3852  03B4                     __ptext19:	
  3853 ;; *************** function _SR_FRSStart *****************
  3854 ;; Defined at:
  3855 ;;		line 42 in file "SR_FRS.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;Total ram usage:        0 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    6
  3876 ;; This function calls:
  3877 ;;		_Delay
  3878 ;;		_SR_FRSPowerDown
  3879 ;;		_SetCommandMode
  3880 ;;		_SetFrequency
  3881 ;;		_SetMIC
  3882 ;;		_SetPowerSave
  3883 ;;		_SetVOX
  3884 ;;		_SetVolume
  3885 ;; This function is called by:
  3886 ;;		_RadioBegin
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _SR_FRSStart
  3892  03B4                     _SR_FRSStart:	
  3893                           
  3894                           ;SR_FRS.c: 43: SR_FRSPowerDown();
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in _SR_FRSStart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3898  03B4  3185  2593  3183   	fcall	_SR_FRSPowerDown
  3899                           
  3900                           ;SR_FRS.c: 44: Delay(500);
  3901  03B7  30F4               	movlw	244
  3902  03B8  00F1               	movwf	Delay@wait
  3903  03B9  3001               	movlw	1
  3904  03BA  00F2               	movwf	Delay@wait+1
  3905  03BB  3185  252C  3183   	fcall	_Delay
  3906                           
  3907                           ;SR_FRS.c: 45: SetCommandMode();
  3908  03BE  3185  2558  3183   	fcall	_SetCommandMode
  3909                           
  3910                           ;SR_FRS.c: 46: Delay(1000);
  3911  03C1  30E8               	movlw	232
  3912  03C2  00F1               	movwf	Delay@wait
  3913  03C3  3003               	movlw	3
  3914  03C4  00F2               	movwf	Delay@wait+1
  3915  03C5  3185  252C  3183   	fcall	_Delay
  3916                           
  3917                           ;SR_FRS.c: 47: SetFrequency();
  3918  03C8  3185  2543  3183   	fcall	_SetFrequency
  3919                           
  3920                           ;SR_FRS.c: 48: Delay(1000);
  3921  03CB  30E8               	movlw	232
  3922  03CC  00F1               	movwf	Delay@wait
  3923  03CD  3003               	movlw	3
  3924  03CE  00F2               	movwf	Delay@wait+1
  3925  03CF  3185  252C  3183   	fcall	_Delay
  3926                           
  3927                           ;SR_FRS.c: 49: SetPowerSave();
  3928  03D2  3185  2513  3183   	fcall	_SetPowerSave
  3929                           
  3930                           ;SR_FRS.c: 50: Delay(1000);
  3931  03D5  30E8               	movlw	232
  3932  03D6  00F1               	movwf	Delay@wait
  3933  03D7  3003               	movlw	3
  3934  03D8  00F2               	movwf	Delay@wait+1
  3935  03D9  3185  252C  3183   	fcall	_Delay
  3936                           
  3937                           ;SR_FRS.c: 51: SetVolume(7);
  3938  03DC  3007               	movlw	7
  3939  03DD  3184  2487  3183   	fcall	_SetVolume
  3940                           
  3941                           ;SR_FRS.c: 52: Delay(1000);
  3942  03E0  30E8               	movlw	232
  3943  03E1  00F1               	movwf	Delay@wait
  3944  03E2  3003               	movlw	3
  3945  03E3  00F2               	movwf	Delay@wait+1
  3946  03E4  3185  252C  3183   	fcall	_Delay
  3947                           
  3948                           ;SR_FRS.c: 53: SetVOX(0);
  3949  03E7  3000               	movlw	0
  3950  03E8  0020               	movlb	0	; select bank0
  3951  03E9  00A3               	movwf	SetVOX@volume
  3952  03EA  00A4               	movwf	SetVOX@volume+1
  3953  03EB  3184  245F  3183   	fcall	_SetVOX
  3954                           
  3955                           ;SR_FRS.c: 54: Delay(1000);
  3956  03EE  30E8               	movlw	232
  3957  03EF  00F1               	movwf	Delay@wait
  3958  03F0  3003               	movlw	3
  3959  03F1  00F2               	movwf	Delay@wait+1
  3960  03F2  3185  252C  3183   	fcall	_Delay
  3961                           
  3962                           ;SR_FRS.c: 55: SetMIC(8,0);
  3963  03F5  0020               	movlb	0	; select bank0
  3964  03F6  01A3               	clrf	SetMIC@scram
  3965  03F7  3008               	movlw	8
  3966  03F8  3184  24AE         	fcall	_SetMIC
  3967  03FA  0008               	return
  3968  03FB                     __end_of_SR_FRSStart:	
  3969                           
  3970                           	psect	text20
  3971  0487                     __ptext20:	
  3972 ;; *************** function _SetVolume *****************
  3973 ;; Defined at:
  3974 ;;		line 101 in file "SR_FRS.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  volume          1    wreg     unsigned char 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  volume          1    5[BANK0 ] unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3990 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3991 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3992 ;;Total ram usage:        3 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    5
  3995 ;; This function calls:
  3996 ;;		_printf
  3997 ;; This function is called by:
  3998 ;;		_SR_FRSStart
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           
  4003                           ;psect for function _SetVolume
  4004  0487                     _SetVolume:	
  4005                           
  4006                           ;incstack = 0
  4007                           ; Regs used in _SetVolume: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4008                           ;SetVolume@volume stored from wreg
  4009  0487  0020               	movlb	0	; select bank0
  4010  0488  00A5               	movwf	SetVolume@volume
  4011                           
  4012                           ;SR_FRS.c: 102: if((volume < 9) && (volume > 1)){
  4013  0489  3009               	movlw	9
  4014  048A  0225               	subwf	SetVolume@volume,w
  4015  048B  1803               	skipnc
  4016  048C  0008               	return
  4017  048D  3002               	movlw	2
  4018  048E  0225               	subwf	SetVolume@volume,w
  4019  048F  1C03               	skipc
  4020  0490  0008               	return
  4021                           
  4022                           ;SR_FRS.c: 103: printf("\r\n");
  4023  0491  3002               	movlw	low (STR_1| (0+32768))
  4024  0492  00F3               	movwf	printf@f
  4025  0493  3083               	movlw	high (STR_1| (0+32768))
  4026  0494  00F4               	movwf	printf@f+1
  4027  0495  3183  2369  3184   	fcall	_printf
  4028                           
  4029                           ;SR_FRS.c: 104: printf("AT+DMOSETVOLUME=%c",volume);
  4030  0498  30D1               	movlw	low (STR_11| (0+32768))
  4031  0499  00F3               	movwf	printf@f
  4032  049A  3082               	movlw	high (STR_11| (0+32768))
  4033  049B  00F4               	movwf	printf@f+1
  4034  049C  0020               	movlb	0	; select bank0
  4035  049D  0825               	movf	SetVolume@volume,w
  4036  049E  00A3               	movwf	??_SetVolume
  4037  049F  01A4               	clrf	??_SetVolume+1
  4038  04A0  0823               	movf	??_SetVolume,w
  4039  04A1  00F5               	movwf	?_printf+2
  4040  04A2  0824               	movf	??_SetVolume+1,w
  4041  04A3  00F6               	movwf	?_printf+3
  4042  04A4  3183  2369  3184   	fcall	_printf
  4043                           
  4044                           ;SR_FRS.c: 105: printf("\r\n");
  4045  04A7  3002               	movlw	low (STR_1| (0+32768))
  4046  04A8  00F3               	movwf	printf@f
  4047  04A9  3083               	movlw	high (STR_1| (0+32768))
  4048  04AA  00F4               	movwf	printf@f+1
  4049  04AB  3183  2369         	fcall	_printf
  4050  04AD  0008               	return
  4051  04AE                     __end_of_SetVolume:	
  4052                           
  4053                           	psect	text21
  4054  045F                     __ptext21:	
  4055 ;; *************** function _SetVOX *****************
  4056 ;; Defined at:
  4057 ;;		line 115 in file "SR_FRS.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  volume          2    3[BANK0 ] int 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;Total ram usage:        3 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    5
  4078 ;; This function calls:
  4079 ;;		_printf
  4080 ;; This function is called by:
  4081 ;;		_SR_FRSStart
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function _SetVOX
  4087  045F                     _SetVOX:	
  4088                           
  4089                           ;SR_FRS.c: 116: if((volume < 8) && (volume >= 0)){
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _SetVOX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4093  045F  0020               	movlb	0	; select bank0
  4094  0460  0824               	movf	SetVOX@volume+1,w
  4095  0461  3A80               	xorlw	128
  4096  0462  00A5               	movwf	??_SetVOX
  4097  0463  3080               	movlw	128
  4098  0464  0225               	subwf	??_SetVOX,w
  4099  0465  3008               	movlw	8
  4100  0466  1903               	btfsc	3,2
  4101  0467  0223               	subwf	SetVOX@volume,w
  4102  0468  1803               	skipnc
  4103  0469  0008               	return
  4104  046A  0020               	movlb	0	; select bank0
  4105  046B  1BA4               	btfsc	SetVOX@volume+1,7
  4106  046C  0008               	return
  4107                           
  4108                           ;SR_FRS.c: 117: printf("\r\n");
  4109  046D  3002               	movlw	low (STR_1| (0+32768))
  4110  046E  00F3               	movwf	printf@f
  4111  046F  3083               	movlw	high (STR_1| (0+32768))
  4112  0470  00F4               	movwf	printf@f+1
  4113  0471  3183  2369  3184   	fcall	_printf
  4114                           
  4115                           ;SR_FRS.c: 118: printf("AT+DMOSETVOX=%c",volume);
  4116  0474  30E4               	movlw	low (STR_14| (0+32768))
  4117  0475  00F3               	movwf	printf@f
  4118  0476  3082               	movlw	high (STR_14| (0+32768))
  4119  0477  00F4               	movwf	printf@f+1
  4120  0478  0020               	movlb	0	; select bank0
  4121  0479  0824               	movf	SetVOX@volume+1,w
  4122  047A  00F6               	movwf	?_printf+3
  4123  047B  0823               	movf	SetVOX@volume,w
  4124  047C  00F5               	movwf	?_printf+2
  4125  047D  3183  2369  3184   	fcall	_printf
  4126                           
  4127                           ;SR_FRS.c: 119: printf("\r\n");
  4128  0480  3002               	movlw	low (STR_1| (0+32768))
  4129  0481  00F3               	movwf	printf@f
  4130  0482  3083               	movlw	high (STR_1| (0+32768))
  4131  0483  00F4               	movwf	printf@f+1
  4132  0484  3183  2369         	fcall	_printf
  4133  0486  0008               	return
  4134  0487                     __end_of_SetVOX:	
  4135                           
  4136                           	psect	text22
  4137  0513                     __ptext22:	
  4138 ;; *************** function _SetPowerSave *****************
  4139 ;; Defined at:
  4140 ;;		line 88 in file "SR_FRS.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    5
  4161 ;; This function calls:
  4162 ;;		_printf
  4163 ;; This function is called by:
  4164 ;;		_SR_FRSStart
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _SetPowerSave
  4170  0513                     _SetPowerSave:	
  4171                           
  4172                           ;SR_FRS.c: 90: printf("\r\n");
  4173                           
  4174                           ;incstack = 0
  4175                           ; Regs used in _SetPowerSave: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4176  0513  3002               	movlw	low (STR_1| (0+32768))
  4177  0514  00F3               	movwf	printf@f
  4178  0515  3083               	movlw	high (STR_1| (0+32768))
  4179  0516  00F4               	movwf	printf@f+1
  4180  0517  3183  2369  3185   	fcall	_printf
  4181                           
  4182                           ;SR_FRS.c: 91: printf("AT+DMOAUTOPOWCONTR=%c",1);
  4183  051A  30A6               	movlw	low (STR_8| (0+32768))
  4184  051B  00F3               	movwf	printf@f
  4185  051C  3082               	movlw	high (STR_8| (0+32768))
  4186  051D  00F4               	movwf	printf@f+1
  4187  051E  3001               	movlw	1
  4188  051F  00F5               	movwf	?_printf+2
  4189  0520  3000               	movlw	0
  4190  0521  00F6               	movwf	?_printf+3
  4191  0522  3183  2369  3185   	fcall	_printf
  4192                           
  4193                           ;SR_FRS.c: 92: printf("\r\n");
  4194  0525  3002               	movlw	low (STR_1| (0+32768))
  4195  0526  00F3               	movwf	printf@f
  4196  0527  3083               	movlw	high (STR_1| (0+32768))
  4197  0528  00F4               	movwf	printf@f+1
  4198  0529  3183  2369         	fcall	_printf
  4199  052B  0008               	return
  4200  052C                     __end_of_SetPowerSave:	
  4201                           
  4202                           	psect	text23
  4203  04AE                     __ptext23:	
  4204 ;; *************** function _SetMIC *****************
  4205 ;; Defined at:
  4206 ;;		line 129 in file "SR_FRS.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  volume          1    wreg     unsigned char 
  4209 ;;  scram           1    3[BANK0 ] unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  volume          1    8[BANK0 ] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        6 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    5
  4228 ;; This function calls:
  4229 ;;		_printf
  4230 ;; This function is called by:
  4231 ;;		_SR_FRSStart
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _SetMIC
  4237  04AE                     _SetMIC:	
  4238                           
  4239                           ;incstack = 0
  4240                           ; Regs used in _SetMIC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4241                           ;SetMIC@volume stored from wreg
  4242  04AE  0020               	movlb	0	; select bank0
  4243  04AF  00A8               	movwf	SetMIC@volume
  4244                           
  4245                           ;SR_FRS.c: 130: printf("\r\n");
  4246  04B0  3002               	movlw	low (STR_1| (0+32768))
  4247  04B1  00F3               	movwf	printf@f
  4248  04B2  3083               	movlw	high (STR_1| (0+32768))
  4249  04B3  00F4               	movwf	printf@f+1
  4250  04B4  3183  2369  3184   	fcall	_printf
  4251                           
  4252                           ;SR_FRS.c: 131: printf("AT+DMOSETMIC=%c,%c,0",volume,scram);
  4253  04B7  30BC               	movlw	low (STR_17| (0+32768))
  4254  04B8  00F3               	movwf	printf@f
  4255  04B9  3082               	movlw	high (STR_17| (0+32768))
  4256  04BA  00F4               	movwf	printf@f+1
  4257  04BB  0020               	movlb	0	; select bank0
  4258  04BC  0828               	movf	SetMIC@volume,w
  4259  04BD  00A4               	movwf	??_SetMIC
  4260  04BE  01A5               	clrf	??_SetMIC+1
  4261  04BF  0824               	movf	??_SetMIC,w
  4262  04C0  00F5               	movwf	?_printf+2
  4263  04C1  0825               	movf	??_SetMIC+1,w
  4264  04C2  00F6               	movwf	?_printf+3
  4265  04C3  0823               	movf	SetMIC@scram,w
  4266  04C4  00A6               	movwf	??_SetMIC+2
  4267  04C5  01A7               	clrf	??_SetMIC+3
  4268  04C6  0826               	movf	??_SetMIC+2,w
  4269  04C7  00F7               	movwf	?_printf+4
  4270  04C8  0827               	movf	??_SetMIC+3,w
  4271  04C9  00F8               	movwf	?_printf+5
  4272  04CA  3183  2369  3184   	fcall	_printf
  4273                           
  4274                           ;SR_FRS.c: 132: printf("\r\n");
  4275  04CD  3002               	movlw	low (STR_1| (0+32768))
  4276  04CE  00F3               	movwf	printf@f
  4277  04CF  3083               	movlw	high (STR_1| (0+32768))
  4278  04D0  00F4               	movwf	printf@f+1
  4279  04D1  3183  2369         	fcall	_printf
  4280  04D3  0008               	return
  4281  04D4                     __end_of_SetMIC:	
  4282                           
  4283                           	psect	text24
  4284  0543                     __ptext24:	
  4285 ;; *************** function _SetFrequency *****************
  4286 ;; Defined at:
  4287 ;;		line 76 in file "SR_FRS.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;Total ram usage:        0 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    5
  4308 ;; This function calls:
  4309 ;;		_printf
  4310 ;; This function is called by:
  4311 ;;		_SR_FRSStart
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function _SetFrequency
  4317  0543                     _SetFrequency:	
  4318                           
  4319                           ;SR_FRS.c: 77: printf("\r\n");
  4320                           
  4321                           ;incstack = 0
  4322                           ; Regs used in _SetFrequency: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4323  0543  3002               	movlw	low (STR_1| (0+32768))
  4324  0544  00F3               	movwf	printf@f
  4325  0545  3083               	movlw	high (STR_1| (0+32768))
  4326  0546  00F4               	movwf	printf@f+1
  4327  0547  3183  2369  3185   	fcall	_printf
  4328                           
  4329                           ;SR_FRS.c: 78: printf("AT+DMOSETGROUP=0,145.5500,145.5500,0,1,0,0");
  4330  054A  307B               	movlw	low (STR_5| (0+32768))
  4331  054B  00F3               	movwf	printf@f
  4332  054C  3082               	movlw	high (STR_5| (0+32768))
  4333  054D  00F4               	movwf	printf@f+1
  4334  054E  3183  2369  3185   	fcall	_printf
  4335                           
  4336                           ;SR_FRS.c: 79: printf("\r\n");
  4337  0551  3002               	movlw	low (STR_1| (0+32768))
  4338  0552  00F3               	movwf	printf@f
  4339  0553  3083               	movlw	high (STR_1| (0+32768))
  4340  0554  00F4               	movwf	printf@f+1
  4341  0555  3183  2369         	fcall	_printf
  4342  0557  0008               	return
  4343  0558                     __end_of_SetFrequency:	
  4344                           
  4345                           	psect	text25
  4346  0558                     __ptext25:	
  4347 ;; *************** function _SetCommandMode *****************
  4348 ;; Defined at:
  4349 ;;		line 64 in file "SR_FRS.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;		None
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;Total ram usage:        0 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    5
  4370 ;; This function calls:
  4371 ;;		_printf
  4372 ;; This function is called by:
  4373 ;;		_SR_FRSStart
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           
  4378                           ;psect for function _SetCommandMode
  4379  0558                     _SetCommandMode:	
  4380                           
  4381                           ;SR_FRS.c: 65: printf("\r\n");
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in _SetCommandMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4385  0558  3002               	movlw	low (STR_1| (0+32768))
  4386  0559  00F3               	movwf	printf@f
  4387  055A  3083               	movlw	high (STR_1| (0+32768))
  4388  055B  00F4               	movwf	printf@f+1
  4389  055C  3183  2369  3185   	fcall	_printf
  4390                           
  4391                           ;SR_FRS.c: 66: printf("AT+DMOCONNECT");
  4392  055F  30F4               	movlw	low (STR_2| (0+32768))
  4393  0560  00F3               	movwf	printf@f
  4394  0561  3082               	movlw	high (STR_2| (0+32768))
  4395  0562  00F4               	movwf	printf@f+1
  4396  0563  3183  2369  3185   	fcall	_printf
  4397                           
  4398                           ;SR_FRS.c: 67: printf("\r\n");
  4399  0566  3002               	movlw	low (STR_1| (0+32768))
  4400  0567  00F3               	movwf	printf@f
  4401  0568  3083               	movlw	high (STR_1| (0+32768))
  4402  0569  00F4               	movwf	printf@f+1
  4403  056A  3183  2369         	fcall	_printf
  4404  056C  0008               	return
  4405  056D                     __end_of_SetCommandMode:	
  4406                           
  4407                           	psect	text26
  4408  0369                     __ptext26:	
  4409 ;; *************** function _printf *****************
  4410 ;; Defined at:
  4411 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  f               2    3[COMMON] PTR const unsigned char 
  4414 ;;		 -> STR_18(3), STR_17(21), STR_16(3), STR_15(3), 
  4415 ;;		 -> STR_14(16), STR_13(3), STR_12(3), STR_11(19), 
  4416 ;;		 -> STR_10(3), STR_9(3), STR_8(22), STR_7(3), 
  4417 ;;		 -> STR_6(3), STR_5(43), STR_4(3), STR_3(3), 
  4418 ;;		 -> STR_2(14), STR_1(3), 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  tmpval          4    0        struct .
  4421 ;;  cp              2    0        PTR const unsigned char 
  4422 ;;  len             2    0        unsigned int 
  4423 ;;  val             2    0        unsigned int 
  4424 ;;  c               1    2[BANK0 ] char 
  4425 ;;  ap              1    1[BANK0 ] PTR void [1]
  4426 ;;		 -> ?_printf(2), 
  4427 ;;  flag            1    0[BANK0 ] unsigned char 
  4428 ;;  prec            1    0        char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2    3[COMMON] int 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4438 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;      Totals:         9       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;Total ram usage:       12 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    4
  4445 ;; This function calls:
  4446 ;;		_putch
  4447 ;; This function is called by:
  4448 ;;		_SetCommandMode
  4449 ;;		_SetFrequency
  4450 ;;		_SetPowerSave
  4451 ;;		_SetVolume
  4452 ;;		_SetVOX
  4453 ;;		_SetMIC
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _printf
  4459  0369                     _printf:	
  4460                           
  4461                           ;doprnt.c: 466: va_list ap;
  4462                           ;doprnt.c: 499: signed char c;
  4463                           ;doprnt.c: 506: signed char prec;
  4464                           ;doprnt.c: 508: unsigned char flag;
  4465                           ;doprnt.c: 523: union {
  4466                           ;doprnt.c: 524: unsigned long vd;
  4467                           ;doprnt.c: 525: double integ;
  4468                           ;doprnt.c: 526: } tmpval;
  4469                           ;doprnt.c: 528: unsigned int val;
  4470                           ;doprnt.c: 529: unsigned len;
  4471                           ;doprnt.c: 530: const char * cp;
  4472                           ;doprnt.c: 533: *ap = __va_start();
  4473                           
  4474                           ;incstack = 0
  4475                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4476  0369  3075               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4477  036A  00F9               	movwf	??_printf
  4478  036B  0879               	movf	??_printf,w
  4479  036C  0020               	movlb	0	; select bank0
  4480  036D  00A1               	movwf	printf@ap
  4481  036E                     l1646:	
  4482                           ;doprnt.c: 1422: {
  4483                           
  4484                           ;doprnt.c: 536: while(c = *f++) {
  4485                           
  4486  036E  0874               	movf	printf@f+1,w
  4487  036F  00FA               	movwf	??_printf+1
  4488  0370  0873               	movf	printf@f,w
  4489  0371  00F9               	movwf	??_printf
  4490  0372  0AF3               	incf	printf@f,f
  4491  0373  1903               	skipnz
  4492  0374  0AF4               	incf	printf@f+1,f
  4493  0375  0879               	movf	??_printf,w
  4494  0376  0084               	movwf	4
  4495  0377  087A               	movf	??_printf+1,w
  4496  0378  0085               	movwf	5
  4497  0379  0800               	movf	0,w	;code access
  4498  037A  00FB               	movwf	??_printf+2
  4499  037B  087B               	movf	??_printf+2,w
  4500  037C  0020               	movlb	0	; select bank0
  4501  037D  00A2               	movwf	printf@c
  4502  037E  0822               	movf	printf@c,w
  4503  037F  1903               	btfsc	3,2
  4504  0380  0008               	return
  4505                           
  4506                           ;doprnt.c: 538: if(c != '%')
  4507  0381  3025               	movlw	37
  4508  0382  0622               	xorwf	printf@c,w
  4509  0383  1903               	btfsc	3,2
  4510  0384  2B8A               	goto	l1634
  4511                           
  4512                           ;doprnt.c: 540: {
  4513                           ;doprnt.c: 541: (putch(c) );
  4514  0385  0822               	movf	printf@c,w
  4515  0386  3186  2600  3183   	fcall	_putch
  4516                           
  4517                           ;doprnt.c: 542: continue;
  4518  0389  2B6E               	goto	l1646
  4519  038A                     l1634:	
  4520                           
  4521                           ;doprnt.c: 543: }
  4522                           ;doprnt.c: 548: flag = 0;
  4523  038A  0020               	movlb	0	; select bank0
  4524  038B  01A0               	clrf	printf@flag
  4525                           
  4526                           ;doprnt.c: 635: switch(c = *f++) {
  4527  038C  2B9D               	goto	l1644
  4528  038D                     l1636:	
  4529                           ;doprnt.c: 784: case 'c':
  4530                           
  4531                           ;doprnt.c: 638: goto alldone;
  4532                           
  4533                           ;doprnt.c: 637: case 0:
  4534                           
  4535                           
  4536                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4537  038D  0821               	movf	printf@ap,w
  4538  038E  0086               	movwf	6
  4539  038F  0187               	clrf	7
  4540  0390  0801               	movf	1,w
  4541  0391  00F9               	movwf	??_printf
  4542  0392  0879               	movf	??_printf,w
  4543  0393  00A2               	movwf	printf@c
  4544  0394  3002               	movlw	2
  4545  0395  00F9               	movwf	??_printf
  4546  0396  0879               	movf	??_printf,w
  4547  0397  07A1               	addwf	printf@ap,f
  4548  0398                     l1640:	
  4549                           ;doprnt.c: 802: default:
  4550                           
  4551                           
  4552                           ;doprnt.c: 809: (putch(c) );
  4553  0398  0822               	movf	printf@c,w
  4554  0399  3186  2600  3183   	fcall	_putch
  4555                           
  4556                           ;doprnt.c: 822: }
  4557                           
  4558                           ;doprnt.c: 810: continue;
  4559  039C  2B6E               	goto	l1646
  4560  039D                     l1644:	
  4561  039D  0874               	movf	printf@f+1,w
  4562  039E  00FA               	movwf	??_printf+1
  4563  039F  0873               	movf	printf@f,w
  4564  03A0  00F9               	movwf	??_printf
  4565  03A1  0AF3               	incf	printf@f,f
  4566  03A2  1903               	skipnz
  4567  03A3  0AF4               	incf	printf@f+1,f
  4568  03A4  0879               	movf	??_printf,w
  4569  03A5  0084               	movwf	4
  4570  03A6  087A               	movf	??_printf+1,w
  4571  03A7  0085               	movwf	5
  4572  03A8  0800               	movf	0,w	;code access
  4573  03A9  0020               	movlb	0	; select bank0
  4574  03AA  00A2               	movwf	printf@c
  4575                           
  4576                           ; Switch size 1, requested type "space"
  4577                           ; Number of cases is 2, Range of values is 0 to 99
  4578                           ; switch strategies available:
  4579                           ; Name         Instructions Cycles
  4580                           ; simple_byte            7     4 (average)
  4581                           ; direct_byte          206     6 (fixed)
  4582                           ; jumptable            260     6 (fixed)
  4583                           ;	Chosen strategy is simple_byte
  4584  03AB  3A00               	xorlw	0	; case 0
  4585  03AC  1903               	skipnz
  4586  03AD  2BB3               	goto	l302
  4587  03AE  3A63               	xorlw	99	; case 99
  4588  03AF  1903               	skipnz
  4589  03B0  2B8D               	goto	l1636
  4590  03B1  2B98               	goto	l1640
  4591  03B2  2B6E               	goto	l1646
  4592  03B3                     l302:	
  4593                           ;doprnt.c: 1540: return 0;
  4594                           ;	Return value of _printf is never used
  4595                           
  4596                           ;doprnt.c: 1469: }
  4597                           ;doprnt.c: 1533: }
  4598                           ;doprnt.c: 1535: alldone:
  4599                           
  4600  03B3  0008               	return
  4601  03B4                     __end_of_printf:	
  4602                           
  4603                           	psect	text27
  4604  0600                     __ptext27:	
  4605 ;; *************** function _putch *****************
  4606 ;; Defined at:
  4607 ;;		line 65 in file "UART.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  txData          1    wreg     unsigned char 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  txData          1    2[COMMON] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0, pclath, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;Total ram usage:        1 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    3
  4628 ;; This function calls:
  4629 ;;		_EUSART_Write
  4630 ;; This function is called by:
  4631 ;;		_printf
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           
  4636                           ;psect for function _putch
  4637  0600                     _putch:	
  4638                           
  4639                           ;incstack = 0
  4640                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4641                           ;putch@txData stored from wreg
  4642  0600  00F2               	movwf	putch@txData
  4643                           
  4644                           ;UART.c: 67: EUSART_Write(txData);
  4645  0601  0872               	movf	putch@txData,w
  4646  0602  3185  25EB         	fcall	_EUSART_Write
  4647  0604  0008               	return
  4648  0605                     __end_of_putch:	
  4649                           
  4650                           	psect	text28
  4651  05EB                     __ptext28:	
  4652 ;; *************** function _EUSART_Write *****************
  4653 ;; Defined at:
  4654 ;;		line 51 in file "UART.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  txData          1    wreg     unsigned char 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  txData          1    1[COMMON] unsigned char 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;Total ram usage:        1 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; Hardware stack levels required when called:    2
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_putch
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           
  4683                           ;psect for function _EUSART_Write
  4684  05EB                     _EUSART_Write:	
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _EUSART_Write: [wreg]
  4688                           ;EUSART_Write@txData stored from wreg
  4689  05EB  00F1               	movwf	EUSART_Write@txData
  4690  05EC                     l152:	
  4691                           ;UART.c: 54: {
  4692                           
  4693                           ;UART.c: 53: while(0 == PIR1bits.TXIF)
  4694                           
  4695  05EC  0020               	movlb	0	; select bank0
  4696  05ED  1E11               	btfss	17,4	;volatile
  4697  05EE  2DEC               	goto	l152
  4698                           
  4699                           ;UART.c: 55: }
  4700                           ;UART.c: 57: TXREG = txData;
  4701  05EF  0871               	movf	EUSART_Write@txData,w
  4702  05F0  0023               	movlb	3	; select bank3
  4703  05F1  009A               	movwf	26	;volatile
  4704  05F2  0008               	return
  4705  05F3                     __end_of_EUSART_Write:	
  4706                           
  4707                           	psect	text29
  4708  0593                     __ptext29:	
  4709 ;; *************** function _SR_FRSPowerDown *****************
  4710 ;; Defined at:
  4711 ;;		line 32 in file "SR_FRS.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;Total ram usage:        1 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    2
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_SR_FRSStart
  4736 ;;		_RadioOperation
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           
  4741                           ;psect for function _SR_FRSPowerDown
  4742  0593                     _SR_FRSPowerDown:	
  4743                           
  4744                           ;SR_FRS.c: 33: PORTCbits.RC6 ^= 1;
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _SR_FRSPowerDown: [wreg+status,2+status,0]
  4748  0593  0020               	movlb	0	; select bank0
  4749  0594  0E0E               	swapf	14,w	;volatile
  4750  0595  00F1               	movwf	??_SR_FRSPowerDown
  4751  0596  0CF1               	rrf	??_SR_FRSPowerDown,f
  4752  0597  0C71               	rrf	??_SR_FRSPowerDown,w
  4753  0598  3901               	andlw	1
  4754  0599  00F1               	movwf	??_SR_FRSPowerDown
  4755  059A  3001               	movlw	1
  4756  059B  06F1               	xorwf	??_SR_FRSPowerDown,f
  4757  059C  0EF1               	swapf	??_SR_FRSPowerDown,f
  4758  059D  0DF1               	rlf	??_SR_FRSPowerDown,f
  4759  059E  0DF1               	rlf	??_SR_FRSPowerDown,f
  4760  059F  080E               	movf	14,w	;volatile
  4761  05A0  0671               	xorwf	??_SR_FRSPowerDown,w
  4762  05A1  39BF               	andlw	-65
  4763  05A2  0671               	xorwf	??_SR_FRSPowerDown,w
  4764  05A3  008E               	movwf	14	;volatile
  4765  05A4  0008               	return
  4766  05A5                     __end_of_SR_FRSPowerDown:	
  4767                           
  4768                           	psect	text30
  4769  052C                     __ptext30:	
  4770 ;; *************** function _Delay *****************
  4771 ;; Defined at:
  4772 ;;		line 93 in file "Function.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  wait            2    1[COMMON] int 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  x               2    4[COMMON] int 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;Total ram usage:        5 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    2
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_main
  4797 ;;		_SR_FRSStart
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function _Delay
  4803  052C                     _Delay:	
  4804                           
  4805                           ;Function.c: 94: int x;
  4806                           ;Function.c: 95: for (x = 0; x < wait; x++) {
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _Delay: [wreg+status,2]
  4810  052C  01F4               	clrf	Delay@x
  4811  052D  01F5               	clrf	Delay@x+1
  4812  052E                     l62:	
  4813  052E  0875               	movf	Delay@x+1,w
  4814  052F  3A80               	xorlw	128
  4815  0530  00F3               	movwf	??_Delay
  4816  0531  0872               	movf	Delay@wait+1,w
  4817  0532  3A80               	xorlw	128
  4818  0533  0273               	subwf	??_Delay,w
  4819  0534  1D03               	skipz
  4820  0535  2D38               	goto	u785
  4821  0536  0871               	movf	Delay@wait,w
  4822  0537  0274               	subwf	Delay@x,w
  4823  0538                     u785:	
  4824  0538  1803               	btfsc	3,0
  4825  0539  0008               	return
  4826                           
  4827                           ;Function.c: 96: _delay((unsigned long)((1)*(4000000/4000.0)));
  4828  053A  30C8               	movlw	200
  4829  053B                     u2037:	
  4830  053B  3200               	nop2
  4831  053C  0B89               	decfsz	9,f
  4832  053D  2D3B               	goto	u2037
  4833  053E  3001               	movlw	1
  4834  053F  07F4               	addwf	Delay@x,f
  4835  0540  3000               	movlw	0
  4836  0541  3DF5               	addwfc	Delay@x+1,f
  4837  0542  2D2E               	goto	l62
  4838  0543                     __end_of_Delay:	
  4839                           
  4840                           	psect	text31
  4841  0605                     __ptext31:	
  4842 ;; *************** function _LEDOff *****************
  4843 ;; Defined at:
  4844 ;;		line 153 in file "Function.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		None
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    2
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _LEDOff
  4874  0605                     _LEDOff:	
  4875                           
  4876                           ;Function.c: 154: PORTCbits.RC3 = 0;
  4877                           
  4878                           ;incstack = 0
  4879                           ; Regs used in _LEDOff: []
  4880  0605  0020               	movlb	0	; select bank0
  4881  0606  118E               	bcf	14,3	;volatile
  4882                           
  4883                           ;Function.c: 155: PORTCbits.RC5 = 0;
  4884  0607  128E               	bcf	14,5	;volatile
  4885                           
  4886                           ;Function.c: 156: PORTCbits.RC4 = 0;
  4887  0608  120E               	bcf	14,4	;volatile
  4888  0609  0008               	return
  4889  060A                     __end_of_LEDOff:	
  4890                           
  4891                           	psect	intentry
  4892  0004                     __pintentry:	
  4893 ;; *************** function _INTERRUPT_InterruptManager *****************
  4894 ;; Defined at:
  4895 ;;		line 123 in file "Function.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0, pclath, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;Total ram usage:        1 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    1
  4916 ;; This function calls:
  4917 ;;		_TMR2_ISR
  4918 ;; This function is called by:
  4919 ;;		Interrupt level 1
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923  0004                     _INTERRUPT_InterruptManager:	
  4924                           
  4925                           ;incstack = 0
  4926  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4927                           
  4928                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  4929  0005  3180               	pagesel	$
  4930  0006  0020               	movlb	0	; select bank0
  4931  0007  087F               	movf	127,w
  4932  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
  4933                           
  4934                           ;Function.c: 125: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  4935  0009  0021               	movlb	1	; select bank1
  4936  000A  1C91               	btfss	17,1	;volatile
  4937  000B  2811               	goto	i1l73
  4938  000C  0020               	movlb	0	; select bank0
  4939  000D  1C91               	btfss	17,1	;volatile
  4940  000E  2811               	goto	i1l73
  4941                           
  4942                           ;Function.c: 126: {
  4943                           ;Function.c: 127: TMR2_ISR();
  4944  000F  3185  25F3         	fcall	_TMR2_ISR
  4945  0011                     i1l73:	
  4946                           ;Function.c: 129: else
  4947                           ;Function.c: 130: {
  4948                           
  4949                           ;Function.c: 128: }
  4950                           
  4951  0011  0870               	movf	??_INTERRUPT_InterruptManager,w
  4952  0012  0020               	movlb	0	; select bank0
  4953  0013  00FF               	movwf	127
  4954  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4955  0015  0009               	retfie
  4956  0016                     __end_of_INTERRUPT_InterruptManager:	
  4957                           
  4958                           	psect	text33
  4959  05F3                     __ptext33:	
  4960 ;; *************** function _TMR2_ISR *****************
  4961 ;; Defined at:
  4962 ;;		line 54 in file "Timer.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_INTERRUPT_InterruptManager
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _TMR2_ISR
  4991  05F3                     _TMR2_ISR:	
  4992                           
  4993                           ;Timer.c: 57: ticker++;
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _TMR2_ISR: [wreg]
  4997  05F3  3001               	movlw	1
  4998  05F4  0020               	movlb	0	; select bank0
  4999  05F5  07C6               	addwf	_ticker,f
  5000  05F6  3000               	movlw	0
  5001  05F7  3DC7               	addwfc	_ticker+1,f
  5002                           
  5003                           ;Timer.c: 59: PIR1bits.TMR2IF = 0;
  5004  05F8  1091               	bcf	17,1	;volatile
  5005  05F9  0008               	return
  5006  05FA                     __end_of_TMR2_ISR:	
  5007  007E                     btemp	set	126	;btemp
  5008  007E                     int$flags	set	126
  5009  007E                     wtemp0	set	126


Data Sizes:
    Strings     138
    Constant    0
    Data        1
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     33      45
    BANK1            80      0      46
    BANK2            80      0      46
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_18(CODE[3]), STR_17(CODE[21]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[16]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[19]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[22]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[43]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[14]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _RadioOperation->___awtoft
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _ReadVoltage->_SetADCChannel
    _SetVolume->_printf
    _SetVOX->_printf
    _SetPowerSave->_printf
    _SetMIC->_printf
    _SetFrequency->_printf
    _SetCommandMode->_printf
    _printf->_putch
    _putch->_EUSART_Write

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_RadioOperation
    _RadioOperation->___ftdiv
    ___ftdiv->___ftmul
    _SR_FRSStart->_SetMIC
    _SetVolume->_printf
    _SetVOX->_printf
    _SetPowerSave->_printf
    _SetMIC->_printf
    _SetFrequency->_printf
    _SetCommandMode->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17678
                              _Delay
                             _LEDOff
                         _RadioBegin
                     _RadioOperation
                              _Start
 ---------------------------------------------------------------------------------
 (1) _Start                                                0     0      0       0
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioOperation                                       1     1      0    7850
                                             32 BANK0      1     1      0
                        _ClearTicker
                          _GetTicker
                        _ReadCharger
                        _ReadVoltage
                    _SR_FRSPowerDown
                         _SR_FRSTalk
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2756
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     242
                                              1 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2558
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2206
                                              9 COMMON     3     0      3
                                              0 BANK0      3     3      0
                        _ReadVoltage (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                              1 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _SR_FRSTalk                                           1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          4     1      3      88
                                              2 COMMON     4     1      3
                      _SetADCChannel
 ---------------------------------------------------------------------------------
 (3) _SetADCChannel                                        1     1      0      66
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadCharger                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetTicker                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearTicker                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RadioBegin                                           0     0      0    9411
                        _SR_FRSStart
 ---------------------------------------------------------------------------------
 (2) _SR_FRSStart                                          0     0      0    9411
                              _Delay
                    _SR_FRSPowerDown
                     _SetCommandMode
                       _SetFrequency
                             _SetMIC
                       _SetPowerSave
                             _SetVOX
                          _SetVolume
 ---------------------------------------------------------------------------------
 (3) _SetVolume                                            3     3      0    1529
                                              3 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetVOX                                               3     1      2    1594
                                              3 BANK0      3     1      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetPowerSave                                         0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetMIC                                               6     5      1    1563
                                              3 BANK0      6     5      1
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetFrequency                                         0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SetCommandMode                                       0     0      0    1436
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              23    17      6    1436
                                              3 COMMON     9     3      6
                                              0 BANK0      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SR_FRSPowerDown                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay                                                5     3      2     417
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LEDOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay
   _LEDOff
   _RadioBegin
     _SR_FRSStart
       _Delay
       _SR_FRSPowerDown
       _SetCommandMode
         _printf
           _putch
             _EUSART_Write
       _SetFrequency
         _printf
           _putch
             _EUSART_Write
       _SetMIC
         _printf
           _putch
             _EUSART_Write
       _SetPowerSave
         _printf
           _putch
             _EUSART_Write
       _SetVOX
         _printf
           _putch
             _EUSART_Write
       _SetVolume
         _printf
           _putch
             _EUSART_Write
   _RadioOperation
     _ClearTicker
     _GetTicker
     _ReadCharger
     _ReadVoltage
       _SetADCChannel
     _SR_FRSPowerDown
     _SR_FRSTalk
     ___awtoft
       _ReadVoltage (ARG)
         _SetADCChannel
       ___ftpack (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___ftpack
   _Start
     _ADC_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      2D       5       56.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      2E       7       57.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2E       9       57.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      96      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      96      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Mar 24 01:35:30 2017

                         __CFG_CP$ON 0000                                   l62 052E  
                                 l76 0587                                   l78 058C  
                        __CFG_CPD$ON 0000                          __CFG_LVP$ON 0000  
                                l302 03B3                                  l152 05EC  
                                l244 0041                                  l272 05BB  
                                l554 034A                                  l555 0352  
                                l547 0337                           _SR_FRSTalk 05A5  
                                _PR2 001B                                  u785 0538  
                      _SetADCChannel 04F5                      _TMR2_Initialize 05CD  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       ___ftdiv@cntr 003A                         ___ftdiv@sign 003F  
                               l1304 04FF                                 l1308 0509  
                               l1460 0411                                 l1366 0591  
                               l1640 0398                                 l1464 0427  
                               l1800 018E                                 l1634 038A  
                               l1636 038D                                 l1644 039D  
                               l1812 01AA                                 l1646 036E  
                               l1726 04DF                                 l1742 01FF  
                               l1680 0323                                 l1672 030D  
                               l1736 01E9                                 l1808 01A2  
                               l1840 005A                                 l1904 0576  
                               l1676 0314                                 l1764 0259  
                               l1756 0240                                 l1860 0080  
                               l1686 033C                                 l1678 031E  
                               l1854 0077                                 l1688 0344  
                               l1784 014B                                 l1880 00E7  
                               l1778 0135                                 l1866 0086  
                               l1796 0186                                 l1892 010F  
                               l1886 00F7                                 l1896 0118  
                               STR_1 0302                                 STR_2 02F4  
                               STR_3 0302                                 STR_4 0302  
                               STR_5 027B                                 STR_6 0302  
                               STR_7 0302                                 STR_8 02A6  
                               STR_9 0302                                 u2037 053B  
                               u1605 033F                                 u1705 0221  
                               u1715 0241                                 u1645 0359  
                               u1565 0319                                 u1725 0250  
                               u1805 018F                                 u1735 025A  
                               u1815 0195                                 u1585 0332  
                               u1845 01AB                                 u1695 0211  
                               u1855 01B1                                 u1775 0157  
                               u1935 006C                                 u1785 0167  
                               u1895 004A                                 u1985 0093  
                               u1995 00F1                                 i1l73 0011  
                               _TMR2 001A                          _SR_FRSStart 03B4  
                       __CFG_WRT$ALL 0000                                 _Mode 004A  
                               _main 056D                         ___ftpack@arg 0071  
                       ___ftpack@exp 0074                                 _time 0048  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                      ??_ReadCharger 0071                                 start 0016  
                      __CFG_IESO$OFF 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 002E                         ___ftmul@sign 002F  
                      ?_EUSART_Write 0070                        ??_ReadVoltage 0075  
                              ?_main 0070                                STR_10 0302  
                              STR_11 02D1                                STR_12 0302  
                              STR_13 0302                                STR_14 02E4  
                              STR_15 0302                                STR_16 0302  
                              STR_17 02BC                        __CFG_WDTE$OFF 0000  
                              STR_18 0302                      __end_of___ftdiv 027B  
                    __end_of___ftmul 01D2                                _T2CON 001C  
                   ??_SetCommandMode 007C                       ?_SetADCChannel 0070  
                              _RCREG 0199                                _RCSTA 019D  
                              _TXREG 019A                                _TXSTA 019E  
                              _Delay 052C                        __CFG_PWRTE$ON 0000  
                     __CFG_FCMEN$OFF 0000              __size_of_RadioOperation 00E7  
                   __end_of_TMR2_ISR 05FA                                _Start 0436  
                      ___awtoft@sign 0022                                _count 0044  
                      ___ftpack@sign 0075                                _putch 0600  
                        _ClearTicker 060A                                status 0003  
                              wtemp0 007E                      __initialization 0018  
         __end_of_EUSART1_Initialize 05CD                         __end_of_main 0581  
                         _RadioBegin 060E                  __end_of_ReadCharger 0593  
                     ??_EUSART_Write 0071                          SetMIC@scram 0023  
            __end_of_TMR2_Initialize 05D7          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 007C                          ?_SR_FRSTalk 0070  
                 __size_of_GetTicker 0001                       __CFG_PLLEN$OFF 0000  
                             ?_Delay 0071                               ?_Start 0070  
                __end_of_ReadVoltage 05C2                               _ADRESL 009B  
                   __end_of___awtoft 04F5                               ?_putch 0070  
                   __end_of___ftpack 0369                               _LEDOff 0605  
                             Delay@x 0074                               _INTCON 000B  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _SetMIC 04AE                               _SetVOX 045F  
                             ___ftge 03FB                        _output_buffer 0120  
                     __CFG_STVREN$ON 0000                            ??___ftdiv 0036  
                          ??___ftmul 0026                   __size_of_SetVolume 0027  
                             _ticker 0046                      ??_SetADCChannel 0071  
                             _printf 0369                ___ftmul@f3_as_product 002B  
                       __pdataCOMMON 007C                        ?_SetFrequency 0070  
      __size_of_INTERRUPT_Initialize 000A              __end_of__initialization 0033  
                         ___ftge@ff1 0071                           ___ftge@ff2 0074  
                         ___ftdiv@f1 0033                           ___ftdiv@f2 0030  
                         ___ftdiv@f3 003B                  __size_of_SR_FRSTalk 000F  
                  __end_of_GetTicker 0613                          _ReadCharger 0581  
                         ___awtoft@c 0079                        __end_of_Delay 0543  
                         ___ftmul@f1 0020                           ___ftmul@f2 0023  
                     __pcstackCOMMON 0070                        __end_of_Start 045F  
                        ?_RadioBegin 0070                        ?_SetPowerSave 0070  
                          ?_TMR2_ISR 0070                        __end_of_putch 0605  
                   ?_TMR2_Initialize 0070                      SetVolume@volume 0025  
                        _ReadVoltage 05B4                       ??_SetFrequency 007C  
                       SetMIC@volume 0028                              ??_Delay 0073  
                     _RadioOperation 0037                      SetADCChannel@ch 0071  
                            ??_Start 0071                              ??_putch 0072  
                         __pbssBANK0 0041                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                         ?_SR_FRSStart 0070  
                            ?_LEDOff 0070                 __end_of_EUSART_Write 05F3  
                  __end_of_SetVolume 04AE                              ?_SetMIC 0023  
                            ?_SetVOX 0023                           __pmaintext 056D  
                     ??_SetPowerSave 007C                              ?___ftge 0071  
                         ??_TMR2_ISR 0070                           __pintentry 0004  
                            _BAUDCON 019F             __size_of_SR_FRSPowerDown 0012  
                          ?___awtoft 0079                            ?___ftpack 0071  
                            ?_printf 0073              __size_of_ADC_Initialize 000A  
             __end_of_RadioOperation 011E                  __size_of_RadioBegin 0003  
                    __size_of_LEDOff 0005                              _Battery 0041  
                       ?_ClearTicker 0070                              _Talking 004C  
                    __size_of_SetMIC 0026                      __size_of_SetVOX 0028  
                    __size_of___ftge 003B                              ___ftdiv 01D2  
                            ___ftmul 011E                           ??___awtoft 0020  
                         ??___ftpack 0076                              __ptext1 0436  
                            __ptext2 05CD                              __ptext3 05D7  
                            __ptext4 05C2                              __ptext5 05E1  
                            __ptext6 0037                              __ptext7 011E  
                            __ptext8 03FB                              __ptext9 01D2  
                    __size_of_printf 004B                         ??_SR_FRSTalk 0071  
                    ?_RadioOperation 0070                            _T2CONbits 001C  
                 _EUSART1_Initialize 05C2                         SetVOX@volume 0023  
                            clrloop0 05FB                 end_of_initialization 0033  
                          Delay@wait 0071                  ?_EUSART1_Initialize 0070  
               __end_of_SetFrequency 0558                     __CFG_CLKOUTEN$ON 0000  
                 __end_of_SR_FRSTalk 05B4                            _RCSTAbits 019D  
                            printf@c 0022                              printf@f 0073  
                       __pstringtext 027B                 ??_EUSART1_Initialize 0071  
                          _PORTAbits 000C                            _PORTCbits 000E  
                   __CFG_FOSC$INTOSC 0000                            _TRISAbits 008C  
                          _TRISCbits 008E                    ??_SR_FRSPowerDown 0071  
              __size_of_EUSART_Write 0008                 __end_of_SetPowerSave 052C  
            __size_of_SetCommandMode 0015                       __end_of_LEDOff 060A  
                        ___ftdiv@exp 003E                 __size_of_SR_FRSStart 0047  
                       ?_ReadCharger 0070                          ___ftmul@exp 002A  
                     __end_of_SetMIC 04D4                         ??_RadioBegin 007C  
                     __end_of_SetVOX 0487                            _GetTicker 0612  
       __end_of_INTERRUPT_Initialize 05E1                       __end_of___ftge 0436  
                      __pidataCOMMON 0611                         _EUSART_Write 05EB  
                  __size_of_TMR2_ISR 0007                       _ADC_Initialize 05E1  
                       ?_ReadVoltage 0072                __end_of_SetADCChannel 0513  
                     __end_of_printf 03B4                  start_initialization 0018  
                      ReadVoltage@ch 0075                          putch@txData 0072  
                 __end_of_RadioBegin 0611                             ??_LEDOff 0071  
               __size_of_ClearTicker 0004                            _SetVolume 0487  
                        _APFCON0bits 011D                             ??_SetMIC 0024  
                           ??_SetVOX 0025                             ??___ftge 0077  
                         ?_GetTicker 0070               __end_of_ADC_Initialize 05EB  
                           ??_printf 0079                    __size_of___awtoft 0021  
                  __size_of___ftpack 0064                            ___latbits 0002  
                      __pcstackBANK0 0020             __size_of_TMR2_Initialize 000A  
              __size_of_SetFrequency 0015                           ?_SetVolume 0070  
                           ?___ftdiv 0030                             ?___ftmul 0020  
                   ??_RadioOperation 0040                      ?_ADC_Initialize 0070  
       ??_INTERRUPT_InterruptManager 0070                __size_of_SetPowerSave 0019  
                       _SetFrequency 0543                       __size_of_Delay 0017  
                     __size_of_Start 0029                       __size_of_putch 0005  
               _INTERRUPT_Initialize 05D7                       _SetCommandMode 0558  
                          clear_ram0 05FA                             _PIE1bits 0091  
__size_of_INTERRUPT_InterruptManager 0012                             _PIR1bits 0011  
               __size_of_ReadCharger 0012                          ??_GetTicker 0071  
                           _TMR2_ISR 05F3                         _SetPowerSave 0513  
                    _SR_FRSPowerDown 0593                         _input_buffer 00A0  
                         _ADCON0bits 009D                           _ADCON1bits 009E  
                         printf@flag 0020                 __size_of_ReadVoltage 000E  
             __end_of_SetCommandMode 056D                ?_INTERRUPT_Initialize 0070  
                  ??_TMR2_Initialize 0071                          ??_SetVolume 0023  
                           _Shutdown 004B                     __size_of___ftdiv 00A9  
                   __size_of___ftmul 00B4          __size_of_EUSART1_Initialize 000B  
                           ___awtoft 04D4                             ___ftpack 0305  
                         _ANSELAbits 018C                           _ANSELCbits 018E  
                           __ptext10 04D4                             __ptext11 0305  
                           __ptext20 0487                             __ptext12 05A5  
                           __ptext21 045F                             __ptext13 05B4  
                           __ptext30 052C                             __ptext22 0513  
                           __ptext14 04F5                             __ptext31 0605  
                           __ptext23 04AE                             __ptext15 0581  
                           __ptext24 0543                             __ptext16 0612  
                           __ptext33 05F3                             __ptext25 0558  
                           __ptext17 060A                             __ptext26 0369  
                           __ptext18 060E                             __ptext27 0600  
                           __ptext19 03B4                             __ptext28 05EB  
                           __ptext29 0593                      ?_SetCommandMode 0070  
                      ??_SR_FRSStart 007C                        __size_of_main 0014  
                     _Transmit_stall 007C              __end_of_SR_FRSPowerDown 05A5  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0016  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
                         _FVRCONbits 0117               ??_INTERRUPT_Initialize 0071  
                           intlevel1 0000                        ??_ClearTicker 0071  
                   ??_ADC_Initialize 0071               __size_of_SetADCChannel 001E  
                __end_of_SR_FRSStart 03FB                           _OSCCONbits 0099  
                           printf@ap 0021                   EUSART_Write@txData 0071  
                   ?_SR_FRSPowerDown 0070                  __end_of_ClearTicker 060E  
